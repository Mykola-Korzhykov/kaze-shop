var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/injectables/ActivateMiddleware.html",[0,0.724,1,3.898]],["body/injectables/ActivateMiddleware.html",[0,1.102,1,5.936,2,1.827,3,0.054,4,0.047,5,0.054,6,5.56,7,0.171,8,1.083,9,2.378,10,4.569,11,2.254,12,4.957,13,6.601,14,0.514,15,5.56,16,1.102,17,0.006,18,0.54,19,0.993,20,6.453,21,3.157,22,2.958,23,4.341,24,3.794,25,3.316,26,4.187,27,5.56,28,0.16,29,3.136,30,0.832,31,2.475,32,0.366,33,1.931,34,3.981,35,2.138,36,0.79,37,3.058,38,2.172,39,2.313,40,7.238,41,4.56,42,2.804,43,1.899,44,2.731,45,2.433,46,2.731,47,2.77,48,2.731,49,2.264,50,0.054,51,0.137,52,1.701,53,4.957,54,2.066,55,3.981,56,4.56,57,2.217,58,2.009,59,3.667,60,0.52,61,5.56,62,4.109,63,5.56,64,1.762,65,1.508,66,2.534,67,2.596,68,3.661,69,3.382,70,3.157,71,4.027,72,1.794,73,4.957,74,4.957,75,4.957,76,4.263,77,0.005,78,0.005]],["title/guards/AddContentGuard.html",[79,2.79,80,3.442]],["body/guards/AddContentGuard.html",[0,1.087,3,0.053,4,0.046,5,0.053,7,0.167,8,1.069,9,1.609,11,1.696,14,0.507,16,1.087,17,0.006,18,0.533,19,0.98,28,0.206,29,2.004,30,0.815,32,0.358,33,1.892,35,2.11,36,0.774,42,2.748,43,2.091,45,2.039,47,3.05,48,2.676,49,2.219,50,0.053,51,0.134,52,1.667,58,2.111,64,2.526,65,2.162,72,1.758,77,0.005,78,0.005,80,5.173,81,3.093,82,7.969,83,4.857,84,5.155,85,4.178,86,4.546,87,4.857,88,3.198,89,4.802,90,4.857,91,4.055,92,2.264,93,2.264,94,4.383,95,2.825,96,5.477,97,5.173,98,5.858,99,3.314,100,3.598,101,2.908,102,2.543,103,1.174,104,1.557,105,3.198,106,3.587,107,2.543,108,3.753,109,3.704,110,3.704,111,1.928,112,1.466,113,4.468,114,4.857,115,3.753,116,3.587]],["title/classes/AddRoleDto.html",[51,0.117,117,3.898]],["body/classes/AddRoleDto.html",[3,0.064,4,0.055,5,0.064,7,0.201,14,0.57,17,0.006,28,0.177,32,0.319,50,0.064,51,0.198,60,0.75,77,0.005,78,0.005,103,2.036,117,6.582,118,1.41,119,8.678,120,6.545,121,0.899,122,3.014,123,2.673,124,1.081,125,1.786,126,3.413,127,2.787,128,2.221,129,3.135,130,4.509,131,6.545,132,2.141,133,2.499,134,6.545,135,6.545,136,3.691,137,2.361,138,4.556,139,3.2,140,2.408,141,3.413,142,3.133]],["title/controllers/AdminController.html",[143,2.115,144,3.898]],["body/controllers/AdminController.html",[3,0.038,4,0.032,5,0.038,7,0.118,8,0.841,9,2.153,14,0.517,16,1.109,17,0.006,18,0.544,19,0.999,25,2.734,28,0.201,30,1.09,32,0.376,36,0.547,43,2.245,50,0.038,51,0.095,60,0.62,77,0.004,78,0.004,86,3.344,93,2.88,102,1.799,103,0.83,104,1.424,124,1.224,125,1.622,132,1.028,137,1.39,143,1.715,144,4.607,145,1.676,146,3.852,147,2.262,148,5.911,149,5.911,150,5.438,151,5.911,152,3.852,153,6.048,154,6.497,155,4.308,156,5.617,157,6.202,158,5.617,159,7.287,160,5.515,161,5.515,162,3.852,163,3.852,164,6.497,165,3.435,166,5.858,167,7.019,168,5.278,169,5.617,170,3.852,171,3.852,172,4.308,173,3.16,174,3.852,175,3.852,176,3.852,177,3.852,178,5.617,179,5.008,180,3.852,181,3.852,182,3.852,183,2.343,184,2.343,185,2.434,186,2.654,187,2.537,188,2.434,189,2.79,190,5.336,191,2.187,192,2.343,193,3.435,194,5.336,195,5.336,196,2.79,197,2.343,198,2.537,199,2.537,200,2.654,201,3.16,202,3.16,203,3.435,204,5.084,205,3.435,206,2.654,207,3.16,208,2.187,209,2.343,210,2.262,211,2.343,212,1.756,213,2.654,214,2.262,215,2.654,216,2.654,217,2.654,218,4.713,219,2.537,220,2.537,221,2.434,222,2.119,223,1.715,224,5.008,225,3.852,226,2.187,227,2.343,228,2.343,229,3.189,230,2.343,231,2.262,232,2.434,233,2.343,234,2.79,235,3.852,236,3.435,237,2.954,238,3.852,239,4.008,240,3.779,241,4.278,242,5.019,243,4.278,244,5.911,245,4.798,246,5.019,247,5.976,248,2.537,249,3.852,250,5.008,251,3.852,252,2.654,253,3.435,254,3.852,255,3.852,256,4.607,257,3.852,258,3.435,259,5.008,260,5.008,261,3.852,262,3.852,263,3.852]],["title/guards/AdminGuard.html",[79,2.79,264,4.237]],["body/guards/AdminGuard.html",[0,1.001,3,0.047,4,0.041,5,0.047,7,0.148,8,0.984,9,1.423,11,2.048,14,0.467,16,1.001,17,0.007,18,0.491,19,0.902,22,1.612,28,0.145,29,1.772,30,0.721,32,0.369,33,1.673,35,1.944,36,0.684,42,2.43,47,3.329,48,2.366,49,1.962,50,0.047,51,0.119,52,1.474,54,1.878,58,2.222,60,0.7,64,2.671,65,2.286,66,2.195,67,2.249,72,2.123,77,0.004,78,0.004,81,2.735,84,4.947,88,2.828,89,4.57,91,3.735,92,2.085,93,2.085,94,4.121,95,2.498,100,3.424,101,2.571,103,1.038,104,1.464,105,2.828,106,3.172,109,4.174,110,4.174,112,1.35,123,1.423,128,1.183,133,1.5,214,2.828,264,5.865,265,4.818,266,4.818,267,5.086,268,6.827,269,4.818,270,5.396,271,4.818,272,5.045,273,6.173,274,3.694,275,2.931,276,2.798,277,2.498,278,2.931,279,5.045,280,3.694,281,4.531,282,3.172,283,5.045,284,3.694,285,3.694,286,3.694,287,3.735,288,3.694,289,5.426,290,3.694,291,3.951,292,3.951,293,2.926,294,4.818,295,3.489,296,3.951,297,4.295,298,3.951,299,4.295,300,3.951,301,3.694]],["title/interfaces/AdminInterface.html",[206,3.274,302,0.914]],["body/interfaces/AdminInterface.html",[3,0.059,4,0.051,5,0.059,7,0.185,17,0.006,18,0.676,28,0.212,50,0.081,59,2.74,60,0.938,77,0.005,78,0.005,92,3.041,121,0.853,122,3.049,124,1.266,206,5.243,276,2.557,302,1.605,303,2.049,304,4.931,305,4.552,306,4.552,307,4.552,308,2.686,309,1.922,310,3.153,311,2.63,312,4.355,313,2.807,314,4.141,315,4.611,316,2.349]],["title/injectables/AdminJwtRefreshService.html",[0,0.724,267,3.003]],["body/injectables/AdminJwtRefreshService.html",[0,0.566,2,0.744,3,0.022,4,0.019,5,0.022,7,0.07,8,0.556,9,2.736,11,1.157,14,0.577,16,1.191,17,0.006,18,0.583,19,1.073,22,1.243,28,0.173,30,1.17,31,2.689,32,0.323,33,0.786,35,1.098,36,0.322,37,1.245,38,0.884,43,1.8,45,0.646,47,3.056,50,0.022,51,0.056,54,2.357,55,1.245,57,2.409,58,2.226,60,0.912,62,1.285,64,2.479,65,2.205,66,1.693,67,1.735,72,2.926,77,0.002,78,0.002,86,3.46,93,2.741,100,1.58,103,1.179,104,1.613,107,1.057,121,0.416,123,1.396,124,1.128,142,4.268,200,1.559,267,2.348,276,3.894,308,2.431,309,0.814,310,2.888,313,3.564,314,5.5,317,8.256,318,1.856,319,2.837,320,3.048,321,4.214,322,3.877,323,4.878,324,3.877,325,3.877,326,3.877,327,3.048,328,3.877,329,3.877,330,3.877,331,1.856,332,5.326,333,3.877,334,2.92,335,4.173,336,4.726,337,3.313,338,3.716,339,2.263,340,2.018,341,2.263,342,2.263,343,2.263,344,2.263,345,1.856,346,3.877,347,2.263,348,1.856,349,4.487,350,2.018,351,2.263,352,3.466,353,3.189,354,2.018,355,3.716,356,2.263,357,2.263,358,2.263,359,4.726,360,2.263,361,2.018,362,2.263,363,2.018,364,1.057,365,3.716,366,1.43,367,3.625,368,3.625,369,3.423,370,2.849,371,3.625,372,2.849,373,2.849,374,1.856,375,1.736,376,2.018,377,2.263,378,1.285,379,2.018,380,1.639,381,1.377,382,1.377,383,1.856,384,1.856,385,1.856,386,1.856,387,1.856,388,1.856,389,2.348,390,1.377,391,1.285,392,2.263,393,1.856,394,2.267,395,2.753,396,3.978,397,4.633,398,3.978,399,3.047,400,4.726,401,2.263,402,3.716,403,2.837,404,2.554,405,4.799,406,3.716,407,2.018,408,1.856,409,3.877,410,3.048,411,3.048,412,2.263,413,2.263,414,0.922,415,2.263,416,4.487,417,2.263,418,2.263,419,5.386,420,5.326,421,5.471,422,4.726,423,2.263,424,2.263,425,3.048,426,2.263,427,2.263,428,2.263,429,1.559,430,2.263,431,1.856,432,2.018,433,2.263,434,2.018,435,2.018,436,2.263,437,2.018,438,1.559,439,2.018,440,2.018,441,2.849,442,2.263,443,2.263,444,1.856,445,2.018,446,2.263,447,3.716,448,3.716,449,1.856,450,3.716,451,1.137,452,2.263,453,2.263,454,2.018,455,3.048,456,1.856,457,1.856,458,1.856,459,2.26,460,1.856,461,1.559,462,1.856,463,1.639,464,1.856,465,1.856,466,1.856,467,1.856,468,1.856,469,2.018,470,2.018,471,3.048,472,2.018,473,1.639]],["title/modules/AdminModule.html",[474,1.783,475,2.465]],["body/modules/AdminModule.html",[3,0.036,4,0.031,5,0.036,8,0.552,14,0.262,16,0.561,17,0.007,18,0.275,19,0.506,28,0.081,30,0.552,32,0.394,36,0.524,38,1.44,43,1.427,45,1.552,46,1.81,50,0.036,51,0.091,52,1.128,77,0.003,78,0.003,86,4.666,112,1.116,132,1.451,133,1.693,144,5.301,145,2.366,153,2.67,200,2.539,201,3.023,202,3.023,203,3.287,223,1.641,267,5.692,275,2.242,276,2.313,293,2.124,334,4.25,335,4.844,366,2.329,376,3.287,380,2.67,381,2.242,474,2.04,475,4.984,476,1.764,477,2.671,478,3.287,479,3.287,480,3.287,481,4.38,482,4.521,483,4.016,484,2.82,485,1.859,486,1.859,487,3.686,488,2.82,489,3.437,490,2.329,491,3.437,492,4.508,493,3.686,494,5.031,495,1.501,496,4.53,497,3.437,498,2.329,499,3.686,500,1.967,501,2.671,502,2.028,503,2.827,504,3.023,505,2.82,506,2.164,507,2.242,508,2.427,509,3.581,510,2.539,511,1.47,512,2.603,513,1.967,514,2.82,515,2.164,516,2.313,517,1.967,518,2.743,519,2.093,520,2.028,521,3.023,522,3.686,523,3.686,524,2.539,525,2.827,526,2.827,527,1.967,528,1.912,529,3.023,530,3.686,531,3.193,532,2.539,533,2.743,534,2.093,535,2.743,536,2.093,537,2.671,538,2.329,539,2.82,540,2.329,541,2.603,542,2.093,543,2.743,544,2.093,545,2.539,546,2.093,547,2.743,548,2.093,549,2.04,550,1.501,551,2.242,552,2.671,553,2.67,554,3.437,555,2.093,556,3.287,557,1.912,558,1.967,559,1.967,560,1.967,561,1.967,562,1.967,563,2.028,564,2.827,565,2.827,566,3.686,567,3.686,568,2.827,569,2.827,570,3.686,571,2.539,572,5.241,573,3.852,574,3.686,575,4.383,576,3.939,577,3.686,578,6.463,579,5.301,580,6.463,581,4.681,582,3.686,583,5.439,584,3.686]],["title/classes/AdminRefreshToken.html",[51,0.117,276,2.022]],["body/classes/AdminRefreshToken.html",[3,0.032,4,0.027,5,0.032,7,0.1,8,0.74,14,0.648,16,0.912,17,0.006,18,0.447,19,0.822,25,1.218,28,0.206,30,1.181,32,0.266,43,2.231,50,0.032,51,0.08,54,2.38,60,0.888,77,0.003,78,0.003,104,1.543,111,2.88,112,1.799,118,0.7,121,0.554,124,0.902,125,1.856,126,3.461,127,2.326,128,2.239,129,3.562,136,3.546,137,1.172,141,3.461,142,3.991,207,2.664,239,1.786,240,2.565,276,3.358,308,2.205,309,1.578,310,2.588,312,2.352,313,3.545,314,4.965,352,4.343,353,4.095,378,2.808,405,1.786,451,2.858,585,3.248,586,1.856,587,2.666,588,4.114,589,6.697,590,6.697,591,5.493,592,5.493,593,4.946,594,4.057,595,4.057,596,1.976,597,3.248,598,3.257,599,3.257,600,3.257,601,3.257,602,3.257,603,3.257,604,3.257,605,3.257,606,3.257,607,3.257,608,3.257,609,6.674,610,2.664,611,4.291,612,4.059,613,2.565,614,3.248,615,2.896,616,3.248,617,4.946,618,4.057,619,2.664,620,3.248,621,4.41,622,2.491,623,3.248,624,3.793,625,2.664,626,3.248,627,2.138,628,2.201,629,2.201,630,3.248,631,3.793,632,3.793,633,3.793,634,3.793,635,3.793,636,2.664,637,3.248,638,3.793,639,2.664,640,3.248,641,3.248,642,3.248,643,3.248,644,3.248,645,4.946,646,3.248,647,4.057,648,3.248,649,4.057,650,3.248,651,3.711,652,1.446,653,2.151,654,2.429,655,2.565,656,3.009,657,2.138,658,1.413,659,1.351,660,3.248,661,1.446,662,3.248,663,1.844,664,2.201,665,3.644,666,2.664,667,1.844,668,2.237,669,1.786,670,2.664,671,2.491,672,2.138,673,4.913,674,5.99,675,3.248,676,4.913]],["title/interfaces/AdminRefreshTokenCreationAttrbs.html",[302,0.914,312,3.442]],["body/interfaces/AdminRefreshTokenCreationAttrbs.html",[3,0.062,4,0.053,5,0.062,7,0.195,17,0.006,18,0.587,28,0.203,50,0.083,59,2.89,60,0.942,77,0.005,78,0.005,92,2.712,121,0.882,122,2.202,124,1.24,206,4.368,276,3.806,302,1.645,303,2.161,304,5.201,305,3.288,306,3.288,307,3.288,308,2.723,309,1.389,310,3.196,311,2.285,312,5.699,313,4.177,314,6.163,315,4.863,316,2.477]],["title/injectables/AdminService.html",[0,0.724,86,2.397]],["body/injectables/AdminService.html",[0,0.544,2,0.709,3,0.021,4,0.018,5,0.021,7,0.066,8,0.535,9,2.809,11,1.112,12,1.924,14,0.587,16,1.259,17,0.006,18,0.632,19,1.134,20,3.185,22,2.123,28,0.183,30,1.22,31,0.961,32,0.328,33,0.75,35,1.056,36,0.307,37,1.187,38,0.843,43,2.423,47,2.789,50,0.021,51,0.053,53,1.924,54,1.811,55,1.187,58,2.279,59,3.321,60,0.832,62,2.595,64,2.31,65,1.977,66,2.892,67,2.962,72,3.068,76,1.655,77,0.002,78,0.002,86,1.802,93,2.867,100,2.504,101,1.907,103,0.77,104,1.758,109,1.119,110,1.119,111,1.618,112,1.302,114,1.924,115,1.487,116,1.421,122,1.588,123,0.638,124,1.183,127,1.241,128,0.53,132,1.418,133,1.655,148,3.185,149,4.076,151,3.185,153,4.865,164,1.924,165,1.924,166,4.865,172,2.74,200,1.487,201,1.77,202,1.77,206,1.487,207,1.77,223,0.961,256,3.749,305,1.853,306,1.853,307,1.853,308,2.04,309,1.001,310,2.395,311,1.037,313,1.008,316,2.745,369,2.588,382,1.313,391,1.225,403,1.119,404,1.008,407,1.924,414,1.862,419,5.657,437,1.924,438,1.487,441,4.075,451,1.398,459,1.313,461,2.461,483,2.681,545,1.668,551,1.313,677,2.158,678,2.74,679,3.573,680,3.185,681,3.573,682,3.573,683,3.573,684,4.571,685,2.74,686,3.749,687,2.74,688,3.573,689,3.01,690,3.506,691,3.358,692,2.158,693,3.573,694,2.158,695,3.573,696,2.158,697,3.573,698,2.158,699,2.588,700,7.511,701,2.158,702,3.185,703,2.158,704,3.573,705,2.158,706,3.573,707,2.158,708,3.573,709,2.158,710,2.158,711,2.158,712,2.74,713,3.877,714,2.158,715,2.158,716,2.158,717,2.93,718,3.239,719,2.158,720,3.573,721,2.158,722,3.573,723,3.661,724,2.158,725,2.74,726,3.185,727,3.185,728,3.185,729,2.74,730,2.74,731,2.74,732,3.185,733,2.93,734,1.77,735,1.924,736,1.77,737,1.77,738,1.924,739,1.924,740,1.924,741,2.158,742,3.573,743,4.515,744,3.185,745,2.93,746,1.628,747,2.93,748,1.924,749,2.158,750,2.158,751,1.924,752,2.158,753,3.185,754,1.924,755,1.487,756,1.924,757,2.158,758,3.573,759,3.573,760,5.888,761,6.345,762,6.345,763,6.345,764,5.204,765,2.158,766,1.924,767,4.571,768,3.573,769,2.158,770,3.573,771,5.314,772,3.749,773,2.158,774,3.573,775,2.158,776,2.158,777,1.77,778,1.77,779,1.924,780,3.573,781,5.314,782,4.359,783,3.573,784,1.77,785,3.573,786,1.77,787,2.158,788,3.573,789,2.158,790,2.158,791,2.158,792,4.571,793,2.158,794,2.158,795,2.158,796,2.158,797,1.924,798,1.924,799,1.924,800,2.158,801,2.158,802,2.158,803,1.924,804,2.158,805,2.158,806,2.93,807,1.77,808,2.158,809,1.924,810,2.158,811,2.158,812,2.158,813,1.77,814,2.158,815,1.77,816,2.158,817,3.573,818,2.93,819,3.573,820,2.158,821,1.77,822,1.77,823,1.77,824,1.77,825,1.77,826,2.158]],["title/injectables/AdminUserMiddleware.html",[0,0.724,529,3.898]],["body/injectables/AdminUserMiddleware.html",[0,1.054,2,1.707,3,0.051,4,0.044,5,0.051,7,0.16,8,1.036,9,2.3,10,4.42,11,1.618,14,0.492,16,1.054,17,0.006,18,0.619,19,0.949,21,2.95,22,2.893,23,4.247,24,3.695,25,3.336,26,4.077,28,0.153,29,3.054,30,0.777,31,3.081,32,0.353,33,1.804,34,3.807,35,2.045,36,0.738,39,2.162,41,5.677,42,2.621,43,1.363,47,2.98,48,2.552,49,2.116,50,0.051,51,0.128,52,1.589,57,2.072,58,2.33,64,2.194,65,1.878,66,2.367,67,2.425,72,1.676,77,0.004,78,0.004,85,3.984,86,4.485,99,3.16,102,2.425,103,1.119,104,1.352,282,3.421,305,2.694,306,2.694,307,2.694,308,2.01,310,2.654,311,2.01,369,5.013,394,1.949,395,2.367,403,2.694,404,2.425,529,5.677,797,4.632,803,4.632,809,4.632,827,7.784,828,4.632,829,5.195,830,4.632,831,4.632,832,4.632,833,4.261,834,4.632,835,3.05,836,4.632,837,4.632,838,4.632,839,4.632,840,4.632,841,4.632,842,4.632,843,4.632,844,4.632,845,4.632,846,4.632,847,3.05]],["title/interfaces/AdmincreationAttrbs.html",[302,0.914,315,3.645]],["body/interfaces/AdmincreationAttrbs.html",[3,0.061,4,0.053,5,0.061,7,0.192,17,0.006,18,0.684,28,0.206,50,0.083,59,4.058,60,0.945,77,0.005,78,0.005,92,2.695,121,0.874,122,2.173,124,1.146,206,4.309,276,2.661,302,1.635,303,2.132,304,5.131,305,3.244,306,3.244,307,3.244,308,2.713,309,1.37,310,3.185,311,2.661,312,4.531,313,2.921,314,4.309,315,5.984,316,3.478]],["title/classes/AllExceptionsFilter.html",[51,0.117,848,3.645]],["body/classes/AllExceptionsFilter.html",[3,0.059,4,0.051,5,0.059,7,0.187,8,1.147,11,1.893,14,0.544,16,1.167,17,0.006,18,0.572,19,1.051,28,0.169,30,0.91,32,0.304,33,3.061,36,0.864,50,0.059,51,0.15,52,2.345,58,2.268,65,1.649,77,0.005,78,0.005,102,2.839,103,1.31,118,1.31,278,3.698,295,4.403,394,3.307,396,4.003,495,3.122,573,2.771,848,5.878,849,8.394,850,6.08,851,6.437,852,6.08,853,9.277,854,6.08,855,5.878,856,6.581,857,5.304,858,6.759,859,6.08,860,5.878,861,6.08,862,6.08,863,4.662,864,4.662,865,3.493,866,4.662,867,5.421,868,7.665,869,4.403,870,4.662,871,4.662,872,6.08,873,6.08]],["title/classes/ApiError.html",[51,0.117,874,3.645]],["body/classes/ApiError.html",[3,0.059,4,0.051,5,0.059,7,0.186,11,1.882,14,0.595,16,0.92,17,0.006,18,0.451,19,0.829,28,0.185,32,0.24,33,2.1,36,0.859,50,0.082,51,0.207,60,0.91,77,0.005,78,0.005,118,1.303,121,0.856,123,1.786,124,1.222,364,2.823,399,3.853,404,2.823,573,3.481,586,3.3,865,3.66,869,6.57,874,6.745,875,7.214,876,4.959,877,6.556,878,6.264,879,7.638,880,4.959,881,6.046,882,4.636,883,4.959,884,4.959,885,4.959,886,4.959,887,4.636,888,4.959,889,4.959,890,4.379,891,4.165,892,4.959,893,5.261,894,4.959]],["title/classes/ApiErrorExceptionFilter.html",[51,0.117,226,2.698]],["body/classes/ApiErrorExceptionFilter.html",[3,0.061,4,0.053,5,0.061,7,0.192,8,1.169,14,0.445,16,0.954,17,0.006,18,0.468,19,0.86,22,2.614,24,3.477,28,0.138,30,0.938,32,0.338,36,0.89,39,2.608,50,0.061,51,0.155,52,2.39,58,2.224,65,1.7,77,0.005,78,0.005,118,1.35,127,2.177,226,4.436,243,3.679,394,3.193,414,2.553,451,1.917,495,2.553,573,2.856,851,6.527,855,5.991,857,5.379,858,6.833,860,4.806,863,4.806,864,4.806,865,2.608,866,4.806,870,4.806,871,4.806,877,4.317,891,6.138,895,7.812,896,6.267,897,6.267,898,5.588,899,5.588,900,6.267,901,5.141,902,5.141,903,6.267,904,5.141,905,5.588,906,5.588,907,6.267,908,5.588,909,6.965,910,5.141]],["title/classes/ApiException.html",[47,1.819,51,0.117]],["body/classes/ApiException.html",[3,0.026,4,0.022,5,0.026,7,0.081,8,0.631,11,1.313,14,0.54,16,1.062,17,0.007,18,0.52,19,0.957,22,2.834,28,0.216,30,0.98,32,0.291,33,0.919,36,0.376,47,3.606,50,0.026,51,0.065,60,0.732,64,2.986,65,2.556,66,3.859,67,3.953,77,0.003,78,0.003,109,2.726,110,2.726,115,2.905,116,2.777,118,0.57,121,0.472,124,0.882,243,4.096,281,4.806,282,1.743,367,5.35,368,5.35,369,5.053,370,5.35,371,5.35,372,5.35,373,5.35,375,4.031,396,3.948,397,4.598,398,3.948,399,4.134,403,3.795,404,3.417,495,2.667,586,1.582,727,6.22,728,6.22,729,5.35,730,5.35,731,5.35,732,3.76,733,5.722,865,2.187,882,2.03,893,4.806,911,2.647,912,4.928,913,5.257,914,4.217,915,5.257,916,5.257,917,5.257,918,2.647,919,3.461,920,4.217,921,2.647,922,2.647,923,6.22,924,6.22,925,6.22,926,6.976,927,6.22,928,6.22,929,6.976,930,2.647,931,4.217,932,2.647,933,2.647,934,2.647,935,2.647,936,6.22,937,6.22,938,5.996,939,2.647,940,2.647,941,4.806,942,6.22,943,5.35,944,6.976,945,6.976,946,2.647,947,2.36,948,2.647,949,2.647,950,2.647,951,2.03,952,4.743,953,1.682,954,1.682,955,1.682,956,1.682,957,2.647,958,2.647,959,2.647,960,2.647,961,2.647,962,2.647]],["title/classes/ApiExceptionFilter.html",[51,0.117,229,2.698]],["body/classes/ApiExceptionFilter.html",[3,0.061,4,0.053,5,0.061,7,0.194,8,1.173,14,0.448,16,0.96,17,0.006,18,0.47,19,0.865,22,2.624,24,3.49,28,0.139,30,0.943,32,0.339,36,0.896,39,2.623,47,3.418,48,3.096,50,0.061,51,0.156,52,2.399,58,2.229,65,1.71,77,0.005,78,0.005,118,1.358,127,2.189,229,4.452,243,3.701,394,3.202,414,2.567,451,1.929,495,2.567,573,2.873,851,6.544,855,6.013,857,5.393,858,6.847,860,4.834,863,4.834,864,4.834,865,2.623,866,4.834,870,4.834,871,4.834,877,4.342,901,5.17,902,5.17,904,5.17,905,5.621,906,5.621,908,5.621,909,6.991,910,5.17,963,7.84,964,5.621,965,6.304,966,6.304,967,6.304,968,6.304]],["title/injectables/AppClusterService.html",[0,0.724,969,3.274]],["body/injectables/AppClusterService.html",[0,1.004,2,1.59,3,0.047,4,0.041,5,0.047,7,0.149,8,0.987,9,2.383,14,0.573,16,1.004,17,0.006,18,0.492,19,0.905,28,0.166,30,1.124,32,0.298,35,1.949,36,0.687,50,0.047,51,0.119,54,2.486,58,1.874,60,0.452,62,2.748,65,1.79,72,1.562,77,0.004,78,0.004,93,2.38,103,1.618,121,0.739,123,1.43,124,0.652,127,1.681,241,2.841,302,0.93,309,1.06,319,4.182,364,2.259,398,4.345,414,2.687,495,2.687,912,5.375,969,4.545,970,3.969,971,6.598,972,6.598,973,7.19,974,5.883,975,6.614,976,4.839,977,4.545,978,5.883,979,4.839,980,5.883,981,4.839,982,5.883,983,4.839,984,5.883,985,5.883,986,4.315,987,4.315,988,5.883,989,4.315,990,6.614,991,4.315,992,3.333,993,4.315,994,4.315,995,4.315,996,5.412,997,5.883,998,4.315,999,4.315,1000,4.315,1001,4.315,1002,4.315,1003,4.315,1004,4.315,1005,3.969,1006,4.315,1007,4.315,1008,7.19,1009,4.315,1010,4.315,1011,4.315,1012,4.315,1013,7.19,1014,4.315,1015,4.315,1016,4.315,1017,4.315,1018,4.315,1019,3.969,1020,4.315,1021,5.883,1022,4.315,1023,4.779,1024,3.969,1025,4.315,1026,3.969,1027,4.315,1028,4.315,1029,4.315,1030,4.315,1031,4.315,1032,4.315,1033,4.315,1034,4.315]],["title/controllers/AppController.html",[143,2.115,1035,3.898]],["body/controllers/AppController.html",[3,0.033,4,0.028,5,0.033,7,0.102,8,0.755,9,2.424,14,0.545,16,1.11,17,0.006,18,0.544,19,1,22,2.911,23,2.99,24,3.97,25,3.212,26,3.913,28,0.161,29,2.239,30,1.148,31,1.484,32,0.354,36,0.474,39,1.387,50,0.033,51,0.082,54,2.274,57,2.428,58,2.097,60,0.785,64,1.599,65,0.905,72,2.19,77,0.003,78,0.003,93,2.311,94,3.349,95,1.729,102,1.557,103,1.087,104,1.557,111,2.155,112,1.574,123,1.491,124,0.82,125,1.511,132,0.89,137,1.203,143,2.246,145,1.45,147,1.957,185,2.107,188,2.107,189,2.415,196,3.655,208,1.893,209,2.028,210,1.957,211,2.028,221,2.107,222,1.834,232,2.107,240,1.729,319,2.617,324,4.993,345,2.735,346,4.993,383,2.735,384,2.735,385,2.735,386,2.735,387,2.735,388,2.735,389,3.847,390,2.028,394,2.284,395,3.093,399,1.682,431,4.139,451,1.544,455,4.139,456,2.735,457,2.735,458,2.735,459,3.069,460,2.735,461,2.297,463,2.415,464,2.735,465,2.735,466,2.735,467,2.735,468,2.735,495,2.055,552,1.638,555,1.893,573,3.093,659,1.387,847,2.962,904,4.993,1019,4.139,1023,2.415,1035,4.139,1036,3.334,1037,5.046,1038,5.046,1039,6.087,1040,6.087,1041,7.291,1042,3.334,1043,5.046,1044,3.334,1045,5.568,1046,3.334,1047,7.671,1048,5.046,1049,3.334,1050,3.334,1051,3.334,1052,3.334,1053,3.334,1054,3.334,1055,3.334,1056,3.334,1057,3.334,1058,5.046,1059,3.334,1060,4.499,1061,2.735,1062,2.735,1063,2.415,1064,4.499,1065,2.735,1066,5.428,1067,2.557,1068,3.334,1069,3.334,1070,4.668,1071,6.087,1072,7.291,1073,3.334,1074,5.046,1075,5.046,1076,4.499,1077,5.046,1078,4.499,1079,5.046,1080,4.499,1081,5.046,1082,5.046,1083,5.046,1084,5.046,1085,6.788,1086,6.087,1087,5.428,1088,5.046,1089,2.973,1090,2.557,1091,3.334,1092,2.735,1093,2.735,1094,2.973,1095,2.415,1096,2.973,1097,2.973,1098,5.046,1099,3.334,1100,3.334,1101,2.557,1102,3.334,1103,2.028,1104,3.334,1105,3.334,1106,3.334,1107,3.334,1108,3.334,1109,3.334,1110,3.334,1111,3.334,1112,3.334,1113,3.334,1114,4.193,1115,3.334,1116,3.334,1117,3.334,1118,2.973,1119,3.334,1120,3.334,1121,3.334,1122,2.297,1123,2.107,1124,2.557,1125,2.973,1126,2.973,1127,2.973,1128,2.973,1129,2.973,1130,2.973,1131,2.973,1132,3.334,1133,3.334,1134,5.046]],["title/injectables/AppListener.html",[0,0.724,1135,3.645]],["body/injectables/AppListener.html",[0,1.245,2,2.218,3,0.066,4,0.057,5,0.066,7,0.207,8,1.223,14,0.479,16,1.027,17,0.006,18,0.503,19,0.926,28,0.149,30,1.01,32,0.363,35,2.416,36,0.959,50,0.066,51,0.167,77,0.005,78,0.005,104,1.319,125,1.502,378,3.832,405,3.713,992,4.649,1135,6.27,1136,6.749,1137,8.176,1138,8.176,1139,7.181,1140,8.176,1141,6.749,1142,8.176,1143,5.536,1144,6.749,1145,5.176,1146,5.176,1147,6.017,1148,6.017]],["title/modules/AppModule.html",[474,1.783,1149,3.645]],["body/modules/AppModule.html",[3,0.03,4,0.026,5,0.047,8,0.468,14,0.222,16,0.476,17,0.007,18,0.233,19,0.429,28,0.069,30,0.468,32,0.394,36,0.444,38,1.221,39,1.301,43,1.26,44,1.535,45,1.371,46,1.535,50,0.03,51,0.077,52,0.956,58,1.46,77,0.003,78,0.003,104,0.939,112,1.692,127,1.668,132,1.281,133,1.496,145,2.089,222,1.719,223,1.391,276,2.043,277,1.621,278,1.901,293,1.876,316,1.876,334,3.992,381,1.901,451,0.956,474,1.802,475,3.879,476,1.496,477,2.359,484,2.491,485,1.577,486,1.577,488,2.491,490,1.975,491,3.035,492,4.149,494,1.975,495,1.273,497,3.035,498,1.975,500,1.668,501,3.674,502,1.719,505,3.879,506,1.835,511,1.247,512,2.299,513,1.668,516,2.043,517,1.668,518,3.773,519,1.775,520,1.719,527,1.668,528,1.621,531,4.391,532,2.153,533,2.423,534,1.775,535,2.423,536,1.775,537,2.359,538,1.975,539,2.491,540,1.975,541,2.299,542,1.775,543,2.423,544,1.775,545,2.243,546,1.775,547,2.423,548,1.775,549,1.802,550,1.273,552,2.359,554,3.035,555,1.775,557,2.491,558,1.668,559,1.668,560,1.668,561,1.668,562,2.564,573,2.666,575,1.621,667,2.727,745,2.564,848,3.684,857,3.035,912,2.727,969,5.152,977,2.153,1035,4.798,1095,2.264,1122,2.153,1149,7.414,1150,2.787,1151,2.787,1152,2.787,1153,4.726,1154,4.55,1155,4.726,1156,4.726,1157,4.391,1158,5.417,1159,5.131,1160,3.126,1161,3.126,1162,3.126,1163,1.835,1164,3.126,1165,3.126,1166,2.397,1167,2.397,1168,3.126,1169,3.94,1170,4.283,1171,3.126,1172,2.787,1173,3.684,1174,3.126,1175,2.153,1176,2.397,1177,2.397,1178,3.126,1179,3.126,1180,4.803,1181,3.126,1182,2.787,1183,3.126,1184,2.787,1185,2.787,1186,2.397,1187,3.126,1188,2.299,1189,2.787,1190,3.163,1191,2.564,1192,3.479,1193,2.787,1194,3.479,1195,2.787,1196,2.397,1197,2.564,1198,3.126,1199,3.684,1200,3.94,1201,2.787,1202,2.787,1203,2.787,1204,2.787,1205,2.787,1206,3.126,1207,2.397,1208,3.126,1209,4.803,1210,3.126,1211,4.283,1212,3.126,1213,2.787,1214,3.126,1215,3.126,1216,5.853,1217,3.126,1218,3.126,1219,3.126,1220,3.126,1221,3.126,1222,4.283,1223,3.126,1224,3.126,1225,3.126,1226,3.126,1227,3.126,1228,4.803,1229,3.126,1230,3.126,1231,3.126,1232,3.126,1233,3.126,1234,4.803,1235,3.126,1236,3.126,1237,3.126,1238,3.126,1239,3.126,1240,3.126,1241,3.126,1242,3.126,1243,2.787,1244,2.564,1245,2.564,1246,3.94,1247,2.564,1248,2.564,1249,3.94,1250,2.564,1251,2.564,1252,2.564,1253,2.564,1254,2.564,1255,2.564,1256,2.564,1257,3.126,1258,3.126,1259,3.126,1260,3.126,1261,3.126,1262,3.126,1263,3.126,1264,3.126,1265,3.126,1266,3.126,1267,3.126,1268,3.126,1269,3.126,1270,3.126,1271,3.126,1272,3.126,1273,3.126,1274,3.126,1275,3.126,1276,3.126,1277,3.126,1278,2.787]],["title/controllers/AuthController.html",[143,2.115,1279,3.898]],["body/controllers/AuthController.html",[3,0.024,4,0.021,5,0.024,7,0.076,8,0.601,9,2.11,14,0.528,16,1.131,17,0.006,18,0.554,19,1.019,22,3.232,23,3.508,24,4.26,25,3.54,26,4.366,28,0.203,29,2.627,30,1.112,31,1.788,32,0.358,36,0.354,39,1.036,43,2.153,45,2.342,50,0.024,51,0.061,57,1.602,59,2.3,60,0.8,62,3.606,64,1.273,77,0.003,78,0.003,93,2.013,101,1.329,102,1.163,104,1.452,107,3.582,122,2.206,124,0.915,125,1.654,137,0.899,143,1.109,145,1.083,147,1.462,154,6.625,157,1.91,168,2.909,179,5.162,183,1.515,184,2.443,185,1.574,186,1.716,187,1.64,188,1.574,189,1.804,190,2.767,191,1.414,192,1.515,194,5.285,195,5.285,196,1.804,197,1.515,198,1.64,199,1.64,204,4.44,205,2.221,208,1.414,209,1.515,210,1.462,211,1.515,218,2.443,219,1.64,220,1.64,221,1.574,222,1.37,226,1.414,227,1.515,228,1.515,229,2.28,230,1.515,231,1.462,232,1.574,233,1.515,234,1.804,237,1.91,239,1.37,240,1.292,241,1.462,242,5.118,243,4.362,245,2.645,247,3.294,248,2.645,250,4.5,252,2.767,253,5.162,309,0.545,316,1.569,378,2.866,394,1.507,399,2.921,486,2.026,495,3.28,613,4.533,669,3.185,678,3.871,685,3.871,712,1.91,713,4.471,718,4.587,723,3.988,755,1.716,952,4.194,953,2.013,954,2.013,955,2.013,956,2.013,1067,1.91,1070,1.91,1213,2.221,1279,3.294,1280,2.491,1281,4.5,1282,5.047,1283,5.047,1284,5.047,1285,5.047,1286,2.491,1287,4.017,1288,5.662,1289,2.491,1290,2.491,1291,2.491,1292,2.491,1293,5.698,1294,4.017,1295,4.017,1296,2.491,1297,2.491,1298,2.491,1299,2.491,1300,2.491,1301,2.491,1302,5.047,1303,2.491,1304,2.491,1305,2.491,1306,4.017,1307,2.491,1308,2.491,1309,2.491,1310,5.568,1311,2.491,1312,4.017,1313,2.491,1314,2.491,1315,2.491,1316,4.017,1317,2.491,1318,2.491,1319,3.581,1320,2.491,1321,2.491,1322,2.491,1323,2.491,1324,4.44,1325,4.017,1326,3.294,1327,2.491,1328,2.491,1329,2.491,1330,3.07,1331,2.221,1332,2.221,1333,2.221,1334,2.221,1335,3.581,1336,2.491,1337,2.221,1338,2.043,1339,2.491,1340,2.221,1341,2.221,1342,2.491,1343,2.491,1344,4.87,1345,3.294,1346,2.491,1347,2.491,1348,5.162,1349,2.491,1350,2.491,1351,5.162,1352,5.162,1353,2.491,1354,2.491,1355,2.491,1356,2.491,1357,5.047,1358,2.221,1359,2.491,1360,2.491,1361,2.491,1362,4.017,1363,2.491,1364,2.491,1365,2.491,1366,2.491,1367,2.491,1368,2.491,1369,2.491,1370,2.221,1371,2.491,1372,2.491,1373,2.491,1374,2.491,1375,2.491,1376,2.491,1377,2.491,1378,2.491]],["title/guards/AuthFerfershGuard.html",[79,2.79,218,2.891]],["body/guards/AuthFerfershGuard.html",[0,1.008,3,0.047,4,0.041,5,0.047,7,0.149,8,0.99,9,1.436,11,2.061,14,0.47,16,1.008,17,0.006,18,0.494,19,0.908,28,0.2,29,1.788,30,0.727,32,0.366,33,1.688,35,1.955,36,0.691,42,2.452,43,1.737,45,1.889,47,3.338,48,2.387,49,1.98,50,0.047,51,0.12,52,1.487,54,2.148,58,2.177,59,3.974,60,0.619,64,2.679,65,2.293,72,1.569,77,0.004,78,0.004,81,2.76,84,4.962,86,4.501,88,2.854,89,4.587,91,3.758,92,2.098,93,2.098,94,4.14,95,2.521,96,5.076,97,4.794,99,2.957,100,3.437,101,2.594,103,1.621,104,1.579,105,2.854,106,3.201,107,2.269,108,3.348,109,3.432,110,3.432,111,1.72,112,0.997,116,4.358,132,1.766,218,4.026,309,1.449,403,2.521,404,2.269,482,4.952,483,4.075,510,3.348,551,2.957,689,4.955,941,4.559,951,3.728,1379,7.526,1380,4.861,1381,4.334,1382,4.861,1383,4.861,1384,7.526,1385,6.619,1386,6.619,1387,4.861,1388,4.861,1389,4.861]],["title/injectables/AuthMiddleware.html",[0,0.724,1390,3.898]],["body/injectables/AuthMiddleware.html",[0,1.186,2,2.051,3,0.061,4,0.053,5,0.061,7,0.192,8,1.166,10,4.425,14,0.443,16,0.95,17,0.006,18,0.466,19,0.856,21,3.545,22,3.125,23,4.498,24,3.961,25,3.504,26,4.37,28,0.138,29,3.126,30,0.934,31,2.779,32,0.309,34,4.287,35,2.303,36,0.887,39,2.598,49,2.543,50,0.061,51,0.154,52,1.91,57,2.49,58,1.559,77,0.005,78,0.005,104,1.523,183,3.798,191,3.545,394,2.342,395,2.845,575,3.238,613,4.042,669,3.434,847,3.665,1123,3.945,1390,6.392,1391,6.243,1392,6.243,1393,4.111,1394,4.788,1395,5.368,1396,5.368,1397,4.301,1398,3.665,1399,4.788,1400,4.301,1401,4.301,1402,6.243,1403,4.788]],["title/modules/AuthModule.html",[474,1.783,501,2.334]],["body/modules/AuthModule.html",[1,2.908,3,0.035,4,0.03,5,0.035,8,0.531,14,0.252,16,0.54,17,0.007,18,0.264,19,0.486,28,0.078,30,0.531,32,0.392,36,0.504,38,1.385,43,1.386,44,1.741,45,1.508,46,1.741,50,0.035,51,0.088,52,1.085,77,0.003,78,0.003,112,1.084,132,1.41,133,1.645,145,2.298,222,1.95,223,1.578,231,2.081,267,5.646,274,2.719,275,3.214,276,2.247,277,1.839,278,2.157,293,2.064,334,4.19,335,4.775,366,2.24,380,2.568,381,2.157,438,2.442,474,1.982,475,2.74,476,1.697,477,2.595,481,4.318,484,2.74,485,1.788,486,1.788,488,2.74,489,3.339,490,2.24,491,3.339,492,4.423,494,5.397,495,1.444,496,4.118,497,3.339,498,2.24,500,1.892,501,4.665,503,4.844,505,2.74,506,2.081,507,2.157,508,3.479,509,2.335,511,1.414,512,2.529,513,1.892,516,2.247,517,1.892,518,2.665,519,2.013,520,1.95,524,2.442,525,2.719,526,2.719,527,1.892,528,1.839,531,3.102,532,2.442,552,2.595,553,2.568,554,3.339,555,2.013,557,1.839,558,1.892,559,1.892,560,1.892,561,1.892,562,1.892,563,1.95,564,2.719,565,2.719,568,2.719,569,2.719,571,2.442,572,5.757,573,4.154,575,4.727,576,2.568,579,6.14,581,5.89,713,2.335,723,2.442,1135,6.02,1163,2.081,1169,4.334,1199,4.052,1200,4.334,1279,5.181,1293,2.719,1324,2.719,1330,5.435,1331,3.161,1332,3.161,1333,3.161,1334,3.161,1340,3.161,1390,2.908,1404,3.161,1405,3.161,1406,3.161,1407,5.883,1408,3.545,1409,3.545,1410,3.545,1411,4.711,1412,4.334,1413,3.545,1414,3.545,1415,4.711,1416,2.908,1417,2.908,1418,3.545,1419,3.545,1420,3.545,1421,2.568,1422,3.545,1423,3.545,1424,3.545,1425,5.284,1426,5.284,1427,5.284,1428,6.316,1429,3.545,1430,3.545,1431,3.545,1432,5.284,1433,3.545,1434,3.545,1435,3.545,1436,3.545,1437,2.719,1438,3.545,1439,3.545]],["title/interfaces/AuthUser.html",[302,0.914,1440,3.003]],["body/interfaces/AuthUser.html",[3,0.056,4,0.048,5,0.056,7,0.177,17,0.006,18,0.61,28,0.202,32,0.229,43,1.942,45,2.113,50,0.091,60,0.936,77,0.005,78,0.005,92,1.825,100,2.449,107,4.033,121,0.829,122,1.999,124,1.164,132,2.384,133,2.305,212,2.623,287,3.268,302,1.788,303,1.962,308,2.595,309,1.792,310,2.789,311,2.376,352,3.073,353,2.827,511,2.296,663,3.268,718,3.167,1103,3.502,1440,4.678,1441,3.791,1442,5.436,1443,5.458,1444,5.458,1445,5.458,1446,3.638,1447,3.638,1448,3.268,1449,3.638]],["title/classes/BadRequestError.html",[51,0.117,891,3.274]],["body/classes/BadRequestError.html",[3,0.059,4,0.051,5,0.059,7,0.187,11,1.893,14,0.596,16,0.926,17,0.006,18,0.454,19,0.834,28,0.185,32,0.241,33,2.112,36,0.864,50,0.082,51,0.207,60,0.911,77,0.005,78,0.005,118,1.31,121,0.859,123,1.796,124,1.131,364,2.839,399,3.067,404,2.839,573,3.493,586,3.307,865,3.493,869,6.384,874,7.114,875,6.287,876,4.987,877,6.39,878,4.987,882,4.662,883,4.987,884,4.987,885,4.987,886,4.987,887,4.662,888,4.987,889,4.987,890,4.403,891,5.28,892,6.287,893,6.071,894,4.987,1450,6.08,1451,6.834,1452,5.421,1453,5.421]],["title/classes/BanUserDto.html",[51,0.117,1454,3.645]],["body/classes/BanUserDto.html",[3,0.064,4,0.055,5,0.064,7,0.201,14,0.57,17,0.006,28,0.177,32,0.319,50,0.064,51,0.198,60,0.75,77,0.005,78,0.005,103,2.036,118,1.41,121,0.899,122,3.014,124,1.081,125,1.786,126,3.413,127,2.787,128,2.221,129,3.135,130,4.509,132,2.141,136,3.691,137,2.361,138,4.556,139,3.2,140,2.408,141,3.413,142,3.133,1454,6.154,1455,8.678,1456,5.368,1457,8.678,1458,8.024,1459,6.545,1460,6.545,1461,6.545,1462,6.545]],["title/classes/BookmarksProducts.html",[51,0.117,1192,3.442]],["body/classes/BookmarksProducts.html",[3,0.057,4,0.049,5,0.057,7,0.18,14,0.587,17,0.006,28,0.203,32,0.328,50,0.057,51,0.145,77,0.005,78,0.005,111,2.923,112,1.886,118,1.265,121,0.84,122,3.123,124,1.239,125,1.838,129,2.928,132,2,223,2.613,309,1.969,451,2.662,549,2.813,550,2.391,586,2.813,587,3.676,588,4.253,611,3.589,612,4.092,628,3.337,629,3.337,651,3.873,652,2.613,653,3.261,654,4.057,658,2.554,659,2.443,661,2.613,664,3.676,746,2.675,1192,5.43,1463,5.871,1464,5.278,1465,3.045,1466,5.871,1467,4.737,1468,5.871,1469,5.871,1470,5.871,1471,2.81]],["title/controllers/CardController.html",[143,2.115,1472,3.898]],["body/controllers/CardController.html",[3,0.071,4,0.061,5,0.071,17,0.006,32,0.361,36,1.034,50,0.071,51,0.18,77,0.005,78,0.005,143,3.24,145,3.166,147,4.273,192,4.427,226,4.132,227,4.427,228,4.427,229,4.856,230,4.427,231,4.273,233,4.427,1472,7.015,1473,7.278,1474,7.278,1475,7.278]],["title/injectables/CardService.html",[0,0.724,1476,3.645]],["body/injectables/CardService.html",[0,1.325,2,2.463,3,0.073,4,0.063,5,0.073,17,0.006,32,0.298,35,2.571,36,1.065,50,0.073,51,0.185,77,0.006,78,0.006,391,4.256,1476,6.673,1477,7.497]],["title/classes/Cart.html",[51,0.117,535,2.397]],["body/classes/Cart.html",[3,0.042,4,0.036,5,0.042,7,0.133,8,0.913,14,0.665,16,0.929,17,0.006,18,0.455,19,0.837,28,0.207,30,1.258,32,0.305,50,0.042,51,0.107,54,2.4,60,0.839,77,0.004,78,0.004,104,1.643,111,2.868,112,1.725,118,0.932,121,0.684,122,2.814,124,1.133,125,1.924,129,3.285,132,2.556,223,1.925,309,1.774,451,2.35,533,4.359,535,3.078,549,3.155,550,1.761,586,2.29,587,3.148,588,4.221,596,2.63,612,3.928,628,2.716,629,2.716,651,3.606,652,1.925,653,2.655,654,2.997,656,3.712,658,1.881,659,1.799,661,1.925,664,3.148,1465,3.668,1467,2.732,1478,4.324,1479,7.072,1480,8.642,1481,3.385,1482,7.224,1483,7.683,1484,7.683,1485,5.892,1486,6.302,1487,6.103,1488,6.103,1489,3.546,1490,4.324,1491,4.324,1492,4.324,1493,2.732,1494,4.324,1495,4.324,1496,4.324,1497,4.324,1498,4.324,1499,4.324,1500,4.324,1501,4.324,1502,6.103,1503,4.324,1504,6.103,1505,4.324,1506,5.005,1507,3.856,1508,4.324,1509,3.855,1510,4.324,1511,4.324,1512,7.072,1513,3.316,1514,4.324,1515,5.801]],["title/modules/CartModule.html",[474,1.783,1153,3.003]],["body/modules/CartModule.html",[3,0.049,4,0.043,5,0.049,17,0.007,32,0.397,36,0.72,38,1.979,43,1.786,44,2.488,45,1.943,46,2.488,50,0.049,51,0.125,77,0.004,78,0.004,112,1.396,132,1.816,133,2.119,145,2.96,223,2.255,276,2.895,277,2.627,293,2.659,474,2.553,476,2.425,477,3.343,484,3.529,485,2.555,486,2.555,488,3.529,496,5.043,500,2.704,501,3.775,502,2.786,511,2.02,512,3.258,513,2.704,514,3.529,515,2.974,516,2.895,517,2.704,518,3.433,519,2.876,520,2.786,527,2.704,528,2.627,533,3.433,535,3.433,537,3.343,538,3.201,539,3.529,540,3.201,541,3.258,542,2.876,543,3.433,544,2.876,545,3.178,546,2.876,547,3.433,548,2.876,549,2.553,550,2.063,557,2.627,558,2.704,559,2.704,560,2.704,561,2.704,562,2.704,563,2.786,1153,5.578,1154,4.14,1156,4.301,1157,3.995,1175,3.489,1176,3.885,1472,6.304,1476,6.77,1516,4.516,1517,4.516,1518,5.065,1519,5.065,1520,5.065,1521,5.065,1522,5.065,1523,4.155]],["title/classes/CartProduct.html",[51,0.117,533,2.397]],["body/classes/CartProduct.html",[3,0.048,4,0.041,5,0.048,7,0.15,8,0.994,14,0.646,17,0.006,28,0.206,30,0.994,32,0.3,50,0.048,51,0.121,54,2.494,77,0.004,78,0.004,104,1.299,111,2.867,112,1.913,118,1.054,121,0.744,124,1.225,125,1.945,129,3.552,309,1.855,451,2.782,533,3.352,535,4.703,549,3.498,550,1.992,586,2.493,587,3.36,588,4.221,596,4.043,611,4.182,612,4.048,628,2.958,629,2.958,651,3.77,652,2.177,653,2.891,654,3.708,656,4.592,658,2.127,659,2.035,661,2.177,664,3.605,1464,4.973,1465,2.536,1524,4.89,1525,8.47,1526,4.16,1527,8.099,1528,7.222,1529,4.89,1530,5.096,1531,4.89,1532,4.89,1533,4.89,1534,4.89,1535,4.011,1536,4.89,1537,4.89,1538,4.89,1539,5.579,1540,4.89,1541,4.89,1542,4.36,1543,4.89]],["title/modules/CategoriesColoursModule.html",[474,1.783,1154,2.891]],["body/modules/CategoriesColoursModule.html",[3,0.044,4,0.038,5,0.044,8,0.676,14,0.321,16,0.688,17,0.007,18,0.337,19,0.619,28,0.1,30,0.676,32,0.393,36,0.642,38,1.764,43,1.651,44,2.218,45,1.796,46,2.218,50,0.044,51,0.111,52,1.382,77,0.004,78,0.004,112,1.291,132,1.679,133,1.959,145,2.737,223,2.01,276,2.676,277,2.342,293,2.458,474,2.361,475,3.263,476,2.162,477,3.09,484,3.263,485,2.278,486,2.278,488,3.263,489,3.976,490,2.854,491,3.976,492,4.949,494,3.976,495,1.839,496,4.812,497,3.976,498,2.854,500,2.411,501,3.09,502,2.484,505,3.263,506,2.651,507,2.747,508,2.974,509,2.974,511,1.801,512,3.012,513,2.411,514,3.263,515,2.651,516,2.676,517,2.411,518,3.174,519,2.564,520,2.484,527,2.411,528,2.342,537,3.09,539,3.263,541,3.012,543,3.174,549,2.361,550,1.839,557,2.342,558,2.411,559,2.411,560,2.411,561,2.411,562,2.411,563,2.484,571,3.111,572,3.111,573,3.752,575,4.27,581,3.271,1154,5.583,1157,3.694,1163,2.651,1175,3.111,1437,4.825,1544,4.027,1545,4.027,1546,4.027,1547,6.162,1548,6.446,1549,4.516,1550,5.939,1551,5.939,1552,4.516,1553,4.027,1554,4.516,1555,3.704,1556,4.516,1557,4.027,1558,4.516,1559,3.704,1560,4.516,1561,4.516,1562,4.516,1563,5.16,1564,4.516,1565,4.516]],["title/controllers/CategoriesController.html",[143,2.115,1550,3.898]],["body/controllers/CategoriesController.html",[3,0.042,4,0.036,5,0.042,7,0.133,8,0.913,14,0.546,16,1.077,17,0.006,18,0.528,19,0.97,28,0.191,30,1.15,32,0.379,36,0.614,43,1.856,50,0.042,51,0.107,77,0.004,78,0.004,80,5.565,93,2.797,102,2.019,103,0.932,104,1.501,124,1.133,125,1.71,137,1.56,143,1.925,145,1.881,147,2.538,155,5.892,160,5.461,161,5.461,184,4.302,185,4.855,186,2.978,187,2.847,188,2.732,190,4.872,191,2.455,192,2.63,194,4.872,195,4.872,197,4.674,198,2.847,199,2.847,208,2.455,209,2.63,210,2.538,211,2.63,212,1.97,213,2.978,214,2.538,215,2.978,216,2.978,217,2.978,218,5.257,219,2.847,220,2.847,221,2.732,222,2.378,226,2.455,227,2.63,228,2.63,229,3.465,230,2.63,231,2.538,232,2.732,233,2.63,234,3.132,242,4.204,243,3.583,245,4.657,246,4.872,248,4.018,252,5.792,541,3.385,755,2.978,1070,3.316,1345,6.302,1398,2.538,1547,4.657,1550,5.005,1553,3.855,1555,3.546,1566,4.324,1567,3.223,1568,6.306,1569,6.306,1570,6.302,1571,6.306,1572,3.855,1573,6.627,1574,4.68,1575,6.103,1576,6.103,1577,5.424,1578,4.324,1579,4.324,1580,7.497,1581,3.855,1582,3.855,1583,4.324,1584,4.324,1585,6.302,1586,5.441,1587,4.324,1588,4.324,1589,3.855,1590,4.324,1591,4.324,1592,3.316,1593,3.855,1594,2.978,1595,3.546,1596,3.316,1597,3.855,1598,2.378,1599,2.732,1600,3.316,1601,4.324,1602,3.855,1603,3.855,1604,4.324,1605,4.324,1606,4.324,1607,4.324,1608,4.324,1609,6.103,1610,4.324,1611,4.324,1612,4.324]],["title/injectables/CategoriesService.html",[0,0.724,1547,3.13]],["body/injectables/CategoriesService.html",[0,0.81,2,1.176,3,0.035,4,0.03,5,0.035,7,0.11,8,0.797,9,2.809,11,1.657,14,0.595,16,1.242,17,0.006,18,0.609,19,1.119,22,1.198,28,0.174,30,1.221,32,0.34,33,1.244,35,1.573,36,0.509,37,1.97,38,1.399,47,3.123,49,1.458,50,0.035,51,0.088,54,1.022,55,1.97,58,2.176,60,0.594,64,2.497,65,2.137,66,1.632,67,1.672,72,2.854,77,0.003,78,0.003,93,2.894,103,0.771,104,1.638,123,1.573,124,1.206,309,1.725,382,2.178,403,3.898,404,3.51,414,1.458,541,4.331,746,2.895,953,3.253,954,3.142,955,3.142,956,3.142,1143,2.937,1471,3.041,1547,3.505,1555,2.937,1567,1.632,1568,5.665,1569,4.746,1570,5.769,1571,5.665,1572,3.192,1573,5.394,1580,5.665,1581,4.746,1585,5.769,1589,3.192,1597,3.192,1598,1.97,1599,2.263,1613,3.58,1614,5.323,1615,5.323,1616,5.323,1617,3.58,1618,3.58,1619,5.323,1620,3.58,1621,3.58,1622,3.58,1623,5.323,1624,3.58,1625,5.323,1626,5.323,1627,3.58,1628,5.323,1629,3.58,1630,5.665,1631,5.769,1632,3.58,1633,5.323,1634,7.879,1635,3.192,1636,3.58,1637,3.58,1638,6.353,1639,5.323,1640,3.58,1641,6.353,1642,3.58,1643,6.353,1644,6.353,1645,6.353,1646,6.353,1647,6.353,1648,6.353,1649,6.353,1650,7.025,1651,3.58,1652,3.58,1653,3.58,1654,3.58,1655,3.58,1656,3.855,1657,3.58,1658,4.746,1659,5.665,1660,5.665,1661,5.665,1662,5.665,1663,3.192,1664,3.192,1665,3.192,1666,3.192,1667,3.192]],["title/classes/Category.html",[51,0.117,541,2.275]],["body/classes/Category.html",[3,0.047,4,0.041,5,0.047,7,0.149,8,0.988,14,0.633,17,0.006,28,0.207,30,0.725,32,0.32,50,0.047,51,0.12,54,2.145,60,0.848,77,0.004,78,0.004,104,0.947,111,3.084,112,1.788,118,1.044,121,0.74,124,0.89,125,1.939,129,3.636,309,1.849,451,2.961,541,3.162,543,3.332,549,3.269,550,1.974,586,2.478,587,3.345,588,4.289,611,4.344,612,4.143,628,2.94,629,2.94,651,3.878,652,2.157,653,2.873,658,2.108,659,2.017,661,2.157,664,2.157,665,4.909,952,6.573,953,3.367,954,3.367,955,3.367,956,3.367,1465,4.379,1481,3.597,1485,6.188,1493,3.062,1507,4.174,1513,3.717,1567,2.209,1599,3.062,1668,4.846,1669,4.846,1670,4.846,1671,4.846,1672,4.846,1673,4.846,1674,4.846,1675,4.846,1676,2.752,1677,4.846]],["title/interfaces/CategoryCreationAtrb.html",[302,0.914,1676,2.698]],["body/interfaces/CategoryCreationAtrb.html",[3,0.051,4,0.044,5,0.051,7,0.162,17,0.006,18,0.521,28,0.184,50,0.091,60,0.95,77,0.004,78,0.004,121,0.782,124,1.273,128,1.714,302,1.799,303,1.794,309,1.827,311,2.027,313,2.457,746,3.57,953,3.732,954,3.732,955,3.732,956,3.732,1188,3.342,1471,3.75,1481,2.519,1526,2.585,1567,2.398,1598,3.84,1676,3.964,1678,3.201,1679,2.988,1680,3.62,1681,2.398,1682,4.098,1683,3.522,1684,4.098,1685,3.522,1686,2.988,1687,4.098,1688,2.988,1689,3.726,1690,4.098,1691,2.519,1692,3.84,1693,2.895,1694,3.089,1695,3.201]],["title/classes/ChangeDto.html",[51,0.117,1293,3.645]],["body/classes/ChangeDto.html",[3,0.059,4,0.051,5,0.059,7,0.185,14,0.542,17,0.006,28,0.168,32,0.349,50,0.059,51,0.188,60,0.822,77,0.005,78,0.005,103,1.995,118,1.3,121,0.855,125,1.698,126,3.245,128,2.158,136,3.558,137,2.177,139,3.336,140,2.22,141,3.245,316,3.541,865,3.658,1293,5.85,1696,6.035,1697,5.089,1698,5.554,1699,4.991,1700,6.257,1701,5.525,1702,6.055,1703,6.366,1704,3.912,1705,6.366,1706,4.95,1707,6.035,1708,6.055,1709,6.035,1710,3.558,1711,4.371,1712,4.95,1713,4.371,1714,4.95]],["title/interfaces/CodeDto.html",[302,0.914,718,2.614]],["body/interfaces/CodeDto.html",[3,0.056,4,0.048,5,0.056,7,0.177,17,0.006,18,0.61,28,0.21,32,0.229,43,2.266,45,2.466,50,0.091,60,0.936,77,0.005,78,0.005,92,1.825,100,2.449,107,4.27,121,0.829,122,1.999,124,1.164,132,1.975,133,2.305,212,2.623,287,3.268,302,1.788,303,1.962,308,2.737,309,1.792,310,2.789,311,2.376,352,3.073,353,2.827,511,2.296,663,3.268,718,4.072,1103,3.502,1440,3.638,1441,3.791,1442,4.503,1443,4.678,1444,4.678,1445,4.678,1446,3.638,1447,3.638,1448,3.268,1449,3.638]],["title/classes/Colour.html",[51,0.117,537,2.334]],["body/classes/Colour.html",[3,0.045,4,0.039,5,0.045,7,0.142,8,0.957,14,0.637,17,0.006,28,0.209,30,0.692,32,0.314,50,0.045,51,0.114,54,2.093,60,0.862,77,0.004,78,0.004,104,0.904,111,3.117,112,1.763,118,0.997,121,0.717,124,0.862,125,1.96,129,3.67,309,1.819,451,2.986,537,3.142,539,3.317,549,3.223,550,1.884,586,2.4,587,3.264,588,4.317,611,4.415,612,4.182,628,2.847,629,2.847,651,3.92,652,2.059,653,2.783,658,2.012,659,1.925,661,2.059,664,2.059,665,5.052,952,6.5,953,3.312,954,3.312,955,3.312,956,3.312,1465,4.455,1481,3.51,1485,6.068,1493,2.923,1507,4.042,1513,3.547,1599,2.923,1688,2.626,1689,4.433,1691,2.214,1715,4.626,1716,4.626,1717,4.626,1718,4.626,1719,4.626,1720,4.626,1721,4.626,1722,4.626,1723,4.626,1724,4.626]],["title/interfaces/ColourCreationAtrb.html",[302,0.914,1688,2.698]],["body/interfaces/ColourCreationAtrb.html",[3,0.051,4,0.044,5,0.051,7,0.16,17,0.006,18,0.517,28,0.191,50,0.091,60,0.95,77,0.004,78,0.004,121,0.776,124,1.271,128,1.701,302,1.795,303,1.774,309,1.819,311,2.012,313,2.429,746,3.55,953,3.724,954,3.724,955,3.724,956,3.724,1188,3.317,1471,3.729,1481,2.491,1526,2.556,1567,2.371,1598,3.812,1676,2.954,1678,3.165,1679,2.954,1680,3.593,1681,2.371,1682,4.068,1683,3.495,1684,4.068,1685,3.495,1686,2.954,1687,4.068,1688,3.934,1689,4.617,1690,4.068,1691,2.491,1692,3.812,1693,2.862,1694,3.055,1695,3.165]],["title/controllers/ColoursController.html",[143,2.115,1551,3.898]],["body/controllers/ColoursController.html",[3,0.042,4,0.037,5,0.042,7,0.133,8,0.915,14,0.546,16,1.078,17,0.006,18,0.528,19,0.971,28,0.191,30,1.151,32,0.379,36,0.616,43,1.858,50,0.042,51,0.107,77,0.004,78,0.004,80,5.571,93,2.799,102,2.024,103,0.934,104,1.503,124,1.134,125,1.712,137,1.564,143,1.93,145,1.886,147,2.545,155,5.899,160,5.465,161,5.465,184,3.719,185,4.861,186,2.986,187,2.855,188,2.74,190,4.879,191,2.462,192,2.637,194,4.879,195,4.879,197,4.679,198,2.855,199,2.855,208,2.462,209,2.637,210,2.545,211,2.637,212,1.976,213,2.986,214,2.545,215,2.986,216,2.986,217,2.986,218,5.261,219,2.855,220,2.855,221,2.74,222,2.385,226,2.462,227,2.637,228,2.637,229,3.471,230,2.637,231,2.545,232,2.74,233,2.637,234,3.14,242,4.212,243,3.589,245,4.664,246,4.879,248,4.026,252,5.797,537,3.479,755,2.986,1070,3.325,1345,6.309,1398,2.545,1548,4.879,1551,5.015,1557,3.865,1559,3.556,1574,4.689,1577,5.432,1582,3.865,1586,5.451,1592,3.325,1593,3.865,1594,2.986,1595,3.556,1596,3.325,1599,2.74,1600,3.325,1602,3.865,1603,3.865,1691,3.39,1692,2.385,1725,4.335,1726,5.451,1727,6.315,1728,6.309,1729,6.315,1730,3.865,1731,6.632,1732,6.114,1733,6.114,1734,4.335,1735,4.335,1736,7.504,1737,3.865,1738,4.335,1739,4.335,1740,6.309,1741,4.335,1742,4.335,1743,3.865,1744,4.335,1745,4.335,1746,3.865,1747,4.335,1748,4.335,1749,4.335,1750,4.335,1751,4.335,1752,4.335,1753,4.335,1754,6.114,1755,4.335,1756,4.335,1757,4.335]],["title/injectables/ColoursService.html",[0,0.724,1548,3.274]],["body/injectables/ColoursService.html",[0,0.803,2,1.162,3,0.034,4,0.03,5,0.034,7,0.109,8,0.789,9,2.805,11,1.643,14,0.593,16,1.237,17,0.006,18,0.606,19,1.115,22,1.184,28,0.173,30,1.216,32,0.339,33,1.229,35,1.559,36,0.503,37,1.946,38,1.382,47,3.11,49,1.441,50,0.034,51,0.087,54,1.01,55,1.946,58,2.169,60,0.59,64,2.486,65,2.128,66,1.612,67,1.652,72,2.846,77,0.003,78,0.003,93,2.888,103,0.762,104,1.632,123,1.559,124,1.203,309,1.718,382,2.152,403,3.879,404,3.492,414,1.441,537,4.434,746,2.875,953,3.241,954,3.128,955,3.128,956,3.128,1143,2.902,1471,3.02,1548,3.634,1559,2.902,1567,1.612,1599,2.235,1630,5.624,1635,3.154,1650,6.993,1656,3.821,1658,4.703,1659,5.624,1660,5.624,1661,5.624,1662,5.624,1663,3.154,1664,3.154,1665,3.154,1666,3.154,1667,3.154,1689,3.992,1692,1.946,1726,4.703,1727,4.703,1728,5.735,1729,5.624,1730,4.703,1731,5.362,1736,4.703,1737,4.703,1740,5.735,1743,3.154,1746,3.154,1758,3.538,1759,5.275,1760,5.275,1761,5.275,1762,3.538,1763,3.538,1764,5.275,1765,3.538,1766,3.538,1767,5.275,1768,3.538,1769,5.275,1770,3.538,1771,3.538,1772,5.275,1773,3.538,1774,5.275,1775,5.735,1776,3.538,1777,5.275,1778,7.844,1779,3.538,1780,3.538,1781,6.308,1782,5.275,1783,3.538,1784,6.308,1785,3.538,1786,6.308,1787,6.308,1788,6.308,1789,6.308,1790,6.308,1791,6.308,1792,6.308,1793,6.308,1794,3.538,1795,3.538,1796,3.538,1797,3.538,1798,3.538,1799,3.538,1800,3.538,1801,5.275,1802,3.538]],["title/modules/CoreModule.html",[474,1.783,531,2.79]],["body/modules/CoreModule.html",[3,0.041,4,0.035,5,0.041,17,0.007,18,0.311,32,0.397,36,0.592,38,1.628,43,1.56,44,2.047,45,1.697,46,2.047,50,0.041,51,0.103,77,0.004,78,0.004,112,1.705,132,1.586,133,1.851,208,3.376,209,2.536,210,2.447,211,2.536,223,1.855,276,2.529,277,2.162,278,2.536,293,2.323,334,4.435,451,1.275,473,3.019,474,2.231,475,3.084,476,1.995,477,2.921,481,4.57,484,3.084,485,2.103,486,2.103,488,3.084,496,4.894,500,2.225,501,2.921,502,2.293,505,3.084,506,2.447,511,1.662,512,2.846,513,2.225,514,3.084,515,2.447,516,2.529,517,2.225,518,2.999,519,2.367,520,2.293,527,2.225,528,2.162,531,5.462,533,2.999,534,2.367,535,2.999,536,2.367,537,2.921,538,2.634,539,3.084,540,2.634,541,2.846,542,2.367,543,2.999,544,2.367,545,2.776,546,2.367,547,2.999,548,2.367,549,2.231,550,1.698,552,2.921,554,3.758,555,2.367,557,2.162,558,2.225,559,2.225,560,2.225,561,2.225,562,2.225,563,2.293,848,4.56,969,5.723,1145,3.197,1146,3.197,1155,3.758,1157,3.491,1163,2.447,1166,3.197,1169,4.877,1170,5.302,1172,3.717,1173,4.56,1175,2.871,1185,3.717,1186,3.197,1196,3.197,1199,5.316,1200,5.685,1411,5.302,1421,3.019,1803,3.717,1804,3.717,1805,5.723,1806,4.169,1807,4.169,1808,4.169,1809,4.169,1810,4.169,1811,3.717,1812,2.871,1813,4.169,1814,4.169,1815,4.877,1816,4.169,1817,4.169,1818,4.169,1819,4.169,1820,4.169,1821,4.169,1822,4.169,1823,4.169,1824,4.169,1825,4.169,1826,4.169,1827,3.717]],["title/injectables/CorsMiddleware.html",[0,0.724,1167,3.645]],["body/injectables/CorsMiddleware.html",[0,0.905,2,1.37,3,0.041,4,0.035,5,0.041,7,0.128,8,1.037,10,3.376,14,0.492,16,0.905,17,0.006,18,0.444,19,0.816,21,2.367,22,2.674,23,3.925,24,3.364,25,3.117,26,3.712,28,0.153,29,2.55,30,0.89,32,0.3,34,3.271,35,1.757,36,0.592,39,1.735,49,1.698,50,0.041,51,0.103,52,1.275,54,1.979,58,1.995,60,0.747,64,1.321,65,1.881,68,5.262,69,4.217,70,3.936,77,0.004,78,0.004,92,1.885,103,1.493,104,1.477,112,0.855,121,0.666,123,1.232,127,2.065,183,2.536,191,2.367,302,0.801,319,3.919,364,3.529,414,1.698,451,1.275,459,2.536,575,2.162,667,3.376,857,2.634,865,1.735,890,3.019,1090,3.197,1092,3.419,1093,3.419,1114,4.096,1123,4.38,1124,4.56,1167,4.56,1393,2.745,1395,2.871,1396,5.723,1397,2.871,1398,2.447,1400,5.206,1401,2.871,1594,2.871,1828,3.717,1829,6.739,1830,5.302,1831,6.554,1832,4.169,1833,6.199,1834,4.169,1835,5.302,1836,4.169,1837,4.877,1838,4.56,1839,3.197,1840,4.56,1841,3.717,1842,3.717,1843,3.717,1844,3.419,1845,3.717,1846,3.419,1847,3.419,1848,3.717,1849,3.717,1850,6.371,1851,5.685,1852,3.717,1853,3.717,1854,3.717,1855,3.717,1856,6.739,1857,3.717,1858,3.717,1859,6.739,1860,3.717,1861,4.877,1862,3.717,1863,3.717,1864,3.717,1865,3.419,1866,3.717,1867,3.717,1868,3.717,1869,3.197,1870,5.685,1871,3.717,1872,5.302,1873,8.704,1874,8.704,1875,5.685,1876,5.685,1877,6.18,1878,5.685,1879,5.302,1880,5.302,1881,3.717,1882,3.419,1883,3.717,1884,3.717,1885,3.419,1886,3.717,1887,3.717,1888,5.302,1889,5.302,1890,5.302,1891,3.717,1892,3.717,1893,3.717,1894,3.717,1895,3.717,1896,3.717,1897,3.717,1898,5.302,1899,3.717,1900,3.717,1901,3.419]],["title/classes/CreateAccessTokenDto.html",[51,0.117,1902,4.237]],["body/classes/CreateAccessTokenDto.html",[3,0.05,4,0.043,5,0.05,7,0.157,14,0.61,17,0.006,19,1.213,28,0.19,32,0.327,50,0.05,51,0.169,60,0.77,77,0.004,78,0.004,92,2.166,103,2.09,112,1.402,118,1.098,121,0.766,122,2.678,124,0.921,125,1.912,126,3.654,127,2.374,128,2.307,129,2.67,130,3.511,132,2.198,133,2.401,136,3.762,137,1.839,138,3.88,139,2.725,140,1.875,141,3.654,142,2.44,212,3.754,308,2.392,414,2.783,429,3.511,511,2.033,631,5.241,632,5.241,633,5.241,634,5.241,635,5.241,655,3.544,657,3.356,672,3.356,865,2.844,1446,4.872,1447,4.872,1699,5.021,1704,3.667,1710,2.907,1713,3.692,1902,6.094,1903,5.097,1904,4.157,1905,3.511,1906,6.092,1907,4.708,1908,4.708,1909,4.708,1910,4.708,1911,4.526,1912,5.097,1913,3.909,1914,5.097,1915,5.097,1916,5.097,1917,5.241,1918,4.181,1919,5.097,1920,5.097,1921,4.95,1922,4.319,1923,4.95,1924,3.692,1925,3.511]],["title/classes/CreateAdminDto.html",[51,0.117,153,3.442]],["body/classes/CreateAdminDto.html",[3,0.039,4,0.034,5,0.039,7,0.124,14,0.637,17,0.006,18,0.589,28,0.198,32,0.271,43,1.061,50,0.039,51,0.144,59,3.106,60,0.857,69,3.539,77,0.004,78,0.004,92,2.749,103,2.123,118,0.871,121,0.652,124,0.545,125,1.996,126,3.814,128,2.361,132,1.552,136,3.861,137,1.459,139,3.28,140,1.488,141,3.814,153,4.214,305,3.534,306,3.534,307,3.534,308,2.165,310,2.323,311,1.979,316,2.912,429,2.786,451,2.653,609,7.523,638,4.462,655,3.017,657,2.663,672,2.663,734,3.317,835,4.001,865,3.609,1698,4.71,1704,3.318,1710,1.72,1904,3.539,1911,4.001,1917,4.462,1918,3.317,1921,5.72,1926,8.093,1927,4.044,1928,4.044,1929,7.333,1930,5.818,1931,5.818,1932,4.044,1933,6.646,1934,4.044,1935,4.044,1936,4.044,1937,3.101,1938,3.937,1939,4.462,1940,4.462,1941,4.462,1942,4.044,1943,4.044,1944,4.044,1945,4.008,1946,5.188,1947,6.646,1948,6.646,1949,7.898,1950,4.044,1951,4.044,1952,4.044,1953,4.462,1954,3.317,1955,5.716,1956,5.716,1957,4.462,1958,6.076,1959,4.044,1960,5.188,1961,4.044,1962,2.935,1963,3.101,1964,3.101,1965,3.101]],["title/classes/CreateAdminRefreshTokenDto.html",[51,0.117,349,3.898]],["body/classes/CreateAdminRefreshTokenDto.html",[3,0.049,4,0.042,5,0.049,7,0.153,14,0.606,17,0.006,25,1.871,28,0.188,32,0.324,43,2.455,50,0.049,51,0.166,60,0.763,77,0.004,78,0.004,92,2.135,103,2.084,112,1.382,118,1.075,121,0.755,124,0.908,125,1.898,126,3.627,127,2.339,128,2.298,129,2.631,130,3.436,132,2.034,133,2.374,136,3.738,137,1.8,138,3.824,139,3.041,140,1.835,141,3.627,142,2.387,212,3.886,239,2.744,240,3.493,308,2.371,313,3.56,314,5.253,349,5.524,378,4.989,511,1.989,598,4.435,599,4.435,600,4.435,601,4.435,602,4.435,603,4.435,604,4.435,605,4.435,606,4.435,607,4.435,608,4.435,609,6.697,621,6.005,655,3.493,667,2.832,668,3.436,669,2.744,734,4.091,865,2.803,1710,2.122,1911,4.477,1913,3.825,1921,4.878,1922,4.256,1924,3.613,1926,7.835,1937,3.825,1938,3.224,1939,5.165,1940,5.165,1941,5.165,1964,3.825,1966,4.447,1967,5.848,1968,4.091,1969,4.988,1970,4.447,1971,4.988,1972,4.447,1973,4.091,1974,4.988]],["title/classes/CreateCategoryDto.html",[51,0.117,1573,3.645]],["body/classes/CreateCategoryDto.html",[3,0.058,4,0.05,5,0.058,7,0.182,14,0.62,17,0.006,28,0.193,32,0.235,50,0.058,51,0.186,60,0.886,77,0.005,78,0.005,118,1.276,121,0.845,125,1.943,139,3.595,140,2.179,953,3.308,954,3.308,955,3.308,956,3.308,1573,5.782,1704,4.219,1710,2.52,1938,4.537,1962,4.404,1975,5.924,1976,6.695,1977,5.059,1978,5.136,1979,5.99,1980,5.924,1981,5.924,1982,5.924,1983,5.924,1984,3.604,1985,3.744,1986,5.517,1987,5.517]],["title/classes/CreateColourDto.html",[51,0.117,1731,3.645]],["body/classes/CreateColourDto.html",[3,0.055,4,0.047,5,0.055,7,0.173,14,0.63,17,0.006,28,0.196,32,0.224,50,0.055,51,0.18,60,0.894,77,0.005,78,0.005,118,1.214,121,0.818,125,1.976,139,3.627,140,2.074,953,3.231,954,3.231,955,3.231,956,3.231,1689,4.324,1704,4.257,1710,2.398,1731,5.6,1938,4.578,1962,4.478,1976,6.808,1977,5.105,1978,5.16,1979,6.044,1984,3.429,1985,3.562,1986,5.61,1987,5.61,1988,5.637,1989,5.637,1990,5.637,1991,5.637,1992,5.637,1993,5.637]],["title/classes/CreateOwnerDto.html",[51,0.117,1994,3.645]],["body/classes/CreateOwnerDto.html",[3,0.043,4,0.037,5,0.043,7,0.134,14,0.616,17,0.006,18,0.607,25,1.64,28,0.191,32,0.282,50,0.043,51,0.152,59,3.242,60,0.883,77,0.004,78,0.004,103,2.097,118,0.942,121,0.689,124,0.589,125,1.929,126,3.687,128,2.319,136,3.764,137,1.577,139,3.457,140,1.608,141,3.687,239,2.404,240,3.189,308,2.242,310,2.425,311,2.066,316,3.015,429,3.011,598,4.049,599,4.049,600,4.049,601,4.049,602,4.049,603,4.049,604,4.049,605,4.049,606,4.049,607,4.049,608,4.049,638,4.715,655,3.189,657,2.878,667,2.481,668,3.011,669,2.404,672,2.878,865,3.794,1698,4.878,1702,4.236,1704,3.436,1708,4.9,1710,1.859,1904,3.74,1911,4.176,1917,4.715,1918,3.585,1937,3.352,1938,4.039,1939,4.715,1940,4.715,1941,4.715,1945,4.236,1946,5.482,1947,6.883,1948,6.883,1953,4.715,1954,3.585,1955,5.92,1956,5.92,1957,4.715,1958,6.343,1960,5.482,1962,3.102,1963,3.352,1964,3.352,1968,3.585,1994,4.715,1995,4.37,1996,4.684,1997,7.241,1998,4.37,1999,4.37,2000,8.135,2001,4.37,2002,4.37,2003,4.37,2004,6.149,2005,4.37,2006,4.37,2007,4.37,2008,3.352,2009,4.37]],["title/classes/CreateOwnerRefreshTokenDto.html",[51,0.117,2010,3.898]],["body/classes/CreateOwnerRefreshTokenDto.html",[3,0.05,4,0.043,5,0.05,7,0.158,14,0.611,17,0.006,25,1.924,28,0.19,32,0.328,43,1.801,45,1.959,50,0.05,51,0.169,60,0.772,77,0.004,78,0.004,92,2.175,103,2.091,112,1.408,118,1.105,121,0.769,124,0.925,125,1.916,126,3.662,127,2.384,128,2.31,129,2.681,130,3.533,132,2.064,133,2.408,136,3.768,137,1.851,138,3.897,139,3.085,140,1.887,141,3.662,142,2.455,212,3.923,239,2.822,240,3.559,308,2.398,511,2.046,598,4.519,599,4.519,600,4.519,601,4.519,602,4.519,603,4.519,604,4.519,605,4.519,606,4.519,607,4.519,608,4.519,655,3.559,667,2.912,668,3.533,669,2.822,865,2.856,1681,3.525,1710,2.182,1911,4.541,1913,3.934,1921,4.971,1922,4.337,1924,3.715,1937,3.934,1938,3.285,1939,5.263,1940,5.263,1941,5.263,1964,3.934,1967,5.932,1968,4.207,1973,4.207,1996,5.093,1997,6.334,2008,3.934,2010,5.629,2011,5.129,2012,5.629,2013,5.129,2014,5.129,2015,5.129,2016,5.129,2017,5.129]],["title/classes/CreateProductDto.html",[51,0.117,2018,3.898]],["body/classes/CreateProductDto.html",[3,0.046,4,0.04,5,0.046,7,0.145,14,0.629,17,0.006,28,0.211,32,0.258,50,0.046,51,0.197,60,0.888,77,0.004,78,0.004,103,2.095,111,2.627,112,1.639,118,1.02,121,0.728,124,1.216,125,1.972,128,1.823,138,4.214,139,3.534,140,1.741,919,4.28,953,2.96,954,2.96,955,2.96,956,2.96,1526,3.646,1567,2.962,1680,3.849,1683,3.744,1685,3.278,1691,3.111,1704,3.556,1710,2.013,1922,4.69,1923,5.376,1938,3.825,1962,4.03,1977,4.265,1978,4.143,2018,5.331,2019,4.22,2020,6.868,2021,4.733,2022,3.882,2023,4.733,2024,4.22,2025,4.22,2026,4.733,2027,4.733,2028,4.733,2029,4.733,2030,4.733,2031,3.117,2032,2.879,2033,6.497,2034,5.113,2035,5.787,2036,5.787,2037,5.376,2038,6.127,2039,3.63,2040,3.63,2041,5.504,2042,4.984,2043,4.984,2044,3.63]],["title/classes/CreateReviewDto.html",[51,0.117,2045,3.442]],["body/classes/CreateReviewDto.html",[3,0.06,4,0.052,5,0.06,7,0.19,14,0.601,17,0.006,18,0.631,28,0.187,32,0.246,50,0.06,51,0.191,60,0.871,77,0.005,78,0.005,103,2.078,118,1.332,121,0.868,125,1.883,139,3.536,140,2.275,311,2.457,1188,4.05,1704,4.147,1710,2.63,1938,4.46,1962,4.267,1977,4.973,1978,4.832,2033,6.108,2035,6.748,2036,6.127,2045,5.611,2046,6.184,2047,8.46,2048,8.46,2049,6.184,2050,6.184,2051,6.184]],["title/classes/CreateRoleDto.html",[51,0.117,2052,3.645]],["body/classes/CreateRoleDto.html",[3,0.06,4,0.052,5,0.06,7,0.19,14,0.55,17,0.006,28,0.171,32,0.308,43,2.327,50,0.06,51,0.191,60,0.829,77,0.005,78,0.005,103,2.007,118,1.332,121,0.868,123,2.499,125,1.724,126,3.295,128,2.347,133,1.925,136,3.598,137,2.231,139,3.374,140,2.275,141,3.295,1699,4.399,1704,3.947,1710,2.63,1938,4.245,1962,3.908,1977,4.733,1978,4.957,1979,5.604,1984,3.762,1985,3.908,1986,4.895,1987,4.895,2052,5.941,2053,6.184,2054,6.907,2055,6.184,2056,6.184,2057,6.184,2058,6.184]],["title/classes/CreateUserDto.html",[51,0.117,2059,3.898]],["body/classes/CreateUserDto.html",[3,0.045,4,0.039,5,0.045,7,0.142,14,0.59,17,0.006,18,0.591,28,0.184,32,0.292,50,0.045,51,0.158,60,0.863,77,0.004,78,0.004,103,2.064,118,0.999,121,0.718,124,0.625,125,1.851,126,3.536,128,2.266,132,1.71,136,3.657,137,1.674,139,3.429,140,1.706,141,3.536,308,2.3,310,2.504,311,2.3,316,3.094,414,2.611,655,3.809,865,3.84,1456,3.805,1698,4.05,1699,5.099,1701,3.36,1702,4.415,1703,4.642,1704,4.107,1705,4.642,1708,5.059,1710,3.124,1904,3.899,1905,3.195,1906,5.923,1907,4.415,1908,4.415,1909,4.415,1910,4.415,1911,4.312,1925,3.195,1938,3.792,1945,4.415,1953,4.915,1955,6.075,1956,6.075,1957,4.915,1962,3.233,1963,3.557,1977,4.228,1978,4.657,1979,5.006,1984,2.822,1985,2.931,1986,4.05,1987,4.05,2059,5.257,2060,7.666,2061,4.639,2062,4.136,2063,6.024,2064,4.136,2065,4.639,2066,5.715,2067,4.639,2068,6.548,2069,4.639,2070,4.915,2071,3.805,2072,6.024,2073,4.136,2074,3.557]],["title/classes/CreateUserRefreshTokenDto.html",[51,0.117,2075,3.898]],["body/classes/CreateUserRefreshTokenDto.html",[3,0.052,4,0.045,5,0.052,7,0.164,14,0.596,17,0.006,28,0.185,32,0.333,43,1.85,50,0.052,51,0.174,60,0.659,77,0.004,78,0.004,92,2.234,103,2.071,112,1.446,118,1.151,121,0.79,122,2.741,124,0.95,125,1.868,126,3.57,127,2.448,128,2.278,129,2.754,130,3.679,132,2.528,133,2.457,136,3.711,137,1.927,138,4.002,139,2.811,140,1.965,141,3.57,142,2.556,212,3.976,308,2.437,378,4.954,414,2.871,511,2.13,655,3.656,865,2.933,1699,4.002,1704,3.735,1710,2.998,1904,4.288,1905,3.679,1906,6.173,1907,4.856,1908,4.856,1909,4.856,1910,4.856,1911,4.633,1913,4.095,1921,5.106,1922,4.455,1924,3.868,1925,3.679,1966,4.761,1967,6.052,1970,4.761,1972,4.761,1973,4.38,2060,7.779,2074,4.095,2075,5.782,2076,5.34,2077,5.34]],["title/classes/Currencies.html",[51,0.117,552,2.334]],["body/classes/Currencies.html",[3,0.043,4,0.037,5,0.043,7,0.135,8,0.926,14,0.649,16,0.942,17,0.006,18,0.462,19,0.849,28,0.207,30,1.16,32,0.284,45,2.742,50,0.043,51,0.109,54,2.416,60,0.725,77,0.004,78,0.004,104,1.515,111,2.89,112,1.94,118,0.951,121,0.693,124,1.244,125,1.884,126,1.877,127,2.15,128,1.52,129,3.64,136,2.633,137,1.592,141,1.877,142,2.112,309,1.788,353,4.269,451,2.794,552,3.512,586,2.322,587,3.183,588,4.148,596,2.684,611,4.373,612,3.948,627,2.905,628,2.755,629,2.755,651,3.767,652,1.964,653,2.693,654,3.04,656,3.765,658,1.919,659,1.836,661,1.964,664,2.755,671,3.383,1045,6.696,1465,3.708,1530,3.383,1539,4.264,1681,3.72,2078,4.412,2079,7.279,2080,6.911,2081,6.358,2082,6.19,2083,5.077,2084,4.412,2085,4.412,2086,4.412,2087,4.412,2088,4.412,2089,4.412,2090,4.412,2091,4.412,2092,6.19,2093,4.412,2094,5.077,2095,4.412,2096,3.934,2097,4.412,2098,3.934,2099,5.865,2100,5.865]],["title/injectables/CurrencyService.html",[0,0.724,481,2.614]],["body/injectables/CurrencyService.html",[0,0.808,2,1.171,3,0.035,4,0.03,5,0.035,7,0.109,8,0.794,9,2.643,11,1.652,13,5.197,14,0.559,16,0.965,17,0.007,18,0.473,19,0.869,28,0.14,30,1.05,31,1.587,32,0.34,35,1.567,36,0.506,37,1.961,38,1.393,45,2.004,50,0.035,51,0.088,54,2.245,55,2.918,56,2.924,57,2.116,58,2.205,60,0.656,64,2.225,65,1.439,72,2.968,77,0.003,78,0.003,93,2.493,95,1.849,103,1.365,104,1.592,107,2.477,112,1.3,121,0.594,123,1.053,124,0.946,125,0.793,319,3.64,353,2.606,364,1.664,391,2.024,394,1.991,399,3.968,414,2.161,451,1.091,459,2.169,481,2.918,552,3.686,555,2.024,743,2.734,1045,4.351,1063,3.843,1064,6.69,1065,2.924,1066,7.264,1101,6.247,1114,5.418,1118,6.258,1123,4.435,1124,5.383,1125,6.258,1126,6.258,1127,6.258,1128,6.258,1129,6.258,1130,6.258,1131,6.258,1448,2.024,1681,1.625,1812,2.456,1901,4.351,2079,4.73,2101,3.565,2102,5.305,2103,6.258,2104,7.019,2105,5.305,2106,3.565,2107,5.305,2108,4.73,2109,5.305,2110,3.565,2111,3.565,2112,3.565,2113,4.73,2114,4.73,2115,3.565,2116,5.305,2117,3.565,2118,5.305,2119,2.924,2120,2.924,2121,3.178,2122,2.924,2123,2.924,2124,3.178,2125,5.197,2126,3.178,2127,3.565,2128,5.305,2129,3.565,2130,5.305,2131,5.305,2132,5.305,2133,3.565,2134,5.305,2135,5.305,2136,7.019,2137,5.305,2138,5.305,2139,5.305,2140,5.305,2141,7.019,2142,5.305,2143,5.305,2144,5.305,2145,5.305,2146,5.305,2147,5.305,2148,5.305,2149,5.305,2150,5.305,2151,7.019,2152,6.337,2153,6.337,2154,3.565,2155,3.565,2156,5.305,2157,4.73,2158,3.565,2159,3.565,2160,3.565]],["title/guards/EditContentGuard.html",[79,2.79,2161,3.898]],["body/guards/EditContentGuard.html",[0,1.087,3,0.053,4,0.046,5,0.053,7,0.167,8,1.069,9,1.609,11,1.696,14,0.507,16,1.087,17,0.006,18,0.533,19,0.98,28,0.206,29,2.004,30,0.815,32,0.358,33,1.892,35,2.11,36,0.774,42,2.748,43,2.091,45,2.039,47,3.05,48,2.676,49,2.219,50,0.053,51,0.134,52,1.667,58,2.111,64,2.526,65,2.162,72,1.758,77,0.005,78,0.005,81,3.093,83,4.857,84,5.155,85,4.178,86,4.546,87,4.857,88,3.198,89,4.802,90,4.857,91,4.055,92,2.264,93,2.264,94,4.383,95,2.825,96,5.477,97,5.173,98,5.858,99,3.314,100,3.598,101,2.908,102,2.543,103,1.174,104,1.557,105,3.198,106,3.587,107,2.543,108,3.753,109,3.704,110,3.704,111,1.928,112,1.466,113,4.468,115,3.753,116,3.587,798,4.857,2161,5.858,2162,7.105]],["title/guards/EditWebsiteGuard.html",[79,2.79,2163,4.237]],["body/guards/EditWebsiteGuard.html",[0,1.087,3,0.053,4,0.046,5,0.053,7,0.167,8,1.069,9,1.609,11,1.696,14,0.507,16,1.087,17,0.006,18,0.533,19,0.98,28,0.206,29,2.004,30,0.815,32,0.358,33,1.892,35,2.11,36,0.774,42,2.748,43,2.091,45,2.039,47,3.05,48,2.676,49,2.219,50,0.053,51,0.134,52,1.667,58,2.111,64,2.526,65,2.162,72,1.758,77,0.005,78,0.005,81,3.093,84,5.155,85,4.178,86,4.546,88,3.198,89,4.802,91,4.055,92,2.264,93,2.264,94,4.383,95,2.825,96,5.477,97,5.173,98,5.858,99,3.314,100,3.598,101,2.908,102,2.543,103,1.174,104,1.557,105,3.198,106,3.587,107,2.543,108,3.753,109,3.704,110,3.704,111,1.928,112,1.466,113,4.468,115,3.753,116,3.587,799,4.857,2162,7.105,2163,6.368,2164,5.448,2165,5.448,2166,5.448]],["title/injectables/FilesService.html",[0,0.724,1805,3.274]],["body/injectables/FilesService.html",[0,0.892,2,1.342,3,0.04,4,0.034,5,0.09,7,0.125,8,0.877,9,2.438,14,0.563,16,1.207,17,0.006,18,0.634,19,1.087,22,3.007,25,1.533,28,0.188,29,2.917,30,1.186,32,0.338,33,1.419,35,1.731,36,0.58,39,1.7,50,0.04,51,0.145,57,1.629,58,2.243,60,0.813,64,1.857,65,1.59,77,0.004,78,0.004,92,1.857,93,1.857,103,1.263,104,1.339,112,1.536,239,2.247,240,2.118,241,3.441,302,0.785,389,3.703,390,4.169,394,1.533,395,1.861,396,3.859,399,4.288,451,1.25,463,2.958,495,3.462,573,2.671,856,4.245,912,4.252,919,3.859,977,6.099,992,2.814,1095,2.958,1243,3.642,1244,3.35,1245,3.35,1246,5.621,1247,3.35,1248,3.35,1249,4.807,1250,3.35,1251,5.621,1252,3.35,1253,3.35,1254,3.35,1255,3.35,1256,3.35,1481,2.805,1805,4.037,2167,3.642,2168,5.86,2169,5.86,2170,7.069,2171,6.111,2172,5.86,2173,5.225,2174,4.085,2175,5.225,2176,7.895,2177,4.085,2178,4.085,2179,4.085,2180,4.085,2181,4.085,2182,4.085,2183,5.225,2184,4.085,2185,7.578,2186,6.111,2187,3.642,2188,3.642,2189,3.35,2190,7.069,2191,3.642,2192,3.642,2193,3.642,2194,3.642,2195,3.642,2196,3.642,2197,6.111,2198,3.642,2199,3.642,2200,3.132,2201,3.642,2202,3.642,2203,3.642,2204,3.642,2205,3.642,2206,3.642,2207,3.642,2208,5.225,2209,3.642,2210,3.642,2211,3.642,2212,5.225,2213,5.225,2214,5.225,2215,5.225,2216,3.642,2217,3.642,2218,3.642,2219,3.642,2220,3.642]],["title/classes/GarbageCollectingProcessor.html",[51,0.117,1815,3.898]],["body/classes/GarbageCollectingProcessor.html",[3,0.064,4,0.055,5,0.064,7,0.202,8,1.204,14,0.571,16,1,17,0.006,18,0.49,19,0.901,28,0.145,30,0.983,32,0.345,36,0.934,50,0.064,51,0.162,54,2.482,65,2.182,77,0.005,78,0.005,103,1.873,118,1.416,121,0.901,123,1.942,125,1.463,319,4.698,364,3.068,495,2.676,1186,5.04,1815,6.598,2221,6.572,2222,8.044,2223,8.044,2224,6.572,2225,8.044,2226,7.623,2227,8.044,2228,6.572,2229,6.572,2230,6.572,2231,5.859,2232,6.572,2233,6.572,2234,6.572,2235,6.572,2236,6.572,2237,5.859]],["title/injectables/GlobalInterceptor.html",[0,0.724,1173,3.645]],["body/injectables/GlobalInterceptor.html",[0,1.214,2,2.129,3,0.063,4,0.055,5,0.063,7,0.199,8,1.193,14,0.46,16,0.986,17,0.006,18,0.483,19,0.889,25,3.242,28,0.143,30,0.97,32,0.343,36,0.921,50,0.063,51,0.16,52,1.982,65,1.758,77,0.005,78,0.005,89,5.119,91,3.679,94,4.753,95,3.36,104,1.688,295,4.693,395,3.634,1023,4.693,1065,5.315,1173,6.116,2238,6.48,2239,7.975,2240,7.975,2241,9.015,2242,6.48,2243,7.975,2244,7.975,2245,8.64,2246,7.975,2247,6.48,2248,6.48,2249,6.48,2250,6.48]],["title/classes/HttpExceptionFilter.html",[51,0.117,1412,3.898]],["body/classes/HttpExceptionFilter.html",[3,0.063,4,0.054,5,0.063,7,0.197,8,1.188,14,0.457,16,0.979,17,0.006,18,0.48,19,0.882,22,2.656,24,3.532,28,0.142,30,0.962,32,0.315,36,0.913,39,2.675,50,0.063,51,0.159,52,2.428,58,2.306,65,1.744,77,0.005,78,0.005,118,1.385,243,4.659,394,3.23,495,2.618,573,2.93,851,6.602,855,6.086,856,6.512,857,5.44,858,6.894,860,4.93,863,4.93,864,4.93,865,3.582,866,4.93,867,5.732,869,4.656,870,4.93,871,4.93,901,5.273,902,5.273,910,5.273,964,5.732,1412,6.509,2251,7.936,2252,6.429,2253,6.429,2254,6.429]],["title/interfaces/ITelegramModuleAsyncOptions.html",[302,0.914,2255,3.645]],["body/interfaces/ITelegramModuleAsyncOptions.html",[3,0.068,4,0.059,5,0.068,7,0.214,17,0.006,19,1.143,28,0.184,32,0.277,36,0.99,50,0.081,60,0.779,77,0.005,78,0.005,93,2.208,121,0.934,241,4.892,302,1.602,303,2.375,405,3.832,586,3.126,1207,7.086,2255,6.39,2256,6.211,2257,7.43,2258,7.086,2259,6.211,2260,6.39,2261,5.714,2262,5.342]],["title/interfaces/ITelegramOptions.html",[302,0.914,2260,3.645]],["body/interfaces/ITelegramOptions.html",[3,0.068,4,0.059,5,0.068,7,0.215,17,0.006,28,0.184,32,0.278,36,0.994,50,0.081,60,0.897,77,0.005,78,0.005,93,2.217,121,0.936,302,1.606,303,2.385,405,5.09,586,2.625,1207,5.365,2255,5.365,2256,6.238,2257,6.238,2258,5.365,2259,6.238,2260,6.85,2261,7.589,2262,5.365]],["title/injectables/InitializeEmailMiddleware.html",[0,0.724,1417,3.898]],["body/injectables/InitializeEmailMiddleware.html",[0,1.026,2,1.641,3,0.049,4,0.042,5,0.049,7,0.153,8,1.009,9,2.255,10,4.333,11,2.099,14,0.479,16,1.026,17,0.006,18,0.503,19,0.925,21,2.836,22,2.855,23,4.191,24,3.637,25,3.429,26,4.013,28,0.194,29,3.006,30,0.748,31,3.001,32,0.363,33,1.735,34,3.709,35,1.992,36,0.71,39,2.079,42,2.52,43,2.002,45,2.179,47,2.921,48,2.454,49,2.035,50,0.049,51,0.123,52,1.528,54,2.179,57,1.992,58,2.04,64,2.137,65,1.829,66,2.276,67,2.332,68,3.289,69,3.039,70,2.836,71,3.618,72,2.463,77,0.004,78,0.004,86,4.533,99,3.039,103,1.644,104,1.597,107,2.332,132,1.799,308,2.478,394,1.874,395,2.276,403,2.591,404,2.332,441,3.831,482,4.992,483,4.122,510,3.441,551,3.039,689,5.025,833,4.097,844,4.454,847,2.933,1067,3.831,1381,4.454,1417,5.53,2263,6.804,2264,4.995,2265,4.995,2266,4.995,2267,6.742,2268,6.742,2269,4.995,2270,7.632,2271,3.831,2272,4.454,2273,4.097]],["title/interfaces/InitializeUser.html",[302,0.914,2274,3.003]],["body/interfaces/InitializeUser.html",[3,0.057,4,0.05,5,0.057,7,0.181,17,0.006,18,0.686,28,0.203,50,0.09,59,2.68,60,0.948,77,0.005,78,0.005,92,2.76,121,0.841,122,2.043,123,1.738,124,1.011,128,1.444,293,2.298,302,1.768,303,2.005,305,3.05,306,3.05,307,3.05,308,2.749,309,1.288,310,3.136,311,2.671,316,3.593,613,3.05,835,3.453,1697,5.297,2274,4.743,2275,4.051,2276,3.717,2277,3.717,2278,3.873,2279,3.717,2280,3.578]],["title/injectables/InitializeUserMiddleware.html",[0,0.724,507,2.891]],["body/injectables/InitializeUserMiddleware.html",[0,1.027,2,1.644,3,0.049,4,0.042,5,0.049,7,0.154,8,1.01,9,2.257,10,4.336,11,2.101,14,0.479,16,1.027,17,0.006,18,0.503,19,0.926,21,2.841,22,2.943,23,4.193,24,3.639,25,3.43,26,4.016,28,0.149,29,3.008,30,0.749,31,3.004,32,0.363,33,1.738,34,3.713,35,1.994,36,0.711,39,2.082,42,2.524,43,1.313,45,1.428,47,2.923,48,2.457,49,2.038,50,0.049,51,0.123,52,1.531,54,2.18,57,1.995,58,2.131,64,2.139,65,1.831,66,3.076,67,3.151,72,2.465,77,0.004,78,0.004,103,1.646,104,1.598,107,2.336,108,5.261,267,5.166,270,6.264,272,5.176,274,3.837,275,4.646,276,2.871,287,3.832,288,3.837,289,4.888,290,3.837,293,2.636,394,1.877,395,2.28,507,4.106,516,2.871,667,2.841,828,4.461,830,4.461,847,2.937,1067,3.837,1080,4.461,1407,5.384,1416,4.103,1850,3.837,1869,3.837,1870,4.103,2263,6.81,2281,4.461,2282,5.92,2283,6.018,2284,5.003,2285,4.103,2286,6.749,2287,4.103,2288,5.003,2289,5.003,2290,4.461,2291,4.461,2292,4.461]],["title/guards/JwtAuthGuard.html",[79,2.79,197,2.891]],["body/guards/JwtAuthGuard.html",[0,1.077,3,0.052,4,0.045,5,0.052,7,0.165,8,1.058,9,1.586,11,1.671,14,0.502,16,1.077,17,0.006,18,0.528,19,0.97,28,0.156,29,1.974,30,0.803,32,0.356,33,1.864,35,2.09,36,0.762,42,2.707,47,3.345,48,2.636,49,2.186,50,0.052,51,0.132,52,1.642,57,2.14,58,2.182,64,2.665,65,2.281,72,1.732,77,0.005,78,0.005,81,3.047,84,5.13,88,3.151,89,4.774,91,4.016,92,2.242,93,2.242,94,4.351,95,2.783,100,3.817,101,2.864,102,2.506,104,1.382,105,3.151,109,4.361,110,4.361,112,1.101,127,1.864,197,4.302,273,6.702,289,3.887,394,2.014,395,2.446,414,2.186,1330,5.459,1442,4.302,2287,4.402,2293,7.91,2294,5.367,2295,4.402,2296,5.367,2297,5.367,2298,3.697,2299,5.801,2300,4.402,2301,6.488,2302,5.801,2303,5.367,2304,4.785,2305,4.785]],["title/classes/JwtRefreshTokenDeletedEvent.html",[51,0.117,1139,3.645]],["body/classes/JwtRefreshTokenDeletedEvent.html",[3,0.062,4,0.053,5,0.062,7,0.195,8,1.178,14,0.635,16,0.965,17,0.006,18,0.699,19,0.87,28,0.198,30,0.949,50,0.062,51,0.157,60,0.911,77,0.005,78,0.005,118,1.366,121,0.882,122,3.301,124,1.24,128,2.334,378,5.223,405,5.06,495,2.582,1139,6.034,2306,9.199,2307,6.341,2308,7.869,2309,6.341,2310,6.341,2311,6.341,2312,7.869,2313,6.341,2314,5.653,2315,5.653,2316,5.653]],["title/injectables/LocationMiddleware.html",[0,0.724,1197,3.898]],["body/injectables/LocationMiddleware.html",[0,1.02,2,1.626,3,0.048,4,0.042,5,0.048,7,0.152,8,1.003,9,1.462,10,3.804,11,1.541,14,0.539,16,1.02,17,0.006,18,0.5,19,0.919,21,2.81,22,2.724,23,4.178,24,3.623,25,3.364,26,3.998,28,0.168,29,2.794,30,0.741,32,0.367,34,3.686,35,1.98,36,0.703,39,2.06,49,2.016,50,0.048,51,0.122,52,1.514,54,2.168,57,1.974,58,2.123,65,1.818,72,2.162,77,0.004,78,0.004,102,2.311,103,1.754,104,1.484,121,0.751,123,1.462,127,1.719,319,4.221,364,2.311,394,1.857,395,2.256,481,4.823,495,2.016,573,3.054,847,2.906,1026,4.06,1060,5.974,1061,4.06,1062,4.06,1063,3.585,1087,4.413,1089,4.413,1090,5.138,1094,4.413,1095,3.585,1096,4.413,1097,4.413,1101,6.523,1114,3.41,1197,5.496,1393,3.259,1421,3.585,1448,2.81,1838,5.138,1839,3.796,1840,6.242,1844,5.496,1846,4.06,1847,4.06,2121,4.413,2124,5.974,2125,5.496,2157,4.413,2317,4.95,2318,4.95,2319,6.7,2320,4.95,2321,6.7,2322,4.95,2323,4.95,2324,4.95,2325,7.596,2326,6.7,2327,6.7,2328,6.7,2329,6.7,2330,4.95,2331,6.7,2332,4.95,2333,4.95,2334,4.95,2335,8.14,2336,4.95,2337,4.95,2338,6.7,2339,4.95,2340,4.95,2341,4.95,2342,4.413]],["title/classes/LoginDto.html",[51,0.117,723,3.274]],["body/classes/LoginDto.html",[3,0.058,4,0.05,5,0.058,7,0.183,14,0.537,17,0.006,28,0.167,32,0.33,50,0.058,51,0.187,60,0.817,77,0.005,78,0.005,103,1.987,118,1.281,121,0.847,125,1.682,126,3.215,128,2.147,136,3.534,137,2.145,139,3.313,140,2.187,141,3.215,308,2.539,316,3.415,414,3.078,655,3.919,723,5.206,865,3.638,1698,4.776,1699,4.964,1701,4.307,1702,5.206,1703,5.474,1704,4.106,1705,5.474,1708,5.723,1710,3.534,1713,4.307,1904,4.597,1905,4.096,1906,6.354,1907,5.206,1908,5.206,1909,5.206,1910,5.206,1911,4.878,1925,4.096,2343,5.946,2344,5.946,2345,5.946]],["title/modules/MailModule.html",[474,1.783,1155,3.003]],["body/modules/MailModule.html",[3,0.045,4,0.039,5,0.045,17,0.007,32,0.394,36,0.662,38,1.82,43,1.687,44,2.288,45,1.835,46,2.288,50,0.045,51,0.115,77,0.004,78,0.004,86,4.343,99,2.834,112,1.51,132,1.964,133,2.002,223,2.074,237,3.573,276,2.734,277,2.416,293,2.511,335,5.722,451,1.425,474,2.412,475,3.334,476,2.23,477,3.158,482,4.888,483,4.343,484,3.334,485,2.35,486,2.35,488,3.334,489,4.062,496,4.736,500,2.487,501,3.158,502,2.563,505,3.334,506,2.735,510,3.209,511,1.858,512,3.077,513,2.487,514,3.334,515,2.735,516,2.734,517,2.487,518,3.243,519,2.645,520,2.563,527,2.487,528,2.416,533,3.243,534,2.645,535,3.243,536,2.645,545,3.001,546,2.645,547,3.243,548,2.645,549,2.412,550,1.897,551,2.834,552,3.158,553,3.374,557,2.416,558,2.487,559,2.487,560,2.487,561,2.487,562,2.487,563,2.563,857,2.944,1076,4.154,1155,5.987,1163,2.735,1222,4.154,1869,3.573,2346,4.154,2347,4.154,2348,4.659,2349,4.659,2350,4.659,2351,4.659,2352,3.821,2353,3.821,2354,4.659,2355,4.659,2356,4.659,2357,4.659,2358,4.659,2359,4.659,2360,4.659,2361,4.659,2362,4.659,2363,4.659,2364,4.659,2365,4.659,2366,4.659,2367,4.659,2368,4.659]],["title/injectables/MailService.html",[0,0.724,335,2.891]],["body/injectables/MailService.html",[0,0.348,2,0.423,3,0.037,4,0.011,5,0.013,7,0.039,8,0.342,9,1.716,11,0.712,14,0.305,16,0.571,17,0.006,18,0.28,19,0.514,28,0.083,30,0.463,31,1.018,32,0.241,33,0.447,35,0.676,36,0.183,43,0.811,45,0.882,47,1.435,49,0.524,50,0.013,51,0.032,54,1.473,57,1.233,58,1.189,60,0.659,62,2.129,64,1.509,65,1.494,69,5.072,72,1.537,77,0.001,78,0.001,86,2.603,99,0.782,103,1.112,121,0.256,123,0.38,124,0.417,127,0.795,132,0.61,184,5.671,240,3.861,282,0.847,316,0.502,319,1.944,335,1.392,364,0.6,369,1.657,382,0.782,394,1.16,395,1.409,403,1.603,404,1.443,429,3.28,441,0.986,482,2.93,483,1.891,485,0.649,510,0.886,551,0.782,653,3.239,667,4.002,689,2.035,779,3.343,941,1.576,943,1.755,947,1.147,951,0.986,952,2.239,953,1.233,954,1.233,955,1.233,956,1.233,1114,2.129,1211,2.756,1281,4.246,1319,1.147,1865,2.535,1875,7.413,1876,5.353,1878,2.535,1885,2.535,1917,1.755,1929,2.756,1933,2.04,1965,2.875,2271,0.986,2273,1.055,2352,1.055,2353,1.055,2369,1.286,2370,2.288,2371,2.288,2372,3.091,2373,1.286,2374,4.762,2375,2.288,2376,2.288,2377,1.286,2378,3.749,2379,2.288,2380,1.286,2381,1.286,2382,1.286,2383,2.288,2384,1.286,2385,1.286,2386,1.286,2387,1.286,2388,1.286,2389,3.091,2390,3.091,2391,3.091,2392,4.762,2393,2.288,2394,8.54,2395,3.091,2396,4.762,2397,2.288,2398,3.091,2399,3.091,2400,3.091,2401,3.091,2402,3.091,2403,3.091,2404,3.091,2405,3.091,2406,3.091,2407,3.091,2408,3.091,2409,3.091,2410,3.091,2411,3.091,2412,7.558,2413,4.762,2414,3.091,2415,3.091,2416,3.091,2417,3.091,2418,3.091,2419,3.091,2420,3.091,2421,3.091,2422,3.091,2423,3.091,2424,8.01,2425,8.392,2426,3.091,2427,3.091,2428,3.091,2429,3.091,2430,4.762,2431,3.091,2432,4.298,2433,10.014,2434,6.527,2435,3.091,2436,4.298,2437,4.762,2438,4.762,2439,2.288,2440,4.298,2441,3.091,2442,3.091,2443,3.091,2444,7.049,2445,7.049,2446,8.392,2447,7.049,2448,3.091,2449,8.218,2450,8.218,2451,8.218,2452,3.091,2453,4.762,2454,5.809,2455,4.762,2456,5.809,2457,8.218,2458,8.218,2459,5.809,2460,6.527,2461,6.527,2462,6.527,2463,3.091,2464,3.091,2465,3.091,2466,4.762,2467,8.312,2468,8.961,2469,7.049,2470,4.762,2471,7.193,2472,3.091,2473,6.285,2474,3.091,2475,3.091,2476,5.809,2477,3.091,2478,3.091,2479,3.091,2480,5.809,2481,5.809,2482,3.091,2483,3.091,2484,3.091,2485,3.091,2486,3.091,2487,6.527,2488,3.091,2489,5.809,2490,3.091,2491,3.091,2492,3.091,2493,3.091,2494,7.049,2495,3.091,2496,3.091,2497,3.091,2498,3.091,2499,3.091,2500,3.091,2501,3.091,2502,3.091,2503,3.091,2504,3.091,2505,4.762,2506,4.762,2507,7.049,2508,5.809,2509,4.762,2510,3.091,2511,5.809,2512,5.809,2513,4.762,2514,3.091,2515,3.091,2516,3.091,2517,3.091,2518,3.091,2519,4.762,2520,4.762,2521,4.762,2522,2.288,2523,2.288,2524,2.288,2525,2.288,2526,2.04,2527,2.288,2528,2.288,2529,2.04,2530,2.288,2531,2.04,2532,3.091,2533,3.091,2534,3.091,2535,3.091,2536,1.286,2537,1.286,2538,1.286,2539,1.286,2540,1.286]],["title/classes/MatchConstraint.html",[51,0.117,2541,4.237]],["body/classes/MatchConstraint.html",[3,0.062,4,0.054,5,0.062,7,0.197,8,1.185,14,0.455,16,0.975,17,0.006,18,0.591,19,0.878,28,0.141,30,0.958,32,0.254,50,0.077,51,0.195,52,2.422,58,1.976,60,0.74,70,3.636,77,0.005,78,0.005,92,2.03,104,1.547,118,1.38,123,2.339,140,2.912,241,3.759,1711,4.638,1833,5.252,2262,6.591,2541,7.662,2542,5.709,2543,8.594,2544,6.493,2545,7.917,2546,8.978,2547,6.403,2548,7.917,2549,8.005,2550,7.917,2551,5.709,2552,7.059,2553,6.403,2554,6.403,2555,6.403,2556,5.709,2557,6.403,2558,6.403,2559,7.917,2560,6.403,2561,6.403]],["title/interfaces/Msg.html",[302,0.914,990,3.898]],["body/interfaces/Msg.html",[0,1.067,3,0.052,4,0.045,5,0.052,7,0.163,9,2.071,17,0.007,28,0.155,32,0.312,35,2.071,36,0.752,50,0.052,51,0.131,54,2.001,58,1.962,60,0.735,62,3.007,65,1.437,72,1.709,77,0.004,78,0.004,93,2.222,103,1.141,121,0.785,124,0.714,127,1.84,241,3.11,302,1.018,303,1.806,309,1.16,319,3.636,398,4.617,414,2.856,912,4.75,969,3.649,970,4.344,973,4.723,974,4.723,975,5.751,977,3.649,978,4.723,980,4.723,982,4.723,984,6.251,985,6.251,986,4.723,987,4.723,988,6.251,989,4.723,990,7.137,991,7.459,992,3.649,993,4.723,994,4.723,995,4.723,996,5.751,997,6.251,998,4.723,999,4.723,1000,4.723,1001,4.723,1002,4.723,1003,4.723,1004,4.723,1005,4.344,1006,4.723,1007,4.723,1008,7.459,1009,4.723,1010,4.723,1011,4.723,1012,4.723,1013,7.459,1014,4.723,1015,4.723,1016,4.723,1017,4.723,1018,4.723,1019,4.344,1020,4.723,1021,6.251,1022,4.723,1023,5.078,1024,4.344,1025,4.723,1026,4.344,1027,4.723,1028,4.723,1029,4.723,1030,4.723,1031,4.723,1032,4.723,1033,4.723,1034,4.723]],["title/classes/Nested.html",[51,0.117,2034,3.274]],["body/classes/Nested.html",[3,0.047,4,0.041,5,0.047,7,0.148,14,0.572,17,0.006,28,0.209,32,0.261,50,0.047,51,0.199,60,0.908,77,0.004,78,0.004,103,1.918,112,1.652,118,1.038,121,0.737,124,1.172,125,1.792,128,1.183,138,4.253,139,3.55,140,1.772,953,3.36,954,3.36,955,3.36,956,3.36,1526,2.366,1567,2.195,1680,2.498,1683,2.43,1685,2.43,1691,2.306,1704,4.034,1710,2.049,1922,4.734,1923,5.426,1938,4.338,1962,4.06,1977,4.837,1978,4.7,2018,3.951,2019,4.295,2031,3.172,2032,2.931,2033,6.516,2034,5.545,2035,6.564,2036,6.564,2037,5.426,2038,6.173,2039,3.694,2040,3.694,2041,5.545,2042,5.045,2043,5.045,2044,3.694,2562,7.177,2563,4.818,2564,4.818,2565,4.818,2566,4.818]],["title/classes/Nested-1.html",[51,0.098,127,1.373,2034,2.724]],["body/classes/Nested-1.html",[3,0.047,4,0.041,5,0.047,7,0.148,14,0.572,17,0.006,28,0.209,32,0.261,50,0.047,51,0.199,60,0.908,77,0.004,78,0.004,103,1.918,112,1.652,118,1.038,121,0.737,124,1.172,125,1.792,128,1.183,138,4.253,139,3.55,140,1.772,953,3.36,954,3.36,955,3.36,956,3.36,1526,2.366,1567,2.195,1680,2.498,1683,2.43,1685,2.43,1691,2.306,1704,4.034,1710,2.049,1922,4.734,1923,5.426,1938,4.338,1962,4.06,1977,4.837,1978,4.7,2031,3.172,2032,2.931,2033,6.516,2034,5.545,2035,6.564,2036,6.564,2037,5.426,2038,6.173,2039,3.694,2040,3.694,2041,5.545,2042,5.045,2043,5.045,2044,3.694,2562,7.177,2567,4.295,2568,4.818,2569,4.818,2570,4.818,2571,4.818,2572,3.951]],["title/classes/NotFoundError.html",[51,0.117,887,3.645]],["body/classes/NotFoundError.html",[3,0.06,4,0.052,5,0.06,7,0.188,11,1.907,14,0.598,16,0.932,17,0.006,18,0.457,19,0.84,28,0.186,32,0.243,33,2.128,36,0.87,50,0.082,51,0.208,60,0.9,77,0.005,78,0.005,118,1.32,121,0.863,123,1.81,124,1.135,364,2.86,399,3.09,404,2.86,573,3.839,586,3.316,865,3.205,869,6.401,874,7.128,875,6.316,876,5.024,877,6.403,878,5.024,882,4.698,883,5.024,884,5.024,885,5.024,886,5.024,887,5.906,888,6.316,889,5.024,890,4.437,891,4.22,892,5.024,893,5.305,894,5.024,1451,6.866,1452,5.462,1453,5.462,2573,6.126]],["title/classes/Order.html",[51,0.117,545,2.219]],["body/classes/Order.html",[3,0.045,4,0.039,5,0.045,7,0.141,8,0.954,14,0.661,16,0.7,17,0.006,18,0.343,19,0.631,28,0.207,30,1.181,32,0.313,50,0.045,51,0.114,54,2.598,60,0.851,77,0.004,78,0.004,104,1.542,111,2.934,112,1.76,118,0.991,121,0.714,122,2.879,124,1.155,125,1.957,129,3.083,132,2.458,223,2.047,309,1.815,451,1.949,545,2.975,547,4.435,549,2.961,550,1.873,586,2.391,587,3.254,588,4.05,596,2.798,612,3.989,628,2.836,629,2.836,651,3.689,652,2.047,653,2.772,654,3.13,656,3.876,658,2.001,659,1.914,661,2.047,664,3.254,1465,3.791,1467,2.906,1481,3.5,1482,7.39,1486,6.474,1489,3.772,1493,2.906,1506,5.226,1507,4.027,1515,3.772,2237,4.101,2574,4.599,2575,7.311,2576,8.792,2577,7.893,2578,7.893,2579,6.372,2580,4.599,2581,4.599,2582,4.599,2583,4.599,2584,4.599,2585,4.599,2586,4.599,2587,4.599,2588,4.599,2589,4.599,2590,6.372,2591,4.599,2592,4.599,2593,3.772,2594,4.599,2595,4.599,2596,4.599,2597,7.311,2598,4.599]],["title/classes/OrderProduct.html",[51,0.117,547,2.397]],["body/classes/OrderProduct.html",[3,0.046,4,0.04,5,0.046,7,0.145,8,0.971,14,0.65,17,0.006,28,0.208,30,0.971,32,0.294,50,0.046,51,0.116,54,2.467,77,0.004,78,0.004,104,1.267,111,2.961,112,1.9,118,1.017,121,0.727,124,1.248,125,1.971,129,3.523,309,1.832,451,2.759,545,4.323,547,3.272,549,3.474,550,1.922,586,2.434,587,3.299,588,4.274,596,3.946,611,4.138,612,4.121,628,2.887,629,2.887,651,3.847,652,2.101,653,2.822,654,3.64,656,4.508,658,2.053,659,1.964,661,2.101,664,3.723,1464,4.911,1465,3.364,1526,4.109,1528,7.115,1530,4.974,1535,3.871,1539,5.497,1542,4.208,1683,4.22,2599,4.72,2600,8.365,2601,7.98,2602,4.72,2603,4.72,2604,4.72,2605,4.72,2606,4.72,2607,4.72,2608,4.72,2609,4.72,2610,4.72,2611,4.72,2612,4.72,2613,4.72]],["title/controllers/OrdersController.html",[143,2.115,2614,3.898]],["body/controllers/OrdersController.html",[3,0.071,4,0.061,5,0.071,17,0.006,32,0.361,36,1.034,50,0.071,51,0.18,77,0.005,78,0.005,143,3.24,145,3.166,147,4.273,192,4.427,226,4.132,227,4.427,228,4.427,229,4.856,230,4.427,231,4.273,233,4.427,2593,5.97,2614,7.015,2615,7.278,2616,7.278]],["title/modules/OrdersModule.html",[474,1.783,1156,3.003]],["body/modules/OrdersModule.html",[3,0.051,4,0.044,5,0.051,17,0.006,32,0.396,36,0.743,38,2.042,43,1.824,44,2.568,45,1.984,46,2.568,50,0.051,51,0.129,77,0.004,78,0.004,112,1.426,132,1.855,133,2.164,145,3.024,223,2.327,276,2.957,277,2.711,293,2.715,474,2.608,476,2.503,477,3.414,484,3.605,485,2.637,486,2.637,488,3.605,496,5.001,500,2.791,501,3.836,502,2.876,511,2.085,512,3.327,513,2.791,514,3.605,515,3.07,516,2.957,517,2.791,518,3.506,519,2.969,520,2.876,527,2.791,528,2.711,533,3.506,534,2.969,535,3.506,536,2.969,541,3.327,542,2.969,543,3.506,544,2.969,545,3.245,547,3.506,549,2.608,550,2.129,557,2.711,558,2.791,559,2.791,560,2.791,561,2.791,562,2.791,563,2.876,1153,4.393,1154,4.229,1156,5.629,1177,4.01,1523,4.288,2614,6.405,2617,4.662,2618,4.662,2619,6.831,2620,5.228,2621,5.228,2622,5.228,2623,5.228,2624,5.228]],["title/injectables/OrdersService.html",[0,0.724,2619,3.645]],["body/injectables/OrdersService.html",[0,1.325,2,2.463,3,0.073,4,0.063,5,0.073,17,0.006,32,0.298,35,2.571,36,1.065,50,0.073,51,0.185,77,0.006,78,0.006,391,4.256,2619,6.673,2625,7.497]],["title/classes/Owner.html",[45,1.357,51,0.117]],["body/classes/Owner.html",[3,0.02,4,0.017,5,0.02,7,0.062,8,0.509,14,0.668,16,1.12,17,0.006,18,0.63,19,1.009,25,0.763,28,0.208,30,1.317,32,0.283,43,0.892,45,1.251,50,0.02,51,0.084,54,2.57,59,2.807,60,0.902,74,6.113,77,0.002,78,0.002,92,2.258,104,1.719,111,2.839,112,1.886,118,0.438,121,0.381,124,1.224,125,1.86,126,3.353,127,1.181,128,2.199,129,3.533,133,1.595,136,3.411,137,0.734,141,3.353,142,0.974,212,1.997,239,1.119,240,1.764,308,1.789,309,1.248,310,2.1,311,1.991,316,2.555,444,4.201,451,2.74,471,5.053,511,0.811,512,1.628,513,1.086,516,2.62,549,2.9,550,0.828,552,3.212,586,1.276,587,1.951,588,3.942,598,2.239,599,2.239,600,2.239,601,2.239,602,2.239,603,2.239,604,2.239,605,2.239,606,2.239,607,2.239,608,2.239,610,1.668,611,4.287,612,3.986,622,1.56,627,1.339,628,1.514,629,1.514,638,2.608,639,1.668,651,3.57,652,0.905,653,1.479,655,1.764,657,1.339,658,0.885,659,0.846,661,0.905,664,1.951,665,4.171,667,1.155,668,1.401,669,1.119,670,1.668,672,1.339,687,2.608,1481,2.098,1485,3.927,1489,3.594,1493,1.285,1506,4.201,1507,2.149,1513,2.608,1539,3.019,1698,3.893,1924,1.473,1945,2.342,1967,5.015,1996,4.306,1997,5.927,2012,2.789,2032,1.237,2070,2.608,2314,3.907,2626,2.034,2627,6.856,2628,4.382,2629,6.856,2630,3.401,2631,5.121,2632,5.121,2633,5.121,2634,5.121,2635,5.121,2636,4.566,2637,5.121,2638,5.121,2639,5.121,2640,5.121,2641,5.121,2642,3.401,2643,3.401,2644,3.401,2645,3.401,2646,3.032,2647,3.401,2648,3.401,2649,3.401,2650,5.121,2651,2.034,2652,2.034,2653,3.401,2654,2.034,2655,2.034,2656,2.034,2657,2.034,2658,2.034,2659,2.034,2660,2.034,2661,2.034,2662,2.034,2663,2.034,2664,2.034,2665,2.034,2666,2.034,2667,2.034,2668,2.034,2669,2.034,2670,2.034,2671,2.034,2672,2.034,2673,2.034,2674,2.034,2675,2.034,2676,2.034,2677,2.034,2678,2.034,2679,3.401,2680,2.034,2681,2.034,2682,2.034,2683,2.034,2684,2.034,2685,2.034,2686,2.034,2687,2.034,2688,2.034,2689,2.034,2690,2.034,2691,2.034,2692,2.034,2693,2.034,2694,3.401,2695,2.034,2696,3.401,2697,2.034,2698,3.401,2699,3.401,2700,2.034,2701,3.401,2702,2.034,2703,3.401,2704,2.034,2705,3.032,2706,2.034,2707,3.401,2708,2.034,2709,3.401,2710,2.034,2711,3.401,2712,2.034,2713,3.401,2714,1.56,2715,1.813,2716,2.034,2717,2.034,2718,2.034,2719,4.382,2720,4.382,2721,2.034,2722,2.034,2723,4.382,2724,4.382,2725,4.382,2726,4.382,2727,3.907,2728,4.382,2729,2.034,2730,2.034]],["title/guards/OwnerAdminGuard.html",[79,2.79,161,3.003]],["body/guards/OwnerAdminGuard.html",[0,0.871,3,0.039,4,0.033,5,0.039,7,0.121,8,0.856,9,1.167,11,1.781,14,0.406,16,0.871,17,0.007,18,0.427,19,0.785,22,1.322,28,0.19,29,1.453,30,0.591,32,0.363,33,1.372,35,1.69,36,0.561,42,1.993,43,1.501,45,1.633,47,3.495,48,1.94,49,1.609,50,0.039,51,0.098,52,1.209,54,1.92,58,2.255,60,0.731,64,2.863,65,2.451,66,1.8,67,1.844,72,2.379,77,0.004,78,0.004,81,2.243,84,4.594,88,2.319,89,4.186,91,3.248,92,1.813,93,1.813,94,3.7,95,2.049,97,4.144,100,3.579,101,2.109,103,1.233,104,1.529,105,2.319,106,3.767,107,1.844,108,2.721,109,4.625,110,4.625,111,1.398,112,1.38,123,1.69,128,1.405,133,1.781,161,3.615,214,2.319,267,4.659,268,6.453,270,5.517,272,4.387,274,3.03,275,3.48,276,2.433,277,2.049,278,2.403,279,4.387,280,3.03,281,5.079,282,2.601,283,4.387,284,3.03,285,3.03,286,3.03,287,3.248,288,3.03,289,4.872,290,3.03,291,3.24,292,3.24,293,3.187,295,4.144,296,4.692,297,3.522,298,5.517,299,3.522,300,4.692,301,4.387,451,1.209,516,2.433,517,2.109,1407,4.855,1416,3.24,2281,3.522,2283,5.101,2290,3.522,2291,3.522,2731,6.726,2732,3.951,2733,3.951,2734,3.951,2735,7.373,2736,7.373,2737,3.951,2738,3.951]],["title/interfaces/OwnerCreationAttrbs.html",[302,0.914,2714,3.645]],["body/interfaces/OwnerCreationAttrbs.html",[3,0.064,4,0.055,5,0.064,7,0.201,17,0.006,18,0.675,28,0.209,50,0.078,59,4.123,60,0.944,77,0.005,78,0.005,121,0.899,124,0.882,302,1.542,303,2.231,308,2.696,310,3.165,311,2.627,316,3.534,516,2.784,1681,2.983,1996,4.31,2714,6.154,2739,5.836,2740,5.019]],["title/injectables/OwnerJwtRefreshService.html",[0,0.724,1407,3.13]],["body/injectables/OwnerJwtRefreshService.html",[0,0.566,2,0.744,3,0.022,4,0.019,5,0.022,7,0.07,8,0.556,9,2.737,11,1.158,14,0.577,16,1.191,17,0.006,18,0.584,19,1.073,22,1.244,28,0.173,30,1.171,31,2.69,32,0.328,33,0.787,35,1.098,36,0.322,37,1.246,38,0.885,45,1.959,47,3.057,50,0.022,51,0.056,54,2.357,55,1.246,57,2.41,58,2.226,60,0.912,62,1.286,64,2.48,65,2.206,66,1.694,67,1.736,72,2.895,77,0.002,78,0.002,93,2.741,100,1.581,103,1.478,104,1.613,121,0.416,123,1.397,124,1.128,142,4.269,308,2.431,309,0.814,310,2.888,318,1.858,319,2.838,320,3.049,321,4.216,322,3.879,323,4.88,324,3.879,325,3.879,326,3.879,327,3.049,328,3.879,329,3.879,330,3.879,331,1.858,332,5.327,333,3.879,334,2.921,335,4.174,337,3.315,340,2.019,345,1.858,346,3.879,348,1.858,350,2.019,352,3.467,353,3.19,354,2.019,361,2.019,363,2.019,364,1.057,366,1.431,367,3.626,368,3.626,370,2.851,371,3.626,372,2.851,373,2.851,374,1.858,375,1.737,380,1.641,381,1.378,382,1.378,383,1.858,384,1.858,385,1.858,386,1.858,387,1.858,388,1.858,389,2.349,390,1.378,391,1.286,393,1.858,394,2.267,395,2.754,396,3.98,397,4.635,398,3.98,399,3.049,403,2.838,404,2.555,405,4.799,408,1.858,409,3.879,410,3.049,411,3.049,414,0.922,416,4.489,420,4.957,425,3.049,429,1.56,431,1.858,432,2.019,434,2.019,435,2.019,438,1.56,439,2.019,440,2.019,444,1.858,445,2.019,449,1.858,451,1.137,454,2.019,455,3.049,456,1.858,457,1.858,458,1.858,459,2.262,460,1.858,461,1.56,462,1.858,463,1.641,464,1.858,465,1.858,466,1.858,467,1.858,468,1.858,469,2.019,470,2.019,471,3.049,472,2.019,473,1.641,482,3.896,516,3.894,943,3.626,1407,2.448,1681,3.48,1996,5.259,2008,1.737,2010,4.489,2271,2.851,2342,2.019,2741,8.258,2742,4.729,2743,3.718,2744,2.265,2745,2.265,2746,2.265,2747,2.265,2748,2.265,2749,2.265,2750,2.265,2751,3.718,2752,2.265,2753,2.265,2754,2.265,2755,4.729,2756,2.265,2757,2.265,2758,3.718,2759,2.265,2760,2.019,2761,2.265,2762,2.265,2763,4.729,2764,2.265,2765,3.718,2766,3.718,2767,2.265,2768,2.265,2769,2.265,2770,2.265,2771,2.265,2772,2.265,2773,5.473,2774,4.729,2775,2.265,2776,2.265,2777,4.88,2778,2.265,2779,2.265,2780,2.019,2781,2.265,2782,2.265,2783,2.265,2784,2.019,2785,2.265,2786,2.265,2787,2.265,2788,3.718,2789,3.718,2790,2.265,2791,2.265,2792,2.265,2793,2.265]],["title/modules/OwnerModule.html",[474,1.783,505,2.465]],["body/modules/OwnerModule.html",[3,0.041,4,0.035,5,0.041,17,0.007,32,0.395,36,0.594,38,1.635,43,1.564,44,2.055,45,1.702,50,0.041,51,0.103,77,0.004,78,0.004,86,4.196,99,2.546,112,1.425,132,1.591,133,2.163,223,1.863,275,2.546,276,2.536,277,2.17,293,2.329,334,4.44,335,5.061,366,2.644,380,3.031,381,2.546,474,2.237,475,3.092,476,2.003,477,2.929,481,5.078,482,5.241,483,4.196,484,3.092,485,2.111,486,2.111,488,3.092,489,3.768,496,4.402,500,2.234,501,2.929,502,2.302,503,3.209,504,3.432,505,5.065,511,1.669,512,3.325,513,2.234,514,4.314,515,2.457,516,2.955,520,2.302,527,2.234,528,2.17,531,3.501,532,2.883,533,3.008,534,2.376,535,3.008,536,2.376,537,2.929,538,2.644,539,3.092,540,2.644,541,2.854,542,2.376,543,3.008,544,2.376,545,2.784,546,2.376,547,3.008,548,2.376,549,2.237,550,1.704,551,2.546,552,2.929,554,2.644,555,2.376,557,3.092,558,2.234,559,2.234,560,2.234,561,2.234,562,2.234,563,2.302,564,3.209,565,3.209,568,3.209,569,3.209,624,3.209,1122,2.883,1163,2.457,1201,3.731,1202,3.731,1203,3.731,1204,3.731,1205,3.731,1407,6.078,1811,3.731,1812,2.883,1827,3.731,2119,3.432,2120,3.432,2760,3.731,2794,3.731,2795,3.731,2796,4.185,2797,3.731,2798,4.185,2799,4.185,2800,4.185,2801,4.185,2802,4.185,2803,4.185]],["title/classes/OwnerRefreshToken.html",[51,0.117,516,2.022]],["body/classes/OwnerRefreshToken.html",[3,0.031,4,0.027,5,0.031,7,0.097,8,0.723,14,0.653,16,1.003,17,0.006,18,0.491,19,0.904,25,1.181,28,0.206,30,1.236,32,0.262,45,2.407,50,0.031,51,0.078,54,2.358,60,0.885,77,0.003,78,0.003,104,1.614,111,2.852,112,1.786,118,0.678,121,0.541,124,1.156,125,1.839,126,3.427,127,2.288,128,2.227,129,3.48,136,3.514,137,1.135,141,3.427,142,3.955,239,1.731,240,2.504,308,2.178,309,1.556,310,2.557,352,4.3,353,4.058,378,2.741,405,1.731,451,2.774,516,3.321,586,1.812,587,2.615,588,4.093,591,5.404,592,5.404,594,3.96,595,3.96,596,1.914,598,3.179,599,3.179,600,3.179,601,3.179,602,3.179,603,3.179,604,3.179,605,3.179,606,3.179,607,3.179,608,3.179,610,2.581,611,4.166,612,4.036,618,3.96,619,2.581,622,2.413,624,3.703,625,2.581,627,2.072,628,2.149,629,2.149,631,3.703,632,3.703,633,3.703,634,3.703,635,3.703,636,2.581,639,2.581,647,3.96,649,3.96,651,3.677,652,1.401,653,2.1,654,2.372,655,2.504,656,2.937,657,2.072,658,1.369,659,1.31,661,1.401,663,1.787,664,2.149,665,3.574,666,2.581,667,1.787,668,2.168,669,1.731,670,2.581,671,2.413,672,2.072,673,4.818,676,4.818,1681,3.672,1996,5.142,1997,6.179,2012,3.96,2081,5.404,2083,3.96,2094,3.96,2096,2.806,2099,2.581,2100,4.818,2636,5.874,2646,4.305,2705,4.305,2715,2.806,2727,5.238,2740,2.413,2804,3.147,2805,6.588,2806,3.147,2807,3.147,2808,3.147,2809,3.147,2810,3.147,2811,3.147,2812,2.806,2813,3.147,2814,4.828,2815,3.147,2816,4.828,2817,3.147,2818,3.147,2819,3.147,2820,3.147,2821,3.147,2822,3.147,2823,3.147,2824,3.147,2825,3.147,2826,3.147,2827,3.147]],["title/interfaces/OwnerRefreshTokenCreationAttrbs.html",[302,0.914,2740,3.645]],["body/interfaces/OwnerRefreshTokenCreationAttrbs.html",[3,0.065,4,0.056,5,0.065,7,0.204,17,0.006,18,0.495,28,0.206,50,0.079,59,3.025,60,0.94,77,0.005,78,0.005,121,0.907,124,1.177,302,1.556,303,2.263,308,2.707,310,3.177,311,1.928,316,2.593,516,3.867,1681,4.143,1996,5.986,2714,5.091,2739,5.919,2740,6.207]],["title/injectables/OwnerService.html",[0,0.724,482,2.698]],["body/injectables/OwnerService.html",[0,0.539,2,0.701,3,0.021,4,0.018,5,0.021,7,0.066,8,0.53,9,2.805,11,1.102,13,3.72,14,0.6,16,1.255,17,0.006,18,0.653,19,1.131,22,2.112,28,0.182,30,1.234,31,2.349,32,0.336,33,0.741,35,1.046,36,0.303,37,1.174,38,0.834,45,2.721,47,2.864,50,0.021,51,0.053,54,2.412,55,1.947,56,1.75,58,2.293,59,3.409,60,0.819,62,2.575,64,2.433,65,2.169,66,2.876,67,2.946,72,3.044,73,4.044,75,1.903,76,1.637,77,0.002,78,0.002,93,2.755,100,2.489,101,1.889,103,1.507,104,1.711,109,1.107,110,1.107,111,1.605,112,1.535,115,2.438,116,2.331,121,0.397,123,1.559,124,0.978,125,0.475,127,1.575,128,0.869,133,2.081,281,2.438,295,2.564,308,2.172,309,0.467,310,2.55,311,1.028,316,2.922,319,2.737,364,0.996,382,1.298,389,2.866,390,1.298,391,1.212,403,1.836,404,1.653,438,1.47,451,1.387,461,4.347,473,1.546,481,3.677,482,2.01,495,1.442,511,0.851,552,1.739,678,3.478,680,3.156,685,2.714,686,3.72,687,2.714,690,3.478,691,3.335,699,3.285,702,3.156,712,2.714,713,3.853,717,2.903,718,3.219,723,3.635,725,2.714,726,3.156,729,2.714,730,2.714,731,2.714,733,2.903,735,1.903,736,1.75,737,1.75,743,4.488,772,2.903,777,2.903,778,1.75,784,1.75,786,2.903,806,2.903,807,1.75,813,1.75,815,1.75,818,1.75,821,3.72,822,3.72,823,3.72,824,4.8,825,1.75,912,2.575,927,3.156,928,3.156,937,3.156,943,3.478,1326,4.329,1656,1.546,1681,1.613,1812,1.47,1965,2.714,1994,5.737,2008,1.637,2108,4.044,2114,3.156,2119,1.75,2120,1.75,2122,1.75,2123,1.75,2126,1.903,2226,1.75,2271,4.488,2526,3.156,2777,5.959,2780,3.156,2784,1.903,2828,2.134,2829,3.54,2830,3.54,2831,3.54,2832,3.156,2833,3.54,2834,3.54,2835,3.54,2836,4.705,2837,3.54,2838,1.903,2839,5.626,2840,3.54,2841,2.134,2842,2.134,2843,3.54,2844,2.134,2845,3.54,2846,2.134,2847,3.54,2848,2.134,2849,3.54,2850,2.134,2851,3.156,2852,2.134,2853,2.134,2854,3.54,2855,2.134,2856,3.54,2857,2.134,2858,3.54,2859,2.134,2860,2.134,2861,2.134,2862,2.134,2863,2.134,2864,3.156,2865,4.044,2866,3.156,2867,3.156,2868,2.134,2869,3.54,2870,2.134,2871,3.54,2872,3.54,2873,2.134,2874,2.134,2875,1.903,2876,1.903,2877,1.75,2878,1.903,2879,1.903,2880,1.903,2881,1.903,2882,1.903,2883,1.903,2884,1.903,2885,1.903,2886,1.903,2887,1.903,2888,3.54,2889,3.54,2890,2.134,2891,2.134,2892,2.134,2893,2.134,2894,2.134,2895,3.54,2896,2.134,2897,3.54,2898,5.277,2899,2.134,2900,5.277,2901,2.134,2902,2.134,2903,2.134,2904,2.134,2905,2.134,2906,2.134,2907,2.134,2908,2.134,2909,2.134,2910,2.134,2911,2.134,2912,2.134,2913,2.134,2914,2.134,2915,2.134,2916,2.134,2917,2.134,2918,3.54,2919,2.134,2920,2.134]],["title/classes/ParseFormDataJsonPipe.html",[51,0.117,2921,4.237]],["body/classes/ParseFormDataJsonPipe.html",[3,0.06,4,0.052,5,0.06,7,0.19,8,1.158,11,1.922,14,0.55,16,1.178,17,0.006,18,0.577,19,1.061,28,0.187,30,0.924,32,0.336,36,0.877,50,0.06,51,0.152,52,2.367,58,2.212,60,0.577,70,4.393,77,0.005,78,0.005,102,2.882,104,1.206,118,1.33,123,2.286,880,5.062,1122,4.252,1978,3.201,2031,5.095,2921,6.899,2922,5.503,2923,6.933,2924,5.503,2925,7.901,2926,6.172,2927,6.347,2928,8.862,2929,7.268,2930,6.172,2931,6.172,2932,5.503,2933,5.503,2934,6.172,2935,8.452,2936,5.503,2937,6.172,2938,7.738,2939,6.172,2940,6.172,2941,6.172,2942,8.452,2943,6.172,2944,6.172]],["title/injectables/ParseJsonPipe.html",[0,0.724,2945,4.237]],["body/injectables/ParseJsonPipe.html",[0,1.163,2,1.987,3,0.059,4,0.051,5,0.059,7,0.186,8,1.143,14,0.542,16,1.163,17,0.006,18,0.57,19,1.048,28,0.169,30,1.143,32,0.24,36,0.859,50,0.059,51,0.149,52,1.85,57,3.046,58,1.907,60,0.866,64,2.421,65,2.072,77,0.005,78,0.005,104,1.492,123,2.474,394,2.866,912,4.754,1122,5.261,1837,4.959,2031,5.973,2200,5.857,2552,6.81,2923,6.264,2927,6.867,2929,7.716,2945,6.81,2946,6.046,2947,7.598,2948,6.046,2949,7.842,2950,6.046,2951,7.638,2952,7.638,2953,7.638,2954,7.638,2955,7.638]],["title/interfaces/Payload.html",[100,2.022,302,0.914]],["body/interfaces/Payload.html",[3,0.055,4,0.047,5,0.055,7,0.172,17,0.006,18,0.603,19,0.998,28,0.209,32,0.223,43,1.91,45,2.078,50,0.09,60,0.937,77,0.005,78,0.005,92,2.561,100,3.096,107,3.993,121,0.815,122,2.97,124,1.224,132,1.942,133,2.663,212,3.898,287,3.184,302,1.777,303,1.912,308,2.722,309,1.77,310,2.755,311,2.347,352,2.993,353,2.754,511,2.236,663,3.184,718,3.085,1103,3.411,1440,3.543,1441,3.692,1442,4.428,1443,4.599,1444,4.599,1445,4.599,1446,5.405,1447,5.405,1448,3.184,1449,3.543]],["title/classes/Product.html",[51,0.117,549,1.783]],["body/classes/Product.html",[3,0.023,4,0.02,5,0.023,7,0.074,8,0.585,14,0.669,16,1.018,17,0.006,18,0.499,19,0.917,28,0.212,30,1.271,32,0.333,43,1.925,44,1.183,45,2.224,46,1.183,50,0.023,51,0.059,54,2.32,60,0.873,77,0.002,78,0.002,104,1.66,111,3.041,112,1.721,118,0.519,121,0.438,124,1.228,125,1.95,128,1.641,129,3.521,309,1.367,313,3.121,451,2.875,533,1.971,534,1.367,535,3.372,536,1.367,537,3.915,539,2.027,541,3.816,542,1.367,543,1.971,544,1.367,545,3.121,546,1.367,547,1.971,548,1.367,549,1.466,586,1.466,587,2.195,588,4.278,596,2.377,611,4.259,612,3.899,628,1.739,629,1.739,651,3.618,652,1.072,653,1.7,654,2.423,656,3,658,1.047,659,1.002,661,1.072,664,2.778,665,1.465,919,4.402,953,2.264,954,2.264,955,2.264,956,2.264,1188,2.717,1189,2.147,1190,2.573,1191,1.975,1465,3.652,1481,1.153,1493,3.944,1507,4.224,1509,4.398,1526,3.065,1530,2.997,1535,3.205,1539,4.299,1567,2.844,1570,4.656,1599,1.521,1679,1.367,1680,3.466,1681,2.844,1682,3.664,1683,3.148,1684,2.896,1685,3.148,1691,2.987,1693,2.713,1728,4.656,2080,5.061,2081,4.656,2083,3.205,2094,3.205,2098,3.484,2099,1.975,2100,4.045,2316,3.484,2467,2.147,2473,2.147,2593,4.045,2956,2.408,2957,6.241,2958,5.676,2959,5.676,2960,5.676,2961,5.676,2962,5.676,2963,3.908,2964,3.908,2965,3.908,2966,3.908,2967,3.908,2968,2.408,2969,2.408,2970,2.408,2971,2.408,2972,2.408,2973,2.408,2974,2.408,2975,2.408,2976,2.408,2977,2.408,2978,2.408,2979,2.408,2980,2.408,2981,2.408,2982,2.408,2983,3.908,2984,2.408,2985,2.408,2986,2.408,2987,2.408,2988,2.408,2989,2.408,2990,2.408,2991,2.408,2992,2.408,2993,2.408,2994,2.408,2995,2.408,2996,3.908,2997,2.408,2998,3.908,2999,2.408,3000,3.908,3001,2.408,3002,3.908,3003,2.408,3004,2.408,3005,3.908,3006,2.408,3007,2.147,3008,2.147,3009,2.408,3010,3.908,3011,2.408,3012,2.408,3013,2.408,3014,3.908,3015,2.408,3016,2.408,3017,2.408,3018,2.408,3019,2.408,3020,2.408,3021,4.932,3022,4.932,3023,2.408,3024,3.908,3025,2.408]],["title/classes/ProductCategories.html",[51,0.117,543,2.397]],["body/classes/ProductCategories.html",[3,0.057,4,0.049,5,0.057,7,0.18,14,0.587,17,0.006,28,0.203,32,0.328,50,0.057,51,0.145,77,0.005,78,0.005,111,2.923,112,1.886,118,1.265,121,0.84,124,1.239,125,1.838,129,2.928,309,1.969,451,2.662,541,3.589,543,3.782,549,2.813,550,2.391,586,2.813,587,3.676,588,4.253,611,3.589,612,4.092,628,3.337,629,3.337,651,3.873,652,2.613,653,3.261,654,4.057,658,2.554,659,2.443,661,2.613,664,3.676,746,2.675,1464,5.278,1465,3.045,1467,4.737,1471,2.81,1585,7.374,3026,5.871,3027,5.871,3028,5.871,3029,5.871,3030,5.871,3031,5.235]],["title/classes/ProductColours.html",[51,0.117,539,2.465]],["body/classes/ProductColours.html",[3,0.057,4,0.049,5,0.057,7,0.18,14,0.587,17,0.006,28,0.203,32,0.328,50,0.057,51,0.145,77,0.005,78,0.005,111,2.923,112,1.886,118,1.265,121,0.84,124,1.239,125,1.838,129,2.928,309,1.969,451,2.662,537,3.682,539,3.888,549,2.813,550,2.391,586,2.813,587,3.676,588,4.253,611,3.589,612,4.092,628,3.337,629,3.337,651,3.873,652,2.613,653,3.261,654,4.057,658,2.554,659,2.443,661,2.613,664,3.676,746,2.675,1464,5.278,1465,3.045,1467,4.737,1471,2.81,1740,7.374,3032,5.871,3033,5.871,3034,5.871,3035,5.871,3036,5.871,3037,5.871]],["title/interfaces/ProductCreationAttrs.html",[302,0.914,1679,2.698]],["body/interfaces/ProductCreationAttrs.html",[3,0.049,4,0.042,5,0.049,7,0.154,17,0.006,18,0.503,19,1.121,28,0.202,50,0.09,60,0.949,77,0.004,78,0.004,121,0.756,124,1.309,128,2.096,302,1.781,303,1.705,309,1.79,311,1.96,313,3.817,746,3.481,953,3.508,954,3.508,955,3.508,956,3.508,1188,3.231,1471,3.656,1481,2.395,1526,2.457,1567,2.28,1598,3.713,1676,2.841,1678,3.043,1679,3.832,1680,4.427,1681,3.726,1682,5.012,1683,4.306,1684,5.012,1685,4.306,1686,2.841,1687,3.962,1688,2.841,1689,3.602,1690,3.962,1691,2.395,1692,3.713,1693,2.752,1694,2.937,1695,3.043]],["title/injectables/ProductMiddleware.html",[0,0.724,3038,3.898]],["body/injectables/ProductMiddleware.html",[0,1.175,2,2.02,3,0.06,4,0.052,5,0.06,7,0.189,8,1.155,10,4.383,14,0.437,16,0.936,17,0.006,18,0.459,19,0.843,21,3.491,22,3.113,23,4.478,24,3.939,25,3.491,26,4.347,28,0.17,29,3.104,30,0.92,31,2.737,32,0.307,34,4.246,35,2.281,36,0.874,39,2.559,49,2.504,50,0.06,51,0.152,52,1.881,57,2.452,58,1.535,68,4.049,69,3.74,70,3.491,71,4.453,77,0.005,78,0.005,104,1.508,183,3.74,191,3.491,394,2.307,395,2.802,575,3.189,613,4.003,669,3.382,847,3.61,1123,3.885,1393,4.049,1394,4.715,1395,4.236,1396,5.317,1397,4.236,1398,3.61,1399,4.715,1400,4.236,1401,4.236,1403,4.715,1594,4.236,1850,4.715,1851,5.043,3038,6.331,3039,6.149,3040,6.149,3041,5.043]],["title/modules/ProductModule.html",[474,1.783,1157,2.79]],["body/modules/ProductModule.html",[3,0.038,4,0.033,5,0.038,8,0.587,14,0.279,16,0.597,17,0.007,18,0.293,19,0.538,28,0.087,30,0.587,32,0.396,36,0.557,38,1.532,43,1.493,44,1.926,45,1.625,46,1.926,50,0.038,51,0.097,52,1.2,77,0.004,78,0.004,112,1.168,132,1.518,133,1.772,145,2.476,223,1.746,276,2.421,277,2.034,293,2.223,474,2.135,475,2.951,476,1.877,477,2.795,484,2.951,485,1.978,486,1.978,488,2.951,490,2.478,491,3.596,492,4.644,494,4.233,495,1.597,496,4.822,497,3.596,498,2.478,500,2.093,501,2.795,502,2.157,505,2.951,506,2.302,507,3.462,508,2.583,509,2.583,511,1.564,512,2.724,513,2.093,514,2.951,515,2.302,516,2.421,517,2.093,518,2.871,519,2.227,520,2.157,527,2.093,528,2.034,533,2.871,534,2.227,535,2.871,536,2.227,537,2.795,539,2.951,541,2.724,542,2.227,543,2.871,544,2.227,545,2.657,546,2.227,547,2.871,548,2.227,549,2.135,552,2.795,553,2.841,554,3.596,555,2.227,557,2.034,558,2.093,559,2.093,560,2.093,561,2.093,562,2.093,563,2.157,571,2.702,572,3.92,573,3.995,575,4.546,576,4.122,579,4.668,581,2.841,1153,3.596,1154,3.462,1156,3.596,1157,5.353,1163,2.302,1176,3.008,1177,3.008,1182,3.497,1190,3.747,1191,3.217,1192,4.122,1194,4.122,1278,3.497,1437,3.008,1547,5.359,1548,5.606,1563,4.668,1805,5.606,3007,3.497,3008,3.497,3038,3.217,3042,3.497,3043,3.497,3044,6.241,3045,3.922,3046,6.698,3047,3.922,3048,3.922,3049,3.922,3050,3.922,3051,3.497,3052,3.922,3053,3.922,3054,3.922,3055,3.922,3056,2.702,3057,3.922,3058,3.922,3059,3.922,3060,3.497,3061,3.922,3062,3.922,3063,3.922,3064,3.922,3065,3.922,3066,3.922]],["title/classes/ProductReviews.html",[51,0.117,1190,3.13]],["body/classes/ProductReviews.html",[3,0.057,4,0.049,5,0.057,7,0.18,14,0.587,17,0.006,28,0.203,32,0.328,50,0.057,51,0.145,77,0.005,78,0.005,111,2.923,112,1.886,118,1.265,121,0.84,124,1.239,125,1.838,129,2.928,309,1.969,451,2.662,549,2.813,550,2.391,586,2.813,587,3.676,588,4.253,611,3.589,612,4.092,628,3.337,629,3.337,651,3.873,652,2.613,653,3.261,654,4.057,658,2.554,659,2.443,661,2.613,664,3.676,746,2.675,1188,3.589,1190,4.936,1464,5.278,1465,3.045,1467,4.737,1471,2.81,3067,5.871,3068,7.374,3069,5.871,3070,5.871,3071,5.871,3072,5.871,3073,5.871]],["title/classes/QueryFilterDto.html",[51,0.117,3074,4.237]],["body/classes/QueryFilterDto.html",[3,0.054,4,0.046,5,0.054,7,0.169,14,0.642,17,0.006,19,1.165,28,0.21,32,0.286,50,0.054,51,0.198,60,0.673,77,0.005,78,0.005,103,2.117,111,3.306,112,1.477,118,1.188,121,0.806,123,2.127,124,1.258,125,2.012,127,2.5,138,4.087,139,3.196,140,2.028,166,5.805,167,6.574,364,3.361,545,3.742,747,5.904,1216,6.418,1567,2.512,1685,4.043,1691,2.639,2020,4.521,2022,4.521,2032,3.353,2033,5.521,2037,5.805,2041,3.797,3074,6.418,3075,9.209,3076,5.512,3077,7.198,3078,5.512,3079,5.512,3080,5.512,3081,5.512,3082,5.512,3083,5.512,3084,7.198,3085,5.512,3086,5.512,3087,8.815]],["title/guards/RefreshAuthGuard.html",[79,2.79,1338,3.898]],["body/guards/RefreshAuthGuard.html",[0,1.144,3,0.057,4,0.05,5,0.057,7,0.181,8,1.124,11,1.835,14,0.534,16,1.144,17,0.006,18,0.561,19,1.031,22,1.972,28,0.166,29,2.168,30,0.882,32,0.357,33,2.046,36,0.837,42,2.972,47,3.167,48,2.894,50,0.057,51,0.145,52,1.803,58,2.175,64,2.382,65,2.039,66,2.685,67,2.751,77,0.005,78,0.005,81,3.345,84,5.284,88,3.459,89,4.947,91,4.266,92,2.382,93,2.382,94,4.551,95,3.056,102,2.751,104,1.151,105,3.459,109,3.056,110,3.056,112,1.209,127,2.046,414,2.4,1330,5.598,1338,6.163,1442,4.571,2295,4.833,2298,4.059,2299,6.163,2300,4.833,2301,6.786,2302,6.163,3088,5.892,3089,5.892,3090,5.892,3091,7.514,3092,7.514]],["title/interfaces/RequestHeaders.html",[302,0.914,1831,3.898]],["body/interfaces/RequestHeaders.html",[0,0.923,3,0.042,4,0.036,5,0.042,7,0.132,8,0.641,14,0.304,17,0.006,19,1.15,22,2.355,23,3.456,24,2.699,25,2.871,26,2.978,28,0.169,29,2.23,32,0.304,34,3.335,35,1.791,36,0.609,39,1.783,49,1.745,50,0.042,51,0.106,52,1.311,54,1.223,58,2.016,60,0.874,64,1.358,65,1.645,68,5.317,69,4.281,70,3.995,77,0.004,78,0.004,92,1.358,103,0.923,104,1.495,112,0.879,121,0.679,127,2.106,183,2.606,191,2.432,302,0.823,303,1.46,319,3.144,364,3.285,414,1.745,451,1.311,459,3.688,575,2.222,667,3.442,857,4.835,865,1.783,890,3.103,1090,3.285,1092,3.514,1093,3.514,1114,4.176,1123,4.447,1124,6.192,1167,3.285,1393,2.821,1395,2.951,1396,5.775,1397,2.951,1398,2.515,1400,5.27,1401,2.951,1594,2.951,1828,3.82,1829,5.406,1830,3.82,1831,6.276,1833,5.771,1835,3.82,1837,4.973,1838,4.649,1839,3.285,1840,4.649,1841,6.822,1842,3.82,1843,3.82,1844,3.514,1845,3.82,1846,3.514,1847,3.514,1848,3.82,1849,3.82,1850,6.429,1851,5.771,1852,3.82,1853,3.82,1854,3.82,1855,3.82,1856,6.822,1857,3.82,1858,3.82,1859,6.822,1860,3.82,1861,4.973,1862,3.82,1863,3.82,1864,3.82,1865,3.514,1866,3.82,1867,3.82,1868,3.82,1869,3.285,1870,5.771,1871,3.82,1872,5.406,1873,8.727,1874,8.727,1875,5.771,1876,5.771,1877,6.274,1878,5.771,1879,5.406,1880,5.406,1881,3.82,1882,3.514,1883,3.82,1884,3.82,1885,3.514,1886,3.82,1887,3.82,1888,5.406,1889,5.406,1890,5.406,1891,3.82,1892,3.82,1893,3.82,1894,3.82,1895,3.82,1896,3.82,1897,3.82,1898,5.406,1899,3.82,1900,3.82,1901,3.514,3093,4.284,3094,4.284]],["title/classes/RequestValidator.html",[51,0.117,524,3.274]],["body/classes/RequestValidator.html",[3,0.059,4,0.051,5,0.059,7,0.184,9,1.773,14,0.426,17,0.006,22,2.792,23,2.948,24,3.384,25,3.131,26,3.734,29,2.208,32,0.348,39,2.497,50,0.059,51,0.206,58,2.083,60,0.561,64,1.902,65,1.628,72,1.936,77,0.005,78,0.005,104,1.173,112,1.231,118,1.293,121,0.852,123,1.773,140,2.208,239,3.301,240,3.112,364,3.549,404,2.802,414,2.444,524,5.237,877,6.234,891,4.134,893,4.134,898,5.351,899,5.351,912,4.737,2032,3.651,2544,7.195,3095,7.602,3096,6.001,3097,6.001,3098,7.602,3099,6.001,3100,6.001,3101,6.001,3102,6.001,3103,6.001,3104,6.001,3105,5.351,3106,6.001,3107,6.001,3108,6.001,3109,6.001,3110,7.602,3111,6.001,3112,6.001,3113,6.001,3114,6.001,3115,6.001]],["title/classes/ResetDto.html",[51,0.117,713,3.13]],["body/classes/ResetDto.html",[3,0.051,4,0.044,5,0.051,7,0.159,14,0.589,17,0.006,28,0.183,32,0.329,50,0.051,51,0.171,60,0.862,62,4.71,77,0.004,78,0.004,103,2.062,118,1.118,121,0.775,125,1.847,126,3.529,128,2.263,136,3.676,137,1.871,139,3.446,140,1.908,141,3.529,308,2.409,316,3.376,414,2.816,655,3.586,713,4.553,865,3.698,1697,4.731,1698,5.242,1699,5.233,1700,5.671,1701,5.008,1702,5.715,1703,6.009,1704,4.102,1705,6.009,1706,4.254,1708,5.715,1710,3.529,1711,3.757,1712,4.254,1713,3.757,1714,4.254,1904,4.206,1905,3.573,1906,6.122,1907,4.763,1908,4.763,1909,4.763,1910,4.763,1911,4.566,1925,3.573,1984,3.155,3116,5.187,3117,6.914,3118,5.187,3119,5.187,3120,5.187,3121,5.187,3122,5.187,3123,5.187]],["title/interfaces/ReturnedAdmin.html",[302,0.914,1444,3.003]],["body/interfaces/ReturnedAdmin.html",[3,0.055,4,0.047,5,0.055,7,0.172,17,0.006,18,0.677,28,0.214,32,0.222,43,1.907,45,2.075,50,0.09,60,0.941,77,0.005,78,0.005,92,1.774,100,2.381,107,3.99,121,0.814,122,1.944,124,1.223,132,1.94,133,2.264,212,2.551,287,3.178,302,1.777,303,1.908,308,2.721,309,1.988,310,3.095,311,2.636,352,2.988,353,2.749,511,2.232,663,3.178,718,3.079,1103,3.405,1440,3.537,1441,3.686,1442,4.423,1443,4.594,1444,5.102,1445,4.594,1446,3.537,1447,3.537,1448,3.178,1449,3.537]],["title/interfaces/ReturnedCategory.html",[302,0.914,1598,2.614]],["body/interfaces/ReturnedCategory.html",[3,0.05,4,0.043,5,0.05,7,0.157,17,0.006,18,0.511,28,0.2,50,0.091,60,0.949,77,0.004,78,0.004,121,0.768,124,1.287,128,1.684,302,1.789,303,1.746,309,1.981,311,1.991,313,2.391,746,4.036,953,3.712,954,3.712,955,3.712,956,3.712,1188,3.282,1471,4.239,1481,2.451,1526,2.515,1567,2.334,1598,4.251,1676,2.908,1678,3.115,1679,2.908,1680,3.555,1681,2.334,1682,4.025,1683,3.458,1684,4.025,1685,3.458,1686,2.908,1687,4.025,1688,2.908,1689,3.659,1690,4.025,1691,2.451,1692,3.771,1693,2.817,1694,3.007,1695,3.115]],["title/interfaces/ReturnedColour.html",[302,0.914,1692,2.614]],["body/interfaces/ReturnedColour.html",[3,0.049,4,0.043,5,0.049,7,0.156,17,0.006,18,0.508,28,0.202,50,0.091,60,0.949,77,0.004,78,0.004,121,0.762,124,1.285,128,1.671,302,1.785,303,1.727,309,1.975,311,1.976,313,2.365,746,4.023,953,3.704,954,3.704,955,3.704,956,3.704,1188,3.258,1471,4.226,1481,2.425,1526,2.488,1567,2.308,1598,3.744,1676,2.876,1678,3.081,1679,2.876,1680,3.529,1681,2.308,1682,3.995,1683,3.433,1684,3.995,1685,3.433,1686,2.876,1687,3.995,1688,2.876,1689,4.576,1690,3.995,1691,2.425,1692,4.228,1693,2.786,1694,2.974,1695,3.081]],["title/interfaces/ReturnedOwner.html",[302,0.914,1445,3.003]],["body/interfaces/ReturnedOwner.html",[3,0.055,4,0.047,5,0.055,7,0.172,17,0.006,18,0.677,28,0.214,32,0.222,43,1.907,45,2.075,50,0.09,60,0.941,77,0.005,78,0.005,92,1.774,100,2.381,107,3.99,121,0.814,122,1.944,124,1.223,132,1.94,133,2.264,212,2.551,287,3.178,302,1.777,303,1.908,308,2.721,309,1.988,310,3.095,311,2.636,352,2.988,353,2.749,511,2.232,663,3.178,718,3.079,1103,3.405,1440,3.537,1441,3.686,1442,4.423,1443,4.594,1444,4.594,1445,5.102,1446,3.537,1447,3.537,1448,3.178,1449,3.537]],["title/interfaces/ReturnedProduct.html",[302,0.914,1690,2.79]],["body/interfaces/ReturnedProduct.html",[3,0.047,4,0.041,5,0.047,7,0.148,17,0.006,18,0.492,28,0.213,50,0.09,60,0.946,77,0.004,78,0.004,121,0.738,124,1.304,128,2.071,302,1.768,303,1.647,309,1.951,311,1.914,313,2.256,746,3.419,919,5.307,953,3.472,954,3.472,955,3.472,956,3.472,1188,3.155,1471,3.591,1481,2.313,1526,3.958,1567,3.673,1598,4.433,1676,2.743,1678,2.939,1679,2.743,1680,4.374,1681,2.202,1682,4.952,1683,4.255,1684,4.952,1685,4.255,1686,2.743,1687,4.731,1688,2.743,1689,3.518,1690,4.405,1691,3.858,1692,4.433,1693,4.433,1694,2.837,1695,2.939]],["title/interfaces/ReturnedProducts.html",[302,0.914,1694,2.79]],["body/interfaces/ReturnedProducts.html",[3,0.053,4,0.045,5,0.053,7,0.165,17,0.006,18,0.529,28,0.156,50,0.092,60,0.947,77,0.005,78,0.005,121,0.794,124,1.297,128,1.74,302,1.807,303,1.835,309,1.844,311,2.058,313,2.514,746,3.611,953,3.582,954,3.582,955,3.582,956,3.582,1188,3.393,1471,3.793,1481,4.03,1526,2.645,1567,2.454,1598,3.899,1676,3.057,1678,3.275,1679,3.057,1680,3.676,1681,2.454,1682,4.161,1683,3.575,1684,4.161,1685,3.575,1686,3.057,1687,4.161,1688,3.057,1689,3.783,1690,4.943,1691,2.577,1692,3.899,1693,2.962,1694,4.161,1695,5.122]],["title/interfaces/ReturnedReview.html",[302,0.914,1687,2.79]],["body/interfaces/ReturnedReview.html",[3,0.05,4,0.044,5,0.05,7,0.159,17,0.006,18,0.644,28,0.196,50,0.091,60,0.948,77,0.004,78,0.004,121,0.774,124,1.289,128,1.696,302,1.793,303,1.765,309,1.986,311,2.508,313,2.418,746,4.049,953,3.543,954,3.543,955,3.543,956,3.543,1188,4.134,1471,4.253,1481,2.479,1526,2.543,1567,2.36,1598,3.799,1676,2.94,1678,3.15,1679,2.94,1680,3.582,1681,2.36,1682,4.055,1683,3.484,1684,4.055,1685,3.484,1686,2.94,1687,4.563,1688,2.94,1689,3.687,1690,4.055,1691,2.479,1692,3.799,1693,2.849,1694,3.04,1695,3.15]],["title/interfaces/ReturnedUser.html",[302,0.914,1443,3.003]],["body/interfaces/ReturnedUser.html",[3,0.052,4,0.045,5,0.052,7,0.163,17,0.006,18,0.667,28,0.215,32,0.21,43,1.84,45,2.001,50,0.089,60,0.943,77,0.004,78,0.004,92,1.679,100,2.253,107,4.418,121,0.785,122,1.84,124,1.205,132,1.871,133,2.183,212,2.414,287,3.007,302,1.753,303,1.806,308,2.689,309,1.958,310,3.048,311,2.596,352,2.827,353,2.602,511,2.112,663,3.007,718,2.914,1103,5.089,1440,3.347,1441,3.488,1442,4.265,1443,4.967,1444,4.431,1445,4.431,1446,3.347,1447,3.347,1448,4.75,1449,5.286]],["title/classes/Review.html",[51,0.117,1188,2.275]],["body/classes/Review.html",[3,0.05,4,0.043,5,0.05,7,0.158,14,0.63,17,0.006,18,0.643,28,0.21,32,0.329,50,0.05,51,0.127,60,0.829,77,0.004,78,0.004,111,3.14,112,1.82,118,1.11,121,0.771,124,1.115,125,1.975,129,3.595,309,1.888,311,2.504,451,2.714,549,3.453,550,2.099,586,2.583,587,3.451,588,4.369,612,4.191,628,3.065,629,3.065,651,3.949,652,2.294,653,2.995,654,3.382,658,2.242,659,2.145,661,2.294,664,3.065,665,4.716,1188,4.336,1190,4.534,1464,5.062,1465,4.291,1467,3.257,1493,3.257,1507,4.351,1599,3.257,1686,2.926,1693,2.835,3124,5.154,3125,5.154,3126,5.154,3127,5.154,3128,5.154,3129,5.154,3130,5.154,3131,5.154]],["title/interfaces/ReviewCreationAtrb.html",[302,0.914,1686,2.698]],["body/interfaces/ReviewCreationAtrb.html",[3,0.052,4,0.045,5,0.052,7,0.163,17,0.006,18,0.65,28,0.174,50,0.091,60,0.95,77,0.004,78,0.004,121,0.788,124,1.276,128,1.727,302,1.803,303,1.814,309,1.836,311,2.531,313,2.485,746,3.59,953,3.57,954,3.57,955,3.57,956,3.57,1188,4.172,1471,3.771,1481,2.548,1526,2.614,1567,2.426,1598,3.869,1676,3.022,1678,3.238,1679,3.022,1680,3.648,1681,2.426,1682,4.13,1683,3.548,1684,4.13,1685,3.548,1686,3.994,1687,4.13,1688,3.022,1689,3.754,1690,4.13,1691,2.548,1692,3.869,1693,2.928,1694,3.125,1695,3.238]],["title/controllers/ReviewsController.html",[143,2.115,3132,3.898]],["body/controllers/ReviewsController.html",[3,0.05,4,0.044,5,0.05,7,0.159,8,1.032,14,0.49,16,1.05,17,0.006,18,0.515,19,0.946,28,0.152,30,1.032,32,0.382,36,0.734,43,1.357,50,0.05,51,0.128,57,2.752,64,2.187,77,0.004,78,0.004,102,2.414,103,1.114,104,1.348,124,1.197,125,1.536,143,2.301,145,2.249,147,3.035,160,4.907,161,4.907,184,4.197,185,4.36,186,4.753,187,3.404,188,3.267,189,3.745,190,5.349,192,3.145,197,4.197,198,3.404,199,3.404,208,2.936,209,3.145,210,3.035,211,3.145,212,2.356,213,3.561,214,3.035,215,3.561,216,3.561,217,3.561,218,4.724,219,3.404,220,3.404,221,3.267,222,2.844,226,2.936,227,3.145,228,3.145,229,3.917,230,3.145,231,3.035,232,3.267,233,3.145,245,4.543,246,3.561,248,3.404,252,5.707,394,2.589,399,4.179,1398,3.035,1464,4.864,1577,3.965,1592,3.965,1594,3.561,1596,3.965,1600,3.965,1693,2.844,2045,6.432,2161,5.659,3068,5.659,3132,5.659,3133,5.17,3134,6.924,3135,6.152,3136,5.17,3137,5.17,3138,5.17,3139,4.61,3140,5.17,3141,5.17,3142,5.17,3143,4.241,3144,5.624,3145,4.61,3146,5.17,3147,5.17,3148,5.17,3149,5.17,3150,5.17,3151,5.17,3152,5.17,3153,5.17]],["title/modules/ReviewsModule.html",[474,1.783,1158,3.442]],["body/modules/ReviewsModule.html",[3,0.042,4,0.037,5,0.042,8,0.652,14,0.31,16,0.664,17,0.007,18,0.325,19,0.598,28,0.096,30,0.652,32,0.397,36,0.619,38,1.703,43,1.61,44,2.141,45,1.752,46,2.141,50,0.042,51,0.108,52,1.333,77,0.004,78,0.004,112,1.259,132,1.637,133,1.911,145,2.67,223,1.94,276,2.61,277,2.26,293,2.397,474,2.303,475,3.183,476,2.086,477,3.014,484,3.183,485,2.199,486,2.199,488,3.183,490,2.754,491,3.878,492,4.872,494,2.754,495,1.775,496,4.945,497,3.878,498,2.754,500,2.326,501,3.014,502,2.398,505,3.183,506,2.559,507,2.651,508,2.87,509,2.87,511,1.738,512,2.938,513,2.326,514,3.183,515,2.559,516,2.61,517,2.326,518,3.096,519,2.475,520,2.398,524,3.002,525,3.343,526,3.343,527,2.326,528,2.26,533,3.096,534,2.475,535,3.096,536,2.475,537,3.014,538,2.754,539,3.183,540,2.754,541,2.938,542,2.475,543,3.096,544,2.475,545,2.865,546,2.475,547,3.096,548,2.475,549,2.303,550,1.775,557,2.26,558,2.326,559,2.326,560,2.326,561,2.326,562,2.326,563,2.398,573,2.797,575,3.183,1153,3.878,1154,3.733,1156,3.878,1158,6.599,1163,2.559,1176,3.343,1177,3.343,1188,2.938,1190,4.041,1523,3.575,1547,5.551,1563,5.034,2045,3.157,3044,6.465,3051,3.886,3132,5.826,3143,3.575,3144,6.106,3145,3.886,3154,3.886,3155,3.886,3156,4.359,3157,4.359,3158,3.886,3159,4.359,3160,3.886,3161,4.359,3162,4.359,3163,4.359,3164,4.359,3165,4.359]],["title/injectables/ReviewsService.html",[0,0.724,3144,3.442]],["body/injectables/ReviewsService.html",[0,1.055,2,1.71,3,0.051,4,0.044,5,0.051,7,0.16,8,1.037,9,2.628,11,2.158,14,0.59,16,1.186,17,0.006,18,0.62,19,1.068,28,0.172,30,1.037,31,2.316,32,0.343,35,2.047,36,0.739,37,2.862,38,2.033,50,0.051,51,0.128,54,2.469,55,2.862,58,2.159,65,1.88,72,2.976,77,0.004,78,0.004,93,2.196,103,1.864,104,1.354,121,0.776,123,1.537,124,1.199,309,1.14,311,1.511,319,4.308,364,2.429,391,2.954,549,2.6,1188,4.346,1464,4.574,1656,5.019,2045,6.016,3044,6.963,3068,4.268,3134,6.178,3135,6.178,3139,6.178,3143,4.268,3144,5.019,3158,4.639,3160,4.639,3166,5.203,3167,5.203,3168,6.929,3169,6.929,3170,6.929,3171,5.203,3172,5.203,3173,5.203,3174,6.929,3175,5.203,3176,5.203,3177,5.203,3178,6.929,3179,5.203,3180,8.307,3181,5.203,3182,5.203,3183,6.929,3184,5.203,3185,5.203,3186,6.929,3187,5.203,3188,5.203,3189,5.203,3190,5.203,3191,5.203,3192,5.203,3193,5.203]],["title/classes/Role.html",[51,0.117,133,1.48]],["body/classes/Role.html",[3,0.044,4,0.038,5,0.044,7,0.138,8,0.939,14,0.643,17,0.006,28,0.2,30,1.081,32,0.347,43,2.406,44,2.209,45,2.431,46,2.209,50,0.044,51,0.111,54,2.585,60,0.731,77,0.004,78,0.004,104,1.412,111,3.014,112,1.829,118,0.969,121,0.703,123,2.429,124,0.845,125,1.895,126,3.073,127,2.179,128,2.296,129,3.482,132,2.272,133,2.249,136,3.325,137,1.623,141,3.073,142,2.153,212,2.05,223,2.002,256,5.925,309,1.8,451,2.727,512,3.742,586,2.354,587,3.216,588,4.03,611,4.076,612,3.79,627,2.961,628,2.792,629,2.792,651,3.479,652,2.002,653,2.729,658,1.956,659,1.871,661,2.002,664,2.002,665,3.816,1344,5.54,1493,4.565,1507,4.94,1699,3.562,2054,5.593,2277,2.842,3194,4.497,3195,7.224,3196,7.817,3197,7.817,3198,7.817,3199,4.497,3200,4.497,3201,4.497,3202,4.497,3203,4.497,3204,4.497,3205,4.497,3206,4.497,3207,4.497,3208,4.497,3209,4.497,3210,3.449,3211,4.497,3212,4.497,3213,4.497,3214,4.497]],["title/interfaces/RolecreationAttrbs.html",[302,0.914,2277,3.003]],["body/interfaces/RolecreationAttrbs.html",[3,0.06,4,0.052,5,0.06,7,0.19,17,0.006,18,0.632,28,0.171,50,0.091,59,2.823,60,0.946,77,0.005,78,0.005,92,2.813,121,0.869,122,2.152,123,2.622,124,1.045,128,2.179,293,2.42,302,1.792,303,2.112,305,3.213,306,3.213,307,3.213,308,2.653,309,1.357,310,2.886,311,2.459,316,3.307,613,3.213,835,3.637,1697,3.769,2274,3.915,2275,4.268,2276,3.915,2277,4.901,2278,4.08,2279,3.915,2280,3.769]],["title/controllers/RolesController.html",[143,2.115,3215,3.898]],["body/controllers/RolesController.html",[3,0.046,4,0.04,5,0.046,7,0.145,8,0.97,9,1.914,14,0.46,16,0.986,17,0.006,18,0.483,19,0.889,25,2.431,28,0.191,30,0.97,32,0.381,36,0.67,43,1.7,50,0.046,51,0.116,57,2.584,60,0.692,64,2.054,77,0.004,78,0.004,80,5.364,93,2.738,102,2.2,103,1.015,104,1.266,123,1.914,125,1.442,133,2.306,137,1.7,143,2.098,145,2.05,147,2.767,155,4.969,157,6.116,160,5.284,161,5.284,168,4.693,184,2.867,185,4.68,187,3.103,188,2.978,192,2.867,194,5.101,195,5.101,196,3.413,197,4.505,198,3.103,199,3.103,208,2.676,209,2.867,210,2.767,211,2.867,212,3.634,213,3.246,214,2.767,215,3.246,216,3.246,217,3.246,218,5.086,219,3.103,220,3.103,221,2.978,222,2.592,226,2.676,227,2.867,228,2.867,229,3.679,230,2.867,231,2.767,232,2.978,233,2.867,239,3.564,240,3.36,241,3.804,242,4.464,243,3.804,245,4.267,246,4.464,248,3.103,252,5.494,394,2.431,399,4.023,690,3.614,691,4.095,755,3.246,1398,2.767,1574,4.969,1577,3.614,1592,3.614,1595,3.865,1596,3.614,1600,3.614,2052,6.116,3215,5.315,3216,4.713,3217,5.778,3218,5.778,3219,4.713,3220,6.48,3221,6.48,3222,4.713,3223,4.713,3224,4.713,3225,6.48,3226,4.202,3227,4.713,3228,4.713,3229,4.202,3230,3.865,3231,4.202,3232,4.713,3233,4.713,3234,4.713,3235,4.713,3236,4.713,3237,4.713,3238,4.713,3239,4.713]],["title/guards/RolesGuard.html",[79,2.79,160,3.003]],["body/guards/RolesGuard.html",[0,1.012,3,0.048,4,0.041,5,0.048,7,0.15,8,0.994,9,1.445,11,1.523,14,0.472,16,1.012,17,0.007,18,0.496,19,0.911,28,0.147,29,1.799,30,0.732,32,0.366,33,1.698,35,1.963,36,0.695,42,2.467,47,3.344,48,2.402,49,1.992,50,0.048,51,0.121,52,1.496,54,1.396,57,2.65,58,2.181,60,0.706,64,2.685,65,2.298,72,1.578,77,0.004,78,0.004,81,2.776,84,4.973,88,2.871,89,4.599,91,3.773,92,2.106,93,2.106,94,4.153,95,2.536,100,3.716,101,2.61,102,2.283,104,1.475,105,2.871,109,4.392,110,4.392,112,1.364,123,1.445,127,1.698,128,1.201,160,4.199,214,2.871,268,6.854,273,6.211,278,2.975,279,5.096,280,3.75,281,5.2,282,3.22,283,5.096,284,3.75,285,3.75,286,3.75,289,3.542,301,3.75,394,2.493,395,3.029,405,3.656,414,1.992,1330,5.315,2287,4.011,2295,4.011,2298,3.368,2299,4.011,2300,4.011,2301,6.192,2302,5.451,2304,4.36,2305,4.36,3240,4.89,3241,4.89,3242,4.89,3243,4.89,3244,4.89]],["title/modules/RolesModule.html",[474,1.783,514,2.465]],["body/modules/RolesModule.html",[3,0.04,4,0.034,5,0.04,8,0.61,14,0.29,16,0.621,17,0.007,18,0.304,19,0.56,28,0.09,30,0.61,32,0.395,36,0.58,38,1.594,43,1.536,44,2.004,45,1.671,46,2.004,50,0.04,51,0.101,52,1.248,77,0.004,78,0.004,112,1.536,132,1.562,133,1.823,145,2.547,223,1.816,275,2.482,276,2.49,277,2.116,293,2.287,334,4.403,381,2.482,474,2.197,475,3.036,476,1.953,477,2.876,481,4.537,483,4.161,484,3.036,485,2.058,486,2.058,488,3.036,489,3.7,490,2.578,491,3.7,492,4.729,494,3.7,495,1.662,496,4.869,497,3.7,498,2.578,500,2.177,501,2.876,502,2.244,505,3.036,506,2.395,507,2.482,508,2.686,509,2.686,512,2.803,514,4.952,516,2.49,517,2.177,518,2.954,519,2.316,520,2.244,527,2.177,528,2.116,531,3.437,532,2.81,533,2.954,534,2.316,535,2.954,536,2.316,537,2.876,538,2.578,539,3.036,540,2.578,541,2.803,542,2.316,543,2.954,544,2.316,545,2.734,546,2.316,547,2.954,548,2.316,549,2.197,550,1.662,551,2.482,552,2.876,553,2.955,554,3.7,555,2.316,556,3.637,557,2.116,558,3.125,559,3.125,560,3.125,561,3.125,562,3.125,563,2.244,571,2.81,572,2.81,573,2.668,575,3.036,576,2.955,691,5.806,1155,3.7,1157,3.437,1163,2.395,1166,3.128,1175,2.81,1330,5.018,1437,3.128,2282,5.431,2285,3.346,2298,2.81,3215,5.617,3230,3.346,3231,3.637,3245,3.637,3246,3.637,3247,3.637,3248,4.08,3249,4.08,3250,4.08,3251,4.08,3252,4.08,3253,4.08]],["title/injectables/RolesService.html",[0,0.724,691,3.003]],["body/injectables/RolesService.html",[0,1.167,2,1.998,3,0.059,4,0.051,5,0.059,7,0.187,8,1.147,9,2.741,11,1.893,14,0.596,16,1.278,17,0.006,18,0.626,19,1.151,28,0.169,30,1.147,32,0.35,35,2.265,36,0.864,37,3.344,38,2.375,50,0.059,51,0.15,54,1.736,55,3.344,58,1.913,60,0.785,72,2.473,77,0.005,78,0.005,93,2.793,104,1.498,123,2.48,133,2.889,391,3.452,691,4.843,699,4.403,2052,6.759,3217,6.834,3218,6.834,3226,6.834,3229,5.421,3230,4.987,3254,6.08,3255,6.08,3256,6.08,3257,7.665,3258,7.665,3259,6.08,3260,6.08,3261,6.08,3262,6.08,3263,6.08]],["title/classes/SignupDto.html",[51,0.117,1324,3.645]],["body/classes/SignupDto.html",[3,0.041,4,0.036,5,0.041,7,0.13,14,0.593,17,0.006,18,0.599,28,0.184,32,0.302,50,0.041,51,0.148,60,0.865,77,0.004,78,0.004,103,2.067,118,0.911,121,0.673,124,0.57,125,1.858,126,3.551,128,2.271,132,1.603,136,3.652,137,1.526,139,3.424,140,1.555,141,3.551,308,2.333,310,2.593,311,2.333,316,3.261,414,2.446,655,3.115,865,3.849,1324,4.606,1697,4.627,1698,4.807,1699,5.14,1700,4.927,1701,4.351,1702,5.24,1703,5.509,1704,4.117,1705,5.509,1706,3.468,1708,5.24,1710,3.235,1711,3.062,1712,3.468,1713,3.062,1714,3.468,1904,4.25,1905,2.913,1906,5.75,1907,4.138,1908,4.138,1909,4.138,1910,4.138,1911,4.101,1925,2.913,1938,3.641,1945,4.812,1953,4.606,1954,3.468,1955,5.833,1956,5.833,1957,4.606,1962,3.03,1963,3.242,1977,4.06,1978,4.551,1979,4.807,1984,2.572,1985,2.672,1986,3.796,1987,3.796,2063,5.73,2066,5.356,2068,6.229,2070,5.358,2071,3.468,2072,5.73,3264,4.228,3265,4.228,3266,4.228,3267,4.228,3268,4.228,3269,4.228,3270,4.228,3271,4.228,3272,6.007,3273,4.228,3274,6.007]],["title/injectables/TasksService.html",[0,0.724,334,2.537]],["body/injectables/TasksService.html",[0,0.688,2,0.949,3,0.028,4,0.024,5,0.028,7,0.089,8,0.676,9,2.433,11,1.407,14,0.621,16,1.192,17,0.006,18,0.717,19,1.074,25,2.718,28,0.173,30,1.276,31,1.286,32,0.32,35,1.335,36,0.41,45,1.29,50,0.028,51,0.071,54,2.161,57,1.152,58,2.158,60,0.91,65,1.708,72,1.458,77,0.003,78,0.003,93,2.296,103,1.631,104,1.758,112,0.927,121,0.506,123,0.854,124,1.165,125,1.521,127,1.933,132,0.771,142,3.27,241,3.268,308,0.839,310,0.985,311,0.839,316,1.129,319,3.264,334,2.412,353,2.22,364,1.349,378,2.566,394,1.084,399,1.458,405,2.486,459,3.829,481,4.164,482,4.298,495,3.279,510,1.99,516,2.906,552,1.419,977,5.214,992,1.99,1023,4.948,1024,3.707,1063,3.273,1139,4.827,1145,2.216,1146,2.216,1147,2.576,1148,2.576,1196,2.216,1326,5.163,1421,2.093,1656,4.559,1812,1.99,1994,2.216,2041,1.99,2103,5.612,2113,4.029,2122,3.707,2123,2.37,2200,2.216,2226,5.603,2832,4.029,2836,5.612,2838,2.576,2839,6.458,2851,4.029,2864,4.029,2865,4.963,2866,4.029,2867,4.029,2875,4.029,2876,2.576,2877,3.707,2878,2.576,2879,2.576,2880,2.576,2881,2.576,2882,2.576,2883,2.576,2884,2.576,2885,2.576,2886,2.576,2887,4.029,3275,2.889,3276,5.566,3277,5.566,3278,5.566,3279,4.519,3280,4.519,3281,4.519,3282,6.295,3283,6.295,3284,6.295,3285,5.566,3286,6.295,3287,4.519,3288,2.889,3289,7.569,3290,2.889,3291,5.566,3292,2.889,3293,8.842,3294,7.243,3295,2.889,3296,2.889,3297,4.519,3298,2.889,3299,7.569,3300,2.889,3301,2.889,3302,2.889,3303,4.519,3304,2.889,3305,4.519,3306,2.889,3307,4.519,3308,2.889,3309,7.243,3310,2.889,3311,2.889,3312,2.889,3313,2.889,3314,2.889,3315,4.519,3316,2.889,3317,2.889,3318,2.889,3319,2.889,3320,2.889,3321,2.889,3322,2.889,3323,4.519,3324,2.889,3325,2.889,3326,2.889,3327,2.889,3328,2.889,3329,2.889,3330,5.566,3331,6.295,3332,2.889,3333,7.243,3334,4.519,3335,4.519,3336,2.889,3337,2.889,3338,4.519,3339,2.889,3340,2.889,3341,2.889,3342,5.566,3343,2.889,3344,4.519,3345,2.889,3346,2.889,3347,2.889,3348,2.889,3349,2.889,3350,2.889,3351,2.889,3352,2.889,3353,2.889,3354,4.519,3355,2.889,3356,2.889,3357,2.889]],["title/modules/TelegramModule.html",[474,1.783,1159,3.442]],["body/modules/TelegramModule.html",[3,0.059,4,0.051,5,0.059,8,0.906,9,1.79,14,0.543,16,1.164,17,0.006,18,0.57,19,1.049,28,0.169,30,1.144,32,0.349,36,0.86,50,0.059,51,0.15,54,2.183,58,1.909,70,4.758,72,1.955,77,0.005,78,0.005,104,1.637,474,3.144,476,2.899,488,3.141,489,3.828,557,3.141,912,4.997,1159,6.069,1199,4.645,1207,4.645,2255,7.217,2258,4.645,2262,4.645,3358,6.057,3359,7.647,3360,6.057,3361,6.057,3362,8.38,3363,6.057,3364,7.647,3365,6.057,3366,8.38,3367,7.647,3368,6.818,3369,5.4,3370,5.4,3371,6.873,3372,6.057,3373,7.647,3374,6.057,3375,6.057,3376,7.647,3377,6.057,3378,6.057]],["title/injectables/TelegramService.html",[0,0.724,3371,3.898]],["body/injectables/TelegramService.html",[0,1.174,2,2.017,3,0.06,4,0.052,5,0.06,7,0.188,8,1.154,9,2.491,11,1.911,14,0.628,16,1.174,17,0.006,18,0.575,19,1.058,28,0.195,30,0.918,32,0.351,36,0.872,50,0.06,51,0.151,60,0.869,65,1.665,70,5.28,72,1.98,77,0.005,78,0.005,121,0.864,123,1.813,364,2.865,865,3.208,2258,4.706,2260,7.131,2261,6.915,2924,5.472,2936,5.472,3368,5.472,3369,5.472,3370,5.472,3371,6.324,3379,6.137,3380,8.43,3381,7.71,3382,7.71,3383,7.71,3384,6.137,3385,7.71,3386,7.885,3387,6.137,3388,6.137,3389,6.137,3390,6.137,3391,6.137]],["title/injectables/ThrottlerBehindProxyGuard.html",[0,0.724,208,2.698]],["body/injectables/ThrottlerBehindProxyGuard.html",[0,1.252,2,2.241,3,0.066,4,0.057,5,0.066,7,0.209,8,1.231,14,0.484,16,1.038,17,0.006,18,0.509,19,0.935,28,0.151,29,2.509,30,1.021,32,0.327,36,0.969,50,0.066,51,0.168,60,0.769,77,0.005,78,0.005,104,1.333,208,4.671,210,4.83,222,3.751,586,3.087,1415,7.878,2949,7.878,3392,8.228,3393,6.82,3394,8.836,3395,8.228,3396,8.228,3397,6.82,3398,6.82,3399,6.82,3400,6.82]],["title/interfaces/Tokens.html",[302,0.914,663,2.698]],["body/interfaces/Tokens.html",[3,0.056,4,0.049,5,0.056,7,0.177,17,0.006,18,0.611,28,0.205,32,0.229,43,1.944,45,2.116,50,0.091,60,0.939,77,0.005,78,0.005,92,1.828,100,2.453,107,4.036,121,0.83,122,2.003,124,1.165,132,1.977,133,2.308,212,2.628,287,4.908,302,1.789,303,1.966,308,2.596,309,1.793,310,2.792,311,2.378,352,4.613,353,4.022,511,2.3,663,4.208,718,3.172,1103,3.508,1440,3.644,1441,3.797,1442,5.439,1443,4.683,1444,4.683,1445,4.683,1446,3.644,1447,3.644,1448,3.274,1449,3.644]],["title/classes/UpdateCategoryDto.html",[51,0.117,1631,3.898]],["body/classes/UpdateCategoryDto.html",[3,0.058,4,0.05,5,0.058,7,0.182,14,0.62,17,0.006,28,0.193,32,0.235,50,0.058,51,0.186,60,0.886,77,0.005,78,0.005,118,1.276,121,0.845,125,1.943,139,3.595,140,2.179,953,3.308,954,3.308,955,3.308,956,3.308,1631,6.184,1704,4.219,1710,2.52,1938,4.537,1962,4.404,1976,6.695,1977,5.059,1978,5.136,1979,5.99,1984,3.604,1985,3.744,1986,5.517,1987,5.517,3401,5.924,3402,5.924,3403,5.924,3404,5.924,3405,5.924]],["title/classes/UpdateColourDto.html",[51,0.117,1775,3.898]],["body/classes/UpdateColourDto.html",[3,0.055,4,0.047,5,0.055,7,0.173,14,0.63,17,0.006,28,0.196,32,0.224,50,0.055,51,0.18,60,0.894,77,0.005,78,0.005,118,1.214,121,0.818,125,1.976,139,3.627,140,2.074,953,3.231,954,3.231,955,3.231,956,3.231,1689,4.324,1704,4.257,1710,2.398,1775,5.99,1938,4.578,1962,4.478,1976,6.808,1977,5.105,1978,5.16,1979,6.044,1984,3.429,1985,3.562,1986,5.61,1987,5.61,3406,5.637,3407,5.637,3408,5.637,3409,5.637,3410,5.637,3411,5.637]],["title/classes/UpdateProductDto.html",[51,0.117,2572,3.898]],["body/classes/UpdateProductDto.html",[3,0.046,4,0.04,5,0.046,7,0.145,14,0.629,17,0.006,28,0.211,32,0.258,50,0.046,51,0.197,60,0.888,77,0.004,78,0.004,103,2.095,111,2.627,112,1.639,118,1.02,121,0.728,124,1.216,125,1.972,128,1.823,138,4.214,139,3.534,140,1.741,919,4.28,953,2.96,954,2.96,955,2.96,956,2.96,1526,3.646,1567,2.962,1680,3.849,1683,3.744,1685,3.278,1691,3.111,1704,3.556,1710,2.013,1922,4.69,1923,5.376,1938,3.825,1962,4.03,1977,4.265,1978,4.143,2020,6.868,2022,3.882,2024,4.22,2025,4.22,2031,3.117,2032,2.879,2033,6.497,2034,5.113,2035,5.787,2036,5.787,2037,5.376,2038,6.127,2039,3.63,2040,3.63,2041,5.504,2042,4.984,2043,4.984,2044,3.63,2567,4.22,2572,5.331,3412,4.733,3413,4.733,3414,4.733,3415,4.733,3416,4.733,3417,4.733,3418,4.733]],["title/classes/UpdateUserDto.html",[51,0.117,3419,3.442]],["body/classes/UpdateUserDto.html",[3,0.05,4,0.043,5,0.05,7,0.158,14,0.612,17,0.006,18,0.617,28,0.19,32,0.308,50,0.05,51,0.17,60,0.88,77,0.004,78,0.004,103,2.093,118,1.11,121,0.771,125,1.919,126,3.668,128,2.312,136,3.774,137,1.859,139,3.538,140,1.896,141,3.668,311,2.403,865,3.443,1103,5.034,1448,4.698,1449,5.229,1456,4.227,1699,4.698,1704,3.683,1710,2.192,1938,3.961,1945,4.743,1962,3.473,1977,4.417,1978,4.773,1979,5.229,1984,3.135,1985,3.257,1986,5.449,1987,4.351,2062,4.595,2063,6.359,2064,4.595,2070,5.28,2071,4.227,2072,6.359,2073,4.595,2074,3.952,3419,4.987,3420,8.872,3421,8.275,3422,5.154,3423,6.885,3424,5.154,3425,5.154,3426,5.154,3427,5.154,3428,5.154,3429,7.753]],["title/injectables/UserAdminMiddleware.html",[0,0.724,521,3.898]],["body/injectables/UserAdminMiddleware.html",[0,1.048,2,1.693,3,0.05,4,0.043,5,0.05,7,0.158,8,1.03,9,2.291,10,4.402,11,1.605,14,0.489,16,1.048,17,0.006,18,0.617,19,0.944,21,2.926,22,2.886,23,4.235,24,3.683,25,3.329,26,4.064,28,0.152,29,3.044,30,0.771,31,3.065,32,0.36,33,1.79,34,3.787,35,2.034,36,0.732,39,2.145,41,5.647,42,2.6,47,2.968,48,2.531,49,2.099,50,0.05,51,0.127,52,1.577,57,2.055,58,2.327,64,2.182,65,1.868,66,2.349,67,2.406,72,1.663,77,0.004,78,0.004,102,2.406,103,1.11,104,1.345,132,1.375,305,2.673,306,2.673,307,2.673,308,1.999,310,2.643,311,1.999,389,4.351,390,3.135,394,1.934,395,2.349,403,2.673,404,2.406,483,4.174,521,5.647,551,3.135,689,4.534,831,4.595,832,4.595,833,4.227,834,4.595,835,3.026,836,4.595,837,4.595,838,4.595,839,4.595,840,4.595,841,4.595,842,4.595,843,4.595,845,4.595,846,4.595,847,3.026,941,4.743,951,3.952,2272,4.595,3430,7.753,3431,5.154,3432,5.154,3433,5.154,3434,5.154,3435,4.595,3436,4.595]],["title/guards/UserGuard.html",[79,2.79,3437,3.898]],["body/guards/UserGuard.html",[0,1.018,3,0.048,4,0.042,5,0.048,7,0.152,8,1.001,9,1.458,11,2.082,14,0.475,16,1.018,17,0.006,18,0.499,19,0.917,22,1.651,28,0.148,29,1.815,30,0.738,32,0.367,33,1.714,35,1.976,36,0.701,42,2.489,47,3.252,48,2.424,49,2.01,50,0.048,51,0.122,52,1.51,54,1.909,58,2.236,60,0.709,64,2.577,65,2.206,66,2.249,67,2.304,72,2.158,77,0.004,78,0.004,81,2.802,84,4.988,88,2.897,89,4.616,91,3.796,92,2.119,93,2.119,94,4.172,95,2.559,100,3.458,101,2.634,103,1.063,104,1.589,105,2.897,106,3.249,109,3.933,110,3.933,112,1.372,123,1.458,128,1.212,133,1.536,214,2.897,268,6.87,272,5.128,273,5.816,275,3.002,278,3.002,279,5.128,280,3.784,281,4.606,282,3.249,283,5.128,284,3.784,285,3.784,286,3.784,287,3.796,288,3.784,290,3.784,291,4.047,292,4.047,293,2.612,296,4.047,298,4.047,300,4.047,301,3.784,451,1.51,2282,5.768,2285,4.047,2292,4.4,3437,5.484,3438,4.935,3439,4.935,3440,4.935,3441,4.935,3442,6.687,3443,4.935,3444,4.935,3445,4.935]],["title/interfaces/UserInterface.html",[302,0.914,2280,2.891]],["body/interfaces/UserInterface.html",[3,0.055,4,0.048,5,0.055,7,0.174,17,0.006,18,0.679,28,0.21,50,0.089,59,2.582,60,0.944,77,0.005,78,0.005,92,3.074,121,0.821,122,1.968,123,1.674,124,1.157,128,1.391,293,2.213,302,1.751,303,1.932,305,4.453,306,4.453,307,4.453,308,2.728,309,1.88,310,3.105,311,2.645,316,3.172,613,2.938,835,5.041,1697,3.447,2274,3.581,2275,3.903,2276,3.581,2277,3.581,2278,3.731,2279,3.581,2280,4.457]],["title/injectables/UserJwtRefreshTokenService.html",[0,0.724,2282,3.13]],["body/injectables/UserJwtRefreshTokenService.html",[0,0.661,2,0.902,3,0.027,4,0.023,5,0.027,7,0.084,8,0.65,9,2.745,11,1.352,14,0.563,16,1.206,17,0.006,18,0.591,19,1.087,22,0.919,28,0.175,30,1.152,31,3.155,32,0.322,33,0.954,35,1.283,36,0.39,37,1.51,38,1.072,47,3.223,50,0.027,51,0.068,54,1.747,55,1.51,57,2.658,58,2.16,60,0.905,64,2.624,65,2.246,66,1.251,67,1.282,72,2.898,77,0.003,78,0.003,93,2.742,100,1.847,103,0.592,104,1.586,122,2.818,124,1.068,132,1.98,142,4.266,200,1.891,293,3.672,308,2.356,309,0.951,318,2.252,320,3.561,322,4.416,325,4.416,326,4.416,327,3.561,328,4.416,329,4.416,330,4.416,331,2.252,332,5.813,333,4.416,334,3.266,348,2.252,352,3.783,353,3.481,366,1.735,367,3.329,368,4.693,370,3.329,371,4.129,372,3.329,373,3.329,374,2.252,375,2.105,378,1.559,379,2.448,381,1.67,382,1.67,389,1.735,390,1.67,391,1.559,393,2.252,394,2.501,395,3.038,396,4.389,397,5.112,398,4.389,399,3.363,403,3.457,404,3.112,405,4.86,408,2.252,409,4.416,410,3.561,411,3.561,414,1.118,416,4.416,420,5.02,425,2.252,449,2.252,451,0.84,483,3.087,598,2.859,599,2.859,600,2.859,601,2.859,602,2.859,603,2.859,604,2.859,605,2.859,606,2.859,607,2.859,608,2.859,613,4.208,689,3.546,764,4.416,782,2.252,941,3.709,2075,5.02,2282,2.859,3446,8.115,3447,5.385,3448,2.745,3449,4.341,3450,2.745,3451,2.745,3452,2.745,3453,2.745,3454,2.745,3455,2.745,3456,4.341,3457,2.745,3458,2.745,3459,2.745,3460,6.12,3461,2.745,3462,2.745,3463,2.745,3464,2.745,3465,2.448,3466,2.745,3467,2.745,3468,5.385,3469,2.745,3470,4.341,3471,4.341,3472,2.745,3473,2.745,3474,2.745,3475,2.745,3476,2.745,3477,4.341,3478,2.745,3479,2.745,3480,4.341,3481,4.341,3482,4.341,3483,4.341,3484,2.745]],["title/injectables/UserMiddleware.html",[0,0.724,3056,3.274]],["body/injectables/UserMiddleware.html",[0,1.179,2,2.032,3,0.06,4,0.052,5,0.06,7,0.19,8,1.159,10,4.399,14,0.439,16,0.941,17,0.006,18,0.461,19,0.848,21,3.511,22,3.118,23,4.485,24,3.947,25,3.496,26,4.356,28,0.171,29,3.112,30,0.925,31,2.752,32,0.308,34,4.261,35,2.289,36,0.878,39,2.573,49,2.519,50,0.06,51,0.153,52,1.892,57,2.466,58,1.544,68,4.072,69,3.762,70,3.511,71,4.479,77,0.005,78,0.005,104,1.514,183,3.762,191,3.511,394,2.32,395,2.818,575,3.207,613,4.017,669,3.402,847,3.63,1123,3.908,1393,4.072,1394,4.742,1395,5.336,1396,5.336,1397,4.26,1398,3.63,1399,4.742,1400,4.26,1401,4.26,1403,4.742,3041,5.072,3056,5.336,3485,6.184,3486,6.184]],["title/injectables/UserMiddleware-1.html",[0,0.602,127,1.373,3056,2.724]],["body/injectables/UserMiddleware-1.html",[0,1.179,2,2.032,3,0.06,4,0.052,5,0.06,7,0.19,8,1.159,10,4.399,14,0.439,16,0.941,17,0.006,18,0.461,19,0.848,21,3.511,22,3.118,23,4.485,24,3.947,25,3.496,26,4.356,28,0.171,29,3.112,30,0.925,31,2.752,32,0.308,34,4.261,35,2.289,36,0.878,39,2.573,49,2.519,50,0.06,51,0.153,52,1.892,57,2.466,58,1.544,68,4.072,69,3.762,70,3.511,71,4.479,77,0.005,78,0.005,104,1.514,183,3.762,191,3.511,394,2.32,395,2.818,575,3.207,613,4.017,669,3.402,847,3.63,1123,3.908,1393,4.072,1394,4.742,1395,5.336,1396,5.336,1397,4.26,1398,3.63,1399,4.742,1400,4.26,1401,4.26,1403,4.742,3041,5.072,3056,5.336,3487,6.184,3488,6.184]],["title/interfaces/UserRefreshCreationAttrbs.html",[302,0.914,2276,3.003]],["body/interfaces/UserRefreshCreationAttrbs.html",[3,0.059,4,0.051,5,0.059,7,0.185,17,0.006,18,0.624,28,0.194,50,0.09,59,2.75,60,0.946,77,0.005,78,0.005,92,2.786,121,0.855,122,3.053,123,1.783,124,1.184,128,1.482,293,3.434,302,1.78,303,2.057,305,3.129,306,3.129,307,3.129,308,2.763,309,1.322,310,2.852,311,2.429,316,3.268,613,4.558,835,3.543,1697,3.671,2274,3.813,2275,4.157,2276,4.821,2277,3.813,2278,3.974,2279,3.813,2280,3.671]],["title/classes/UserRefreshToken.html",[51,0.117,293,1.857]],["body/classes/UserRefreshToken.html",[3,0.036,4,0.031,5,0.036,7,0.112,8,0.808,14,0.651,16,0.979,17,0.006,18,0.48,19,0.882,28,0.205,30,1.229,32,0.282,50,0.036,51,0.09,54,2.265,60,0.849,77,0.003,78,0.003,104,1.604,111,2.809,112,1.845,118,0.787,121,0.605,122,2.928,124,1.197,125,1.828,126,3.376,127,2.467,128,2.208,129,3.512,132,2.337,136,3.493,137,1.318,141,3.376,142,4.121,293,3.208,308,2.305,309,1.66,352,4.5,353,4.229,378,3.067,405,2.009,451,2.75,586,2.027,587,2.861,588,4.111,591,5.826,592,5.826,594,4.431,595,4.431,596,2.222,611,4.192,612,4.002,618,4.431,619,2.996,622,2.801,624,4.143,625,2.996,627,2.405,628,2.405,629,2.405,631,4.143,632,4.143,633,4.143,634,4.143,635,4.143,636,2.996,647,4.431,649,4.431,651,3.655,652,1.626,653,2.35,654,2.653,655,2.802,656,3.286,657,2.405,658,1.589,659,1.52,661,1.626,663,2.074,664,2.405,665,3.286,666,2.996,671,2.801,672,2.405,673,5.273,676,5.273,1486,5.826,1515,2.996,1539,3.721,1699,4.033,1904,3.286,2276,2.308,2315,5.732,3210,2.801,3489,3.653,3490,7.103,3491,5.402,3492,3.653,3493,3.653,3494,3.653,3495,3.653,3496,3.653,3497,3.653,3498,3.653,3499,5.402,3500,3.653,3501,3.653,3502,3.653,3503,3.653,3504,3.653,3505,3.653,3506,3.653,3507,5.402,3508,3.653,3509,3.653,3510,3.653]],["title/classes/UserRoles.html",[51,0.117,512,2.275]],["body/classes/UserRoles.html",[3,0.047,4,0.041,5,0.047,7,0.149,14,0.6,17,0.006,28,0.206,32,0.346,43,1.735,44,2.384,45,1.887,46,2.384,50,0.047,51,0.12,77,0.004,78,0.004,111,2.99,112,1.789,118,1.046,121,0.741,122,3.028,124,1.254,125,1.88,126,3.593,127,3.234,128,2.286,129,3.154,132,1.764,133,2.059,136,3.708,137,1.751,141,3.593,142,2.323,223,2.16,309,1.85,313,4.07,451,2.47,512,3.165,586,2.481,587,3.347,588,4.29,611,3.165,612,4.144,615,4.327,627,3.196,628,2.943,629,2.943,651,3.88,652,2.16,653,2.876,654,4.149,658,2.111,659,2.02,661,2.16,664,3.76,746,2.212,1471,2.323,1681,3.972,2812,4.327,3511,4.854,3512,8.717,3513,4.854,3514,4.854,3515,4.854,3516,4.854,3517,4.854,3518,4.854,3519,4.854,3520,4.854,3521,4.854]],["title/interfaces/UsercreationAttrbs.html",[302,0.914,2278,3.13]],["body/interfaces/UsercreationAttrbs.html",[3,0.057,4,0.05,5,0.057,7,0.181,17,0.006,18,0.686,28,0.203,50,0.09,59,3.968,60,0.948,77,0.005,78,0.005,92,2.76,121,0.841,122,2.043,123,1.738,124,1.011,128,1.444,293,2.298,302,1.768,303,2.005,305,3.05,306,3.05,307,3.05,308,2.749,309,1.288,310,3.136,311,2.671,316,3.593,613,3.05,835,3.453,1697,3.578,2274,3.717,2275,4.051,2276,3.717,2277,3.717,2278,4.942,2279,3.717,2280,3.578]],["title/controllers/UsersController.html",[143,2.115,3522,3.898]],["body/controllers/UsersController.html",[3,0.037,4,0.032,5,0.037,7,0.116,8,0.828,9,1.114,11,1.174,14,0.512,16,1.098,17,0.006,18,0.538,19,0.989,22,2.847,23,2.717,24,3.573,25,3.012,26,3.543,28,0.188,29,2.035,30,1.079,32,0.38,36,0.536,39,1.569,50,0.037,51,0.093,54,1.579,60,0.75,72,1.217,77,0.004,78,0.004,93,1.753,103,1.192,104,1.41,107,1.761,122,2.668,124,1.251,125,1.606,132,2.142,137,1.361,143,1.679,145,1.641,147,2.214,150,5.372,157,5.89,160,5.486,161,5.242,166,5.814,167,6.978,168,5.225,172,4.242,173,3.094,183,2.294,184,3.365,185,2.383,186,2.598,187,2.484,188,2.383,189,2.732,190,5.291,191,2.141,192,2.294,193,3.363,194,4.969,195,4.969,196,2.732,197,2.294,198,2.484,199,2.484,208,2.141,209,2.294,210,2.214,211,2.294,212,1.719,213,2.598,214,2.214,215,2.598,216,2.598,217,2.598,218,4.388,219,2.484,220,2.484,221,2.383,222,2.075,224,4.932,226,2.141,227,2.294,228,2.294,229,3.14,230,2.294,231,2.214,232,2.383,233,2.294,234,2.732,236,3.363,237,2.892,242,4.512,243,3.845,244,4.932,245,2.484,246,4.512,247,5.917,248,2.484,258,3.363,259,4.932,260,4.932,309,0.826,483,2.79,495,1.536,613,3.983,669,2.075,689,2.484,699,4.006,1288,3.363,1310,5.372,1330,3.984,1335,3.363,1337,3.363,1341,3.363,1344,2.892,1348,3.363,1351,7.158,1352,5.84,1358,3.363,1370,3.363,1454,5.532,1574,2.892,2280,2.294,2298,2.598,3210,2.892,3419,5.225,3437,4.537,3522,4.537,3523,3.772,3524,4.932,3525,5.84,3526,6.55,3527,3.363,3528,5.531,3529,5.531,3530,5.531,3531,3.772,3532,3.772,3533,3.772,3534,3.363,3535,3.772,3536,3.772,3537,3.772,3538,3.772,3539,3.772,3540,3.772,3541,3.772,3542,3.772,3543,3.772,3544,3.772,3545,3.094,3546,3.363,3547,3.363,3548,4.537,3549,3.094,3550,3.772,3551,3.772,3552,3.772,3553,3.772,3554,3.772,3555,3.772,3556,3.772,3557,3.772,3558,3.772,3559,3.772,3560,3.772,3561,3.772,3562,3.772]],["title/modules/UsersModule.html",[474,1.783,518,2.397]],["body/modules/UsersModule.html",[3,0.038,4,0.032,5,0.038,8,0.576,14,0.274,16,0.586,17,0.007,18,0.287,19,0.528,28,0.085,30,0.576,32,0.396,36,0.547,38,1.505,43,1.474,44,1.892,45,1.603,46,1.892,50,0.038,51,0.095,52,1.178,77,0.004,78,0.004,112,1.153,132,1.499,133,1.749,145,2.443,275,2.343,276,2.389,277,1.998,293,2.194,334,4.317,366,2.434,381,2.343,474,2.108,475,2.913,476,1.844,477,2.759,481,4.449,483,4.584,484,2.913,485,1.943,486,1.943,488,2.913,489,3.55,490,2.434,491,3.55,492,4.604,494,4.604,495,1.569,496,4.801,497,3.55,498,2.434,500,2.056,501,2.759,502,2.119,503,2.954,504,3.16,505,2.913,506,2.262,507,2.343,508,2.537,509,2.537,511,1.536,512,2.689,513,2.056,514,2.913,515,2.262,516,2.389,517,2.056,518,4.757,524,2.654,525,2.954,526,2.954,527,2.056,528,1.998,531,3.298,532,2.654,533,2.834,534,2.187,535,2.834,536,2.187,537,2.759,538,2.434,539,2.913,540,2.434,541,2.689,542,2.187,543,2.834,544,2.187,545,2.623,546,2.187,547,2.834,548,2.187,549,2.108,550,1.569,552,3.256,554,3.55,555,2.187,557,1.998,558,2.056,559,2.056,560,2.056,561,2.056,562,2.056,563,2.119,564,2.954,565,2.954,568,2.954,569,2.954,571,2.654,572,4.567,573,3.321,575,3.779,576,4.069,581,4.069,1155,3.55,1157,3.298,1163,2.262,1166,2.954,1175,2.654,1192,4.069,1193,3.435,1194,4.069,1195,3.435,1196,2.954,1330,4.92,1421,2.79,2282,5.983,2298,2.654,3056,2.654,3060,3.435,3419,2.79,3465,3.435,3522,5.438,3545,3.16,3546,3.435,3548,3.16,3549,3.16,3563,3.435,3564,3.435,3565,3.852,3566,3.852,3567,3.852,3568,3.852,3569,3.852,3570,3.852,3571,3.852,3572,3.852,3573,5.617,3574,3.852,3575,3.852,3576,3.852]],["title/injectables/UsersService.html",[0,0.724,483,2.397]],["body/injectables/UsersService.html",[0,0.552,2,0.723,3,0.021,4,0.019,5,0.021,7,0.068,8,0.543,9,2.829,11,1.13,14,0.598,16,1.281,17,0.006,18,0.641,19,1.154,22,2.143,28,0.186,30,1.243,32,0.325,33,0.764,35,1.072,36,0.312,37,1.21,38,0.859,47,3.136,50,0.021,51,0.054,54,1.036,55,1.21,58,2.303,60,0.795,62,2.63,64,2.556,65,2.188,66,2.918,67,2.99,72,3.025,76,1.686,77,0.002,78,0.002,93,2.924,101,1.174,103,0.474,104,1.708,109,1.14,110,1.14,112,1.314,117,4.409,122,2.224,123,0.65,124,1.228,127,1.26,128,0.54,132,2.501,133,1.994,150,3.799,166,4.906,172,2.783,173,1.804,200,1.515,305,1.882,306,1.882,307,1.882,308,1.967,309,1.014,310,2.309,311,1.054,316,2.766,382,1.338,391,1.249,403,3.321,404,2.99,414,1.887,438,1.515,459,1.338,461,3.703,483,1.83,545,1.694,678,2.783,685,2.783,686,3.799,687,2.783,690,3.552,691,3.397,699,3.894,712,2.783,713,3.917,717,2.976,718,3.272,725,2.783,729,2.783,730,2.783,731,2.783,736,1.804,737,1.804,738,1.961,739,1.961,740,1.961,743,4.562,744,3.235,745,2.976,746,1.654,747,2.976,748,1.961,751,1.961,753,3.235,754,1.961,755,1.515,756,1.961,764,5.555,766,1.961,772,2.976,777,1.804,778,1.804,782,1.804,784,1.804,786,2.976,806,2.976,807,1.804,813,1.804,815,1.804,818,1.804,821,2.976,822,2.976,823,2.976,824,3.799,825,1.804,835,2.13,923,3.235,924,3.235,925,3.235,936,3.235,941,4.411,942,3.235,1310,4.409,1344,3.552,1454,4.122,2059,4.409,2074,1.686,2273,4.409,2274,4.046,2279,4.046,2280,1.338,3210,1.686,3419,3.894,3435,1.961,3436,1.961,3524,3.235,3525,4.13,3527,3.235,3534,1.961,3545,1.804,3547,1.961,3548,3.799,3549,1.804,3577,2.199,3578,3.628,3579,3.628,3580,3.628,3581,3.628,3582,3.628,3583,3.628,3584,2.199,3585,2.199,3586,3.628,3587,3.628,3588,2.199,3589,2.199,3590,3.628,3591,2.199,3592,3.628,3593,2.199,3594,7.56,3595,2.199,3596,2.199,3597,3.628,3598,2.199,3599,3.628,3600,2.199,3601,3.628,3602,2.199,3603,3.628,3604,2.199,3605,2.199,3606,2.199,3607,2.199,3608,2.199,3609,3.628,3610,2.199,3611,3.628,3612,2.199,3613,2.199,3614,2.199,3615,2.199,3616,2.199,3617,3.628,3618,2.199,3619,2.199,3620,2.199,3621,2.199,3622,3.628,3623,2.199,3624,2.199,3625,2.199,3626,4.632,3627,2.199,3628,2.199,3629,2.199,3630,2.199,3631,2.199,3632,2.199,3633,2.199,3634,2.199,3635,2.199,3636,2.199,3637,2.199,3638,2.199,3639,2.199,3640,3.628,3641,3.628,3642,2.199,3643,2.199,3644,2.199,3645,2.199,3646,2.199,3647,2.199,3648,2.199,3649,2.199,3650,3.628,3651,3.628,3652,2.199,3653,2.199,3654,2.199,3655,2.199,3656,2.199,3657,2.199,3658,2.199,3659,2.199,3660,2.199,3661,2.199,3662,2.199,3663,2.199,3664,3.628,3665,2.199]],["title/injectables/ValidateDto.html",[0,0.724,204,3.645]],["body/injectables/ValidateDto.html",[0,1.201,2,2.092,3,0.062,4,0.054,5,0.062,7,0.195,8,1.18,9,2.532,14,0.452,16,0.969,17,0.006,18,0.475,19,0.873,28,0.141,30,0.953,32,0.356,36,0.904,50,0.062,51,0.212,52,1.947,58,2.14,64,2.018,65,1.727,72,2.054,77,0.005,78,0.005,93,2.5,104,1.541,123,2.532,140,2.342,204,6.049,893,4.385,2031,5.194,2032,3.872,2544,5.221,2923,6.47,2927,6.47,2929,7.349,2947,7.03,3105,5.676,3666,6.366,3667,6.366,3668,6.366,3669,5.221,3670,6.366,3671,6.366,3672,6.366,3673,6.366,3674,5.676,3675,6.366,3676,6.366,3677,6.366,3678,6.366]],["title/interfaces/ValidateUser.html",[302,0.914,2279,3.003]],["body/interfaces/ValidateUser.html",[3,0.06,4,0.052,5,0.06,7,0.19,17,0.006,18,0.632,28,0.171,50,0.091,59,2.823,60,0.946,77,0.005,78,0.005,92,2.813,121,0.869,122,2.152,123,1.83,124,1.045,128,1.521,293,2.42,302,1.792,303,2.112,305,3.213,306,3.213,307,3.213,308,2.777,309,1.357,310,2.886,311,2.459,316,3.641,613,3.213,835,3.637,1697,3.769,2274,3.915,2275,4.268,2276,3.915,2277,3.915,2278,4.08,2279,4.901,2280,3.769]],["title/classes/ValidationException.html",[51,0.117,3669,3.898]],["body/classes/ValidationException.html",[3,0.069,4,0.06,5,0.069,7,0.217,11,2.202,14,0.597,16,1.077,17,0.006,18,0.528,19,0.97,24,3.743,32,0.281,33,2.456,36,1.005,50,0.069,51,0.175,66,3.223,77,0.005,78,0.005,118,1.524,121,0.942,586,3.155,856,6.5,3669,6.897,3674,8.001,3679,7.072,3680,8.409,3681,8.409,3682,7.072,3683,7.072]],["title/classes/WatchedProducts.html",[51,0.117,1194,3.442]],["body/classes/WatchedProducts.html",[3,0.057,4,0.049,5,0.057,7,0.18,14,0.587,17,0.006,28,0.203,32,0.328,50,0.057,51,0.145,77,0.005,78,0.005,111,2.923,112,1.886,118,1.265,121,0.84,122,3.123,124,1.239,125,1.838,129,2.928,132,2,223,2.613,309,1.969,451,2.662,549,2.813,550,2.391,586,2.813,587,3.676,588,4.253,611,3.589,612,4.092,628,3.337,629,3.337,651,3.873,652,2.613,653,3.261,654,4.057,658,2.554,659,2.443,661,2.613,664,3.676,746,2.675,1194,5.43,1464,5.278,1465,3.045,1467,4.737,1471,2.81,3031,5.235,3684,5.871,3685,5.871,3686,5.871,3687,5.871]],["title/dependencies.html",[477,2.812,3688,3.525]],["body/dependencies.html",[17,0.006,36,0.783,38,2.153,39,2.995,51,0.178,77,0.005,78,0.005,95,2.859,137,1.989,140,2.028,184,3.353,222,3.032,278,3.353,366,3.483,390,3.353,477,2.707,528,2.859,555,3.13,658,3.131,659,2.294,725,4.227,912,3.13,1061,4.521,1062,4.521,1063,3.993,1101,5.52,1122,3.797,1145,4.227,1146,4.227,1184,7.146,1186,4.227,1448,3.13,1812,3.797,1838,4.227,1839,4.227,1840,4.227,1861,4.521,1882,4.521,2032,3.353,2125,4.521,2231,4.915,2352,4.521,2353,4.521,2932,4.915,2933,4.915,2947,4.521,3386,4.915,3689,5.512,3690,5.512,3691,5.512,3692,5.512,3693,7.198,3694,5.512,3695,5.512,3696,5.512,3697,8.015,3698,5.512,3699,8.015,3700,5.512,3701,5.512,3702,5.512,3703,5.512,3704,5.512,3705,5.512,3706,5.512,3707,7.198,3708,7.198,3709,5.512,3710,5.512,3711,5.512,3712,5.512,3713,5.512,3714,5.512,3715,5.512,3716,5.512,3717,5.512,3718,5.512,3719,5.512,3720,5.512,3721,5.512,3722,5.512,3723,5.512,3724,5.512,3725,5.512,3726,5.512,3727,5.512,3728,5.512,3729,5.512,3730,5.512,3731,5.512,3732,5.512,3733,5.512,3734,5.512,3735,4.915,3736,5.512,3737,5.512,3738,5.512,3739,5.512,3740,7.198,3741,5.512,3742,5.512,3743,5.512,3744,5.512,3745,5.512,3746,5.512,3747,5.512,3748,5.512,3749,5.512,3750,5.512,3751,5.512,3752,5.512,3753,5.512,3754,5.512,3755,5.512,3756,5.512,3757,5.512]],["title/interfaces/fileCreated.html",[302,0.914,2189,3.898]],["body/interfaces/fileCreated.html",[0,0.982,3,0.046,4,0.039,5,0.081,7,0.144,9,1.905,17,0.006,18,0.481,22,2.661,25,1.755,28,0.142,29,2.372,32,0.351,33,1.625,35,1.905,36,0.665,39,1.947,50,0.046,51,0.159,57,1.866,58,2.308,60,0.854,64,2.044,65,1.749,77,0.004,78,0.004,92,1.483,93,1.483,103,1.389,104,1.442,112,1.631,121,0.722,239,2.574,240,2.426,302,0.899,303,1.595,389,4.074,390,4.488,394,1.755,395,2.132,396,4.246,399,4.207,451,1.431,463,3.389,495,2.626,573,2.938,856,4.67,912,4.514,977,5.082,992,3.223,1095,3.389,1244,3.838,1245,3.838,1246,6.051,1247,3.838,1248,3.838,1249,5.288,1250,3.838,1251,6.051,1252,3.838,1253,3.838,1254,3.838,1255,3.838,1256,3.838,1481,3.086,1805,3.223,2167,4.172,2170,6.578,2171,4.172,2173,4.172,2175,4.172,2176,6.578,2183,4.172,2185,8.144,2186,6.578,2187,4.172,2188,4.172,2189,5.288,2190,8.024,2191,4.172,2192,4.172,2193,4.172,2194,4.172,2195,4.172,2196,4.172,2197,6.578,2198,4.172,2199,4.172,2200,3.588,2201,4.172,2202,4.172,2203,4.172,2204,4.172,2205,4.172,2206,4.172,2207,4.172,2208,5.749,2209,4.172,2210,4.172,2211,4.172,2212,5.749,2213,5.749,2214,5.749,2215,5.749,2216,4.172,2217,4.172,2218,4.172,2219,4.172,2220,4.172]],["title/miscellaneous/functions.html",[3758,3.032,3759,5.104]],["body/miscellaneous/functions.html",[7,0.213,16,1.265,17,0.006,18,0.62,19,1.14,28,0.183,30,1.038,60,0.777,77,0.005,78,0.005,93,2.199,880,6.817,1711,6.02,2542,6.185,2549,8.705,2551,6.185,2556,6.185,3758,5.319,3759,6.185,3760,8.9,3761,6.936,3762,6.936,3763,8.9,3764,6.936,3765,8.9,3766,6.936,3767,8.312,3768,6.936,3769,6.936,3770,6.936,3771,6.936,3772,6.936,3773,6.936,3774,6.936]],["title/index.html",[7,0.121,168,2.864,996,3.243]],["body/index.html",[4,0.054,17,0.006,77,0.005,78,0.005,128,1.579,398,4.233,659,2.675,1005,5.273,1078,5.732,1965,4.93,2529,5.732,2877,7.716,3735,7.676,3775,6.429,3776,6.429,3777,7.936,3778,6.429,3779,6.429,3780,6.429,3781,6.429,3782,6.429,3783,6.429,3784,6.429,3785,6.429,3786,9.533,3787,6.429,3788,6.429,3789,6.429,3790,6.429,3791,7.936,3792,6.429,3793,6.429,3794,6.429,3795,7.936,3796,7.936,3797,6.429,3798,6.429,3799,6.429,3800,6.429,3801,7.936,3802,7.936,3803,6.429,3804,6.429,3805,6.429,3806,6.429,3807,6.429,3808,5.732,3809,6.429,3810,6.429,3811,6.429,3812,6.429,3813,6.429,3814,6.429,3815,6.429,3816,6.429,3817,6.429,3818,5.732,3819,6.429,3820,6.429,3821,6.429,3822,6.429,3823,6.429,3824,5.732]],["title/modules.html",[476,3.12]],["body/modules.html",[17,0.005,77,0.005,78,0.005,475,3.485,476,3.217,501,3.301,505,3.485,514,3.485,518,3.39,531,3.946,1149,5.154,1153,4.247,1154,4.089,1155,4.247,1156,4.247,1157,3.946,1158,4.868,1159,4.868,3808,8.873,3825,9.952,3826,9.952,3827,9.981,3828,6.721,3829,6.721]],["title/overview.html",[3830,5.811]],["body/overview.html",[2,1.213,17,0.006,77,0.003,78,0.003,81,2.095,86,4.428,118,0.795,145,1.605,267,5.548,303,1.258,334,4.607,335,5.34,462,3.027,473,2.673,475,4.95,476,1.766,477,2.673,478,3.29,479,3.29,480,3.29,481,4.956,482,4.901,483,4.491,484,2.823,485,1.862,486,1.862,501,4.67,505,4.968,514,4.83,518,4.667,531,5.227,691,5.206,969,4.917,1135,4.959,1149,7.498,1150,3.29,1151,3.29,1152,3.29,1153,4.811,1154,5.251,1155,5.693,1156,4.811,1157,5.227,1158,6.252,1159,4.684,1330,5.251,1404,3.29,1405,3.29,1406,3.29,1407,5.781,1476,4.959,1516,3.29,1517,3.29,1544,3.29,1545,3.29,1546,3.29,1547,5.684,1548,5.824,1803,3.29,1804,3.29,1805,4.917,2282,5.568,2346,3.29,2347,3.29,2617,3.29,2618,3.29,2619,4.959,2794,3.29,2795,3.29,2797,3.29,3042,3.29,3043,3.29,3044,5.474,3144,4.684,3154,3.29,3155,3.29,3245,3.29,3246,3.29,3247,3.29,3563,3.29,3564,3.29,3830,3.29,3831,3.69,3832,3.69,3833,3.69,3834,3.69]],["title/properties.html",[121,0.641,3688,3.525]],["body/properties.html",[17,0.006,77,0.006,78,0.006,121,0.854,128,1.871,2531,6.794,3818,6.794,3824,6.794,3835,7.62,3836,7.62,3837,7.62,3838,7.62]],["title/miscellaneous/typealiases.html",[3758,3.032,3839,5.725]],["body/miscellaneous/typealiases.html",[7,0.233,17,0.006,28,0.193,77,0.006,78,0.006,241,4.452,919,4.994,970,6.22,975,7.185,2922,6.762,2925,7.81,3758,5.816,3840,7.584,3841,7.584,3842,7.584]]],"invertedIndex":[["",{"_index":17,"title":{},"body":{"injectables/ActivateMiddleware.html":{},"guards/AddContentGuard.html":{},"classes/AddRoleDto.html":{},"controllers/AdminController.html":{},"guards/AdminGuard.html":{},"interfaces/AdminInterface.html":{},"injectables/AdminJwtRefreshService.html":{},"modules/AdminModule.html":{},"classes/AdminRefreshToken.html":{},"interfaces/AdminRefreshTokenCreationAttrbs.html":{},"injectables/AdminService.html":{},"injectables/AdminUserMiddleware.html":{},"interfaces/AdmincreationAttrbs.html":{},"classes/AllExceptionsFilter.html":{},"classes/ApiError.html":{},"classes/ApiErrorExceptionFilter.html":{},"classes/ApiException.html":{},"classes/ApiExceptionFilter.html":{},"injectables/AppClusterService.html":{},"controllers/AppController.html":{},"injectables/AppListener.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"guards/AuthFerfershGuard.html":{},"injectables/AuthMiddleware.html":{},"modules/AuthModule.html":{},"interfaces/AuthUser.html":{},"classes/BadRequestError.html":{},"classes/BanUserDto.html":{},"classes/BookmarksProducts.html":{},"controllers/CardController.html":{},"injectables/CardService.html":{},"classes/Cart.html":{},"modules/CartModule.html":{},"classes/CartProduct.html":{},"modules/CategoriesColoursModule.html":{},"controllers/CategoriesController.html":{},"injectables/CategoriesService.html":{},"classes/Category.html":{},"interfaces/CategoryCreationAtrb.html":{},"classes/ChangeDto.html":{},"interfaces/CodeDto.html":{},"classes/Colour.html":{},"interfaces/ColourCreationAtrb.html":{},"controllers/ColoursController.html":{},"injectables/ColoursService.html":{},"modules/CoreModule.html":{},"injectables/CorsMiddleware.html":{},"classes/CreateAccessTokenDto.html":{},"classes/CreateAdminDto.html":{},"classes/CreateAdminRefreshTokenDto.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateColourDto.html":{},"classes/CreateOwnerDto.html":{},"classes/CreateOwnerRefreshTokenDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateReviewDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserRefreshTokenDto.html":{},"classes/Currencies.html":{},"injectables/CurrencyService.html":{},"guards/EditContentGuard.html":{},"guards/EditWebsiteGuard.html":{},"injectables/FilesService.html":{},"classes/GarbageCollectingProcessor.html":{},"injectables/GlobalInterceptor.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/ITelegramModuleAsyncOptions.html":{},"interfaces/ITelegramOptions.html":{},"injectables/InitializeEmailMiddleware.html":{},"interfaces/InitializeUser.html":{},"injectables/InitializeUserMiddleware.html":{},"guards/JwtAuthGuard.html":{},"classes/JwtRefreshTokenDeletedEvent.html":{},"injectables/LocationMiddleware.html":{},"classes/LoginDto.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"classes/MatchConstraint.html":{},"interfaces/Msg.html":{},"classes/Nested.html":{},"classes/Nested-1.html":{},"classes/NotFoundError.html":{},"classes/Order.html":{},"classes/OrderProduct.html":{},"controllers/OrdersController.html":{},"modules/OrdersModule.html":{},"injectables/OrdersService.html":{},"classes/Owner.html":{},"guards/OwnerAdminGuard.html":{},"interfaces/OwnerCreationAttrbs.html":{},"injectables/OwnerJwtRefreshService.html":{},"modules/OwnerModule.html":{},"classes/OwnerRefreshToken.html":{},"interfaces/OwnerRefreshTokenCreationAttrbs.html":{},"injectables/OwnerService.html":{},"classes/ParseFormDataJsonPipe.html":{},"injectables/ParseJsonPipe.html":{},"interfaces/Payload.html":{},"classes/Product.html":{},"classes/ProductCategories.html":{},"classes/ProductColours.html":{},"interfaces/ProductCreationAttrs.html":{},"injectables/ProductMiddleware.html":{},"modules/ProductModule.html":{},"classes/ProductReviews.html":{},"classes/QueryFilterDto.html":{},"guards/RefreshAuthGuard.html":{},"interfaces/RequestHeaders.html":{},"classes/RequestValidator.html":{},"classes/ResetDto.html":{},"interfaces/ReturnedAdmin.html":{},"interfaces/ReturnedCategory.html":{},"interfaces/ReturnedColour.html":{},"interfaces/ReturnedOwner.html":{},"interfaces/ReturnedProduct.html":{},"interfaces/ReturnedProducts.html":{},"interfaces/ReturnedReview.html":{},"interfaces/ReturnedUser.html":{},"classes/Review.html":{},"interfaces/ReviewCreationAtrb.html":{},"controllers/ReviewsController.html":{},"modules/ReviewsModule.html":{},"injectables/ReviewsService.html":{},"classes/Role.html":{},"interfaces/RolecreationAttrbs.html":{},"controllers/RolesController.html":{},"guards/RolesGuard.html":{},"modules/RolesModule.html":{},"injectables/RolesService.html":{},"classes/SignupDto.html":{},"injectables/TasksService.html":{},"modules/TelegramModule.html":{},"injectables/TelegramService.html":{},"injectables/ThrottlerBehindProxyGuard.html":{},"interfaces/Tokens.html":{},"classes/UpdateCategoryDto.html":{},"classes/UpdateColourDto.html":{},"classes/UpdateProductDto.html":{},"classes/UpdateUserDto.html":{},"injectables/UserAdminMiddleware.html":{},"guards/UserGuard.html":{},"interfaces/UserInterface.html":{},"injectables/UserJwtRefreshTokenService.html":{},"injectables/UserMiddleware.html":{},"injectables/UserMiddleware-1.html":{},"interfaces/UserRefreshCreationAttrbs.html":{},"classes/UserRefreshToken.html":{},"classes/UserRoles.html":{},"interfaces/UsercreationAttrbs.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"injectables/ValidateDto.html":{},"interfaces/ValidateUser.html":{},"classes/ValidationException.html":{},"classes/WatchedProducts.html":{},"dependencies.html":{},"interfaces/fileCreated.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{}}}],["0",{"_index":414,"title":{},"body":{"injectables/AdminJwtRefreshService.html":{},"injectables/AdminService.html":{},"classes/ApiErrorExceptionFilter.html":{},"classes/ApiExceptionFilter.html":{},"injectables/AppClusterService.html":{},"injectables/CategoriesService.html":{},"injectables/ColoursService.html":{},"injectables/CorsMiddleware.html":{},"classes/CreateAccessTokenDto.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserRefreshTokenDto.html":{},"injectables/CurrencyService.html":{},"guards/JwtAuthGuard.html":{},"classes/LoginDto.html":{},"interfaces/Msg.html":{},"injectables/OwnerJwtRefreshService.html":{},"guards/RefreshAuthGuard.html":{},"interfaces/RequestHeaders.html":{},"classes/RequestValidator.html":{},"classes/ResetDto.html":{},"guards/RolesGuard.html":{},"classes/SignupDto.html":{},"injectables/UserJwtRefreshTokenService.html":{},"injectables/UsersService.html":{}}}],["0.1.13",{"_index":3745,"title":{},"body":{"dependencies.html":{}}}],["0.14.0",{"_index":3714,"title":{},"body":{"dependencies.html":{}}}],["0.5.1",{"_index":3713,"title":{},"body":{"dependencies.html":{}}}],["0.6.2",{"_index":3692,"title":{},"body":{"dependencies.html":{}}}],["06614568945",{"_index":2816,"title":{},"body":{"classes/OwnerRefreshToken.html":{}}}],["0px!important",{"_index":2483,"title":{},"body":{"injectables/MailService.html":{}}}],["1",{"_index":127,"title":{"classes/Nested-1.html":{},"injectables/UserMiddleware-1.html":{}},"body":{"classes/AddRoleDto.html":{},"classes/AdminRefreshToken.html":{},"injectables/AdminService.html":{},"classes/ApiErrorExceptionFilter.html":{},"classes/ApiExceptionFilter.html":{},"injectables/AppClusterService.html":{},"modules/AppModule.html":{},"classes/BanUserDto.html":{},"injectables/CorsMiddleware.html":{},"classes/CreateAccessTokenDto.html":{},"classes/CreateAdminRefreshTokenDto.html":{},"classes/CreateOwnerRefreshTokenDto.html":{},"classes/CreateUserRefreshTokenDto.html":{},"classes/Currencies.html":{},"guards/JwtAuthGuard.html":{},"injectables/LocationMiddleware.html":{},"injectables/MailService.html":{},"interfaces/Msg.html":{},"classes/Owner.html":{},"classes/OwnerRefreshToken.html":{},"injectables/OwnerService.html":{},"classes/QueryFilterDto.html":{},"guards/RefreshAuthGuard.html":{},"interfaces/RequestHeaders.html":{},"classes/Role.html":{},"guards/RolesGuard.html":{},"injectables/TasksService.html":{},"classes/UserRefreshToken.html":{},"classes/UserRoles.html":{},"injectables/UsersService.html":{}}}],["1.0.1",{"_index":3691,"title":{},"body":{"dependencies.html":{}}}],["1.0.2",{"_index":3724,"title":{},"body":{"dependencies.html":{}}}],["1.0.3",{"_index":3734,"title":{},"body":{"dependencies.html":{}}}],["1.0.7",{"_index":3721,"title":{},"body":{"dependencies.html":{}}}],["1.1.1",{"_index":3836,"title":{},"body":{"properties.html":{}}}],["1.1.8",{"_index":3730,"title":{},"body":{"dependencies.html":{}}}],["1.20.1",{"_index":3709,"title":{},"body":{"dependencies.html":{}}}],["1.3.1",{"_index":3695,"title":{},"body":{"dependencies.html":{}}}],["1.4.6",{"_index":3718,"title":{},"body":{"dependencies.html":{}}}],["1.4.7",{"_index":3725,"title":{},"body":{"dependencies.html":{}}}],["1.7.4",{"_index":3716,"title":{},"body":{"dependencies.html":{}}}],["1.8.1",{"_index":3690,"title":{},"body":{"dependencies.html":{}}}],["10",{"_index":473,"title":{},"body":{"injectables/AdminJwtRefreshService.html":{},"modules/CoreModule.html":{},"injectables/OwnerJwtRefreshService.html":{},"injectables/OwnerService.html":{},"overview.html":{}}}],["10.0.1",{"_index":3696,"title":{},"body":{"dependencies.html":{}}}],["100",{"_index":1211,"title":{},"body":{"modules/AppModule.html":{},"injectables/MailService.html":{}}}],["1000",{"_index":1019,"title":{},"body":{"injectables/AppClusterService.html":{},"controllers/AppController.html":{},"interfaces/Msg.html":{}}}],["10000",{"_index":1218,"title":{},"body":{"modules/AppModule.html":{}}}],["11",{"_index":3832,"title":{},"body":{"overview.html":{}}}],["12282810",{"_index":1260,"title":{},"body":{"modules/AppModule.html":{}}}],["14",{"_index":3831,"title":{},"body":{"overview.html":{}}}],["15000",{"_index":1230,"title":{},"body":{"modules/AppModule.html":{}}}],["15px",{"_index":2438,"title":{},"body":{"injectables/MailService.html":{}}}],["16",{"_index":431,"title":{},"body":{"injectables/AdminJwtRefreshService.html":{},"controllers/AppController.html":{},"injectables/OwnerJwtRefreshService.html":{}}}],["172800000",{"_index":570,"title":{},"body":{"modules/AdminModule.html":{}}}],["2",{"_index":2397,"title":{},"body":{"injectables/MailService.html":{}}}],["2,20",{"_index":1948,"title":{},"body":{"classes/CreateAdminDto.html":{},"classes/CreateOwnerDto.html":{}}}],["2,30",{"_index":1979,"title":{},"body":{"classes/CreateCategoryDto.html":{},"classes/CreateColourDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUserDto.html":{},"classes/SignupDto.html":{},"classes/UpdateCategoryDto.html":{},"classes/UpdateColourDto.html":{},"classes/UpdateUserDto.html":{}}}],["2.1.0",{"_index":3701,"title":{},"body":{"dependencies.html":{}}}],["2.1.5",{"_index":3750,"title":{},"body":{"dependencies.html":{}}}],["2.2.0",{"_index":3694,"title":{},"body":{"dependencies.html":{}}}],["2.3.4",{"_index":3743,"title":{},"body":{"dependencies.html":{}}}],["2.5.0",{"_index":3753,"title":{},"body":{"dependencies.html":{}}}],["2.8.5",{"_index":3720,"title":{},"body":{"dependencies.html":{}}}],["200",{"_index":157,"title":{},"body":{"controllers/AdminController.html":{},"controllers/AuthController.html":{},"controllers/RolesController.html":{},"controllers/UsersController.html":{}}}],["2000",{"_index":1032,"title":{},"body":{"injectables/AppClusterService.html":{},"interfaces/Msg.html":{}}}],["200})@roles('owner')@useguards(jwtauthguard",{"_index":3531,"title":{},"body":{"controllers/UsersController.html":{}}}],["200})@usefilters(apiexceptionfilter)@throttle(40",{"_index":1307,"title":{},"body":{"controllers/AuthController.html":{}}}],["201",{"_index":1345,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CategoriesController.html":{},"controllers/ColoursController.html":{}}}],["201})@throttle(45",{"_index":1320,"title":{},"body":{"controllers/AuthController.html":{}}}],["201})@throttle(50",{"_index":1327,"title":{},"body":{"controllers/AuthController.html":{}}}],["202",{"_index":179,"title":{},"body":{"controllers/AdminController.html":{},"controllers/AuthController.html":{}}}],["202})@throttle(40",{"_index":1302,"title":{},"body":{"controllers/AuthController.html":{}}}],["202})@throttle(70",{"_index":1296,"title":{},"body":{"controllers/AuthController.html":{}}}],["204",{"_index":1372,"title":{},"body":{"controllers/AuthController.html":{}}}],["204})@throttle(70",{"_index":1289,"title":{},"body":{"controllers/AuthController.html":{}}}],["2345265646",{"_index":3273,"title":{},"body":{"classes/SignupDto.html":{}}}],["24",{"_index":1084,"title":{},"body":{"controllers/AppController.html":{}}}],["251912345678",{"_index":638,"title":{},"body":{"classes/AdminRefreshToken.html":{},"classes/CreateAdminDto.html":{},"classes/CreateOwnerDto.html":{},"classes/Owner.html":{}}}],["256",{"_index":466,"title":{},"body":{"injectables/AdminJwtRefreshService.html":{},"controllers/AppController.html":{},"injectables/OwnerJwtRefreshService.html":{}}}],["25px",{"_index":2437,"title":{},"body":{"injectables/MailService.html":{}}}],["25px!important",{"_index":2479,"title":{},"body":{"injectables/MailService.html":{}}}],["25px!important;}@media",{"_index":2441,"title":{},"body":{"injectables/MailService.html":{}}}],["25px!important;}[data",{"_index":2439,"title":{},"body":{"injectables/MailService.html":{}}}],["2b0d7b3dcb6d",{"_index":635,"title":{},"body":{"classes/AdminRefreshToken.html":{},"classes/CreateAccessTokenDto.html":{},"classes/OwnerRefreshToken.html":{},"classes/UserRefreshToken.html":{}}}],["3.0.0",{"_index":3703,"title":{},"body":{"dependencies.html":{}}}],["3.0.2",{"_index":3747,"title":{},"body":{"dependencies.html":{}}}],["3.1.0",{"_index":3705,"title":{},"body":{"dependencies.html":{}}}],["3.4.0",{"_index":3737,"title":{},"body":{"dependencies.html":{}}}],["3.5.0",{"_index":3689,"title":{},"body":{"dependencies.html":{}}}],["30",{"_index":1083,"title":{},"body":{"controllers/AppController.html":{}}}],["30000",{"_index":1228,"title":{},"body":{"modules/AppModule.html":{}}}],["32",{"_index":462,"title":{},"body":{"injectables/AdminJwtRefreshService.html":{},"injectables/OwnerJwtRefreshService.html":{},"overview.html":{}}}],["36",{"_index":3833,"title":{},"body":{"overview.html":{}}}],["3600000",{"_index":438,"title":{},"body":{"injectables/AdminJwtRefreshService.html":{},"injectables/AdminService.html":{},"modules/AuthModule.html":{},"injectables/OwnerJwtRefreshService.html":{},"injectables/OwnerService.html":{},"injectables/UsersService.html":{}}}],["381056733",{"_index":2066,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/SignupDto.html":{}}}],["3b7d",{"_index":632,"title":{},"body":{"classes/AdminRefreshToken.html":{},"classes/CreateAccessTokenDto.html":{},"classes/OwnerRefreshToken.html":{},"classes/UserRefreshToken.html":{}}}],["4.10.2",{"_index":3710,"title":{},"body":{"dependencies.html":{}}}],["4.11.2",{"_index":3757,"title":{},"body":{"dependencies.html":{}}}],["4.5.0",{"_index":3756,"title":{},"body":{"dependencies.html":{}}}],["400",{"_index":1352,"title":{},"body":{"controllers/AuthController.html":{},"controllers/UsersController.html":{}}}],["400)@apioperation({summary",{"_index":3528,"title":{},"body":{"controllers/UsersController.html":{}}}],["400)@httpcode(200)@post('login",{"_index":1308,"title":{},"body":{"controllers/AuthController.html":{}}}],["400)@post('code')@httpcode(202",{"_index":1303,"title":{},"body":{"controllers/AuthController.html":{}}}],["400)@roles('user')@useguards(jwtauthguard",{"_index":3542,"title":{},"body":{"controllers/UsersController.html":{}}}],["400)@useguards(jwtauthguard)@httpcode(202)@post('logout",{"_index":1313,"title":{},"body":{"controllers/AuthController.html":{}}}],["400)@useguards(refreshauthguard)@httpcode(202)@patch('refresh",{"_index":1317,"title":{},"body":{"controllers/AuthController.html":{}}}],["450",{"_index":1366,"title":{},"body":{"controllers/AuthController.html":{}}}],["450)@patch('reset')@httpcode(201",{"_index":1321,"title":{},"body":{"controllers/AuthController.html":{}}}],["465",{"_index":2358,"title":{},"body":{"modules/MailModule.html":{}}}],["46756868",{"_index":3117,"title":{},"body":{"classes/ResetDto.html":{}}}],["4bad",{"_index":633,"title":{},"body":{"classes/AdminRefreshToken.html":{},"classes/CreateAccessTokenDto.html":{},"classes/OwnerRefreshToken.html":{},"classes/UserRefreshToken.html":{}}}],["5",{"_index":1216,"title":{},"body":{"modules/AppModule.html":{},"classes/QueryFilterDto.html":{}}}],["5.1.0",{"_index":3707,"title":{},"body":{"dependencies.html":{}}}],["5.1.5",{"_index":3712,"title":{},"body":{"dependencies.html":{}}}],["5.2.5",{"_index":3729,"title":{},"body":{"dependencies.html":{}}}],["500",{"_index":904,"title":{},"body":{"classes/ApiErrorExceptionFilter.html":{},"classes/ApiExceptionFilter.html":{},"controllers/AppController.html":{}}}],["500)@get('get",{"_index":1048,"title":{},"body":{"controllers/AppController.html":{}}}],["500)@get('set",{"_index":1055,"title":{},"body":{"controllers/AppController.html":{}}}],["5000",{"_index":1234,"title":{},"body":{"modules/AppModule.html":{}}}],["56733423",{"_index":2650,"title":{},"body":{"classes/Owner.html":{}}}],["6.0.0",{"_index":3727,"title":{},"body":{"dependencies.html":{}}}],["6.1.4",{"_index":3704,"title":{},"body":{"dependencies.html":{}}}],["6.28.0",{"_index":3749,"title":{},"body":{"dependencies.html":{}}}],["6.8.0",{"_index":3739,"title":{},"body":{"dependencies.html":{}}}],["60",{"_index":1085,"title":{},"body":{"controllers/AppController.html":{}}}],["600",{"_index":1213,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{}}}],["600)@post('signup')@httpcode(201",{"_index":1328,"title":{},"body":{"controllers/AuthController.html":{}}}],["6000",{"_index":1210,"title":{},"body":{"modules/AppModule.html":{}}}],["604800000",{"_index":3572,"title":{},"body":{"modules/UsersModule.html":{}}}],["61",{"_index":3834,"title":{},"body":{"overview.html":{}}}],["7.0",{"_index":601,"title":{},"body":{"classes/AdminRefreshToken.html":{},"classes/CreateAdminRefreshTokenDto.html":{},"classes/CreateOwnerDto.html":{},"classes/CreateOwnerRefreshTokenDto.html":{},"classes/Owner.html":{},"classes/OwnerRefreshToken.html":{},"injectables/UserJwtRefreshTokenService.html":{}}}],["7.0.3",{"_index":3723,"title":{},"body":{"dependencies.html":{}}}],["7.5.7",{"_index":3748,"title":{},"body":{"dependencies.html":{}}}],["700",{"_index":245,"title":{},"body":{"controllers/AdminController.html":{},"controllers/AuthController.html":{},"controllers/CategoriesController.html":{},"controllers/ColoursController.html":{},"controllers/ReviewsController.html":{},"controllers/RolesController.html":{},"controllers/UsersController.html":{}}}],["700)@apioperation({summary",{"_index":1574,"title":{},"body":{"controllers/CategoriesController.html":{},"controllers/ColoursController.html":{},"controllers/RolesController.html":{},"controllers/UsersController.html":{}}}],["700)@delete('delete_review')@roles('owner",{"_index":3140,"title":{},"body":{"controllers/ReviewsController.html":{}}}],["700)@get('activate/:link')@httpcode(204",{"_index":1290,"title":{},"body":{"controllers/AuthController.html":{}}}],["700)@httpcode(200)@roles('owner",{"_index":1582,"title":{},"body":{"controllers/CategoriesController.html":{},"controllers/ColoursController.html":{}}}],["700)@patch('change')@useguards(jwtauthguard",{"_index":1297,"title":{},"body":{"controllers/AuthController.html":{}}}],["700)@put('create_review",{"_index":3137,"title":{},"body":{"controllers/ReviewsController.html":{}}}],["700)@roles('owner')@useguards(jwtauthguard",{"_index":159,"title":{},"body":{"controllers/AdminController.html":{}}}],["7000",{"_index":1602,"title":{},"body":{"controllers/CategoriesController.html":{},"controllers/ColoursController.html":{}}}],["7000)@cachettl(200)@get('get_categoties",{"_index":1587,"title":{},"body":{"controllers/CategoriesController.html":{}}}],["7000)@cachettl(200)@get('get_colours",{"_index":1741,"title":{},"body":{"controllers/ColoursController.html":{}}}],["8.8.0",{"_index":3741,"title":{},"body":{"dependencies.html":{}}}],["86400000",{"_index":624,"title":{},"body":{"classes/AdminRefreshToken.html":{},"modules/OwnerModule.html":{},"classes/OwnerRefreshToken.html":{},"classes/UserRefreshToken.html":{}}}],["9",{"_index":1977,"title":{},"body":{"classes/CreateCategoryDto.html":{},"classes/CreateColourDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateReviewDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUserDto.html":{},"classes/Nested.html":{},"classes/Nested-1.html":{},"classes/SignupDto.html":{},"classes/UpdateCategoryDto.html":{},"classes/UpdateColourDto.html":{},"classes/UpdateProductDto.html":{},"classes/UpdateUserDto.html":{}}}],["9.0.0",{"_index":3697,"title":{},"body":{"dependencies.html":{}}}],["9.1.6",{"_index":3693,"title":{},"body":{"dependencies.html":{}}}],["9.2.1",{"_index":3699,"title":{},"body":{"dependencies.html":{}}}],["96",{"_index":2402,"title":{},"body":{"injectables/MailService.html":{}}}],["9]+@[a",{"_index":1939,"title":{},"body":{"classes/CreateAdminDto.html":{},"classes/CreateAdminRefreshTokenDto.html":{},"classes/CreateOwnerDto.html":{},"classes/CreateOwnerRefreshTokenDto.html":{}}}],["9]+\\.)+[a",{"_index":1909,"title":{},"body":{"classes/CreateAccessTokenDto.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserRefreshTokenDto.html":{},"classes/LoginDto.html":{},"classes/ResetDto.html":{},"classes/SignupDto.html":{}}}],["9]{1,3}\\.[0",{"_index":1906,"title":{},"body":{"classes/CreateAccessTokenDto.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserRefreshTokenDto.html":{},"classes/LoginDto.html":{},"classes/ResetDto.html":{},"classes/SignupDto.html":{}}}],["9]{1,3}])|(([a",{"_index":1907,"title":{},"body":{"classes/CreateAccessTokenDto.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserRefreshTokenDto.html":{},"classes/LoginDto.html":{},"classes/ResetDto.html":{},"classes/SignupDto.html":{}}}],["9]{3",{"_index":1955,"title":{},"body":{"classes/CreateAdminDto.html":{},"classes/CreateOwnerDto.html":{},"classes/CreateUserDto.html":{},"classes/SignupDto.html":{}}}],["9]{4,6",{"_index":1957,"title":{},"body":{"classes/CreateAdminDto.html":{},"classes/CreateOwnerDto.html":{},"classes/CreateUserDto.html":{},"classes/SignupDto.html":{}}}],["9_",{"_index":1947,"title":{},"body":{"classes/CreateAdminDto.html":{},"classes/CreateOwnerDto.html":{}}}],["9b1deb4d",{"_index":631,"title":{},"body":{"classes/AdminRefreshToken.html":{},"classes/CreateAccessTokenDto.html":{},"classes/OwnerRefreshToken.html":{},"classes/UserRefreshToken.html":{}}}],["9bdd",{"_index":634,"title":{},"body":{"classes/AdminRefreshToken.html":{},"classes/CreateAccessTokenDto.html":{},"classes/OwnerRefreshToken.html":{},"classes/UserRefreshToken.html":{}}}],["_",{"_index":1978,"title":{},"body":{"classes/CreateCategoryDto.html":{},"classes/CreateColourDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateReviewDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUserDto.html":{},"classes/Nested.html":{},"classes/Nested-1.html":{},"classes/ParseFormDataJsonPipe.html":{},"classes/SignupDto.html":{},"classes/UpdateCategoryDto.html":{},"classes/UpdateColourDto.html":{},"classes/UpdateProductDto.html":{},"classes/UpdateUserDto.html":{}}}],["_.merge(originproperties",{"_index":2940,"title":{},"body":{"classes/ParseFormDataJsonPipe.html":{}}}],["_.pick(serializedvalue",{"_index":2941,"title":{},"body":{"classes/ParseFormDataJsonPipe.html":{}}}],["__dirname",{"_index":2213,"title":{},"body":{"injectables/FilesService.html":{},"interfaces/fileCreated.html":{}}}],["_id",{"_index":1072,"title":{},"body":{"controllers/AppController.html":{}}}],["_metadata",{"_index":2928,"title":{},"body":{"classes/ParseFormDataJsonPipe.html":{}}}],["a.es",{"_index":2477,"title":{},"body":{"injectables/MailService.html":{}}}],["accept",{"_index":1124,"title":{},"body":{"controllers/AppController.html":{},"injectables/CorsMiddleware.html":{},"injectables/CurrencyService.html":{},"interfaces/RequestHeaders.html":{}}}],["acceptfile",{"_index":2211,"title":{},"body":{"injectables/FilesService.html":{},"interfaces/fileCreated.html":{}}}],["access",{"_index":1851,"title":{},"body":{"injectables/CorsMiddleware.html":{},"injectables/ProductMiddleware.html":{},"interfaces/RequestHeaders.html":{}}}],["access_denied",{"_index":281,"title":{},"body":{"guards/AdminGuard.html":{},"classes/ApiException.html":{},"guards/OwnerAdminGuard.html":{},"injectables/OwnerService.html":{},"guards/RolesGuard.html":{},"guards/UserGuard.html":{}}}],["access_token_not_provided",{"_index":3091,"title":{},"body":{"guards/RefreshAuthGuard.html":{}}}],["accesstoken",{"_index":1442,"title":{},"body":{"interfaces/AuthUser.html":{},"interfaces/CodeDto.html":{},"guards/JwtAuthGuard.html":{},"interfaces/Payload.html":{},"guards/RefreshAuthGuard.html":{},"interfaces/ReturnedAdmin.html":{},"interfaces/ReturnedOwner.html":{},"interfaces/ReturnedUser.html":{},"interfaces/Tokens.html":{}}}],["account",{"_index":2392,"title":{},"body":{"injectables/MailService.html":{}}}],["activate",{"_index":1281,"title":{},"body":{"controllers/AuthController.html":{},"injectables/MailService.html":{}}}],["activate(activationlink",{"_index":1286,"title":{},"body":{"controllers/AuthController.html":{}}}],["activated",{"_index":1924,"title":{},"body":{"classes/CreateAccessTokenDto.html":{},"classes/CreateAdminRefreshTokenDto.html":{},"classes/CreateOwnerRefreshTokenDto.html":{},"classes/CreateUserRefreshTokenDto.html":{},"classes/Owner.html":{}}}],["activated'})@column({type",{"_index":2661,"title":{},"body":{"classes/Owner.html":{}}}],["activated'})@isboolean",{"_index":1913,"title":{},"body":{"classes/CreateAccessTokenDto.html":{},"classes/CreateAdminRefreshTokenDto.html":{},"classes/CreateOwnerRefreshTokenDto.html":{},"classes/CreateUserRefreshTokenDto.html":{}}}],["activatemiddleware",{"_index":1,"title":{"injectables/ActivateMiddleware.html":{}},"body":{"injectables/ActivateMiddleware.html":{},"modules/AuthModule.html":{}}}],["activating",{"_index":1287,"title":{},"body":{"controllers/AuthController.html":{}}}],["activation",{"_index":1917,"title":{},"body":{"classes/CreateAccessTokenDto.html":{},"classes/CreateAdminDto.html":{},"classes/CreateOwnerDto.html":{},"injectables/MailService.html":{}}}],["activationcode",{"_index":2627,"title":{},"body":{"classes/Owner.html":{}}}],["activationcode'})@isint()@column({type",{"_index":2651,"title":{},"body":{"classes/Owner.html":{}}}],["activationlink",{"_index":59,"title":{},"body":{"injectables/ActivateMiddleware.html":{},"interfaces/AdminInterface.html":{},"interfaces/AdminRefreshTokenCreationAttrbs.html":{},"injectables/AdminService.html":{},"interfaces/AdmincreationAttrbs.html":{},"controllers/AuthController.html":{},"guards/AuthFerfershGuard.html":{},"classes/CreateAdminDto.html":{},"classes/CreateOwnerDto.html":{},"interfaces/InitializeUser.html":{},"classes/Owner.html":{},"interfaces/OwnerCreationAttrbs.html":{},"interfaces/OwnerRefreshTokenCreationAttrbs.html":{},"injectables/OwnerService.html":{},"interfaces/RolecreationAttrbs.html":{},"interfaces/UserInterface.html":{},"interfaces/UserRefreshCreationAttrbs.html":{},"interfaces/UsercreationAttrbs.html":{},"interfaces/ValidateUser.html":{}}}],["activationlink'})@isuuid(4)@column({type",{"_index":2654,"title":{},"body":{"classes/Owner.html":{}}}],["activting_params_not_provided",{"_index":40,"title":{},"body":{"injectables/ActivateMiddleware.html":{}}}],["adapt",{"_index":2489,"title":{},"body":{"injectables/MailService.html":{}}}],["adaptive",{"_index":2484,"title":{},"body":{"injectables/MailService.html":{}}}],["add",{"_index":1930,"title":{},"body":{"classes/CreateAdminDto.html":{}}}],["addcontent",{"_index":305,"title":{},"body":{"interfaces/AdminInterface.html":{},"interfaces/AdminRefreshTokenCreationAttrbs.html":{},"injectables/AdminService.html":{},"injectables/AdminUserMiddleware.html":{},"interfaces/AdmincreationAttrbs.html":{},"classes/CreateAdminDto.html":{},"interfaces/InitializeUser.html":{},"interfaces/RolecreationAttrbs.html":{},"injectables/UserAdminMiddleware.html":{},"interfaces/UserInterface.html":{},"interfaces/UserRefreshCreationAttrbs.html":{},"interfaces/UsercreationAttrbs.html":{},"injectables/UsersService.html":{},"interfaces/ValidateUser.html":{}}}],["addcontent.tostring",{"_index":841,"title":{},"body":{"injectables/AdminUserMiddleware.html":{},"injectables/UserAdminMiddleware.html":{}}}],["addcontentguard",{"_index":80,"title":{"guards/AddContentGuard.html":{}},"body":{"guards/AddContentGuard.html":{},"controllers/CategoriesController.html":{},"controllers/ColoursController.html":{},"controllers/RolesController.html":{}}}],["addcontentguard)@delete('delete_category/:categoryid",{"_index":1583,"title":{},"body":{"controllers/CategoriesController.html":{}}}],["addcontentguard)@delete('delete_colour/:colourid",{"_index":1738,"title":{},"body":{"controllers/ColoursController.html":{}}}],["addcontentguard)@get('get/:value",{"_index":3227,"title":{},"body":{"controllers/RolesController.html":{}}}],["addcontentguard)@patch('update_category/:categoryid",{"_index":1590,"title":{},"body":{"controllers/CategoriesController.html":{}}}],["addcontentguard)@patch('update_colour/:colourid",{"_index":1744,"title":{},"body":{"controllers/ColoursController.html":{}}}],["addcontentguard)@put('/create_role",{"_index":3223,"title":{},"body":{"controllers/RolesController.html":{}}}],["addcontentguard)@put('create_category",{"_index":1578,"title":{},"body":{"controllers/CategoriesController.html":{}}}],["addcontentguard)@put('create_colour",{"_index":1734,"title":{},"body":{"controllers/ColoursController.html":{}}}],["addcronjob",{"_index":3276,"title":{},"body":{"injectables/TasksService.html":{}}}],["addcronjob(name",{"_index":3288,"title":{},"body":{"injectables/TasksService.html":{}}}],["added",{"_index":3320,"title":{},"body":{"injectables/TasksService.html":{}}}],["addinterval",{"_index":3277,"title":{},"body":{"injectables/TasksService.html":{}}}],["addinterval(name",{"_index":3292,"title":{},"body":{"injectables/TasksService.html":{}}}],["addproduct",{"_index":2630,"title":{},"body":{"classes/Owner.html":{}}}],["addproduct(product",{"_index":2679,"title":{},"body":{"classes/Owner.html":{}}}],["address",{"_index":1026,"title":{},"body":{"injectables/AppClusterService.html":{},"injectables/LocationMiddleware.html":{},"interfaces/Msg.html":{}}}],["addrole",{"_index":3578,"title":{},"body":{"injectables/UsersService.html":{}}}],["addrole(dto",{"_index":3587,"title":{},"body":{"injectables/UsersService.html":{}}}],["addroledto",{"_index":117,"title":{"classes/AddRoleDto.html":{}},"body":{"classes/AddRoleDto.html":{},"injectables/UsersService.html":{}}}],["addtimeoutfortokens",{"_index":3278,"title":{},"body":{"injectables/TasksService.html":{}}}],["addtimeoutfortokens(name",{"_index":3298,"title":{},"body":{"injectables/TasksService.html":{}}}],["admin",{"_index":43,"title":{},"body":{"injectables/ActivateMiddleware.html":{},"guards/AddContentGuard.html":{},"controllers/AdminController.html":{},"injectables/AdminJwtRefreshService.html":{},"modules/AdminModule.html":{},"classes/AdminRefreshToken.html":{},"injectables/AdminService.html":{},"injectables/AdminUserMiddleware.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"guards/AuthFerfershGuard.html":{},"modules/AuthModule.html":{},"interfaces/AuthUser.html":{},"modules/CartModule.html":{},"modules/CategoriesColoursModule.html":{},"controllers/CategoriesController.html":{},"interfaces/CodeDto.html":{},"controllers/ColoursController.html":{},"modules/CoreModule.html":{},"classes/CreateAdminDto.html":{},"classes/CreateAdminRefreshTokenDto.html":{},"classes/CreateOwnerRefreshTokenDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUserRefreshTokenDto.html":{},"guards/EditContentGuard.html":{},"guards/EditWebsiteGuard.html":{},"injectables/InitializeEmailMiddleware.html":{},"injectables/InitializeUserMiddleware.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"modules/OrdersModule.html":{},"classes/Owner.html":{},"guards/OwnerAdminGuard.html":{},"modules/OwnerModule.html":{},"interfaces/Payload.html":{},"classes/Product.html":{},"modules/ProductModule.html":{},"interfaces/ReturnedAdmin.html":{},"interfaces/ReturnedOwner.html":{},"interfaces/ReturnedUser.html":{},"controllers/ReviewsController.html":{},"modules/ReviewsModule.html":{},"classes/Role.html":{},"controllers/RolesController.html":{},"modules/RolesModule.html":{},"interfaces/Tokens.html":{},"classes/UserRoles.html":{},"modules/UsersModule.html":{}}}],["admin')@httpcode(201)@useguards(jwtauthguard",{"_index":3222,"title":{},"body":{"controllers/RolesController.html":{}}}],["admin')@useguards(jwtauthguard",{"_index":1577,"title":{},"body":{"controllers/CategoriesController.html":{},"controllers/ColoursController.html":{},"controllers/ReviewsController.html":{},"controllers/RolesController.html":{}}}],["admin'})@apiresponse({status",{"_index":156,"title":{},"body":{"controllers/AdminController.html":{}}}],["admin'})@isboolean",{"_index":1943,"title":{},"body":{"classes/CreateAdminDto.html":{}}}],["admin.$add('adminrefreshtokens",{"_index":418,"title":{},"body":{"injectables/AdminJwtRefreshService.html":{}}}],["admin.$remove('adminrefreshtokens",{"_index":448,"title":{},"body":{"injectables/AdminJwtRefreshService.html":{}}}],["admin.$set('adminrefreshtokens",{"_index":415,"title":{},"body":{"injectables/AdminJwtRefreshService.html":{}}}],["admin.$set('roles",{"_index":783,"title":{},"body":{"injectables/AdminService.html":{}}}],["admin.activationlink",{"_index":803,"title":{},"body":{"injectables/AdminService.html":{},"injectables/AdminUserMiddleware.html":{}}}],["admin.adminrefreshtokens",{"_index":417,"title":{},"body":{"injectables/AdminJwtRefreshService.html":{}}}],["admin.controller",{"_index":499,"title":{},"body":{"modules/AdminModule.html":{}}}],["admin.dto",{"_index":201,"title":{},"body":{"controllers/AdminController.html":{},"modules/AdminModule.html":{},"injectables/AdminService.html":{}}}],["admin.dto.ts",{"_index":1927,"title":{},"body":{"classes/CreateAdminDto.html":{}}}],["admin.dto.ts:15",{"_index":1950,"title":{},"body":{"classes/CreateAdminDto.html":{}}}],["admin.dto.ts:22",{"_index":1961,"title":{},"body":{"classes/CreateAdminDto.html":{}}}],["admin.dto.ts:32",{"_index":1959,"title":{},"body":{"classes/CreateAdminDto.html":{}}}],["admin.dto.ts:40",{"_index":1942,"title":{},"body":{"classes/CreateAdminDto.html":{}}}],["admin.dto.ts:47",{"_index":1952,"title":{},"body":{"classes/CreateAdminDto.html":{}}}],["admin.dto.ts:54",{"_index":1928,"title":{},"body":{"classes/CreateAdminDto.html":{}}}],["admin.dto.ts:61",{"_index":1936,"title":{},"body":{"classes/CreateAdminDto.html":{}}}],["admin.dto.ts:68",{"_index":1932,"title":{},"body":{"classes/CreateAdminDto.html":{}}}],["admin.dto.ts:75",{"_index":1934,"title":{},"body":{"classes/CreateAdminDto.html":{}}}],["admin.dto.ts:82",{"_index":1944,"title":{},"body":{"classes/CreateAdminDto.html":{}}}],["admin.email",{"_index":441,"title":{},"body":{"injectables/AdminJwtRefreshService.html":{},"injectables/AdminService.html":{},"injectables/InitializeEmailMiddleware.html":{},"injectables/MailService.html":{}}}],["admin.getaddcontent",{"_index":114,"title":{},"body":{"guards/AddContentGuard.html":{},"injectables/AdminService.html":{}}}],["admin.getadminagent",{"_index":422,"title":{},"body":{"injectables/AdminJwtRefreshService.html":{}}}],["admin.getadminagent().trim",{"_index":427,"title":{},"body":{"injectables/AdminJwtRefreshService.html":{}}}],["admin.getadminrefreshtokens",{"_index":412,"title":{},"body":{"injectables/AdminJwtRefreshService.html":{}}}],["admin.getadminrefreshtokens().length",{"_index":413,"title":{},"body":{"injectables/AdminJwtRefreshService.html":{}}}],["admin.getconfirmcode",{"_index":816,"title":{},"body":{"injectables/AdminService.html":{}}}],["admin.geteditcontent",{"_index":798,"title":{},"body":{"injectables/AdminService.html":{},"guards/EditContentGuard.html":{}}}],["admin.geteditwebsite",{"_index":799,"title":{},"body":{"injectables/AdminService.html":{},"guards/EditWebsiteGuard.html":{}}}],["admin.getisactivated",{"_index":802,"title":{},"body":{"injectables/AdminService.html":{}}}],["admin.getname",{"_index":795,"title":{},"body":{"injectables/AdminService.html":{}}}],["admin.getpassword",{"_index":809,"title":{},"body":{"injectables/AdminService.html":{},"injectables/AdminUserMiddleware.html":{}}}],["admin.getresettokenexpiration",{"_index":814,"title":{},"body":{"injectables/AdminService.html":{}}}],["admin.getsurname",{"_index":796,"title":{},"body":{"injectables/AdminService.html":{}}}],["admin.guard",{"_index":217,"title":{},"body":{"controllers/AdminController.html":{},"controllers/CategoriesController.html":{},"controllers/ColoursController.html":{},"controllers/ReviewsController.html":{},"controllers/RolesController.html":{},"controllers/UsersController.html":{}}}],["admin.guard.ts",{"_index":2732,"title":{},"body":{"guards/OwnerAdminGuard.html":{}}}],["admin.guard.ts:26",{"_index":2733,"title":{},"body":{"guards/OwnerAdminGuard.html":{}}}],["admin.guard.ts:32",{"_index":2734,"title":{},"body":{"guards/OwnerAdminGuard.html":{}}}],["admin.id",{"_index":407,"title":{},"body":{"injectables/AdminJwtRefreshService.html":{},"injectables/AdminService.html":{}}}],["admin.middleware",{"_index":523,"title":{},"body":{"modules/AdminModule.html":{}}}],["admin.middleware.ts",{"_index":3431,"title":{},"body":{"injectables/UserAdminMiddleware.html":{}}}],["admin.middleware.ts:18",{"_index":3433,"title":{},"body":{"injectables/UserAdminMiddleware.html":{}}}],["admin.middleware.ts:20",{"_index":3434,"title":{},"body":{"injectables/UserAdminMiddleware.html":{}}}],["admin.model",{"_index":660,"title":{},"body":{"classes/AdminRefreshToken.html":{}}}],["admin.phonenumber",{"_index":797,"title":{},"body":{"injectables/AdminService.html":{},"injectables/AdminUserMiddleware.html":{}}}],["admin.roles",{"_index":785,"title":{},"body":{"injectables/AdminService.html":{}}}],["admin.save",{"_index":419,"title":{},"body":{"injectables/AdminJwtRefreshService.html":{},"injectables/AdminService.html":{}}}],["admin.service",{"_index":377,"title":{},"body":{"injectables/AdminJwtRefreshService.html":{}}}],["admin.setactivationcode(code",{"_index":436,"title":{},"body":{"injectables/AdminJwtRefreshService.html":{}}}],["admin.setaddcontent(dto.addcontent",{"_index":768,"title":{},"body":{"injectables/AdminService.html":{}}}],["admin.setadminagent(adminagent",{"_index":423,"title":{},"body":{"injectables/AdminJwtRefreshService.html":{}}}],["admin.setconfirmcode(code",{"_index":811,"title":{},"body":{"injectables/AdminService.html":{}}}],["admin.seteditcontent(dto.editcontent",{"_index":787,"title":{},"body":{"injectables/AdminService.html":{}}}],["admin.seteditcontent(dto.editwebsite",{"_index":769,"title":{},"body":{"injectables/AdminService.html":{}}}],["admin.seteditwebsite(dto.editwebsite",{"_index":770,"title":{},"body":{"injectables/AdminService.html":{}}}],["admin.setisactivated(false",{"_index":428,"title":{},"body":{"injectables/AdminJwtRefreshService.html":{}}}],["admin.setisactivated(user.getisactivated",{"_index":780,"title":{},"body":{"injectables/AdminService.html":{}}}],["admin.setnewpasssword(hashedpassword",{"_index":826,"title":{},"body":{"injectables/AdminService.html":{}}}],["admin.setresettoken",{"_index":433,"title":{},"body":{"injectables/AdminJwtRefreshService.html":{}}}],["admin.setresettokenexpiration(number(date.now",{"_index":437,"title":{},"body":{"injectables/AdminJwtRefreshService.html":{},"injectables/AdminService.html":{}}}],["admin.userid",{"_index":781,"title":{},"body":{"injectables/AdminService.html":{}}}],["admin/admin.module",{"_index":1163,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CategoriesColoursModule.html":{},"modules/CoreModule.html":{},"modules/MailModule.html":{},"modules/OwnerModule.html":{},"modules/ProductModule.html":{},"modules/ReviewsModule.html":{},"modules/RolesModule.html":{},"modules/UsersModule.html":{}}}],["admin/constants/admin.constants",{"_index":282,"title":{},"body":{"guards/AdminGuard.html":{},"injectables/AdminUserMiddleware.html":{},"classes/ApiException.html":{},"injectables/MailService.html":{},"guards/OwnerAdminGuard.html":{},"guards/RolesGuard.html":{},"guards/UserGuard.html":{}}}],["admin/constants/jwt",{"_index":948,"title":{},"body":{"classes/ApiException.html":{}}}],["admin/create_admin",{"_index":578,"title":{},"body":{"modules/AdminModule.html":{}}}],["admin/find_admin",{"_index":577,"title":{},"body":{"modules/AdminModule.html":{}}}],["admin/get_admins",{"_index":574,"title":{},"body":{"modules/AdminModule.html":{}}}],["admin/models/admin.model",{"_index":44,"title":{},"body":{"injectables/ActivateMiddleware.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CartModule.html":{},"modules/CategoriesColoursModule.html":{},"modules/CoreModule.html":{},"modules/MailModule.html":{},"modules/OrdersModule.html":{},"modules/OwnerModule.html":{},"classes/Product.html":{},"modules/ProductModule.html":{},"modules/ReviewsModule.html":{},"classes/Role.html":{},"modules/RolesModule.html":{},"classes/UserRoles.html":{},"modules/UsersModule.html":{}}}],["admin/models/admin.refresh.token.model",{"_index":277,"title":{},"body":{"guards/AdminGuard.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CartModule.html":{},"modules/CategoriesColoursModule.html":{},"modules/CoreModule.html":{},"modules/MailModule.html":{},"modules/OrdersModule.html":{},"guards/OwnerAdminGuard.html":{},"modules/OwnerModule.html":{},"modules/ProductModule.html":{},"modules/ReviewsModule.html":{},"modules/RolesModule.html":{},"modules/UsersModule.html":{}}}],["admin/services/admin.service",{"_index":99,"title":{},"body":{"guards/AddContentGuard.html":{},"injectables/AdminUserMiddleware.html":{},"guards/AuthFerfershGuard.html":{},"guards/EditContentGuard.html":{},"guards/EditWebsiteGuard.html":{},"injectables/InitializeEmailMiddleware.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"modules/OwnerModule.html":{}}}],["admin/services/jwt",{"_index":274,"title":{},"body":{"guards/AdminGuard.html":{},"modules/AuthModule.html":{},"injectables/InitializeUserMiddleware.html":{},"guards/OwnerAdminGuard.html":{}}}],["admin/update_admin",{"_index":580,"title":{},"body":{"modules/AdminModule.html":{}}}],["admin@gmail.com",{"_index":621,"title":{},"body":{"classes/AdminRefreshToken.html":{},"classes/CreateAdminRefreshTokenDto.html":{}}}],["admin_id_not_found",{"_index":938,"title":{},"body":{"classes/ApiException.html":{}}}],["admin_id_not_provided",{"_index":732,"title":{},"body":{"injectables/AdminService.html":{},"classes/ApiException.html":{}}}],["admin_not_authorizied",{"_index":2735,"title":{},"body":{"guards/OwnerAdminGuard.html":{}}}],["admin_not_found",{"_index":369,"title":{},"body":{"injectables/AdminJwtRefreshService.html":{},"injectables/AdminService.html":{},"injectables/AdminUserMiddleware.html":{},"classes/ApiException.html":{},"injectables/MailService.html":{}}}],["admin_or_role_not_found",{"_index":945,"title":{},"body":{"classes/ApiException.html":{}}}],["admin_with_email_doesnt_exist",{"_index":926,"title":{},"body":{"classes/ApiException.html":{}}}],["admin_with_email_exist",{"_index":727,"title":{},"body":{"injectables/AdminService.html":{},"classes/ApiException.html":{}}}],["admin_with_phonenumber_exist",{"_index":728,"title":{},"body":{"injectables/AdminService.html":{},"classes/ApiException.html":{}}}],["admin`s",{"_index":609,"title":{},"body":{"classes/AdminRefreshToken.html":{},"classes/CreateAdminDto.html":{},"classes/CreateAdminRefreshTokenDto.html":{}}}],["admin`s_refresh",{"_index":662,"title":{},"body":{"classes/AdminRefreshToken.html":{}}}],["adminagent",{"_index":314,"title":{},"body":{"interfaces/AdminInterface.html":{},"injectables/AdminJwtRefreshService.html":{},"classes/AdminRefreshToken.html":{},"interfaces/AdminRefreshTokenCreationAttrbs.html":{},"interfaces/AdmincreationAttrbs.html":{},"classes/CreateAdminRefreshTokenDto.html":{}}}],["admincontroller",{"_index":144,"title":{"controllers/AdminController.html":{}},"body":{"controllers/AdminController.html":{},"modules/AdminModule.html":{}}}],["admincreationattrbs",{"_index":315,"title":{"interfaces/AdmincreationAttrbs.html":{}},"body":{"interfaces/AdminInterface.html":{},"interfaces/AdminRefreshTokenCreationAttrbs.html":{},"interfaces/AdmincreationAttrbs.html":{}}}],["admindata",{"_index":400,"title":{},"body":{"injectables/AdminJwtRefreshService.html":{}}}],["admindto",{"_index":164,"title":{},"body":{"controllers/AdminController.html":{},"injectables/AdminService.html":{}}}],["admindto.password",{"_index":808,"title":{},"body":{"injectables/AdminService.html":{}}}],["adminguard",{"_index":264,"title":{"guards/AdminGuard.html":{}},"body":{"guards/AdminGuard.html":{}}}],["adminid",{"_index":313,"title":{},"body":{"interfaces/AdminInterface.html":{},"injectables/AdminJwtRefreshService.html":{},"classes/AdminRefreshToken.html":{},"interfaces/AdminRefreshTokenCreationAttrbs.html":{},"injectables/AdminService.html":{},"interfaces/AdmincreationAttrbs.html":{},"interfaces/CategoryCreationAtrb.html":{},"interfaces/ColourCreationAtrb.html":{},"classes/CreateAdminRefreshTokenDto.html":{},"classes/Product.html":{},"interfaces/ProductCreationAttrs.html":{},"interfaces/ReturnedCategory.html":{},"interfaces/ReturnedColour.html":{},"interfaces/ReturnedProduct.html":{},"interfaces/ReturnedProducts.html":{},"interfaces/ReturnedReview.html":{},"interfaces/ReviewCreationAtrb.html":{},"classes/UserRoles.html":{}}}],["adminid'})@foreignkey(undefined)@column({type",{"_index":615,"title":{},"body":{"classes/AdminRefreshToken.html":{},"classes/UserRoles.html":{}}}],["admininterface",{"_index":206,"title":{"interfaces/AdminInterface.html":{}},"body":{"controllers/AdminController.html":{},"interfaces/AdminInterface.html":{},"interfaces/AdminRefreshTokenCreationAttrbs.html":{},"injectables/AdminService.html":{},"interfaces/AdmincreationAttrbs.html":{}}}],["adminjwtrefreshservice",{"_index":267,"title":{"injectables/AdminJwtRefreshService.html":{}},"body":{"guards/AdminGuard.html":{},"injectables/AdminJwtRefreshService.html":{},"modules/AdminModule.html":{},"modules/AuthModule.html":{},"injectables/InitializeUserMiddleware.html":{},"guards/OwnerAdminGuard.html":{},"overview.html":{}}}],["adminjwtrefreshtokenservice",{"_index":270,"title":{},"body":{"guards/AdminGuard.html":{},"injectables/InitializeUserMiddleware.html":{},"guards/OwnerAdminGuard.html":{}}}],["adminmodule",{"_index":475,"title":{"modules/AdminModule.html":{}},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CategoriesColoursModule.html":{},"modules/CoreModule.html":{},"modules/MailModule.html":{},"modules/OwnerModule.html":{},"modules/ProductModule.html":{},"modules/ReviewsModule.html":{},"modules/RolesModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["adminname_validation",{"_index":1949,"title":{},"body":{"classes/CreateAdminDto.html":{}}}],["adminperpage",{"_index":700,"title":{},"body":{"injectables/AdminService.html":{}}}],["adminrefreshtoken",{"_index":276,"title":{"classes/AdminRefreshToken.html":{}},"body":{"guards/AdminGuard.html":{},"interfaces/AdminInterface.html":{},"injectables/AdminJwtRefreshService.html":{},"modules/AdminModule.html":{},"classes/AdminRefreshToken.html":{},"interfaces/AdminRefreshTokenCreationAttrbs.html":{},"interfaces/AdmincreationAttrbs.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CartModule.html":{},"modules/CategoriesColoursModule.html":{},"modules/CoreModule.html":{},"injectables/InitializeUserMiddleware.html":{},"modules/MailModule.html":{},"modules/OrdersModule.html":{},"guards/OwnerAdminGuard.html":{},"modules/OwnerModule.html":{},"modules/ProductModule.html":{},"modules/ReviewsModule.html":{},"modules/RolesModule.html":{},"modules/UsersModule.html":{}}}],["adminrefreshtoken.findone",{"_index":453,"title":{},"body":{"injectables/AdminJwtRefreshService.html":{}}}],["adminrefreshtokencreationattrbs",{"_index":312,"title":{"interfaces/AdminRefreshTokenCreationAttrbs.html":{}},"body":{"interfaces/AdminInterface.html":{},"classes/AdminRefreshToken.html":{},"interfaces/AdminRefreshTokenCreationAttrbs.html":{},"interfaces/AdmincreationAttrbs.html":{}}}],["adminrefreshtokenid",{"_index":359,"title":{},"body":{"injectables/AdminJwtRefreshService.html":{}}}],["adminrefreshtokenrepository",{"_index":336,"title":{},"body":{"injectables/AdminJwtRefreshService.html":{}}}],["adminrepository",{"_index":20,"title":{},"body":{"injectables/ActivateMiddleware.html":{},"injectables/AdminService.html":{}}}],["admins",{"_index":256,"title":{},"body":{"controllers/AdminController.html":{},"injectables/AdminService.html":{},"classes/Role.html":{}}}],["admins'})@apiresponse({status",{"_index":169,"title":{},"body":{"controllers/AdminController.html":{}}}],["admins.length",{"_index":793,"title":{},"body":{"injectables/AdminService.html":{}}}],["admins.map((admin",{"_index":794,"title":{},"body":{"injectables/AdminService.html":{}}}],["admins.push(admin",{"_index":757,"title":{},"body":{"injectables/AdminService.html":{}}}],["adminservice",{"_index":86,"title":{"injectables/AdminService.html":{}},"body":{"guards/AddContentGuard.html":{},"controllers/AdminController.html":{},"injectables/AdminJwtRefreshService.html":{},"modules/AdminModule.html":{},"injectables/AdminService.html":{},"injectables/AdminUserMiddleware.html":{},"guards/AuthFerfershGuard.html":{},"guards/EditContentGuard.html":{},"guards/EditWebsiteGuard.html":{},"injectables/InitializeEmailMiddleware.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"modules/OwnerModule.html":{},"overview.html":{}}}],["adminusermiddleware",{"_index":529,"title":{"injectables/AdminUserMiddleware.html":{}},"body":{"modules/AdminModule.html":{},"injectables/AdminUserMiddleware.html":{}}}],["admin})@throttle(60",{"_index":158,"title":{},"body":{"controllers/AdminController.html":{}}}],["admin})@throttle(70",{"_index":180,"title":{},"body":{"controllers/AdminController.html":{}}}],["age=0",{"_index":1864,"title":{},"body":{"injectables/CorsMiddleware.html":{},"interfaces/RequestHeaders.html":{}}}],["age=31536000",{"_index":2288,"title":{},"body":{"injectables/InitializeUserMiddleware.html":{}}}],["age=5184000,preload",{"_index":1871,"title":{},"body":{"injectables/CorsMiddleware.html":{},"interfaces/RequestHeaders.html":{}}}],["agent",{"_index":669,"title":{},"body":{"classes/AdminRefreshToken.html":{},"controllers/AuthController.html":{},"injectables/AuthMiddleware.html":{},"classes/CreateAdminRefreshTokenDto.html":{},"classes/CreateOwnerDto.html":{},"classes/CreateOwnerRefreshTokenDto.html":{},"classes/Owner.html":{},"classes/OwnerRefreshToken.html":{},"injectables/ProductMiddleware.html":{},"injectables/UserMiddleware.html":{},"injectables/UserMiddleware-1.html":{},"controllers/UsersController.html":{}}}],["agent'})@column({type",{"_index":610,"title":{},"body":{"classes/AdminRefreshToken.html":{},"classes/Owner.html":{},"classes/OwnerRefreshToken.html":{}}}],["agent'})@isstring",{"_index":1968,"title":{},"body":{"classes/CreateAdminRefreshTokenDto.html":{},"classes/CreateOwnerDto.html":{},"classes/CreateOwnerRefreshTokenDto.html":{}}}],["agent.decorator",{"_index":1337,"title":{},"body":{"controllers/AuthController.html":{},"controllers/UsersController.html":{}}}],["alex",{"_index":1945,"title":{},"body":{"classes/CreateAdminDto.html":{},"classes/CreateOwnerDto.html":{},"classes/CreateUserDto.html":{},"classes/Owner.html":{},"classes/SignupDto.html":{},"classes/UpdateUserDto.html":{}}}],["alexesg1234",{"_index":3274,"title":{},"body":{"classes/SignupDto.html":{}}}],["aliases",{"_index":3840,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["align:center",{"_index":2454,"title":{},"body":{"injectables/MailService.html":{}}}],["align:center!important",{"_index":2470,"title":{},"body":{"injectables/MailService.html":{}}}],["align:left!important",{"_index":2474,"title":{},"body":{"injectables/MailService.html":{}}}],["align:right!important",{"_index":2472,"title":{},"body":{"injectables/MailService.html":{}}}],["allexceptionsfilter",{"_index":848,"title":{"classes/AllExceptionsFilter.html":{}},"body":{"classes/AllExceptionsFilter.html":{},"modules/AppModule.html":{},"modules/CoreModule.html":{}}}],["allow",{"_index":1400,"title":{},"body":{"injectables/AuthMiddleware.html":{},"injectables/CorsMiddleware.html":{},"injectables/ProductMiddleware.html":{},"interfaces/RequestHeaders.html":{},"injectables/UserMiddleware.html":{},"injectables/UserMiddleware-1.html":{}}}],["allowed",{"_index":1256,"title":{},"body":{"modules/AppModule.html":{},"injectables/FilesService.html":{},"interfaces/fileCreated.html":{}}}],["allownull",{"_index":611,"title":{},"body":{"classes/AdminRefreshToken.html":{},"classes/BookmarksProducts.html":{},"classes/CartProduct.html":{},"classes/Category.html":{},"classes/Colour.html":{},"classes/Currencies.html":{},"classes/OrderProduct.html":{},"classes/Owner.html":{},"classes/OwnerRefreshToken.html":{},"classes/Product.html":{},"classes/ProductCategories.html":{},"classes/ProductColours.html":{},"classes/ProductReviews.html":{},"classes/Role.html":{},"classes/UserRefreshToken.html":{},"classes/UserRoles.html":{},"classes/WatchedProducts.html":{}}}],["already_exist_category",{"_index":1633,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["already_exist_colour",{"_index":1777,"title":{},"body":{"injectables/ColoursService.html":{}}}],["amazing",{"_index":3809,"title":{},"body":{"index.html":{}}}],["any)[relatedpropertyname",{"_index":2561,"title":{},"body":{"classes/MatchConstraint.html":{}}}],["api_key",{"_index":457,"title":{},"body":{"injectables/AdminJwtRefreshService.html":{},"controllers/AppController.html":{},"injectables/OwnerJwtRefreshService.html":{}}}],["apibearerauth",{"_index":193,"title":{},"body":{"controllers/AdminController.html":{},"controllers/UsersController.html":{}}}],["apibearerauth('jwt",{"_index":236,"title":{},"body":{"controllers/AdminController.html":{},"controllers/UsersController.html":{}}}],["apierror",{"_index":874,"title":{"classes/ApiError.html":{}},"body":{"classes/ApiError.html":{},"classes/BadRequestError.html":{},"classes/NotFoundError.html":{}}}],["apierror:4",{"_index":1453,"title":{},"body":{"classes/BadRequestError.html":{},"classes/NotFoundError.html":{}}}],["apierror:5",{"_index":1452,"title":{},"body":{"classes/BadRequestError.html":{},"classes/NotFoundError.html":{}}}],["apierrorexceptionfilter",{"_index":226,"title":{"classes/ApiErrorExceptionFilter.html":{}},"body":{"controllers/AdminController.html":{},"classes/ApiErrorExceptionFilter.html":{},"controllers/AuthController.html":{},"controllers/CardController.html":{},"controllers/CategoriesController.html":{},"controllers/ColoursController.html":{},"controllers/OrdersController.html":{},"controllers/ReviewsController.html":{},"controllers/RolesController.html":{},"controllers/UsersController.html":{}}}],["apiexception",{"_index":47,"title":{"classes/ApiException.html":{}},"body":{"injectables/ActivateMiddleware.html":{},"guards/AddContentGuard.html":{},"guards/AdminGuard.html":{},"injectables/AdminJwtRefreshService.html":{},"injectables/AdminService.html":{},"injectables/AdminUserMiddleware.html":{},"classes/ApiException.html":{},"classes/ApiExceptionFilter.html":{},"guards/AuthFerfershGuard.html":{},"injectables/CategoriesService.html":{},"injectables/ColoursService.html":{},"guards/EditContentGuard.html":{},"guards/EditWebsiteGuard.html":{},"injectables/InitializeEmailMiddleware.html":{},"injectables/InitializeUserMiddleware.html":{},"guards/JwtAuthGuard.html":{},"injectables/MailService.html":{},"guards/OwnerAdminGuard.html":{},"injectables/OwnerJwtRefreshService.html":{},"injectables/OwnerService.html":{},"guards/RefreshAuthGuard.html":{},"guards/RolesGuard.html":{},"injectables/UserAdminMiddleware.html":{},"guards/UserGuard.html":{},"injectables/UserJwtRefreshTokenService.html":{},"injectables/UsersService.html":{}}}],["apiexception(httpstatus.forbidden",{"_index":115,"title":{},"body":{"guards/AddContentGuard.html":{},"injectables/AdminService.html":{},"classes/ApiException.html":{},"guards/EditContentGuard.html":{},"guards/EditWebsiteGuard.html":{},"injectables/OwnerService.html":{}}}],["apiexceptionfilter",{"_index":229,"title":{"classes/ApiExceptionFilter.html":{}},"body":{"controllers/AdminController.html":{},"classes/ApiExceptionFilter.html":{},"controllers/AuthController.html":{},"controllers/CardController.html":{},"controllers/CategoriesController.html":{},"controllers/ColoursController.html":{},"controllers/OrdersController.html":{},"controllers/ReviewsController.html":{},"controllers/RolesController.html":{},"controllers/UsersController.html":{}}}],["apikey",{"_index":2131,"title":{},"body":{"injectables/CurrencyService.html":{}}}],["apioperation",{"_index":194,"title":{},"body":{"controllers/AdminController.html":{},"controllers/AuthController.html":{},"controllers/CategoriesController.html":{},"controllers/ColoursController.html":{},"controllers/RolesController.html":{},"controllers/UsersController.html":{}}}],["apioperation({summary",{"_index":154,"title":{},"body":{"controllers/AdminController.html":{},"controllers/AuthController.html":{}}}],["apiproperty",{"_index":136,"title":{},"body":{"classes/AddRoleDto.html":{},"classes/AdminRefreshToken.html":{},"classes/BanUserDto.html":{},"classes/ChangeDto.html":{},"classes/CreateAccessTokenDto.html":{},"classes/CreateAdminDto.html":{},"classes/CreateAdminRefreshTokenDto.html":{},"classes/CreateOwnerDto.html":{},"classes/CreateOwnerRefreshTokenDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserRefreshTokenDto.html":{},"classes/Currencies.html":{},"classes/LoginDto.html":{},"classes/Owner.html":{},"classes/OwnerRefreshToken.html":{},"classes/ResetDto.html":{},"classes/Role.html":{},"classes/SignupDto.html":{},"classes/UpdateUserDto.html":{},"classes/UserRefreshToken.html":{},"classes/UserRoles.html":{}}}],["apiproperty({example",{"_index":126,"title":{},"body":{"classes/AddRoleDto.html":{},"classes/AdminRefreshToken.html":{},"classes/BanUserDto.html":{},"classes/ChangeDto.html":{},"classes/CreateAccessTokenDto.html":{},"classes/CreateAdminDto.html":{},"classes/CreateAdminRefreshTokenDto.html":{},"classes/CreateOwnerDto.html":{},"classes/CreateOwnerRefreshTokenDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserRefreshTokenDto.html":{},"classes/Currencies.html":{},"classes/LoginDto.html":{},"classes/Owner.html":{},"classes/OwnerRefreshToken.html":{},"classes/ResetDto.html":{},"classes/Role.html":{},"classes/SignupDto.html":{},"classes/UpdateUserDto.html":{},"classes/UserRefreshToken.html":{},"classes/UserRoles.html":{}}}],["apiresponse",{"_index":195,"title":{},"body":{"controllers/AdminController.html":{},"controllers/AuthController.html":{},"controllers/CategoriesController.html":{},"controllers/ColoursController.html":{},"controllers/RolesController.html":{},"controllers/UsersController.html":{}}}],["apitags",{"_index":196,"title":{},"body":{"controllers/AdminController.html":{},"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/RolesController.html":{},"controllers/UsersController.html":{}}}],["apitags('admin",{"_index":235,"title":{},"body":{"controllers/AdminController.html":{}}}],["apitags('auth",{"_index":1342,"title":{},"body":{"controllers/AuthController.html":{}}}],["apitags('roles",{"_index":3232,"title":{},"body":{"controllers/RolesController.html":{}}}],["apitags('users",{"_index":3551,"title":{},"body":{"controllers/UsersController.html":{}}}],["app",{"_index":1005,"title":{},"body":{"injectables/AppClusterService.html":{},"interfaces/Msg.html":{},"index.html":{}}}],["app.controller",{"_index":1178,"title":{},"body":{"modules/AppModule.html":{}}}],["app_filter",{"_index":1169,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CoreModule.html":{}}}],["app_guard",{"_index":1411,"title":{},"body":{"modules/AuthModule.html":{},"modules/CoreModule.html":{}}}],["app_interceptor",{"_index":1170,"title":{},"body":{"modules/AppModule.html":{},"modules/CoreModule.html":{}}}],["appclusterservice",{"_index":969,"title":{"injectables/AppClusterService.html":{}},"body":{"injectables/AppClusterService.html":{},"modules/AppModule.html":{},"modules/CoreModule.html":{},"interfaces/Msg.html":{},"overview.html":{}}}],["appclusterservice.logger.log",{"_index":998,"title":{},"body":{"injectables/AppClusterService.html":{},"interfaces/Msg.html":{}}}],["appclusterservice.logger.log(`cluster",{"_index":1004,"title":{},"body":{"injectables/AppClusterService.html":{},"interfaces/Msg.html":{}}}],["appclusterservice.logger.log(`master",{"_index":995,"title":{},"body":{"injectables/AppClusterService.html":{},"interfaces/Msg.html":{}}}],["appclusterservice.logger.log(`number",{"_index":994,"title":{},"body":{"injectables/AppClusterService.html":{},"interfaces/Msg.html":{}}}],["appclusterservice.logger.log(`numreqs",{"_index":1018,"title":{},"body":{"injectables/AppClusterService.html":{},"interfaces/Msg.html":{}}}],["appcontroller",{"_index":1035,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["apple",{"_index":2416,"title":{},"body":{"injectables/MailService.html":{}}}],["applewebkit/523.34",{"_index":604,"title":{},"body":{"classes/AdminRefreshToken.html":{},"classes/CreateAdminRefreshTokenDto.html":{},"classes/CreateOwnerDto.html":{},"classes/CreateOwnerRefreshTokenDto.html":{},"classes/Owner.html":{},"classes/OwnerRefreshToken.html":{},"injectables/UserJwtRefreshTokenService.html":{}}}],["applications",{"_index":3782,"title":{},"body":{"index.html":{}}}],["applistener",{"_index":1135,"title":{"injectables/AppListener.html":{}},"body":{"injectables/AppListener.html":{},"modules/AuthModule.html":{},"overview.html":{}}}],["apply(activatemiddleware",{"_index":1433,"title":{},"body":{"modules/AuthModule.html":{}}}],["apply(adminusermiddleware",{"_index":584,"title":{},"body":{"modules/AdminModule.html":{}}}],["apply(authmiddleware",{"_index":1424,"title":{},"body":{"modules/AuthModule.html":{}}}],["apply(initializeemailmiddleware",{"_index":1430,"title":{},"body":{"modules/AuthModule.html":{}}}],["apply(initializeusermiddleware",{"_index":571,"title":{},"body":{"modules/AdminModule.html":{},"modules/AuthModule.html":{},"modules/CategoriesColoursModule.html":{},"modules/ProductModule.html":{},"modules/RolesModule.html":{},"modules/UsersModule.html":{}}}],["apply(requestvalidator.validate(changedto",{"_index":1439,"title":{},"body":{"modules/AuthModule.html":{}}}],["apply(requestvalidator.validate(createadmindto",{"_index":583,"title":{},"body":{"modules/AdminModule.html":{}}}],["apply(requestvalidator.validate(logindto",{"_index":1435,"title":{},"body":{"modules/AuthModule.html":{}}}],["apply(requestvalidator.validate(resetdto",{"_index":1438,"title":{},"body":{"modules/AuthModule.html":{}}}],["apply(requestvalidator.validate(signupdto",{"_index":1436,"title":{},"body":{"modules/AuthModule.html":{}}}],["apply(requestvalidator.validate(updateuserdto",{"_index":3574,"title":{},"body":{"modules/UsersModule.html":{}}}],["apply(useradminmiddleware",{"_index":582,"title":{},"body":{"modules/AdminModule.html":{}}}],["apply(usermiddleware",{"_index":3060,"title":{},"body":{"modules/ProductModule.html":{},"modules/UsersModule.html":{}}}],["appmodule",{"_index":1149,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["args",{"_index":2262,"title":{},"body":{"interfaces/ITelegramModuleAsyncOptions.html":{},"interfaces/ITelegramOptions.html":{},"classes/MatchConstraint.html":{},"modules/TelegramModule.html":{}}}],["args.constraints",{"_index":2558,"title":{},"body":{"classes/MatchConstraint.html":{}}}],["args.object",{"_index":2560,"title":{},"body":{"classes/MatchConstraint.html":{}}}],["argumentmetadata",{"_index":2929,"title":{},"body":{"classes/ParseFormDataJsonPipe.html":{},"injectables/ParseJsonPipe.html":{},"injectables/ValidateDto.html":{}}}],["argumentshost",{"_index":858,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"classes/ApiErrorExceptionFilter.html":{},"classes/ApiExceptionFilter.html":{},"classes/HttpExceptionFilter.html":{}}}],["array",{"_index":2037,"title":{},"body":{"classes/CreateProductDto.html":{},"classes/Nested.html":{},"classes/Nested-1.html":{},"classes/QueryFilterDto.html":{},"classes/UpdateProductDto.html":{}}}],["arraynotempty",{"_index":1923,"title":{},"body":{"classes/CreateAccessTokenDto.html":{},"classes/CreateProductDto.html":{},"classes/Nested.html":{},"classes/Nested-1.html":{},"classes/UpdateProductDto.html":{}}}],["asc",{"_index":3077,"title":{},"body":{"classes/QueryFilterDto.html":{}}}],["ascii",{"_index":292,"title":{},"body":{"guards/AdminGuard.html":{},"guards/OwnerAdminGuard.html":{},"guards/UserGuard.html":{}}}],["async",{"_index":9,"title":{},"body":{"injectables/ActivateMiddleware.html":{},"guards/AddContentGuard.html":{},"controllers/AdminController.html":{},"guards/AdminGuard.html":{},"injectables/AdminJwtRefreshService.html":{},"injectables/AdminService.html":{},"injectables/AdminUserMiddleware.html":{},"injectables/AppClusterService.html":{},"controllers/AppController.html":{},"controllers/AuthController.html":{},"guards/AuthFerfershGuard.html":{},"injectables/CategoriesService.html":{},"injectables/ColoursService.html":{},"injectables/CurrencyService.html":{},"guards/EditContentGuard.html":{},"guards/EditWebsiteGuard.html":{},"injectables/FilesService.html":{},"injectables/InitializeEmailMiddleware.html":{},"injectables/InitializeUserMiddleware.html":{},"guards/JwtAuthGuard.html":{},"injectables/LocationMiddleware.html":{},"injectables/MailService.html":{},"interfaces/Msg.html":{},"guards/OwnerAdminGuard.html":{},"injectables/OwnerJwtRefreshService.html":{},"injectables/OwnerService.html":{},"classes/RequestValidator.html":{},"injectables/ReviewsService.html":{},"controllers/RolesController.html":{},"guards/RolesGuard.html":{},"injectables/RolesService.html":{},"injectables/TasksService.html":{},"modules/TelegramModule.html":{},"injectables/TelegramService.html":{},"injectables/UserAdminMiddleware.html":{},"guards/UserGuard.html":{},"injectables/UserJwtRefreshTokenService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"injectables/ValidateDto.html":{},"interfaces/fileCreated.html":{}}}],["asyncoptions",{"_index":3373,"title":{},"body":{"modules/TelegramModule.html":{}}}],["attributes",{"_index":748,"title":{},"body":{"injectables/AdminService.html":{},"injectables/UsersService.html":{}}}],["auth",{"_index":237,"title":{},"body":{"controllers/AdminController.html":{},"controllers/AuthController.html":{},"modules/MailModule.html":{},"controllers/UsersController.html":{}}}],["auth.constants",{"_index":1713,"title":{},"body":{"classes/ChangeDto.html":{},"classes/CreateAccessTokenDto.html":{},"classes/LoginDto.html":{},"classes/ResetDto.html":{},"classes/SignupDto.html":{}}}],["auth.controller",{"_index":1410,"title":{},"body":{"modules/AuthModule.html":{}}}],["auth.decorator",{"_index":214,"title":{},"body":{"controllers/AdminController.html":{},"guards/AdminGuard.html":{},"controllers/CategoriesController.html":{},"controllers/ColoursController.html":{},"guards/OwnerAdminGuard.html":{},"controllers/ReviewsController.html":{},"controllers/RolesController.html":{},"guards/RolesGuard.html":{},"guards/UserGuard.html":{},"controllers/UsersController.html":{}}}],["auth.guard",{"_index":199,"title":{},"body":{"controllers/AdminController.html":{},"controllers/AuthController.html":{},"controllers/CategoriesController.html":{},"controllers/ColoursController.html":{},"controllers/ReviewsController.html":{},"controllers/RolesController.html":{},"controllers/UsersController.html":{}}}],["auth.guard.ts",{"_index":2294,"title":{},"body":{"guards/JwtAuthGuard.html":{}}}],["auth.guard.ts:14",{"_index":2296,"title":{},"body":{"guards/JwtAuthGuard.html":{}}}],["auth.guard.ts:17",{"_index":2297,"title":{},"body":{"guards/JwtAuthGuard.html":{}}}],["auth.service",{"_index":1331,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{}}}],["auth/activate/:link",{"_index":1434,"title":{},"body":{"modules/AuthModule.html":{}}}],["auth/auth.constants",{"_index":42,"title":{},"body":{"injectables/ActivateMiddleware.html":{},"guards/AddContentGuard.html":{},"guards/AdminGuard.html":{},"injectables/AdminUserMiddleware.html":{},"guards/AuthFerfershGuard.html":{},"guards/EditContentGuard.html":{},"guards/EditWebsiteGuard.html":{},"injectables/InitializeEmailMiddleware.html":{},"injectables/InitializeUserMiddleware.html":{},"guards/JwtAuthGuard.html":{},"guards/OwnerAdminGuard.html":{},"guards/RefreshAuthGuard.html":{},"guards/RolesGuard.html":{},"injectables/UserAdminMiddleware.html":{},"guards/UserGuard.html":{}}}],["auth/auth.module",{"_index":502,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/CartModule.html":{},"modules/CategoriesColoursModule.html":{},"modules/CoreModule.html":{},"modules/MailModule.html":{},"modules/OrdersModule.html":{},"modules/OwnerModule.html":{},"modules/ProductModule.html":{},"modules/ReviewsModule.html":{},"modules/RolesModule.html":{},"modules/UsersModule.html":{}}}],["auth/auth.service",{"_index":2298,"title":{},"body":{"guards/JwtAuthGuard.html":{},"guards/RefreshAuthGuard.html":{},"guards/RolesGuard.html":{},"modules/RolesModule.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{}}}],["auth/change",{"_index":1428,"title":{},"body":{"modules/AuthModule.html":{}}}],["auth/code",{"_index":1431,"title":{},"body":{"modules/AuthModule.html":{}}}],["auth/dto/login.dto",{"_index":735,"title":{},"body":{"injectables/AdminService.html":{},"injectables/OwnerService.html":{}}}],["auth/dto/reset.password.dto",{"_index":736,"title":{},"body":{"injectables/AdminService.html":{},"injectables/OwnerService.html":{},"injectables/UsersService.html":{}}}],["auth/login",{"_index":1425,"title":{},"body":{"modules/AuthModule.html":{}}}],["auth/logout",{"_index":1429,"title":{},"body":{"modules/AuthModule.html":{}}}],["auth/refresh",{"_index":1427,"title":{},"body":{"modules/AuthModule.html":{}}}],["auth/reset",{"_index":1432,"title":{},"body":{"modules/AuthModule.html":{}}}],["auth/signup",{"_index":1426,"title":{},"body":{"modules/AuthModule.html":{}}}],["authcontroller",{"_index":1279,"title":{"controllers/AuthController.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{}}}],["authferfershguard",{"_index":218,"title":{"guards/AuthFerfershGuard.html":{}},"body":{"controllers/AdminController.html":{},"controllers/AuthController.html":{},"guards/AuthFerfershGuard.html":{},"controllers/CategoriesController.html":{},"controllers/ColoursController.html":{},"controllers/ReviewsController.html":{},"controllers/RolesController.html":{},"controllers/UsersController.html":{}}}],["authferfershguard)@get('/find_users",{"_index":3536,"title":{},"body":{"controllers/UsersController.html":{}}}],["authferfershguard)@get('/get_users",{"_index":3539,"title":{},"body":{"controllers/UsersController.html":{}}}],["authferfershguard)@get('find_admin",{"_index":170,"title":{},"body":{"controllers/AdminController.html":{}}}],["authferfershguard)@get('get_admins",{"_index":175,"title":{},"body":{"controllers/AdminController.html":{}}}],["authferfershguard)@httpcode(201)@post('create_admin",{"_index":162,"title":{},"body":{"controllers/AdminController.html":{}}}],["authferfershguard)@httpcode(202",{"_index":1298,"title":{},"body":{"controllers/AuthController.html":{}}}],["authferfershguard)@httpcode(202)@patch('update_admin",{"_index":181,"title":{},"body":{"controllers/AdminController.html":{}}}],["authferfershguard)@post('/ban",{"_index":3532,"title":{},"body":{"controllers/UsersController.html":{}}}],["authheader",{"_index":2299,"title":{},"body":{"guards/JwtAuthGuard.html":{},"guards/RefreshAuthGuard.html":{},"guards/RolesGuard.html":{}}}],["authheader.split",{"_index":2302,"title":{},"body":{"guards/JwtAuthGuard.html":{},"guards/RefreshAuthGuard.html":{},"guards/RolesGuard.html":{}}}],["authmiddleware",{"_index":1390,"title":{"injectables/AuthMiddleware.html":{}},"body":{"injectables/AuthMiddleware.html":{},"modules/AuthModule.html":{}}}],["authmodule",{"_index":501,"title":{"modules/AuthModule.html":{}},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CartModule.html":{},"modules/CategoriesColoursModule.html":{},"modules/CoreModule.html":{},"modules/MailModule.html":{},"modules/OrdersModule.html":{},"modules/OwnerModule.html":{},"modules/ProductModule.html":{},"modules/ReviewsModule.html":{},"modules/RolesModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["author",{"_index":3818,"title":{},"body":{"index.html":{},"properties.html":{}}}],["authorization",{"_index":1397,"title":{},"body":{"injectables/AuthMiddleware.html":{},"injectables/CorsMiddleware.html":{},"injectables/ProductMiddleware.html":{},"interfaces/RequestHeaders.html":{},"injectables/UserMiddleware.html":{},"injectables/UserMiddleware-1.html":{}}}],["authservice",{"_index":1330,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"guards/JwtAuthGuard.html":{},"guards/RefreshAuthGuard.html":{},"guards/RolesGuard.html":{},"modules/RolesModule.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["authuser",{"_index":1440,"title":{"interfaces/AuthUser.html":{}},"body":{"interfaces/AuthUser.html":{},"interfaces/CodeDto.html":{},"interfaces/Payload.html":{},"interfaces/ReturnedAdmin.html":{},"interfaces/ReturnedOwner.html":{},"interfaces/ReturnedUser.html":{},"interfaces/Tokens.html":{}}}],["autoincrement",{"_index":628,"title":{},"body":{"classes/AdminRefreshToken.html":{},"classes/BookmarksProducts.html":{},"classes/Cart.html":{},"classes/CartProduct.html":{},"classes/Category.html":{},"classes/Colour.html":{},"classes/Currencies.html":{},"classes/Order.html":{},"classes/OrderProduct.html":{},"classes/Owner.html":{},"classes/OwnerRefreshToken.html":{},"classes/Product.html":{},"classes/ProductCategories.html":{},"classes/ProductColours.html":{},"classes/ProductReviews.html":{},"classes/Review.html":{},"classes/Role.html":{},"classes/UserRefreshToken.html":{},"classes/UserRoles.html":{},"classes/WatchedProducts.html":{}}}],["autoloadmodels",{"_index":1272,"title":{},"body":{"modules/AppModule.html":{}}}],["available",{"_index":3829,"title":{},"body":{"modules.html":{}}}],["availablecurrencies",{"_index":2153,"title":{},"body":{"injectables/CurrencyService.html":{}}}],["availablecurrencies[currrencycode",{"_index":2159,"title":{},"body":{"injectables/CurrencyService.html":{}}}],["availablecurrencies[currrencycode.tolowercase",{"_index":2158,"title":{},"body":{"injectables/CurrencyService.html":{}}}],["await",{"_index":72,"title":{},"body":{"injectables/ActivateMiddleware.html":{},"guards/AddContentGuard.html":{},"guards/AdminGuard.html":{},"injectables/AdminJwtRefreshService.html":{},"injectables/AdminService.html":{},"injectables/AdminUserMiddleware.html":{},"injectables/AppClusterService.html":{},"controllers/AppController.html":{},"guards/AuthFerfershGuard.html":{},"injectables/CategoriesService.html":{},"injectables/ColoursService.html":{},"injectables/CurrencyService.html":{},"guards/EditContentGuard.html":{},"guards/EditWebsiteGuard.html":{},"injectables/InitializeEmailMiddleware.html":{},"injectables/InitializeUserMiddleware.html":{},"guards/JwtAuthGuard.html":{},"injectables/LocationMiddleware.html":{},"injectables/MailService.html":{},"interfaces/Msg.html":{},"guards/OwnerAdminGuard.html":{},"injectables/OwnerJwtRefreshService.html":{},"injectables/OwnerService.html":{},"classes/RequestValidator.html":{},"injectables/ReviewsService.html":{},"guards/RolesGuard.html":{},"injectables/RolesService.html":{},"injectables/TasksService.html":{},"modules/TelegramModule.html":{},"injectables/TelegramService.html":{},"injectables/UserAdminMiddleware.html":{},"guards/UserGuard.html":{},"injectables/UserJwtRefreshTokenService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"injectables/ValidateDto.html":{}}}],["backers",{"_index":3810,"title":{},"body":{"index.html":{}}}],["bad",{"_index":67,"title":{},"body":{"injectables/ActivateMiddleware.html":{},"guards/AdminGuard.html":{},"injectables/AdminJwtRefreshService.html":{},"injectables/AdminService.html":{},"injectables/AdminUserMiddleware.html":{},"classes/ApiException.html":{},"injectables/CategoriesService.html":{},"injectables/ColoursService.html":{},"injectables/InitializeEmailMiddleware.html":{},"injectables/InitializeUserMiddleware.html":{},"guards/OwnerAdminGuard.html":{},"injectables/OwnerJwtRefreshService.html":{},"injectables/OwnerService.html":{},"guards/RefreshAuthGuard.html":{},"injectables/UserAdminMiddleware.html":{},"guards/UserGuard.html":{},"injectables/UserJwtRefreshTokenService.html":{},"injectables/UsersService.html":{}}}],["badrequest",{"_index":913,"title":{},"body":{"classes/ApiException.html":{}}}],["badrequest(type",{"_index":922,"title":{},"body":{"classes/ApiException.html":{}}}],["badrequesterror",{"_index":891,"title":{"classes/BadRequestError.html":{}},"body":{"classes/ApiError.html":{},"classes/ApiErrorExceptionFilter.html":{},"classes/BadRequestError.html":{},"classes/NotFoundError.html":{},"classes/RequestValidator.html":{}}}],["badrequesterror(validationerrortext",{"_index":3113,"title":{},"body":{"classes/RequestValidator.html":{}}}],["badrequestexception",{"_index":1837,"title":{},"body":{"injectables/CorsMiddleware.html":{},"injectables/ParseJsonPipe.html":{},"interfaces/RequestHeaders.html":{}}}],["badrequestexception(`${propertyname",{"_index":2953,"title":{},"body":{"injectables/ParseJsonPipe.html":{}}}],["ban",{"_index":3529,"title":{},"body":{"controllers/UsersController.html":{}}}],["banreason",{"_index":1457,"title":{},"body":{"classes/BanUserDto.html":{}}}],["banuser",{"_index":3524,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["banuser(@body",{"_index":3558,"title":{},"body":{"controllers/UsersController.html":{}}}],["banuser(dto",{"_index":3527,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["banuserdto",{"_index":1454,"title":{"classes/BanUserDto.html":{}},"body":{"classes/BanUserDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["base",{"_index":1045,"title":{},"body":{"controllers/AppController.html":{},"classes/Currencies.html":{},"injectables/CurrencyService.html":{}}}],["base.tolowercase().trim",{"_index":1121,"title":{},"body":{"controllers/AppController.html":{}}}],["base64",{"_index":470,"title":{},"body":{"injectables/AdminJwtRefreshService.html":{},"injectables/OwnerJwtRefreshService.html":{}}}],["base64').tostring",{"_index":291,"title":{},"body":{"guards/AdminGuard.html":{},"guards/OwnerAdminGuard.html":{},"guards/UserGuard.html":{}}}],["base64').tostring('ascii",{"_index":2287,"title":{},"body":{"injectables/InitializeUserMiddleware.html":{},"guards/JwtAuthGuard.html":{},"guards/RolesGuard.html":{}}}],["bcrypt",{"_index":725,"title":{},"body":{"injectables/AdminService.html":{},"injectables/OwnerService.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["bcrypt.compare",{"_index":807,"title":{},"body":{"injectables/AdminService.html":{},"injectables/OwnerService.html":{},"injectables/UsersService.html":{}}}],["bcrypt.gensalt(salt_rounds",{"_index":823,"title":{},"body":{"injectables/AdminService.html":{},"injectables/OwnerService.html":{},"injectables/UsersService.html":{}}}],["bcrypt.hash(dto.password",{"_index":2903,"title":{},"body":{"injectables/OwnerService.html":{}}}],["bcrypt.hash(owner.password",{"_index":2890,"title":{},"body":{"injectables/OwnerService.html":{}}}],["bcrypt.hash(password",{"_index":825,"title":{},"body":{"injectables/AdminService.html":{},"injectables/OwnerService.html":{},"injectables/UsersService.html":{}}}],["bcrypt.hash(userdto.password",{"_index":3624,"title":{},"body":{"injectables/UsersService.html":{}}}],["bearer",{"_index":2301,"title":{},"body":{"guards/JwtAuthGuard.html":{},"guards/RefreshAuthGuard.html":{},"guards/RolesGuard.html":{}}}],["behind",{"_index":210,"title":{},"body":{"controllers/AdminController.html":{},"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/CategoriesController.html":{},"controllers/ColoursController.html":{},"modules/CoreModule.html":{},"controllers/ReviewsController.html":{},"controllers/RolesController.html":{},"injectables/ThrottlerBehindProxyGuard.html":{},"controllers/UsersController.html":{}}}],["belongsto",{"_index":656,"title":{},"body":{"classes/AdminRefreshToken.html":{},"classes/Cart.html":{},"classes/CartProduct.html":{},"classes/Currencies.html":{},"classes/Order.html":{},"classes/OrderProduct.html":{},"classes/OwnerRefreshToken.html":{},"classes/Product.html":{},"classes/UserRefreshToken.html":{}}}],["belongsto(undefined",{"_index":596,"title":{},"body":{"classes/AdminRefreshToken.html":{},"classes/Cart.html":{},"classes/CartProduct.html":{},"classes/Currencies.html":{},"classes/Order.html":{},"classes/OrderProduct.html":{},"classes/OwnerRefreshToken.html":{},"classes/Product.html":{},"classes/UserRefreshToken.html":{}}}],["belongstomany",{"_index":1507,"title":{},"body":{"classes/Cart.html":{},"classes/Category.html":{},"classes/Colour.html":{},"classes/Order.html":{},"classes/Owner.html":{},"classes/Product.html":{},"classes/Review.html":{},"classes/Role.html":{}}}],["belongstomany(undefined",{"_index":1493,"title":{},"body":{"classes/Cart.html":{},"classes/Category.html":{},"classes/Colour.html":{},"classes/Order.html":{},"classes/Owner.html":{},"classes/Product.html":{},"classes/Review.html":{},"classes/Role.html":{}}}],["below",{"_index":2523,"title":{},"body":{"injectables/MailService.html":{}}}],["better",{"_index":2525,"title":{},"body":{"injectables/MailService.html":{}}}],["block",{"_index":2518,"title":{},"body":{"injectables/MailService.html":{}}}],["block!important",{"_index":2521,"title":{},"body":{"injectables/MailService.html":{}}}],["body",{"_index":184,"title":{},"body":{"controllers/AdminController.html":{},"controllers/AuthController.html":{},"controllers/CategoriesController.html":{},"controllers/ColoursController.html":{},"injectables/MailService.html":{},"controllers/ReviewsController.html":{},"controllers/RolesController.html":{},"controllers/UsersController.html":{},"dependencies.html":{}}}],["body(new",{"_index":250,"title":{},"body":{"controllers/AdminController.html":{},"controllers/AuthController.html":{}}}],["bookmarks_products",{"_index":1470,"title":{},"body":{"classes/BookmarksProducts.html":{}}}],["bookmarksproducts",{"_index":1192,"title":{"classes/BookmarksProducts.html":{}},"body":{"modules/AppModule.html":{},"classes/BookmarksProducts.html":{},"modules/ProductModule.html":{},"modules/UsersModule.html":{}}}],["boolean",{"_index":92,"title":{},"body":{"guards/AddContentGuard.html":{},"guards/AdminGuard.html":{},"interfaces/AdminInterface.html":{},"interfaces/AdminRefreshTokenCreationAttrbs.html":{},"interfaces/AdmincreationAttrbs.html":{},"guards/AuthFerfershGuard.html":{},"interfaces/AuthUser.html":{},"interfaces/CodeDto.html":{},"injectables/CorsMiddleware.html":{},"classes/CreateAccessTokenDto.html":{},"classes/CreateAdminDto.html":{},"classes/CreateAdminRefreshTokenDto.html":{},"classes/CreateOwnerRefreshTokenDto.html":{},"classes/CreateUserRefreshTokenDto.html":{},"guards/EditContentGuard.html":{},"guards/EditWebsiteGuard.html":{},"injectables/FilesService.html":{},"interfaces/InitializeUser.html":{},"guards/JwtAuthGuard.html":{},"classes/MatchConstraint.html":{},"classes/Owner.html":{},"guards/OwnerAdminGuard.html":{},"interfaces/Payload.html":{},"guards/RefreshAuthGuard.html":{},"interfaces/RequestHeaders.html":{},"interfaces/ReturnedAdmin.html":{},"interfaces/ReturnedOwner.html":{},"interfaces/ReturnedUser.html":{},"interfaces/RolecreationAttrbs.html":{},"guards/RolesGuard.html":{},"interfaces/Tokens.html":{},"guards/UserGuard.html":{},"interfaces/UserInterface.html":{},"interfaces/UserRefreshCreationAttrbs.html":{},"interfaces/UsercreationAttrbs.html":{},"interfaces/ValidateUser.html":{},"interfaces/fileCreated.html":{}}}],["boolean(process.env.mailer_security?.trim",{"_index":2359,"title":{},"body":{"modules/MailModule.html":{}}}],["border",{"_index":2434,"title":{},"body":{"injectables/MailService.html":{}}}],["bot",{"_index":3380,"title":{},"body":{"injectables/TelegramService.html":{}}}],["bottom:0!important",{"_index":2501,"title":{},"body":{"injectables/MailService.html":{}}}],["bottom:20px!important",{"_index":2503,"title":{},"body":{"injectables/MailService.html":{}}}],["bounceback",{"_index":1219,"title":{},"body":{"modules/AppModule.html":{}}}],["brdr",{"_index":2485,"title":{},"body":{"injectables/MailService.html":{}}}],["browse",{"_index":3827,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":3825,"title":{},"body":{"modules.html":{}}}],["btn",{"_index":2480,"title":{},"body":{"injectables/MailService.html":{}}}],["buffer",{"_index":463,"title":{},"body":{"injectables/AdminJwtRefreshService.html":{},"controllers/AppController.html":{},"injectables/FilesService.html":{},"injectables/OwnerJwtRefreshService.html":{},"interfaces/fileCreated.html":{}}}],["buffer.concat([cipher.update(value",{"_index":468,"title":{},"body":{"injectables/AdminJwtRefreshService.html":{},"controllers/AppController.html":{},"injectables/OwnerJwtRefreshService.html":{}}}],["buffer.from(accesstoken",{"_index":2303,"title":{},"body":{"guards/JwtAuthGuard.html":{}}}],["buffer.from(refreshtoken",{"_index":290,"title":{},"body":{"guards/AdminGuard.html":{},"injectables/InitializeUserMiddleware.html":{},"guards/OwnerAdminGuard.html":{},"guards/UserGuard.html":{}}}],["buffer.from(token",{"_index":3243,"title":{},"body":{"guards/RolesGuard.html":{}}}],["building",{"_index":3778,"title":{},"body":{"index.html":{}}}],["bull",{"_index":2231,"title":{},"body":{"classes/GarbageCollectingProcessor.html":{},"dependencies.html":{}}}],["bullmodule",{"_index":1185,"title":{},"body":{"modules/AppModule.html":{},"modules/CoreModule.html":{}}}],["bullmodule.forroot",{"_index":1214,"title":{},"body":{"modules/AppModule.html":{}}}],["bullmodule.registerqueue",{"_index":1817,"title":{},"body":{"modules/CoreModule.html":{}}}],["button",{"_index":2412,"title":{},"body":{"injectables/MailService.html":{}}}],["button.es",{"_index":2440,"title":{},"body":{"injectables/MailService.html":{}}}],["bytes",{"_index":346,"title":{},"body":{"injectables/AdminJwtRefreshService.html":{},"controllers/AppController.html":{},"injectables/OwnerJwtRefreshService.html":{}}}],["c",{"_index":2469,"title":{},"body":{"injectables/MailService.html":{}}}],["cache",{"_index":1861,"title":{},"body":{"injectables/CorsMiddleware.html":{},"interfaces/RequestHeaders.html":{},"dependencies.html":{}}}],["cacheinterceptor",{"_index":1592,"title":{},"body":{"controllers/CategoriesController.html":{},"controllers/ColoursController.html":{},"controllers/ReviewsController.html":{},"controllers/RolesController.html":{}}}],["cachemodule",{"_index":1162,"title":{},"body":{"modules/AppModule.html":{}}}],["cachemodule.register",{"_index":1208,"title":{},"body":{"modules/AppModule.html":{}}}],["cachettl",{"_index":1593,"title":{},"body":{"controllers/CategoriesController.html":{},"controllers/ColoursController.html":{}}}],["cachettl(200",{"_index":1603,"title":{},"body":{"controllers/CategoriesController.html":{},"controllers/ColoursController.html":{}}}],["callback",{"_index":977,"title":{},"body":{"injectables/AppClusterService.html":{},"modules/AppModule.html":{},"injectables/FilesService.html":{},"interfaces/Msg.html":{},"injectables/TasksService.html":{},"interfaces/fileCreated.html":{}}}],["callback(new",{"_index":1252,"title":{},"body":{"modules/AppModule.html":{},"injectables/FilesService.html":{},"interfaces/fileCreated.html":{}}}],["callback(null",{"_index":1251,"title":{},"body":{"modules/AppModule.html":{},"injectables/FilesService.html":{},"interfaces/fileCreated.html":{}}}],["callbackfunction",{"_index":975,"title":{},"body":{"injectables/AppClusterService.html":{},"interfaces/Msg.html":{},"miscellaneous/typealiases.html":{}}}],["callhandler",{"_index":2241,"title":{},"body":{"injectables/GlobalInterceptor.html":{}}}],["canactivate",{"_index":84,"title":{},"body":{"guards/AddContentGuard.html":{},"guards/AdminGuard.html":{},"guards/AuthFerfershGuard.html":{},"guards/EditContentGuard.html":{},"guards/EditWebsiteGuard.html":{},"guards/JwtAuthGuard.html":{},"guards/OwnerAdminGuard.html":{},"guards/RefreshAuthGuard.html":{},"guards/RolesGuard.html":{},"guards/UserGuard.html":{}}}],["canactivate(context",{"_index":88,"title":{},"body":{"guards/AddContentGuard.html":{},"guards/AdminGuard.html":{},"guards/AuthFerfershGuard.html":{},"guards/EditContentGuard.html":{},"guards/EditWebsiteGuard.html":{},"guards/JwtAuthGuard.html":{},"guards/OwnerAdminGuard.html":{},"guards/RefreshAuthGuard.html":{},"guards/RolesGuard.html":{},"guards/UserGuard.html":{}}}],["card",{"_index":1474,"title":{},"body":{"controllers/CardController.html":{}}}],["cardcontroller",{"_index":1472,"title":{"controllers/CardController.html":{}},"body":{"controllers/CardController.html":{},"modules/CartModule.html":{}}}],["cardservice",{"_index":1476,"title":{"injectables/CardService.html":{}},"body":{"injectables/CardService.html":{},"modules/CartModule.html":{},"overview.html":{}}}],["cart",{"_index":535,"title":{"classes/Cart.html":{}},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"classes/Cart.html":{},"modules/CartModule.html":{},"classes/CartProduct.html":{},"modules/CoreModule.html":{},"modules/MailModule.html":{},"modules/OrdersModule.html":{},"modules/OwnerModule.html":{},"classes/Product.html":{},"modules/ProductModule.html":{},"modules/ReviewsModule.html":{},"modules/RolesModule.html":{},"modules/UsersModule.html":{}}}],["cart.controller",{"_index":1520,"title":{},"body":{"modules/CartModule.html":{}}}],["cart.model",{"_index":1540,"title":{},"body":{"classes/CartProduct.html":{}}}],["cart.product.model",{"_index":1508,"title":{},"body":{"classes/Cart.html":{}}}],["cart.service",{"_index":1519,"title":{},"body":{"modules/CartModule.html":{}}}],["cart/cart.module",{"_index":1177,"title":{},"body":{"modules/AppModule.html":{},"modules/OrdersModule.html":{},"modules/ProductModule.html":{},"modules/ReviewsModule.html":{}}}],["cart/models/cart.model",{"_index":536,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/CoreModule.html":{},"modules/MailModule.html":{},"modules/OrdersModule.html":{},"modules/OwnerModule.html":{},"classes/Product.html":{},"modules/ProductModule.html":{},"modules/ReviewsModule.html":{},"modules/RolesModule.html":{},"modules/UsersModule.html":{}}}],["cart/models/cart.product.model",{"_index":534,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/CoreModule.html":{},"modules/MailModule.html":{},"modules/OrdersModule.html":{},"modules/OwnerModule.html":{},"classes/Product.html":{},"modules/ProductModule.html":{},"modules/ReviewsModule.html":{},"modules/RolesModule.html":{},"modules/UsersModule.html":{}}}],["cart_products",{"_index":1541,"title":{},"body":{"classes/CartProduct.html":{}}}],["cartid",{"_index":1525,"title":{},"body":{"classes/CartProduct.html":{}}}],["cartmodule",{"_index":1153,"title":{"modules/CartModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CartModule.html":{},"modules/OrdersModule.html":{},"modules/ProductModule.html":{},"modules/ReviewsModule.html":{},"modules.html":{},"overview.html":{}}}],["cartproduct",{"_index":533,"title":{"classes/CartProduct.html":{}},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"classes/Cart.html":{},"modules/CartModule.html":{},"classes/CartProduct.html":{},"modules/CoreModule.html":{},"modules/MailModule.html":{},"modules/OrdersModule.html":{},"modules/OwnerModule.html":{},"classes/Product.html":{},"modules/ProductModule.html":{},"modules/ReviewsModule.html":{},"modules/RolesModule.html":{},"modules/UsersModule.html":{}}}],["cartproducts",{"_index":1479,"title":{},"body":{"classes/Cart.html":{}}}],["carts",{"_index":1509,"title":{},"body":{"classes/Cart.html":{},"classes/Product.html":{}}}],["cartstatus",{"_index":1480,"title":{},"body":{"classes/Cart.html":{}}}],["casler",{"_index":1960,"title":{},"body":{"classes/CreateAdminDto.html":{},"classes/CreateOwnerDto.html":{}}}],["catch",{"_index":394,"title":{},"body":{"injectables/AdminJwtRefreshService.html":{},"injectables/AdminUserMiddleware.html":{},"classes/AllExceptionsFilter.html":{},"classes/ApiErrorExceptionFilter.html":{},"classes/ApiExceptionFilter.html":{},"controllers/AppController.html":{},"controllers/AuthController.html":{},"injectables/AuthMiddleware.html":{},"injectables/CurrencyService.html":{},"injectables/FilesService.html":{},"classes/HttpExceptionFilter.html":{},"injectables/InitializeEmailMiddleware.html":{},"injectables/InitializeUserMiddleware.html":{},"guards/JwtAuthGuard.html":{},"injectables/LocationMiddleware.html":{},"injectables/MailService.html":{},"injectables/OwnerJwtRefreshService.html":{},"injectables/ParseJsonPipe.html":{},"injectables/ProductMiddleware.html":{},"controllers/ReviewsController.html":{},"controllers/RolesController.html":{},"guards/RolesGuard.html":{},"injectables/TasksService.html":{},"injectables/UserAdminMiddleware.html":{},"injectables/UserJwtRefreshTokenService.html":{},"injectables/UserMiddleware.html":{},"injectables/UserMiddleware-1.html":{},"interfaces/fileCreated.html":{}}}],["catch(apiexception",{"_index":966,"title":{},"body":{"classes/ApiExceptionFilter.html":{}}}],["catch(badrequesterror",{"_index":900,"title":{},"body":{"classes/ApiErrorExceptionFilter.html":{}}}],["catch(exception",{"_index":855,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"classes/ApiErrorExceptionFilter.html":{},"classes/ApiExceptionFilter.html":{},"classes/HttpExceptionFilter.html":{}}}],["catch(httpexception",{"_index":2253,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["catcherror",{"_index":1065,"title":{},"body":{"controllers/AppController.html":{},"injectables/CurrencyService.html":{},"injectables/GlobalInterceptor.html":{}}}],["catcherror((err",{"_index":2250,"title":{},"body":{"injectables/GlobalInterceptor.html":{}}}],["catcherror((error",{"_index":1130,"title":{},"body":{"controllers/AppController.html":{},"injectables/CurrencyService.html":{}}}],["categories",{"_index":1567,"title":{},"body":{"controllers/CategoriesController.html":{},"injectables/CategoriesService.html":{},"classes/Category.html":{},"interfaces/CategoryCreationAtrb.html":{},"interfaces/ColourCreationAtrb.html":{},"injectables/ColoursService.html":{},"classes/CreateProductDto.html":{},"classes/Nested.html":{},"classes/Nested-1.html":{},"classes/Product.html":{},"interfaces/ProductCreationAttrs.html":{},"classes/QueryFilterDto.html":{},"interfaces/ReturnedCategory.html":{},"interfaces/ReturnedColour.html":{},"interfaces/ReturnedProduct.html":{},"interfaces/ReturnedProducts.html":{},"interfaces/ReturnedReview.html":{},"interfaces/ReviewCreationAtrb.html":{},"classes/UpdateProductDto.html":{}}}],["categories&colours/categories&colours.module",{"_index":1182,"title":{},"body":{"modules/AppModule.html":{},"modules/ProductModule.html":{}}}],["categories&colours/models/category.model",{"_index":542,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/CartModule.html":{},"modules/CoreModule.html":{},"modules/OrdersModule.html":{},"modules/OwnerModule.html":{},"classes/Product.html":{},"modules/ProductModule.html":{},"modules/ReviewsModule.html":{},"modules/RolesModule.html":{},"modules/UsersModule.html":{}}}],["categories&colours/models/colours.model",{"_index":538,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/CartModule.html":{},"modules/CoreModule.html":{},"modules/OwnerModule.html":{},"modules/ReviewsModule.html":{},"modules/RolesModule.html":{},"modules/UsersModule.html":{}}}],["categories&colours/models/product.categories.model",{"_index":544,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/CartModule.html":{},"modules/CoreModule.html":{},"modules/OrdersModule.html":{},"modules/OwnerModule.html":{},"classes/Product.html":{},"modules/ProductModule.html":{},"modules/ReviewsModule.html":{},"modules/RolesModule.html":{},"modules/UsersModule.html":{}}}],["categories&colours/models/product.colour.model",{"_index":540,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/CartModule.html":{},"modules/CoreModule.html":{},"modules/OwnerModule.html":{},"modules/ReviewsModule.html":{},"modules/RolesModule.html":{},"modules/UsersModule.html":{}}}],["categories&colours/services/categories.service",{"_index":3051,"title":{},"body":{"modules/ProductModule.html":{},"modules/ReviewsModule.html":{}}}],["categories'})@apiresponse({status",{"_index":1575,"title":{},"body":{"controllers/CategoriesController.html":{}}}],["categories.map((category",{"_index":1642,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["categories.map((colour",{"_index":1785,"title":{},"body":{"injectables/ColoursService.html":{}}}],["categories/create_category",{"_index":1561,"title":{},"body":{"modules/CategoriesColoursModule.html":{}}}],["categories/delete_category",{"_index":1562,"title":{},"body":{"modules/CategoriesColoursModule.html":{}}}],["categoriescoloursmodule",{"_index":1154,"title":{"modules/CategoriesColoursModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CartModule.html":{},"modules/CategoriesColoursModule.html":{},"modules/OrdersModule.html":{},"modules/ProductModule.html":{},"modules/ReviewsModule.html":{},"modules.html":{},"overview.html":{}}}],["categoriescontroller",{"_index":1550,"title":{"controllers/CategoriesController.html":{}},"body":{"modules/CategoriesColoursModule.html":{},"controllers/CategoriesController.html":{}}}],["categoriesservice",{"_index":1547,"title":{"injectables/CategoriesService.html":{}},"body":{"modules/CategoriesColoursModule.html":{},"controllers/CategoriesController.html":{},"injectables/CategoriesService.html":{},"modules/ProductModule.html":{},"modules/ReviewsModule.html":{},"overview.html":{}}}],["category",{"_index":541,"title":{"classes/Category.html":{}},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/CartModule.html":{},"modules/CategoriesColoursModule.html":{},"controllers/CategoriesController.html":{},"injectables/CategoriesService.html":{},"classes/Category.html":{},"modules/CoreModule.html":{},"modules/OrdersModule.html":{},"modules/OwnerModule.html":{},"classes/Product.html":{},"classes/ProductCategories.html":{},"modules/ProductModule.html":{},"modules/ReviewsModule.html":{},"modules/RolesModule.html":{},"modules/UsersModule.html":{}}}],["category.colour.constants",{"_index":1635,"title":{},"body":{"injectables/CategoriesService.html":{},"injectables/ColoursService.html":{}}}],["category.createdat",{"_index":1648,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["category.en",{"_index":1645,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["category.id",{"_index":1643,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["category.length",{"_index":1640,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["category.model",{"_index":3030,"title":{},"body":{"classes/ProductCategories.html":{}}}],["category.rs",{"_index":1646,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["category.ru",{"_index":1647,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["category.ua",{"_index":1644,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["category.updatedat",{"_index":1649,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["categorycreationatrb",{"_index":1676,"title":{"interfaces/CategoryCreationAtrb.html":{}},"body":{"classes/Category.html":{},"interfaces/CategoryCreationAtrb.html":{},"interfaces/ColourCreationAtrb.html":{},"interfaces/ProductCreationAttrs.html":{},"interfaces/ReturnedCategory.html":{},"interfaces/ReturnedColour.html":{},"interfaces/ReturnedProduct.html":{},"interfaces/ReturnedProducts.html":{},"interfaces/ReturnedReview.html":{},"interfaces/ReviewCreationAtrb.html":{}}}],["categorydto",{"_index":1580,"title":{},"body":{"controllers/CategoriesController.html":{},"injectables/CategoriesService.html":{}}}],["categorydto.en",{"_index":1652,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["categorydto.rs",{"_index":1653,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["categorydto.ru",{"_index":1654,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["categorydto.ua",{"_index":1651,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["categoryid",{"_index":1585,"title":{},"body":{"controllers/CategoriesController.html":{},"injectables/CategoriesService.html":{},"classes/ProductCategories.html":{}}}],["categoryids",{"_index":1625,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["categoryrepository",{"_index":1619,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["category})@httpcode(201)@roles('owner",{"_index":1576,"title":{},"body":{"controllers/CategoriesController.html":{}}}],["cb",{"_index":3294,"title":{},"body":{"injectables/TasksService.html":{}}}],["cb(ownerrefreshtoken",{"_index":3332,"title":{},"body":{"injectables/TasksService.html":{}}}],["cb(refreshtokenid",{"_index":3343,"title":{},"body":{"injectables/TasksService.html":{}}}],["cell!important",{"_index":2515,"title":{},"body":{"injectables/MailService.html":{}}}],["changedto",{"_index":1293,"title":{"classes/ChangeDto.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"classes/ChangeDto.html":{}}}],["changepassword",{"_index":678,"title":{},"body":{"injectables/AdminService.html":{},"controllers/AuthController.html":{},"injectables/OwnerService.html":{},"injectables/UsersService.html":{}}}],["changepassword(adminid",{"_index":693,"title":{},"body":{"injectables/AdminService.html":{}}}],["changepassword(ownerid",{"_index":2841,"title":{},"body":{"injectables/OwnerService.html":{}}}],["changepassword(response",{"_index":1292,"title":{},"body":{"controllers/AuthController.html":{}}}],["changepassword(userid",{"_index":3590,"title":{},"body":{"injectables/UsersService.html":{}}}],["changing",{"_index":1294,"title":{},"body":{"controllers/AuthController.html":{}}}],["chatid",{"_index":2261,"title":{},"body":{"interfaces/ITelegramModuleAsyncOptions.html":{},"interfaces/ITelegramOptions.html":{},"injectables/TelegramService.html":{}}}],["checkadmin",{"_index":679,"title":{},"body":{"injectables/AdminService.html":{}}}],["checkadmin(payload",{"_index":695,"title":{},"body":{"injectables/AdminService.html":{}}}],["checkedout",{"_index":1511,"title":{},"body":{"classes/Cart.html":{}}}],["checking",{"_index":440,"title":{},"body":{"injectables/AdminJwtRefreshService.html":{},"injectables/OwnerJwtRefreshService.html":{}}}],["checkowner",{"_index":2829,"title":{},"body":{"injectables/OwnerService.html":{}}}],["checkowner(payload",{"_index":2843,"title":{},"body":{"injectables/OwnerService.html":{}}}],["chrome/105.0.0.0",{"_index":607,"title":{},"body":{"classes/AdminRefreshToken.html":{},"classes/CreateAdminRefreshTokenDto.html":{},"classes/CreateOwnerDto.html":{},"classes/CreateOwnerRefreshTokenDto.html":{},"classes/Owner.html":{},"classes/OwnerRefreshToken.html":{},"injectables/UserJwtRefreshTokenService.html":{}}}],["cipher",{"_index":464,"title":{},"body":{"injectables/AdminJwtRefreshService.html":{},"controllers/AppController.html":{},"injectables/OwnerJwtRefreshService.html":{}}}],["cipher.final",{"_index":1132,"title":{},"body":{"controllers/AppController.html":{}}}],["cipher.final()]).tostring",{"_index":469,"title":{},"body":{"injectables/AdminJwtRefreshService.html":{},"injectables/OwnerJwtRefreshService.html":{}}}],["city",{"_index":1103,"title":{},"body":{"controllers/AppController.html":{},"interfaces/AuthUser.html":{},"interfaces/CodeDto.html":{},"interfaces/Payload.html":{},"interfaces/ReturnedAdmin.html":{},"interfaces/ReturnedOwner.html":{},"interfaces/ReturnedUser.html":{},"interfaces/Tokens.html":{},"classes/UpdateUserDto.html":{}}}],["city'})@isstring()@minlength(2)@maxlength(50",{"_index":3422,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["class",{"_index":51,"title":{"classes/AddRoleDto.html":{},"classes/AdminRefreshToken.html":{},"classes/AllExceptionsFilter.html":{},"classes/ApiError.html":{},"classes/ApiErrorExceptionFilter.html":{},"classes/ApiException.html":{},"classes/ApiExceptionFilter.html":{},"classes/BadRequestError.html":{},"classes/BanUserDto.html":{},"classes/BookmarksProducts.html":{},"classes/Cart.html":{},"classes/CartProduct.html":{},"classes/Category.html":{},"classes/ChangeDto.html":{},"classes/Colour.html":{},"classes/CreateAccessTokenDto.html":{},"classes/CreateAdminDto.html":{},"classes/CreateAdminRefreshTokenDto.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateColourDto.html":{},"classes/CreateOwnerDto.html":{},"classes/CreateOwnerRefreshTokenDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateReviewDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserRefreshTokenDto.html":{},"classes/Currencies.html":{},"classes/GarbageCollectingProcessor.html":{},"classes/HttpExceptionFilter.html":{},"classes/JwtRefreshTokenDeletedEvent.html":{},"classes/LoginDto.html":{},"classes/MatchConstraint.html":{},"classes/Nested.html":{},"classes/Nested-1.html":{},"classes/NotFoundError.html":{},"classes/Order.html":{},"classes/OrderProduct.html":{},"classes/Owner.html":{},"classes/OwnerRefreshToken.html":{},"classes/ParseFormDataJsonPipe.html":{},"classes/Product.html":{},"classes/ProductCategories.html":{},"classes/ProductColours.html":{},"classes/ProductReviews.html":{},"classes/QueryFilterDto.html":{},"classes/RequestValidator.html":{},"classes/ResetDto.html":{},"classes/Review.html":{},"classes/Role.html":{},"classes/SignupDto.html":{},"classes/UpdateCategoryDto.html":{},"classes/UpdateColourDto.html":{},"classes/UpdateProductDto.html":{},"classes/UpdateUserDto.html":{},"classes/UserRefreshToken.html":{},"classes/UserRoles.html":{},"classes/ValidationException.html":{},"classes/WatchedProducts.html":{}},"body":{"injectables/ActivateMiddleware.html":{},"guards/AddContentGuard.html":{},"classes/AddRoleDto.html":{},"controllers/AdminController.html":{},"guards/AdminGuard.html":{},"injectables/AdminJwtRefreshService.html":{},"modules/AdminModule.html":{},"classes/AdminRefreshToken.html":{},"injectables/AdminService.html":{},"injectables/AdminUserMiddleware.html":{},"classes/AllExceptionsFilter.html":{},"classes/ApiError.html":{},"classes/ApiErrorExceptionFilter.html":{},"classes/ApiException.html":{},"classes/ApiExceptionFilter.html":{},"injectables/AppClusterService.html":{},"controllers/AppController.html":{},"injectables/AppListener.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"guards/AuthFerfershGuard.html":{},"injectables/AuthMiddleware.html":{},"modules/AuthModule.html":{},"classes/BadRequestError.html":{},"classes/BanUserDto.html":{},"classes/BookmarksProducts.html":{},"controllers/CardController.html":{},"injectables/CardService.html":{},"classes/Cart.html":{},"modules/CartModule.html":{},"classes/CartProduct.html":{},"modules/CategoriesColoursModule.html":{},"controllers/CategoriesController.html":{},"injectables/CategoriesService.html":{},"classes/Category.html":{},"classes/ChangeDto.html":{},"classes/Colour.html":{},"controllers/ColoursController.html":{},"injectables/ColoursService.html":{},"modules/CoreModule.html":{},"injectables/CorsMiddleware.html":{},"classes/CreateAccessTokenDto.html":{},"classes/CreateAdminDto.html":{},"classes/CreateAdminRefreshTokenDto.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateColourDto.html":{},"classes/CreateOwnerDto.html":{},"classes/CreateOwnerRefreshTokenDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateReviewDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserRefreshTokenDto.html":{},"classes/Currencies.html":{},"injectables/CurrencyService.html":{},"guards/EditContentGuard.html":{},"guards/EditWebsiteGuard.html":{},"injectables/FilesService.html":{},"classes/GarbageCollectingProcessor.html":{},"injectables/GlobalInterceptor.html":{},"classes/HttpExceptionFilter.html":{},"injectables/InitializeEmailMiddleware.html":{},"injectables/InitializeUserMiddleware.html":{},"guards/JwtAuthGuard.html":{},"classes/JwtRefreshTokenDeletedEvent.html":{},"injectables/LocationMiddleware.html":{},"classes/LoginDto.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"classes/MatchConstraint.html":{},"interfaces/Msg.html":{},"classes/Nested.html":{},"classes/Nested-1.html":{},"classes/NotFoundError.html":{},"classes/Order.html":{},"classes/OrderProduct.html":{},"controllers/OrdersController.html":{},"modules/OrdersModule.html":{},"injectables/OrdersService.html":{},"classes/Owner.html":{},"guards/OwnerAdminGuard.html":{},"injectables/OwnerJwtRefreshService.html":{},"modules/OwnerModule.html":{},"classes/OwnerRefreshToken.html":{},"injectables/OwnerService.html":{},"classes/ParseFormDataJsonPipe.html":{},"injectables/ParseJsonPipe.html":{},"classes/Product.html":{},"classes/ProductCategories.html":{},"classes/ProductColours.html":{},"injectables/ProductMiddleware.html":{},"modules/ProductModule.html":{},"classes/ProductReviews.html":{},"classes/QueryFilterDto.html":{},"guards/RefreshAuthGuard.html":{},"interfaces/RequestHeaders.html":{},"classes/RequestValidator.html":{},"classes/ResetDto.html":{},"classes/Review.html":{},"controllers/ReviewsController.html":{},"modules/ReviewsModule.html":{},"injectables/ReviewsService.html":{},"classes/Role.html":{},"controllers/RolesController.html":{},"guards/RolesGuard.html":{},"modules/RolesModule.html":{},"injectables/RolesService.html":{},"classes/SignupDto.html":{},"injectables/TasksService.html":{},"modules/TelegramModule.html":{},"injectables/TelegramService.html":{},"injectables/ThrottlerBehindProxyGuard.html":{},"classes/UpdateCategoryDto.html":{},"classes/UpdateColourDto.html":{},"classes/UpdateProductDto.html":{},"classes/UpdateUserDto.html":{},"injectables/UserAdminMiddleware.html":{},"guards/UserGuard.html":{},"injectables/UserJwtRefreshTokenService.html":{},"injectables/UserMiddleware.html":{},"injectables/UserMiddleware-1.html":{},"classes/UserRefreshToken.html":{},"classes/UserRoles.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"injectables/ValidateDto.html":{},"classes/ValidationException.html":{},"classes/WatchedProducts.html":{},"dependencies.html":{},"interfaces/fileCreated.html":{}}}],["class=\"gmail",{"_index":2464,"title":{},"body":{"injectables/MailService.html":{}}}],["classconstructor",{"_index":3098,"title":{},"body":{"classes/RequestValidator.html":{}}}],["classes",{"_index":118,"title":{},"body":{"classes/AddRoleDto.html":{},"classes/AdminRefreshToken.html":{},"classes/AllExceptionsFilter.html":{},"classes/ApiError.html":{},"classes/ApiErrorExceptionFilter.html":{},"classes/ApiException.html":{},"classes/ApiExceptionFilter.html":{},"classes/BadRequestError.html":{},"classes/BanUserDto.html":{},"classes/BookmarksProducts.html":{},"classes/Cart.html":{},"classes/CartProduct.html":{},"classes/Category.html":{},"classes/ChangeDto.html":{},"classes/Colour.html":{},"classes/CreateAccessTokenDto.html":{},"classes/CreateAdminDto.html":{},"classes/CreateAdminRefreshTokenDto.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateColourDto.html":{},"classes/CreateOwnerDto.html":{},"classes/CreateOwnerRefreshTokenDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateReviewDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserRefreshTokenDto.html":{},"classes/Currencies.html":{},"classes/GarbageCollectingProcessor.html":{},"classes/HttpExceptionFilter.html":{},"classes/JwtRefreshTokenDeletedEvent.html":{},"classes/LoginDto.html":{},"classes/MatchConstraint.html":{},"classes/Nested.html":{},"classes/Nested-1.html":{},"classes/NotFoundError.html":{},"classes/Order.html":{},"classes/OrderProduct.html":{},"classes/Owner.html":{},"classes/OwnerRefreshToken.html":{},"classes/ParseFormDataJsonPipe.html":{},"classes/Product.html":{},"classes/ProductCategories.html":{},"classes/ProductColours.html":{},"classes/ProductReviews.html":{},"classes/QueryFilterDto.html":{},"classes/RequestValidator.html":{},"classes/ResetDto.html":{},"classes/Review.html":{},"classes/Role.html":{},"classes/SignupDto.html":{},"classes/UpdateCategoryDto.html":{},"classes/UpdateColourDto.html":{},"classes/UpdateProductDto.html":{},"classes/UpdateUserDto.html":{},"classes/UserRefreshToken.html":{},"classes/UserRoles.html":{},"classes/ValidationException.html":{},"classes/WatchedProducts.html":{},"overview.html":{}}}],["classinstance",{"_index":3100,"title":{},"body":{"classes/RequestValidator.html":{}}}],["classserializerinterceptor",{"_index":186,"title":{},"body":{"controllers/AdminController.html":{},"controllers/AuthController.html":{},"controllers/CategoriesController.html":{},"controllers/ColoursController.html":{},"controllers/ReviewsController.html":{},"controllers/UsersController.html":{}}}],["cleartimeout(timeout",{"_index":1034,"title":{},"body":{"injectables/AppClusterService.html":{},"interfaces/Msg.html":{}}}],["click",{"_index":2522,"title":{},"body":{"injectables/MailService.html":{}}}],["cluster",{"_index":984,"title":{},"body":{"injectables/AppClusterService.html":{},"interfaces/Msg.html":{}}}],["cluster.fork",{"_index":1003,"title":{},"body":{"injectables/AppClusterService.html":{},"interfaces/Msg.html":{}}}],["cluster.isprimary",{"_index":993,"title":{},"body":{"injectables/AppClusterService.html":{},"interfaces/Msg.html":{}}}],["cluster.workers",{"_index":1014,"title":{},"body":{"injectables/AppClusterService.html":{},"interfaces/Msg.html":{}}}],["cluster.workers[id].on('message",{"_index":1015,"title":{},"body":{"injectables/AppClusterService.html":{},"interfaces/Msg.html":{}}}],["cluster_adminmodule",{"_index":478,"title":{},"body":{"modules/AdminModule.html":{},"overview.html":{}}}],["cluster_adminmodule_exports",{"_index":479,"title":{},"body":{"modules/AdminModule.html":{},"overview.html":{}}}],["cluster_adminmodule_providers",{"_index":480,"title":{},"body":{"modules/AdminModule.html":{},"overview.html":{}}}],["cluster_appmodule",{"_index":1150,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":1151,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":1152,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_authmodule",{"_index":1404,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_exports",{"_index":1405,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_providers",{"_index":1406,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_cartmodule",{"_index":1516,"title":{},"body":{"modules/CartModule.html":{},"overview.html":{}}}],["cluster_cartmodule_providers",{"_index":1517,"title":{},"body":{"modules/CartModule.html":{},"overview.html":{}}}],["cluster_categoriescoloursmodule",{"_index":1544,"title":{},"body":{"modules/CategoriesColoursModule.html":{},"overview.html":{}}}],["cluster_categoriescoloursmodule_exports",{"_index":1545,"title":{},"body":{"modules/CategoriesColoursModule.html":{},"overview.html":{}}}],["cluster_categoriescoloursmodule_providers",{"_index":1546,"title":{},"body":{"modules/CategoriesColoursModule.html":{},"overview.html":{}}}],["cluster_coremodule",{"_index":1803,"title":{},"body":{"modules/CoreModule.html":{},"overview.html":{}}}],["cluster_coremodule_providers",{"_index":1804,"title":{},"body":{"modules/CoreModule.html":{},"overview.html":{}}}],["cluster_mailmodule",{"_index":2346,"title":{},"body":{"modules/MailModule.html":{},"overview.html":{}}}],["cluster_mailmodule_exports",{"_index":2347,"title":{},"body":{"modules/MailModule.html":{},"overview.html":{}}}],["cluster_mailmodule_providers",{"_index":2348,"title":{},"body":{"modules/MailModule.html":{}}}],["cluster_ordersmodule",{"_index":2617,"title":{},"body":{"modules/OrdersModule.html":{},"overview.html":{}}}],["cluster_ordersmodule_providers",{"_index":2618,"title":{},"body":{"modules/OrdersModule.html":{},"overview.html":{}}}],["cluster_ownermodule",{"_index":2794,"title":{},"body":{"modules/OwnerModule.html":{},"overview.html":{}}}],["cluster_ownermodule_exports",{"_index":2795,"title":{},"body":{"modules/OwnerModule.html":{},"overview.html":{}}}],["cluster_ownermodule_imports",{"_index":2797,"title":{},"body":{"modules/OwnerModule.html":{},"overview.html":{}}}],["cluster_ownermodule_providers",{"_index":2796,"title":{},"body":{"modules/OwnerModule.html":{}}}],["cluster_productmodule",{"_index":3042,"title":{},"body":{"modules/ProductModule.html":{},"overview.html":{}}}],["cluster_productmodule_providers",{"_index":3043,"title":{},"body":{"modules/ProductModule.html":{},"overview.html":{}}}],["cluster_reviewsmodule",{"_index":3154,"title":{},"body":{"modules/ReviewsModule.html":{},"overview.html":{}}}],["cluster_reviewsmodule_providers",{"_index":3155,"title":{},"body":{"modules/ReviewsModule.html":{},"overview.html":{}}}],["cluster_rolesmodule",{"_index":3245,"title":{},"body":{"modules/RolesModule.html":{},"overview.html":{}}}],["cluster_rolesmodule_exports",{"_index":3246,"title":{},"body":{"modules/RolesModule.html":{},"overview.html":{}}}],["cluster_rolesmodule_providers",{"_index":3247,"title":{},"body":{"modules/RolesModule.html":{},"overview.html":{}}}],["cluster_usersmodule",{"_index":3563,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["cluster_usersmodule_exports",{"_index":3564,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["cluster_usersmodule_providers",{"_index":3565,"title":{},"body":{"modules/UsersModule.html":{}}}],["clusterize",{"_index":971,"title":{},"body":{"injectables/AppClusterService.html":{}}}],["clusterize(callback",{"_index":974,"title":{},"body":{"injectables/AppClusterService.html":{},"interfaces/Msg.html":{}}}],["cmd",{"_index":991,"title":{},"body":{"injectables/AppClusterService.html":{},"interfaces/Msg.html":{}}}],["code",{"_index":62,"title":{},"body":{"injectables/ActivateMiddleware.html":{},"injectables/AdminJwtRefreshService.html":{},"injectables/AdminService.html":{},"injectables/AppClusterService.html":{},"controllers/AuthController.html":{},"injectables/MailService.html":{},"interfaces/Msg.html":{},"injectables/OwnerJwtRefreshService.html":{},"injectables/OwnerService.html":{},"classes/ResetDto.html":{},"injectables/UsersService.html":{}}}],["code'})@apiresponse({status",{"_index":1301,"title":{},"body":{"controllers/AuthController.html":{}}}],["code'})@minlength(8)@isstring",{"_index":3118,"title":{},"body":{"classes/ResetDto.html":{}}}],["codedto",{"_index":718,"title":{"interfaces/CodeDto.html":{}},"body":{"injectables/AdminService.html":{},"controllers/AuthController.html":{},"interfaces/AuthUser.html":{},"interfaces/CodeDto.html":{},"injectables/OwnerService.html":{},"interfaces/Payload.html":{},"interfaces/ReturnedAdmin.html":{},"interfaces/ReturnedOwner.html":{},"interfaces/ReturnedUser.html":{},"interfaces/Tokens.html":{},"injectables/UsersService.html":{}}}],["color:inherit!important",{"_index":2418,"title":{},"body":{"injectables/MailService.html":{}}}],["colour",{"_index":537,"title":{"classes/Colour.html":{}},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/CartModule.html":{},"modules/CategoriesColoursModule.html":{},"classes/Colour.html":{},"controllers/ColoursController.html":{},"injectables/ColoursService.html":{},"modules/CoreModule.html":{},"modules/OwnerModule.html":{},"classes/Product.html":{},"classes/ProductColours.html":{},"modules/ProductModule.html":{},"modules/ReviewsModule.html":{},"modules/RolesModule.html":{},"modules/UsersModule.html":{}}}],["colour.createdat",{"_index":1792,"title":{},"body":{"injectables/ColoursService.html":{}}}],["colour.en",{"_index":1788,"title":{},"body":{"injectables/ColoursService.html":{}}}],["colour.hex",{"_index":1791,"title":{},"body":{"injectables/ColoursService.html":{}}}],["colour.id",{"_index":1786,"title":{},"body":{"injectables/ColoursService.html":{}}}],["colour.length",{"_index":1783,"title":{},"body":{"injectables/ColoursService.html":{}}}],["colour.rs",{"_index":1789,"title":{},"body":{"injectables/ColoursService.html":{}}}],["colour.ru",{"_index":1790,"title":{},"body":{"injectables/ColoursService.html":{}}}],["colour.ua",{"_index":1787,"title":{},"body":{"injectables/ColoursService.html":{}}}],["colour.updatedat",{"_index":1793,"title":{},"body":{"injectables/ColoursService.html":{}}}],["colourcreationatrb",{"_index":1688,"title":{"interfaces/ColourCreationAtrb.html":{}},"body":{"interfaces/CategoryCreationAtrb.html":{},"classes/Colour.html":{},"interfaces/ColourCreationAtrb.html":{},"interfaces/ProductCreationAttrs.html":{},"interfaces/ReturnedCategory.html":{},"interfaces/ReturnedColour.html":{},"interfaces/ReturnedProduct.html":{},"interfaces/ReturnedProducts.html":{},"interfaces/ReturnedReview.html":{},"interfaces/ReviewCreationAtrb.html":{}}}],["colourdto",{"_index":1736,"title":{},"body":{"controllers/ColoursController.html":{},"injectables/ColoursService.html":{}}}],["colourdto.en",{"_index":1795,"title":{},"body":{"injectables/ColoursService.html":{}}}],["colourdto.hex",{"_index":1798,"title":{},"body":{"injectables/ColoursService.html":{}}}],["colourdto.rs",{"_index":1796,"title":{},"body":{"injectables/ColoursService.html":{}}}],["colourdto.ru",{"_index":1797,"title":{},"body":{"injectables/ColoursService.html":{}}}],["colourdto.ua",{"_index":1794,"title":{},"body":{"injectables/ColoursService.html":{}}}],["colourid",{"_index":1740,"title":{},"body":{"controllers/ColoursController.html":{},"injectables/ColoursService.html":{},"classes/ProductColours.html":{}}}],["colourids",{"_index":1774,"title":{},"body":{"injectables/ColoursService.html":{}}}],["colourrepository",{"_index":1764,"title":{},"body":{"injectables/ColoursService.html":{}}}],["colours",{"_index":1691,"title":{},"body":{"interfaces/CategoryCreationAtrb.html":{},"classes/Colour.html":{},"interfaces/ColourCreationAtrb.html":{},"controllers/ColoursController.html":{},"classes/CreateProductDto.html":{},"classes/Nested.html":{},"classes/Nested-1.html":{},"classes/Product.html":{},"interfaces/ProductCreationAttrs.html":{},"classes/QueryFilterDto.html":{},"interfaces/ReturnedCategory.html":{},"interfaces/ReturnedColour.html":{},"interfaces/ReturnedProduct.html":{},"interfaces/ReturnedProducts.html":{},"interfaces/ReturnedReview.html":{},"interfaces/ReviewCreationAtrb.html":{},"classes/UpdateProductDto.html":{}}}],["colours'})@apiresponse({status",{"_index":1732,"title":{},"body":{"controllers/ColoursController.html":{}}}],["colours.model",{"_index":3036,"title":{},"body":{"classes/ProductColours.html":{}}}],["colours/create_colour",{"_index":1564,"title":{},"body":{"modules/CategoriesColoursModule.html":{}}}],["colours/delete_colour",{"_index":1565,"title":{},"body":{"modules/CategoriesColoursModule.html":{}}}],["colourscontroller",{"_index":1551,"title":{"controllers/ColoursController.html":{}},"body":{"modules/CategoriesColoursModule.html":{},"controllers/ColoursController.html":{}}}],["coloursservice",{"_index":1548,"title":{"injectables/ColoursService.html":{}},"body":{"modules/CategoriesColoursModule.html":{},"controllers/ColoursController.html":{},"injectables/ColoursService.html":{},"modules/ProductModule.html":{},"overview.html":{}}}],["colour})@httpcode(201)@roles('owner",{"_index":1733,"title":{},"body":{"controllers/ColoursController.html":{}}}],["column",{"_index":651,"title":{},"body":{"classes/AdminRefreshToken.html":{},"classes/BookmarksProducts.html":{},"classes/Cart.html":{},"classes/CartProduct.html":{},"classes/Category.html":{},"classes/Colour.html":{},"classes/Currencies.html":{},"classes/Order.html":{},"classes/OrderProduct.html":{},"classes/Owner.html":{},"classes/OwnerRefreshToken.html":{},"classes/Product.html":{},"classes/ProductCategories.html":{},"classes/ProductColours.html":{},"classes/ProductReviews.html":{},"classes/Review.html":{},"classes/Role.html":{},"classes/UserRefreshToken.html":{},"classes/UserRoles.html":{},"classes/WatchedProducts.html":{}}}],["column({type",{"_index":1465,"title":{},"body":{"classes/BookmarksProducts.html":{},"classes/Cart.html":{},"classes/CartProduct.html":{},"classes/Category.html":{},"classes/Colour.html":{},"classes/Currencies.html":{},"classes/Order.html":{},"classes/OrderProduct.html":{},"classes/Product.html":{},"classes/ProductCategories.html":{},"classes/ProductColours.html":{},"classes/ProductReviews.html":{},"classes/Review.html":{},"classes/WatchedProducts.html":{}}}],["commander",{"_index":3736,"title":{},"body":{"dependencies.html":{}}}],["commanderstart",{"_index":3760,"title":{},"body":{"miscellaneous/functions.html":{}}}],["common/decorators/match.decorator",{"_index":1712,"title":{},"body":{"classes/ChangeDto.html":{},"classes/ResetDto.html":{},"classes/SignupDto.html":{}}}],["common/decorators/roles",{"_index":213,"title":{},"body":{"controllers/AdminController.html":{},"controllers/CategoriesController.html":{},"controllers/ColoursController.html":{},"controllers/ReviewsController.html":{},"controllers/RolesController.html":{},"controllers/UsersController.html":{}}}],["common/decorators/user",{"_index":1335,"title":{},"body":{"controllers/AuthController.html":{},"controllers/UsersController.html":{}}}],["common/decorators/user.id.decorator",{"_index":1341,"title":{},"body":{"controllers/AuthController.html":{},"controllers/UsersController.html":{}}}],["common/exceptions/api.exception",{"_index":382,"title":{},"body":{"injectables/AdminJwtRefreshService.html":{},"injectables/AdminService.html":{},"injectables/CategoriesService.html":{},"injectables/ColoursService.html":{},"injectables/MailService.html":{},"injectables/OwnerJwtRefreshService.html":{},"injectables/OwnerService.html":{},"injectables/UserJwtRefreshTokenService.html":{},"injectables/UsersService.html":{}}}],["common/filters/api",{"_index":230,"title":{},"body":{"controllers/AdminController.html":{},"controllers/AuthController.html":{},"controllers/CardController.html":{},"controllers/CategoriesController.html":{},"controllers/ColoursController.html":{},"controllers/OrdersController.html":{},"controllers/ReviewsController.html":{},"controllers/RolesController.html":{},"controllers/UsersController.html":{}}}],["common/filters/error",{"_index":227,"title":{},"body":{"controllers/AdminController.html":{},"controllers/AuthController.html":{},"controllers/CardController.html":{},"controllers/CategoriesController.html":{},"controllers/ColoursController.html":{},"controllers/OrdersController.html":{},"controllers/ReviewsController.html":{},"controllers/RolesController.html":{},"controllers/UsersController.html":{}}}],["common/filters/http",{"_index":1413,"title":{},"body":{"modules/AuthModule.html":{}}}],["common/guards/add",{"_index":1595,"title":{},"body":{"controllers/CategoriesController.html":{},"controllers/ColoursController.html":{},"controllers/RolesController.html":{}}}],["common/guards/edit",{"_index":3146,"title":{},"body":{"controllers/ReviewsController.html":{}}}],["common/guards/jw",{"_index":219,"title":{},"body":{"controllers/AdminController.html":{},"controllers/AuthController.html":{},"controllers/CategoriesController.html":{},"controllers/ColoursController.html":{},"controllers/ReviewsController.html":{},"controllers/RolesController.html":{},"controllers/UsersController.html":{}}}],["common/guards/jwt",{"_index":198,"title":{},"body":{"controllers/AdminController.html":{},"controllers/AuthController.html":{},"controllers/CategoriesController.html":{},"controllers/ColoursController.html":{},"controllers/ReviewsController.html":{},"controllers/RolesController.html":{},"controllers/UsersController.html":{}}}],["common/guards/owner",{"_index":216,"title":{},"body":{"controllers/AdminController.html":{},"controllers/CategoriesController.html":{},"controllers/ColoursController.html":{},"controllers/ReviewsController.html":{},"controllers/RolesController.html":{},"controllers/UsersController.html":{}}}],["common/guards/refresh.guard",{"_index":1339,"title":{},"body":{"controllers/AuthController.html":{}}}],["common/guards/roles.guard",{"_index":215,"title":{},"body":{"controllers/AdminController.html":{},"controllers/CategoriesController.html":{},"controllers/ColoursController.html":{},"controllers/ReviewsController.html":{},"controllers/RolesController.html":{},"controllers/UsersController.html":{}}}],["common/guards/throttler",{"_index":209,"title":{},"body":{"controllers/AdminController.html":{},"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/CategoriesController.html":{},"controllers/ColoursController.html":{},"modules/CoreModule.html":{},"controllers/ReviewsController.html":{},"controllers/RolesController.html":{},"controllers/UsersController.html":{}}}],["common/guards/user.guard",{"_index":3550,"title":{},"body":{"controllers/UsersController.html":{}}}],["common/middlewares/activate.middleware",{"_index":1419,"title":{},"body":{"modules/AuthModule.html":{}}}],["common/middlewares/admin",{"_index":530,"title":{},"body":{"modules/AdminModule.html":{}}}],["common/middlewares/auth.middleware",{"_index":1414,"title":{},"body":{"modules/AuthModule.html":{}}}],["common/middlewares/initialize",{"_index":508,"title":{},"body":{"modules/AdminModule.html":{},"modules/AuthModule.html":{},"modules/CategoriesColoursModule.html":{},"modules/ProductModule.html":{},"modules/ReviewsModule.html":{},"modules/RolesModule.html":{},"modules/UsersModule.html":{}}}],["common/middlewares/product.middleware",{"_index":3053,"title":{},"body":{"modules/ProductModule.html":{}}}],["common/middlewares/user",{"_index":522,"title":{},"body":{"modules/AdminModule.html":{}}}],["common/middlewares/user.middleware",{"_index":3569,"title":{},"body":{"modules/UsersModule.html":{}}}],["common/pipes/body",{"_index":525,"title":{},"body":{"modules/AdminModule.html":{},"modules/AuthModule.html":{},"modules/ReviewsModule.html":{},"modules/UsersModule.html":{}}}],["common/pipes/validation.pipe",{"_index":205,"title":{},"body":{"controllers/AdminController.html":{},"controllers/AuthController.html":{}}}],["completed",{"_index":2237,"title":{},"body":{"classes/GarbageCollectingProcessor.html":{},"classes/Order.html":{}}}],["compression",{"_index":3715,"title":{},"body":{"dependencies.html":{}}}],["config",{"_index":3376,"title":{},"body":{"modules/TelegramModule.html":{}}}],["configmodule",{"_index":527,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CartModule.html":{},"modules/CategoriesColoursModule.html":{},"modules/CoreModule.html":{},"modules/MailModule.html":{},"modules/OrdersModule.html":{},"modules/OwnerModule.html":{},"modules/ProductModule.html":{},"modules/ReviewsModule.html":{},"modules/RolesModule.html":{},"modules/UsersModule.html":{}}}],["configmodule.forroot",{"_index":558,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CartModule.html":{},"modules/CategoriesColoursModule.html":{},"modules/CoreModule.html":{},"modules/MailModule.html":{},"modules/OrdersModule.html":{},"modules/OwnerModule.html":{},"modules/ProductModule.html":{},"modules/ReviewsModule.html":{},"modules/RolesModule.html":{},"modules/UsersModule.html":{}}}],["configure",{"_index":490,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CategoriesColoursModule.html":{},"modules/ProductModule.html":{},"modules/ReviewsModule.html":{},"modules/RolesModule.html":{},"modules/UsersModule.html":{}}}],["configure(consumer",{"_index":491,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CategoriesColoursModule.html":{},"modules/ProductModule.html":{},"modules/ReviewsModule.html":{},"modules/RolesModule.html":{},"modules/UsersModule.html":{}}}],["confirm",{"_index":1700,"title":{},"body":{"classes/ChangeDto.html":{},"classes/ResetDto.html":{},"classes/SignupDto.html":{}}}],["confirmcode",{"_index":471,"title":{},"body":{"injectables/AdminJwtRefreshService.html":{},"classes/Owner.html":{},"injectables/OwnerJwtRefreshService.html":{}}}],["confirmcode'})@isint()@column({type",{"_index":2656,"title":{},"body":{"classes/Owner.html":{}}}],["confirmpassword",{"_index":1697,"title":{},"body":{"classes/ChangeDto.html":{},"interfaces/InitializeUser.html":{},"classes/ResetDto.html":{},"interfaces/RolecreationAttrbs.html":{},"classes/SignupDto.html":{},"interfaces/UserInterface.html":{},"interfaces/UserRefreshCreationAttrbs.html":{},"interfaces/UsercreationAttrbs.html":{},"interfaces/ValidateUser.html":{}}}],["confirncode",{"_index":2698,"title":{},"body":{"classes/Owner.html":{}}}],["connect",{"_index":1880,"title":{},"body":{"injectables/CorsMiddleware.html":{},"interfaces/RequestHeaders.html":{}}}],["connection",{"_index":1841,"title":{},"body":{"injectables/CorsMiddleware.html":{},"interfaces/RequestHeaders.html":{}}}],["console.info(app",{"_index":1006,"title":{},"body":{"injectables/AppClusterService.html":{},"interfaces/Msg.html":{}}}],["console.log('error",{"_index":3112,"title":{},"body":{"classes/RequestValidator.html":{}}}],["console.log(`deserializedvalue",{"_index":2944,"title":{},"body":{"classes/ParseFormDataJsonPipe.html":{}}}],["console.log(currencies",{"_index":2129,"title":{},"body":{"injectables/CurrencyService.html":{}}}],["console.log(data",{"_index":2133,"title":{},"body":{"injectables/CurrencyService.html":{}}}],["console.log(err",{"_index":2342,"title":{},"body":{"injectables/LocationMiddleware.html":{},"injectables/OwnerJwtRefreshService.html":{}}}],["const",{"_index":58,"title":{},"body":{"injectables/ActivateMiddleware.html":{},"guards/AddContentGuard.html":{},"guards/AdminGuard.html":{},"injectables/AdminJwtRefreshService.html":{},"injectables/AdminService.html":{},"injectables/AdminUserMiddleware.html":{},"classes/AllExceptionsFilter.html":{},"classes/ApiErrorExceptionFilter.html":{},"classes/ApiExceptionFilter.html":{},"injectables/AppClusterService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"guards/AuthFerfershGuard.html":{},"injectables/AuthMiddleware.html":{},"injectables/CategoriesService.html":{},"injectables/ColoursService.html":{},"injectables/CorsMiddleware.html":{},"injectables/CurrencyService.html":{},"guards/EditContentGuard.html":{},"guards/EditWebsiteGuard.html":{},"injectables/FilesService.html":{},"classes/HttpExceptionFilter.html":{},"injectables/InitializeEmailMiddleware.html":{},"injectables/InitializeUserMiddleware.html":{},"guards/JwtAuthGuard.html":{},"injectables/LocationMiddleware.html":{},"injectables/MailService.html":{},"classes/MatchConstraint.html":{},"interfaces/Msg.html":{},"guards/OwnerAdminGuard.html":{},"injectables/OwnerJwtRefreshService.html":{},"injectables/OwnerService.html":{},"classes/ParseFormDataJsonPipe.html":{},"injectables/ParseJsonPipe.html":{},"injectables/ProductMiddleware.html":{},"guards/RefreshAuthGuard.html":{},"interfaces/RequestHeaders.html":{},"classes/RequestValidator.html":{},"injectables/ReviewsService.html":{},"guards/RolesGuard.html":{},"injectables/RolesService.html":{},"injectables/TasksService.html":{},"modules/TelegramModule.html":{},"injectables/UserAdminMiddleware.html":{},"guards/UserGuard.html":{},"injectables/UserJwtRefreshTokenService.html":{},"injectables/UserMiddleware.html":{},"injectables/UserMiddleware-1.html":{},"injectables/UsersService.html":{},"injectables/ValidateDto.html":{},"interfaces/fileCreated.html":{}}}],["constants/admin.constants",{"_index":734,"title":{},"body":{"injectables/AdminService.html":{},"classes/CreateAdminDto.html":{},"classes/CreateAdminRefreshTokenDto.html":{}}}],["constants/jwt",{"_index":374,"title":{},"body":{"injectables/AdminJwtRefreshService.html":{},"injectables/OwnerJwtRefreshService.html":{},"injectables/UserJwtRefreshTokenService.html":{}}}],["constants/owner.constants",{"_index":2008,"title":{},"body":{"classes/CreateOwnerDto.html":{},"classes/CreateOwnerRefreshTokenDto.html":{},"injectables/OwnerJwtRefreshService.html":{},"injectables/OwnerService.html":{}}}],["constants/user.constants",{"_index":2074,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/CreateUserRefreshTokenDto.html":{},"classes/UpdateUserDto.html":{},"injectables/UsersService.html":{}}}],["constraints",{"_index":2555,"title":{},"body":{"classes/MatchConstraint.html":{}}}],["constructor",{"_index":11,"title":{},"body":{"injectables/ActivateMiddleware.html":{},"guards/AddContentGuard.html":{},"guards/AdminGuard.html":{},"injectables/AdminJwtRefreshService.html":{},"injectables/AdminService.html":{},"injectables/AdminUserMiddleware.html":{},"classes/AllExceptionsFilter.html":{},"classes/ApiError.html":{},"classes/ApiException.html":{},"guards/AuthFerfershGuard.html":{},"classes/BadRequestError.html":{},"injectables/CategoriesService.html":{},"injectables/ColoursService.html":{},"injectables/CurrencyService.html":{},"guards/EditContentGuard.html":{},"guards/EditWebsiteGuard.html":{},"injectables/InitializeEmailMiddleware.html":{},"injectables/InitializeUserMiddleware.html":{},"guards/JwtAuthGuard.html":{},"injectables/LocationMiddleware.html":{},"injectables/MailService.html":{},"classes/NotFoundError.html":{},"guards/OwnerAdminGuard.html":{},"injectables/OwnerJwtRefreshService.html":{},"injectables/OwnerService.html":{},"classes/ParseFormDataJsonPipe.html":{},"guards/RefreshAuthGuard.html":{},"injectables/ReviewsService.html":{},"guards/RolesGuard.html":{},"injectables/RolesService.html":{},"injectables/TasksService.html":{},"injectables/TelegramService.html":{},"injectables/UserAdminMiddleware.html":{},"guards/UserGuard.html":{},"injectables/UserJwtRefreshTokenService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"classes/ValidationException.html":{}}}],["constructor(@inject(telegram_module_options",{"_index":3388,"title":{},"body":{"injectables/TelegramService.html":{}}}],["constructor(@injectmodel(role",{"_index":3261,"title":{},"body":{"injectables/RolesService.html":{}}}],["constructor(adminjwtrefreshtokenservice",{"_index":266,"title":{},"body":{"guards/AdminGuard.html":{}}}],["constructor(adminrepository",{"_index":12,"title":{},"body":{"injectables/ActivateMiddleware.html":{},"injectables/AdminService.html":{}}}],["constructor(adminservice",{"_index":85,"title":{},"body":{"guards/AddContentGuard.html":{},"injectables/AdminUserMiddleware.html":{},"guards/EditContentGuard.html":{},"guards/EditWebsiteGuard.html":{}}}],["constructor(authservice",{"_index":2295,"title":{},"body":{"guards/JwtAuthGuard.html":{},"guards/RefreshAuthGuard.html":{},"guards/RolesGuard.html":{}}}],["constructor(categoryrepository",{"_index":1617,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["constructor(colourrepository",{"_index":1762,"title":{},"body":{"injectables/ColoursService.html":{}}}],["constructor(currenciesrepository",{"_index":2106,"title":{},"body":{"injectables/CurrencyService.html":{}}}],["constructor(currencyservice",{"_index":2318,"title":{},"body":{"injectables/LocationMiddleware.html":{}}}],["constructor(httpadapterhost",{"_index":852,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["constructor(jwtservice",{"_index":331,"title":{},"body":{"injectables/AdminJwtRefreshService.html":{},"injectables/OwnerJwtRefreshService.html":{},"injectables/UserJwtRefreshTokenService.html":{}}}],["constructor(mailerservice",{"_index":2373,"title":{},"body":{"injectables/MailService.html":{}}}],["constructor(message",{"_index":892,"title":{},"body":{"classes/ApiError.html":{},"classes/BadRequestError.html":{},"classes/NotFoundError.html":{}}}],["constructor(options",{"_index":2924,"title":{},"body":{"classes/ParseFormDataJsonPipe.html":{},"injectables/TelegramService.html":{}}}],["constructor(ownerjwtrefreshtokenservice",{"_index":2281,"title":{},"body":{"injectables/InitializeUserMiddleware.html":{},"guards/OwnerAdminGuard.html":{}}}],["constructor(ownerservice",{"_index":1381,"title":{},"body":{"guards/AuthFerfershGuard.html":{},"injectables/InitializeEmailMiddleware.html":{}}}],["constructor(path",{"_index":888,"title":{},"body":{"classes/ApiError.html":{},"classes/BadRequestError.html":{},"classes/NotFoundError.html":{}}}],["constructor(private",{"_index":102,"title":{},"body":{"guards/AddContentGuard.html":{},"controllers/AdminController.html":{},"injectables/AdminUserMiddleware.html":{},"classes/AllExceptionsFilter.html":{},"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/CategoriesController.html":{},"controllers/ColoursController.html":{},"guards/EditContentGuard.html":{},"guards/EditWebsiteGuard.html":{},"guards/JwtAuthGuard.html":{},"injectables/LocationMiddleware.html":{},"classes/ParseFormDataJsonPipe.html":{},"guards/RefreshAuthGuard.html":{},"controllers/ReviewsController.html":{},"controllers/RolesController.html":{},"guards/RolesGuard.html":{},"injectables/UserAdminMiddleware.html":{}}}],["constructor(response",{"_index":3680,"title":{},"body":{"classes/ValidationException.html":{}}}],["constructor(reviewrepository",{"_index":3167,"title":{},"body":{"injectables/ReviewsService.html":{}}}],["constructor(rolerepository",{"_index":3255,"title":{},"body":{"injectables/RolesService.html":{}}}],["constructor(schedulerregistry",{"_index":2838,"title":{},"body":{"injectables/OwnerService.html":{},"injectables/TasksService.html":{}}}],["constructor(status",{"_index":918,"title":{},"body":{"classes/ApiException.html":{}}}],["constructor(statuscode",{"_index":878,"title":{},"body":{"classes/ApiError.html":{},"classes/BadRequestError.html":{},"classes/NotFoundError.html":{}}}],["constructor(userjwtrefreshtokenservice",{"_index":3439,"title":{},"body":{"guards/UserGuard.html":{}}}],["constructor(userrepository",{"_index":3584,"title":{},"body":{"injectables/UsersService.html":{}}}],["constructor(userservice",{"_index":3432,"title":{},"body":{"injectables/UserAdminMiddleware.html":{}}}],["consumer",{"_index":494,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CategoriesColoursModule.html":{},"modules/ProductModule.html":{},"modules/ReviewsModule.html":{},"modules/RolesModule.html":{},"modules/UsersModule.html":{}}}],["consumer.apply(corsmiddleware",{"_index":1276,"title":{},"body":{"modules/AppModule.html":{}}}],["consumer.apply(initializeusermiddleware).forroutes",{"_index":3164,"title":{},"body":{"modules/ReviewsModule.html":{}}}],["consumer.apply(productmiddleware).forroutes",{"_index":3059,"title":{},"body":{"modules/ProductModule.html":{}}}],["consumer.apply(requestvalidator.validate(createreviewdto)).forroutes",{"_index":3162,"title":{},"body":{"modules/ReviewsModule.html":{}}}],["contains",{"_index":2954,"title":{},"body":{"injectables/ParseJsonPipe.html":{}}}],["content",{"_index":69,"title":{},"body":{"injectables/ActivateMiddleware.html":{},"injectables/CorsMiddleware.html":{},"classes/CreateAdminDto.html":{},"injectables/InitializeEmailMiddleware.html":{},"injectables/MailService.html":{},"injectables/ProductMiddleware.html":{},"interfaces/RequestHeaders.html":{},"injectables/UserMiddleware.html":{},"injectables/UserMiddleware-1.html":{}}}],["content'})@isboolean",{"_index":1931,"title":{},"body":{"classes/CreateAdminDto.html":{}}}],["content.guard",{"_index":1596,"title":{},"body":{"controllers/CategoriesController.html":{},"controllers/ColoursController.html":{},"controllers/ReviewsController.html":{},"controllers/RolesController.html":{}}}],["content.guard.ts",{"_index":83,"title":{},"body":{"guards/AddContentGuard.html":{},"guards/EditContentGuard.html":{}}}],["content.guard.ts:19",{"_index":87,"title":{},"body":{"guards/AddContentGuard.html":{},"guards/EditContentGuard.html":{}}}],["content.guard.ts:22",{"_index":90,"title":{},"body":{"guards/AddContentGuard.html":{},"guards/EditContentGuard.html":{}}}],["context",{"_index":91,"title":{},"body":{"guards/AddContentGuard.html":{},"guards/AdminGuard.html":{},"guards/AuthFerfershGuard.html":{},"guards/EditContentGuard.html":{},"guards/EditWebsiteGuard.html":{},"injectables/GlobalInterceptor.html":{},"guards/JwtAuthGuard.html":{},"guards/OwnerAdminGuard.html":{},"guards/RefreshAuthGuard.html":{},"guards/RolesGuard.html":{},"guards/UserGuard.html":{}}}],["context.getclass",{"_index":286,"title":{},"body":{"guards/AdminGuard.html":{},"guards/OwnerAdminGuard.html":{},"guards/RolesGuard.html":{},"guards/UserGuard.html":{}}}],["context.gethandler",{"_index":285,"title":{},"body":{"guards/AdminGuard.html":{},"guards/OwnerAdminGuard.html":{},"guards/RolesGuard.html":{},"guards/UserGuard.html":{}}}],["context.switchtohttp().getrequest",{"_index":105,"title":{},"body":{"guards/AddContentGuard.html":{},"guards/AdminGuard.html":{},"guards/AuthFerfershGuard.html":{},"guards/EditContentGuard.html":{},"guards/EditWebsiteGuard.html":{},"guards/JwtAuthGuard.html":{},"guards/OwnerAdminGuard.html":{},"guards/RefreshAuthGuard.html":{},"guards/RolesGuard.html":{},"guards/UserGuard.html":{}}}],["control",{"_index":1396,"title":{},"body":{"injectables/AuthMiddleware.html":{},"injectables/CorsMiddleware.html":{},"injectables/ProductMiddleware.html":{},"interfaces/RequestHeaders.html":{},"injectables/UserMiddleware.html":{},"injectables/UserMiddleware-1.html":{}}}],["controller",{"_index":143,"title":{"controllers/AdminController.html":{},"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/CardController.html":{},"controllers/CategoriesController.html":{},"controllers/ColoursController.html":{},"controllers/OrdersController.html":{},"controllers/ReviewsController.html":{},"controllers/RolesController.html":{},"controllers/UsersController.html":{}},"body":{"controllers/AdminController.html":{},"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/CardController.html":{},"controllers/CategoriesController.html":{},"controllers/ColoursController.html":{},"controllers/OrdersController.html":{},"controllers/ReviewsController.html":{},"controllers/RolesController.html":{},"controllers/UsersController.html":{}}}],["controller('/roles",{"_index":3233,"title":{},"body":{"controllers/RolesController.html":{}}}],["controller('admin",{"_index":238,"title":{},"body":{"controllers/AdminController.html":{}}}],["controller('auth",{"_index":1343,"title":{},"body":{"controllers/AuthController.html":{}}}],["controller('card",{"_index":1475,"title":{},"body":{"controllers/CardController.html":{}}}],["controller('categories",{"_index":1601,"title":{},"body":{"controllers/CategoriesController.html":{}}}],["controller('colours",{"_index":1747,"title":{},"body":{"controllers/ColoursController.html":{}}}],["controller('orders",{"_index":2616,"title":{},"body":{"controllers/OrdersController.html":{}}}],["controller('reviews",{"_index":3147,"title":{},"body":{"controllers/ReviewsController.html":{}}}],["controller('user",{"_index":3552,"title":{},"body":{"controllers/UsersController.html":{}}}],["controllers",{"_index":145,"title":{},"body":{"controllers/AdminController.html":{},"modules/AdminModule.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"controllers/CardController.html":{},"modules/CartModule.html":{},"modules/CategoriesColoursModule.html":{},"controllers/CategoriesController.html":{},"controllers/ColoursController.html":{},"controllers/OrdersController.html":{},"modules/OrdersModule.html":{},"modules/ProductModule.html":{},"controllers/ReviewsController.html":{},"modules/ReviewsModule.html":{},"controllers/RolesController.html":{},"modules/RolesModule.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["controllers/categories.controller",{"_index":1554,"title":{},"body":{"modules/CategoriesColoursModule.html":{}}}],["controllers/colours.controller",{"_index":1558,"title":{},"body":{"modules/CategoriesColoursModule.html":{}}}],["contructor",{"_index":2308,"title":{},"body":{"classes/JwtRefreshTokenDeletedEvent.html":{}}}],["contructor(name",{"_index":2312,"title":{},"body":{"classes/JwtRefreshTokenDeletedEvent.html":{}}}],["convertedobject",{"_index":3101,"title":{},"body":{"classes/RequestValidator.html":{}}}],["cookie",{"_index":3717,"title":{},"body":{"dependencies.html":{}}}],["core/core.module",{"_index":532,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/OwnerModule.html":{},"modules/RolesModule.html":{},"modules/UsersModule.html":{}}}],["core/filters/all",{"_index":1171,"title":{},"body":{"modules/AppModule.html":{}}}],["core/interceptors/global.interceptor",{"_index":1174,"title":{},"body":{"modules/AppModule.html":{}}}],["core/interfaces/admin.interfaces",{"_index":207,"title":{},"body":{"controllers/AdminController.html":{},"classes/AdminRefreshToken.html":{},"injectables/AdminService.html":{}}}],["core/interfaces/auth.interfaces",{"_index":101,"title":{},"body":{"guards/AddContentGuard.html":{},"guards/AdminGuard.html":{},"injectables/AdminService.html":{},"controllers/AuthController.html":{},"guards/AuthFerfershGuard.html":{},"guards/EditContentGuard.html":{},"guards/EditWebsiteGuard.html":{},"guards/JwtAuthGuard.html":{},"guards/OwnerAdminGuard.html":{},"injectables/OwnerService.html":{},"guards/RolesGuard.html":{},"guards/UserGuard.html":{},"injectables/UsersService.html":{}}}],["core/interfaces/owner.interfaces",{"_index":2715,"title":{},"body":{"classes/Owner.html":{},"classes/OwnerRefreshToken.html":{}}}],["core/interfaces/product.interfaces",{"_index":1599,"title":{},"body":{"controllers/CategoriesController.html":{},"injectables/CategoriesService.html":{},"classes/Category.html":{},"classes/Colour.html":{},"controllers/ColoursController.html":{},"injectables/ColoursService.html":{},"classes/Product.html":{},"classes/Review.html":{}}}],["core/interfaces/user.interfaces",{"_index":3210,"title":{},"body":{"classes/Role.html":{},"classes/UserRefreshToken.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["core/middlewares/cors.middleware",{"_index":1168,"title":{},"body":{"modules/AppModule.html":{}}}],["core/middlewares/location.middleware",{"_index":1198,"title":{},"body":{"modules/AppModule.html":{}}}],["core/services/cluster.service",{"_index":1164,"title":{},"body":{"modules/AppModule.html":{}}}],["core/services/events.service",{"_index":1420,"title":{},"body":{"modules/AuthModule.html":{}}}],["core/services/file.service",{"_index":3052,"title":{},"body":{"modules/ProductModule.html":{}}}],["core/services/scedule.service",{"_index":381,"title":{},"body":{"injectables/AdminJwtRefreshService.html":{},"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"injectables/OwnerJwtRefreshService.html":{},"modules/OwnerModule.html":{},"modules/RolesModule.html":{},"injectables/UserJwtRefreshTokenService.html":{},"modules/UsersModule.html":{}}}],["coremodule",{"_index":531,"title":{"modules/CoreModule.html":{}},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CoreModule.html":{},"modules/OwnerModule.html":{},"modules/RolesModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["cors",{"_index":3719,"title":{},"body":{"dependencies.html":{}}}],["corsmiddleware",{"_index":1167,"title":{"injectables/CorsMiddleware.html":{}},"body":{"modules/AppModule.html":{},"injectables/CorsMiddleware.html":{},"interfaces/RequestHeaders.html":{}}}],["country",{"_index":1448,"title":{},"body":{"interfaces/AuthUser.html":{},"interfaces/CodeDto.html":{},"injectables/CurrencyService.html":{},"injectables/LocationMiddleware.html":{},"interfaces/Payload.html":{},"interfaces/ReturnedAdmin.html":{},"interfaces/ReturnedOwner.html":{},"interfaces/ReturnedUser.html":{},"interfaces/Tokens.html":{},"classes/UpdateUserDto.html":{},"dependencies.html":{}}}],["country'})@isstring()@minlength(2)@maxlength(50",{"_index":3424,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["country.mmdb",{"_index":1097,"title":{},"body":{"controllers/AppController.html":{},"injectables/LocationMiddleware.html":{}}}],["countryisocode",{"_index":2111,"title":{},"body":{"injectables/CurrencyService.html":{}}}],["countrytocurrency",{"_index":2121,"title":{},"body":{"injectables/CurrencyService.html":{},"injectables/LocationMiddleware.html":{}}}],["countrytocurrency[countryisocode",{"_index":2152,"title":{},"body":{"injectables/CurrencyService.html":{}}}],["countrytocurrency[data.country.isocode",{"_index":2340,"title":{},"body":{"injectables/LocationMiddleware.html":{}}}],["coverage",{"_index":3799,"title":{},"body":{"index.html":{}}}],["cpus",{"_index":985,"title":{},"body":{"injectables/AppClusterService.html":{},"interfaces/Msg.html":{}}}],["cpus().length",{"_index":989,"title":{},"body":{"injectables/AppClusterService.html":{},"interfaces/Msg.html":{}}}],["create",{"_index":2526,"title":{},"body":{"injectables/MailService.html":{},"injectables/OwnerService.html":{}}}],["create(dto",{"_index":2845,"title":{},"body":{"injectables/OwnerService.html":{}}}],["create.review.dto",{"_index":3143,"title":{},"body":{"controllers/ReviewsController.html":{},"modules/ReviewsModule.html":{},"injectables/ReviewsService.html":{}}}],["createaccesstokendto",{"_index":1902,"title":{"classes/CreateAccessTokenDto.html":{}},"body":{"classes/CreateAccessTokenDto.html":{}}}],["createadmin",{"_index":148,"title":{},"body":{"controllers/AdminController.html":{},"injectables/AdminService.html":{}}}],["createadmin(admindto",{"_index":152,"title":{},"body":{"controllers/AdminController.html":{}}}],["createadmin(dto",{"_index":697,"title":{},"body":{"injectables/AdminService.html":{}}}],["createadmindto",{"_index":153,"title":{"classes/CreateAdminDto.html":{}},"body":{"controllers/AdminController.html":{},"modules/AdminModule.html":{},"injectables/AdminService.html":{},"classes/CreateAdminDto.html":{}}}],["createadminrefreshtokendto",{"_index":349,"title":{"classes/CreateAdminRefreshTokenDto.html":{}},"body":{"injectables/AdminJwtRefreshService.html":{},"classes/CreateAdminRefreshTokenDto.html":{}}}],["createasyncoptionsprovider",{"_index":3359,"title":{},"body":{"modules/TelegramModule.html":{}}}],["createasyncoptionsprovider(options",{"_index":3360,"title":{},"body":{"modules/TelegramModule.html":{}}}],["createcategory",{"_index":1568,"title":{},"body":{"controllers/CategoriesController.html":{},"injectables/CategoriesService.html":{}}}],["createcategory(categorydto",{"_index":1572,"title":{},"body":{"controllers/CategoriesController.html":{},"injectables/CategoriesService.html":{}}}],["createcategorydto",{"_index":1573,"title":{"classes/CreateCategoryDto.html":{}},"body":{"controllers/CategoriesController.html":{},"injectables/CategoriesService.html":{},"classes/CreateCategoryDto.html":{}}}],["createcipheriv",{"_index":385,"title":{},"body":{"injectables/AdminJwtRefreshService.html":{},"controllers/AppController.html":{},"injectables/OwnerJwtRefreshService.html":{}}}],["createcipheriv('aes",{"_index":465,"title":{},"body":{"injectables/AdminJwtRefreshService.html":{},"controllers/AppController.html":{},"injectables/OwnerJwtRefreshService.html":{}}}],["createcolour",{"_index":1726,"title":{},"body":{"controllers/ColoursController.html":{},"injectables/ColoursService.html":{}}}],["createcolour(@body",{"_index":1751,"title":{},"body":{"controllers/ColoursController.html":{}}}],["createcolour(colourdto",{"_index":1730,"title":{},"body":{"controllers/ColoursController.html":{},"injectables/ColoursService.html":{}}}],["createcolourdto",{"_index":1731,"title":{"classes/CreateColourDto.html":{}},"body":{"controllers/ColoursController.html":{},"injectables/ColoursService.html":{},"classes/CreateColourDto.html":{}}}],["createdat",{"_index":1471,"title":{},"body":{"classes/BookmarksProducts.html":{},"injectables/CategoriesService.html":{},"interfaces/CategoryCreationAtrb.html":{},"interfaces/ColourCreationAtrb.html":{},"injectables/ColoursService.html":{},"classes/ProductCategories.html":{},"classes/ProductColours.html":{},"interfaces/ProductCreationAttrs.html":{},"classes/ProductReviews.html":{},"interfaces/ReturnedCategory.html":{},"interfaces/ReturnedColour.html":{},"interfaces/ReturnedProduct.html":{},"interfaces/ReturnedProducts.html":{},"interfaces/ReturnedReview.html":{},"interfaces/ReviewCreationAtrb.html":{},"classes/UserRoles.html":{},"classes/WatchedProducts.html":{}}}],["createdreviewdto",{"_index":3172,"title":{},"body":{"injectables/ReviewsService.html":{}}}],["createfile",{"_index":2168,"title":{},"body":{"injectables/FilesService.html":{}}}],["createfile(file",{"_index":2173,"title":{},"body":{"injectables/FilesService.html":{},"interfaces/fileCreated.html":{}}}],["createfilename",{"_index":2169,"title":{},"body":{"injectables/FilesService.html":{}}}],["createfilename(req",{"_index":2175,"title":{},"body":{"injectables/FilesService.html":{},"interfaces/fileCreated.html":{}}}],["createowner",{"_index":2830,"title":{},"body":{"injectables/OwnerService.html":{}}}],["createowner(dto",{"_index":2847,"title":{},"body":{"injectables/OwnerService.html":{}}}],["createownerdto",{"_index":1994,"title":{"classes/CreateOwnerDto.html":{}},"body":{"classes/CreateOwnerDto.html":{},"injectables/OwnerService.html":{},"injectables/TasksService.html":{}}}],["createownerrefreshtokendto",{"_index":2010,"title":{"classes/CreateOwnerRefreshTokenDto.html":{}},"body":{"classes/CreateOwnerRefreshTokenDto.html":{},"injectables/OwnerJwtRefreshService.html":{}}}],["createproductdto",{"_index":2018,"title":{"classes/CreateProductDto.html":{}},"body":{"classes/CreateProductDto.html":{},"classes/Nested.html":{}}}],["createreview",{"_index":3134,"title":{},"body":{"controllers/ReviewsController.html":{},"injectables/ReviewsService.html":{}}}],["createreview(createdreviewdto",{"_index":3170,"title":{},"body":{"injectables/ReviewsService.html":{}}}],["createreview(createreviewdto",{"_index":3136,"title":{},"body":{"controllers/ReviewsController.html":{}}}],["createreviewdto",{"_index":2045,"title":{"classes/CreateReviewDto.html":{}},"body":{"classes/CreateReviewDto.html":{},"controllers/ReviewsController.html":{},"modules/ReviewsModule.html":{},"injectables/ReviewsService.html":{}}}],["createrole",{"_index":3217,"title":{},"body":{"controllers/RolesController.html":{},"injectables/RolesService.html":{}}}],["createrole(@body",{"_index":3235,"title":{},"body":{"controllers/RolesController.html":{}}}],["createrole(dto",{"_index":3258,"title":{},"body":{"injectables/RolesService.html":{}}}],["createrole(roledto",{"_index":3219,"title":{},"body":{"controllers/RolesController.html":{}}}],["createroledto",{"_index":2052,"title":{"classes/CreateRoleDto.html":{}},"body":{"classes/CreateRoleDto.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{}}}],["createuser",{"_index":3579,"title":{},"body":{"injectables/UsersService.html":{}}}],["createuser(dto",{"_index":3592,"title":{},"body":{"injectables/UsersService.html":{}}}],["createuserdto",{"_index":2059,"title":{"classes/CreateUserDto.html":{}},"body":{"classes/CreateUserDto.html":{},"injectables/UsersService.html":{}}}],["createuserrefreshtokendto",{"_index":2075,"title":{"classes/CreateUserRefreshTokenDto.html":{}},"body":{"classes/CreateUserRefreshTokenDto.html":{},"injectables/UserJwtRefreshTokenService.html":{}}}],["creating",{"_index":155,"title":{},"body":{"controllers/AdminController.html":{},"controllers/CategoriesController.html":{},"controllers/ColoursController.html":{},"controllers/RolesController.html":{}}}],["creatingowner",{"_index":2831,"title":{},"body":{"injectables/OwnerService.html":{}}}],["creatingowner(owner",{"_index":2849,"title":{},"body":{"injectables/OwnerService.html":{}}}],["credentials",{"_index":1853,"title":{},"body":{"injectables/CorsMiddleware.html":{},"interfaces/RequestHeaders.html":{}}}],["cron",{"_index":2122,"title":{},"body":{"injectables/CurrencyService.html":{},"injectables/OwnerService.html":{},"injectables/TasksService.html":{}}}],["cron(cronexpression.every_30_seconds",{"_index":2864,"title":{},"body":{"injectables/OwnerService.html":{},"injectables/TasksService.html":{}}}],["cron(cronexpression.every_hour",{"_index":3309,"title":{},"body":{"injectables/TasksService.html":{}}}],["cron(cronexpression.every_week",{"_index":2113,"title":{},"body":{"injectables/CurrencyService.html":{},"injectables/TasksService.html":{}}}],["cronexpression",{"_index":2123,"title":{},"body":{"injectables/CurrencyService.html":{},"injectables/OwnerService.html":{},"injectables/TasksService.html":{}}}],["cronjob",{"_index":3291,"title":{},"body":{"injectables/TasksService.html":{}}}],["cronjob(time",{"_index":3317,"title":{},"body":{"injectables/TasksService.html":{}}}],["cross",{"_index":1882,"title":{},"body":{"injectables/CorsMiddleware.html":{},"interfaces/RequestHeaders.html":{},"dependencies.html":{}}}],["crypto",{"_index":386,"title":{},"body":{"injectables/AdminJwtRefreshService.html":{},"controllers/AppController.html":{},"injectables/OwnerJwtRefreshService.html":{}}}],["csp",{"_index":1892,"title":{},"body":{"injectables/CorsMiddleware.html":{},"interfaces/RequestHeaders.html":{}}}],["ctr",{"_index":467,"title":{},"body":{"injectables/AdminJwtRefreshService.html":{},"controllers/AppController.html":{},"injectables/OwnerJwtRefreshService.html":{}}}],["ctx",{"_index":863,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"classes/ApiErrorExceptionFilter.html":{},"classes/ApiExceptionFilter.html":{},"classes/HttpExceptionFilter.html":{}}}],["ctx.getrequest",{"_index":902,"title":{},"body":{"classes/ApiErrorExceptionFilter.html":{},"classes/ApiExceptionFilter.html":{},"classes/HttpExceptionFilter.html":{}}}],["ctx.getresponse",{"_index":901,"title":{},"body":{"classes/ApiErrorExceptionFilter.html":{},"classes/ApiExceptionFilter.html":{},"classes/HttpExceptionFilter.html":{}}}],["currencies",{"_index":552,"title":{"classes/Currencies.html":{}},"body":{"modules/AdminModule.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CoreModule.html":{},"classes/Currencies.html":{},"injectables/CurrencyService.html":{},"modules/MailModule.html":{},"classes/Owner.html":{},"modules/OwnerModule.html":{},"injectables/OwnerService.html":{},"modules/ProductModule.html":{},"modules/RolesModule.html":{},"injectables/TasksService.html":{},"modules/UsersModule.html":{}}}],["currencies')@httpcode(200",{"_index":1049,"title":{},"body":{"controllers/AppController.html":{}}}],["currencies.create",{"_index":2134,"title":{},"body":{"injectables/CurrencyService.html":{}}}],["currencies.findall",{"_index":2127,"title":{},"body":{"injectables/CurrencyService.html":{}}}],["currencies.length",{"_index":2128,"title":{},"body":{"injectables/CurrencyService.html":{}}}],["currencies.model",{"_index":2717,"title":{},"body":{"classes/Owner.html":{}}}],["currencies[0",{"_index":2147,"title":{},"body":{"injectables/CurrencyService.html":{}}}],["currenciesrepository",{"_index":2108,"title":{},"body":{"injectables/CurrencyService.html":{},"injectables/OwnerService.html":{}}}],["currency",{"_index":1101,"title":{},"body":{"controllers/AppController.html":{},"injectables/CurrencyService.html":{},"injectables/LocationMiddleware.html":{},"dependencies.html":{}}}],["currency.base",{"_index":2148,"title":{},"body":{"injectables/CurrencyService.html":{}}}],["currency.date",{"_index":2149,"title":{},"body":{"injectables/CurrencyService.html":{}}}],["currency.rates",{"_index":2150,"title":{},"body":{"injectables/CurrencyService.html":{}}}],["currency.save",{"_index":2141,"title":{},"body":{"injectables/CurrencyService.html":{}}}],["currency.service",{"_index":2874,"title":{},"body":{"injectables/OwnerService.html":{}}}],["currency.setauthor(owner",{"_index":2140,"title":{},"body":{"injectables/CurrencyService.html":{}}}],["currency.setownerid(ownerid",{"_index":2138,"title":{},"body":{"injectables/CurrencyService.html":{}}}],["currencycode",{"_index":2339,"title":{},"body":{"injectables/LocationMiddleware.html":{}}}],["currencyservice",{"_index":481,"title":{"injectables/CurrencyService.html":{}},"body":{"modules/AdminModule.html":{},"modules/AuthModule.html":{},"modules/CoreModule.html":{},"injectables/CurrencyService.html":{},"injectables/LocationMiddleware.html":{},"modules/OwnerModule.html":{},"injectables/OwnerService.html":{},"modules/RolesModule.html":{},"injectables/TasksService.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["currrencycode",{"_index":2151,"title":{},"body":{"injectables/CurrencyService.html":{}}}],["currrencycode.tolowercase",{"_index":2155,"title":{},"body":{"injectables/CurrencyService.html":{}}}],["cusler",{"_index":2070,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/Owner.html":{},"classes/SignupDto.html":{},"classes/UpdateUserDto.html":{}}}],["data",{"_index":1114,"title":{},"body":{"controllers/AppController.html":{},"injectables/CorsMiddleware.html":{},"injectables/CurrencyService.html":{},"injectables/LocationMiddleware.html":{},"injectables/MailService.html":{},"interfaces/RequestHeaders.html":{}}}],["data.base",{"_index":2135,"title":{},"body":{"injectables/CurrencyService.html":{}}}],["data.country.isocode",{"_index":2325,"title":{},"body":{"injectables/LocationMiddleware.html":{}}}],["data.date",{"_index":2136,"title":{},"body":{"injectables/CurrencyService.html":{}}}],["data.traits.ipaddress",{"_index":2327,"title":{},"body":{"injectables/LocationMiddleware.html":{}}}],["data.traits.network",{"_index":2329,"title":{},"body":{"injectables/LocationMiddleware.html":{}}}],["data.traits.usertype",{"_index":2331,"title":{},"body":{"injectables/LocationMiddleware.html":{}}}],["data[process.env.base_currency.tolowercase().trim",{"_index":2145,"title":{},"body":{"injectables/CurrencyService.html":{}}}],["database",{"_index":1269,"title":{},"body":{"modules/AppModule.html":{}}}],["datatype",{"_index":652,"title":{},"body":{"classes/AdminRefreshToken.html":{},"classes/BookmarksProducts.html":{},"classes/Cart.html":{},"classes/CartProduct.html":{},"classes/Category.html":{},"classes/Colour.html":{},"classes/Currencies.html":{},"classes/Order.html":{},"classes/OrderProduct.html":{},"classes/Owner.html":{},"classes/OwnerRefreshToken.html":{},"classes/Product.html":{},"classes/ProductCategories.html":{},"classes/ProductColours.html":{},"classes/ProductReviews.html":{},"classes/Review.html":{},"classes/Role.html":{},"classes/UserRefreshToken.html":{},"classes/UserRoles.html":{},"classes/WatchedProducts.html":{}}}],["datatype.array",{"_index":3015,"title":{},"body":{"classes/Product.html":{}}}],["datatype.array(datatype.string",{"_index":3014,"title":{},"body":{"classes/Product.html":{}}}],["datatype.boolean",{"_index":2718,"title":{},"body":{"classes/Owner.html":{}}}],["datatype.char(2500",{"_index":666,"title":{},"body":{"classes/AdminRefreshToken.html":{},"classes/OwnerRefreshToken.html":{},"classes/UserRefreshToken.html":{}}}],["datatype.char(350",{"_index":670,"title":{},"body":{"classes/AdminRefreshToken.html":{},"classes/Owner.html":{},"classes/OwnerRefreshToken.html":{}}}],["datatype.date",{"_index":671,"title":{},"body":{"classes/AdminRefreshToken.html":{},"classes/Currencies.html":{},"classes/OwnerRefreshToken.html":{},"classes/UserRefreshToken.html":{}}}],["datatype.enum('canceled",{"_index":2594,"title":{},"body":{"classes/Order.html":{}}}],["datatype.enum('open",{"_index":1510,"title":{},"body":{"classes/Cart.html":{}}}],["datatype.enum('s",{"_index":3016,"title":{},"body":{"classes/Product.html":{}}}],["datatype.enum('usd",{"_index":2097,"title":{},"body":{"classes/Currencies.html":{}}}],["datatype.integer",{"_index":664,"title":{},"body":{"classes/AdminRefreshToken.html":{},"classes/BookmarksProducts.html":{},"classes/Cart.html":{},"classes/CartProduct.html":{},"classes/Category.html":{},"classes/Colour.html":{},"classes/Currencies.html":{},"classes/Order.html":{},"classes/OrderProduct.html":{},"classes/Owner.html":{},"classes/OwnerRefreshToken.html":{},"classes/Product.html":{},"classes/ProductCategories.html":{},"classes/ProductColours.html":{},"classes/ProductReviews.html":{},"classes/Review.html":{},"classes/Role.html":{},"classes/UserRefreshToken.html":{},"classes/UserRoles.html":{},"classes/WatchedProducts.html":{}}}],["datatype.jsonb",{"_index":2098,"title":{},"body":{"classes/Currencies.html":{},"classes/Product.html":{}}}],["datatype.string",{"_index":665,"title":{},"body":{"classes/AdminRefreshToken.html":{},"classes/Category.html":{},"classes/Colour.html":{},"classes/Owner.html":{},"classes/OwnerRefreshToken.html":{},"classes/Product.html":{},"classes/Review.html":{},"classes/Role.html":{},"classes/UserRefreshToken.html":{}}}],["date",{"_index":353,"title":{},"body":{"injectables/AdminJwtRefreshService.html":{},"classes/AdminRefreshToken.html":{},"interfaces/AuthUser.html":{},"interfaces/CodeDto.html":{},"classes/Currencies.html":{},"injectables/CurrencyService.html":{},"injectables/OwnerJwtRefreshService.html":{},"classes/OwnerRefreshToken.html":{},"interfaces/Payload.html":{},"interfaces/ReturnedAdmin.html":{},"interfaces/ReturnedOwner.html":{},"interfaces/ReturnedUser.html":{},"injectables/TasksService.html":{},"interfaces/Tokens.html":{},"injectables/UserJwtRefreshTokenService.html":{},"classes/UserRefreshToken.html":{}}}],["date().toisostring",{"_index":871,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"classes/ApiErrorExceptionFilter.html":{},"classes/ApiExceptionFilter.html":{},"classes/HttpExceptionFilter.html":{}}}],["db",{"_index":1224,"title":{},"body":{"modules/AppModule.html":{}}}],["dbadmins",{"_index":741,"title":{},"body":{"injectables/AdminService.html":{}}}],["dbadmins.foreach((admin",{"_index":750,"title":{},"body":{"injectables/AdminService.html":{}}}],["dbadmins.length",{"_index":749,"title":{},"body":{"injectables/AdminService.html":{}}}],["dbarray",{"_index":751,"title":{},"body":{"injectables/AdminService.html":{},"injectables/UsersService.html":{}}}],["dbarray.indexof(param",{"_index":756,"title":{},"body":{"injectables/AdminService.html":{},"injectables/UsersService.html":{}}}],["dbarray.push(admin[key",{"_index":752,"title":{},"body":{"injectables/AdminService.html":{}}}],["dbarray.push(user[key",{"_index":3620,"title":{},"body":{"injectables/UsersService.html":{}}}],["dbusers",{"_index":3616,"title":{},"body":{"injectables/UsersService.html":{}}}],["dbusers.foreach((user",{"_index":3619,"title":{},"body":{"injectables/UsersService.html":{}}}],["dbusers.length",{"_index":3618,"title":{},"body":{"injectables/UsersService.html":{}}}],["decodedrefreshtoken",{"_index":3442,"title":{},"body":{"guards/UserGuard.html":{}}}],["decodedrefreshtoken.trim",{"_index":3445,"title":{},"body":{"guards/UserGuard.html":{}}}],["decodedtoken",{"_index":289,"title":{},"body":{"guards/AdminGuard.html":{},"injectables/InitializeUserMiddleware.html":{},"guards/JwtAuthGuard.html":{},"guards/OwnerAdminGuard.html":{},"guards/RolesGuard.html":{}}}],["decoration",{"_index":2398,"title":{},"body":{"injectables/MailService.html":{}}}],["decoration:none!important",{"_index":2419,"title":{},"body":{"injectables/MailService.html":{}}}],["decoration:none!important;}a[x",{"_index":2415,"title":{},"body":{"injectables/MailService.html":{}}}],["decorators",{"_index":125,"title":{},"body":{"classes/AddRoleDto.html":{},"controllers/AdminController.html":{},"classes/AdminRefreshToken.html":{},"controllers/AppController.html":{},"injectables/AppListener.html":{},"controllers/AuthController.html":{},"classes/BanUserDto.html":{},"classes/BookmarksProducts.html":{},"classes/Cart.html":{},"classes/CartProduct.html":{},"controllers/CategoriesController.html":{},"classes/Category.html":{},"classes/ChangeDto.html":{},"classes/Colour.html":{},"controllers/ColoursController.html":{},"classes/CreateAccessTokenDto.html":{},"classes/CreateAdminDto.html":{},"classes/CreateAdminRefreshTokenDto.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateColourDto.html":{},"classes/CreateOwnerDto.html":{},"classes/CreateOwnerRefreshTokenDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateReviewDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserRefreshTokenDto.html":{},"classes/Currencies.html":{},"injectables/CurrencyService.html":{},"classes/GarbageCollectingProcessor.html":{},"classes/LoginDto.html":{},"classes/Nested.html":{},"classes/Nested-1.html":{},"classes/Order.html":{},"classes/OrderProduct.html":{},"classes/Owner.html":{},"classes/OwnerRefreshToken.html":{},"injectables/OwnerService.html":{},"classes/Product.html":{},"classes/ProductCategories.html":{},"classes/ProductColours.html":{},"classes/ProductReviews.html":{},"classes/QueryFilterDto.html":{},"classes/ResetDto.html":{},"classes/Review.html":{},"controllers/ReviewsController.html":{},"classes/Role.html":{},"controllers/RolesController.html":{},"classes/SignupDto.html":{},"injectables/TasksService.html":{},"classes/UpdateCategoryDto.html":{},"classes/UpdateColourDto.html":{},"classes/UpdateProductDto.html":{},"classes/UpdateUserDto.html":{},"classes/UserRefreshToken.html":{},"classes/UserRoles.html":{},"controllers/UsersController.html":{},"classes/WatchedProducts.html":{}}}],["decorators/roles",{"_index":280,"title":{},"body":{"guards/AdminGuard.html":{},"guards/OwnerAdminGuard.html":{},"guards/RolesGuard.html":{},"guards/UserGuard.html":{}}}],["deep",{"_index":2932,"title":{},"body":{"classes/ParseFormDataJsonPipe.html":{},"dependencies.html":{}}}],["deepparsejson",{"_index":2931,"title":{},"body":{"classes/ParseFormDataJsonPipe.html":{}}}],["deepparsejson(value",{"_index":2943,"title":{},"body":{"classes/ParseFormDataJsonPipe.html":{}}}],["default",{"_index":364,"title":{},"body":{"injectables/AdminJwtRefreshService.html":{},"classes/ApiError.html":{},"injectables/AppClusterService.html":{},"classes/BadRequestError.html":{},"injectables/CorsMiddleware.html":{},"injectables/CurrencyService.html":{},"classes/GarbageCollectingProcessor.html":{},"injectables/LocationMiddleware.html":{},"injectables/MailService.html":{},"classes/NotFoundError.html":{},"injectables/OwnerJwtRefreshService.html":{},"injectables/OwnerService.html":{},"classes/QueryFilterDto.html":{},"interfaces/RequestHeaders.html":{},"classes/RequestValidator.html":{},"injectables/ReviewsService.html":{},"injectables/TasksService.html":{},"injectables/TelegramService.html":{}}}],["defaults",{"_index":2367,"title":{},"body":{"modules/MailModule.html":{}}}],["defined",{"_index":14,"title":{},"body":{"injectables/ActivateMiddleware.html":{},"guards/AddContentGuard.html":{},"classes/AddRoleDto.html":{},"controllers/AdminController.html":{},"guards/AdminGuard.html":{},"injectables/AdminJwtRefreshService.html":{},"modules/AdminModule.html":{},"classes/AdminRefreshToken.html":{},"injectables/AdminService.html":{},"injectables/AdminUserMiddleware.html":{},"classes/AllExceptionsFilter.html":{},"classes/ApiError.html":{},"classes/ApiErrorExceptionFilter.html":{},"classes/ApiException.html":{},"classes/ApiExceptionFilter.html":{},"injectables/AppClusterService.html":{},"controllers/AppController.html":{},"injectables/AppListener.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"guards/AuthFerfershGuard.html":{},"injectables/AuthMiddleware.html":{},"modules/AuthModule.html":{},"classes/BadRequestError.html":{},"classes/BanUserDto.html":{},"classes/BookmarksProducts.html":{},"classes/Cart.html":{},"classes/CartProduct.html":{},"modules/CategoriesColoursModule.html":{},"controllers/CategoriesController.html":{},"injectables/CategoriesService.html":{},"classes/Category.html":{},"classes/ChangeDto.html":{},"classes/Colour.html":{},"controllers/ColoursController.html":{},"injectables/ColoursService.html":{},"injectables/CorsMiddleware.html":{},"classes/CreateAccessTokenDto.html":{},"classes/CreateAdminDto.html":{},"classes/CreateAdminRefreshTokenDto.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateColourDto.html":{},"classes/CreateOwnerDto.html":{},"classes/CreateOwnerRefreshTokenDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateReviewDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserRefreshTokenDto.html":{},"classes/Currencies.html":{},"injectables/CurrencyService.html":{},"guards/EditContentGuard.html":{},"guards/EditWebsiteGuard.html":{},"injectables/FilesService.html":{},"classes/GarbageCollectingProcessor.html":{},"injectables/GlobalInterceptor.html":{},"classes/HttpExceptionFilter.html":{},"injectables/InitializeEmailMiddleware.html":{},"injectables/InitializeUserMiddleware.html":{},"guards/JwtAuthGuard.html":{},"classes/JwtRefreshTokenDeletedEvent.html":{},"injectables/LocationMiddleware.html":{},"classes/LoginDto.html":{},"injectables/MailService.html":{},"classes/MatchConstraint.html":{},"classes/Nested.html":{},"classes/Nested-1.html":{},"classes/NotFoundError.html":{},"classes/Order.html":{},"classes/OrderProduct.html":{},"classes/Owner.html":{},"guards/OwnerAdminGuard.html":{},"injectables/OwnerJwtRefreshService.html":{},"classes/OwnerRefreshToken.html":{},"injectables/OwnerService.html":{},"classes/ParseFormDataJsonPipe.html":{},"injectables/ParseJsonPipe.html":{},"classes/Product.html":{},"classes/ProductCategories.html":{},"classes/ProductColours.html":{},"injectables/ProductMiddleware.html":{},"modules/ProductModule.html":{},"classes/ProductReviews.html":{},"classes/QueryFilterDto.html":{},"guards/RefreshAuthGuard.html":{},"interfaces/RequestHeaders.html":{},"classes/RequestValidator.html":{},"classes/ResetDto.html":{},"classes/Review.html":{},"controllers/ReviewsController.html":{},"modules/ReviewsModule.html":{},"injectables/ReviewsService.html":{},"classes/Role.html":{},"controllers/RolesController.html":{},"guards/RolesGuard.html":{},"modules/RolesModule.html":{},"injectables/RolesService.html":{},"classes/SignupDto.html":{},"injectables/TasksService.html":{},"modules/TelegramModule.html":{},"injectables/TelegramService.html":{},"injectables/ThrottlerBehindProxyGuard.html":{},"classes/UpdateCategoryDto.html":{},"classes/UpdateColourDto.html":{},"classes/UpdateProductDto.html":{},"classes/UpdateUserDto.html":{},"injectables/UserAdminMiddleware.html":{},"guards/UserGuard.html":{},"injectables/UserJwtRefreshTokenService.html":{},"injectables/UserMiddleware.html":{},"injectables/UserMiddleware-1.html":{},"classes/UserRefreshToken.html":{},"classes/UserRoles.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"injectables/ValidateDto.html":{},"classes/ValidationException.html":{},"classes/WatchedProducts.html":{}}}],["delete",{"_index":1594,"title":{},"body":{"controllers/CategoriesController.html":{},"controllers/ColoursController.html":{},"injectables/CorsMiddleware.html":{},"injectables/ProductMiddleware.html":{},"interfaces/RequestHeaders.html":{},"controllers/ReviewsController.html":{}}}],["delete('delete_category/:categoryid",{"_index":1611,"title":{},"body":{"controllers/CategoriesController.html":{}}}],["delete('delete_colour/:colourid",{"_index":1756,"title":{},"body":{"controllers/ColoursController.html":{}}}],["delete('delete_review",{"_index":3151,"title":{},"body":{"controllers/ReviewsController.html":{}}}],["deletecategory",{"_index":1569,"title":{},"body":{"controllers/CategoriesController.html":{},"injectables/CategoriesService.html":{}}}],["deletecategory(categoryid",{"_index":1581,"title":{},"body":{"controllers/CategoriesController.html":{},"injectables/CategoriesService.html":{}}}],["deletecolour",{"_index":1727,"title":{},"body":{"controllers/ColoursController.html":{},"injectables/ColoursService.html":{}}}],["deletecolour(colourid",{"_index":1737,"title":{},"body":{"controllers/ColoursController.html":{},"injectables/ColoursService.html":{}}}],["deletecron",{"_index":2832,"title":{},"body":{"injectables/OwnerService.html":{},"injectables/TasksService.html":{}}}],["deletecron(name",{"_index":2851,"title":{},"body":{"injectables/OwnerService.html":{},"injectables/TasksService.html":{}}}],["deleted",{"_index":1656,"title":{},"body":{"injectables/CategoriesService.html":{},"injectables/ColoursService.html":{},"injectables/OwnerService.html":{},"injectables/ReviewsService.html":{},"injectables/TasksService.html":{}}}],["deleted.evet",{"_index":1148,"title":{},"body":{"injectables/AppListener.html":{},"injectables/TasksService.html":{}}}],["deleted.evet.ts",{"_index":2307,"title":{},"body":{"classes/JwtRefreshTokenDeletedEvent.html":{}}}],["deleted.evet.ts:2",{"_index":2310,"title":{},"body":{"classes/JwtRefreshTokenDeletedEvent.html":{}}}],["deleted.evet.ts:3",{"_index":2311,"title":{},"body":{"classes/JwtRefreshTokenDeletedEvent.html":{}}}],["deleted.evet.ts:4",{"_index":2309,"title":{},"body":{"classes/JwtRefreshTokenDeletedEvent.html":{}}}],["deleted.evet.ts:5",{"_index":2313,"title":{},"body":{"classes/JwtRefreshTokenDeletedEvent.html":{}}}],["deletedadmin",{"_index":788,"title":{},"body":{"injectables/AdminService.html":{}}}],["deleteinterval",{"_index":3279,"title":{},"body":{"injectables/TasksService.html":{}}}],["deleteinterval(name",{"_index":3303,"title":{},"body":{"injectables/TasksService.html":{}}}],["deletereview",{"_index":3135,"title":{},"body":{"controllers/ReviewsController.html":{},"injectables/ReviewsService.html":{}}}],["deletereview(@query('reviewid",{"_index":3152,"title":{},"body":{"controllers/ReviewsController.html":{}}}],["deletereview(reviewid",{"_index":3139,"title":{},"body":{"controllers/ReviewsController.html":{},"injectables/ReviewsService.html":{}}}],["deletetimeout",{"_index":3280,"title":{},"body":{"injectables/TasksService.html":{}}}],["deletetimeout(name",{"_index":3305,"title":{},"body":{"injectables/TasksService.html":{}}}],["delimiter",{"_index":1821,"title":{},"body":{"modules/CoreModule.html":{}}}],["deny",{"_index":1860,"title":{},"body":{"injectables/CorsMiddleware.html":{},"interfaces/RequestHeaders.html":{}}}],["dependencies",{"_index":477,"title":{"dependencies.html":{}},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CartModule.html":{},"modules/CategoriesColoursModule.html":{},"modules/CoreModule.html":{},"modules/MailModule.html":{},"modules/OrdersModule.html":{},"modules/OwnerModule.html":{},"modules/ProductModule.html":{},"modules/ReviewsModule.html":{},"modules/RolesModule.html":{},"modules/UsersModule.html":{},"dependencies.html":{},"overview.html":{}}}],["desc",{"_index":747,"title":{},"body":{"injectables/AdminService.html":{},"classes/QueryFilterDto.html":{},"injectables/UsersService.html":{}}}],["description",{"_index":128,"title":{},"body":{"classes/AddRoleDto.html":{},"guards/AdminGuard.html":{},"classes/AdminRefreshToken.html":{},"injectables/AdminService.html":{},"classes/BanUserDto.html":{},"interfaces/CategoryCreationAtrb.html":{},"classes/ChangeDto.html":{},"interfaces/ColourCreationAtrb.html":{},"classes/CreateAccessTokenDto.html":{},"classes/CreateAdminDto.html":{},"classes/CreateAdminRefreshTokenDto.html":{},"classes/CreateOwnerDto.html":{},"classes/CreateOwnerRefreshTokenDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserRefreshTokenDto.html":{},"classes/Currencies.html":{},"interfaces/InitializeUser.html":{},"classes/JwtRefreshTokenDeletedEvent.html":{},"classes/LoginDto.html":{},"classes/Nested.html":{},"classes/Nested-1.html":{},"classes/Owner.html":{},"guards/OwnerAdminGuard.html":{},"classes/OwnerRefreshToken.html":{},"injectables/OwnerService.html":{},"classes/Product.html":{},"interfaces/ProductCreationAttrs.html":{},"classes/ResetDto.html":{},"interfaces/ReturnedCategory.html":{},"interfaces/ReturnedColour.html":{},"interfaces/ReturnedProduct.html":{},"interfaces/ReturnedProducts.html":{},"interfaces/ReturnedReview.html":{},"interfaces/ReviewCreationAtrb.html":{},"classes/Role.html":{},"interfaces/RolecreationAttrbs.html":{},"guards/RolesGuard.html":{},"classes/SignupDto.html":{},"classes/UpdateProductDto.html":{},"classes/UpdateUserDto.html":{},"guards/UserGuard.html":{},"interfaces/UserInterface.html":{},"interfaces/UserRefreshCreationAttrbs.html":{},"classes/UserRefreshToken.html":{},"classes/UserRoles.html":{},"interfaces/UsercreationAttrbs.html":{},"injectables/UsersService.html":{},"interfaces/ValidateUser.html":{},"index.html":{},"properties.html":{}}}],["description'})@column({type",{"_index":3200,"title":{},"body":{"classes/Role.html":{}}}],["description'})@isstring()@minlength(2)@maxlength(30)@matches(/[a",{"_index":2055,"title":{},"body":{"classes/CreateRoleDto.html":{}}}],["deserializedvalue",{"_index":2942,"title":{},"body":{"classes/ParseFormDataJsonPipe.html":{}}}],["desk",{"_index":2424,"title":{},"body":{"injectables/MailService.html":{}}}],["dest",{"_index":1242,"title":{},"body":{"modules/AppModule.html":{}}}],["destination",{"_index":2170,"title":{},"body":{"injectables/FilesService.html":{},"interfaces/fileCreated.html":{}}}],["destination(req",{"_index":2178,"title":{},"body":{"injectables/FilesService.html":{}}}],["detectors",{"_index":2417,"title":{},"body":{"injectables/MailService.html":{}}}],["development",{"_index":3788,"title":{},"body":{"index.html":{}}}],["dialect",{"_index":1262,"title":{},"body":{"modules/AppModule.html":{}}}],["died",{"_index":1000,"title":{},"body":{"injectables/AppClusterService.html":{},"interfaces/Msg.html":{}}}],["disable",{"_index":1109,"title":{},"body":{"controllers/AppController.html":{}}}],["disabled",{"_index":2114,"title":{},"body":{"injectables/CurrencyService.html":{},"injectables/OwnerService.html":{}}}],["display:block!important",{"_index":2476,"title":{},"body":{"injectables/MailService.html":{}}}],["display:inline",{"_index":2520,"title":{},"body":{"injectables/MailService.html":{}}}],["display:inline!important",{"_index":2475,"title":{},"body":{"injectables/MailService.html":{}}}],["display:none",{"_index":2426,"title":{},"body":{"injectables/MailService.html":{}}}],["display:none!important",{"_index":2466,"title":{},"body":{"injectables/MailService.html":{}}}],["display:table",{"_index":2512,"title":{},"body":{"injectables/MailService.html":{}}}],["display:table!important",{"_index":2514,"title":{},"body":{"injectables/MailService.html":{}}}],["div",{"_index":2410,"title":{},"body":{"injectables/MailService.html":{}}}],["dns",{"_index":1886,"title":{},"body":{"injectables/CorsMiddleware.html":{},"interfaces/RequestHeaders.html":{}}}],["domain",{"_index":1883,"title":{},"body":{"injectables/CorsMiddleware.html":{},"interfaces/RequestHeaders.html":{}}}],["draindelay",{"_index":1236,"title":{},"body":{"modules/AppModule.html":{}}}],["dto",{"_index":699,"title":{},"body":{"injectables/AdminService.html":{},"injectables/OwnerService.html":{},"injectables/RolesService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["dto.banreason",{"_index":3656,"title":{},"body":{"injectables/UsersService.html":{}}}],["dto.email",{"_index":790,"title":{},"body":{"injectables/AdminService.html":{}}}],["dto.exception.error",{"_index":899,"title":{},"body":{"classes/ApiErrorExceptionFilter.html":{},"classes/RequestValidator.html":{}}}],["dto.exception.error.ts",{"_index":876,"title":{},"body":{"classes/ApiError.html":{},"classes/BadRequestError.html":{},"classes/NotFoundError.html":{}}}],["dto.exception.error.ts:17",{"_index":2573,"title":{},"body":{"classes/NotFoundError.html":{}}}],["dto.exception.error.ts:23",{"_index":1450,"title":{},"body":{"classes/BadRequestError.html":{}}}],["dto.exception.error.ts:4",{"_index":881,"title":{},"body":{"classes/ApiError.html":{}}}],["dto.exception.error.ts:5",{"_index":879,"title":{},"body":{"classes/ApiError.html":{}}}],["dto.isadmin",{"_index":759,"title":{},"body":{"injectables/AdminService.html":{}}}],["dto.phonenumber",{"_index":791,"title":{},"body":{"injectables/AdminService.html":{}}}],["dto/add",{"_index":3613,"title":{},"body":{"injectables/UsersService.html":{}}}],["dto/ban",{"_index":3547,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["dto/change.password.dto",{"_index":1340,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{}}}],["dto/create",{"_index":200,"title":{},"body":{"controllers/AdminController.html":{},"injectables/AdminJwtRefreshService.html":{},"modules/AdminModule.html":{},"injectables/AdminService.html":{},"injectables/UserJwtRefreshTokenService.html":{},"injectables/UsersService.html":{}}}],["dto/create.category.dto",{"_index":1597,"title":{},"body":{"controllers/CategoriesController.html":{},"injectables/CategoriesService.html":{}}}],["dto/create.colour.dto",{"_index":1746,"title":{},"body":{"controllers/ColoursController.html":{},"injectables/ColoursService.html":{}}}],["dto/create.owner.dto",{"_index":2873,"title":{},"body":{"injectables/OwnerService.html":{}}}],["dto/create.owner.refresh.token.dto",{"_index":2759,"title":{},"body":{"injectables/OwnerJwtRefreshService.html":{}}}],["dto/create.role.dto",{"_index":3229,"title":{},"body":{"controllers/RolesController.html":{},"injectables/RolesService.html":{}}}],["dto/login.dto",{"_index":1332,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{}}}],["dto/reset.password.dto",{"_index":1333,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{}}}],["dto/signup.dto",{"_index":1334,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{}}}],["dto/update",{"_index":3549,"title":{},"body":{"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["dto/update.category.dto",{"_index":1636,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["dto/update.colour.dto",{"_index":1779,"title":{},"body":{"injectables/ColoursService.html":{}}}],["duration",{"_index":1217,"title":{},"body":{"modules/AppModule.html":{}}}],["dynamicmodule",{"_index":3366,"title":{},"body":{"modules/TelegramModule.html":{}}}],["e",{"_index":2200,"title":{},"body":{"injectables/FilesService.html":{},"injectables/ParseJsonPipe.html":{},"injectables/TasksService.html":{},"interfaces/fileCreated.html":{}}}],["e2e",{"_index":3797,"title":{},"body":{"index.html":{}}}],["each",{"_index":2041,"title":{},"body":{"classes/CreateProductDto.html":{},"classes/Nested.html":{},"classes/Nested-1.html":{},"classes/QueryFilterDto.html":{},"injectables/TasksService.html":{},"classes/UpdateProductDto.html":{}}}],["edit",{"_index":1933,"title":{},"body":{"classes/CreateAdminDto.html":{},"injectables/MailService.html":{}}}],["editcontent",{"_index":306,"title":{},"body":{"interfaces/AdminInterface.html":{},"interfaces/AdminRefreshTokenCreationAttrbs.html":{},"injectables/AdminService.html":{},"injectables/AdminUserMiddleware.html":{},"interfaces/AdmincreationAttrbs.html":{},"classes/CreateAdminDto.html":{},"interfaces/InitializeUser.html":{},"interfaces/RolecreationAttrbs.html":{},"injectables/UserAdminMiddleware.html":{},"interfaces/UserInterface.html":{},"interfaces/UserRefreshCreationAttrbs.html":{},"interfaces/UsercreationAttrbs.html":{},"injectables/UsersService.html":{},"interfaces/ValidateUser.html":{}}}],["editcontent.tostring",{"_index":842,"title":{},"body":{"injectables/AdminUserMiddleware.html":{},"injectables/UserAdminMiddleware.html":{}}}],["editcontentguard",{"_index":2161,"title":{"guards/EditContentGuard.html":{}},"body":{"guards/EditContentGuard.html":{},"controllers/ReviewsController.html":{}}}],["editcontentguard)@httpcode(201",{"_index":3141,"title":{},"body":{"controllers/ReviewsController.html":{}}}],["editwebsite",{"_index":307,"title":{},"body":{"interfaces/AdminInterface.html":{},"interfaces/AdminRefreshTokenCreationAttrbs.html":{},"injectables/AdminService.html":{},"injectables/AdminUserMiddleware.html":{},"interfaces/AdmincreationAttrbs.html":{},"classes/CreateAdminDto.html":{},"interfaces/InitializeUser.html":{},"interfaces/RolecreationAttrbs.html":{},"injectables/UserAdminMiddleware.html":{},"interfaces/UserInterface.html":{},"interfaces/UserRefreshCreationAttrbs.html":{},"interfaces/UsercreationAttrbs.html":{},"injectables/UsersService.html":{},"interfaces/ValidateUser.html":{}}}],["editwebsite.tostring",{"_index":843,"title":{},"body":{"injectables/AdminUserMiddleware.html":{},"injectables/UserAdminMiddleware.html":{}}}],["editwebsiteguard",{"_index":2163,"title":{"guards/EditWebsiteGuard.html":{}},"body":{"guards/EditWebsiteGuard.html":{}}}],["efficient",{"_index":3779,"title":{},"body":{"index.html":{}}}],["email",{"_index":308,"title":{},"body":{"interfaces/AdminInterface.html":{},"injectables/AdminJwtRefreshService.html":{},"classes/AdminRefreshToken.html":{},"interfaces/AdminRefreshTokenCreationAttrbs.html":{},"injectables/AdminService.html":{},"injectables/AdminUserMiddleware.html":{},"interfaces/AdmincreationAttrbs.html":{},"interfaces/AuthUser.html":{},"interfaces/CodeDto.html":{},"classes/CreateAccessTokenDto.html":{},"classes/CreateAdminDto.html":{},"classes/CreateAdminRefreshTokenDto.html":{},"classes/CreateOwnerDto.html":{},"classes/CreateOwnerRefreshTokenDto.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserRefreshTokenDto.html":{},"injectables/InitializeEmailMiddleware.html":{},"interfaces/InitializeUser.html":{},"classes/LoginDto.html":{},"classes/Owner.html":{},"interfaces/OwnerCreationAttrbs.html":{},"injectables/OwnerJwtRefreshService.html":{},"classes/OwnerRefreshToken.html":{},"interfaces/OwnerRefreshTokenCreationAttrbs.html":{},"injectables/OwnerService.html":{},"interfaces/Payload.html":{},"classes/ResetDto.html":{},"interfaces/ReturnedAdmin.html":{},"interfaces/ReturnedOwner.html":{},"interfaces/ReturnedUser.html":{},"interfaces/RolecreationAttrbs.html":{},"classes/SignupDto.html":{},"injectables/TasksService.html":{},"interfaces/Tokens.html":{},"injectables/UserAdminMiddleware.html":{},"interfaces/UserInterface.html":{},"injectables/UserJwtRefreshTokenService.html":{},"interfaces/UserRefreshCreationAttrbs.html":{},"classes/UserRefreshToken.html":{},"interfaces/UsercreationAttrbs.html":{},"injectables/UsersService.html":{},"interfaces/ValidateUser.html":{}}}],["email'})@isemail()@column({type",{"_index":622,"title":{},"body":{"classes/AdminRefreshToken.html":{},"classes/Owner.html":{},"classes/OwnerRefreshToken.html":{},"classes/UserRefreshToken.html":{}}}],["email'})@isstring()@isemail()@matches(/^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0",{"_index":1905,"title":{},"body":{"classes/CreateAccessTokenDto.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserRefreshTokenDto.html":{},"classes/LoginDto.html":{},"classes/ResetDto.html":{},"classes/SignupDto.html":{}}}],["email'})@isstring()@isemail()@matches(/^[a",{"_index":1937,"title":{},"body":{"classes/CreateAdminDto.html":{},"classes/CreateAdminRefreshTokenDto.html":{},"classes/CreateOwnerDto.html":{},"classes/CreateOwnerRefreshTokenDto.html":{}}}],["email.middleware",{"_index":1418,"title":{},"body":{"modules/AuthModule.html":{}}}],["email.middleware.ts",{"_index":2264,"title":{},"body":{"injectables/InitializeEmailMiddleware.html":{}}}],["email.middleware.ts:19",{"_index":2265,"title":{},"body":{"injectables/InitializeEmailMiddleware.html":{}}}],["email.middleware.ts:25",{"_index":2266,"title":{},"body":{"injectables/InitializeEmailMiddleware.html":{}}}],["email_not_provided",{"_index":2267,"title":{},"body":{"injectables/InitializeEmailMiddleware.html":{}}}],["email_validation",{"_index":1911,"title":{},"body":{"classes/CreateAccessTokenDto.html":{},"classes/CreateAdminDto.html":{},"classes/CreateAdminRefreshTokenDto.html":{},"classes/CreateOwnerDto.html":{},"classes/CreateOwnerRefreshTokenDto.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserRefreshTokenDto.html":{},"classes/LoginDto.html":{},"classes/ResetDto.html":{},"classes/SignupDto.html":{}}}],["emitter",{"_index":1146,"title":{},"body":{"injectables/AppListener.html":{},"modules/CoreModule.html":{},"injectables/TasksService.html":{},"dependencies.html":{}}}],["en",{"_index":955,"title":{},"body":{"classes/ApiException.html":{},"controllers/AuthController.html":{},"injectables/CategoriesService.html":{},"classes/Category.html":{},"interfaces/CategoryCreationAtrb.html":{},"classes/Colour.html":{},"interfaces/ColourCreationAtrb.html":{},"injectables/ColoursService.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateColourDto.html":{},"classes/CreateProductDto.html":{},"injectables/MailService.html":{},"classes/Nested.html":{},"classes/Nested-1.html":{},"classes/Product.html":{},"interfaces/ProductCreationAttrs.html":{},"interfaces/ReturnedCategory.html":{},"interfaces/ReturnedColour.html":{},"interfaces/ReturnedProduct.html":{},"interfaces/ReturnedProducts.html":{},"interfaces/ReturnedReview.html":{},"interfaces/ReviewCreationAtrb.html":{},"classes/UpdateCategoryDto.html":{},"classes/UpdateColourDto.html":{},"classes/UpdateProductDto.html":{}}}],["encoding",{"_index":1125,"title":{},"body":{"controllers/AppController.html":{},"injectables/CurrencyService.html":{}}}],["env",{"_index":3722,"title":{},"body":{"dependencies.html":{}}}],["envfilepath",{"_index":559,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CartModule.html":{},"modules/CategoriesColoursModule.html":{},"modules/CoreModule.html":{},"modules/MailModule.html":{},"modules/OrdersModule.html":{},"modules/OwnerModule.html":{},"modules/ProductModule.html":{},"modules/ReviewsModule.html":{},"modules/RolesModule.html":{},"modules/UsersModule.html":{}}}],["erorr_while_sending_email",{"_index":2385,"title":{},"body":{"injectables/MailService.html":{}}}],["err",{"_index":395,"title":{},"body":{"injectables/AdminJwtRefreshService.html":{},"injectables/AdminUserMiddleware.html":{},"controllers/AppController.html":{},"injectables/AuthMiddleware.html":{},"injectables/FilesService.html":{},"injectables/GlobalInterceptor.html":{},"injectables/InitializeEmailMiddleware.html":{},"injectables/InitializeUserMiddleware.html":{},"guards/JwtAuthGuard.html":{},"injectables/LocationMiddleware.html":{},"injectables/MailService.html":{},"injectables/OwnerJwtRefreshService.html":{},"injectables/ProductMiddleware.html":{},"guards/RolesGuard.html":{},"injectables/UserAdminMiddleware.html":{},"injectables/UserJwtRefreshTokenService.html":{},"injectables/UserMiddleware.html":{},"injectables/UserMiddleware-1.html":{},"interfaces/fileCreated.html":{}}}],["err.property",{"_index":3676,"title":{},"body":{"injectables/ValidateDto.html":{}}}],["error",{"_index":399,"title":{},"body":{"injectables/AdminJwtRefreshService.html":{},"classes/ApiError.html":{},"classes/ApiException.html":{},"controllers/AppController.html":{},"controllers/AuthController.html":{},"classes/BadRequestError.html":{},"injectables/CurrencyService.html":{},"injectables/FilesService.html":{},"classes/NotFoundError.html":{},"injectables/OwnerJwtRefreshService.html":{},"controllers/ReviewsController.html":{},"controllers/RolesController.html":{},"injectables/TasksService.html":{},"injectables/UserJwtRefreshTokenService.html":{},"interfaces/fileCreated.html":{}}}],["error('only",{"_index":1253,"title":{},"body":{"modules/AppModule.html":{},"injectables/FilesService.html":{},"interfaces/fileCreated.html":{}}}],["error,acceptfile",{"_index":2181,"title":{},"body":{"injectables/FilesService.html":{}}}],["error,destination",{"_index":2179,"title":{},"body":{"injectables/FilesService.html":{}}}],["error.capturestacktrace(this",{"_index":885,"title":{},"body":{"classes/ApiError.html":{},"classes/BadRequestError.html":{},"classes/NotFoundError.html":{}}}],["error_while_removing_token",{"_index":370,"title":{},"body":{"injectables/AdminJwtRefreshService.html":{},"classes/ApiException.html":{},"injectables/OwnerJwtRefreshService.html":{},"injectables/UserJwtRefreshTokenService.html":{}}}],["error_while_saving_token",{"_index":371,"title":{},"body":{"injectables/AdminJwtRefreshService.html":{},"classes/ApiException.html":{},"injectables/OwnerJwtRefreshService.html":{},"injectables/UserJwtRefreshTokenService.html":{}}}],["error_while_signing_token",{"_index":373,"title":{},"body":{"injectables/AdminJwtRefreshService.html":{},"classes/ApiException.html":{},"injectables/OwnerJwtRefreshService.html":{},"injectables/UserJwtRefreshTokenService.html":{}}}],["error_while_validating_token",{"_index":372,"title":{},"body":{"injectables/AdminJwtRefreshService.html":{},"classes/ApiException.html":{},"injectables/OwnerJwtRefreshService.html":{},"injectables/UserJwtRefreshTokenService.html":{}}}],["erroritem",{"_index":3106,"title":{},"body":{"classes/RequestValidator.html":{}}}],["errors",{"_index":893,"title":{},"body":{"classes/ApiError.html":{},"classes/ApiException.html":{},"classes/BadRequestError.html":{},"classes/NotFoundError.html":{},"classes/RequestValidator.html":{},"injectables/ValidateDto.html":{}}}],["errors.en",{"_index":961,"title":{},"body":{"classes/ApiException.html":{}}}],["errors.length",{"_index":3105,"title":{},"body":{"classes/RequestValidator.html":{},"injectables/ValidateDto.html":{}}}],["errors.map((err",{"_index":3675,"title":{},"body":{"injectables/ValidateDto.html":{}}}],["errors.rs",{"_index":962,"title":{},"body":{"classes/ApiException.html":{}}}],["errors.ru",{"_index":960,"title":{},"body":{"classes/ApiException.html":{}}}],["errors.ua",{"_index":959,"title":{},"body":{"classes/ApiException.html":{}}}],["es",{"_index":2433,"title":{},"body":{"injectables/MailService.html":{}}}],["esd",{"_index":2517,"title":{},"body":{"injectables/MailService.html":{}}}],["eslint",{"_index":1108,"title":{},"body":{"controllers/AppController.html":{}}}],["eslint/no",{"_index":1110,"title":{},"body":{"controllers/AppController.html":{}}}],["etrhg45ty5yeewt4t4665y",{"_index":1698,"title":{},"body":{"classes/ChangeDto.html":{},"classes/CreateAdminDto.html":{},"classes/CreateOwnerDto.html":{},"classes/CreateUserDto.html":{},"classes/LoginDto.html":{},"classes/Owner.html":{},"classes/ResetDto.html":{},"classes/SignupDto.html":{}}}],["event",{"_index":1142,"title":{},"body":{"injectables/AppListener.html":{}}}],["eventemitter",{"_index":3285,"title":{},"body":{"injectables/TasksService.html":{}}}],["eventemitter2",{"_index":3286,"title":{},"body":{"injectables/TasksService.html":{}}}],["eventemittermodule",{"_index":1814,"title":{},"body":{"modules/CoreModule.html":{}}}],["eventemittermodule.forroot",{"_index":1819,"title":{},"body":{"modules/CoreModule.html":{}}}],["events/jwt",{"_index":1147,"title":{},"body":{"injectables/AppListener.html":{},"injectables/TasksService.html":{}}}],["example",{"_index":141,"title":{},"body":{"classes/AddRoleDto.html":{},"classes/AdminRefreshToken.html":{},"classes/BanUserDto.html":{},"classes/ChangeDto.html":{},"classes/CreateAccessTokenDto.html":{},"classes/CreateAdminDto.html":{},"classes/CreateAdminRefreshTokenDto.html":{},"classes/CreateOwnerDto.html":{},"classes/CreateOwnerRefreshTokenDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserRefreshTokenDto.html":{},"classes/Currencies.html":{},"classes/LoginDto.html":{},"classes/Owner.html":{},"classes/OwnerRefreshToken.html":{},"classes/ResetDto.html":{},"classes/Role.html":{},"classes/SignupDto.html":{},"classes/UpdateUserDto.html":{},"classes/UserRefreshToken.html":{},"classes/UserRoles.html":{}}}],["except",{"_index":2935,"title":{},"body":{"classes/ParseFormDataJsonPipe.html":{}}}],["except?.length",{"_index":2939,"title":{},"body":{"classes/ParseFormDataJsonPipe.html":{}}}],["exception",{"_index":860,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"classes/ApiErrorExceptionFilter.html":{},"classes/ApiExceptionFilter.html":{},"classes/HttpExceptionFilter.html":{}}}],["exception.errors",{"_index":968,"title":{},"body":{"classes/ApiExceptionFilter.html":{}}}],["exception.filter",{"_index":231,"title":{},"body":{"controllers/AdminController.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"controllers/CardController.html":{},"controllers/CategoriesController.html":{},"controllers/ColoursController.html":{},"controllers/OrdersController.html":{},"controllers/ReviewsController.html":{},"controllers/RolesController.html":{},"controllers/UsersController.html":{}}}],["exception.filter.ts",{"_index":964,"title":{},"body":{"classes/ApiExceptionFilter.html":{},"classes/HttpExceptionFilter.html":{}}}],["exception.filter.ts:11",{"_index":2252,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["exception.filter.ts:7",{"_index":965,"title":{},"body":{"classes/ApiExceptionFilter.html":{}}}],["exception.getstatus",{"_index":867,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"classes/HttpExceptionFilter.html":{}}}],["exception.message",{"_index":866,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"classes/ApiErrorExceptionFilter.html":{},"classes/ApiExceptionFilter.html":{},"classes/HttpExceptionFilter.html":{}}}],["exception.rawerrors",{"_index":907,"title":{},"body":{"classes/ApiErrorExceptionFilter.html":{}}}],["exception.stack.tostring().split",{"_index":909,"title":{},"body":{"classes/ApiErrorExceptionFilter.html":{},"classes/ApiExceptionFilter.html":{}}}],["exception.status",{"_index":967,"title":{},"body":{"classes/ApiExceptionFilter.html":{}}}],["exception.statuscode",{"_index":903,"title":{},"body":{"classes/ApiErrorExceptionFilter.html":{}}}],["exceptionfilter",{"_index":851,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"classes/ApiErrorExceptionFilter.html":{},"classes/ApiExceptionFilter.html":{},"classes/HttpExceptionFilter.html":{}}}],["exceptions.filter",{"_index":1172,"title":{},"body":{"modules/AppModule.html":{},"modules/CoreModule.html":{}}}],["exceptions.filter.ts",{"_index":850,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["exceptions.filter.ts:11",{"_index":854,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["exceptions.filter.ts:13",{"_index":859,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["exceptions/api.exception",{"_index":48,"title":{},"body":{"injectables/ActivateMiddleware.html":{},"guards/AddContentGuard.html":{},"guards/AdminGuard.html":{},"injectables/AdminUserMiddleware.html":{},"classes/ApiExceptionFilter.html":{},"guards/AuthFerfershGuard.html":{},"guards/EditContentGuard.html":{},"guards/EditWebsiteGuard.html":{},"injectables/InitializeEmailMiddleware.html":{},"injectables/InitializeUserMiddleware.html":{},"guards/JwtAuthGuard.html":{},"guards/OwnerAdminGuard.html":{},"guards/RefreshAuthGuard.html":{},"guards/RolesGuard.html":{},"injectables/UserAdminMiddleware.html":{},"guards/UserGuard.html":{}}}],["exceptions/validate",{"_index":898,"title":{},"body":{"classes/ApiErrorExceptionFilter.html":{},"classes/RequestValidator.html":{}}}],["exceptions/validation.excetion",{"_index":3670,"title":{},"body":{"injectables/ValidateDto.html":{}}}],["exclude",{"_index":2713,"title":{},"body":{"classes/Owner.html":{}}}],["executing",{"_index":3331,"title":{},"body":{"injectables/TasksService.html":{}}}],["executioncontext",{"_index":89,"title":{},"body":{"guards/AddContentGuard.html":{},"guards/AdminGuard.html":{},"guards/AuthFerfershGuard.html":{},"guards/EditContentGuard.html":{},"guards/EditWebsiteGuard.html":{},"injectables/GlobalInterceptor.html":{},"guards/JwtAuthGuard.html":{},"guards/OwnerAdminGuard.html":{},"guards/RefreshAuthGuard.html":{},"guards/RolesGuard.html":{},"guards/UserGuard.html":{}}}],["existssync",{"_index":2188,"title":{},"body":{"injectables/FilesService.html":{},"interfaces/fileCreated.html":{}}}],["existssync(destination",{"_index":2217,"title":{},"body":{"injectables/FilesService.html":{},"interfaces/fileCreated.html":{}}}],["existssync(imagespath",{"_index":2219,"title":{},"body":{"injectables/FilesService.html":{},"interfaces/fileCreated.html":{}}}],["expandvariables",{"_index":561,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CartModule.html":{},"modules/CategoriesColoursModule.html":{},"modules/CoreModule.html":{},"modules/MailModule.html":{},"modules/OrdersModule.html":{},"modules/OwnerModule.html":{},"modules/ProductModule.html":{},"modules/ReviewsModule.html":{},"modules/RolesModule.html":{},"modules/UsersModule.html":{}}}],["expiredate",{"_index":352,"title":{},"body":{"injectables/AdminJwtRefreshService.html":{},"classes/AdminRefreshToken.html":{},"interfaces/AuthUser.html":{},"interfaces/CodeDto.html":{},"injectables/OwnerJwtRefreshService.html":{},"classes/OwnerRefreshToken.html":{},"interfaces/Payload.html":{},"interfaces/ReturnedAdmin.html":{},"interfaces/ReturnedOwner.html":{},"interfaces/ReturnedUser.html":{},"interfaces/Tokens.html":{},"injectables/UserJwtRefreshTokenService.html":{},"classes/UserRefreshToken.html":{}}}],["expiredate'})@column({type",{"_index":625,"title":{},"body":{"classes/AdminRefreshToken.html":{},"classes/OwnerRefreshToken.html":{},"classes/UserRefreshToken.html":{}}}],["expiresin",{"_index":569,"title":{},"body":{"modules/AdminModule.html":{},"modules/AuthModule.html":{},"modules/OwnerModule.html":{},"modules/UsersModule.html":{}}}],["export",{"_index":50,"title":{},"body":{"injectables/ActivateMiddleware.html":{},"guards/AddContentGuard.html":{},"classes/AddRoleDto.html":{},"controllers/AdminController.html":{},"guards/AdminGuard.html":{},"interfaces/AdminInterface.html":{},"injectables/AdminJwtRefreshService.html":{},"modules/AdminModule.html":{},"classes/AdminRefreshToken.html":{},"interfaces/AdminRefreshTokenCreationAttrbs.html":{},"injectables/AdminService.html":{},"injectables/AdminUserMiddleware.html":{},"interfaces/AdmincreationAttrbs.html":{},"classes/AllExceptionsFilter.html":{},"classes/ApiError.html":{},"classes/ApiErrorExceptionFilter.html":{},"classes/ApiException.html":{},"classes/ApiExceptionFilter.html":{},"injectables/AppClusterService.html":{},"controllers/AppController.html":{},"injectables/AppListener.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"guards/AuthFerfershGuard.html":{},"injectables/AuthMiddleware.html":{},"modules/AuthModule.html":{},"interfaces/AuthUser.html":{},"classes/BadRequestError.html":{},"classes/BanUserDto.html":{},"classes/BookmarksProducts.html":{},"controllers/CardController.html":{},"injectables/CardService.html":{},"classes/Cart.html":{},"modules/CartModule.html":{},"classes/CartProduct.html":{},"modules/CategoriesColoursModule.html":{},"controllers/CategoriesController.html":{},"injectables/CategoriesService.html":{},"classes/Category.html":{},"interfaces/CategoryCreationAtrb.html":{},"classes/ChangeDto.html":{},"interfaces/CodeDto.html":{},"classes/Colour.html":{},"interfaces/ColourCreationAtrb.html":{},"controllers/ColoursController.html":{},"injectables/ColoursService.html":{},"modules/CoreModule.html":{},"injectables/CorsMiddleware.html":{},"classes/CreateAccessTokenDto.html":{},"classes/CreateAdminDto.html":{},"classes/CreateAdminRefreshTokenDto.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateColourDto.html":{},"classes/CreateOwnerDto.html":{},"classes/CreateOwnerRefreshTokenDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateReviewDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserRefreshTokenDto.html":{},"classes/Currencies.html":{},"injectables/CurrencyService.html":{},"guards/EditContentGuard.html":{},"guards/EditWebsiteGuard.html":{},"injectables/FilesService.html":{},"classes/GarbageCollectingProcessor.html":{},"injectables/GlobalInterceptor.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/ITelegramModuleAsyncOptions.html":{},"interfaces/ITelegramOptions.html":{},"injectables/InitializeEmailMiddleware.html":{},"interfaces/InitializeUser.html":{},"injectables/InitializeUserMiddleware.html":{},"guards/JwtAuthGuard.html":{},"classes/JwtRefreshTokenDeletedEvent.html":{},"injectables/LocationMiddleware.html":{},"classes/LoginDto.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"classes/MatchConstraint.html":{},"interfaces/Msg.html":{},"classes/Nested.html":{},"classes/Nested-1.html":{},"classes/NotFoundError.html":{},"classes/Order.html":{},"classes/OrderProduct.html":{},"controllers/OrdersController.html":{},"modules/OrdersModule.html":{},"injectables/OrdersService.html":{},"classes/Owner.html":{},"guards/OwnerAdminGuard.html":{},"interfaces/OwnerCreationAttrbs.html":{},"injectables/OwnerJwtRefreshService.html":{},"modules/OwnerModule.html":{},"classes/OwnerRefreshToken.html":{},"interfaces/OwnerRefreshTokenCreationAttrbs.html":{},"injectables/OwnerService.html":{},"classes/ParseFormDataJsonPipe.html":{},"injectables/ParseJsonPipe.html":{},"interfaces/Payload.html":{},"classes/Product.html":{},"classes/ProductCategories.html":{},"classes/ProductColours.html":{},"interfaces/ProductCreationAttrs.html":{},"injectables/ProductMiddleware.html":{},"modules/ProductModule.html":{},"classes/ProductReviews.html":{},"classes/QueryFilterDto.html":{},"guards/RefreshAuthGuard.html":{},"interfaces/RequestHeaders.html":{},"classes/RequestValidator.html":{},"classes/ResetDto.html":{},"interfaces/ReturnedAdmin.html":{},"interfaces/ReturnedCategory.html":{},"interfaces/ReturnedColour.html":{},"interfaces/ReturnedOwner.html":{},"interfaces/ReturnedProduct.html":{},"interfaces/ReturnedProducts.html":{},"interfaces/ReturnedReview.html":{},"interfaces/ReturnedUser.html":{},"classes/Review.html":{},"interfaces/ReviewCreationAtrb.html":{},"controllers/ReviewsController.html":{},"modules/ReviewsModule.html":{},"injectables/ReviewsService.html":{},"classes/Role.html":{},"interfaces/RolecreationAttrbs.html":{},"controllers/RolesController.html":{},"guards/RolesGuard.html":{},"modules/RolesModule.html":{},"injectables/RolesService.html":{},"classes/SignupDto.html":{},"injectables/TasksService.html":{},"modules/TelegramModule.html":{},"injectables/TelegramService.html":{},"injectables/ThrottlerBehindProxyGuard.html":{},"interfaces/Tokens.html":{},"classes/UpdateCategoryDto.html":{},"classes/UpdateColourDto.html":{},"classes/UpdateProductDto.html":{},"classes/UpdateUserDto.html":{},"injectables/UserAdminMiddleware.html":{},"guards/UserGuard.html":{},"interfaces/UserInterface.html":{},"injectables/UserJwtRefreshTokenService.html":{},"injectables/UserMiddleware.html":{},"injectables/UserMiddleware-1.html":{},"interfaces/UserRefreshCreationAttrbs.html":{},"classes/UserRefreshToken.html":{},"classes/UserRoles.html":{},"interfaces/UsercreationAttrbs.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"injectables/ValidateDto.html":{},"interfaces/ValidateUser.html":{},"classes/ValidationException.html":{},"classes/WatchedProducts.html":{},"interfaces/fileCreated.html":{}}}],["exports",{"_index":489,"title":{},"body":{"modules/AdminModule.html":{},"modules/AuthModule.html":{},"modules/CategoriesColoursModule.html":{},"modules/MailModule.html":{},"modules/OwnerModule.html":{},"modules/RolesModule.html":{},"modules/TelegramModule.html":{},"modules/UsersModule.html":{}}}],["express",{"_index":39,"title":{},"body":{"injectables/ActivateMiddleware.html":{},"injectables/AdminUserMiddleware.html":{},"classes/ApiErrorExceptionFilter.html":{},"classes/ApiExceptionFilter.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"injectables/AuthMiddleware.html":{},"injectables/CorsMiddleware.html":{},"injectables/FilesService.html":{},"classes/HttpExceptionFilter.html":{},"injectables/InitializeEmailMiddleware.html":{},"injectables/InitializeUserMiddleware.html":{},"injectables/LocationMiddleware.html":{},"injectables/ProductMiddleware.html":{},"interfaces/RequestHeaders.html":{},"classes/RequestValidator.html":{},"injectables/UserAdminMiddleware.html":{},"injectables/UserMiddleware.html":{},"injectables/UserMiddleware-1.html":{},"controllers/UsersController.html":{},"dependencies.html":{},"interfaces/fileCreated.html":{}}}],["express.multer.file",{"_index":2176,"title":{},"body":{"injectables/FilesService.html":{},"interfaces/fileCreated.html":{}}}],["ext",{"_index":2206,"title":{},"body":{"injectables/FilesService.html":{},"interfaces/fileCreated.html":{}}}],["extends",{"_index":586,"title":{},"body":{"classes/AdminRefreshToken.html":{},"classes/ApiError.html":{},"classes/ApiException.html":{},"classes/BadRequestError.html":{},"classes/BookmarksProducts.html":{},"classes/Cart.html":{},"classes/CartProduct.html":{},"classes/Category.html":{},"classes/Colour.html":{},"classes/Currencies.html":{},"interfaces/ITelegramModuleAsyncOptions.html":{},"interfaces/ITelegramOptions.html":{},"classes/NotFoundError.html":{},"classes/Order.html":{},"classes/OrderProduct.html":{},"classes/Owner.html":{},"classes/OwnerRefreshToken.html":{},"classes/Product.html":{},"classes/ProductCategories.html":{},"classes/ProductColours.html":{},"classes/ProductReviews.html":{},"classes/Review.html":{},"classes/Role.html":{},"injectables/ThrottlerBehindProxyGuard.html":{},"classes/UserRefreshToken.html":{},"classes/UserRoles.html":{},"classes/ValidationException.html":{},"classes/WatchedProducts.html":{}}}],["extname",{"_index":1246,"title":{},"body":{"modules/AppModule.html":{},"injectables/FilesService.html":{},"interfaces/fileCreated.html":{}}}],["extname(file.originalname",{"_index":2207,"title":{},"body":{"injectables/FilesService.html":{},"interfaces/fileCreated.html":{}}}],["eyjhbgcioijiujpzi1niisinr5cci6idfuthojpkpxvcj9.eyj1c2vyswqiojesimlzqwn0axzhdgvkijpmywxzzswizw1hawwioij1c2vyqgdtywlslmnvbsisinjvbgvzijpbeyjpzci6mswidmfsdwuioijvu0vsiiwizgvzy3jpchrpb24ioijzaw1wbgugdxnlciisinjpz2h0msi6zmfsc2usinjpz2h0mii6zmfsc2usimnyzwf0zwrbdci6ijiwmjmtmdetmtzumta6nde6mjguoty5wiisinvwzgf0zwrbdci6ijiwmjmtmdetmtzumta6nde6mjguoty5wiisilvzzxjsb2xlcyi6eyjpzci6mswicm9szulkijoxlcj1c2vyswqiojesimfkbwluswqiom51bgx9fv0simlhdci6mty3mzg2ntcxniwizxhwijoxnjczody5mze2fq.cx0yqrxwrvrl8wnmsntiitl632orcoxyujunq",{"_index":2814,"title":{},"body":{"classes/OwnerRefreshToken.html":{}}}],["eyjhbgcioijrdyiuzi1niisinr5cci6ikpxvcj9.eyj1c2vyswqiojesimlzqwn0axzhdgvkijpmywxzzswizw1hawwioij1c2vyqgdtywlslmnvbsisinjvbgvzijpbeyjpzci6mswidmfsdwuioijvu0vsiiwizgvzy3jpchrpb24ioijzaw1wbgugdxnlciisinjpz2h0msi6zmfsc2usinjpz2h0mii6zmfsc2usimnyzwf0zwrbdci6ijiwmjmtmdetmtzumta6nde6mjguoty5wiisinvwzgf0zwrbdci6ijiwmjmtmdetmtzumta6nde6mjguoty5wiisilvzzxjsb2xlcyi6eyjpzci6mswicm9szulkijoxlcj1c2vyswqiojesimfkbwluswqiom51bgx9fv0simlhdci6mty3mzg2ntcxniwizxhwijoxnjczody5mze2fq.cx0yqrxwrvrl8wnmsntiitl632orcoxyujunq",{"_index":617,"title":{},"body":{"classes/AdminRefreshToken.html":{}}}],["eyjuilbgghbgcioijiuzihnuohli1niisinr5cci6ikpxvcj9.eyj1c2vyswqiojesimlzqwn0axzhdgvkijpmywxzzswizw1hawwioij1c2vyqgdtywlslmnvbsisinjvbgvzijpbeyjpzci6mswidmfsdwuioijvu0vsiiwizgvzy3jpchrpb24ioijzaw1wbgugdxnlciisinjpz2h0msi6zmfsc2usinjpz2h0mii6zmfsc2usimnyzwf0zwrbdci6ijiwmjmtmdetmtzumta6nde6mjguoty5wiisinvwzgf0zwrbdci6ijiwmjmtmdetmtzumta6nde6mjguoty5wiisilvzzxjsb2xlcyi6eyjpzci6mswicm9szulkijoxlcj1c2vyswqiojesimfkbwluswqiom51bgx9fv0simlhdci6mty3mzg2ntcxniwizxhwijoxnjczody5mze2fq.cx0yqrxwrvrl8wnmsntiitl632orcoxyujunq",{"_index":3499,"title":{},"body":{"classes/UserRefreshToken.html":{}}}],["failed",{"_index":3111,"title":{},"body":{"classes/RequestValidator.html":{}}}],["false",{"_index":451,"title":{},"body":{"injectables/AdminJwtRefreshService.html":{},"classes/AdminRefreshToken.html":{},"injectables/AdminService.html":{},"classes/ApiErrorExceptionFilter.html":{},"classes/ApiExceptionFilter.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"classes/BookmarksProducts.html":{},"classes/Cart.html":{},"classes/CartProduct.html":{},"classes/Category.html":{},"classes/Colour.html":{},"modules/CoreModule.html":{},"injectables/CorsMiddleware.html":{},"classes/CreateAdminDto.html":{},"classes/Currencies.html":{},"injectables/CurrencyService.html":{},"injectables/FilesService.html":{},"modules/MailModule.html":{},"classes/Order.html":{},"classes/OrderProduct.html":{},"classes/Owner.html":{},"guards/OwnerAdminGuard.html":{},"injectables/OwnerJwtRefreshService.html":{},"classes/OwnerRefreshToken.html":{},"injectables/OwnerService.html":{},"classes/Product.html":{},"classes/ProductCategories.html":{},"classes/ProductColours.html":{},"classes/ProductReviews.html":{},"interfaces/RequestHeaders.html":{},"classes/Review.html":{},"classes/Role.html":{},"guards/UserGuard.html":{},"injectables/UserJwtRefreshTokenService.html":{},"classes/UserRefreshToken.html":{},"classes/UserRoles.html":{},"classes/WatchedProducts.html":{},"interfaces/fileCreated.html":{}}}],["family:inherit!important",{"_index":2421,"title":{},"body":{"injectables/MailService.html":{}}}],["fastify",{"_index":3698,"title":{},"body":{"dependencies.html":{}}}],["favicon",{"_index":3752,"title":{},"body":{"dependencies.html":{}}}],["fetchrenewalcode",{"_index":1282,"title":{},"body":{"controllers/AuthController.html":{}}}],["fetchrenewalcode(codedto",{"_index":1300,"title":{},"body":{"controllers/AuthController.html":{}}}],["field",{"_index":612,"title":{},"body":{"classes/AdminRefreshToken.html":{},"classes/BookmarksProducts.html":{},"classes/Cart.html":{},"classes/CartProduct.html":{},"classes/Category.html":{},"classes/Colour.html":{},"classes/Currencies.html":{},"classes/Order.html":{},"classes/OrderProduct.html":{},"classes/Owner.html":{},"classes/OwnerRefreshToken.html":{},"classes/Product.html":{},"classes/ProductCategories.html":{},"classes/ProductColours.html":{},"classes/ProductReviews.html":{},"classes/Review.html":{},"classes/Role.html":{},"classes/UserRefreshToken.html":{},"classes/UserRoles.html":{},"classes/WatchedProducts.html":{}}}],["file",{"_index":5,"title":{},"body":{"injectables/ActivateMiddleware.html":{},"guards/AddContentGuard.html":{},"classes/AddRoleDto.html":{},"controllers/AdminController.html":{},"guards/AdminGuard.html":{},"interfaces/AdminInterface.html":{},"injectables/AdminJwtRefreshService.html":{},"modules/AdminModule.html":{},"classes/AdminRefreshToken.html":{},"interfaces/AdminRefreshTokenCreationAttrbs.html":{},"injectables/AdminService.html":{},"injectables/AdminUserMiddleware.html":{},"interfaces/AdmincreationAttrbs.html":{},"classes/AllExceptionsFilter.html":{},"classes/ApiError.html":{},"classes/ApiErrorExceptionFilter.html":{},"classes/ApiException.html":{},"classes/ApiExceptionFilter.html":{},"injectables/AppClusterService.html":{},"controllers/AppController.html":{},"injectables/AppListener.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"guards/AuthFerfershGuard.html":{},"injectables/AuthMiddleware.html":{},"modules/AuthModule.html":{},"interfaces/AuthUser.html":{},"classes/BadRequestError.html":{},"classes/BanUserDto.html":{},"classes/BookmarksProducts.html":{},"controllers/CardController.html":{},"injectables/CardService.html":{},"classes/Cart.html":{},"modules/CartModule.html":{},"classes/CartProduct.html":{},"modules/CategoriesColoursModule.html":{},"controllers/CategoriesController.html":{},"injectables/CategoriesService.html":{},"classes/Category.html":{},"interfaces/CategoryCreationAtrb.html":{},"classes/ChangeDto.html":{},"interfaces/CodeDto.html":{},"classes/Colour.html":{},"interfaces/ColourCreationAtrb.html":{},"controllers/ColoursController.html":{},"injectables/ColoursService.html":{},"modules/CoreModule.html":{},"injectables/CorsMiddleware.html":{},"classes/CreateAccessTokenDto.html":{},"classes/CreateAdminDto.html":{},"classes/CreateAdminRefreshTokenDto.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateColourDto.html":{},"classes/CreateOwnerDto.html":{},"classes/CreateOwnerRefreshTokenDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateReviewDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserRefreshTokenDto.html":{},"classes/Currencies.html":{},"injectables/CurrencyService.html":{},"guards/EditContentGuard.html":{},"guards/EditWebsiteGuard.html":{},"injectables/FilesService.html":{},"classes/GarbageCollectingProcessor.html":{},"injectables/GlobalInterceptor.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/ITelegramModuleAsyncOptions.html":{},"interfaces/ITelegramOptions.html":{},"injectables/InitializeEmailMiddleware.html":{},"interfaces/InitializeUser.html":{},"injectables/InitializeUserMiddleware.html":{},"guards/JwtAuthGuard.html":{},"classes/JwtRefreshTokenDeletedEvent.html":{},"injectables/LocationMiddleware.html":{},"classes/LoginDto.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"classes/MatchConstraint.html":{},"interfaces/Msg.html":{},"classes/Nested.html":{},"classes/Nested-1.html":{},"classes/NotFoundError.html":{},"classes/Order.html":{},"classes/OrderProduct.html":{},"controllers/OrdersController.html":{},"modules/OrdersModule.html":{},"injectables/OrdersService.html":{},"classes/Owner.html":{},"guards/OwnerAdminGuard.html":{},"interfaces/OwnerCreationAttrbs.html":{},"injectables/OwnerJwtRefreshService.html":{},"modules/OwnerModule.html":{},"classes/OwnerRefreshToken.html":{},"interfaces/OwnerRefreshTokenCreationAttrbs.html":{},"injectables/OwnerService.html":{},"classes/ParseFormDataJsonPipe.html":{},"injectables/ParseJsonPipe.html":{},"interfaces/Payload.html":{},"classes/Product.html":{},"classes/ProductCategories.html":{},"classes/ProductColours.html":{},"interfaces/ProductCreationAttrs.html":{},"injectables/ProductMiddleware.html":{},"modules/ProductModule.html":{},"classes/ProductReviews.html":{},"classes/QueryFilterDto.html":{},"guards/RefreshAuthGuard.html":{},"interfaces/RequestHeaders.html":{},"classes/RequestValidator.html":{},"classes/ResetDto.html":{},"interfaces/ReturnedAdmin.html":{},"interfaces/ReturnedCategory.html":{},"interfaces/ReturnedColour.html":{},"interfaces/ReturnedOwner.html":{},"interfaces/ReturnedProduct.html":{},"interfaces/ReturnedProducts.html":{},"interfaces/ReturnedReview.html":{},"interfaces/ReturnedUser.html":{},"classes/Review.html":{},"interfaces/ReviewCreationAtrb.html":{},"controllers/ReviewsController.html":{},"modules/ReviewsModule.html":{},"injectables/ReviewsService.html":{},"classes/Role.html":{},"interfaces/RolecreationAttrbs.html":{},"controllers/RolesController.html":{},"guards/RolesGuard.html":{},"modules/RolesModule.html":{},"injectables/RolesService.html":{},"classes/SignupDto.html":{},"injectables/TasksService.html":{},"modules/TelegramModule.html":{},"injectables/TelegramService.html":{},"injectables/ThrottlerBehindProxyGuard.html":{},"interfaces/Tokens.html":{},"classes/UpdateCategoryDto.html":{},"classes/UpdateColourDto.html":{},"classes/UpdateProductDto.html":{},"classes/UpdateUserDto.html":{},"injectables/UserAdminMiddleware.html":{},"guards/UserGuard.html":{},"interfaces/UserInterface.html":{},"injectables/UserJwtRefreshTokenService.html":{},"injectables/UserMiddleware.html":{},"injectables/UserMiddleware-1.html":{},"interfaces/UserRefreshCreationAttrbs.html":{},"classes/UserRefreshToken.html":{},"classes/UserRoles.html":{},"interfaces/UsercreationAttrbs.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"injectables/ValidateDto.html":{},"interfaces/ValidateUser.html":{},"classes/ValidationException.html":{},"classes/WatchedProducts.html":{},"interfaces/fileCreated.html":{}}}],["file.buffer",{"_index":2199,"title":{},"body":{"injectables/FilesService.html":{},"interfaces/fileCreated.html":{}}}],["file.fieldname",{"_index":2216,"title":{},"body":{"injectables/FilesService.html":{},"interfaces/fileCreated.html":{}}}],["file.originalname.split('.')[0",{"_index":2205,"title":{},"body":{"injectables/FilesService.html":{},"interfaces/fileCreated.html":{}}}],["filecreated",{"_index":2189,"title":{"interfaces/fileCreated.html":{}},"body":{"injectables/FilesService.html":{},"interfaces/fileCreated.html":{}}}],["filefilter",{"_index":2171,"title":{},"body":{"injectables/FilesService.html":{},"interfaces/fileCreated.html":{}}}],["filefilter(req",{"_index":1243,"title":{},"body":{"modules/AppModule.html":{},"injectables/FilesService.html":{}}}],["filename",{"_index":2190,"title":{},"body":{"injectables/FilesService.html":{},"interfaces/fileCreated.html":{}}}],["filepath",{"_index":2185,"title":{},"body":{"injectables/FilesService.html":{},"interfaces/fileCreated.html":{}}}],["files",{"_index":1255,"title":{},"body":{"modules/AppModule.html":{},"injectables/FilesService.html":{},"interfaces/fileCreated.html":{}}}],["filesize",{"_index":1259,"title":{},"body":{"modules/AppModule.html":{}}}],["filesservice",{"_index":1805,"title":{"injectables/FilesService.html":{}},"body":{"modules/CoreModule.html":{},"injectables/FilesService.html":{},"modules/ProductModule.html":{},"interfaces/fileCreated.html":{},"overview.html":{}}}],["filetypes",{"_index":1244,"title":{},"body":{"modules/AppModule.html":{},"injectables/FilesService.html":{},"interfaces/fileCreated.html":{}}}],["filetypes.test",{"_index":1247,"title":{},"body":{"modules/AppModule.html":{},"injectables/FilesService.html":{},"interfaces/fileCreated.html":{}}}],["filetypes.test(file.mimetype",{"_index":1250,"title":{},"body":{"modules/AppModule.html":{},"injectables/FilesService.html":{},"interfaces/fileCreated.html":{}}}],["filter.dto.ts",{"_index":3076,"title":{},"body":{"classes/QueryFilterDto.html":{}}}],["filter.dto.ts:12",{"_index":3081,"title":{},"body":{"classes/QueryFilterDto.html":{}}}],["filter.dto.ts:16",{"_index":3079,"title":{},"body":{"classes/QueryFilterDto.html":{}}}],["filter.dto.ts:21",{"_index":3083,"title":{},"body":{"classes/QueryFilterDto.html":{}}}],["filter.dto.ts:25",{"_index":3085,"title":{},"body":{"classes/QueryFilterDto.html":{}}}],["filter.dto.ts:29",{"_index":3086,"title":{},"body":{"classes/QueryFilterDto.html":{}}}],["filter.dto.ts:7",{"_index":3080,"title":{},"body":{"classes/QueryFilterDto.html":{}}}],["filters/all",{"_index":1807,"title":{},"body":{"modules/CoreModule.html":{}}}],["findadmin",{"_index":149,"title":{},"body":{"controllers/AdminController.html":{},"injectables/AdminService.html":{}}}],["findadmin(v",{"_index":165,"title":{},"body":{"controllers/AdminController.html":{},"injectables/AdminService.html":{}}}],["findbyactivationlink",{"_index":680,"title":{},"body":{"injectables/AdminService.html":{},"injectables/OwnerService.html":{}}}],["findbyactivationlink(activationlink",{"_index":702,"title":{},"body":{"injectables/AdminService.html":{},"injectables/OwnerService.html":{}}}],["findtoken",{"_index":320,"title":{},"body":{"injectables/AdminJwtRefreshService.html":{},"injectables/OwnerJwtRefreshService.html":{},"injectables/UserJwtRefreshTokenService.html":{}}}],["findtoken(adminrefreshtoken",{"_index":338,"title":{},"body":{"injectables/AdminJwtRefreshService.html":{}}}],["findtoken(ownerrefreshtoken",{"_index":2743,"title":{},"body":{"injectables/OwnerJwtRefreshService.html":{}}}],["findtoken(userrefreshtoken",{"_index":3449,"title":{},"body":{"injectables/UserJwtRefreshTokenService.html":{}}}],["findtokenbyparams",{"_index":321,"title":{},"body":{"injectables/AdminJwtRefreshService.html":{},"injectables/OwnerJwtRefreshService.html":{}}}],["findtokenbyparams(email",{"_index":340,"title":{},"body":{"injectables/AdminJwtRefreshService.html":{},"injectables/OwnerJwtRefreshService.html":{}}}],["findtokenbytoken",{"_index":322,"title":{},"body":{"injectables/AdminJwtRefreshService.html":{},"injectables/OwnerJwtRefreshService.html":{},"injectables/UserJwtRefreshTokenService.html":{}}}],["findtokenbytoken(adminrefreshtoken",{"_index":342,"title":{},"body":{"injectables/AdminJwtRefreshService.html":{}}}],["findtokenbytoken(ownerrefreshtoken",{"_index":2746,"title":{},"body":{"injectables/OwnerJwtRefreshService.html":{}}}],["findtokenbytoken(userrefreshtoken",{"_index":3451,"title":{},"body":{"injectables/UserJwtRefreshTokenService.html":{}}}],["finduser",{"_index":3525,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["finduser(v",{"_index":3534,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["fire",{"_index":3327,"title":{},"body":{"injectables/TasksService.html":{}}}],["firstvaluefrom",{"_index":1064,"title":{},"body":{"controllers/AppController.html":{},"injectables/CurrencyService.html":{}}}],["fix",{"_index":2465,"title":{},"body":{"injectables/MailService.html":{}}}],["flbwyzikawirfudk",{"_index":2364,"title":{},"body":{"modules/MailModule.html":{}}}],["float:left",{"_index":2427,"title":{},"body":{"injectables/MailService.html":{}}}],["float:none!important",{"_index":2510,"title":{},"body":{"injectables/MailService.html":{}}}],["font",{"_index":1875,"title":{},"body":{"injectables/CorsMiddleware.html":{},"injectables/MailService.html":{},"interfaces/RequestHeaders.html":{}}}],["font,.externalclass",{"_index":2408,"title":{},"body":{"injectables/MailService.html":{}}}],["footer",{"_index":2458,"title":{},"body":{"injectables/MailService.html":{}}}],["forbidden",{"_index":116,"title":{},"body":{"guards/AddContentGuard.html":{},"injectables/AdminService.html":{},"classes/ApiException.html":{},"guards/AuthFerfershGuard.html":{},"guards/EditContentGuard.html":{},"guards/EditWebsiteGuard.html":{},"injectables/OwnerService.html":{}}}],["forbiddenexception",{"_index":914,"title":{},"body":{"classes/ApiException.html":{}}}],["forbiddenexception(type",{"_index":931,"title":{},"body":{"classes/ApiException.html":{}}}],["foreignkey",{"_index":654,"title":{},"body":{"classes/AdminRefreshToken.html":{},"classes/BookmarksProducts.html":{},"classes/Cart.html":{},"classes/CartProduct.html":{},"classes/Currencies.html":{},"classes/Order.html":{},"classes/OrderProduct.html":{},"classes/OwnerRefreshToken.html":{},"classes/Product.html":{},"classes/ProductCategories.html":{},"classes/ProductColours.html":{},"classes/ProductReviews.html":{},"classes/Review.html":{},"classes/UserRefreshToken.html":{},"classes/UserRoles.html":{},"classes/WatchedProducts.html":{}}}],["foreignkey(undefined)@column({type",{"_index":1467,"title":{},"body":{"classes/BookmarksProducts.html":{},"classes/Cart.html":{},"classes/Order.html":{},"classes/ProductCategories.html":{},"classes/ProductColours.html":{},"classes/ProductReviews.html":{},"classes/Review.html":{},"classes/WatchedProducts.html":{}}}],["forrootasync",{"_index":3363,"title":{},"body":{"modules/TelegramModule.html":{}}}],["forrootasync(options",{"_index":3364,"title":{},"body":{"modules/TelegramModule.html":{}}}],["forroutes",{"_index":572,"title":{},"body":{"modules/AdminModule.html":{},"modules/AuthModule.html":{},"modules/CategoriesColoursModule.html":{},"modules/ProductModule.html":{},"modules/RolesModule.html":{},"modules/UsersModule.html":{}}}],["forwarded",{"_index":1092,"title":{},"body":{"controllers/AppController.html":{},"injectables/CorsMiddleware.html":{},"interfaces/RequestHeaders.html":{}}}],["forwardref",{"_index":496,"title":{},"body":{"modules/AdminModule.html":{},"modules/AuthModule.html":{},"modules/CartModule.html":{},"modules/CategoriesColoursModule.html":{},"modules/CoreModule.html":{},"modules/MailModule.html":{},"modules/OrdersModule.html":{},"modules/OwnerModule.html":{},"modules/ProductModule.html":{},"modules/ReviewsModule.html":{},"modules/RolesModule.html":{},"modules/UsersModule.html":{}}}],["found",{"_index":404,"title":{},"body":{"injectables/AdminJwtRefreshService.html":{},"injectables/AdminService.html":{},"injectables/AdminUserMiddleware.html":{},"classes/ApiError.html":{},"classes/ApiException.html":{},"guards/AuthFerfershGuard.html":{},"classes/BadRequestError.html":{},"injectables/CategoriesService.html":{},"injectables/ColoursService.html":{},"injectables/InitializeEmailMiddleware.html":{},"injectables/MailService.html":{},"classes/NotFoundError.html":{},"injectables/OwnerJwtRefreshService.html":{},"injectables/OwnerService.html":{},"classes/RequestValidator.html":{},"injectables/UserAdminMiddleware.html":{},"injectables/UserJwtRefreshTokenService.html":{},"injectables/UsersService.html":{}}}],["frame",{"_index":1859,"title":{},"body":{"injectables/CorsMiddleware.html":{},"interfaces/RequestHeaders.html":{}}}],["framework",{"_index":3777,"title":{},"body":{"index.html":{}}}],["fs",{"_index":2186,"title":{},"body":{"injectables/FilesService.html":{},"interfaces/fileCreated.html":{}}}],["fs.existssync(filepath",{"_index":2195,"title":{},"body":{"injectables/FilesService.html":{},"interfaces/fileCreated.html":{}}}],["fs.mkdirsync(filepath",{"_index":2196,"title":{},"body":{"injectables/FilesService.html":{},"interfaces/fileCreated.html":{}}}],["fs.unlink(filepath",{"_index":2203,"title":{},"body":{"injectables/FilesService.html":{},"interfaces/fileCreated.html":{}}}],["fs.writefilesync(path.join(filepath",{"_index":2198,"title":{},"body":{"injectables/FilesService.html":{},"interfaces/fileCreated.html":{}}}],["function",{"_index":241,"title":{},"body":{"controllers/AdminController.html":{},"injectables/AppClusterService.html":{},"controllers/AuthController.html":{},"injectables/FilesService.html":{},"interfaces/ITelegramModuleAsyncOptions.html":{},"classes/MatchConstraint.html":{},"interfaces/Msg.html":{},"controllers/RolesController.html":{},"injectables/TasksService.html":{},"miscellaneous/typealiases.html":{}}}],["functions",{"_index":3759,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["fw",{"_index":2481,"title":{},"body":{"injectables/MailService.html":{}}}],["g4loc",{"_index":618,"title":{},"body":{"classes/AdminRefreshToken.html":{},"classes/OwnerRefreshToken.html":{},"classes/UserRefreshToken.html":{}}}],["garbagecollecting",{"_index":1818,"title":{},"body":{"modules/CoreModule.html":{}}}],["garbagecollectingprocessor",{"_index":1815,"title":{"classes/GarbageCollectingProcessor.html":{}},"body":{"modules/CoreModule.html":{},"classes/GarbageCollectingProcessor.html":{}}}],["garbagecollector",{"_index":3281,"title":{},"body":{"injectables/TasksService.html":{}}}],["garbagecollector(name",{"_index":3307,"title":{},"body":{"injectables/TasksService.html":{}}}],["gecko",{"_index":606,"title":{},"body":{"classes/AdminRefreshToken.html":{},"classes/CreateAdminRefreshTokenDto.html":{},"classes/CreateOwnerDto.html":{},"classes/CreateOwnerRefreshTokenDto.html":{},"classes/Owner.html":{},"classes/OwnerRefreshToken.html":{},"injectables/UserJwtRefreshTokenService.html":{}}}],["generateactivationcode",{"_index":323,"title":{},"body":{"injectables/AdminJwtRefreshService.html":{},"injectables/OwnerJwtRefreshService.html":{}}}],["generateencryptedvalue",{"_index":324,"title":{},"body":{"injectables/AdminJwtRefreshService.html":{},"controllers/AppController.html":{},"injectables/OwnerJwtRefreshService.html":{}}}],["generateencryptedvalue(value",{"_index":345,"title":{},"body":{"injectables/AdminJwtRefreshService.html":{},"controllers/AppController.html":{},"injectables/OwnerJwtRefreshService.html":{}}}],["generaterefreshtoken",{"_index":325,"title":{},"body":{"injectables/AdminJwtRefreshService.html":{},"injectables/OwnerJwtRefreshService.html":{},"injectables/UserJwtRefreshTokenService.html":{}}}],["generaterefreshtoken(payload",{"_index":348,"title":{},"body":{"injectables/AdminJwtRefreshService.html":{},"injectables/OwnerJwtRefreshService.html":{},"injectables/UserJwtRefreshTokenService.html":{}}}],["geo",{"_index":1844,"title":{},"body":{"injectables/CorsMiddleware.html":{},"injectables/LocationMiddleware.html":{},"interfaces/RequestHeaders.html":{}}}],["geo.city",{"_index":2333,"title":{},"body":{"injectables/LocationMiddleware.html":{}}}],["geocountry",{"_index":1098,"title":{},"body":{"controllers/AppController.html":{}}}],["geoip",{"_index":1838,"title":{},"body":{"injectables/CorsMiddleware.html":{},"injectables/LocationMiddleware.html":{},"interfaces/RequestHeaders.html":{},"dependencies.html":{}}}],["geoip.lookup('62.122.202.29",{"_index":2323,"title":{},"body":{"injectables/LocationMiddleware.html":{}}}],["geoip.reloaddatasync",{"_index":1845,"title":{},"body":{"injectables/CorsMiddleware.html":{},"interfaces/RequestHeaders.html":{}}}],["geolite2",{"_index":1096,"title":{},"body":{"controllers/AppController.html":{},"injectables/LocationMiddleware.html":{}}}],["geolocation",{"_index":1100,"title":{},"body":{"controllers/AppController.html":{}}}],["get('/find_users",{"_index":3555,"title":{},"body":{"controllers/UsersController.html":{}}}],["get('/get_users",{"_index":3553,"title":{},"body":{"controllers/UsersController.html":{}}}],["get('activate/:link",{"_index":1373,"title":{},"body":{"controllers/AuthController.html":{}}}],["get('find_admin",{"_index":257,"title":{},"body":{"controllers/AdminController.html":{}}}],["get('get",{"_index":1088,"title":{},"body":{"controllers/AppController.html":{}}}],["get('get/:value",{"_index":3237,"title":{},"body":{"controllers/RolesController.html":{}}}],["get('get_admins",{"_index":262,"title":{},"body":{"controllers/AdminController.html":{}}}],["get('get_categoties",{"_index":1604,"title":{},"body":{"controllers/CategoriesController.html":{}}}],["get('get_colours",{"_index":1748,"title":{},"body":{"controllers/ColoursController.html":{}}}],["get('set",{"_index":1069,"title":{},"body":{"controllers/AppController.html":{}}}],["getactivationcode",{"_index":2631,"title":{},"body":{"classes/Owner.html":{}}}],["getadmin",{"_index":589,"title":{},"body":{"classes/AdminRefreshToken.html":{}}}],["getadminagent",{"_index":590,"title":{},"body":{"classes/AdminRefreshToken.html":{}}}],["getadminbyemail",{"_index":681,"title":{},"body":{"injectables/AdminService.html":{}}}],["getadminbyemail(email",{"_index":704,"title":{},"body":{"injectables/AdminService.html":{}}}],["getadminbyid",{"_index":682,"title":{},"body":{"injectables/AdminService.html":{}}}],["getadminbyid(id",{"_index":706,"title":{},"body":{"injectables/AdminService.html":{}}}],["getadminbyphonenumber",{"_index":683,"title":{},"body":{"injectables/AdminService.html":{}}}],["getadminbyphonenumber(phonenumber",{"_index":708,"title":{},"body":{"injectables/AdminService.html":{}}}],["getadminid",{"_index":2958,"title":{},"body":{"classes/Product.html":{}}}],["getadmins",{"_index":3196,"title":{},"body":{"classes/Role.html":{}}}],["getalladmins",{"_index":684,"title":{},"body":{"injectables/AdminService.html":{}}}],["getalladmins(page",{"_index":710,"title":{},"body":{"injectables/AdminService.html":{}}}],["getallusers",{"_index":150,"title":{},"body":{"controllers/AdminController.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["getallusers(page",{"_index":173,"title":{},"body":{"controllers/AdminController.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["getauthor",{"_index":2080,"title":{},"body":{"classes/Currencies.html":{},"classes/Product.html":{}}}],["getcart",{"_index":1527,"title":{},"body":{"classes/CartProduct.html":{}}}],["getcartproducts",{"_index":1483,"title":{},"body":{"classes/Cart.html":{}}}],["getcarts",{"_index":2959,"title":{},"body":{"classes/Product.html":{}}}],["getcartstatus",{"_index":1484,"title":{},"body":{"classes/Cart.html":{}}}],["getcategories",{"_index":1570,"title":{},"body":{"controllers/CategoriesController.html":{},"injectables/CategoriesService.html":{},"classes/Product.html":{}}}],["getcategoriesbyids",{"_index":1614,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["getcategoriesbyids(categoryids",{"_index":1623,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["getcategorybyid",{"_index":1615,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["getcategorybyid(categoryid",{"_index":1626,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["getcategorybyvalue",{"_index":1616,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["getcategorybyvalue(value",{"_index":1628,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["getcolourbyid",{"_index":1759,"title":{},"body":{"injectables/ColoursService.html":{}}}],["getcolourbyid(colourid",{"_index":1767,"title":{},"body":{"injectables/ColoursService.html":{}}}],["getcolourbyvalue",{"_index":1760,"title":{},"body":{"injectables/ColoursService.html":{}}}],["getcolourbyvalue(value",{"_index":1769,"title":{},"body":{"injectables/ColoursService.html":{}}}],["getcolours",{"_index":1728,"title":{},"body":{"controllers/ColoursController.html":{},"injectables/ColoursService.html":{},"classes/Product.html":{}}}],["getcoloursbyids",{"_index":1761,"title":{},"body":{"injectables/ColoursService.html":{}}}],["getcoloursbyids(colourids",{"_index":1772,"title":{},"body":{"injectables/ColoursService.html":{}}}],["getconfirmcode",{"_index":2632,"title":{},"body":{"classes/Owner.html":{}}}],["getcrons",{"_index":3282,"title":{},"body":{"injectables/TasksService.html":{}}}],["getcurrencies",{"_index":1037,"title":{},"body":{"controllers/AppController.html":{}}}],["getcurrencies(base",{"_index":1043,"title":{},"body":{"controllers/AppController.html":{}}}],["getcurrency",{"_index":1038,"title":{},"body":{"controllers/AppController.html":{}}}],["getcurrency(@query('base",{"_index":1105,"title":{},"body":{"controllers/AppController.html":{}}}],["getcurrency(base",{"_index":1046,"title":{},"body":{"controllers/AppController.html":{}}}],["getcurrentcurrency",{"_index":2102,"title":{},"body":{"injectables/CurrencyService.html":{}}}],["getcurrentcurrency(countryisocode",{"_index":2109,"title":{},"body":{"injectables/CurrencyService.html":{}}}],["getdescription",{"_index":2960,"title":{},"body":{"classes/Product.html":{}}}],["getemail",{"_index":2633,"title":{},"body":{"classes/Owner.html":{}}}],["getexpiredate",{"_index":591,"title":{},"body":{"classes/AdminRefreshToken.html":{},"classes/OwnerRefreshToken.html":{},"classes/UserRefreshToken.html":{}}}],["getidentifier",{"_index":592,"title":{},"body":{"classes/AdminRefreshToken.html":{},"classes/OwnerRefreshToken.html":{},"classes/UserRefreshToken.html":{}}}],["getintervals",{"_index":3283,"title":{},"body":{"injectables/TasksService.html":{}}}],["getisactivated",{"_index":2634,"title":{},"body":{"classes/Owner.html":{}}}],["getlocation",{"_index":1039,"title":{},"body":{"controllers/AppController.html":{}}}],["getlocation(request",{"_index":1051,"title":{},"body":{"controllers/AppController.html":{}}}],["getname",{"_index":2635,"title":{},"body":{"classes/Owner.html":{}}}],["getorder",{"_index":2601,"title":{},"body":{"classes/OrderProduct.html":{}}}],["getorderproducts",{"_index":2577,"title":{},"body":{"classes/Order.html":{}}}],["getorders",{"_index":2961,"title":{},"body":{"classes/Product.html":{}}}],["getorderstatus",{"_index":2578,"title":{},"body":{"classes/Order.html":{}}}],["getowner",{"_index":2805,"title":{},"body":{"classes/OwnerRefreshToken.html":{}}}],["getowneragent",{"_index":2636,"title":{},"body":{"classes/Owner.html":{},"classes/OwnerRefreshToken.html":{}}}],["getownerbyemail",{"_index":2833,"title":{},"body":{"injectables/OwnerService.html":{}}}],["getownerbyemail(email",{"_index":2854,"title":{},"body":{"injectables/OwnerService.html":{}}}],["getownerbyid",{"_index":2834,"title":{},"body":{"injectables/OwnerService.html":{}}}],["getownerbyid(id",{"_index":2856,"title":{},"body":{"injectables/OwnerService.html":{}}}],["getownerbyphonenumber",{"_index":2835,"title":{},"body":{"injectables/OwnerService.html":{}}}],["getownerbyphonenumber(phonenumber",{"_index":2858,"title":{},"body":{"injectables/OwnerService.html":{}}}],["getownerid",{"_index":2081,"title":{},"body":{"classes/Currencies.html":{},"classes/OwnerRefreshToken.html":{},"classes/Product.html":{}}}],["getownerrefreshtokens",{"_index":2637,"title":{},"body":{"classes/Owner.html":{}}}],["getowners",{"_index":3197,"title":{},"body":{"classes/Role.html":{}}}],["getpassword",{"_index":2638,"title":{},"body":{"classes/Owner.html":{}}}],["getphonenumber",{"_index":2639,"title":{},"body":{"classes/Owner.html":{}}}],["getproduct",{"_index":1528,"title":{},"body":{"classes/CartProduct.html":{},"classes/OrderProduct.html":{}}}],["getproducts",{"_index":1485,"title":{},"body":{"classes/Cart.html":{},"classes/Category.html":{},"classes/Colour.html":{},"classes/Owner.html":{}}}],["getresettoken",{"_index":444,"title":{},"body":{"injectables/AdminJwtRefreshService.html":{},"classes/Owner.html":{},"injectables/OwnerJwtRefreshService.html":{}}}],["getresettokenexpiration",{"_index":2640,"title":{},"body":{"classes/Owner.html":{}}}],["getrolebyvalue",{"_index":3218,"title":{},"body":{"controllers/RolesController.html":{},"injectables/RolesService.html":{}}}],["getrolebyvalue(@param('value",{"_index":3238,"title":{},"body":{"controllers/RolesController.html":{}}}],["getrolebyvalue(value",{"_index":3226,"title":{},"body":{"controllers/RolesController.html":{},"injectables/RolesService.html":{}}}],["getsurname",{"_index":2641,"title":{},"body":{"classes/Owner.html":{}}}],["getsymbolfromcurrency",{"_index":2124,"title":{},"body":{"injectables/CurrencyService.html":{},"injectables/LocationMiddleware.html":{}}}],["getsymbolfromcurrency(currrencycode",{"_index":2156,"title":{},"body":{"injectables/CurrencyService.html":{}}}],["gettelegramconfig",{"_index":1180,"title":{},"body":{"modules/AppModule.html":{}}}],["gettimeouts",{"_index":3284,"title":{},"body":{"injectables/TasksService.html":{}}}],["getting",{"_index":168,"title":{"index.html":{}},"body":{"controllers/AdminController.html":{},"controllers/AuthController.html":{},"controllers/RolesController.html":{},"controllers/UsersController.html":{}}}],["gettitle",{"_index":2962,"title":{},"body":{"classes/Product.html":{}}}],["gettracker",{"_index":3395,"title":{},"body":{"injectables/ThrottlerBehindProxyGuard.html":{}}}],["gettracker(req",{"_index":3396,"title":{},"body":{"injectables/ThrottlerBehindProxyGuard.html":{}}}],["getuser",{"_index":1486,"title":{},"body":{"classes/Cart.html":{},"classes/Order.html":{},"classes/UserRefreshToken.html":{}}}],["getuserbyemail",{"_index":3580,"title":{},"body":{"injectables/UsersService.html":{}}}],["getuserbyemail(email",{"_index":3597,"title":{},"body":{"injectables/UsersService.html":{}}}],["getuserbyid",{"_index":3581,"title":{},"body":{"injectables/UsersService.html":{}}}],["getuserbyid(id",{"_index":3599,"title":{},"body":{"injectables/UsersService.html":{}}}],["getuserbyphonenumber",{"_index":3582,"title":{},"body":{"injectables/UsersService.html":{}}}],["getuserbyphonenumber(phonenumber",{"_index":3601,"title":{},"body":{"injectables/UsersService.html":{}}}],["getuserid",{"_index":3490,"title":{},"body":{"classes/UserRefreshToken.html":{}}}],["getusers",{"_index":3198,"title":{},"body":{"classes/Role.html":{}}}],["gi",{"_index":2036,"title":{},"body":{"classes/CreateProductDto.html":{},"classes/CreateReviewDto.html":{},"classes/Nested.html":{},"classes/Nested-1.html":{},"classes/UpdateProductDto.html":{}}}],["gi)@isstring",{"_index":2048,"title":{},"body":{"classes/CreateReviewDto.html":{}}}],["global",{"_index":3367,"title":{},"body":{"modules/TelegramModule.html":{}}}],["globalinterceptor",{"_index":1173,"title":{"injectables/GlobalInterceptor.html":{}},"body":{"modules/AppModule.html":{},"modules/CoreModule.html":{},"injectables/GlobalInterceptor.html":{}}}],["graph",{"_index":3828,"title":{},"body":{"modules.html":{}}}],["grow",{"_index":3805,"title":{},"body":{"index.html":{}}}],["guard",{"_index":79,"title":{"guards/AddContentGuard.html":{},"guards/AdminGuard.html":{},"guards/AuthFerfershGuard.html":{},"guards/EditContentGuard.html":{},"guards/EditWebsiteGuard.html":{},"guards/JwtAuthGuard.html":{},"guards/OwnerAdminGuard.html":{},"guards/RefreshAuthGuard.html":{},"guards/RolesGuard.html":{},"guards/UserGuard.html":{}},"body":{}}],["guardinterval",{"_index":1233,"title":{},"body":{"modules/AppModule.html":{}}}],["guards",{"_index":81,"title":{},"body":{"guards/AddContentGuard.html":{},"guards/AdminGuard.html":{},"guards/AuthFerfershGuard.html":{},"guards/EditContentGuard.html":{},"guards/EditWebsiteGuard.html":{},"guards/JwtAuthGuard.html":{},"guards/OwnerAdminGuard.html":{},"guards/RefreshAuthGuard.html":{},"guards/RolesGuard.html":{},"guards/UserGuard.html":{},"overview.html":{}}}],["gzip,deflate,compress",{"_index":1126,"title":{},"body":{"controllers/AppController.html":{},"injectables/CurrencyService.html":{}}}],["h1",{"_index":2449,"title":{},"body":{"injectables/MailService.html":{}}}],["h2",{"_index":2450,"title":{},"body":{"injectables/MailService.html":{}}}],["h3",{"_index":2451,"title":{},"body":{"injectables/MailService.html":{}}}],["handler.filter",{"_index":228,"title":{},"body":{"controllers/AdminController.html":{},"controllers/AuthController.html":{},"controllers/CardController.html":{},"controllers/CategoriesController.html":{},"controllers/ColoursController.html":{},"controllers/OrdersController.html":{},"controllers/ReviewsController.html":{},"controllers/RolesController.html":{},"controllers/UsersController.html":{}}}],["handler.filter.ts",{"_index":896,"title":{},"body":{"classes/ApiErrorExceptionFilter.html":{}}}],["handler.filter.ts:7",{"_index":897,"title":{},"body":{"classes/ApiErrorExceptionFilter.html":{}}}],["handletokendeletedevent",{"_index":1137,"title":{},"body":{"injectables/AppListener.html":{}}}],["handletokendeletedevent(event",{"_index":1138,"title":{},"body":{"injectables/AppListener.html":{}}}],["handletranscode",{"_index":2222,"title":{},"body":{"classes/GarbageCollectingProcessor.html":{}}}],["handletranscode(job",{"_index":2225,"title":{},"body":{"classes/GarbageCollectingProcessor.html":{}}}],["hashedpassword",{"_index":824,"title":{},"body":{"injectables/AdminService.html":{},"injectables/OwnerService.html":{},"injectables/UsersService.html":{}}}],["hasmany",{"_index":1506,"title":{},"body":{"classes/Cart.html":{},"classes/Order.html":{},"classes/Owner.html":{}}}],["hasmany(undefined",{"_index":1489,"title":{},"body":{"classes/Cart.html":{},"classes/Order.html":{},"classes/Owner.html":{}}}],["header",{"_index":2457,"title":{},"body":{"injectables/MailService.html":{}}}],["headers",{"_index":1123,"title":{},"body":{"controllers/AppController.html":{},"injectables/AuthMiddleware.html":{},"injectables/CorsMiddleware.html":{},"injectables/CurrencyService.html":{},"injectables/ProductMiddleware.html":{},"interfaces/RequestHeaders.html":{},"injectables/UserMiddleware.html":{},"injectables/UserMiddleware-1.html":{}}}],["height:0",{"_index":2430,"title":{},"body":{"injectables/MailService.html":{}}}],["height:100%;}.es",{"_index":2411,"title":{},"body":{"injectables/MailService.html":{}}}],["height:120%!important",{"_index":2452,"title":{},"body":{"injectables/MailService.html":{}}}],["height:150%!important",{"_index":2448,"title":{},"body":{"injectables/MailService.html":{}}}],["height:auto!important",{"_index":2490,"title":{},"body":{"injectables/MailService.html":{}}}],["height:inherit!important",{"_index":2511,"title":{},"body":{"injectables/MailService.html":{}}}],["height:inherit!important;}.es",{"_index":2423,"title":{},"body":{"injectables/MailService.html":{}}}],["hello",{"_index":1115,"title":{},"body":{"controllers/AppController.html":{}}}],["helmet",{"_index":3726,"title":{},"body":{"dependencies.html":{}}}],["help",{"_index":2530,"title":{},"body":{"injectables/MailService.html":{}}}],["here",{"_index":3815,"title":{},"body":{"index.html":{}}}],["hex",{"_index":1689,"title":{},"body":{"interfaces/CategoryCreationAtrb.html":{},"classes/Colour.html":{},"interfaces/ColourCreationAtrb.html":{},"injectables/ColoursService.html":{},"classes/CreateColourDto.html":{},"interfaces/ProductCreationAttrs.html":{},"interfaces/ReturnedCategory.html":{},"interfaces/ReturnedColour.html":{},"interfaces/ReturnedProduct.html":{},"interfaces/ReturnedProducts.html":{},"interfaces/ReturnedReview.html":{},"interfaces/ReviewCreationAtrb.html":{},"classes/UpdateColourDto.html":{}}}],["hexes",{"_index":2957,"title":{},"body":{"classes/Product.html":{}}}],["hidden",{"_index":2425,"title":{},"body":{"injectables/MailService.html":{}}}],["hide:all;}[data",{"_index":2431,"title":{},"body":{"injectables/MailService.html":{}}}],["host",{"_index":857,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"classes/ApiErrorExceptionFilter.html":{},"classes/ApiExceptionFilter.html":{},"modules/AppModule.html":{},"injectables/CorsMiddleware.html":{},"classes/HttpExceptionFilter.html":{},"modules/MailModule.html":{},"interfaces/RequestHeaders.html":{}}}],["host.switchtohttp",{"_index":864,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"classes/ApiErrorExceptionFilter.html":{},"classes/ApiExceptionFilter.html":{},"classes/HttpExceptionFilter.html":{}}}],["hstore",{"_index":3742,"title":{},"body":{"dependencies.html":{}}}],["html",{"_index":2396,"title":{},"body":{"injectables/MailService.html":{}}}],["http",{"_index":1857,"title":{},"body":{"injectables/CorsMiddleware.html":{},"interfaces/RequestHeaders.html":{}}}],["http://sdgdgsgsfhd_rh;eh",{"_index":2653,"title":{},"body":{"classes/Owner.html":{}}}],["httpadapter",{"_index":861,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["httpadapter.getrequesturl(ctx.getrequest",{"_index":872,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["httpadapter.reply(ctx.getresponse",{"_index":873,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["httpadapterhost",{"_index":853,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["httpcode",{"_index":188,"title":{},"body":{"controllers/AdminController.html":{},"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/CategoriesController.html":{},"controllers/ColoursController.html":{},"controllers/ReviewsController.html":{},"controllers/RolesController.html":{},"controllers/UsersController.html":{}}}],["httpcode(200",{"_index":1070,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/CategoriesController.html":{},"controllers/ColoursController.html":{}}}],["httpcode(201",{"_index":248,"title":{},"body":{"controllers/AdminController.html":{},"controllers/AuthController.html":{},"controllers/CategoriesController.html":{},"controllers/ColoursController.html":{},"controllers/ReviewsController.html":{},"controllers/RolesController.html":{},"controllers/UsersController.html":{}}}],["httpcode(202",{"_index":253,"title":{},"body":{"controllers/AdminController.html":{},"controllers/AuthController.html":{}}}],["httpcode(204",{"_index":1374,"title":{},"body":{"controllers/AuthController.html":{}}}],["httpexception",{"_index":856,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"injectables/FilesService.html":{},"classes/HttpExceptionFilter.html":{},"classes/ValidationException.html":{},"interfaces/fileCreated.html":{}}}],["httpexception(err.message",{"_index":2204,"title":{},"body":{"injectables/FilesService.html":{},"interfaces/fileCreated.html":{}}}],["httpexceptionfilter",{"_index":1412,"title":{"classes/HttpExceptionFilter.html":{}},"body":{"modules/AuthModule.html":{},"classes/HttpExceptionFilter.html":{}}}],["httpmodule",{"_index":554,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CoreModule.html":{},"modules/OwnerModule.html":{},"modules/ProductModule.html":{},"modules/RolesModule.html":{},"modules/UsersModule.html":{}}}],["httpmodule.register",{"_index":1201,"title":{},"body":{"modules/AppModule.html":{},"modules/OwnerModule.html":{}}}],["httponly",{"_index":1075,"title":{},"body":{"controllers/AppController.html":{}}}],["https://nestjs.com",{"_index":3821,"title":{},"body":{"index.html":{}}}],["httpservice",{"_index":1066,"title":{},"body":{"controllers/AppController.html":{},"injectables/CurrencyService.html":{}}}],["httpstatus",{"_index":33,"title":{},"body":{"injectables/ActivateMiddleware.html":{},"guards/AddContentGuard.html":{},"guards/AdminGuard.html":{},"injectables/AdminJwtRefreshService.html":{},"injectables/AdminService.html":{},"injectables/AdminUserMiddleware.html":{},"classes/AllExceptionsFilter.html":{},"classes/ApiError.html":{},"classes/ApiException.html":{},"guards/AuthFerfershGuard.html":{},"classes/BadRequestError.html":{},"injectables/CategoriesService.html":{},"injectables/ColoursService.html":{},"guards/EditContentGuard.html":{},"guards/EditWebsiteGuard.html":{},"injectables/FilesService.html":{},"injectables/InitializeEmailMiddleware.html":{},"injectables/InitializeUserMiddleware.html":{},"guards/JwtAuthGuard.html":{},"injectables/MailService.html":{},"classes/NotFoundError.html":{},"guards/OwnerAdminGuard.html":{},"injectables/OwnerJwtRefreshService.html":{},"injectables/OwnerService.html":{},"guards/RefreshAuthGuard.html":{},"guards/RolesGuard.html":{},"injectables/UserAdminMiddleware.html":{},"guards/UserGuard.html":{},"injectables/UserJwtRefreshTokenService.html":{},"injectables/UsersService.html":{},"classes/ValidationException.html":{},"interfaces/fileCreated.html":{}}}],["httpstatus.bad_request",{"_index":66,"title":{},"body":{"injectables/ActivateMiddleware.html":{},"guards/AdminGuard.html":{},"injectables/AdminJwtRefreshService.html":{},"injectables/AdminService.html":{},"injectables/AdminUserMiddleware.html":{},"classes/ApiException.html":{},"injectables/CategoriesService.html":{},"injectables/ColoursService.html":{},"injectables/InitializeEmailMiddleware.html":{},"injectables/InitializeUserMiddleware.html":{},"guards/OwnerAdminGuard.html":{},"injectables/OwnerJwtRefreshService.html":{},"injectables/OwnerService.html":{},"guards/RefreshAuthGuard.html":{},"injectables/UserAdminMiddleware.html":{},"guards/UserGuard.html":{},"injectables/UserJwtRefreshTokenService.html":{},"injectables/UsersService.html":{},"classes/ValidationException.html":{}}}],["httpstatus.forbidden",{"_index":1386,"title":{},"body":{"guards/AuthFerfershGuard.html":{}}}],["httpstatus.internal_server_error",{"_index":396,"title":{},"body":{"injectables/AdminJwtRefreshService.html":{},"classes/AllExceptionsFilter.html":{},"classes/ApiException.html":{},"injectables/FilesService.html":{},"injectables/OwnerJwtRefreshService.html":{},"injectables/UserJwtRefreshTokenService.html":{},"interfaces/fileCreated.html":{}}}],["httpstatus.not_found",{"_index":403,"title":{},"body":{"injectables/AdminJwtRefreshService.html":{},"injectables/AdminService.html":{},"injectables/AdminUserMiddleware.html":{},"classes/ApiException.html":{},"guards/AuthFerfershGuard.html":{},"injectables/CategoriesService.html":{},"injectables/ColoursService.html":{},"injectables/InitializeEmailMiddleware.html":{},"injectables/MailService.html":{},"injectables/OwnerJwtRefreshService.html":{},"injectables/OwnerService.html":{},"injectables/UserAdminMiddleware.html":{},"injectables/UserJwtRefreshTokenService.html":{},"injectables/UsersService.html":{}}}],["httpstatus.unauthorized",{"_index":109,"title":{},"body":{"guards/AddContentGuard.html":{},"guards/AdminGuard.html":{},"injectables/AdminService.html":{},"classes/ApiException.html":{},"guards/AuthFerfershGuard.html":{},"guards/EditContentGuard.html":{},"guards/EditWebsiteGuard.html":{},"guards/JwtAuthGuard.html":{},"guards/OwnerAdminGuard.html":{},"injectables/OwnerService.html":{},"guards/RefreshAuthGuard.html":{},"guards/RolesGuard.html":{},"guards/UserGuard.html":{},"injectables/UsersService.html":{}}}],["id",{"_index":309,"title":{},"body":{"interfaces/AdminInterface.html":{},"injectables/AdminJwtRefreshService.html":{},"classes/AdminRefreshToken.html":{},"interfaces/AdminRefreshTokenCreationAttrbs.html":{},"injectables/AdminService.html":{},"interfaces/AdmincreationAttrbs.html":{},"injectables/AppClusterService.html":{},"controllers/AuthController.html":{},"guards/AuthFerfershGuard.html":{},"interfaces/AuthUser.html":{},"classes/BookmarksProducts.html":{},"classes/Cart.html":{},"classes/CartProduct.html":{},"injectables/CategoriesService.html":{},"classes/Category.html":{},"interfaces/CategoryCreationAtrb.html":{},"interfaces/CodeDto.html":{},"classes/Colour.html":{},"interfaces/ColourCreationAtrb.html":{},"injectables/ColoursService.html":{},"classes/Currencies.html":{},"interfaces/InitializeUser.html":{},"interfaces/Msg.html":{},"classes/Order.html":{},"classes/OrderProduct.html":{},"classes/Owner.html":{},"injectables/OwnerJwtRefreshService.html":{},"classes/OwnerRefreshToken.html":{},"injectables/OwnerService.html":{},"interfaces/Payload.html":{},"classes/Product.html":{},"classes/ProductCategories.html":{},"classes/ProductColours.html":{},"interfaces/ProductCreationAttrs.html":{},"classes/ProductReviews.html":{},"interfaces/ReturnedAdmin.html":{},"interfaces/ReturnedCategory.html":{},"interfaces/ReturnedColour.html":{},"interfaces/ReturnedOwner.html":{},"interfaces/ReturnedProduct.html":{},"interfaces/ReturnedProducts.html":{},"interfaces/ReturnedReview.html":{},"interfaces/ReturnedUser.html":{},"classes/Review.html":{},"interfaces/ReviewCreationAtrb.html":{},"injectables/ReviewsService.html":{},"classes/Role.html":{},"interfaces/RolecreationAttrbs.html":{},"interfaces/Tokens.html":{},"interfaces/UserInterface.html":{},"injectables/UserJwtRefreshTokenService.html":{},"interfaces/UserRefreshCreationAttrbs.html":{},"classes/UserRefreshToken.html":{},"classes/UserRoles.html":{},"interfaces/UsercreationAttrbs.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"interfaces/ValidateUser.html":{},"classes/WatchedProducts.html":{}}}],["identifier",{"_index":142,"title":{},"body":{"classes/AddRoleDto.html":{},"injectables/AdminJwtRefreshService.html":{},"classes/AdminRefreshToken.html":{},"classes/BanUserDto.html":{},"classes/CreateAccessTokenDto.html":{},"classes/CreateAdminRefreshTokenDto.html":{},"classes/CreateOwnerRefreshTokenDto.html":{},"classes/CreateUserRefreshTokenDto.html":{},"classes/Currencies.html":{},"classes/Owner.html":{},"injectables/OwnerJwtRefreshService.html":{},"classes/OwnerRefreshToken.html":{},"classes/Role.html":{},"injectables/TasksService.html":{},"injectables/UserJwtRefreshTokenService.html":{},"classes/UserRefreshToken.html":{},"classes/UserRoles.html":{}}}],["identifier'})@column({type",{"_index":627,"title":{},"body":{"classes/AdminRefreshToken.html":{},"classes/Currencies.html":{},"classes/Owner.html":{},"classes/OwnerRefreshToken.html":{},"classes/Role.html":{},"classes/UserRefreshToken.html":{},"classes/UserRoles.html":{}}}],["identifier'})@isnumber",{"_index":130,"title":{},"body":{"classes/AddRoleDto.html":{},"classes/BanUserDto.html":{},"classes/CreateAccessTokenDto.html":{},"classes/CreateAdminRefreshTokenDto.html":{},"classes/CreateOwnerRefreshTokenDto.html":{},"classes/CreateUserRefreshTokenDto.html":{}}}],["identifier'})@isuuid(4)@column({type",{"_index":636,"title":{},"body":{"classes/AdminRefreshToken.html":{},"classes/OwnerRefreshToken.html":{},"classes/UserRefreshToken.html":{}}}],["ignoreerrors",{"_index":1826,"title":{},"body":{"modules/CoreModule.html":{}}}],["image",{"_index":1254,"title":{},"body":{"modules/AppModule.html":{},"injectables/FilesService.html":{},"interfaces/fileCreated.html":{}}}],["images",{"_index":1682,"title":{},"body":{"interfaces/CategoryCreationAtrb.html":{},"interfaces/ColourCreationAtrb.html":{},"classes/Product.html":{},"interfaces/ProductCreationAttrs.html":{},"interfaces/ReturnedCategory.html":{},"interfaces/ReturnedColour.html":{},"interfaces/ReturnedProduct.html":{},"interfaces/ReturnedProducts.html":{},"interfaces/ReturnedReview.html":{},"interfaces/ReviewCreationAtrb.html":{}}}],["imagespath",{"_index":2215,"title":{},"body":{"injectables/FilesService.html":{},"interfaces/fileCreated.html":{}}}],["imagetype",{"_index":1855,"title":{},"body":{"injectables/CorsMiddleware.html":{},"interfaces/RequestHeaders.html":{}}}],["img",{"_index":1876,"title":{},"body":{"injectables/CorsMiddleware.html":{},"injectables/MailService.html":{},"interfaces/RequestHeaders.html":{}}}],["implements",{"_index":52,"title":{},"body":{"injectables/ActivateMiddleware.html":{},"guards/AddContentGuard.html":{},"guards/AdminGuard.html":{},"modules/AdminModule.html":{},"injectables/AdminUserMiddleware.html":{},"classes/AllExceptionsFilter.html":{},"classes/ApiErrorExceptionFilter.html":{},"classes/ApiExceptionFilter.html":{},"modules/AppModule.html":{},"guards/AuthFerfershGuard.html":{},"injectables/AuthMiddleware.html":{},"modules/AuthModule.html":{},"modules/CategoriesColoursModule.html":{},"injectables/CorsMiddleware.html":{},"guards/EditContentGuard.html":{},"guards/EditWebsiteGuard.html":{},"injectables/GlobalInterceptor.html":{},"classes/HttpExceptionFilter.html":{},"injectables/InitializeEmailMiddleware.html":{},"injectables/InitializeUserMiddleware.html":{},"guards/JwtAuthGuard.html":{},"injectables/LocationMiddleware.html":{},"classes/MatchConstraint.html":{},"guards/OwnerAdminGuard.html":{},"classes/ParseFormDataJsonPipe.html":{},"injectables/ParseJsonPipe.html":{},"injectables/ProductMiddleware.html":{},"modules/ProductModule.html":{},"guards/RefreshAuthGuard.html":{},"interfaces/RequestHeaders.html":{},"modules/ReviewsModule.html":{},"guards/RolesGuard.html":{},"modules/RolesModule.html":{},"injectables/UserAdminMiddleware.html":{},"guards/UserGuard.html":{},"injectables/UserMiddleware.html":{},"injectables/UserMiddleware-1.html":{},"modules/UsersModule.html":{},"injectables/ValidateDto.html":{}}}],["import",{"_index":32,"title":{},"body":{"injectables/ActivateMiddleware.html":{},"guards/AddContentGuard.html":{},"classes/AddRoleDto.html":{},"controllers/AdminController.html":{},"guards/AdminGuard.html":{},"injectables/AdminJwtRefreshService.html":{},"modules/AdminModule.html":{},"classes/AdminRefreshToken.html":{},"injectables/AdminService.html":{},"injectables/AdminUserMiddleware.html":{},"classes/AllExceptionsFilter.html":{},"classes/ApiError.html":{},"classes/ApiErrorExceptionFilter.html":{},"classes/ApiException.html":{},"classes/ApiExceptionFilter.html":{},"injectables/AppClusterService.html":{},"controllers/AppController.html":{},"injectables/AppListener.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"guards/AuthFerfershGuard.html":{},"injectables/AuthMiddleware.html":{},"modules/AuthModule.html":{},"interfaces/AuthUser.html":{},"classes/BadRequestError.html":{},"classes/BanUserDto.html":{},"classes/BookmarksProducts.html":{},"controllers/CardController.html":{},"injectables/CardService.html":{},"classes/Cart.html":{},"modules/CartModule.html":{},"classes/CartProduct.html":{},"modules/CategoriesColoursModule.html":{},"controllers/CategoriesController.html":{},"injectables/CategoriesService.html":{},"classes/Category.html":{},"classes/ChangeDto.html":{},"interfaces/CodeDto.html":{},"classes/Colour.html":{},"controllers/ColoursController.html":{},"injectables/ColoursService.html":{},"modules/CoreModule.html":{},"injectables/CorsMiddleware.html":{},"classes/CreateAccessTokenDto.html":{},"classes/CreateAdminDto.html":{},"classes/CreateAdminRefreshTokenDto.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateColourDto.html":{},"classes/CreateOwnerDto.html":{},"classes/CreateOwnerRefreshTokenDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateReviewDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserRefreshTokenDto.html":{},"classes/Currencies.html":{},"injectables/CurrencyService.html":{},"guards/EditContentGuard.html":{},"guards/EditWebsiteGuard.html":{},"injectables/FilesService.html":{},"classes/GarbageCollectingProcessor.html":{},"injectables/GlobalInterceptor.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/ITelegramModuleAsyncOptions.html":{},"interfaces/ITelegramOptions.html":{},"injectables/InitializeEmailMiddleware.html":{},"injectables/InitializeUserMiddleware.html":{},"guards/JwtAuthGuard.html":{},"injectables/LocationMiddleware.html":{},"classes/LoginDto.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"classes/MatchConstraint.html":{},"interfaces/Msg.html":{},"classes/Nested.html":{},"classes/Nested-1.html":{},"classes/NotFoundError.html":{},"classes/Order.html":{},"classes/OrderProduct.html":{},"controllers/OrdersController.html":{},"modules/OrdersModule.html":{},"injectables/OrdersService.html":{},"classes/Owner.html":{},"guards/OwnerAdminGuard.html":{},"injectables/OwnerJwtRefreshService.html":{},"modules/OwnerModule.html":{},"classes/OwnerRefreshToken.html":{},"injectables/OwnerService.html":{},"classes/ParseFormDataJsonPipe.html":{},"injectables/ParseJsonPipe.html":{},"interfaces/Payload.html":{},"classes/Product.html":{},"classes/ProductCategories.html":{},"classes/ProductColours.html":{},"injectables/ProductMiddleware.html":{},"modules/ProductModule.html":{},"classes/ProductReviews.html":{},"classes/QueryFilterDto.html":{},"guards/RefreshAuthGuard.html":{},"interfaces/RequestHeaders.html":{},"classes/RequestValidator.html":{},"classes/ResetDto.html":{},"interfaces/ReturnedAdmin.html":{},"interfaces/ReturnedOwner.html":{},"interfaces/ReturnedUser.html":{},"classes/Review.html":{},"controllers/ReviewsController.html":{},"modules/ReviewsModule.html":{},"injectables/ReviewsService.html":{},"classes/Role.html":{},"controllers/RolesController.html":{},"guards/RolesGuard.html":{},"modules/RolesModule.html":{},"injectables/RolesService.html":{},"classes/SignupDto.html":{},"injectables/TasksService.html":{},"modules/TelegramModule.html":{},"injectables/TelegramService.html":{},"injectables/ThrottlerBehindProxyGuard.html":{},"interfaces/Tokens.html":{},"classes/UpdateCategoryDto.html":{},"classes/UpdateColourDto.html":{},"classes/UpdateProductDto.html":{},"classes/UpdateUserDto.html":{},"injectables/UserAdminMiddleware.html":{},"guards/UserGuard.html":{},"injectables/UserJwtRefreshTokenService.html":{},"injectables/UserMiddleware.html":{},"injectables/UserMiddleware-1.html":{},"classes/UserRefreshToken.html":{},"classes/UserRoles.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"injectables/ValidateDto.html":{},"classes/ValidationException.html":{},"classes/WatchedProducts.html":{},"interfaces/fileCreated.html":{}}}],["important",{"_index":2401,"title":{},"body":{"injectables/MailService.html":{}}}],["imports",{"_index":557,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CartModule.html":{},"modules/CategoriesColoursModule.html":{},"modules/CoreModule.html":{},"modules/MailModule.html":{},"modules/OrdersModule.html":{},"modules/OwnerModule.html":{},"modules/ProductModule.html":{},"modules/ReviewsModule.html":{},"modules/RolesModule.html":{},"modules/TelegramModule.html":{},"modules/UsersModule.html":{}}}],["include",{"_index":743,"title":{},"body":{"injectables/AdminService.html":{},"injectables/CurrencyService.html":{},"injectables/OwnerService.html":{},"injectables/UsersService.html":{}}}],["includesubdomains",{"_index":2289,"title":{},"body":{"injectables/InitializeUserMiddleware.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"injectables/ActivateMiddleware.html":{},"guards/AddContentGuard.html":{},"classes/AddRoleDto.html":{},"controllers/AdminController.html":{},"guards/AdminGuard.html":{},"interfaces/AdminInterface.html":{},"injectables/AdminJwtRefreshService.html":{},"classes/AdminRefreshToken.html":{},"interfaces/AdminRefreshTokenCreationAttrbs.html":{},"injectables/AdminService.html":{},"injectables/AdminUserMiddleware.html":{},"interfaces/AdmincreationAttrbs.html":{},"classes/AllExceptionsFilter.html":{},"classes/ApiError.html":{},"classes/ApiErrorExceptionFilter.html":{},"classes/ApiException.html":{},"classes/ApiExceptionFilter.html":{},"injectables/AppClusterService.html":{},"controllers/AppController.html":{},"injectables/AppListener.html":{},"controllers/AuthController.html":{},"guards/AuthFerfershGuard.html":{},"injectables/AuthMiddleware.html":{},"interfaces/AuthUser.html":{},"classes/BadRequestError.html":{},"classes/BanUserDto.html":{},"classes/BookmarksProducts.html":{},"classes/Cart.html":{},"classes/CartProduct.html":{},"controllers/CategoriesController.html":{},"injectables/CategoriesService.html":{},"classes/Category.html":{},"interfaces/CategoryCreationAtrb.html":{},"classes/ChangeDto.html":{},"interfaces/CodeDto.html":{},"classes/Colour.html":{},"interfaces/ColourCreationAtrb.html":{},"controllers/ColoursController.html":{},"injectables/ColoursService.html":{},"injectables/CorsMiddleware.html":{},"classes/CreateAccessTokenDto.html":{},"classes/CreateAdminDto.html":{},"classes/CreateAdminRefreshTokenDto.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateColourDto.html":{},"classes/CreateOwnerDto.html":{},"classes/CreateOwnerRefreshTokenDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateReviewDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserRefreshTokenDto.html":{},"classes/Currencies.html":{},"injectables/CurrencyService.html":{},"guards/EditContentGuard.html":{},"guards/EditWebsiteGuard.html":{},"injectables/FilesService.html":{},"classes/GarbageCollectingProcessor.html":{},"injectables/GlobalInterceptor.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/ITelegramModuleAsyncOptions.html":{},"interfaces/ITelegramOptions.html":{},"injectables/InitializeEmailMiddleware.html":{},"interfaces/InitializeUser.html":{},"injectables/InitializeUserMiddleware.html":{},"guards/JwtAuthGuard.html":{},"classes/JwtRefreshTokenDeletedEvent.html":{},"injectables/LocationMiddleware.html":{},"classes/LoginDto.html":{},"injectables/MailService.html":{},"classes/MatchConstraint.html":{},"interfaces/Msg.html":{},"classes/Nested.html":{},"classes/Nested-1.html":{},"classes/NotFoundError.html":{},"classes/Order.html":{},"classes/OrderProduct.html":{},"classes/Owner.html":{},"guards/OwnerAdminGuard.html":{},"interfaces/OwnerCreationAttrbs.html":{},"injectables/OwnerJwtRefreshService.html":{},"classes/OwnerRefreshToken.html":{},"interfaces/OwnerRefreshTokenCreationAttrbs.html":{},"injectables/OwnerService.html":{},"classes/ParseFormDataJsonPipe.html":{},"injectables/ParseJsonPipe.html":{},"interfaces/Payload.html":{},"classes/Product.html":{},"classes/ProductCategories.html":{},"classes/ProductColours.html":{},"interfaces/ProductCreationAttrs.html":{},"injectables/ProductMiddleware.html":{},"classes/ProductReviews.html":{},"classes/QueryFilterDto.html":{},"guards/RefreshAuthGuard.html":{},"interfaces/RequestHeaders.html":{},"classes/RequestValidator.html":{},"classes/ResetDto.html":{},"interfaces/ReturnedAdmin.html":{},"interfaces/ReturnedCategory.html":{},"interfaces/ReturnedColour.html":{},"interfaces/ReturnedOwner.html":{},"interfaces/ReturnedProduct.html":{},"interfaces/ReturnedProducts.html":{},"interfaces/ReturnedReview.html":{},"interfaces/ReturnedUser.html":{},"classes/Review.html":{},"interfaces/ReviewCreationAtrb.html":{},"controllers/ReviewsController.html":{},"injectables/ReviewsService.html":{},"classes/Role.html":{},"interfaces/RolecreationAttrbs.html":{},"controllers/RolesController.html":{},"guards/RolesGuard.html":{},"injectables/RolesService.html":{},"classes/SignupDto.html":{},"injectables/TasksService.html":{},"injectables/TelegramService.html":{},"injectables/ThrottlerBehindProxyGuard.html":{},"interfaces/Tokens.html":{},"classes/UpdateCategoryDto.html":{},"classes/UpdateColourDto.html":{},"classes/UpdateProductDto.html":{},"classes/UpdateUserDto.html":{},"injectables/UserAdminMiddleware.html":{},"guards/UserGuard.html":{},"interfaces/UserInterface.html":{},"injectables/UserJwtRefreshTokenService.html":{},"injectables/UserMiddleware.html":{},"injectables/UserMiddleware-1.html":{},"interfaces/UserRefreshCreationAttrbs.html":{},"classes/UserRefreshToken.html":{},"classes/UserRoles.html":{},"interfaces/UsercreationAttrbs.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"injectables/ValidateDto.html":{},"interfaces/ValidateUser.html":{},"classes/ValidationException.html":{},"classes/WatchedProducts.html":{},"interfaces/fileCreated.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["indexable",{"_index":3093,"title":{},"body":{"interfaces/RequestHeaders.html":{}}}],["inestapplication",{"_index":987,"title":{},"body":{"injectables/AppClusterService.html":{},"interfaces/Msg.html":{}}}],["info",{"_index":3,"title":{},"body":{"injectables/ActivateMiddleware.html":{},"guards/AddContentGuard.html":{},"classes/AddRoleDto.html":{},"controllers/AdminController.html":{},"guards/AdminGuard.html":{},"interfaces/AdminInterface.html":{},"injectables/AdminJwtRefreshService.html":{},"modules/AdminModule.html":{},"classes/AdminRefreshToken.html":{},"interfaces/AdminRefreshTokenCreationAttrbs.html":{},"injectables/AdminService.html":{},"injectables/AdminUserMiddleware.html":{},"interfaces/AdmincreationAttrbs.html":{},"classes/AllExceptionsFilter.html":{},"classes/ApiError.html":{},"classes/ApiErrorExceptionFilter.html":{},"classes/ApiException.html":{},"classes/ApiExceptionFilter.html":{},"injectables/AppClusterService.html":{},"controllers/AppController.html":{},"injectables/AppListener.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"guards/AuthFerfershGuard.html":{},"injectables/AuthMiddleware.html":{},"modules/AuthModule.html":{},"interfaces/AuthUser.html":{},"classes/BadRequestError.html":{},"classes/BanUserDto.html":{},"classes/BookmarksProducts.html":{},"controllers/CardController.html":{},"injectables/CardService.html":{},"classes/Cart.html":{},"modules/CartModule.html":{},"classes/CartProduct.html":{},"modules/CategoriesColoursModule.html":{},"controllers/CategoriesController.html":{},"injectables/CategoriesService.html":{},"classes/Category.html":{},"interfaces/CategoryCreationAtrb.html":{},"classes/ChangeDto.html":{},"interfaces/CodeDto.html":{},"classes/Colour.html":{},"interfaces/ColourCreationAtrb.html":{},"controllers/ColoursController.html":{},"injectables/ColoursService.html":{},"modules/CoreModule.html":{},"injectables/CorsMiddleware.html":{},"classes/CreateAccessTokenDto.html":{},"classes/CreateAdminDto.html":{},"classes/CreateAdminRefreshTokenDto.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateColourDto.html":{},"classes/CreateOwnerDto.html":{},"classes/CreateOwnerRefreshTokenDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateReviewDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserRefreshTokenDto.html":{},"classes/Currencies.html":{},"injectables/CurrencyService.html":{},"guards/EditContentGuard.html":{},"guards/EditWebsiteGuard.html":{},"injectables/FilesService.html":{},"classes/GarbageCollectingProcessor.html":{},"injectables/GlobalInterceptor.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/ITelegramModuleAsyncOptions.html":{},"interfaces/ITelegramOptions.html":{},"injectables/InitializeEmailMiddleware.html":{},"interfaces/InitializeUser.html":{},"injectables/InitializeUserMiddleware.html":{},"guards/JwtAuthGuard.html":{},"classes/JwtRefreshTokenDeletedEvent.html":{},"injectables/LocationMiddleware.html":{},"classes/LoginDto.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"classes/MatchConstraint.html":{},"interfaces/Msg.html":{},"classes/Nested.html":{},"classes/Nested-1.html":{},"classes/NotFoundError.html":{},"classes/Order.html":{},"classes/OrderProduct.html":{},"controllers/OrdersController.html":{},"modules/OrdersModule.html":{},"injectables/OrdersService.html":{},"classes/Owner.html":{},"guards/OwnerAdminGuard.html":{},"interfaces/OwnerCreationAttrbs.html":{},"injectables/OwnerJwtRefreshService.html":{},"modules/OwnerModule.html":{},"classes/OwnerRefreshToken.html":{},"interfaces/OwnerRefreshTokenCreationAttrbs.html":{},"injectables/OwnerService.html":{},"classes/ParseFormDataJsonPipe.html":{},"injectables/ParseJsonPipe.html":{},"interfaces/Payload.html":{},"classes/Product.html":{},"classes/ProductCategories.html":{},"classes/ProductColours.html":{},"interfaces/ProductCreationAttrs.html":{},"injectables/ProductMiddleware.html":{},"modules/ProductModule.html":{},"classes/ProductReviews.html":{},"classes/QueryFilterDto.html":{},"guards/RefreshAuthGuard.html":{},"interfaces/RequestHeaders.html":{},"classes/RequestValidator.html":{},"classes/ResetDto.html":{},"interfaces/ReturnedAdmin.html":{},"interfaces/ReturnedCategory.html":{},"interfaces/ReturnedColour.html":{},"interfaces/ReturnedOwner.html":{},"interfaces/ReturnedProduct.html":{},"interfaces/ReturnedProducts.html":{},"interfaces/ReturnedReview.html":{},"interfaces/ReturnedUser.html":{},"classes/Review.html":{},"interfaces/ReviewCreationAtrb.html":{},"controllers/ReviewsController.html":{},"modules/ReviewsModule.html":{},"injectables/ReviewsService.html":{},"classes/Role.html":{},"interfaces/RolecreationAttrbs.html":{},"controllers/RolesController.html":{},"guards/RolesGuard.html":{},"modules/RolesModule.html":{},"injectables/RolesService.html":{},"classes/SignupDto.html":{},"injectables/TasksService.html":{},"modules/TelegramModule.html":{},"injectables/TelegramService.html":{},"injectables/ThrottlerBehindProxyGuard.html":{},"interfaces/Tokens.html":{},"classes/UpdateCategoryDto.html":{},"classes/UpdateColourDto.html":{},"classes/UpdateProductDto.html":{},"classes/UpdateUserDto.html":{},"injectables/UserAdminMiddleware.html":{},"guards/UserGuard.html":{},"interfaces/UserInterface.html":{},"injectables/UserJwtRefreshTokenService.html":{},"injectables/UserMiddleware.html":{},"injectables/UserMiddleware-1.html":{},"interfaces/UserRefreshCreationAttrbs.html":{},"classes/UserRefreshToken.html":{},"classes/UserRoles.html":{},"interfaces/UsercreationAttrbs.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"injectables/ValidateDto.html":{},"interfaces/ValidateUser.html":{},"classes/ValidationException.html":{},"classes/WatchedProducts.html":{},"interfaces/fileCreated.html":{}}}],["info.messageid",{"_index":2534,"title":{},"body":{"injectables/MailService.html":{}}}],["infoblock",{"_index":2462,"title":{},"body":{"injectables/MailService.html":{}}}],["inherited",{"_index":1451,"title":{},"body":{"classes/BadRequestError.html":{},"classes/NotFoundError.html":{}}}],["initializeemailmiddleware",{"_index":1417,"title":{"injectables/InitializeEmailMiddleware.html":{}},"body":{"modules/AuthModule.html":{},"injectables/InitializeEmailMiddleware.html":{}}}],["initializeuser",{"_index":2274,"title":{"interfaces/InitializeUser.html":{}},"body":{"interfaces/InitializeUser.html":{},"interfaces/RolecreationAttrbs.html":{},"interfaces/UserInterface.html":{},"interfaces/UserRefreshCreationAttrbs.html":{},"interfaces/UsercreationAttrbs.html":{},"injectables/UsersService.html":{},"interfaces/ValidateUser.html":{}}}],["initializeuser(userdto",{"_index":3603,"title":{},"body":{"injectables/UsersService.html":{}}}],["initializeusermiddleware",{"_index":507,"title":{"injectables/InitializeUserMiddleware.html":{}},"body":{"modules/AdminModule.html":{},"modules/AuthModule.html":{},"modules/CategoriesColoursModule.html":{},"injectables/InitializeUserMiddleware.html":{},"modules/ProductModule.html":{},"modules/ReviewsModule.html":{},"modules/RolesModule.html":{},"modules/UsersModule.html":{}}}],["inject",{"_index":2258,"title":{},"body":{"interfaces/ITelegramModuleAsyncOptions.html":{},"interfaces/ITelegramOptions.html":{},"modules/TelegramModule.html":{},"injectables/TelegramService.html":{}}}],["injectable",{"_index":0,"title":{"injectables/ActivateMiddleware.html":{},"injectables/AdminJwtRefreshService.html":{},"injectables/AdminService.html":{},"injectables/AdminUserMiddleware.html":{},"injectables/AppClusterService.html":{},"injectables/AppListener.html":{},"injectables/AuthMiddleware.html":{},"injectables/CardService.html":{},"injectables/CategoriesService.html":{},"injectables/ColoursService.html":{},"injectables/CorsMiddleware.html":{},"injectables/CurrencyService.html":{},"injectables/FilesService.html":{},"injectables/GlobalInterceptor.html":{},"injectables/InitializeEmailMiddleware.html":{},"injectables/InitializeUserMiddleware.html":{},"injectables/LocationMiddleware.html":{},"injectables/MailService.html":{},"injectables/OrdersService.html":{},"injectables/OwnerJwtRefreshService.html":{},"injectables/OwnerService.html":{},"injectables/ParseJsonPipe.html":{},"injectables/ProductMiddleware.html":{},"injectables/ReviewsService.html":{},"injectables/RolesService.html":{},"injectables/TasksService.html":{},"injectables/TelegramService.html":{},"injectables/ThrottlerBehindProxyGuard.html":{},"injectables/UserAdminMiddleware.html":{},"injectables/UserJwtRefreshTokenService.html":{},"injectables/UserMiddleware.html":{},"injectables/UserMiddleware-1.html":{},"injectables/UsersService.html":{},"injectables/ValidateDto.html":{}},"body":{"injectables/ActivateMiddleware.html":{},"guards/AddContentGuard.html":{},"guards/AdminGuard.html":{},"injectables/AdminJwtRefreshService.html":{},"injectables/AdminService.html":{},"injectables/AdminUserMiddleware.html":{},"injectables/AppClusterService.html":{},"injectables/AppListener.html":{},"guards/AuthFerfershGuard.html":{},"injectables/AuthMiddleware.html":{},"injectables/CardService.html":{},"injectables/CategoriesService.html":{},"injectables/ColoursService.html":{},"injectables/CorsMiddleware.html":{},"injectables/CurrencyService.html":{},"guards/EditContentGuard.html":{},"guards/EditWebsiteGuard.html":{},"injectables/FilesService.html":{},"injectables/GlobalInterceptor.html":{},"injectables/InitializeEmailMiddleware.html":{},"injectables/InitializeUserMiddleware.html":{},"guards/JwtAuthGuard.html":{},"injectables/LocationMiddleware.html":{},"injectables/MailService.html":{},"interfaces/Msg.html":{},"injectables/OrdersService.html":{},"guards/OwnerAdminGuard.html":{},"injectables/OwnerJwtRefreshService.html":{},"injectables/OwnerService.html":{},"injectables/ParseJsonPipe.html":{},"injectables/ProductMiddleware.html":{},"guards/RefreshAuthGuard.html":{},"interfaces/RequestHeaders.html":{},"injectables/ReviewsService.html":{},"guards/RolesGuard.html":{},"injectables/RolesService.html":{},"injectables/TasksService.html":{},"injectables/TelegramService.html":{},"injectables/ThrottlerBehindProxyGuard.html":{},"injectables/UserAdminMiddleware.html":{},"guards/UserGuard.html":{},"injectables/UserJwtRefreshTokenService.html":{},"injectables/UserMiddleware.html":{},"injectables/UserMiddleware-1.html":{},"injectables/UsersService.html":{},"injectables/ValidateDto.html":{},"interfaces/fileCreated.html":{}}}],["injectables",{"_index":2,"title":{},"body":{"injectables/ActivateMiddleware.html":{},"injectables/AdminJwtRefreshService.html":{},"injectables/AdminService.html":{},"injectables/AdminUserMiddleware.html":{},"injectables/AppClusterService.html":{},"injectables/AppListener.html":{},"injectables/AuthMiddleware.html":{},"injectables/CardService.html":{},"injectables/CategoriesService.html":{},"injectables/ColoursService.html":{},"injectables/CorsMiddleware.html":{},"injectables/CurrencyService.html":{},"injectables/FilesService.html":{},"injectables/GlobalInterceptor.html":{},"injectables/InitializeEmailMiddleware.html":{},"injectables/InitializeUserMiddleware.html":{},"injectables/LocationMiddleware.html":{},"injectables/MailService.html":{},"injectables/OrdersService.html":{},"injectables/OwnerJwtRefreshService.html":{},"injectables/OwnerService.html":{},"injectables/ParseJsonPipe.html":{},"injectables/ProductMiddleware.html":{},"injectables/ReviewsService.html":{},"injectables/RolesService.html":{},"injectables/TasksService.html":{},"injectables/TelegramService.html":{},"injectables/ThrottlerBehindProxyGuard.html":{},"injectables/UserAdminMiddleware.html":{},"injectables/UserJwtRefreshTokenService.html":{},"injectables/UserMiddleware.html":{},"injectables/UserMiddleware-1.html":{},"injectables/UsersService.html":{},"injectables/ValidateDto.html":{},"overview.html":{}}}],["injectmodel",{"_index":37,"title":{},"body":{"injectables/ActivateMiddleware.html":{},"injectables/AdminJwtRefreshService.html":{},"injectables/AdminService.html":{},"injectables/CategoriesService.html":{},"injectables/ColoursService.html":{},"injectables/CurrencyService.html":{},"injectables/OwnerJwtRefreshService.html":{},"injectables/OwnerService.html":{},"injectables/ReviewsService.html":{},"injectables/RolesService.html":{},"injectables/UserJwtRefreshTokenService.html":{},"injectables/UsersService.html":{}}}],["injectmodel(admin",{"_index":53,"title":{},"body":{"injectables/ActivateMiddleware.html":{},"injectables/AdminService.html":{}}}],["injectmodel(adminrefreshtoken",{"_index":392,"title":{},"body":{"injectables/AdminJwtRefreshService.html":{}}}],["injectmodel(category",{"_index":1637,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["injectmodel(colour",{"_index":1780,"title":{},"body":{"injectables/ColoursService.html":{}}}],["injectmodel(currencies",{"_index":2126,"title":{},"body":{"injectables/CurrencyService.html":{},"injectables/OwnerService.html":{}}}],["injectmodel(owner",{"_index":56,"title":{},"body":{"injectables/ActivateMiddleware.html":{},"injectables/CurrencyService.html":{},"injectables/OwnerService.html":{}}}],["injectmodel(ownerrefreshtoken",{"_index":2762,"title":{},"body":{"injectables/OwnerJwtRefreshService.html":{}}}],["injectmodel(review",{"_index":3175,"title":{},"body":{"injectables/ReviewsService.html":{}}}],["injectmodel(user",{"_index":3615,"title":{},"body":{"injectables/UsersService.html":{}}}],["injectmodel(userrefreshtoken",{"_index":3467,"title":{},"body":{"injectables/UserJwtRefreshTokenService.html":{}}}],["inserttoken",{"_index":326,"title":{},"body":{"injectables/AdminJwtRefreshService.html":{},"injectables/OwnerJwtRefreshService.html":{},"injectables/UserJwtRefreshTokenService.html":{}}}],["inserttoken(adminid",{"_index":351,"title":{},"body":{"injectables/AdminJwtRefreshService.html":{}}}],["inserttoken(ownerid",{"_index":2750,"title":{},"body":{"injectables/OwnerJwtRefreshService.html":{}}}],["inserttoken(userid",{"_index":3454,"title":{},"body":{"injectables/UserJwtRefreshTokenService.html":{}}}],["installation",{"_index":3785,"title":{},"body":{"index.html":{}}}],["installrunning",{"_index":3787,"title":{},"body":{"index.html":{}}}],["instanceof",{"_index":295,"title":{},"body":{"guards/AdminGuard.html":{},"classes/AllExceptionsFilter.html":{},"injectables/GlobalInterceptor.html":{},"guards/OwnerAdminGuard.html":{},"injectables/OwnerService.html":{}}}],["intercept",{"_index":2239,"title":{},"body":{"injectables/GlobalInterceptor.html":{}}}],["intercept(context",{"_index":2240,"title":{},"body":{"injectables/GlobalInterceptor.html":{}}}],["interceptors/global.interceptor",{"_index":1808,"title":{},"body":{"modules/CoreModule.html":{}}}],["interface",{"_index":302,"title":{"interfaces/AdminInterface.html":{},"interfaces/AdminRefreshTokenCreationAttrbs.html":{},"interfaces/AdmincreationAttrbs.html":{},"interfaces/AuthUser.html":{},"interfaces/CategoryCreationAtrb.html":{},"interfaces/CodeDto.html":{},"interfaces/ColourCreationAtrb.html":{},"interfaces/ITelegramModuleAsyncOptions.html":{},"interfaces/ITelegramOptions.html":{},"interfaces/InitializeUser.html":{},"interfaces/Msg.html":{},"interfaces/OwnerCreationAttrbs.html":{},"interfaces/OwnerRefreshTokenCreationAttrbs.html":{},"interfaces/Payload.html":{},"interfaces/ProductCreationAttrs.html":{},"interfaces/RequestHeaders.html":{},"interfaces/ReturnedAdmin.html":{},"interfaces/ReturnedCategory.html":{},"interfaces/ReturnedColour.html":{},"interfaces/ReturnedOwner.html":{},"interfaces/ReturnedProduct.html":{},"interfaces/ReturnedProducts.html":{},"interfaces/ReturnedReview.html":{},"interfaces/ReturnedUser.html":{},"interfaces/ReviewCreationAtrb.html":{},"interfaces/RolecreationAttrbs.html":{},"interfaces/Tokens.html":{},"interfaces/UserInterface.html":{},"interfaces/UserRefreshCreationAttrbs.html":{},"interfaces/UsercreationAttrbs.html":{},"interfaces/ValidateUser.html":{},"interfaces/fileCreated.html":{}},"body":{"interfaces/AdminInterface.html":{},"interfaces/AdminRefreshTokenCreationAttrbs.html":{},"interfaces/AdmincreationAttrbs.html":{},"injectables/AppClusterService.html":{},"interfaces/AuthUser.html":{},"interfaces/CategoryCreationAtrb.html":{},"interfaces/CodeDto.html":{},"interfaces/ColourCreationAtrb.html":{},"injectables/CorsMiddleware.html":{},"injectables/FilesService.html":{},"interfaces/ITelegramModuleAsyncOptions.html":{},"interfaces/ITelegramOptions.html":{},"interfaces/InitializeUser.html":{},"interfaces/Msg.html":{},"interfaces/OwnerCreationAttrbs.html":{},"interfaces/OwnerRefreshTokenCreationAttrbs.html":{},"interfaces/Payload.html":{},"interfaces/ProductCreationAttrs.html":{},"interfaces/RequestHeaders.html":{},"interfaces/ReturnedAdmin.html":{},"interfaces/ReturnedCategory.html":{},"interfaces/ReturnedColour.html":{},"interfaces/ReturnedOwner.html":{},"interfaces/ReturnedProduct.html":{},"interfaces/ReturnedProducts.html":{},"interfaces/ReturnedReview.html":{},"interfaces/ReturnedUser.html":{},"interfaces/ReviewCreationAtrb.html":{},"interfaces/RolecreationAttrbs.html":{},"interfaces/Tokens.html":{},"interfaces/UserInterface.html":{},"interfaces/UserRefreshCreationAttrbs.html":{},"interfaces/UsercreationAttrbs.html":{},"interfaces/ValidateUser.html":{},"interfaces/fileCreated.html":{}}}],["interfaces",{"_index":303,"title":{},"body":{"interfaces/AdminInterface.html":{},"interfaces/AdminRefreshTokenCreationAttrbs.html":{},"interfaces/AdmincreationAttrbs.html":{},"interfaces/AuthUser.html":{},"interfaces/CategoryCreationAtrb.html":{},"interfaces/CodeDto.html":{},"interfaces/ColourCreationAtrb.html":{},"interfaces/ITelegramModuleAsyncOptions.html":{},"interfaces/ITelegramOptions.html":{},"interfaces/InitializeUser.html":{},"interfaces/Msg.html":{},"interfaces/OwnerCreationAttrbs.html":{},"interfaces/OwnerRefreshTokenCreationAttrbs.html":{},"interfaces/Payload.html":{},"interfaces/ProductCreationAttrs.html":{},"interfaces/RequestHeaders.html":{},"interfaces/ReturnedAdmin.html":{},"interfaces/ReturnedCategory.html":{},"interfaces/ReturnedColour.html":{},"interfaces/ReturnedOwner.html":{},"interfaces/ReturnedProduct.html":{},"interfaces/ReturnedProducts.html":{},"interfaces/ReturnedReview.html":{},"interfaces/ReturnedUser.html":{},"interfaces/ReviewCreationAtrb.html":{},"interfaces/RolecreationAttrbs.html":{},"interfaces/Tokens.html":{},"interfaces/UserInterface.html":{},"interfaces/UserRefreshCreationAttrbs.html":{},"interfaces/UsercreationAttrbs.html":{},"interfaces/ValidateUser.html":{},"interfaces/fileCreated.html":{},"overview.html":{}}}],["internal",{"_index":397,"title":{},"body":{"injectables/AdminJwtRefreshService.html":{},"classes/ApiException.html":{},"injectables/OwnerJwtRefreshService.html":{},"injectables/UserJwtRefreshTokenService.html":{}}}],["internalservererror",{"_index":915,"title":{},"body":{"classes/ApiException.html":{}}}],["internalservererror(type",{"_index":933,"title":{},"body":{"classes/ApiException.html":{}}}],["internalservererrorexception",{"_index":2384,"title":{},"body":{"injectables/MailService.html":{}}}],["internalservererrorexception(erorr_while_sending_email",{"_index":2535,"title":{},"body":{"injectables/MailService.html":{}}}],["interval",{"_index":3333,"title":{},"body":{"injectables/TasksService.html":{}}}],["intervals",{"_index":3338,"title":{},"body":{"injectables/TasksService.html":{}}}],["intervals.foreach((key",{"_index":3340,"title":{},"body":{"injectables/TasksService.html":{}}}],["invalid",{"_index":2955,"title":{},"body":{"injectables/ParseJsonPipe.html":{}}}],["invalid_code",{"_index":731,"title":{},"body":{"injectables/AdminService.html":{},"classes/ApiException.html":{},"injectables/OwnerService.html":{},"injectables/UsersService.html":{}}}],["invalid_email",{"_index":729,"title":{},"body":{"injectables/AdminService.html":{},"classes/ApiException.html":{},"injectables/OwnerService.html":{},"injectables/UsersService.html":{}}}],["invalid_email_or_password",{"_index":936,"title":{},"body":{"classes/ApiException.html":{},"injectables/UsersService.html":{}}}],["invalid_header",{"_index":3092,"title":{},"body":{"guards/RefreshAuthGuard.html":{}}}],["invalid_link",{"_index":726,"title":{},"body":{"injectables/AdminService.html":{},"injectables/OwnerService.html":{}}}],["invalid_params",{"_index":41,"title":{},"body":{"injectables/ActivateMiddleware.html":{},"injectables/AdminUserMiddleware.html":{},"injectables/UserAdminMiddleware.html":{}}}],["invalid_refresh_token",{"_index":2286,"title":{},"body":{"injectables/InitializeUserMiddleware.html":{}}}],["invalid_request",{"_index":96,"title":{},"body":{"guards/AddContentGuard.html":{},"guards/AuthFerfershGuard.html":{},"guards/EditContentGuard.html":{},"guards/EditWebsiteGuard.html":{}}}],["ioredis",{"_index":3728,"title":{},"body":{"dependencies.html":{}}}],["ip",{"_index":1840,"title":{},"body":{"injectables/CorsMiddleware.html":{},"injectables/LocationMiddleware.html":{},"interfaces/RequestHeaders.html":{},"dependencies.html":{}}}],["ip.address",{"_index":1846,"title":{},"body":{"injectables/CorsMiddleware.html":{},"injectables/LocationMiddleware.html":{},"interfaces/RequestHeaders.html":{}}}],["ipaddress",{"_index":1090,"title":{},"body":{"controllers/AppController.html":{},"injectables/CorsMiddleware.html":{},"injectables/LocationMiddleware.html":{},"interfaces/RequestHeaders.html":{}}}],["isactivated",{"_index":1967,"title":{},"body":{"classes/CreateAdminRefreshTokenDto.html":{},"classes/CreateOwnerRefreshTokenDto.html":{},"classes/CreateUserRefreshTokenDto.html":{},"classes/Owner.html":{}}}],["isadmin",{"_index":835,"title":{},"body":{"injectables/AdminUserMiddleware.html":{},"classes/CreateAdminDto.html":{},"interfaces/InitializeUser.html":{},"interfaces/RolecreationAttrbs.html":{},"injectables/UserAdminMiddleware.html":{},"interfaces/UserInterface.html":{},"interfaces/UserRefreshCreationAttrbs.html":{},"interfaces/UsercreationAttrbs.html":{},"injectables/UsersService.html":{},"interfaces/ValidateUser.html":{}}}],["isadmin.tostring",{"_index":840,"title":{},"body":{"injectables/AdminUserMiddleware.html":{},"injectables/UserAdminMiddleware.html":{}}}],["isarray",{"_index":1922,"title":{},"body":{"classes/CreateAccessTokenDto.html":{},"classes/CreateAdminRefreshTokenDto.html":{},"classes/CreateOwnerRefreshTokenDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateUserRefreshTokenDto.html":{},"classes/Nested.html":{},"classes/Nested-1.html":{},"classes/UpdateProductDto.html":{}}}],["isboolean",{"_index":1921,"title":{},"body":{"classes/CreateAccessTokenDto.html":{},"classes/CreateAdminDto.html":{},"classes/CreateAdminRefreshTokenDto.html":{},"classes/CreateOwnerRefreshTokenDto.html":{},"classes/CreateUserRefreshTokenDto.html":{}}}],["iscontained",{"_index":753,"title":{},"body":{"injectables/AdminService.html":{},"injectables/UsersService.html":{}}}],["isdefined",{"_index":2033,"title":{},"body":{"classes/CreateProductDto.html":{},"classes/CreateReviewDto.html":{},"classes/Nested.html":{},"classes/Nested-1.html":{},"classes/QueryFilterDto.html":{},"classes/UpdateProductDto.html":{}}}],["isdefined()@isstring()@matches(/[a",{"_index":2562,"title":{},"body":{"classes/Nested.html":{},"classes/Nested-1.html":{}}}],["isdefined()@matches(/[a",{"_index":2047,"title":{},"body":{"classes/CreateReviewDto.html":{}}}],["isdefined()@transform(value",{"_index":2024,"title":{},"body":{"classes/CreateProductDto.html":{},"classes/UpdateProductDto.html":{}}}],["isdefined()@type(undefined",{"_index":2020,"title":{},"body":{"classes/CreateProductDto.html":{},"classes/QueryFilterDto.html":{},"classes/UpdateProductDto.html":{}}}],["isdefined()@type(undefined)@isnumber",{"_index":2022,"title":{},"body":{"classes/CreateProductDto.html":{},"classes/QueryFilterDto.html":{},"classes/UpdateProductDto.html":{}}}],["isemail",{"_index":655,"title":{},"body":{"classes/AdminRefreshToken.html":{},"classes/CreateAccessTokenDto.html":{},"classes/CreateAdminDto.html":{},"classes/CreateAdminRefreshTokenDto.html":{},"classes/CreateOwnerDto.html":{},"classes/CreateOwnerRefreshTokenDto.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserRefreshTokenDto.html":{},"classes/LoginDto.html":{},"classes/Owner.html":{},"classes/OwnerRefreshToken.html":{},"classes/ResetDto.html":{},"classes/SignupDto.html":{},"classes/UserRefreshToken.html":{}}}],["isempty",{"_index":1829,"title":{},"body":{"injectables/CorsMiddleware.html":{},"interfaces/RequestHeaders.html":{}}}],["isempty(object",{"_index":1830,"title":{},"body":{"injectables/CorsMiddleware.html":{},"interfaces/RequestHeaders.html":{}}}],["isexist",{"_index":1650,"title":{},"body":{"injectables/CategoriesService.html":{},"injectables/ColoursService.html":{}}}],["isexist.en",{"_index":1660,"title":{},"body":{"injectables/CategoriesService.html":{},"injectables/ColoursService.html":{}}}],["isexist.hex",{"_index":1801,"title":{},"body":{"injectables/ColoursService.html":{}}}],["isexist.id",{"_index":1658,"title":{},"body":{"injectables/CategoriesService.html":{},"injectables/ColoursService.html":{}}}],["isexist.rs",{"_index":1661,"title":{},"body":{"injectables/CategoriesService.html":{},"injectables/ColoursService.html":{}}}],["isexist.ru",{"_index":1662,"title":{},"body":{"injectables/CategoriesService.html":{},"injectables/ColoursService.html":{}}}],["isexist.save",{"_index":1667,"title":{},"body":{"injectables/CategoriesService.html":{},"injectables/ColoursService.html":{}}}],["isexist.ua",{"_index":1659,"title":{},"body":{"injectables/CategoriesService.html":{},"injectables/ColoursService.html":{}}}],["isglobal",{"_index":562,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CartModule.html":{},"modules/CategoriesColoursModule.html":{},"modules/CoreModule.html":{},"modules/MailModule.html":{},"modules/OrdersModule.html":{},"modules/OwnerModule.html":{},"modules/ProductModule.html":{},"modules/ReviewsModule.html":{},"modules/RolesModule.html":{},"modules/UsersModule.html":{}}}],["isint",{"_index":1539,"title":{},"body":{"classes/CartProduct.html":{},"classes/Currencies.html":{},"classes/OrderProduct.html":{},"classes/Owner.html":{},"classes/Product.html":{},"classes/UserRefreshToken.html":{}}}],["isint()@column({type",{"_index":1535,"title":{},"body":{"classes/CartProduct.html":{},"classes/OrderProduct.html":{},"classes/Product.html":{}}}],["isint()@foreignkey(undefined)@column({type",{"_index":1530,"title":{},"body":{"classes/CartProduct.html":{},"classes/Currencies.html":{},"classes/OrderProduct.html":{},"classes/Product.html":{}}}],["isnotempty",{"_index":3272,"title":{},"body":{"classes/SignupDto.html":{}}}],["isnumber",{"_index":138,"title":{},"body":{"classes/AddRoleDto.html":{},"classes/BanUserDto.html":{},"classes/CreateAccessTokenDto.html":{},"classes/CreateAdminRefreshTokenDto.html":{},"classes/CreateOwnerRefreshTokenDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateUserRefreshTokenDto.html":{},"classes/Nested.html":{},"classes/Nested-1.html":{},"classes/QueryFilterDto.html":{},"classes/UpdateProductDto.html":{}}}],["isoptional",{"_index":3087,"title":{},"body":{"classes/QueryFilterDto.html":{}}}],["isoptional()@isstring",{"_index":3078,"title":{},"body":{"classes/QueryFilterDto.html":{}}}],["isoptional()@type(undefined",{"_index":3084,"title":{},"body":{"classes/QueryFilterDto.html":{}}}],["isoptional()@type(undefined)@isstring({each",{"_index":3082,"title":{},"body":{"classes/QueryFilterDto.html":{}}}],["isstring",{"_index":139,"title":{},"body":{"classes/AddRoleDto.html":{},"classes/BanUserDto.html":{},"classes/ChangeDto.html":{},"classes/CreateAccessTokenDto.html":{},"classes/CreateAdminDto.html":{},"classes/CreateAdminRefreshTokenDto.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateColourDto.html":{},"classes/CreateOwnerDto.html":{},"classes/CreateOwnerRefreshTokenDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateReviewDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserRefreshTokenDto.html":{},"classes/LoginDto.html":{},"classes/Nested.html":{},"classes/Nested-1.html":{},"classes/QueryFilterDto.html":{},"classes/ResetDto.html":{},"classes/SignupDto.html":{},"classes/UpdateCategoryDto.html":{},"classes/UpdateColourDto.html":{},"classes/UpdateProductDto.html":{},"classes/UpdateUserDto.html":{}}}],["isstring()@minlength(2)@maxlength(30)@matches(/[a",{"_index":1976,"title":{},"body":{"classes/CreateCategoryDto.html":{},"classes/CreateColourDto.html":{},"classes/UpdateCategoryDto.html":{},"classes/UpdateColourDto.html":{}}}],["isuseractivated",{"_index":1447,"title":{},"body":{"interfaces/AuthUser.html":{},"interfaces/CodeDto.html":{},"classes/CreateAccessTokenDto.html":{},"interfaces/Payload.html":{},"interfaces/ReturnedAdmin.html":{},"interfaces/ReturnedOwner.html":{},"interfaces/ReturnedUser.html":{},"interfaces/Tokens.html":{}}}],["isuuid",{"_index":657,"title":{},"body":{"classes/AdminRefreshToken.html":{},"classes/CreateAccessTokenDto.html":{},"classes/CreateAdminDto.html":{},"classes/CreateOwnerDto.html":{},"classes/Owner.html":{},"classes/OwnerRefreshToken.html":{},"classes/UserRefreshToken.html":{}}}],["isuuid(4",{"_index":672,"title":{},"body":{"classes/AdminRefreshToken.html":{},"classes/CreateAccessTokenDto.html":{},"classes/CreateAdminDto.html":{},"classes/CreateOwnerDto.html":{},"classes/Owner.html":{},"classes/OwnerRefreshToken.html":{},"classes/UserRefreshToken.html":{}}}],["itelegrammoduleasyncoptions",{"_index":2255,"title":{"interfaces/ITelegramModuleAsyncOptions.html":{}},"body":{"interfaces/ITelegramModuleAsyncOptions.html":{},"interfaces/ITelegramOptions.html":{},"modules/TelegramModule.html":{}}}],["itelegramoptions",{"_index":2260,"title":{"interfaces/ITelegramOptions.html":{}},"body":{"interfaces/ITelegramModuleAsyncOptions.html":{},"interfaces/ITelegramOptions.html":{},"injectables/TelegramService.html":{}}}],["iv",{"_index":455,"title":{},"body":{"injectables/AdminJwtRefreshService.html":{},"controllers/AppController.html":{},"injectables/OwnerJwtRefreshService.html":{}}}],["job",{"_index":2226,"title":{},"body":{"classes/GarbageCollectingProcessor.html":{},"injectables/OwnerService.html":{},"injectables/TasksService.html":{}}}],["job.start",{"_index":3319,"title":{},"body":{"injectables/TasksService.html":{}}}],["jobs",{"_index":3323,"title":{},"body":{"injectables/TasksService.html":{}}}],["jobs.foreach((value",{"_index":3325,"title":{},"body":{"injectables/TasksService.html":{}}}],["join",{"_index":3812,"title":{},"body":{"index.html":{}}}],["jpg",{"_index":2193,"title":{},"body":{"injectables/FilesService.html":{},"interfaces/fileCreated.html":{}}}],["jpg|jpeg|png|gif",{"_index":1245,"title":{},"body":{"modules/AppModule.html":{},"injectables/FilesService.html":{},"interfaces/fileCreated.html":{}}}],["json",{"_index":1122,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"modules/OwnerModule.html":{},"classes/ParseFormDataJsonPipe.html":{},"injectables/ParseJsonPipe.html":{},"dependencies.html":{}}}],["json.parse(currency.rates",{"_index":2154,"title":{},"body":{"injectables/CurrencyService.html":{}}}],["json.parse(json.stringify(admin",{"_index":771,"title":{},"body":{"injectables/AdminService.html":{}}}],["json.parse(json.stringify(req.headers",{"_index":1842,"title":{},"body":{"injectables/CorsMiddleware.html":{},"interfaces/RequestHeaders.html":{}}}],["json.parse(json.stringify(user",{"_index":765,"title":{},"body":{"injectables/AdminService.html":{}}}],["json.parse(this.description",{"_index":3012,"title":{},"body":{"classes/Product.html":{}}}],["json.parse(this.title",{"_index":3009,"title":{},"body":{"classes/Product.html":{}}}],["json.parse(value",{"_index":2952,"title":{},"body":{"injectables/ParseJsonPipe.html":{}}}],["json.parse(value.value",{"_index":2043,"title":{},"body":{"classes/CreateProductDto.html":{},"classes/Nested.html":{},"classes/Nested-1.html":{},"classes/UpdateProductDto.html":{}}}],["json.stringify",{"_index":1901,"title":{},"body":{"injectables/CorsMiddleware.html":{},"injectables/CurrencyService.html":{},"interfaces/RequestHeaders.html":{}}}],["json.stringify(data.rates",{"_index":2137,"title":{},"body":{"injectables/CurrencyService.html":{}}}],["json.stringify(description",{"_index":3013,"title":{},"body":{"classes/Product.html":{}}}],["json.stringify(object",{"_index":1900,"title":{},"body":{"injectables/CorsMiddleware.html":{},"interfaces/RequestHeaders.html":{}}}],["json.stringify(title",{"_index":3011,"title":{},"body":{"classes/Product.html":{}}}],["jwtauthguard",{"_index":197,"title":{"guards/JwtAuthGuard.html":{}},"body":{"controllers/AdminController.html":{},"controllers/AuthController.html":{},"controllers/CategoriesController.html":{},"controllers/ColoursController.html":{},"guards/JwtAuthGuard.html":{},"controllers/ReviewsController.html":{},"controllers/RolesController.html":{},"controllers/UsersController.html":{}}}],["jwtmodule",{"_index":503,"title":{},"body":{"modules/AdminModule.html":{},"modules/AuthModule.html":{},"modules/OwnerModule.html":{},"modules/UsersModule.html":{}}}],["jwtmodule.register",{"_index":564,"title":{},"body":{"modules/AdminModule.html":{},"modules/AuthModule.html":{},"modules/OwnerModule.html":{},"modules/UsersModule.html":{}}}],["jwtrefreshtokendeletedevent",{"_index":1139,"title":{"classes/JwtRefreshTokenDeletedEvent.html":{}},"body":{"injectables/AppListener.html":{},"classes/JwtRefreshTokenDeletedEvent.html":{},"injectables/TasksService.html":{}}}],["jwtrefreshtokendeletedevent.description",{"_index":3347,"title":{},"body":{"injectables/TasksService.html":{}}}],["jwtrefreshtokendeletedevent.name",{"_index":3345,"title":{},"body":{"injectables/TasksService.html":{}}}],["jwtrefreshtokendeletedevent.userid",{"_index":3346,"title":{},"body":{"injectables/TasksService.html":{}}}],["jwtservice",{"_index":332,"title":{},"body":{"injectables/AdminJwtRefreshService.html":{},"injectables/OwnerJwtRefreshService.html":{},"injectables/UserJwtRefreshTokenService.html":{}}}],["kamil",{"_index":3819,"title":{},"body":{"index.html":{}}}],["kaze_shop",{"_index":2531,"title":{},"body":{"injectables/MailService.html":{},"properties.html":{}}}],["kaze_sport",{"_index":2395,"title":{},"body":{"injectables/MailService.html":{}}}],["kazesport2022@gmail.com",{"_index":2361,"title":{},"body":{"modules/MailModule.html":{}}}],["key",{"_index":459,"title":{},"body":{"injectables/AdminJwtRefreshService.html":{},"injectables/AdminService.html":{},"controllers/AppController.html":{},"injectables/CorsMiddleware.html":{},"injectables/CurrencyService.html":{},"injectables/OwnerJwtRefreshService.html":{},"interfaces/RequestHeaders.html":{},"injectables/TasksService.html":{},"injectables/UsersService.html":{}}}],["khtml",{"_index":605,"title":{},"body":{"classes/AdminRefreshToken.html":{},"classes/CreateAdminRefreshTokenDto.html":{},"classes/CreateOwnerDto.html":{},"classes/CreateOwnerRefreshTokenDto.html":{},"classes/Owner.html":{},"classes/OwnerRefreshToken.html":{},"injectables/UserJwtRefreshTokenService.html":{}}}],["knfdgfhrrljhtop6hfdghshfdshfohjlymhnhgnljjukfty6yujhjbjlvcglkidrtujhtrfujuj",{"_index":3571,"title":{},"body":{"modules/UsersModule.html":{}}}],["knfdljhtop6hohjlyjgfhmhnhgnljjukfty6yujhjbjlvcglkidrtujhdgsgdsagdfsdhqqqtrfujuj",{"_index":2803,"title":{},"body":{"modules/OwnerModule.html":{}}}],["knfdljhtop6hohjlymhnhgnljjukfty6yujhjbjlvcglki",{"_index":1423,"title":{},"body":{"modules/AuthModule.html":{}}}],["knfdljhtop6hohjlymhnhgnljjukfty6yujhjbjlvcglkidrtujhtrfujuj",{"_index":567,"title":{},"body":{"modules/AdminModule.html":{}}}],["l",{"_index":2473,"title":{},"body":{"injectables/MailService.html":{},"classes/Product.html":{}}}],["left",{"_index":2486,"title":{},"body":{"injectables/MailService.html":{}}}],["left:0px!important",{"_index":2497,"title":{},"body":{"injectables/MailService.html":{}}}],["length",{"_index":668,"title":{},"body":{"classes/AdminRefreshToken.html":{},"classes/CreateAdminRefreshTokenDto.html":{},"classes/CreateOwnerDto.html":{},"classes/CreateOwnerRefreshTokenDto.html":{},"classes/Owner.html":{},"classes/OwnerRefreshToken.html":{}}}],["li",{"_index":2446,"title":{},"body":{"injectables/MailService.html":{}}}],["license",{"_index":3824,"title":{},"body":{"index.html":{},"properties.html":{}}}],["licensed",{"_index":3802,"title":{},"body":{"index.html":{}}}],["limit",{"_index":745,"title":{},"body":{"injectables/AdminService.html":{},"modules/AppModule.html":{},"injectables/UsersService.html":{}}}],["limiter",{"_index":1215,"title":{},"body":{"modules/AppModule.html":{}}}],["limits",{"_index":1258,"title":{},"body":{"modules/AppModule.html":{}}}],["line",{"_index":240,"title":{},"body":{"controllers/AdminController.html":{},"classes/AdminRefreshToken.html":{},"controllers/AppController.html":{},"controllers/AuthController.html":{},"classes/CreateAdminRefreshTokenDto.html":{},"classes/CreateOwnerDto.html":{},"classes/CreateOwnerRefreshTokenDto.html":{},"injectables/FilesService.html":{},"injectables/MailService.html":{},"classes/Owner.html":{},"classes/OwnerRefreshToken.html":{},"classes/RequestValidator.html":{},"controllers/RolesController.html":{},"interfaces/fileCreated.html":{}}}],["link",{"_index":429,"title":{},"body":{"injectables/AdminJwtRefreshService.html":{},"classes/CreateAccessTokenDto.html":{},"classes/CreateAdminDto.html":{},"classes/CreateOwnerDto.html":{},"injectables/MailService.html":{},"injectables/OwnerJwtRefreshService.html":{}}}],["link'})@isuuid(4",{"_index":1918,"title":{},"body":{"classes/CreateAccessTokenDto.html":{},"classes/CreateAdminDto.html":{},"classes/CreateOwnerDto.html":{}}}],["link.replace",{"_index":434,"title":{},"body":{"injectables/AdminJwtRefreshService.html":{},"injectables/OwnerJwtRefreshService.html":{}}}],["liqpay",{"_index":3731,"title":{},"body":{"dependencies.html":{}}}],["lite",{"_index":1839,"title":{},"body":{"injectables/CorsMiddleware.html":{},"injectables/LocationMiddleware.html":{},"interfaces/RequestHeaders.html":{},"dependencies.html":{}}}],["literal",{"_index":919,"title":{},"body":{"classes/ApiException.html":{},"classes/CreateProductDto.html":{},"injectables/FilesService.html":{},"classes/Product.html":{},"interfaces/ReturnedProduct.html":{},"classes/UpdateProductDto.html":{},"miscellaneous/typealiases.html":{}}}],["locale",{"_index":952,"title":{},"body":{"classes/ApiException.html":{},"controllers/AuthController.html":{},"classes/Category.html":{},"classes/Colour.html":{},"injectables/MailService.html":{}}}],["location",{"_index":1089,"title":{},"body":{"controllers/AppController.html":{},"injectables/LocationMiddleware.html":{}}}],["location')@httpcode(200",{"_index":1052,"title":{},"body":{"controllers/AppController.html":{}}}],["locationmiddleware",{"_index":1197,"title":{"injectables/LocationMiddleware.html":{}},"body":{"modules/AppModule.html":{},"injectables/LocationMiddleware.html":{}}}],["locationmiddleware).forroutes",{"_index":1277,"title":{},"body":{"modules/AppModule.html":{}}}],["lockduration",{"_index":1227,"title":{},"body":{"modules/AppModule.html":{}}}],["lockrenewtime",{"_index":1229,"title":{},"body":{"modules/AppModule.html":{}}}],["lodash",{"_index":2934,"title":{},"body":{"classes/ParseFormDataJsonPipe.html":{}}}],["logger",{"_index":319,"title":{},"body":{"injectables/AdminJwtRefreshService.html":{},"injectables/AppClusterService.html":{},"controllers/AppController.html":{},"injectables/CorsMiddleware.html":{},"injectables/CurrencyService.html":{},"classes/GarbageCollectingProcessor.html":{},"injectables/LocationMiddleware.html":{},"injectables/MailService.html":{},"interfaces/Msg.html":{},"injectables/OwnerJwtRefreshService.html":{},"injectables/OwnerService.html":{},"interfaces/RequestHeaders.html":{},"injectables/ReviewsService.html":{},"injectables/TasksService.html":{}}}],["logger(adminjwtrefreshservice.name",{"_index":365,"title":{},"body":{"injectables/AdminJwtRefreshService.html":{}}}],["logger(appclusterservice.name",{"_index":982,"title":{},"body":{"injectables/AppClusterService.html":{},"interfaces/Msg.html":{}}}],["logger(appcontroller.name",{"_index":1068,"title":{},"body":{"controllers/AppController.html":{}}}],["logger(corsmiddleware.name",{"_index":1835,"title":{},"body":{"injectables/CorsMiddleware.html":{},"interfaces/RequestHeaders.html":{}}}],["logger(currencyservice.name",{"_index":2118,"title":{},"body":{"injectables/CurrencyService.html":{}}}],["logger(garbagecollectingprocessor.name",{"_index":2223,"title":{},"body":{"classes/GarbageCollectingProcessor.html":{}}}],["logger(locationmiddleware.name",{"_index":2321,"title":{},"body":{"injectables/LocationMiddleware.html":{}}}],["logger(mailservice.name",{"_index":2383,"title":{},"body":{"injectables/MailService.html":{}}}],["logger(ownerjwtrefreshservice.name",{"_index":2758,"title":{},"body":{"injectables/OwnerJwtRefreshService.html":{}}}],["logger(ownerservice.name",{"_index":2872,"title":{},"body":{"injectables/OwnerService.html":{}}}],["logger(productservice.name",{"_index":3174,"title":{},"body":{"injectables/ReviewsService.html":{}}}],["logger(tasksservice.name",{"_index":3315,"title":{},"body":{"injectables/TasksService.html":{}}}],["logger.log(address",{"_index":1027,"title":{},"body":{"injectables/AppClusterService.html":{},"interfaces/Msg.html":{}}}],["loggigng",{"_index":1312,"title":{},"body":{"controllers/AuthController.html":{}}}],["logging",{"_index":1306,"title":{},"body":{"controllers/AuthController.html":{}}}],["login",{"_index":1283,"title":{},"body":{"controllers/AuthController.html":{}}}],["login(userdto",{"_index":1305,"title":{},"body":{"controllers/AuthController.html":{}}}],["logindto",{"_index":723,"title":{"classes/LoginDto.html":{}},"body":{"injectables/AdminService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"classes/LoginDto.html":{},"injectables/OwnerService.html":{}}}],["logout",{"_index":1284,"title":{},"body":{"controllers/AuthController.html":{}}}],["logout(response",{"_index":1311,"title":{},"body":{"controllers/AuthController.html":{}}}],["lviv",{"_index":3421,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["m",{"_index":2467,"title":{},"body":{"injectables/MailService.html":{},"classes/Product.html":{}}}],["mail.constants",{"_index":2387,"title":{},"body":{"injectables/MailService.html":{}}}],["mail.service",{"_index":2350,"title":{},"body":{"modules/MailModule.html":{}}}],["mail/mail.module",{"_index":1166,"title":{},"body":{"modules/AppModule.html":{},"modules/CoreModule.html":{},"modules/RolesModule.html":{},"modules/UsersModule.html":{}}}],["mail/mail.service",{"_index":380,"title":{},"body":{"injectables/AdminJwtRefreshService.html":{},"modules/AdminModule.html":{},"modules/AuthModule.html":{},"injectables/OwnerJwtRefreshService.html":{},"modules/OwnerModule.html":{}}}],["mailermodule",{"_index":2351,"title":{},"body":{"modules/MailModule.html":{}}}],["mailermodule.forroot",{"_index":2354,"title":{},"body":{"modules/MailModule.html":{}}}],["mailerservice",{"_index":2374,"title":{},"body":{"injectables/MailService.html":{}}}],["mailmodule",{"_index":1155,"title":{"modules/MailModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CoreModule.html":{},"modules/MailModule.html":{},"modules/RolesModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["mailservice",{"_index":335,"title":{"injectables/MailService.html":{}},"body":{"injectables/AdminJwtRefreshService.html":{},"modules/AdminModule.html":{},"modules/AuthModule.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"injectables/OwnerJwtRefreshService.html":{},"modules/OwnerModule.html":{},"overview.html":{}}}],["make",{"_index":2524,"title":{},"body":{"injectables/MailService.html":{}}}],["manager",{"_index":3711,"title":{},"body":{"dependencies.html":{}}}],["map",{"_index":1063,"title":{},"body":{"controllers/AppController.html":{},"injectables/CurrencyService.html":{},"injectables/LocationMiddleware.html":{},"injectables/TasksService.html":{},"dependencies.html":{}}}],["map((_",{"_index":1113,"title":{},"body":{"controllers/AppController.html":{}}}],["match",{"_index":1711,"title":{},"body":{"classes/ChangeDto.html":{},"classes/MatchConstraint.html":{},"classes/ResetDto.html":{},"classes/SignupDto.html":{},"miscellaneous/functions.html":{}}}],["match('password",{"_index":1714,"title":{},"body":{"classes/ChangeDto.html":{},"classes/ResetDto.html":{},"classes/SignupDto.html":{}}}],["match(property",{"_index":2551,"title":{},"body":{"classes/MatchConstraint.html":{},"miscellaneous/functions.html":{}}}],["matchconstraint",{"_index":2541,"title":{"classes/MatchConstraint.html":{}},"body":{"classes/MatchConstraint.html":{}}}],["matches",{"_index":1710,"title":{},"body":{"classes/ChangeDto.html":{},"classes/CreateAccessTokenDto.html":{},"classes/CreateAdminDto.html":{},"classes/CreateAdminRefreshTokenDto.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateColourDto.html":{},"classes/CreateOwnerDto.html":{},"classes/CreateOwnerRefreshTokenDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateReviewDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserRefreshTokenDto.html":{},"classes/LoginDto.html":{},"classes/Nested.html":{},"classes/Nested-1.html":{},"classes/ResetDto.html":{},"classes/SignupDto.html":{},"classes/UpdateCategoryDto.html":{},"classes/UpdateColourDto.html":{},"classes/UpdateProductDto.html":{},"classes/UpdateUserDto.html":{}}}],["matches(/[a",{"_index":1962,"title":{},"body":{"classes/CreateAdminDto.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateColourDto.html":{},"classes/CreateOwnerDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateReviewDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUserDto.html":{},"classes/Nested.html":{},"classes/Nested-1.html":{},"classes/SignupDto.html":{},"classes/UpdateCategoryDto.html":{},"classes/UpdateColourDto.html":{},"classes/UpdateProductDto.html":{},"classes/UpdateUserDto.html":{}}}],["matches(/^(?=.*\\d)(?=.*[a",{"_index":2009,"title":{},"body":{"classes/CreateOwnerDto.html":{}}}],["matches(/^[\\+]?[(]?[0",{"_index":1963,"title":{},"body":{"classes/CreateAdminDto.html":{},"classes/CreateOwnerDto.html":{},"classes/CreateUserDto.html":{},"classes/SignupDto.html":{}}}],["matches(/^[a",{"_index":1964,"title":{},"body":{"classes/CreateAdminDto.html":{},"classes/CreateAdminRefreshTokenDto.html":{},"classes/CreateOwnerDto.html":{},"classes/CreateOwnerRefreshTokenDto.html":{}}}],["matching",{"_index":78,"title":{},"body":{"injectables/ActivateMiddleware.html":{},"guards/AddContentGuard.html":{},"classes/AddRoleDto.html":{},"controllers/AdminController.html":{},"guards/AdminGuard.html":{},"interfaces/AdminInterface.html":{},"injectables/AdminJwtRefreshService.html":{},"modules/AdminModule.html":{},"classes/AdminRefreshToken.html":{},"interfaces/AdminRefreshTokenCreationAttrbs.html":{},"injectables/AdminService.html":{},"injectables/AdminUserMiddleware.html":{},"interfaces/AdmincreationAttrbs.html":{},"classes/AllExceptionsFilter.html":{},"classes/ApiError.html":{},"classes/ApiErrorExceptionFilter.html":{},"classes/ApiException.html":{},"classes/ApiExceptionFilter.html":{},"injectables/AppClusterService.html":{},"controllers/AppController.html":{},"injectables/AppListener.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"guards/AuthFerfershGuard.html":{},"injectables/AuthMiddleware.html":{},"modules/AuthModule.html":{},"interfaces/AuthUser.html":{},"classes/BadRequestError.html":{},"classes/BanUserDto.html":{},"classes/BookmarksProducts.html":{},"controllers/CardController.html":{},"injectables/CardService.html":{},"classes/Cart.html":{},"modules/CartModule.html":{},"classes/CartProduct.html":{},"modules/CategoriesColoursModule.html":{},"controllers/CategoriesController.html":{},"injectables/CategoriesService.html":{},"classes/Category.html":{},"interfaces/CategoryCreationAtrb.html":{},"classes/ChangeDto.html":{},"interfaces/CodeDto.html":{},"classes/Colour.html":{},"interfaces/ColourCreationAtrb.html":{},"controllers/ColoursController.html":{},"injectables/ColoursService.html":{},"modules/CoreModule.html":{},"injectables/CorsMiddleware.html":{},"classes/CreateAccessTokenDto.html":{},"classes/CreateAdminDto.html":{},"classes/CreateAdminRefreshTokenDto.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateColourDto.html":{},"classes/CreateOwnerDto.html":{},"classes/CreateOwnerRefreshTokenDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateReviewDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserRefreshTokenDto.html":{},"classes/Currencies.html":{},"injectables/CurrencyService.html":{},"guards/EditContentGuard.html":{},"guards/EditWebsiteGuard.html":{},"injectables/FilesService.html":{},"classes/GarbageCollectingProcessor.html":{},"injectables/GlobalInterceptor.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/ITelegramModuleAsyncOptions.html":{},"interfaces/ITelegramOptions.html":{},"injectables/InitializeEmailMiddleware.html":{},"interfaces/InitializeUser.html":{},"injectables/InitializeUserMiddleware.html":{},"guards/JwtAuthGuard.html":{},"classes/JwtRefreshTokenDeletedEvent.html":{},"injectables/LocationMiddleware.html":{},"classes/LoginDto.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"classes/MatchConstraint.html":{},"interfaces/Msg.html":{},"classes/Nested.html":{},"classes/Nested-1.html":{},"classes/NotFoundError.html":{},"classes/Order.html":{},"classes/OrderProduct.html":{},"controllers/OrdersController.html":{},"modules/OrdersModule.html":{},"injectables/OrdersService.html":{},"classes/Owner.html":{},"guards/OwnerAdminGuard.html":{},"interfaces/OwnerCreationAttrbs.html":{},"injectables/OwnerJwtRefreshService.html":{},"modules/OwnerModule.html":{},"classes/OwnerRefreshToken.html":{},"interfaces/OwnerRefreshTokenCreationAttrbs.html":{},"injectables/OwnerService.html":{},"classes/ParseFormDataJsonPipe.html":{},"injectables/ParseJsonPipe.html":{},"interfaces/Payload.html":{},"classes/Product.html":{},"classes/ProductCategories.html":{},"classes/ProductColours.html":{},"interfaces/ProductCreationAttrs.html":{},"injectables/ProductMiddleware.html":{},"modules/ProductModule.html":{},"classes/ProductReviews.html":{},"classes/QueryFilterDto.html":{},"guards/RefreshAuthGuard.html":{},"interfaces/RequestHeaders.html":{},"classes/RequestValidator.html":{},"classes/ResetDto.html":{},"interfaces/ReturnedAdmin.html":{},"interfaces/ReturnedCategory.html":{},"interfaces/ReturnedColour.html":{},"interfaces/ReturnedOwner.html":{},"interfaces/ReturnedProduct.html":{},"interfaces/ReturnedProducts.html":{},"interfaces/ReturnedReview.html":{},"interfaces/ReturnedUser.html":{},"classes/Review.html":{},"interfaces/ReviewCreationAtrb.html":{},"controllers/ReviewsController.html":{},"modules/ReviewsModule.html":{},"injectables/ReviewsService.html":{},"classes/Role.html":{},"interfaces/RolecreationAttrbs.html":{},"controllers/RolesController.html":{},"guards/RolesGuard.html":{},"modules/RolesModule.html":{},"injectables/RolesService.html":{},"classes/SignupDto.html":{},"injectables/TasksService.html":{},"modules/TelegramModule.html":{},"injectables/TelegramService.html":{},"injectables/ThrottlerBehindProxyGuard.html":{},"interfaces/Tokens.html":{},"classes/UpdateCategoryDto.html":{},"classes/UpdateColourDto.html":{},"classes/UpdateProductDto.html":{},"classes/UpdateUserDto.html":{},"injectables/UserAdminMiddleware.html":{},"guards/UserGuard.html":{},"interfaces/UserInterface.html":{},"injectables/UserJwtRefreshTokenService.html":{},"injectables/UserMiddleware.html":{},"injectables/UserMiddleware-1.html":{},"interfaces/UserRefreshCreationAttrbs.html":{},"classes/UserRefreshToken.html":{},"classes/UserRoles.html":{},"interfaces/UsercreationAttrbs.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"injectables/ValidateDto.html":{},"interfaces/ValidateUser.html":{},"classes/ValidationException.html":{},"classes/WatchedProducts.html":{},"dependencies.html":{},"interfaces/fileCreated.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{}}}],["math.random()).substring(2",{"_index":472,"title":{},"body":{"injectables/AdminJwtRefreshService.html":{},"injectables/OwnerJwtRefreshService.html":{}}}],["max",{"_index":667,"title":{},"body":{"classes/AdminRefreshToken.html":{},"modules/AppModule.html":{},"injectables/CorsMiddleware.html":{},"classes/CreateAdminRefreshTokenDto.html":{},"classes/CreateOwnerDto.html":{},"classes/CreateOwnerRefreshTokenDto.html":{},"injectables/InitializeUserMiddleware.html":{},"injectables/MailService.html":{},"classes/Owner.html":{},"classes/OwnerRefreshToken.html":{},"interfaces/RequestHeaders.html":{}}}],["maxage",{"_index":1082,"title":{},"body":{"controllers/AppController.html":{}}}],["maxage=0",{"_index":1866,"title":{},"body":{"injectables/CorsMiddleware.html":{},"interfaces/RequestHeaders.html":{}}}],["maxlength",{"_index":1985,"title":{},"body":{"classes/CreateCategoryDto.html":{},"classes/CreateColourDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUserDto.html":{},"classes/SignupDto.html":{},"classes/UpdateCategoryDto.html":{},"classes/UpdateColourDto.html":{},"classes/UpdateUserDto.html":{}}}],["maxlength(15",{"_index":2042,"title":{},"body":{"classes/CreateProductDto.html":{},"classes/Nested.html":{},"classes/Nested-1.html":{},"classes/UpdateProductDto.html":{}}}],["maxlength(30",{"_index":1987,"title":{},"body":{"classes/CreateCategoryDto.html":{},"classes/CreateColourDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUserDto.html":{},"classes/SignupDto.html":{},"classes/UpdateCategoryDto.html":{},"classes/UpdateColourDto.html":{},"classes/UpdateUserDto.html":{}}}],["maxlength(50",{"_index":3429,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["maxlisteners",{"_index":1824,"title":{},"body":{"modules/CoreModule.html":{}}}],["maxmind/geoip2",{"_index":1061,"title":{},"body":{"controllers/AppController.html":{},"injectables/LocationMiddleware.html":{},"dependencies.html":{}}}],["maxstalledcount",{"_index":1232,"title":{},"body":{"modules/AppModule.html":{}}}],["media",{"_index":1879,"title":{},"body":{"injectables/CorsMiddleware.html":{},"interfaces/RequestHeaders.html":{}}}],["menu",{"_index":2459,"title":{},"body":{"injectables/MailService.html":{}}}],["message",{"_index":865,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"classes/ApiError.html":{},"classes/ApiErrorExceptionFilter.html":{},"classes/ApiException.html":{},"classes/ApiExceptionFilter.html":{},"classes/BadRequestError.html":{},"classes/ChangeDto.html":{},"injectables/CorsMiddleware.html":{},"classes/CreateAccessTokenDto.html":{},"classes/CreateAdminDto.html":{},"classes/CreateAdminRefreshTokenDto.html":{},"classes/CreateOwnerDto.html":{},"classes/CreateOwnerRefreshTokenDto.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserRefreshTokenDto.html":{},"classes/HttpExceptionFilter.html":{},"classes/LoginDto.html":{},"classes/NotFoundError.html":{},"interfaces/RequestHeaders.html":{},"classes/ResetDto.html":{},"classes/SignupDto.html":{},"injectables/TelegramService.html":{},"classes/UpdateUserDto.html":{}}}],["messageevent",{"_index":1117,"title":{},"body":{"controllers/AppController.html":{}}}],["messagehandler",{"_index":1016,"title":{},"body":{"injectables/AppClusterService.html":{},"interfaces/Msg.html":{}}}],["messagehandler(msg",{"_index":1020,"title":{},"body":{"injectables/AppClusterService.html":{},"interfaces/Msg.html":{}}}],["messages",{"_index":3674,"title":{},"body":{"injectables/ValidateDto.html":{},"classes/ValidationException.html":{}}}],["metadata",{"_index":2947,"title":{},"body":{"injectables/ParseJsonPipe.html":{},"injectables/ValidateDto.html":{},"dependencies.html":{}}}],["metadata.data",{"_index":2951,"title":{},"body":{"injectables/ParseJsonPipe.html":{}}}],["method",{"_index":575,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"injectables/AuthMiddleware.html":{},"modules/AuthModule.html":{},"modules/CategoriesColoursModule.html":{},"injectables/CorsMiddleware.html":{},"injectables/ProductMiddleware.html":{},"modules/ProductModule.html":{},"interfaces/RequestHeaders.html":{},"modules/ReviewsModule.html":{},"modules/RolesModule.html":{},"injectables/UserMiddleware.html":{},"injectables/UserMiddleware-1.html":{},"modules/UsersModule.html":{}}}],["methods",{"_index":8,"title":{},"body":{"injectables/ActivateMiddleware.html":{},"guards/AddContentGuard.html":{},"controllers/AdminController.html":{},"guards/AdminGuard.html":{},"injectables/AdminJwtRefreshService.html":{},"modules/AdminModule.html":{},"classes/AdminRefreshToken.html":{},"injectables/AdminService.html":{},"injectables/AdminUserMiddleware.html":{},"classes/AllExceptionsFilter.html":{},"classes/ApiErrorExceptionFilter.html":{},"classes/ApiException.html":{},"classes/ApiExceptionFilter.html":{},"injectables/AppClusterService.html":{},"controllers/AppController.html":{},"injectables/AppListener.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"guards/AuthFerfershGuard.html":{},"injectables/AuthMiddleware.html":{},"modules/AuthModule.html":{},"classes/Cart.html":{},"classes/CartProduct.html":{},"modules/CategoriesColoursModule.html":{},"controllers/CategoriesController.html":{},"injectables/CategoriesService.html":{},"classes/Category.html":{},"classes/Colour.html":{},"controllers/ColoursController.html":{},"injectables/ColoursService.html":{},"injectables/CorsMiddleware.html":{},"classes/Currencies.html":{},"injectables/CurrencyService.html":{},"guards/EditContentGuard.html":{},"guards/EditWebsiteGuard.html":{},"injectables/FilesService.html":{},"classes/GarbageCollectingProcessor.html":{},"injectables/GlobalInterceptor.html":{},"classes/HttpExceptionFilter.html":{},"injectables/InitializeEmailMiddleware.html":{},"injectables/InitializeUserMiddleware.html":{},"guards/JwtAuthGuard.html":{},"classes/JwtRefreshTokenDeletedEvent.html":{},"injectables/LocationMiddleware.html":{},"injectables/MailService.html":{},"classes/MatchConstraint.html":{},"classes/Order.html":{},"classes/OrderProduct.html":{},"classes/Owner.html":{},"guards/OwnerAdminGuard.html":{},"injectables/OwnerJwtRefreshService.html":{},"classes/OwnerRefreshToken.html":{},"injectables/OwnerService.html":{},"classes/ParseFormDataJsonPipe.html":{},"injectables/ParseJsonPipe.html":{},"classes/Product.html":{},"injectables/ProductMiddleware.html":{},"modules/ProductModule.html":{},"guards/RefreshAuthGuard.html":{},"interfaces/RequestHeaders.html":{},"controllers/ReviewsController.html":{},"modules/ReviewsModule.html":{},"injectables/ReviewsService.html":{},"classes/Role.html":{},"controllers/RolesController.html":{},"guards/RolesGuard.html":{},"modules/RolesModule.html":{},"injectables/RolesService.html":{},"injectables/TasksService.html":{},"modules/TelegramModule.html":{},"injectables/TelegramService.html":{},"injectables/ThrottlerBehindProxyGuard.html":{},"injectables/UserAdminMiddleware.html":{},"guards/UserGuard.html":{},"injectables/UserJwtRefreshTokenService.html":{},"injectables/UserMiddleware.html":{},"injectables/UserMiddleware-1.html":{},"classes/UserRefreshToken.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"injectables/ValidateDto.html":{}}}],["middlewareconsumer",{"_index":492,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CategoriesColoursModule.html":{},"modules/ProductModule.html":{},"modules/ReviewsModule.html":{},"modules/RolesModule.html":{},"modules/UsersModule.html":{}}}],["milliseconds",{"_index":3293,"title":{},"body":{"injectables/TasksService.html":{}}}],["mimetype",{"_index":1249,"title":{},"body":{"modules/AppModule.html":{},"injectables/FilesService.html":{},"interfaces/fileCreated.html":{}}}],["minlength",{"_index":1984,"title":{},"body":{"classes/CreateCategoryDto.html":{},"classes/CreateColourDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUserDto.html":{},"classes/ResetDto.html":{},"classes/SignupDto.html":{},"classes/UpdateCategoryDto.html":{},"classes/UpdateColourDto.html":{},"classes/UpdateUserDto.html":{}}}],["minlength(2",{"_index":1986,"title":{},"body":{"classes/CreateCategoryDto.html":{},"classes/CreateColourDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUserDto.html":{},"classes/SignupDto.html":{},"classes/UpdateCategoryDto.html":{},"classes/UpdateColourDto.html":{},"classes/UpdateUserDto.html":{}}}],["minlength(8",{"_index":3123,"title":{},"body":{"classes/ResetDto.html":{}}}],["minute",{"_index":3321,"title":{},"body":{"injectables/TasksService.html":{}}}],["miscellaneous",{"_index":3758,"title":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["mit",{"_index":3801,"title":{},"body":{"index.html":{}}}],["mkdirsync",{"_index":2187,"title":{},"body":{"injectables/FilesService.html":{},"interfaces/fileCreated.html":{}}}],["mkdirsync(destination",{"_index":2218,"title":{},"body":{"injectables/FilesService.html":{},"interfaces/fileCreated.html":{}}}],["mkdirsync(imagespath",{"_index":2220,"title":{},"body":{"injectables/FilesService.html":{},"interfaces/fileCreated.html":{}}}],["mmmihaeel",{"_index":3838,"title":{},"body":{"properties.html":{}}}],["mobile",{"_index":2504,"title":{},"body":{"injectables/MailService.html":{}}}],["mode",{"_index":3791,"title":{},"body":{"index.html":{}}}],["mode=block",{"_index":1890,"title":{},"body":{"injectables/CorsMiddleware.html":{},"interfaces/RequestHeaders.html":{}}}],["model",{"_index":587,"title":{},"body":{"classes/AdminRefreshToken.html":{},"classes/BookmarksProducts.html":{},"classes/Cart.html":{},"classes/CartProduct.html":{},"classes/Category.html":{},"classes/Colour.html":{},"classes/Currencies.html":{},"classes/Order.html":{},"classes/OrderProduct.html":{},"classes/Owner.html":{},"classes/OwnerRefreshToken.html":{},"classes/Product.html":{},"classes/ProductCategories.html":{},"classes/ProductColours.html":{},"classes/ProductReviews.html":{},"classes/Review.html":{},"classes/Role.html":{},"classes/UserRefreshToken.html":{},"classes/UserRoles.html":{},"classes/WatchedProducts.html":{}}}],["models",{"_index":1271,"title":{},"body":{"modules/AppModule.html":{}}}],["models/admin.model",{"_index":202,"title":{},"body":{"controllers/AdminController.html":{},"modules/AdminModule.html":{},"injectables/AdminService.html":{}}}],["models/admin.refresh.token.model",{"_index":376,"title":{},"body":{"injectables/AdminJwtRefreshService.html":{},"modules/AdminModule.html":{}}}],["models/bookmark.products",{"_index":3054,"title":{},"body":{"modules/ProductModule.html":{}}}],["models/cart.model",{"_index":1521,"title":{},"body":{"modules/CartModule.html":{}}}],["models/cart.product.model",{"_index":1522,"title":{},"body":{"modules/CartModule.html":{}}}],["models/category.model",{"_index":1555,"title":{},"body":{"modules/CategoriesColoursModule.html":{},"controllers/CategoriesController.html":{},"injectables/CategoriesService.html":{}}}],["models/colours.model",{"_index":1559,"title":{},"body":{"modules/CategoriesColoursModule.html":{},"controllers/ColoursController.html":{},"injectables/ColoursService.html":{}}}],["models/currencies.model",{"_index":2120,"title":{},"body":{"injectables/CurrencyService.html":{},"modules/OwnerModule.html":{},"injectables/OwnerService.html":{}}}],["models/order.model",{"_index":2623,"title":{},"body":{"modules/OrdersModule.html":{}}}],["models/order.product.model",{"_index":2624,"title":{},"body":{"modules/OrdersModule.html":{}}}],["models/owner.model",{"_index":2119,"title":{},"body":{"injectables/CurrencyService.html":{},"modules/OwnerModule.html":{},"injectables/OwnerService.html":{}}}],["models/owner.refresh.token.model",{"_index":2760,"title":{},"body":{"injectables/OwnerJwtRefreshService.html":{},"modules/OwnerModule.html":{}}}],["models/product.categories.model",{"_index":1556,"title":{},"body":{"modules/CategoriesColoursModule.html":{}}}],["models/product.colour.model",{"_index":1560,"title":{},"body":{"modules/CategoriesColoursModule.html":{}}}],["models/product.model",{"_index":3050,"title":{},"body":{"modules/ProductModule.html":{}}}],["models/product.reviews.model",{"_index":3159,"title":{},"body":{"modules/ReviewsModule.html":{}}}],["models/review.model",{"_index":3160,"title":{},"body":{"modules/ReviewsModule.html":{},"injectables/ReviewsService.html":{}}}],["models/roles.model",{"_index":3230,"title":{},"body":{"controllers/RolesController.html":{},"modules/RolesModule.html":{},"injectables/RolesService.html":{}}}],["models/user.model",{"_index":3545,"title":{},"body":{"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["models/user.refresh.token.model",{"_index":3465,"title":{},"body":{"injectables/UserJwtRefreshTokenService.html":{},"modules/UsersModule.html":{}}}],["models/user.roles.model",{"_index":3251,"title":{},"body":{"modules/RolesModule.html":{}}}],["models/watched.products.model",{"_index":3055,"title":{},"body":{"modules/ProductModule.html":{}}}],["module",{"_index":474,"title":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CartModule.html":{},"modules/CategoriesColoursModule.html":{},"modules/CoreModule.html":{},"modules/MailModule.html":{},"modules/OrdersModule.html":{},"modules/OwnerModule.html":{},"modules/ProductModule.html":{},"modules/ReviewsModule.html":{},"modules/RolesModule.html":{},"modules/TelegramModule.html":{},"modules/UsersModule.html":{}},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CartModule.html":{},"modules/CategoriesColoursModule.html":{},"modules/CoreModule.html":{},"modules/MailModule.html":{},"modules/OrdersModule.html":{},"modules/OwnerModule.html":{},"modules/ProductModule.html":{},"modules/ReviewsModule.html":{},"modules/RolesModule.html":{},"modules/TelegramModule.html":{},"modules/UsersModule.html":{}}}],["modulemetadata",{"_index":2259,"title":{},"body":{"interfaces/ITelegramModuleAsyncOptions.html":{},"interfaces/ITelegramOptions.html":{}}}],["modules",{"_index":476,"title":{"modules.html":{}},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CartModule.html":{},"modules/CategoriesColoursModule.html":{},"modules/CoreModule.html":{},"modules/MailModule.html":{},"modules/OrdersModule.html":{},"modules/OwnerModule.html":{},"modules/ProductModule.html":{},"modules/ReviewsModule.html":{},"modules/RolesModule.html":{},"modules/TelegramModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["modules/mailer",{"_index":2353,"title":{},"body":{"modules/MailModule.html":{},"injectables/MailService.html":{},"dependencies.html":{}}}],["more",{"_index":2529,"title":{},"body":{"injectables/MailService.html":{},"index.html":{}}}],["mozilla/5.0",{"_index":598,"title":{},"body":{"classes/AdminRefreshToken.html":{},"classes/CreateAdminRefreshTokenDto.html":{},"classes/CreateOwnerDto.html":{},"classes/CreateOwnerRefreshTokenDto.html":{},"classes/Owner.html":{},"classes/OwnerRefreshToken.html":{},"injectables/UserJwtRefreshTokenService.html":{}}}],["msg",{"_index":990,"title":{"interfaces/Msg.html":{}},"body":{"injectables/AppClusterService.html":{},"interfaces/Msg.html":{}}}],["msg.cmd",{"_index":1021,"title":{},"body":{"injectables/AppClusterService.html":{},"interfaces/Msg.html":{}}}],["mso",{"_index":2413,"title":{},"body":{"injectables/MailService.html":{}}}],["multermodule",{"_index":1183,"title":{},"body":{"modules/AppModule.html":{}}}],["multermodule.register",{"_index":1241,"title":{},"body":{"modules/AppModule.html":{}}}],["myśliwiec",{"_index":3820,"title":{},"body":{"index.html":{}}}],["name",{"_index":18,"title":{},"body":{"injectables/ActivateMiddleware.html":{},"guards/AddContentGuard.html":{},"controllers/AdminController.html":{},"guards/AdminGuard.html":{},"interfaces/AdminInterface.html":{},"injectables/AdminJwtRefreshService.html":{},"modules/AdminModule.html":{},"classes/AdminRefreshToken.html":{},"interfaces/AdminRefreshTokenCreationAttrbs.html":{},"injectables/AdminService.html":{},"injectables/AdminUserMiddleware.html":{},"interfaces/AdmincreationAttrbs.html":{},"classes/AllExceptionsFilter.html":{},"classes/ApiError.html":{},"classes/ApiErrorExceptionFilter.html":{},"classes/ApiException.html":{},"classes/ApiExceptionFilter.html":{},"injectables/AppClusterService.html":{},"controllers/AppController.html":{},"injectables/AppListener.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"guards/AuthFerfershGuard.html":{},"injectables/AuthMiddleware.html":{},"modules/AuthModule.html":{},"interfaces/AuthUser.html":{},"classes/BadRequestError.html":{},"classes/Cart.html":{},"modules/CategoriesColoursModule.html":{},"controllers/CategoriesController.html":{},"injectables/CategoriesService.html":{},"interfaces/CategoryCreationAtrb.html":{},"interfaces/CodeDto.html":{},"interfaces/ColourCreationAtrb.html":{},"controllers/ColoursController.html":{},"injectables/ColoursService.html":{},"modules/CoreModule.html":{},"injectables/CorsMiddleware.html":{},"classes/CreateAdminDto.html":{},"classes/CreateOwnerDto.html":{},"classes/CreateReviewDto.html":{},"classes/CreateUserDto.html":{},"classes/Currencies.html":{},"injectables/CurrencyService.html":{},"guards/EditContentGuard.html":{},"guards/EditWebsiteGuard.html":{},"injectables/FilesService.html":{},"classes/GarbageCollectingProcessor.html":{},"injectables/GlobalInterceptor.html":{},"classes/HttpExceptionFilter.html":{},"injectables/InitializeEmailMiddleware.html":{},"interfaces/InitializeUser.html":{},"injectables/InitializeUserMiddleware.html":{},"guards/JwtAuthGuard.html":{},"classes/JwtRefreshTokenDeletedEvent.html":{},"injectables/LocationMiddleware.html":{},"injectables/MailService.html":{},"classes/MatchConstraint.html":{},"classes/NotFoundError.html":{},"classes/Order.html":{},"classes/Owner.html":{},"guards/OwnerAdminGuard.html":{},"interfaces/OwnerCreationAttrbs.html":{},"injectables/OwnerJwtRefreshService.html":{},"classes/OwnerRefreshToken.html":{},"interfaces/OwnerRefreshTokenCreationAttrbs.html":{},"injectables/OwnerService.html":{},"classes/ParseFormDataJsonPipe.html":{},"injectables/ParseJsonPipe.html":{},"interfaces/Payload.html":{},"classes/Product.html":{},"interfaces/ProductCreationAttrs.html":{},"injectables/ProductMiddleware.html":{},"modules/ProductModule.html":{},"guards/RefreshAuthGuard.html":{},"interfaces/ReturnedAdmin.html":{},"interfaces/ReturnedCategory.html":{},"interfaces/ReturnedColour.html":{},"interfaces/ReturnedOwner.html":{},"interfaces/ReturnedProduct.html":{},"interfaces/ReturnedProducts.html":{},"interfaces/ReturnedReview.html":{},"interfaces/ReturnedUser.html":{},"classes/Review.html":{},"interfaces/ReviewCreationAtrb.html":{},"controllers/ReviewsController.html":{},"modules/ReviewsModule.html":{},"injectables/ReviewsService.html":{},"interfaces/RolecreationAttrbs.html":{},"controllers/RolesController.html":{},"guards/RolesGuard.html":{},"modules/RolesModule.html":{},"injectables/RolesService.html":{},"classes/SignupDto.html":{},"injectables/TasksService.html":{},"modules/TelegramModule.html":{},"injectables/TelegramService.html":{},"injectables/ThrottlerBehindProxyGuard.html":{},"interfaces/Tokens.html":{},"classes/UpdateUserDto.html":{},"injectables/UserAdminMiddleware.html":{},"guards/UserGuard.html":{},"interfaces/UserInterface.html":{},"injectables/UserJwtRefreshTokenService.html":{},"injectables/UserMiddleware.html":{},"injectables/UserMiddleware-1.html":{},"interfaces/UserRefreshCreationAttrbs.html":{},"classes/UserRefreshToken.html":{},"interfaces/UsercreationAttrbs.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"injectables/ValidateDto.html":{},"interfaces/ValidateUser.html":{},"classes/ValidationException.html":{},"interfaces/fileCreated.html":{},"miscellaneous/functions.html":{}}}],["name'})@column({type",{"_index":2663,"title":{},"body":{"classes/Owner.html":{}}}],["name'})@isstring()@matches(/[a",{"_index":1946,"title":{},"body":{"classes/CreateAdminDto.html":{},"classes/CreateOwnerDto.html":{}}}],["name'})@isstring()@minlength(2)@maxlength(30)@isnotempty()@matches(/[a",{"_index":3267,"title":{},"body":{"classes/SignupDto.html":{}}}],["name'})@isstring()@minlength(2)@maxlength(30)@matches(/[a",{"_index":2062,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{}}}],["name}${ext",{"_index":2210,"title":{},"body":{"injectables/FilesService.html":{},"interfaces/fileCreated.html":{}}}],["need",{"_index":2528,"title":{},"body":{"injectables/MailService.html":{}}}],["nest",{"_index":3735,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["nested",{"_index":2034,"title":{"classes/Nested.html":{},"classes/Nested-1.html":{}},"body":{"classes/CreateProductDto.html":{},"classes/Nested.html":{},"classes/Nested-1.html":{},"classes/UpdateProductDto.html":{}}}],["nestframework",{"_index":3823,"title":{},"body":{"index.html":{}}}],["nestinterceptor",{"_index":2243,"title":{},"body":{"injectables/GlobalInterceptor.html":{}}}],["nestjs",{"_index":2352,"title":{},"body":{"modules/MailModule.html":{},"injectables/MailService.html":{},"dependencies.html":{}}}],["nestjs/axios",{"_index":555,"title":{},"body":{"modules/AdminModule.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CoreModule.html":{},"injectables/CurrencyService.html":{},"modules/OwnerModule.html":{},"modules/ProductModule.html":{},"modules/RolesModule.html":{},"modules/UsersModule.html":{},"dependencies.html":{}}}],["nestjs/bull",{"_index":1186,"title":{},"body":{"modules/AppModule.html":{},"modules/CoreModule.html":{},"classes/GarbageCollectingProcessor.html":{},"dependencies.html":{}}}],["nestjs/common",{"_index":36,"title":{},"body":{"injectables/ActivateMiddleware.html":{},"guards/AddContentGuard.html":{},"controllers/AdminController.html":{},"guards/AdminGuard.html":{},"injectables/AdminJwtRefreshService.html":{},"modules/AdminModule.html":{},"injectables/AdminService.html":{},"injectables/AdminUserMiddleware.html":{},"classes/AllExceptionsFilter.html":{},"classes/ApiError.html":{},"classes/ApiErrorExceptionFilter.html":{},"classes/ApiException.html":{},"classes/ApiExceptionFilter.html":{},"injectables/AppClusterService.html":{},"controllers/AppController.html":{},"injectables/AppListener.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"guards/AuthFerfershGuard.html":{},"injectables/AuthMiddleware.html":{},"modules/AuthModule.html":{},"classes/BadRequestError.html":{},"controllers/CardController.html":{},"injectables/CardService.html":{},"modules/CartModule.html":{},"modules/CategoriesColoursModule.html":{},"controllers/CategoriesController.html":{},"injectables/CategoriesService.html":{},"controllers/ColoursController.html":{},"injectables/ColoursService.html":{},"modules/CoreModule.html":{},"injectables/CorsMiddleware.html":{},"injectables/CurrencyService.html":{},"guards/EditContentGuard.html":{},"guards/EditWebsiteGuard.html":{},"injectables/FilesService.html":{},"classes/GarbageCollectingProcessor.html":{},"injectables/GlobalInterceptor.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/ITelegramModuleAsyncOptions.html":{},"interfaces/ITelegramOptions.html":{},"injectables/InitializeEmailMiddleware.html":{},"injectables/InitializeUserMiddleware.html":{},"guards/JwtAuthGuard.html":{},"injectables/LocationMiddleware.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"interfaces/Msg.html":{},"classes/NotFoundError.html":{},"controllers/OrdersController.html":{},"modules/OrdersModule.html":{},"injectables/OrdersService.html":{},"guards/OwnerAdminGuard.html":{},"injectables/OwnerJwtRefreshService.html":{},"modules/OwnerModule.html":{},"injectables/OwnerService.html":{},"classes/ParseFormDataJsonPipe.html":{},"injectables/ParseJsonPipe.html":{},"injectables/ProductMiddleware.html":{},"modules/ProductModule.html":{},"guards/RefreshAuthGuard.html":{},"interfaces/RequestHeaders.html":{},"controllers/ReviewsController.html":{},"modules/ReviewsModule.html":{},"injectables/ReviewsService.html":{},"controllers/RolesController.html":{},"guards/RolesGuard.html":{},"modules/RolesModule.html":{},"injectables/RolesService.html":{},"injectables/TasksService.html":{},"modules/TelegramModule.html":{},"injectables/TelegramService.html":{},"injectables/ThrottlerBehindProxyGuard.html":{},"injectables/UserAdminMiddleware.html":{},"guards/UserGuard.html":{},"injectables/UserJwtRefreshTokenService.html":{},"injectables/UserMiddleware.html":{},"injectables/UserMiddleware-1.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"injectables/ValidateDto.html":{},"classes/ValidationException.html":{},"dependencies.html":{},"interfaces/fileCreated.html":{}}}],["nestjs/common/decorators",{"_index":1067,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"injectables/InitializeEmailMiddleware.html":{},"injectables/InitializeUserMiddleware.html":{}}}],["nestjs/common/interfaces",{"_index":1143,"title":{},"body":{"injectables/AppListener.html":{},"injectables/CategoriesService.html":{},"injectables/ColoursService.html":{}}}],["nestjs/common/pipes",{"_index":225,"title":{},"body":{"controllers/AdminController.html":{}}}],["nestjs/config",{"_index":528,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CartModule.html":{},"modules/CategoriesColoursModule.html":{},"modules/CoreModule.html":{},"modules/MailModule.html":{},"modules/OrdersModule.html":{},"modules/OwnerModule.html":{},"modules/ProductModule.html":{},"modules/ReviewsModule.html":{},"modules/RolesModule.html":{},"modules/UsersModule.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":278,"title":{},"body":{"guards/AdminGuard.html":{},"classes/AllExceptionsFilter.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CoreModule.html":{},"guards/OwnerAdminGuard.html":{},"guards/RolesGuard.html":{},"guards/UserGuard.html":{},"dependencies.html":{}}}],["nestjs/event",{"_index":1145,"title":{},"body":{"injectables/AppListener.html":{},"modules/CoreModule.html":{},"injectables/TasksService.html":{},"dependencies.html":{}}}],["nestjs/jwt",{"_index":366,"title":{},"body":{"injectables/AdminJwtRefreshService.html":{},"modules/AdminModule.html":{},"modules/AuthModule.html":{},"injectables/OwnerJwtRefreshService.html":{},"modules/OwnerModule.html":{},"injectables/UserJwtRefreshTokenService.html":{},"modules/UsersModule.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":1184,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["nestjs/schedule",{"_index":1812,"title":{},"body":{"modules/CoreModule.html":{},"injectables/CurrencyService.html":{},"modules/OwnerModule.html":{},"injectables/OwnerService.html":{},"injectables/TasksService.html":{},"dependencies.html":{}}}],["nestjs/sequelize",{"_index":38,"title":{},"body":{"injectables/ActivateMiddleware.html":{},"injectables/AdminJwtRefreshService.html":{},"modules/AdminModule.html":{},"injectables/AdminService.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CartModule.html":{},"modules/CategoriesColoursModule.html":{},"injectables/CategoriesService.html":{},"injectables/ColoursService.html":{},"modules/CoreModule.html":{},"injectables/CurrencyService.html":{},"modules/MailModule.html":{},"modules/OrdersModule.html":{},"injectables/OwnerJwtRefreshService.html":{},"modules/OwnerModule.html":{},"injectables/OwnerService.html":{},"modules/ProductModule.html":{},"modules/ReviewsModule.html":{},"injectables/ReviewsService.html":{},"modules/RolesModule.html":{},"injectables/RolesService.html":{},"injectables/UserJwtRefreshTokenService.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["nestjs/serve",{"_index":3702,"title":{},"body":{"dependencies.html":{}}}],["nestjs/swagger",{"_index":137,"title":{},"body":{"classes/AddRoleDto.html":{},"controllers/AdminController.html":{},"classes/AdminRefreshToken.html":{},"controllers/AppController.html":{},"controllers/AuthController.html":{},"classes/BanUserDto.html":{},"controllers/CategoriesController.html":{},"classes/ChangeDto.html":{},"controllers/ColoursController.html":{},"classes/CreateAccessTokenDto.html":{},"classes/CreateAdminDto.html":{},"classes/CreateAdminRefreshTokenDto.html":{},"classes/CreateOwnerDto.html":{},"classes/CreateOwnerRefreshTokenDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserRefreshTokenDto.html":{},"classes/Currencies.html":{},"classes/LoginDto.html":{},"classes/Owner.html":{},"classes/OwnerRefreshToken.html":{},"classes/ResetDto.html":{},"classes/Role.html":{},"controllers/RolesController.html":{},"classes/SignupDto.html":{},"classes/UpdateUserDto.html":{},"classes/UserRefreshToken.html":{},"classes/UserRoles.html":{},"controllers/UsersController.html":{},"dependencies.html":{}}}],["nestjs/throttler",{"_index":222,"title":{},"body":{"controllers/AdminController.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"controllers/CategoriesController.html":{},"controllers/ColoursController.html":{},"controllers/ReviewsController.html":{},"controllers/RolesController.html":{},"injectables/ThrottlerBehindProxyGuard.html":{},"controllers/UsersController.html":{},"dependencies.html":{}}}],["nestjs/websockets",{"_index":3706,"title":{},"body":{"dependencies.html":{}}}],["nestmiddleware",{"_index":34,"title":{},"body":{"injectables/ActivateMiddleware.html":{},"injectables/AdminUserMiddleware.html":{},"injectables/AuthMiddleware.html":{},"injectables/CorsMiddleware.html":{},"injectables/InitializeEmailMiddleware.html":{},"injectables/InitializeUserMiddleware.html":{},"injectables/LocationMiddleware.html":{},"injectables/ProductMiddleware.html":{},"interfaces/RequestHeaders.html":{},"injectables/UserAdminMiddleware.html":{},"injectables/UserMiddleware.html":{},"injectables/UserMiddleware-1.html":{}}}],["nestmodule",{"_index":497,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CategoriesColoursModule.html":{},"modules/ProductModule.html":{},"modules/ReviewsModule.html":{},"modules/RolesModule.html":{},"modules/UsersModule.html":{}}}],["network",{"_index":2328,"title":{},"body":{"injectables/LocationMiddleware.html":{}}}],["new",{"_index":65,"title":{},"body":{"injectables/ActivateMiddleware.html":{},"guards/AddContentGuard.html":{},"guards/AdminGuard.html":{},"injectables/AdminJwtRefreshService.html":{},"injectables/AdminService.html":{},"injectables/AdminUserMiddleware.html":{},"classes/AllExceptionsFilter.html":{},"classes/ApiErrorExceptionFilter.html":{},"classes/ApiException.html":{},"classes/ApiExceptionFilter.html":{},"injectables/AppClusterService.html":{},"controllers/AppController.html":{},"guards/AuthFerfershGuard.html":{},"injectables/CategoriesService.html":{},"injectables/ColoursService.html":{},"injectables/CorsMiddleware.html":{},"injectables/CurrencyService.html":{},"guards/EditContentGuard.html":{},"guards/EditWebsiteGuard.html":{},"injectables/FilesService.html":{},"classes/GarbageCollectingProcessor.html":{},"injectables/GlobalInterceptor.html":{},"classes/HttpExceptionFilter.html":{},"injectables/InitializeEmailMiddleware.html":{},"injectables/InitializeUserMiddleware.html":{},"guards/JwtAuthGuard.html":{},"injectables/LocationMiddleware.html":{},"injectables/MailService.html":{},"interfaces/Msg.html":{},"guards/OwnerAdminGuard.html":{},"injectables/OwnerJwtRefreshService.html":{},"injectables/OwnerService.html":{},"injectables/ParseJsonPipe.html":{},"guards/RefreshAuthGuard.html":{},"interfaces/RequestHeaders.html":{},"classes/RequestValidator.html":{},"injectables/ReviewsService.html":{},"guards/RolesGuard.html":{},"injectables/TasksService.html":{},"injectables/TelegramService.html":{},"injectables/UserAdminMiddleware.html":{},"guards/UserGuard.html":{},"injectables/UserJwtRefreshTokenService.html":{},"injectables/UsersService.html":{},"injectables/ValidateDto.html":{},"interfaces/fileCreated.html":{}}}],["newlistener",{"_index":1822,"title":{},"body":{"modules/CoreModule.html":{}}}],["next",{"_index":25,"title":{},"body":{"injectables/ActivateMiddleware.html":{},"controllers/AdminController.html":{},"classes/AdminRefreshToken.html":{},"injectables/AdminUserMiddleware.html":{},"controllers/AppController.html":{},"controllers/AuthController.html":{},"injectables/AuthMiddleware.html":{},"injectables/CorsMiddleware.html":{},"classes/CreateAdminRefreshTokenDto.html":{},"classes/CreateOwnerDto.html":{},"classes/CreateOwnerRefreshTokenDto.html":{},"injectables/FilesService.html":{},"injectables/GlobalInterceptor.html":{},"injectables/InitializeEmailMiddleware.html":{},"injectables/InitializeUserMiddleware.html":{},"injectables/LocationMiddleware.html":{},"classes/Owner.html":{},"classes/OwnerRefreshToken.html":{},"injectables/ProductMiddleware.html":{},"interfaces/RequestHeaders.html":{},"classes/RequestValidator.html":{},"controllers/RolesController.html":{},"injectables/TasksService.html":{},"injectables/UserAdminMiddleware.html":{},"injectables/UserMiddleware.html":{},"injectables/UserMiddleware-1.html":{},"controllers/UsersController.html":{},"interfaces/fileCreated.html":{}}}],["next(err",{"_index":847,"title":{},"body":{"injectables/AdminUserMiddleware.html":{},"controllers/AppController.html":{},"injectables/AuthMiddleware.html":{},"injectables/InitializeEmailMiddleware.html":{},"injectables/InitializeUserMiddleware.html":{},"injectables/LocationMiddleware.html":{},"injectables/ProductMiddleware.html":{},"injectables/UserAdminMiddleware.html":{},"injectables/UserMiddleware.html":{},"injectables/UserMiddleware-1.html":{}}}],["next.handle().pipe",{"_index":2248,"title":{},"body":{"injectables/GlobalInterceptor.html":{}}}],["nextfunction",{"_index":26,"title":{},"body":{"injectables/ActivateMiddleware.html":{},"injectables/AdminUserMiddleware.html":{},"controllers/AppController.html":{},"controllers/AuthController.html":{},"injectables/AuthMiddleware.html":{},"injectables/CorsMiddleware.html":{},"injectables/InitializeEmailMiddleware.html":{},"injectables/InitializeUserMiddleware.html":{},"injectables/LocationMiddleware.html":{},"injectables/ProductMiddleware.html":{},"interfaces/RequestHeaders.html":{},"classes/RequestValidator.html":{},"injectables/UserAdminMiddleware.html":{},"injectables/UserMiddleware.html":{},"injectables/UserMiddleware-1.html":{},"controllers/UsersController.html":{}}}],["no_link_provided",{"_index":1384,"title":{},"body":{"guards/AuthFerfershGuard.html":{}}}],["no_right",{"_index":98,"title":{},"body":{"guards/AddContentGuard.html":{},"guards/EditContentGuard.html":{},"guards/EditWebsiteGuard.html":{}}}],["node",{"_index":1062,"title":{},"body":{"controllers/AppController.html":{},"injectables/LocationMiddleware.html":{},"dependencies.html":{}}}],["node.js",{"_index":3776,"title":{},"body":{"index.html":{}}}],["nodejs",{"_index":3733,"title":{},"body":{"dependencies.html":{}}}],["nodejs.arraybufferview",{"_index":2191,"title":{},"body":{"injectables/FilesService.html":{},"interfaces/fileCreated.html":{}}}],["nodejs.timeout",{"_index":1024,"title":{},"body":{"injectables/AppClusterService.html":{},"interfaces/Msg.html":{},"injectables/TasksService.html":{}}}],["nodejs.timer",{"_index":3297,"title":{},"body":{"injectables/TasksService.html":{}}}],["nodemailer",{"_index":3738,"title":{},"body":{"dependencies.html":{}}}],["none",{"_index":1885,"title":{},"body":{"injectables/CorsMiddleware.html":{},"injectables/MailService.html":{},"interfaces/RequestHeaders.html":{}}}],["nosniff",{"_index":71,"title":{},"body":{"injectables/ActivateMiddleware.html":{},"injectables/InitializeEmailMiddleware.html":{},"injectables/ProductMiddleware.html":{},"injectables/UserMiddleware.html":{},"injectables/UserMiddleware-1.html":{}}}],["not_activated",{"_index":733,"title":{},"body":{"injectables/AdminService.html":{},"classes/ApiException.html":{},"injectables/OwnerService.html":{}}}],["not_found_category",{"_index":1634,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["not_found_colour",{"_index":1778,"title":{},"body":{"injectables/ColoursService.html":{}}}],["notfounderror",{"_index":887,"title":{"classes/NotFoundError.html":{}},"body":{"classes/ApiError.html":{},"classes/BadRequestError.html":{},"classes/NotFoundError.html":{}}}],["notifyrequest",{"_index":1022,"title":{},"body":{"injectables/AppClusterService.html":{},"interfaces/Msg.html":{}}}],["npm",{"_index":3786,"title":{},"body":{"index.html":{}}}],["nt",{"_index":600,"title":{},"body":{"classes/AdminRefreshToken.html":{},"classes/CreateAdminRefreshTokenDto.html":{},"classes/CreateOwnerDto.html":{},"classes/CreateOwnerRefreshTokenDto.html":{},"classes/Owner.html":{},"classes/OwnerRefreshToken.html":{},"injectables/UserJwtRefreshTokenService.html":{}}}],["null",{"_index":107,"title":{},"body":{"guards/AddContentGuard.html":{},"injectables/AdminJwtRefreshService.html":{},"controllers/AuthController.html":{},"guards/AuthFerfershGuard.html":{},"interfaces/AuthUser.html":{},"interfaces/CodeDto.html":{},"injectables/CurrencyService.html":{},"guards/EditContentGuard.html":{},"guards/EditWebsiteGuard.html":{},"injectables/InitializeEmailMiddleware.html":{},"injectables/InitializeUserMiddleware.html":{},"guards/OwnerAdminGuard.html":{},"interfaces/Payload.html":{},"interfaces/ReturnedAdmin.html":{},"interfaces/ReturnedOwner.html":{},"interfaces/ReturnedUser.html":{},"interfaces/Tokens.html":{},"controllers/UsersController.html":{}}}],["number",{"_index":124,"title":{},"body":{"classes/AddRoleDto.html":{},"controllers/AdminController.html":{},"interfaces/AdminInterface.html":{},"injectables/AdminJwtRefreshService.html":{},"classes/AdminRefreshToken.html":{},"interfaces/AdminRefreshTokenCreationAttrbs.html":{},"injectables/AdminService.html":{},"interfaces/AdmincreationAttrbs.html":{},"classes/ApiError.html":{},"classes/ApiException.html":{},"injectables/AppClusterService.html":{},"controllers/AppController.html":{},"controllers/AuthController.html":{},"interfaces/AuthUser.html":{},"classes/BadRequestError.html":{},"classes/BanUserDto.html":{},"classes/BookmarksProducts.html":{},"classes/Cart.html":{},"classes/CartProduct.html":{},"controllers/CategoriesController.html":{},"injectables/CategoriesService.html":{},"classes/Category.html":{},"interfaces/CategoryCreationAtrb.html":{},"interfaces/CodeDto.html":{},"classes/Colour.html":{},"interfaces/ColourCreationAtrb.html":{},"controllers/ColoursController.html":{},"injectables/ColoursService.html":{},"classes/CreateAccessTokenDto.html":{},"classes/CreateAdminDto.html":{},"classes/CreateAdminRefreshTokenDto.html":{},"classes/CreateOwnerDto.html":{},"classes/CreateOwnerRefreshTokenDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserRefreshTokenDto.html":{},"classes/Currencies.html":{},"injectables/CurrencyService.html":{},"interfaces/InitializeUser.html":{},"classes/JwtRefreshTokenDeletedEvent.html":{},"injectables/MailService.html":{},"interfaces/Msg.html":{},"classes/Nested.html":{},"classes/Nested-1.html":{},"classes/NotFoundError.html":{},"classes/Order.html":{},"classes/OrderProduct.html":{},"classes/Owner.html":{},"interfaces/OwnerCreationAttrbs.html":{},"injectables/OwnerJwtRefreshService.html":{},"classes/OwnerRefreshToken.html":{},"interfaces/OwnerRefreshTokenCreationAttrbs.html":{},"injectables/OwnerService.html":{},"interfaces/Payload.html":{},"classes/Product.html":{},"classes/ProductCategories.html":{},"classes/ProductColours.html":{},"interfaces/ProductCreationAttrs.html":{},"classes/ProductReviews.html":{},"classes/QueryFilterDto.html":{},"interfaces/ReturnedAdmin.html":{},"interfaces/ReturnedCategory.html":{},"interfaces/ReturnedColour.html":{},"interfaces/ReturnedOwner.html":{},"interfaces/ReturnedProduct.html":{},"interfaces/ReturnedProducts.html":{},"interfaces/ReturnedReview.html":{},"interfaces/ReturnedUser.html":{},"classes/Review.html":{},"interfaces/ReviewCreationAtrb.html":{},"controllers/ReviewsController.html":{},"injectables/ReviewsService.html":{},"classes/Role.html":{},"interfaces/RolecreationAttrbs.html":{},"classes/SignupDto.html":{},"injectables/TasksService.html":{},"interfaces/Tokens.html":{},"classes/UpdateProductDto.html":{},"interfaces/UserInterface.html":{},"injectables/UserJwtRefreshTokenService.html":{},"interfaces/UserRefreshCreationAttrbs.html":{},"classes/UserRefreshToken.html":{},"classes/UserRoles.html":{},"interfaces/UsercreationAttrbs.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"interfaces/ValidateUser.html":{},"classes/WatchedProducts.html":{}}}],["number'})@isstring()@isemail()@matches(/^[\\+]?[(]?[0",{"_index":2067,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["number'})@isstring()@matches(/^[\\+]?[(]?[0",{"_index":1954,"title":{},"body":{"classes/CreateAdminDto.html":{},"classes/CreateOwnerDto.html":{},"classes/SignupDto.html":{}}}],["number(date.now",{"_index":76,"title":{},"body":{"injectables/ActivateMiddleware.html":{},"injectables/AdminService.html":{},"injectables/OwnerService.html":{},"injectables/UsersService.html":{}}}],["number(process.env.mailer_port?.trim",{"_index":2357,"title":{},"body":{"modules/MailModule.html":{}}}],["number(process.env.pgport",{"_index":1265,"title":{},"body":{"modules/AppModule.html":{}}}],["number(process.env.redis_port",{"_index":1223,"title":{},"body":{"modules/AppModule.html":{}}}],["number(process.env.salt_rounds",{"_index":822,"title":{},"body":{"injectables/AdminService.html":{},"injectables/OwnerService.html":{},"injectables/UsersService.html":{}}}],["number(req.query?.code",{"_index":63,"title":{},"body":{"injectables/ActivateMiddleware.html":{}}}],["number(resetdto.code",{"_index":815,"title":{},"body":{"injectables/AdminService.html":{},"injectables/OwnerService.html":{},"injectables/UsersService.html":{}}}],["number(value.value",{"_index":2044,"title":{},"body":{"classes/CreateProductDto.html":{},"classes/Nested.html":{},"classes/Nested-1.html":{},"classes/UpdateProductDto.html":{}}}],["number,identifier",{"_index":3300,"title":{},"body":{"injectables/TasksService.html":{}}}],["numcpus",{"_index":988,"title":{},"body":{"injectables/AppClusterService.html":{},"interfaces/Msg.html":{}}}],["numreqs",{"_index":1013,"title":{},"body":{"injectables/AppClusterService.html":{},"interfaces/Msg.html":{}}}],["obj",{"_index":3671,"title":{},"body":{"injectables/ValidateDto.html":{}}}],["object",{"_index":1833,"title":{},"body":{"injectables/CorsMiddleware.html":{},"classes/MatchConstraint.html":{},"interfaces/RequestHeaders.html":{}}}],["object.constructor",{"_index":2554,"title":{},"body":{"classes/MatchConstraint.html":{}}}],["object.keys(data)[1].touppercase().trim",{"_index":2144,"title":{},"body":{"injectables/CurrencyService.html":{}}}],["object.prototype.hasownproperty.call(object",{"_index":1899,"title":{},"body":{"injectables/CorsMiddleware.html":{},"interfaces/RequestHeaders.html":{}}}],["object.values(err.constraints).join",{"_index":3677,"title":{},"body":{"injectables/ValidateDto.html":{}}}],["object.values(erroritem.constraints",{"_index":3108,"title":{},"body":{"classes/RequestValidator.html":{}}}],["observable",{"_index":94,"title":{},"body":{"guards/AddContentGuard.html":{},"guards/AdminGuard.html":{},"controllers/AppController.html":{},"guards/AuthFerfershGuard.html":{},"guards/EditContentGuard.html":{},"guards/EditWebsiteGuard.html":{},"injectables/GlobalInterceptor.html":{},"guards/JwtAuthGuard.html":{},"guards/OwnerAdminGuard.html":{},"guards/RefreshAuthGuard.html":{},"guards/RolesGuard.html":{},"guards/UserGuard.html":{}}}],["occured",{"_index":2201,"title":{},"body":{"injectables/FilesService.html":{},"interfaces/fileCreated.html":{}}}],["offset",{"_index":744,"title":{},"body":{"injectables/AdminService.html":{},"injectables/UsersService.html":{}}}],["ogsb",{"_index":2432,"title":{},"body":{"injectables/MailService.html":{}}}],["ol",{"_index":2447,"title":{},"body":{"injectables/MailService.html":{}}}],["onevent",{"_index":1144,"title":{},"body":{"injectables/AppListener.html":{}}}],["onevent('refreshtoken.deleted",{"_index":1140,"title":{},"body":{"injectables/AppListener.html":{}}}],["open",{"_index":3803,"title":{},"body":{"index.html":{}}}],["optional",{"_index":19,"title":{},"body":{"injectables/ActivateMiddleware.html":{},"guards/AddContentGuard.html":{},"controllers/AdminController.html":{},"guards/AdminGuard.html":{},"injectables/AdminJwtRefreshService.html":{},"modules/AdminModule.html":{},"classes/AdminRefreshToken.html":{},"injectables/AdminService.html":{},"injectables/AdminUserMiddleware.html":{},"classes/AllExceptionsFilter.html":{},"classes/ApiError.html":{},"classes/ApiErrorExceptionFilter.html":{},"classes/ApiException.html":{},"classes/ApiExceptionFilter.html":{},"injectables/AppClusterService.html":{},"controllers/AppController.html":{},"injectables/AppListener.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"guards/AuthFerfershGuard.html":{},"injectables/AuthMiddleware.html":{},"modules/AuthModule.html":{},"classes/BadRequestError.html":{},"classes/Cart.html":{},"modules/CategoriesColoursModule.html":{},"controllers/CategoriesController.html":{},"injectables/CategoriesService.html":{},"controllers/ColoursController.html":{},"injectables/ColoursService.html":{},"injectables/CorsMiddleware.html":{},"classes/CreateAccessTokenDto.html":{},"classes/Currencies.html":{},"injectables/CurrencyService.html":{},"guards/EditContentGuard.html":{},"guards/EditWebsiteGuard.html":{},"injectables/FilesService.html":{},"classes/GarbageCollectingProcessor.html":{},"injectables/GlobalInterceptor.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/ITelegramModuleAsyncOptions.html":{},"injectables/InitializeEmailMiddleware.html":{},"injectables/InitializeUserMiddleware.html":{},"guards/JwtAuthGuard.html":{},"classes/JwtRefreshTokenDeletedEvent.html":{},"injectables/LocationMiddleware.html":{},"injectables/MailService.html":{},"classes/MatchConstraint.html":{},"classes/NotFoundError.html":{},"classes/Order.html":{},"classes/Owner.html":{},"guards/OwnerAdminGuard.html":{},"injectables/OwnerJwtRefreshService.html":{},"classes/OwnerRefreshToken.html":{},"injectables/OwnerService.html":{},"classes/ParseFormDataJsonPipe.html":{},"injectables/ParseJsonPipe.html":{},"interfaces/Payload.html":{},"classes/Product.html":{},"interfaces/ProductCreationAttrs.html":{},"injectables/ProductMiddleware.html":{},"modules/ProductModule.html":{},"classes/QueryFilterDto.html":{},"guards/RefreshAuthGuard.html":{},"interfaces/RequestHeaders.html":{},"controllers/ReviewsController.html":{},"modules/ReviewsModule.html":{},"injectables/ReviewsService.html":{},"controllers/RolesController.html":{},"guards/RolesGuard.html":{},"modules/RolesModule.html":{},"injectables/RolesService.html":{},"injectables/TasksService.html":{},"modules/TelegramModule.html":{},"injectables/TelegramService.html":{},"injectables/ThrottlerBehindProxyGuard.html":{},"injectables/UserAdminMiddleware.html":{},"guards/UserGuard.html":{},"injectables/UserJwtRefreshTokenService.html":{},"injectables/UserMiddleware.html":{},"injectables/UserMiddleware-1.html":{},"classes/UserRefreshToken.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"injectables/ValidateDto.html":{},"classes/ValidationException.html":{},"miscellaneous/functions.html":{}}}],["options",{"_index":70,"title":{},"body":{"injectables/ActivateMiddleware.html":{},"injectables/CorsMiddleware.html":{},"injectables/InitializeEmailMiddleware.html":{},"classes/MatchConstraint.html":{},"classes/ParseFormDataJsonPipe.html":{},"injectables/ProductMiddleware.html":{},"interfaces/RequestHeaders.html":{},"modules/TelegramModule.html":{},"injectables/TelegramService.html":{},"injectables/UserMiddleware.html":{},"injectables/UserMiddleware-1.html":{}}}],["options.imports",{"_index":3375,"title":{},"body":{"modules/TelegramModule.html":{}}}],["options.inject",{"_index":3378,"title":{},"body":{"modules/TelegramModule.html":{}}}],["options.usefactory(...args",{"_index":3377,"title":{},"body":{"modules/TelegramModule.html":{}}}],["order",{"_index":545,"title":{"classes/Order.html":{}},"body":{"modules/AdminModule.html":{},"injectables/AdminService.html":{},"modules/AppModule.html":{},"modules/CartModule.html":{},"modules/CoreModule.html":{},"modules/MailModule.html":{},"classes/Order.html":{},"classes/OrderProduct.html":{},"modules/OrdersModule.html":{},"modules/OwnerModule.html":{},"classes/Product.html":{},"modules/ProductModule.html":{},"classes/QueryFilterDto.html":{},"modules/ReviewsModule.html":{},"modules/RolesModule.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["order.model",{"_index":2611,"title":{},"body":{"classes/OrderProduct.html":{}}}],["order.product.model",{"_index":2592,"title":{},"body":{"classes/Order.html":{}}}],["orderid",{"_index":2600,"title":{},"body":{"classes/OrderProduct.html":{}}}],["orderproduct",{"_index":547,"title":{"classes/OrderProduct.html":{}},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/CartModule.html":{},"modules/CoreModule.html":{},"modules/MailModule.html":{},"classes/Order.html":{},"classes/OrderProduct.html":{},"modules/OrdersModule.html":{},"modules/OwnerModule.html":{},"classes/Product.html":{},"modules/ProductModule.html":{},"modules/ReviewsModule.html":{},"modules/RolesModule.html":{},"modules/UsersModule.html":{}}}],["orderproducts",{"_index":2575,"title":{},"body":{"classes/Order.html":{}}}],["orders",{"_index":2593,"title":{},"body":{"classes/Order.html":{},"controllers/OrdersController.html":{},"classes/Product.html":{}}}],["orders.controller",{"_index":2622,"title":{},"body":{"modules/OrdersModule.html":{}}}],["orders.service",{"_index":2621,"title":{},"body":{"modules/OrdersModule.html":{}}}],["orders/models/order.model",{"_index":546,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/CartModule.html":{},"modules/CoreModule.html":{},"modules/MailModule.html":{},"modules/OwnerModule.html":{},"classes/Product.html":{},"modules/ProductModule.html":{},"modules/ReviewsModule.html":{},"modules/RolesModule.html":{},"modules/UsersModule.html":{}}}],["orders/models/order.product.model",{"_index":548,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/CartModule.html":{},"modules/CoreModule.html":{},"modules/MailModule.html":{},"modules/OwnerModule.html":{},"classes/Product.html":{},"modules/ProductModule.html":{},"modules/ReviewsModule.html":{},"modules/RolesModule.html":{},"modules/UsersModule.html":{}}}],["orders/orders.module",{"_index":1176,"title":{},"body":{"modules/AppModule.html":{},"modules/CartModule.html":{},"modules/ProductModule.html":{},"modules/ReviewsModule.html":{}}}],["orderscontroller",{"_index":2614,"title":{"controllers/OrdersController.html":{}},"body":{"controllers/OrdersController.html":{},"modules/OrdersModule.html":{}}}],["ordersmodule",{"_index":1156,"title":{"modules/OrdersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CartModule.html":{},"modules/OrdersModule.html":{},"modules/ProductModule.html":{},"modules/ReviewsModule.html":{},"modules.html":{},"overview.html":{}}}],["ordersservice",{"_index":2619,"title":{"injectables/OrdersService.html":{}},"body":{"modules/OrdersModule.html":{},"injectables/OrdersService.html":{},"overview.html":{}}}],["orderstatus",{"_index":2576,"title":{},"body":{"classes/Order.html":{}}}],["origin",{"_index":1401,"title":{},"body":{"injectables/AuthMiddleware.html":{},"injectables/CorsMiddleware.html":{},"injectables/ProductMiddleware.html":{},"interfaces/RequestHeaders.html":{},"injectables/UserMiddleware.html":{},"injectables/UserMiddleware-1.html":{}}}],["originproperties",{"_index":2938,"title":{},"body":{"classes/ParseFormDataJsonPipe.html":{}}}],["os",{"_index":986,"title":{},"body":{"injectables/AppClusterService.html":{},"interfaces/Msg.html":{}}}],["out",{"_index":486,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"modules/CartModule.html":{},"modules/CategoriesColoursModule.html":{},"modules/CoreModule.html":{},"modules/MailModule.html":{},"modules/OrdersModule.html":{},"modules/OwnerModule.html":{},"modules/ProductModule.html":{},"modules/ReviewsModule.html":{},"modules/RolesModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["outlook",{"_index":2403,"title":{},"body":{"injectables/MailService.html":{}}}],["overflow:hidden",{"_index":2428,"title":{},"body":{"injectables/MailService.html":{}}}],["overflow:visible!important",{"_index":2509,"title":{},"body":{"injectables/MailService.html":{}}}],["override",{"_index":1858,"title":{},"body":{"injectables/CorsMiddleware.html":{},"interfaces/RequestHeaders.html":{}}}],["overview",{"_index":3830,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["owner",{"_index":45,"title":{"classes/Owner.html":{}},"body":{"injectables/ActivateMiddleware.html":{},"guards/AddContentGuard.html":{},"injectables/AdminJwtRefreshService.html":{},"modules/AdminModule.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"guards/AuthFerfershGuard.html":{},"modules/AuthModule.html":{},"interfaces/AuthUser.html":{},"modules/CartModule.html":{},"modules/CategoriesColoursModule.html":{},"interfaces/CodeDto.html":{},"modules/CoreModule.html":{},"classes/CreateOwnerRefreshTokenDto.html":{},"classes/Currencies.html":{},"injectables/CurrencyService.html":{},"guards/EditContentGuard.html":{},"guards/EditWebsiteGuard.html":{},"injectables/InitializeEmailMiddleware.html":{},"injectables/InitializeUserMiddleware.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"modules/OrdersModule.html":{},"classes/Owner.html":{},"guards/OwnerAdminGuard.html":{},"injectables/OwnerJwtRefreshService.html":{},"modules/OwnerModule.html":{},"classes/OwnerRefreshToken.html":{},"injectables/OwnerService.html":{},"interfaces/Payload.html":{},"classes/Product.html":{},"modules/ProductModule.html":{},"interfaces/ReturnedAdmin.html":{},"interfaces/ReturnedOwner.html":{},"interfaces/ReturnedUser.html":{},"modules/ReviewsModule.html":{},"classes/Role.html":{},"modules/RolesModule.html":{},"injectables/TasksService.html":{},"interfaces/Tokens.html":{},"classes/UserRoles.html":{},"modules/UsersModule.html":{}}}],["owner.$add('ownerrefreshtokens",{"_index":2772,"title":{},"body":{"injectables/OwnerJwtRefreshService.html":{}}}],["owner.$remove('ownerrefreshtokens",{"_index":2789,"title":{},"body":{"injectables/OwnerJwtRefreshService.html":{}}}],["owner.$set('ownerrefreshtokens",{"_index":2770,"title":{},"body":{"injectables/OwnerJwtRefreshService.html":{}}}],["owner.$set('roles",{"_index":2898,"title":{},"body":{"injectables/OwnerService.html":{}}}],["owner.activationlink",{"_index":2912,"title":{},"body":{"injectables/OwnerService.html":{}}}],["owner.create(ownerdto",{"_index":2893,"title":{},"body":{"injectables/OwnerService.html":{}}}],["owner.email",{"_index":2271,"title":{},"body":{"injectables/InitializeEmailMiddleware.html":{},"injectables/MailService.html":{},"injectables/OwnerJwtRefreshService.html":{},"injectables/OwnerService.html":{}}}],["owner.findbypk(ownerid",{"_index":2139,"title":{},"body":{"injectables/CurrencyService.html":{}}}],["owner.findone",{"_index":2888,"title":{},"body":{"injectables/OwnerService.html":{}}}],["owner.getconfirmcode",{"_index":2917,"title":{},"body":{"injectables/OwnerService.html":{}}}],["owner.getisactivated",{"_index":75,"title":{},"body":{"injectables/ActivateMiddleware.html":{},"injectables/OwnerService.html":{}}}],["owner.getowneragent",{"_index":2774,"title":{},"body":{"injectables/OwnerJwtRefreshService.html":{}}}],["owner.getowneragent().trim",{"_index":2779,"title":{},"body":{"injectables/OwnerJwtRefreshService.html":{}}}],["owner.getownerrefreshtokens",{"_index":2768,"title":{},"body":{"injectables/OwnerJwtRefreshService.html":{}}}],["owner.getownerrefreshtokens().length",{"_index":2769,"title":{},"body":{"injectables/OwnerJwtRefreshService.html":{}}}],["owner.getpassword",{"_index":2910,"title":{},"body":{"injectables/OwnerService.html":{}}}],["owner.getresettokenexpiration",{"_index":2916,"title":{},"body":{"injectables/OwnerService.html":{}}}],["owner.id",{"_index":2767,"title":{},"body":{"injectables/OwnerJwtRefreshService.html":{}}}],["owner.model",{"_index":2096,"title":{},"body":{"classes/Currencies.html":{},"classes/OwnerRefreshToken.html":{}}}],["owner.name",{"_index":2891,"title":{},"body":{"injectables/OwnerService.html":{}}}],["owner.ownerrefreshtokens",{"_index":2771,"title":{},"body":{"injectables/OwnerJwtRefreshService.html":{}}}],["owner.phonenumber",{"_index":2889,"title":{},"body":{"injectables/OwnerService.html":{}}}],["owner.refresh.token.model",{"_index":2716,"title":{},"body":{"classes/Owner.html":{}}}],["owner.roles",{"_index":2900,"title":{},"body":{"injectables/OwnerService.html":{}}}],["owner.save",{"_index":2777,"title":{},"body":{"injectables/OwnerJwtRefreshService.html":{},"injectables/OwnerService.html":{}}}],["owner.service",{"_index":2761,"title":{},"body":{"injectables/OwnerJwtRefreshService.html":{}}}],["owner.setactivationcode(code",{"_index":2783,"title":{},"body":{"injectables/OwnerJwtRefreshService.html":{}}}],["owner.setconfirmcode(code",{"_index":2914,"title":{},"body":{"injectables/OwnerService.html":{}}}],["owner.setisactivated(false",{"_index":2780,"title":{},"body":{"injectables/OwnerJwtRefreshService.html":{},"injectables/OwnerService.html":{}}}],["owner.setnewpasssword(hashedpassword",{"_index":2920,"title":{},"body":{"injectables/OwnerService.html":{}}}],["owner.setowneragent(owneragent",{"_index":2775,"title":{},"body":{"injectables/OwnerJwtRefreshService.html":{}}}],["owner.setresettoken",{"_index":2782,"title":{},"body":{"injectables/OwnerJwtRefreshService.html":{}}}],["owner.setresettokenexpiration(number(date.now",{"_index":2784,"title":{},"body":{"injectables/OwnerJwtRefreshService.html":{},"injectables/OwnerService.html":{}}}],["owner.surname",{"_index":2892,"title":{},"body":{"injectables/OwnerService.html":{}}}],["owner/constants/jwt",{"_index":949,"title":{},"body":{"classes/ApiException.html":{}}}],["owner/constants/owner.constants",{"_index":947,"title":{},"body":{"classes/ApiException.html":{},"injectables/MailService.html":{}}}],["owner/models/currencies.model",{"_index":1196,"title":{},"body":{"modules/AppModule.html":{},"modules/CoreModule.html":{},"injectables/TasksService.html":{},"modules/UsersModule.html":{}}}],["owner/models/owner.model",{"_index":46,"title":{},"body":{"injectables/ActivateMiddleware.html":{},"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CartModule.html":{},"modules/CategoriesColoursModule.html":{},"modules/CoreModule.html":{},"modules/MailModule.html":{},"modules/OrdersModule.html":{},"classes/Product.html":{},"modules/ProductModule.html":{},"modules/ReviewsModule.html":{},"classes/Role.html":{},"modules/RolesModule.html":{},"classes/UserRoles.html":{},"modules/UsersModule.html":{}}}],["owner/models/owner.refresh.token.model",{"_index":517,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CartModule.html":{},"modules/CategoriesColoursModule.html":{},"modules/CoreModule.html":{},"modules/MailModule.html":{},"modules/OrdersModule.html":{},"guards/OwnerAdminGuard.html":{},"modules/ProductModule.html":{},"modules/ReviewsModule.html":{},"modules/RolesModule.html":{},"modules/UsersModule.html":{}}}],["owner/owner.module",{"_index":506,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CategoriesColoursModule.html":{},"modules/CoreModule.html":{},"modules/MailModule.html":{},"modules/ProductModule.html":{},"modules/ReviewsModule.html":{},"modules/RolesModule.html":{},"modules/UsersModule.html":{}}}],["owner/services/currency.service",{"_index":1421,"title":{},"body":{"modules/AuthModule.html":{},"modules/CoreModule.html":{},"injectables/LocationMiddleware.html":{},"injectables/TasksService.html":{},"modules/UsersModule.html":{}}}],["owner/services/jwt",{"_index":1416,"title":{},"body":{"modules/AuthModule.html":{},"injectables/InitializeUserMiddleware.html":{},"guards/OwnerAdminGuard.html":{}}}],["owner/services/owner.service",{"_index":510,"title":{},"body":{"modules/AdminModule.html":{},"guards/AuthFerfershGuard.html":{},"injectables/InitializeEmailMiddleware.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"injectables/TasksService.html":{}}}],["owner@gmail.com",{"_index":2012,"title":{},"body":{"classes/CreateOwnerRefreshTokenDto.html":{},"classes/Owner.html":{},"classes/OwnerRefreshToken.html":{}}}],["owner_id_not_provided",{"_index":937,"title":{},"body":{"classes/ApiException.html":{},"injectables/OwnerService.html":{}}}],["owner_not_authorizied",{"_index":2736,"title":{},"body":{"guards/OwnerAdminGuard.html":{}}}],["owner_not_found",{"_index":943,"title":{},"body":{"classes/ApiException.html":{},"injectables/MailService.html":{},"injectables/OwnerJwtRefreshService.html":{},"injectables/OwnerService.html":{}}}],["owner_or_role_not_found",{"_index":944,"title":{},"body":{"classes/ApiException.html":{}}}],["owner_with_email_doesnt_exist",{"_index":929,"title":{},"body":{"classes/ApiException.html":{}}}],["owner_with_email_exist",{"_index":927,"title":{},"body":{"classes/ApiException.html":{},"injectables/OwnerService.html":{}}}],["owner_with_phonenumber_exist",{"_index":928,"title":{},"body":{"classes/ApiException.html":{},"injectables/OwnerService.html":{}}}],["owner`s",{"_index":1997,"title":{},"body":{"classes/CreateOwnerDto.html":{},"classes/CreateOwnerRefreshTokenDto.html":{},"classes/Owner.html":{},"classes/OwnerRefreshToken.html":{}}}],["owner`s_refresh",{"_index":2827,"title":{},"body":{"classes/OwnerRefreshToken.html":{}}}],["owneradminguard",{"_index":161,"title":{"guards/OwnerAdminGuard.html":{}},"body":{"controllers/AdminController.html":{},"controllers/CategoriesController.html":{},"controllers/ColoursController.html":{},"guards/OwnerAdminGuard.html":{},"controllers/ReviewsController.html":{},"controllers/RolesController.html":{},"controllers/UsersController.html":{}}}],["owneragent",{"_index":1996,"title":{},"body":{"classes/CreateOwnerDto.html":{},"classes/CreateOwnerRefreshTokenDto.html":{},"classes/Owner.html":{},"interfaces/OwnerCreationAttrbs.html":{},"injectables/OwnerJwtRefreshService.html":{},"classes/OwnerRefreshToken.html":{},"interfaces/OwnerRefreshTokenCreationAttrbs.html":{}}}],["ownercreationattrbs",{"_index":2714,"title":{"interfaces/OwnerCreationAttrbs.html":{}},"body":{"classes/Owner.html":{},"interfaces/OwnerCreationAttrbs.html":{},"interfaces/OwnerRefreshTokenCreationAttrbs.html":{}}}],["ownerdata",{"_index":2763,"title":{},"body":{"injectables/OwnerJwtRefreshService.html":{}}}],["ownerdto",{"_index":2871,"title":{},"body":{"injectables/OwnerService.html":{}}}],["ownerdto.password",{"_index":2909,"title":{},"body":{"injectables/OwnerService.html":{}}}],["ownerid",{"_index":1681,"title":{},"body":{"interfaces/CategoryCreationAtrb.html":{},"interfaces/ColourCreationAtrb.html":{},"classes/CreateOwnerRefreshTokenDto.html":{},"classes/Currencies.html":{},"injectables/CurrencyService.html":{},"interfaces/OwnerCreationAttrbs.html":{},"injectables/OwnerJwtRefreshService.html":{},"classes/OwnerRefreshToken.html":{},"interfaces/OwnerRefreshTokenCreationAttrbs.html":{},"injectables/OwnerService.html":{},"classes/Product.html":{},"interfaces/ProductCreationAttrs.html":{},"interfaces/ReturnedCategory.html":{},"interfaces/ReturnedColour.html":{},"interfaces/ReturnedProduct.html":{},"interfaces/ReturnedProducts.html":{},"interfaces/ReturnedReview.html":{},"interfaces/ReviewCreationAtrb.html":{},"classes/UserRoles.html":{}}}],["ownerid'})@foreignkey(undefined)@column({type",{"_index":2812,"title":{},"body":{"classes/OwnerRefreshToken.html":{},"classes/UserRoles.html":{}}}],["ownerjwtrefreshservice",{"_index":1407,"title":{"injectables/OwnerJwtRefreshService.html":{}},"body":{"modules/AuthModule.html":{},"injectables/InitializeUserMiddleware.html":{},"guards/OwnerAdminGuard.html":{},"injectables/OwnerJwtRefreshService.html":{},"modules/OwnerModule.html":{},"overview.html":{}}}],["ownerjwtrefreshtokenservice",{"_index":2283,"title":{},"body":{"injectables/InitializeUserMiddleware.html":{},"guards/OwnerAdminGuard.html":{}}}],["ownermodule",{"_index":505,"title":{"modules/OwnerModule.html":{}},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CategoriesColoursModule.html":{},"modules/CoreModule.html":{},"modules/MailModule.html":{},"modules/OwnerModule.html":{},"modules/ProductModule.html":{},"modules/ReviewsModule.html":{},"modules/RolesModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["ownername_validation",{"_index":2000,"title":{},"body":{"classes/CreateOwnerDto.html":{}}}],["ownerrefreshtoken",{"_index":516,"title":{"classes/OwnerRefreshToken.html":{}},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CartModule.html":{},"modules/CategoriesColoursModule.html":{},"modules/CoreModule.html":{},"injectables/InitializeUserMiddleware.html":{},"modules/MailModule.html":{},"modules/OrdersModule.html":{},"classes/Owner.html":{},"guards/OwnerAdminGuard.html":{},"interfaces/OwnerCreationAttrbs.html":{},"injectables/OwnerJwtRefreshService.html":{},"modules/OwnerModule.html":{},"classes/OwnerRefreshToken.html":{},"interfaces/OwnerRefreshTokenCreationAttrbs.html":{},"modules/ProductModule.html":{},"modules/ReviewsModule.html":{},"modules/RolesModule.html":{},"injectables/TasksService.html":{},"modules/UsersModule.html":{}}}],["ownerrefreshtoken.destroy",{"_index":2793,"title":{},"body":{"injectables/OwnerJwtRefreshService.html":{}}}],["ownerrefreshtoken.findone",{"_index":2792,"title":{},"body":{"injectables/OwnerJwtRefreshService.html":{}}}],["ownerrefreshtokencreationattrbs",{"_index":2740,"title":{"interfaces/OwnerRefreshTokenCreationAttrbs.html":{}},"body":{"interfaces/OwnerCreationAttrbs.html":{},"classes/OwnerRefreshToken.html":{},"interfaces/OwnerRefreshTokenCreationAttrbs.html":{}}}],["ownerrefreshtokenid",{"_index":2755,"title":{},"body":{"injectables/OwnerJwtRefreshService.html":{}}}],["ownerrefreshtokenrepository",{"_index":2742,"title":{},"body":{"injectables/OwnerJwtRefreshService.html":{}}}],["ownerrefreshtokens",{"_index":2628,"title":{},"body":{"classes/Owner.html":{}}}],["ownerrepository",{"_index":13,"title":{},"body":{"injectables/ActivateMiddleware.html":{},"injectables/CurrencyService.html":{},"injectables/OwnerService.html":{}}}],["ownerrole",{"_index":2895,"title":{},"body":{"injectables/OwnerService.html":{}}}],["ownerrole.id",{"_index":2899,"title":{},"body":{"injectables/OwnerService.html":{}}}],["owners",{"_index":3195,"title":{},"body":{"classes/Role.html":{}}}],["ownerservice",{"_index":482,"title":{"injectables/OwnerService.html":{}},"body":{"modules/AdminModule.html":{},"guards/AuthFerfershGuard.html":{},"injectables/InitializeEmailMiddleware.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"injectables/OwnerJwtRefreshService.html":{},"modules/OwnerModule.html":{},"injectables/OwnerService.html":{},"injectables/TasksService.html":{},"overview.html":{}}}],["ownerservice.creatingowner",{"_index":2878,"title":{},"body":{"injectables/OwnerService.html":{},"injectables/TasksService.html":{}}}],["owns",{"_index":2897,"title":{},"body":{"injectables/OwnerService.html":{}}}],["p",{"_index":2444,"title":{},"body":{"injectables/MailService.html":{}}}],["p,.externalclass",{"_index":2406,"title":{},"body":{"injectables/MailService.html":{}}}],["p0",{"_index":2491,"title":{},"body":{"injectables/MailService.html":{}}}],["p0b",{"_index":2500,"title":{},"body":{"injectables/MailService.html":{}}}],["p0l",{"_index":2496,"title":{},"body":{"injectables/MailService.html":{}}}],["p0r",{"_index":2493,"title":{},"body":{"injectables/MailService.html":{}}}],["p0t",{"_index":2498,"title":{},"body":{"injectables/MailService.html":{}}}],["p20b",{"_index":2502,"title":{},"body":{"injectables/MailService.html":{}}}],["package",{"_index":3688,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["padding",{"_index":2494,"title":{},"body":{"injectables/MailService.html":{}}}],["padding:0;}.externalclass",{"_index":2404,"title":{},"body":{"injectables/MailService.html":{}}}],["padding:0px!important",{"_index":2492,"title":{},"body":{"injectables/MailService.html":{}}}],["padding:15px",{"_index":2436,"title":{},"body":{"injectables/MailService.html":{}}}],["page",{"_index":166,"title":{},"body":{"controllers/AdminController.html":{},"injectables/AdminService.html":{},"classes/QueryFilterDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["pagesize",{"_index":167,"title":{},"body":{"controllers/AdminController.html":{},"classes/QueryFilterDto.html":{},"controllers/UsersController.html":{}}}],["param",{"_index":755,"title":{},"body":{"injectables/AdminService.html":{},"controllers/AuthController.html":{},"controllers/CategoriesController.html":{},"controllers/ColoursController.html":{},"controllers/RolesController.html":{},"injectables/UsersService.html":{}}}],["param('categoryid",{"_index":1609,"title":{},"body":{"controllers/CategoriesController.html":{}}}],["param('colourid",{"_index":1754,"title":{},"body":{"controllers/ColoursController.html":{}}}],["param('link",{"_index":1375,"title":{},"body":{"controllers/AuthController.html":{}}}],["param.tolowercase",{"_index":740,"title":{},"body":{"injectables/AdminService.html":{},"injectables/UsersService.html":{}}}],["parameters",{"_index":16,"title":{},"body":{"injectables/ActivateMiddleware.html":{},"guards/AddContentGuard.html":{},"controllers/AdminController.html":{},"guards/AdminGuard.html":{},"injectables/AdminJwtRefreshService.html":{},"modules/AdminModule.html":{},"classes/AdminRefreshToken.html":{},"injectables/AdminService.html":{},"injectables/AdminUserMiddleware.html":{},"classes/AllExceptionsFilter.html":{},"classes/ApiError.html":{},"classes/ApiErrorExceptionFilter.html":{},"classes/ApiException.html":{},"classes/ApiExceptionFilter.html":{},"injectables/AppClusterService.html":{},"controllers/AppController.html":{},"injectables/AppListener.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"guards/AuthFerfershGuard.html":{},"injectables/AuthMiddleware.html":{},"modules/AuthModule.html":{},"classes/BadRequestError.html":{},"classes/Cart.html":{},"modules/CategoriesColoursModule.html":{},"controllers/CategoriesController.html":{},"injectables/CategoriesService.html":{},"controllers/ColoursController.html":{},"injectables/ColoursService.html":{},"injectables/CorsMiddleware.html":{},"classes/Currencies.html":{},"injectables/CurrencyService.html":{},"guards/EditContentGuard.html":{},"guards/EditWebsiteGuard.html":{},"injectables/FilesService.html":{},"classes/GarbageCollectingProcessor.html":{},"injectables/GlobalInterceptor.html":{},"classes/HttpExceptionFilter.html":{},"injectables/InitializeEmailMiddleware.html":{},"injectables/InitializeUserMiddleware.html":{},"guards/JwtAuthGuard.html":{},"classes/JwtRefreshTokenDeletedEvent.html":{},"injectables/LocationMiddleware.html":{},"injectables/MailService.html":{},"classes/MatchConstraint.html":{},"classes/NotFoundError.html":{},"classes/Order.html":{},"classes/Owner.html":{},"guards/OwnerAdminGuard.html":{},"injectables/OwnerJwtRefreshService.html":{},"classes/OwnerRefreshToken.html":{},"injectables/OwnerService.html":{},"classes/ParseFormDataJsonPipe.html":{},"injectables/ParseJsonPipe.html":{},"classes/Product.html":{},"injectables/ProductMiddleware.html":{},"modules/ProductModule.html":{},"guards/RefreshAuthGuard.html":{},"controllers/ReviewsController.html":{},"modules/ReviewsModule.html":{},"injectables/ReviewsService.html":{},"controllers/RolesController.html":{},"guards/RolesGuard.html":{},"modules/RolesModule.html":{},"injectables/RolesService.html":{},"injectables/TasksService.html":{},"modules/TelegramModule.html":{},"injectables/TelegramService.html":{},"injectables/ThrottlerBehindProxyGuard.html":{},"injectables/UserAdminMiddleware.html":{},"guards/UserGuard.html":{},"injectables/UserJwtRefreshTokenService.html":{},"injectables/UserMiddleware.html":{},"injectables/UserMiddleware-1.html":{},"classes/UserRefreshToken.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"injectables/ValidateDto.html":{},"classes/ValidationException.html":{},"miscellaneous/functions.html":{}}}],["params",{"_index":738,"title":{},"body":{"injectables/AdminService.html":{},"injectables/UsersService.html":{}}}],["params.some",{"_index":754,"title":{},"body":{"injectables/AdminService.html":{},"injectables/UsersService.html":{}}}],["parse",{"_index":2933,"title":{},"body":{"classes/ParseFormDataJsonPipe.html":{},"dependencies.html":{}}}],["parsearraypipe",{"_index":224,"title":{},"body":{"controllers/AdminController.html":{},"controllers/UsersController.html":{}}}],["parseformdatajsonpipe",{"_index":2921,"title":{"classes/ParseFormDataJsonPipe.html":{}},"body":{"classes/ParseFormDataJsonPipe.html":{}}}],["parseintpipe",{"_index":190,"title":{},"body":{"controllers/AdminController.html":{},"controllers/AuthController.html":{},"controllers/CategoriesController.html":{},"controllers/ColoursController.html":{},"controllers/ReviewsController.html":{},"controllers/UsersController.html":{}}}],["parsejsonpipe",{"_index":2945,"title":{"injectables/ParseJsonPipe.html":{}},"body":{"injectables/ParseJsonPipe.html":{}}}],["parsejsonpipe.transform(value.value",{"_index":2039,"title":{},"body":{"classes/CreateProductDto.html":{},"classes/Nested.html":{},"classes/Nested-1.html":{},"classes/UpdateProductDto.html":{}}}],["parser",{"_index":3708,"title":{},"body":{"dependencies.html":{}}}],["pass",{"_index":2362,"title":{},"body":{"modules/MailModule.html":{}}}],["password",{"_index":316,"title":{},"body":{"interfaces/AdminInterface.html":{},"interfaces/AdminRefreshTokenCreationAttrbs.html":{},"injectables/AdminService.html":{},"interfaces/AdmincreationAttrbs.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"classes/ChangeDto.html":{},"classes/CreateAdminDto.html":{},"classes/CreateOwnerDto.html":{},"classes/CreateUserDto.html":{},"interfaces/InitializeUser.html":{},"classes/LoginDto.html":{},"injectables/MailService.html":{},"classes/Owner.html":{},"interfaces/OwnerCreationAttrbs.html":{},"interfaces/OwnerRefreshTokenCreationAttrbs.html":{},"injectables/OwnerService.html":{},"classes/ResetDto.html":{},"interfaces/RolecreationAttrbs.html":{},"classes/SignupDto.html":{},"injectables/TasksService.html":{},"interfaces/UserInterface.html":{},"interfaces/UserRefreshCreationAttrbs.html":{},"interfaces/UsercreationAttrbs.html":{},"injectables/UsersService.html":{},"interfaces/ValidateUser.html":{}}}],["password'})@apiresponse({status",{"_index":1295,"title":{},"body":{"controllers/AuthController.html":{}}}],["password'})@column({type",{"_index":2667,"title":{},"body":{"classes/Owner.html":{}}}],["password'})@exclude",{"_index":2668,"title":{},"body":{"classes/Owner.html":{}}}],["password'})@isstring",{"_index":1951,"title":{},"body":{"classes/CreateAdminDto.html":{}}}],["password'})@isstring()@matches(/^(?=.*[a",{"_index":1701,"title":{},"body":{"classes/ChangeDto.html":{},"classes/CreateUserDto.html":{},"classes/LoginDto.html":{},"classes/ResetDto.html":{},"classes/SignupDto.html":{}}}],["password'})@isstring()@matches(/^(?=.*\\d)(?=.*[a",{"_index":2003,"title":{},"body":{"classes/CreateOwnerDto.html":{}}}],["password_validation",{"_index":1708,"title":{},"body":{"classes/ChangeDto.html":{},"classes/CreateOwnerDto.html":{},"classes/CreateUserDto.html":{},"classes/LoginDto.html":{},"classes/ResetDto.html":{},"classes/SignupDto.html":{}}}],["password_validation})@match('password",{"_index":1706,"title":{},"body":{"classes/ChangeDto.html":{},"classes/ResetDto.html":{},"classes/SignupDto.html":{}}}],["passwordequals",{"_index":806,"title":{},"body":{"injectables/AdminService.html":{},"injectables/OwnerService.html":{},"injectables/UsersService.html":{}}}],["past",{"_index":3328,"title":{},"body":{"injectables/TasksService.html":{}}}],["patch",{"_index":191,"title":{},"body":{"controllers/AdminController.html":{},"controllers/AuthController.html":{},"injectables/AuthMiddleware.html":{},"controllers/CategoriesController.html":{},"controllers/ColoursController.html":{},"injectables/CorsMiddleware.html":{},"injectables/ProductMiddleware.html":{},"interfaces/RequestHeaders.html":{},"injectables/UserMiddleware.html":{},"injectables/UserMiddleware-1.html":{},"controllers/UsersController.html":{}}}],["patch('change",{"_index":1369,"title":{},"body":{"controllers/AuthController.html":{}}}],["patch('refresh",{"_index":1356,"title":{},"body":{"controllers/AuthController.html":{}}}],["patch('reset",{"_index":1367,"title":{},"body":{"controllers/AuthController.html":{}}}],["patch('update",{"_index":3561,"title":{},"body":{"controllers/UsersController.html":{}}}],["patch('update_admin",{"_index":254,"title":{},"body":{"controllers/AdminController.html":{}}}],["patch('update_category/:categoryid",{"_index":1608,"title":{},"body":{"controllers/CategoriesController.html":{}}}],["patch('update_colour/:colourid",{"_index":1753,"title":{},"body":{"controllers/ColoursController.html":{}}}],["path",{"_index":573,"title":{},"body":{"modules/AdminModule.html":{},"classes/AllExceptionsFilter.html":{},"classes/ApiError.html":{},"classes/ApiErrorExceptionFilter.html":{},"classes/ApiExceptionFilter.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"classes/BadRequestError.html":{},"modules/CategoriesColoursModule.html":{},"injectables/FilesService.html":{},"classes/HttpExceptionFilter.html":{},"injectables/LocationMiddleware.html":{},"classes/NotFoundError.html":{},"modules/ProductModule.html":{},"modules/ReviewsModule.html":{},"modules/RolesModule.html":{},"modules/UsersModule.html":{},"interfaces/fileCreated.html":{}}}],["path.extname(file.originalname).tolowercase",{"_index":1248,"title":{},"body":{"modules/AppModule.html":{},"injectables/FilesService.html":{},"interfaces/fileCreated.html":{}}}],["path.join",{"_index":2212,"title":{},"body":{"injectables/FilesService.html":{},"interfaces/fileCreated.html":{}}}],["path.join(__dirname",{"_index":1095,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/FilesService.html":{},"injectables/LocationMiddleware.html":{},"interfaces/fileCreated.html":{}}}],["path.resolve(__dirname",{"_index":2194,"title":{},"body":{"injectables/FilesService.html":{},"interfaces/fileCreated.html":{}}}],["payload",{"_index":100,"title":{"interfaces/Payload.html":{}},"body":{"guards/AddContentGuard.html":{},"guards/AdminGuard.html":{},"injectables/AdminJwtRefreshService.html":{},"injectables/AdminService.html":{},"guards/AuthFerfershGuard.html":{},"interfaces/AuthUser.html":{},"interfaces/CodeDto.html":{},"guards/EditContentGuard.html":{},"guards/EditWebsiteGuard.html":{},"guards/JwtAuthGuard.html":{},"guards/OwnerAdminGuard.html":{},"injectables/OwnerJwtRefreshService.html":{},"injectables/OwnerService.html":{},"interfaces/Payload.html":{},"interfaces/ReturnedAdmin.html":{},"interfaces/ReturnedOwner.html":{},"interfaces/ReturnedUser.html":{},"guards/RolesGuard.html":{},"interfaces/Tokens.html":{},"guards/UserGuard.html":{},"injectables/UserJwtRefreshTokenService.html":{}}}],["payload.roles.some((role",{"_index":3244,"title":{},"body":{"guards/RolesGuard.html":{}}}],["payload.useractivationlink",{"_index":804,"title":{},"body":{"injectables/AdminService.html":{}}}],["payload.userid",{"_index":296,"title":{},"body":{"guards/AdminGuard.html":{},"guards/OwnerAdminGuard.html":{},"guards/UserGuard.html":{}}}],["permitted",{"_index":1881,"title":{},"body":{"injectables/CorsMiddleware.html":{},"interfaces/RequestHeaders.html":{}}}],["pg",{"_index":3740,"title":{},"body":{"dependencies.html":{}}}],["phone",{"_index":1953,"title":{},"body":{"classes/CreateAdminDto.html":{},"classes/CreateOwnerDto.html":{},"classes/CreateUserDto.html":{},"classes/SignupDto.html":{}}}],["phone_numrer_validation",{"_index":2068,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/SignupDto.html":{}}}],["phonenumber",{"_index":310,"title":{},"body":{"interfaces/AdminInterface.html":{},"injectables/AdminJwtRefreshService.html":{},"classes/AdminRefreshToken.html":{},"interfaces/AdminRefreshTokenCreationAttrbs.html":{},"injectables/AdminService.html":{},"injectables/AdminUserMiddleware.html":{},"interfaces/AdmincreationAttrbs.html":{},"interfaces/AuthUser.html":{},"interfaces/CodeDto.html":{},"classes/CreateAdminDto.html":{},"classes/CreateOwnerDto.html":{},"classes/CreateUserDto.html":{},"interfaces/InitializeUser.html":{},"classes/Owner.html":{},"interfaces/OwnerCreationAttrbs.html":{},"injectables/OwnerJwtRefreshService.html":{},"classes/OwnerRefreshToken.html":{},"interfaces/OwnerRefreshTokenCreationAttrbs.html":{},"injectables/OwnerService.html":{},"interfaces/Payload.html":{},"interfaces/ReturnedAdmin.html":{},"interfaces/ReturnedOwner.html":{},"interfaces/ReturnedUser.html":{},"interfaces/RolecreationAttrbs.html":{},"classes/SignupDto.html":{},"injectables/TasksService.html":{},"interfaces/Tokens.html":{},"injectables/UserAdminMiddleware.html":{},"interfaces/UserInterface.html":{},"interfaces/UserRefreshCreationAttrbs.html":{},"interfaces/UsercreationAttrbs.html":{},"injectables/UsersService.html":{},"interfaces/ValidateUser.html":{}}}],["phonenumber'})@column({type",{"_index":639,"title":{},"body":{"classes/AdminRefreshToken.html":{},"classes/Owner.html":{},"classes/OwnerRefreshToken.html":{}}}],["phonenumber_validation",{"_index":1958,"title":{},"body":{"classes/CreateAdminDto.html":{},"classes/CreateOwnerDto.html":{}}}],["pick",{"_index":2257,"title":{},"body":{"interfaces/ITelegramModuleAsyncOptions.html":{},"interfaces/ITelegramOptions.html":{}}}],["pipe",{"_index":1129,"title":{},"body":{"controllers/AppController.html":{},"injectables/CurrencyService.html":{}}}],["pipe(map((res",{"_index":1127,"title":{},"body":{"controllers/AppController.html":{},"injectables/CurrencyService.html":{}}}],["pipetransform",{"_index":2923,"title":{},"body":{"classes/ParseFormDataJsonPipe.html":{},"injectables/ParseJsonPipe.html":{},"injectables/ValidateDto.html":{}}}],["plaintoclass",{"_index":3668,"title":{},"body":{"injectables/ValidateDto.html":{}}}],["plaintoclass(metadata.metatype",{"_index":3672,"title":{},"body":{"injectables/ValidateDto.html":{}}}],["plaintoinstance",{"_index":3099,"title":{},"body":{"classes/RequestValidator.html":{}}}],["plaintoinstance(classinstance",{"_index":3102,"title":{},"body":{"classes/RequestValidator.html":{}}}],["please",{"_index":3813,"title":{},"body":{"index.html":{}}}],["policies",{"_index":1884,"title":{},"body":{"injectables/CorsMiddleware.html":{},"interfaces/RequestHeaders.html":{}}}],["policy",{"_index":1872,"title":{},"body":{"injectables/CorsMiddleware.html":{},"interfaces/RequestHeaders.html":{}}}],["port",{"_index":1222,"title":{},"body":{"modules/AppModule.html":{},"modules/MailModule.html":{}}}],["post",{"_index":183,"title":{},"body":{"controllers/AdminController.html":{},"controllers/AuthController.html":{},"injectables/AuthMiddleware.html":{},"injectables/CorsMiddleware.html":{},"injectables/ProductMiddleware.html":{},"interfaces/RequestHeaders.html":{},"injectables/UserMiddleware.html":{},"injectables/UserMiddleware-1.html":{},"controllers/UsersController.html":{}}}],["post('/ban",{"_index":3557,"title":{},"body":{"controllers/UsersController.html":{}}}],["post('code",{"_index":1361,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('create_admin",{"_index":249,"title":{},"body":{"controllers/AdminController.html":{}}}],["post('login",{"_index":1353,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('logout",{"_index":1359,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('signup",{"_index":1347,"title":{},"body":{"controllers/AuthController.html":{}}}],["postgres",{"_index":1263,"title":{},"body":{"modules/AppModule.html":{}}}],["postoffice",{"_index":1449,"title":{},"body":{"interfaces/AuthUser.html":{},"interfaces/CodeDto.html":{},"interfaces/Payload.html":{},"interfaces/ReturnedAdmin.html":{},"interfaces/ReturnedOwner.html":{},"interfaces/ReturnedUser.html":{},"interfaces/Tokens.html":{},"classes/UpdateUserDto.html":{}}}],["postoffice'})@isstring()@minlength(2)@maxlength(50",{"_index":3427,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["powered",{"_index":1895,"title":{},"body":{"injectables/CorsMiddleware.html":{},"interfaces/RequestHeaders.html":{}}}],["prefetch",{"_index":1887,"title":{},"body":{"injectables/CorsMiddleware.html":{},"interfaces/RequestHeaders.html":{}}}],["prefix",{"_index":147,"title":{},"body":{"controllers/AdminController.html":{},"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/CardController.html":{},"controllers/CategoriesController.html":{},"controllers/ColoursController.html":{},"controllers/OrdersController.html":{},"controllers/ReviewsController.html":{},"controllers/RolesController.html":{},"controllers/UsersController.html":{}}}],["preservepath",{"_index":1257,"title":{},"body":{"modules/AppModule.html":{}}}],["price",{"_index":1683,"title":{},"body":{"interfaces/CategoryCreationAtrb.html":{},"interfaces/ColourCreationAtrb.html":{},"classes/CreateProductDto.html":{},"classes/Nested.html":{},"classes/Nested-1.html":{},"classes/OrderProduct.html":{},"classes/Product.html":{},"interfaces/ProductCreationAttrs.html":{},"interfaces/ReturnedCategory.html":{},"interfaces/ReturnedColour.html":{},"interfaces/ReturnedProduct.html":{},"interfaces/ReturnedProducts.html":{},"interfaces/ReturnedReview.html":{},"interfaces/ReviewCreationAtrb.html":{},"classes/UpdateProductDto.html":{}}}],["primarykey",{"_index":629,"title":{},"body":{"classes/AdminRefreshToken.html":{},"classes/BookmarksProducts.html":{},"classes/Cart.html":{},"classes/CartProduct.html":{},"classes/Category.html":{},"classes/Colour.html":{},"classes/Currencies.html":{},"classes/Order.html":{},"classes/OrderProduct.html":{},"classes/Owner.html":{},"classes/OwnerRefreshToken.html":{},"classes/Product.html":{},"classes/ProductCategories.html":{},"classes/ProductColours.html":{},"classes/ProductReviews.html":{},"classes/Review.html":{},"classes/Role.html":{},"classes/UserRefreshToken.html":{},"classes/UserRoles.html":{},"classes/WatchedProducts.html":{}}}],["priority:100!important",{"_index":2414,"title":{},"body":{"injectables/MailService.html":{}}}],["private",{"_index":54,"title":{},"body":{"injectables/ActivateMiddleware.html":{},"guards/AdminGuard.html":{},"injectables/AdminJwtRefreshService.html":{},"classes/AdminRefreshToken.html":{},"injectables/AdminService.html":{},"injectables/AppClusterService.html":{},"controllers/AppController.html":{},"guards/AuthFerfershGuard.html":{},"classes/Cart.html":{},"classes/CartProduct.html":{},"injectables/CategoriesService.html":{},"classes/Category.html":{},"classes/Colour.html":{},"injectables/ColoursService.html":{},"injectables/CorsMiddleware.html":{},"classes/Currencies.html":{},"injectables/CurrencyService.html":{},"classes/GarbageCollectingProcessor.html":{},"injectables/InitializeEmailMiddleware.html":{},"injectables/InitializeUserMiddleware.html":{},"injectables/LocationMiddleware.html":{},"injectables/MailService.html":{},"interfaces/Msg.html":{},"classes/Order.html":{},"classes/OrderProduct.html":{},"classes/Owner.html":{},"guards/OwnerAdminGuard.html":{},"injectables/OwnerJwtRefreshService.html":{},"classes/OwnerRefreshToken.html":{},"injectables/OwnerService.html":{},"classes/Product.html":{},"interfaces/RequestHeaders.html":{},"injectables/ReviewsService.html":{},"classes/Role.html":{},"guards/RolesGuard.html":{},"injectables/RolesService.html":{},"injectables/TasksService.html":{},"modules/TelegramModule.html":{},"guards/UserGuard.html":{},"injectables/UserJwtRefreshTokenService.html":{},"classes/UserRefreshToken.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["process",{"_index":2229,"title":{},"body":{"classes/GarbageCollectingProcessor.html":{}}}],["process('transcode",{"_index":2227,"title":{},"body":{"classes/GarbageCollectingProcessor.html":{}}}],["process.env.access_allow",{"_index":1402,"title":{},"body":{"injectables/AuthMiddleware.html":{}}}],["process.env.api_currencies.trim",{"_index":1119,"title":{},"body":{"controllers/AppController.html":{}}}],["process.env.api_currencies.trim()}/${process.env.base_currency.trim()}.json",{"_index":2143,"title":{},"body":{"injectables/CurrencyService.html":{}}}],["process.env.api_key.tostring",{"_index":458,"title":{},"body":{"injectables/AdminJwtRefreshService.html":{},"controllers/AppController.html":{},"injectables/OwnerJwtRefreshService.html":{}}}],["process.env.api_url",{"_index":2393,"title":{},"body":{"injectables/MailService.html":{}}}],["process.env.api_url}/auth/activate/${admin",{"_index":443,"title":{},"body":{"injectables/AdminJwtRefreshService.html":{}}}],["process.env.api_url}/auth/activate/${owner",{"_index":2786,"title":{},"body":{"injectables/OwnerJwtRefreshService.html":{}}}],["process.env.base_currency.tolowercase().trim",{"_index":1120,"title":{},"body":{"controllers/AppController.html":{}}}],["process.env.base_currency.touppercase().trim",{"_index":2341,"title":{},"body":{"injectables/LocationMiddleware.html":{}}}],["process.env.client_url",{"_index":2538,"title":{},"body":{"injectables/MailService.html":{}}}],["process.env.client_url.tostring().trim",{"_index":1852,"title":{},"body":{"injectables/CorsMiddleware.html":{},"interfaces/RequestHeaders.html":{}}}],["process.env.client_url.trim",{"_index":3041,"title":{},"body":{"injectables/ProductMiddleware.html":{},"injectables/UserMiddleware.html":{},"injectables/UserMiddleware-1.html":{}}}],["process.env.currencies_api_key.trim",{"_index":2132,"title":{},"body":{"injectables/CurrencyService.html":{}}}],["process.env.currencies_url.trim()}/latest?base=${process.env.base_currency.trim",{"_index":2130,"title":{},"body":{"injectables/CurrencyService.html":{}}}],["process.env.jwt_access_secret.tostring().trim",{"_index":1422,"title":{},"body":{"modules/AuthModule.html":{}}}],["process.env.jwt_refresh_admin_secret.tostring().trim",{"_index":566,"title":{},"body":{"modules/AdminModule.html":{}}}],["process.env.jwt_refresh_owner_secret.tostring().trim",{"_index":2802,"title":{},"body":{"modules/OwnerModule.html":{}}}],["process.env.jwt_refresh_user_secret.tostring().trim",{"_index":3570,"title":{},"body":{"modules/UsersModule.html":{}}}],["process.env.mailer_host?.tostring().trim",{"_index":2355,"title":{},"body":{"modules/MailModule.html":{}}}],["process.env.mailer_pass?.tostring().trim",{"_index":2363,"title":{},"body":{"modules/MailModule.html":{}}}],["process.env.mailer_user",{"_index":2390,"title":{},"body":{"injectables/MailService.html":{}}}],["process.env.mailer_user?.tostring().trim",{"_index":2360,"title":{},"body":{"modules/MailModule.html":{}}}],["process.env.node_env",{"_index":1077,"title":{},"body":{"controllers/AppController.html":{}}}],["process.env.node_env}.env",{"_index":560,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CartModule.html":{},"modules/CategoriesColoursModule.html":{},"modules/CoreModule.html":{},"modules/MailModule.html":{},"modules/OrdersModule.html":{},"modules/OwnerModule.html":{},"modules/ProductModule.html":{},"modules/ReviewsModule.html":{},"modules/RolesModule.html":{},"modules/UsersModule.html":{}}}],["process.env.owner.tostring().trim().split(',')[0",{"_index":2879,"title":{},"body":{"injectables/OwnerService.html":{},"injectables/TasksService.html":{}}}],["process.env.owner.tostring().trim().split(',')[1",{"_index":2880,"title":{},"body":{"injectables/OwnerService.html":{},"injectables/TasksService.html":{}}}],["process.env.owner.tostring().trim().split(',')[2",{"_index":2881,"title":{},"body":{"injectables/OwnerService.html":{},"injectables/TasksService.html":{}}}],["process.env.owner.tostring().trim().split(',')[3",{"_index":2882,"title":{},"body":{"injectables/OwnerService.html":{},"injectables/TasksService.html":{}}}],["process.env.owner.tostring().trim().split(',')[4",{"_index":2883,"title":{},"body":{"injectables/OwnerService.html":{},"injectables/TasksService.html":{}}}],["process.env.pgdatabase.tostring",{"_index":1270,"title":{},"body":{"modules/AppModule.html":{}}}],["process.env.pghost.tostring",{"_index":1264,"title":{},"body":{"modules/AppModule.html":{}}}],["process.env.pgpassword.tostring",{"_index":1268,"title":{},"body":{"modules/AppModule.html":{}}}],["process.env.pguser.tostring",{"_index":1267,"title":{},"body":{"modules/AppModule.html":{}}}],["process.env.redis_host.tostring",{"_index":1221,"title":{},"body":{"modules/AppModule.html":{}}}],["process.env.redis_password.tostring",{"_index":1225,"title":{},"body":{"modules/AppModule.html":{}}}],["process.exit(1",{"_index":1008,"title":{},"body":{"injectables/AppClusterService.html":{},"interfaces/Msg.html":{}}}],["process.on('message",{"_index":1011,"title":{},"body":{"injectables/AppClusterService.html":{},"interfaces/Msg.html":{}}}],["process.on('sigint",{"_index":1007,"title":{},"body":{"injectables/AppClusterService.html":{},"interfaces/Msg.html":{}}}],["process.on('sigterm",{"_index":1009,"title":{},"body":{"injectables/AppClusterService.html":{},"interfaces/Msg.html":{}}}],["process.on('sigusr2",{"_index":1010,"title":{},"body":{"injectables/AppClusterService.html":{},"interfaces/Msg.html":{}}}],["process.pid",{"_index":997,"title":{},"body":{"injectables/AppClusterService.html":{},"interfaces/Msg.html":{}}}],["processing",{"_index":2596,"title":{},"body":{"classes/Order.html":{}}}],["processor",{"_index":2230,"title":{},"body":{"classes/GarbageCollectingProcessor.html":{}}}],["processor('garbagecollecting",{"_index":2232,"title":{},"body":{"classes/GarbageCollectingProcessor.html":{}}}],["processors/garbage.processor",{"_index":1816,"title":{},"body":{"modules/CoreModule.html":{}}}],["product",{"_index":549,"title":{"classes/Product.html":{}},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"classes/BookmarksProducts.html":{},"classes/Cart.html":{},"modules/CartModule.html":{},"classes/CartProduct.html":{},"modules/CategoriesColoursModule.html":{},"classes/Category.html":{},"classes/Colour.html":{},"modules/CoreModule.html":{},"modules/MailModule.html":{},"classes/Order.html":{},"classes/OrderProduct.html":{},"modules/OrdersModule.html":{},"classes/Owner.html":{},"modules/OwnerModule.html":{},"classes/Product.html":{},"classes/ProductCategories.html":{},"classes/ProductColours.html":{},"modules/ProductModule.html":{},"classes/ProductReviews.html":{},"classes/Review.html":{},"modules/ReviewsModule.html":{},"injectables/ReviewsService.html":{},"modules/RolesModule.html":{},"modules/UsersModule.html":{},"classes/WatchedProducts.html":{}}}],["product.$add('categories",{"_index":3181,"title":{},"body":{"injectables/ReviewsService.html":{}}}],["product.$remove('reviews",{"_index":3189,"title":{},"body":{"injectables/ReviewsService.html":{}}}],["product.$set('reviews",{"_index":3179,"title":{},"body":{"injectables/ReviewsService.html":{}}}],["product.categories.model",{"_index":1677,"title":{},"body":{"classes/Category.html":{}}}],["product.colour.model",{"_index":1724,"title":{},"body":{"classes/Colour.html":{}}}],["product.controller",{"_index":3049,"title":{},"body":{"modules/ProductModule.html":{}}}],["product.id",{"_index":3183,"title":{},"body":{"injectables/ReviewsService.html":{}}}],["product.reviews",{"_index":3178,"title":{},"body":{"injectables/ReviewsService.html":{}}}],["product.reviews.model",{"_index":3131,"title":{},"body":{"classes/Review.html":{}}}],["product.save",{"_index":3186,"title":{},"body":{"injectables/ReviewsService.html":{}}}],["product.service",{"_index":3048,"title":{},"body":{"modules/ProductModule.html":{}}}],["product/addbookmark",{"_index":3061,"title":{},"body":{"modules/ProductModule.html":{}}}],["product/addwatchedproduct",{"_index":3062,"title":{},"body":{"modules/ProductModule.html":{}}}],["product/bookmarkproducts",{"_index":3064,"title":{},"body":{"modules/ProductModule.html":{}}}],["product/create_product",{"_index":3065,"title":{},"body":{"modules/ProductModule.html":{}}}],["product/delete_image",{"_index":3066,"title":{},"body":{"modules/ProductModule.html":{}}}],["product/models/bookmark.products",{"_index":1193,"title":{},"body":{"modules/AppModule.html":{},"modules/UsersModule.html":{}}}],["product/models/product.model",{"_index":550,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"classes/BookmarksProducts.html":{},"classes/Cart.html":{},"modules/CartModule.html":{},"classes/CartProduct.html":{},"modules/CategoriesColoursModule.html":{},"classes/Category.html":{},"classes/Colour.html":{},"modules/CoreModule.html":{},"modules/MailModule.html":{},"classes/Order.html":{},"classes/OrderProduct.html":{},"modules/OrdersModule.html":{},"classes/Owner.html":{},"modules/OwnerModule.html":{},"classes/ProductCategories.html":{},"classes/ProductColours.html":{},"classes/ProductReviews.html":{},"classes/Review.html":{},"modules/ReviewsModule.html":{},"modules/RolesModule.html":{},"modules/UsersModule.html":{},"classes/WatchedProducts.html":{}}}],["product/models/watched.products.model",{"_index":1195,"title":{},"body":{"modules/AppModule.html":{},"modules/UsersModule.html":{}}}],["product/product.module",{"_index":1175,"title":{},"body":{"modules/AppModule.html":{},"modules/CartModule.html":{},"modules/CategoriesColoursModule.html":{},"modules/CoreModule.html":{},"modules/RolesModule.html":{},"modules/UsersModule.html":{}}}],["product/product.service",{"_index":3158,"title":{},"body":{"modules/ReviewsModule.html":{},"injectables/ReviewsService.html":{}}}],["product/watchedproducts",{"_index":3063,"title":{},"body":{"modules/ProductModule.html":{}}}],["product_categories",{"_index":3031,"title":{},"body":{"classes/ProductCategories.html":{},"classes/WatchedProducts.html":{}}}],["product_colours",{"_index":3037,"title":{},"body":{"classes/ProductColours.html":{}}}],["product_orders",{"_index":2612,"title":{},"body":{"classes/OrderProduct.html":{}}}],["product_reviews",{"_index":3073,"title":{},"body":{"classes/ProductReviews.html":{}}}],["productcategories",{"_index":543,"title":{"classes/ProductCategories.html":{}},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/CartModule.html":{},"modules/CategoriesColoursModule.html":{},"classes/Category.html":{},"modules/CoreModule.html":{},"modules/OrdersModule.html":{},"modules/OwnerModule.html":{},"classes/Product.html":{},"classes/ProductCategories.html":{},"modules/ProductModule.html":{},"modules/ReviewsModule.html":{},"modules/RolesModule.html":{},"modules/UsersModule.html":{}}}],["productcolours",{"_index":539,"title":{"classes/ProductColours.html":{}},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/CartModule.html":{},"modules/CategoriesColoursModule.html":{},"classes/Colour.html":{},"modules/CoreModule.html":{},"modules/OwnerModule.html":{},"classes/Product.html":{},"classes/ProductColours.html":{},"modules/ProductModule.html":{},"modules/ReviewsModule.html":{},"modules/RolesModule.html":{},"modules/UsersModule.html":{}}}],["productcontroller",{"_index":3046,"title":{},"body":{"modules/ProductModule.html":{}}}],["productcreationattrs",{"_index":1679,"title":{"interfaces/ProductCreationAttrs.html":{}},"body":{"interfaces/CategoryCreationAtrb.html":{},"interfaces/ColourCreationAtrb.html":{},"classes/Product.html":{},"interfaces/ProductCreationAttrs.html":{},"interfaces/ReturnedCategory.html":{},"interfaces/ReturnedColour.html":{},"interfaces/ReturnedProduct.html":{},"interfaces/ReturnedProducts.html":{},"interfaces/ReturnedReview.html":{},"interfaces/ReviewCreationAtrb.html":{}}}],["productid",{"_index":1464,"title":{},"body":{"classes/BookmarksProducts.html":{},"classes/CartProduct.html":{},"classes/OrderProduct.html":{},"classes/ProductCategories.html":{},"classes/ProductColours.html":{},"classes/ProductReviews.html":{},"classes/Review.html":{},"controllers/ReviewsController.html":{},"injectables/ReviewsService.html":{},"classes/WatchedProducts.html":{}}}],["production",{"_index":1078,"title":{},"body":{"controllers/AppController.html":{},"index.html":{}}}],["productmiddleware",{"_index":3038,"title":{"injectables/ProductMiddleware.html":{}},"body":{"injectables/ProductMiddleware.html":{},"modules/ProductModule.html":{}}}],["productmodule",{"_index":1157,"title":{"modules/ProductModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CartModule.html":{},"modules/CategoriesColoursModule.html":{},"modules/CoreModule.html":{},"modules/ProductModule.html":{},"modules/RolesModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["productreviews",{"_index":1190,"title":{"classes/ProductReviews.html":{}},"body":{"modules/AppModule.html":{},"classes/Product.html":{},"modules/ProductModule.html":{},"classes/ProductReviews.html":{},"classes/Review.html":{},"modules/ReviewsModule.html":{}}}],["products",{"_index":1481,"title":{},"body":{"classes/Cart.html":{},"classes/Category.html":{},"interfaces/CategoryCreationAtrb.html":{},"classes/Colour.html":{},"interfaces/ColourCreationAtrb.html":{},"injectables/FilesService.html":{},"classes/Order.html":{},"classes/Owner.html":{},"classes/Product.html":{},"interfaces/ProductCreationAttrs.html":{},"interfaces/ReturnedCategory.html":{},"interfaces/ReturnedColour.html":{},"interfaces/ReturnedProduct.html":{},"interfaces/ReturnedProducts.html":{},"interfaces/ReturnedReview.html":{},"interfaces/ReviewCreationAtrb.html":{},"interfaces/fileCreated.html":{}}}],["productservice",{"_index":3044,"title":{},"body":{"modules/ProductModule.html":{},"modules/ReviewsModule.html":{},"injectables/ReviewsService.html":{},"overview.html":{}}}],["progressive",{"_index":3775,"title":{},"body":{"index.html":{}}}],["project",{"_index":3804,"title":{},"body":{"index.html":{}}}],["promise",{"_index":93,"title":{},"body":{"guards/AddContentGuard.html":{},"controllers/AdminController.html":{},"guards/AdminGuard.html":{},"injectables/AdminJwtRefreshService.html":{},"injectables/AdminService.html":{},"injectables/AppClusterService.html":{},"controllers/AppController.html":{},"controllers/AuthController.html":{},"guards/AuthFerfershGuard.html":{},"controllers/CategoriesController.html":{},"injectables/CategoriesService.html":{},"controllers/ColoursController.html":{},"injectables/ColoursService.html":{},"injectables/CurrencyService.html":{},"guards/EditContentGuard.html":{},"guards/EditWebsiteGuard.html":{},"injectables/FilesService.html":{},"interfaces/ITelegramModuleAsyncOptions.html":{},"interfaces/ITelegramOptions.html":{},"guards/JwtAuthGuard.html":{},"interfaces/Msg.html":{},"guards/OwnerAdminGuard.html":{},"injectables/OwnerJwtRefreshService.html":{},"injectables/OwnerService.html":{},"guards/RefreshAuthGuard.html":{},"injectables/ReviewsService.html":{},"controllers/RolesController.html":{},"guards/RolesGuard.html":{},"injectables/RolesService.html":{},"injectables/TasksService.html":{},"guards/UserGuard.html":{},"injectables/UserJwtRefreshTokenService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"injectables/ValidateDto.html":{},"interfaces/fileCreated.html":{},"miscellaneous/functions.html":{}}}],["promise.all",{"_index":772,"title":{},"body":{"injectables/AdminService.html":{},"injectables/OwnerService.html":{},"injectables/UsersService.html":{}}}],["promise.all([await",{"_index":774,"title":{},"body":{"injectables/AdminService.html":{}}}],["promisify",{"_index":387,"title":{},"body":{"injectables/AdminJwtRefreshService.html":{},"controllers/AppController.html":{},"injectables/OwnerJwtRefreshService.html":{}}}],["promisify(scrypt)(api_key",{"_index":460,"title":{},"body":{"injectables/AdminJwtRefreshService.html":{},"controllers/AppController.html":{},"injectables/OwnerJwtRefreshService.html":{}}}],["prop",{"_index":1898,"title":{},"body":{"injectables/CorsMiddleware.html":{},"interfaces/RequestHeaders.html":{}}}],["properties",{"_index":121,"title":{"properties.html":{}},"body":{"classes/AddRoleDto.html":{},"interfaces/AdminInterface.html":{},"injectables/AdminJwtRefreshService.html":{},"classes/AdminRefreshToken.html":{},"interfaces/AdminRefreshTokenCreationAttrbs.html":{},"interfaces/AdmincreationAttrbs.html":{},"classes/ApiError.html":{},"classes/ApiException.html":{},"injectables/AppClusterService.html":{},"interfaces/AuthUser.html":{},"classes/BadRequestError.html":{},"classes/BanUserDto.html":{},"classes/BookmarksProducts.html":{},"classes/Cart.html":{},"classes/CartProduct.html":{},"classes/Category.html":{},"interfaces/CategoryCreationAtrb.html":{},"classes/ChangeDto.html":{},"interfaces/CodeDto.html":{},"classes/Colour.html":{},"interfaces/ColourCreationAtrb.html":{},"injectables/CorsMiddleware.html":{},"classes/CreateAccessTokenDto.html":{},"classes/CreateAdminDto.html":{},"classes/CreateAdminRefreshTokenDto.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateColourDto.html":{},"classes/CreateOwnerDto.html":{},"classes/CreateOwnerRefreshTokenDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateReviewDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserRefreshTokenDto.html":{},"classes/Currencies.html":{},"injectables/CurrencyService.html":{},"classes/GarbageCollectingProcessor.html":{},"interfaces/ITelegramModuleAsyncOptions.html":{},"interfaces/ITelegramOptions.html":{},"interfaces/InitializeUser.html":{},"classes/JwtRefreshTokenDeletedEvent.html":{},"injectables/LocationMiddleware.html":{},"classes/LoginDto.html":{},"injectables/MailService.html":{},"interfaces/Msg.html":{},"classes/Nested.html":{},"classes/Nested-1.html":{},"classes/NotFoundError.html":{},"classes/Order.html":{},"classes/OrderProduct.html":{},"classes/Owner.html":{},"interfaces/OwnerCreationAttrbs.html":{},"injectables/OwnerJwtRefreshService.html":{},"classes/OwnerRefreshToken.html":{},"interfaces/OwnerRefreshTokenCreationAttrbs.html":{},"injectables/OwnerService.html":{},"interfaces/Payload.html":{},"classes/Product.html":{},"classes/ProductCategories.html":{},"classes/ProductColours.html":{},"interfaces/ProductCreationAttrs.html":{},"classes/ProductReviews.html":{},"classes/QueryFilterDto.html":{},"interfaces/RequestHeaders.html":{},"classes/RequestValidator.html":{},"classes/ResetDto.html":{},"interfaces/ReturnedAdmin.html":{},"interfaces/ReturnedCategory.html":{},"interfaces/ReturnedColour.html":{},"interfaces/ReturnedOwner.html":{},"interfaces/ReturnedProduct.html":{},"interfaces/ReturnedProducts.html":{},"interfaces/ReturnedReview.html":{},"interfaces/ReturnedUser.html":{},"classes/Review.html":{},"interfaces/ReviewCreationAtrb.html":{},"injectables/ReviewsService.html":{},"classes/Role.html":{},"interfaces/RolecreationAttrbs.html":{},"classes/SignupDto.html":{},"injectables/TasksService.html":{},"injectables/TelegramService.html":{},"interfaces/Tokens.html":{},"classes/UpdateCategoryDto.html":{},"classes/UpdateColourDto.html":{},"classes/UpdateProductDto.html":{},"classes/UpdateUserDto.html":{},"interfaces/UserInterface.html":{},"interfaces/UserRefreshCreationAttrbs.html":{},"classes/UserRefreshToken.html":{},"classes/UserRoles.html":{},"interfaces/UsercreationAttrbs.html":{},"interfaces/ValidateUser.html":{},"classes/ValidationException.html":{},"classes/WatchedProducts.html":{},"interfaces/fileCreated.html":{},"properties.html":{}}}],["property",{"_index":2556,"title":{},"body":{"classes/MatchConstraint.html":{},"miscellaneous/functions.html":{}}}],["propertyname",{"_index":2552,"title":{},"body":{"classes/MatchConstraint.html":{},"injectables/ParseJsonPipe.html":{}}}],["protected",{"_index":3394,"title":{},"body":{"injectables/ThrottlerBehindProxyGuard.html":{}}}],["protection",{"_index":1889,"title":{},"body":{"injectables/CorsMiddleware.html":{},"interfaces/RequestHeaders.html":{}}}],["provide",{"_index":1199,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CoreModule.html":{},"modules/TelegramModule.html":{}}}],["provided",{"_index":1849,"title":{},"body":{"injectables/CorsMiddleware.html":{},"interfaces/RequestHeaders.html":{}}}],["provider",{"_index":3362,"title":{},"body":{"modules/TelegramModule.html":{}}}],["providers",{"_index":488,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CartModule.html":{},"modules/CategoriesColoursModule.html":{},"modules/CoreModule.html":{},"modules/MailModule.html":{},"modules/OrdersModule.html":{},"modules/OwnerModule.html":{},"modules/ProductModule.html":{},"modules/ReviewsModule.html":{},"modules/RolesModule.html":{},"modules/TelegramModule.html":{},"modules/UsersModule.html":{}}}],["proxy.guard",{"_index":211,"title":{},"body":{"controllers/AdminController.html":{},"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/CategoriesController.html":{},"controllers/ColoursController.html":{},"modules/CoreModule.html":{},"controllers/ReviewsController.html":{},"controllers/RolesController.html":{},"controllers/UsersController.html":{}}}],["proxy.guard.ts",{"_index":3393,"title":{},"body":{"injectables/ThrottlerBehindProxyGuard.html":{}}}],["proxy.guard.ts:6",{"_index":3397,"title":{},"body":{"injectables/ThrottlerBehindProxyGuard.html":{}}}],["public",{"_index":588,"title":{},"body":{"classes/AdminRefreshToken.html":{},"classes/BookmarksProducts.html":{},"classes/Cart.html":{},"classes/CartProduct.html":{},"classes/Category.html":{},"classes/Colour.html":{},"classes/Currencies.html":{},"classes/Order.html":{},"classes/OrderProduct.html":{},"classes/Owner.html":{},"classes/OwnerRefreshToken.html":{},"classes/Product.html":{},"classes/ProductCategories.html":{},"classes/ProductColours.html":{},"classes/ProductReviews.html":{},"classes/Review.html":{},"classes/Role.html":{},"classes/UserRefreshToken.html":{},"classes/UserRoles.html":{},"classes/WatchedProducts.html":{}}}],["put",{"_index":1398,"title":{},"body":{"injectables/AuthMiddleware.html":{},"controllers/CategoriesController.html":{},"controllers/ColoursController.html":{},"injectables/CorsMiddleware.html":{},"injectables/ProductMiddleware.html":{},"interfaces/RequestHeaders.html":{},"controllers/ReviewsController.html":{},"controllers/RolesController.html":{},"injectables/UserMiddleware.html":{},"injectables/UserMiddleware-1.html":{}}}],["put('/create_role",{"_index":3234,"title":{},"body":{"controllers/RolesController.html":{}}}],["put('create_category",{"_index":1606,"title":{},"body":{"controllers/CategoriesController.html":{}}}],["put('create_colour",{"_index":1750,"title":{},"body":{"controllers/ColoursController.html":{}}}],["put('create_review",{"_index":3148,"title":{},"body":{"controllers/ReviewsController.html":{}}}],["quantity",{"_index":1526,"title":{},"body":{"classes/CartProduct.html":{},"interfaces/CategoryCreationAtrb.html":{},"interfaces/ColourCreationAtrb.html":{},"classes/CreateProductDto.html":{},"classes/Nested.html":{},"classes/Nested-1.html":{},"classes/OrderProduct.html":{},"classes/Product.html":{},"interfaces/ProductCreationAttrs.html":{},"interfaces/ReturnedCategory.html":{},"interfaces/ReturnedColour.html":{},"interfaces/ReturnedProduct.html":{},"interfaces/ReturnedProducts.html":{},"interfaces/ReturnedReview.html":{},"interfaces/ReviewCreationAtrb.html":{},"classes/UpdateProductDto.html":{}}}],["query",{"_index":189,"title":{},"body":{"controllers/AdminController.html":{},"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/ReviewsController.html":{},"controllers/UsersController.html":{}}}],["query('code",{"_index":1376,"title":{},"body":{"controllers/AuthController.html":{}}}],["query('locale",{"_index":1363,"title":{},"body":{"controllers/AuthController.html":{}}}],["query('page",{"_index":259,"title":{},"body":{"controllers/AdminController.html":{},"controllers/UsersController.html":{}}}],["query('pagesize",{"_index":260,"title":{},"body":{"controllers/AdminController.html":{},"controllers/UsersController.html":{}}}],["query('productid",{"_index":3149,"title":{},"body":{"controllers/ReviewsController.html":{}}}],["query('v",{"_index":258,"title":{},"body":{"controllers/AdminController.html":{},"controllers/UsersController.html":{}}}],["queryfilterdto",{"_index":3074,"title":{"classes/QueryFilterDto.html":{}},"body":{"classes/QueryFilterDto.html":{}}}],["r",{"_index":2471,"title":{},"body":{"injectables/MailService.html":{}}}],["randombytes",{"_index":383,"title":{},"body":{"injectables/AdminJwtRefreshService.html":{},"controllers/AppController.html":{},"injectables/OwnerJwtRefreshService.html":{}}}],["randombytes(bytes",{"_index":456,"title":{},"body":{"injectables/AdminJwtRefreshService.html":{},"controllers/AppController.html":{},"injectables/OwnerJwtRefreshService.html":{}}}],["randomname",{"_index":2208,"title":{},"body":{"injectables/FilesService.html":{},"interfaces/fileCreated.html":{}}}],["rate",{"_index":2157,"title":{},"body":{"injectables/CurrencyService.html":{},"injectables/LocationMiddleware.html":{}}}],["rates",{"_index":2079,"title":{},"body":{"classes/Currencies.html":{},"injectables/CurrencyService.html":{}}}],["rawerrors",{"_index":877,"title":{},"body":{"classes/ApiError.html":{},"classes/ApiErrorExceptionFilter.html":{},"classes/ApiExceptionFilter.html":{},"classes/BadRequestError.html":{},"classes/NotFoundError.html":{},"classes/RequestValidator.html":{}}}],["rawerrors.concat",{"_index":3107,"title":{},"body":{"classes/RequestValidator.html":{}}}],["read",{"_index":3814,"title":{},"body":{"index.html":{}}}],["reader",{"_index":1060,"title":{},"body":{"controllers/AppController.html":{},"injectables/LocationMiddleware.html":{}}}],["reader.country('62.122.202.29",{"_index":2322,"title":{},"body":{"injectables/LocationMiddleware.html":{}}}],["reader.country(request.ip",{"_index":1099,"title":{},"body":{"controllers/AppController.html":{}}}],["reader.open",{"_index":1094,"title":{},"body":{"controllers/AppController.html":{},"injectables/LocationMiddleware.html":{}}}],["readonly",{"_index":103,"title":{},"body":{"guards/AddContentGuard.html":{},"classes/AddRoleDto.html":{},"controllers/AdminController.html":{},"guards/AdminGuard.html":{},"injectables/AdminJwtRefreshService.html":{},"injectables/AdminService.html":{},"injectables/AdminUserMiddleware.html":{},"classes/AllExceptionsFilter.html":{},"injectables/AppClusterService.html":{},"controllers/AppController.html":{},"guards/AuthFerfershGuard.html":{},"classes/BanUserDto.html":{},"controllers/CategoriesController.html":{},"injectables/CategoriesService.html":{},"classes/ChangeDto.html":{},"controllers/ColoursController.html":{},"injectables/ColoursService.html":{},"injectables/CorsMiddleware.html":{},"classes/CreateAccessTokenDto.html":{},"classes/CreateAdminDto.html":{},"classes/CreateAdminRefreshTokenDto.html":{},"classes/CreateOwnerDto.html":{},"classes/CreateOwnerRefreshTokenDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateReviewDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserRefreshTokenDto.html":{},"injectables/CurrencyService.html":{},"guards/EditContentGuard.html":{},"guards/EditWebsiteGuard.html":{},"injectables/FilesService.html":{},"classes/GarbageCollectingProcessor.html":{},"injectables/InitializeEmailMiddleware.html":{},"injectables/InitializeUserMiddleware.html":{},"injectables/LocationMiddleware.html":{},"classes/LoginDto.html":{},"injectables/MailService.html":{},"interfaces/Msg.html":{},"classes/Nested.html":{},"classes/Nested-1.html":{},"guards/OwnerAdminGuard.html":{},"injectables/OwnerJwtRefreshService.html":{},"injectables/OwnerService.html":{},"classes/QueryFilterDto.html":{},"interfaces/RequestHeaders.html":{},"classes/ResetDto.html":{},"controllers/ReviewsController.html":{},"injectables/ReviewsService.html":{},"controllers/RolesController.html":{},"classes/SignupDto.html":{},"injectables/TasksService.html":{},"classes/UpdateProductDto.html":{},"classes/UpdateUserDto.html":{},"injectables/UserAdminMiddleware.html":{},"guards/UserGuard.html":{},"injectables/UserJwtRefreshTokenService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"interfaces/fileCreated.html":{}}}],["reason",{"_index":1462,"title":{},"body":{"classes/BanUserDto.html":{}}}],["reason'})@isstring",{"_index":1459,"title":{},"body":{"classes/BanUserDto.html":{}}}],["record",{"_index":2949,"title":{},"body":{"injectables/ParseJsonPipe.html":{},"injectables/ThrottlerBehindProxyGuard.html":{}}}],["recursive",{"_index":2197,"title":{},"body":{"injectables/FilesService.html":{},"interfaces/fileCreated.html":{}}}],["redis",{"_index":1220,"title":{},"body":{"modules/AppModule.html":{}}}],["reflect",{"_index":3744,"title":{},"body":{"dependencies.html":{}}}],["reflector",{"_index":268,"title":{},"body":{"guards/AdminGuard.html":{},"guards/OwnerAdminGuard.html":{},"guards/RolesGuard.html":{},"guards/UserGuard.html":{}}}],["refresh",{"_index":378,"title":{},"body":{"injectables/AdminJwtRefreshService.html":{},"classes/AdminRefreshToken.html":{},"injectables/AppListener.html":{},"controllers/AuthController.html":{},"classes/CreateAdminRefreshTokenDto.html":{},"classes/CreateUserRefreshTokenDto.html":{},"classes/JwtRefreshTokenDeletedEvent.html":{},"classes/OwnerRefreshToken.html":{},"injectables/TasksService.html":{},"injectables/UserJwtRefreshTokenService.html":{},"classes/UserRefreshToken.html":{}}}],["refresh(response",{"_index":1315,"title":{},"body":{"controllers/AuthController.html":{}}}],["refresh.constants",{"_index":375,"title":{},"body":{"injectables/AdminJwtRefreshService.html":{},"classes/ApiException.html":{},"injectables/OwnerJwtRefreshService.html":{},"injectables/UserJwtRefreshTokenService.html":{}}}],["refresh.guard",{"_index":220,"title":{},"body":{"controllers/AdminController.html":{},"controllers/AuthController.html":{},"controllers/CategoriesController.html":{},"controllers/ColoursController.html":{},"controllers/ReviewsController.html":{},"controllers/RolesController.html":{},"controllers/UsersController.html":{}}}],["refresh.guard.ts",{"_index":1380,"title":{},"body":{"guards/AuthFerfershGuard.html":{}}}],["refresh.guard.ts:22",{"_index":1382,"title":{},"body":{"guards/AuthFerfershGuard.html":{}}}],["refresh.guard.ts:29",{"_index":1383,"title":{},"body":{"guards/AuthFerfershGuard.html":{}}}],["refresh.service",{"_index":275,"title":{},"body":{"guards/AdminGuard.html":{},"modules/AdminModule.html":{},"modules/AuthModule.html":{},"injectables/InitializeUserMiddleware.html":{},"guards/OwnerAdminGuard.html":{},"modules/OwnerModule.html":{},"modules/RolesModule.html":{},"guards/UserGuard.html":{},"modules/UsersModule.html":{}}}],["refresh.service.ts",{"_index":318,"title":{},"body":{"injectables/AdminJwtRefreshService.html":{},"injectables/OwnerJwtRefreshService.html":{},"injectables/UserJwtRefreshTokenService.html":{}}}],["refresh.service.ts:117",{"_index":3462,"title":{},"body":{"injectables/UserJwtRefreshTokenService.html":{}}}],["refresh.service.ts:122",{"_index":361,"title":{},"body":{"injectables/AdminJwtRefreshService.html":{},"injectables/OwnerJwtRefreshService.html":{}}}],["refresh.service.ts:166",{"_index":3457,"title":{},"body":{"injectables/UserJwtRefreshTokenService.html":{}}}],["refresh.service.ts:192",{"_index":3452,"title":{},"body":{"injectables/UserJwtRefreshTokenService.html":{}}}],["refresh.service.ts:201",{"_index":2752,"title":{},"body":{"injectables/OwnerJwtRefreshService.html":{}}}],["refresh.service.ts:202",{"_index":356,"title":{},"body":{"injectables/AdminJwtRefreshService.html":{}}}],["refresh.service.ts:21",{"_index":3448,"title":{},"body":{"injectables/UserJwtRefreshTokenService.html":{}}}],["refresh.service.ts:212",{"_index":3450,"title":{},"body":{"injectables/UserJwtRefreshTokenService.html":{}}}],["refresh.service.ts:227",{"_index":2747,"title":{},"body":{"injectables/OwnerJwtRefreshService.html":{}}}],["refresh.service.ts:228",{"_index":339,"title":{},"body":{"injectables/AdminJwtRefreshService.html":{}}}],["refresh.service.ts:234",{"_index":3459,"title":{},"body":{"injectables/UserJwtRefreshTokenService.html":{}}}],["refresh.service.ts:244",{"_index":343,"title":{},"body":{"injectables/AdminJwtRefreshService.html":{}}}],["refresh.service.ts:247",{"_index":2744,"title":{},"body":{"injectables/OwnerJwtRefreshService.html":{}}}],["refresh.service.ts:25",{"_index":337,"title":{},"body":{"injectables/AdminJwtRefreshService.html":{},"injectables/OwnerJwtRefreshService.html":{}}}],["refresh.service.ts:261",{"_index":341,"title":{},"body":{"injectables/AdminJwtRefreshService.html":{}}}],["refresh.service.ts:263",{"_index":2745,"title":{},"body":{"injectables/OwnerJwtRefreshService.html":{}}}],["refresh.service.ts:279",{"_index":358,"title":{},"body":{"injectables/AdminJwtRefreshService.html":{}}}],["refresh.service.ts:281",{"_index":2754,"title":{},"body":{"injectables/OwnerJwtRefreshService.html":{}}}],["refresh.service.ts:30",{"_index":3453,"title":{},"body":{"injectables/UserJwtRefreshTokenService.html":{}}}],["refresh.service.ts:304",{"_index":347,"title":{},"body":{"injectables/AdminJwtRefreshService.html":{}}}],["refresh.service.ts:306",{"_index":2749,"title":{},"body":{"injectables/OwnerJwtRefreshService.html":{}}}],["refresh.service.ts:317",{"_index":344,"title":{},"body":{"injectables/AdminJwtRefreshService.html":{}}}],["refresh.service.ts:319",{"_index":2748,"title":{},"body":{"injectables/OwnerJwtRefreshService.html":{}}}],["refresh.service.ts:35",{"_index":350,"title":{},"body":{"injectables/AdminJwtRefreshService.html":{},"injectables/OwnerJwtRefreshService.html":{}}}],["refresh.service.ts:45",{"_index":3464,"title":{},"body":{"injectables/UserJwtRefreshTokenService.html":{}}}],["refresh.service.ts:50",{"_index":363,"title":{},"body":{"injectables/AdminJwtRefreshService.html":{},"injectables/OwnerJwtRefreshService.html":{}}}],["refresh.service.ts:67",{"_index":3455,"title":{},"body":{"injectables/UserJwtRefreshTokenService.html":{}}}],["refresh.service.ts:72",{"_index":354,"title":{},"body":{"injectables/AdminJwtRefreshService.html":{},"injectables/OwnerJwtRefreshService.html":{}}}],["refresh_token_not_provided",{"_index":272,"title":{},"body":{"guards/AdminGuard.html":{},"injectables/InitializeUserMiddleware.html":{},"guards/OwnerAdminGuard.html":{},"guards/UserGuard.html":{}}}],["refreshauthguard",{"_index":1338,"title":{"guards/RefreshAuthGuard.html":{}},"body":{"controllers/AuthController.html":{},"guards/RefreshAuthGuard.html":{}}}],["refreshing",{"_index":1316,"title":{},"body":{"controllers/AuthController.html":{}}}],["refreshpayload",{"_index":298,"title":{},"body":{"guards/AdminGuard.html":{},"guards/OwnerAdminGuard.html":{},"guards/UserGuard.html":{}}}],["refreshpayload.roles.some",{"_index":300,"title":{},"body":{"guards/AdminGuard.html":{},"guards/OwnerAdminGuard.html":{},"guards/UserGuard.html":{}}}],["refreshtoken",{"_index":287,"title":{},"body":{"guards/AdminGuard.html":{},"interfaces/AuthUser.html":{},"interfaces/CodeDto.html":{},"injectables/InitializeUserMiddleware.html":{},"guards/OwnerAdminGuard.html":{},"interfaces/Payload.html":{},"interfaces/ReturnedAdmin.html":{},"interfaces/ReturnedOwner.html":{},"interfaces/ReturnedUser.html":{},"interfaces/Tokens.html":{},"guards/UserGuard.html":{}}}],["refreshtoken.deleted",{"_index":3349,"title":{},"body":{"injectables/TasksService.html":{}}}],["refreshtokenid",{"_index":3299,"title":{},"body":{"injectables/TasksService.html":{}}}],["registerdecorator",{"_index":2548,"title":{},"body":{"classes/MatchConstraint.html":{}}}],["rejectunauthorized",{"_index":2366,"title":{},"body":{"modules/MailModule.html":{}}}],["relatedpropertyname",{"_index":2557,"title":{},"body":{"classes/MatchConstraint.html":{}}}],["relatedvalue",{"_index":2559,"title":{},"body":{"classes/MatchConstraint.html":{}}}],["removelistener",{"_index":1823,"title":{},"body":{"modules/CoreModule.html":{}}}],["removetoken",{"_index":327,"title":{},"body":{"injectables/AdminJwtRefreshService.html":{},"injectables/OwnerJwtRefreshService.html":{},"injectables/UserJwtRefreshTokenService.html":{}}}],["removetoken(adminrefreshtoken",{"_index":355,"title":{},"body":{"injectables/AdminJwtRefreshService.html":{}}}],["removetoken(ownerrefreshtoken",{"_index":2751,"title":{},"body":{"injectables/OwnerJwtRefreshService.html":{}}}],["removetoken(userrefreshtoken",{"_index":3456,"title":{},"body":{"injectables/UserJwtRefreshTokenService.html":{}}}],["removetokenintime",{"_index":328,"title":{},"body":{"injectables/AdminJwtRefreshService.html":{},"injectables/OwnerJwtRefreshService.html":{},"injectables/UserJwtRefreshTokenService.html":{}}}],["removetokenintime(adminrefreshtokenid",{"_index":357,"title":{},"body":{"injectables/AdminJwtRefreshService.html":{}}}],["removetokenintime(ownerrefreshtokenid",{"_index":2753,"title":{},"body":{"injectables/OwnerJwtRefreshService.html":{}}}],["removetokenintime(userrefreshtokenid",{"_index":3458,"title":{},"body":{"injectables/UserJwtRefreshTokenService.html":{}}}],["renderpath",{"_index":1239,"title":{},"body":{"modules/AppModule.html":{}}}],["renewcurrencies",{"_index":2103,"title":{},"body":{"injectables/CurrencyService.html":{},"injectables/TasksService.html":{}}}],["renewcurrenciescron",{"_index":2104,"title":{},"body":{"injectables/CurrencyService.html":{}}}],["replace",{"_index":1134,"title":{},"body":{"controllers/AppController.html":{}}}],["replstart",{"_index":3763,"title":{},"body":{"miscellaneous/functions.html":{}}}],["reply",{"_index":2368,"title":{},"body":{"modules/MailModule.html":{}}}],["repository",{"_index":3784,"title":{},"body":{"index.html":{}}}],["req",{"_index":29,"title":{},"body":{"injectables/ActivateMiddleware.html":{},"guards/AddContentGuard.html":{},"guards/AdminGuard.html":{},"injectables/AdminUserMiddleware.html":{},"controllers/AppController.html":{},"controllers/AuthController.html":{},"guards/AuthFerfershGuard.html":{},"injectables/AuthMiddleware.html":{},"injectables/CorsMiddleware.html":{},"guards/EditContentGuard.html":{},"guards/EditWebsiteGuard.html":{},"injectables/FilesService.html":{},"injectables/InitializeEmailMiddleware.html":{},"injectables/InitializeUserMiddleware.html":{},"guards/JwtAuthGuard.html":{},"injectables/LocationMiddleware.html":{},"guards/OwnerAdminGuard.html":{},"injectables/ProductMiddleware.html":{},"guards/RefreshAuthGuard.html":{},"interfaces/RequestHeaders.html":{},"classes/RequestValidator.html":{},"guards/RolesGuard.html":{},"injectables/ThrottlerBehindProxyGuard.html":{},"injectables/UserAdminMiddleware.html":{},"guards/UserGuard.html":{},"injectables/UserMiddleware.html":{},"injectables/UserMiddleware-1.html":{},"controllers/UsersController.html":{},"interfaces/fileCreated.html":{}}}],["req.body",{"_index":3103,"title":{},"body":{"classes/RequestValidator.html":{}}}],["req.body.activationlink",{"_index":846,"title":{},"body":{"injectables/AdminUserMiddleware.html":{},"injectables/UserAdminMiddleware.html":{}}}],["req.body.password",{"_index":845,"title":{},"body":{"injectables/AdminUserMiddleware.html":{},"injectables/UserAdminMiddleware.html":{}}}],["req.body.title",{"_index":2209,"title":{},"body":{"injectables/FilesService.html":{},"interfaces/fileCreated.html":{}}}],["req.headers.authorization",{"_index":2300,"title":{},"body":{"guards/JwtAuthGuard.html":{},"guards/RefreshAuthGuard.html":{},"guards/RolesGuard.html":{}}}],["req.headers['user",{"_index":1394,"title":{},"body":{"injectables/AuthMiddleware.html":{},"injectables/ProductMiddleware.html":{},"injectables/UserMiddleware.html":{},"injectables/UserMiddleware-1.html":{}}}],["req.ip",{"_index":3400,"title":{},"body":{"injectables/ThrottlerBehindProxyGuard.html":{}}}],["req.ips.length",{"_index":3398,"title":{},"body":{"injectables/ThrottlerBehindProxyGuard.html":{}}}],["req.ips[0",{"_index":3399,"title":{},"body":{"injectables/ThrottlerBehindProxyGuard.html":{}}}],["req.method",{"_index":1896,"title":{},"body":{"injectables/CorsMiddleware.html":{},"interfaces/RequestHeaders.html":{}}}],["req.params?.link",{"_index":61,"title":{},"body":{"injectables/ActivateMiddleware.html":{}}}],["req.payload",{"_index":2305,"title":{},"body":{"guards/JwtAuthGuard.html":{},"guards/RolesGuard.html":{}}}],["req?.body?.addcontent",{"_index":837,"title":{},"body":{"injectables/AdminUserMiddleware.html":{},"injectables/UserAdminMiddleware.html":{}}}],["req?.body?.editcontent",{"_index":838,"title":{},"body":{"injectables/AdminUserMiddleware.html":{},"injectables/UserAdminMiddleware.html":{}}}],["req?.body?.editwebsite",{"_index":839,"title":{},"body":{"injectables/AdminUserMiddleware.html":{},"injectables/UserAdminMiddleware.html":{}}}],["req?.body?.email",{"_index":833,"title":{},"body":{"injectables/AdminUserMiddleware.html":{},"injectables/InitializeEmailMiddleware.html":{},"injectables/UserAdminMiddleware.html":{}}}],["req?.body?.isadmin",{"_index":836,"title":{},"body":{"injectables/AdminUserMiddleware.html":{},"injectables/UserAdminMiddleware.html":{}}}],["req?.body?.name",{"_index":831,"title":{},"body":{"injectables/AdminUserMiddleware.html":{},"injectables/UserAdminMiddleware.html":{}}}],["req?.body?.phonenumber",{"_index":834,"title":{},"body":{"injectables/AdminUserMiddleware.html":{},"injectables/UserAdminMiddleware.html":{}}}],["req?.body?.surname",{"_index":832,"title":{},"body":{"injectables/AdminUserMiddleware.html":{},"injectables/UserAdminMiddleware.html":{}}}],["req?.body?.title",{"_index":2214,"title":{},"body":{"injectables/FilesService.html":{},"interfaces/fileCreated.html":{}}}],["req?.cookies['refreshtoken",{"_index":288,"title":{},"body":{"guards/AdminGuard.html":{},"injectables/InitializeUserMiddleware.html":{},"guards/OwnerAdminGuard.html":{},"guards/UserGuard.html":{}}}],["req?.payload",{"_index":106,"title":{},"body":{"guards/AddContentGuard.html":{},"guards/AdminGuard.html":{},"guards/AuthFerfershGuard.html":{},"guards/EditContentGuard.html":{},"guards/EditWebsiteGuard.html":{},"guards/OwnerAdminGuard.html":{},"guards/UserGuard.html":{}}}],["req?.signedcookies['user",{"_index":1385,"title":{},"body":{"guards/AuthFerfershGuard.html":{}}}],["req['city",{"_index":2332,"title":{},"body":{"injectables/LocationMiddleware.html":{}}}],["req['client",{"_index":2326,"title":{},"body":{"injectables/LocationMiddleware.html":{}}}],["req['codedto",{"_index":2270,"title":{},"body":{"injectables/InitializeEmailMiddleware.html":{}}}],["req['countryisocode",{"_index":2324,"title":{},"body":{"injectables/LocationMiddleware.html":{}}}],["req['currency",{"_index":2338,"title":{},"body":{"injectables/LocationMiddleware.html":{}}}],["req['geo",{"_index":2334,"title":{},"body":{"injectables/LocationMiddleware.html":{}}}],["req['type",{"_index":108,"title":{},"body":{"guards/AddContentGuard.html":{},"guards/AuthFerfershGuard.html":{},"guards/EditContentGuard.html":{},"guards/EditWebsiteGuard.html":{},"injectables/InitializeUserMiddleware.html":{},"guards/OwnerAdminGuard.html":{}}}],["req['user",{"_index":2330,"title":{},"body":{"injectables/LocationMiddleware.html":{}}}],["req['useragent",{"_index":1403,"title":{},"body":{"injectables/AuthMiddleware.html":{},"injectables/ProductMiddleware.html":{},"injectables/UserMiddleware.html":{},"injectables/UserMiddleware-1.html":{}}}],["request",{"_index":22,"title":{},"body":{"injectables/ActivateMiddleware.html":{},"guards/AdminGuard.html":{},"injectables/AdminJwtRefreshService.html":{},"injectables/AdminService.html":{},"injectables/AdminUserMiddleware.html":{},"classes/ApiErrorExceptionFilter.html":{},"classes/ApiException.html":{},"classes/ApiExceptionFilter.html":{},"controllers/AppController.html":{},"controllers/AuthController.html":{},"injectables/AuthMiddleware.html":{},"injectables/CategoriesService.html":{},"injectables/ColoursService.html":{},"injectables/CorsMiddleware.html":{},"injectables/FilesService.html":{},"classes/HttpExceptionFilter.html":{},"injectables/InitializeEmailMiddleware.html":{},"injectables/InitializeUserMiddleware.html":{},"injectables/LocationMiddleware.html":{},"guards/OwnerAdminGuard.html":{},"injectables/OwnerJwtRefreshService.html":{},"injectables/OwnerService.html":{},"injectables/ProductMiddleware.html":{},"guards/RefreshAuthGuard.html":{},"interfaces/RequestHeaders.html":{},"classes/RequestValidator.html":{},"injectables/UserAdminMiddleware.html":{},"guards/UserGuard.html":{},"injectables/UserJwtRefreshTokenService.html":{},"injectables/UserMiddleware.html":{},"injectables/UserMiddleware-1.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"interfaces/fileCreated.html":{}}}],["request.headers['x",{"_index":1091,"title":{},"body":{"controllers/AppController.html":{}}}],["request.signedcookies['_id",{"_index":1071,"title":{},"body":{"controllers/AppController.html":{}}}],["request.url",{"_index":910,"title":{},"body":{"classes/ApiErrorExceptionFilter.html":{},"classes/ApiExceptionFilter.html":{},"classes/HttpExceptionFilter.html":{}}}],["request['city",{"_index":1104,"title":{},"body":{"controllers/AppController.html":{}}}],["request['currency",{"_index":1102,"title":{},"body":{"controllers/AppController.html":{}}}],["requested",{"_index":890,"title":{},"body":{"classes/ApiError.html":{},"classes/BadRequestError.html":{},"injectables/CorsMiddleware.html":{},"classes/NotFoundError.html":{},"interfaces/RequestHeaders.html":{}}}],["requestheaders",{"_index":1831,"title":{"interfaces/RequestHeaders.html":{}},"body":{"injectables/CorsMiddleware.html":{},"interfaces/RequestHeaders.html":{}}}],["requestmethod",{"_index":498,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CategoriesColoursModule.html":{},"modules/ProductModule.html":{},"modules/ReviewsModule.html":{},"modules/RolesModule.html":{},"modules/UsersModule.html":{}}}],["requestmethod.all",{"_index":1278,"title":{},"body":{"modules/AppModule.html":{},"modules/ProductModule.html":{}}}],["requestmethod.delete",{"_index":1563,"title":{},"body":{"modules/CategoriesColoursModule.html":{},"modules/ProductModule.html":{},"modules/ReviewsModule.html":{}}}],["requestmethod.get",{"_index":576,"title":{},"body":{"modules/AdminModule.html":{},"modules/AuthModule.html":{},"modules/ProductModule.html":{},"modules/RolesModule.html":{},"modules/UsersModule.html":{}}}],["requestmethod.patch",{"_index":581,"title":{},"body":{"modules/AdminModule.html":{},"modules/AuthModule.html":{},"modules/CategoriesColoursModule.html":{},"modules/ProductModule.html":{},"modules/UsersModule.html":{}}}],["requestmethod.post",{"_index":579,"title":{},"body":{"modules/AdminModule.html":{},"modules/AuthModule.html":{},"modules/ProductModule.html":{}}}],["requestmethod.put",{"_index":1437,"title":{},"body":{"modules/AuthModule.html":{},"modules/CategoriesColoursModule.html":{},"modules/ProductModule.html":{},"modules/RolesModule.html":{}}}],["requesttimeoutexception",{"_index":2244,"title":{},"body":{"injectables/GlobalInterceptor.html":{}}}],["requestvalidator",{"_index":524,"title":{"classes/RequestValidator.html":{}},"body":{"modules/AdminModule.html":{},"modules/AuthModule.html":{},"classes/RequestValidator.html":{},"modules/ReviewsModule.html":{},"modules/UsersModule.html":{}}}],["requiredroles",{"_index":283,"title":{},"body":{"guards/AdminGuard.html":{},"guards/OwnerAdminGuard.html":{},"guards/RolesGuard.html":{},"guards/UserGuard.html":{}}}],["requiredroles.includes(role.value",{"_index":301,"title":{},"body":{"guards/AdminGuard.html":{},"guards/OwnerAdminGuard.html":{},"guards/RolesGuard.html":{},"guards/UserGuard.html":{}}}],["res",{"_index":23,"title":{},"body":{"injectables/ActivateMiddleware.html":{},"injectables/AdminUserMiddleware.html":{},"controllers/AppController.html":{},"controllers/AuthController.html":{},"injectables/AuthMiddleware.html":{},"injectables/CorsMiddleware.html":{},"injectables/InitializeEmailMiddleware.html":{},"injectables/InitializeUserMiddleware.html":{},"injectables/LocationMiddleware.html":{},"injectables/ProductMiddleware.html":{},"interfaces/RequestHeaders.html":{},"classes/RequestValidator.html":{},"injectables/UserAdminMiddleware.html":{},"injectables/UserMiddleware.html":{},"injectables/UserMiddleware-1.html":{},"controllers/UsersController.html":{}}}],["res.data",{"_index":1128,"title":{},"body":{"controllers/AppController.html":{},"injectables/CurrencyService.html":{}}}],["res.header",{"_index":1854,"title":{},"body":{"injectables/CorsMiddleware.html":{},"interfaces/RequestHeaders.html":{}}}],["res.removeheader('server",{"_index":1893,"title":{},"body":{"injectables/CorsMiddleware.html":{},"interfaces/RequestHeaders.html":{}}}],["res.removeheader('x",{"_index":1894,"title":{},"body":{"injectables/CorsMiddleware.html":{},"interfaces/RequestHeaders.html":{}}}],["res.setheader",{"_index":1850,"title":{},"body":{"injectables/CorsMiddleware.html":{},"injectables/InitializeUserMiddleware.html":{},"injectables/ProductMiddleware.html":{},"interfaces/RequestHeaders.html":{}}}],["res.setheader('access",{"_index":1395,"title":{},"body":{"injectables/AuthMiddleware.html":{},"injectables/CorsMiddleware.html":{},"injectables/ProductMiddleware.html":{},"interfaces/RequestHeaders.html":{},"injectables/UserMiddleware.html":{},"injectables/UserMiddleware-1.html":{}}}],["res.setheader('client",{"_index":2335,"title":{},"body":{"injectables/LocationMiddleware.html":{}}}],["res.setheader('expires",{"_index":1867,"title":{},"body":{"injectables/CorsMiddleware.html":{},"interfaces/RequestHeaders.html":{}}}],["res.setheader('passed",{"_index":3114,"title":{},"body":{"classes/RequestValidator.html":{}}}],["res.setheader('strict",{"_index":1868,"title":{},"body":{"injectables/CorsMiddleware.html":{},"interfaces/RequestHeaders.html":{}}}],["res.setheader('timing",{"_index":1399,"title":{},"body":{"injectables/AuthMiddleware.html":{},"injectables/ProductMiddleware.html":{},"injectables/UserMiddleware.html":{},"injectables/UserMiddleware-1.html":{}}}],["res.setheader('x",{"_index":68,"title":{},"body":{"injectables/ActivateMiddleware.html":{},"injectables/CorsMiddleware.html":{},"injectables/InitializeEmailMiddleware.html":{},"injectables/ProductMiddleware.html":{},"interfaces/RequestHeaders.html":{},"injectables/UserMiddleware.html":{},"injectables/UserMiddleware-1.html":{}}}],["res.status(204).end",{"_index":1897,"title":{},"body":{"injectables/CorsMiddleware.html":{},"interfaces/RequestHeaders.html":{}}}],["reset",{"_index":485,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CartModule.html":{},"modules/CategoriesColoursModule.html":{},"modules/CoreModule.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"modules/OrdersModule.html":{},"modules/OwnerModule.html":{},"modules/ProductModule.html":{},"modules/ReviewsModule.html":{},"modules/RolesModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["reset_time_expired",{"_index":730,"title":{},"body":{"injectables/AdminService.html":{},"classes/ApiException.html":{},"injectables/OwnerService.html":{},"injectables/UsersService.html":{}}}],["resetdto",{"_index":713,"title":{"classes/ResetDto.html":{}},"body":{"injectables/AdminService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/OwnerService.html":{},"classes/ResetDto.html":{},"injectables/UsersService.html":{}}}],["resetdto.email",{"_index":813,"title":{},"body":{"injectables/AdminService.html":{},"injectables/OwnerService.html":{},"injectables/UsersService.html":{}}}],["resetdto.password",{"_index":818,"title":{},"body":{"injectables/AdminService.html":{},"injectables/OwnerService.html":{},"injectables/UsersService.html":{}}}],["resetpassword",{"_index":685,"title":{},"body":{"injectables/AdminService.html":{},"controllers/AuthController.html":{},"injectables/OwnerService.html":{},"injectables/UsersService.html":{}}}],["resetpassword(resetdto",{"_index":712,"title":{},"body":{"injectables/AdminService.html":{},"controllers/AuthController.html":{},"injectables/OwnerService.html":{},"injectables/UsersService.html":{}}}],["resetting",{"_index":1319,"title":{},"body":{"controllers/AuthController.html":{},"injectables/MailService.html":{}}}],["resetting[locale",{"_index":2540,"title":{},"body":{"injectables/MailService.html":{}}}],["resettoken",{"_index":74,"title":{},"body":{"injectables/ActivateMiddleware.html":{},"classes/Owner.html":{}}}],["resettoken'})@column({type",{"_index":2672,"title":{},"body":{"classes/Owner.html":{}}}],["resettokenexpiration",{"_index":2629,"title":{},"body":{"classes/Owner.html":{}}}],["resettokenexpiration'})@column({type",{"_index":2674,"title":{},"body":{"classes/Owner.html":{}}}],["response",{"_index":24,"title":{},"body":{"injectables/ActivateMiddleware.html":{},"injectables/AdminUserMiddleware.html":{},"classes/ApiErrorExceptionFilter.html":{},"classes/ApiExceptionFilter.html":{},"controllers/AppController.html":{},"controllers/AuthController.html":{},"injectables/AuthMiddleware.html":{},"injectables/CorsMiddleware.html":{},"classes/HttpExceptionFilter.html":{},"injectables/InitializeEmailMiddleware.html":{},"injectables/InitializeUserMiddleware.html":{},"injectables/LocationMiddleware.html":{},"injectables/ProductMiddleware.html":{},"interfaces/RequestHeaders.html":{},"classes/RequestValidator.html":{},"injectables/UserAdminMiddleware.html":{},"injectables/UserMiddleware.html":{},"injectables/UserMiddleware-1.html":{},"controllers/UsersController.html":{},"classes/ValidationException.html":{}}}],["response.cookie('_id",{"_index":1074,"title":{},"body":{"controllers/AppController.html":{}}}],["response.json",{"_index":1086,"title":{},"body":{"controllers/AppController.html":{}}}],["response.status(status).json",{"_index":2254,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["response.status(status).send",{"_index":905,"title":{},"body":{"classes/ApiErrorExceptionFilter.html":{},"classes/ApiExceptionFilter.html":{}}}],["responsebody",{"_index":868,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["responseencoding",{"_index":1203,"title":{},"body":{"modules/AppModule.html":{},"modules/OwnerModule.html":{}}}],["responsetype",{"_index":1205,"title":{},"body":{"modules/AppModule.html":{},"modules/OwnerModule.html":{}}}],["restarting",{"_index":1001,"title":{},"body":{"injectables/AppClusterService.html":{},"interfaces/Msg.html":{}}}],["results",{"_index":77,"title":{},"body":{"injectables/ActivateMiddleware.html":{},"guards/AddContentGuard.html":{},"classes/AddRoleDto.html":{},"controllers/AdminController.html":{},"guards/AdminGuard.html":{},"interfaces/AdminInterface.html":{},"injectables/AdminJwtRefreshService.html":{},"modules/AdminModule.html":{},"classes/AdminRefreshToken.html":{},"interfaces/AdminRefreshTokenCreationAttrbs.html":{},"injectables/AdminService.html":{},"injectables/AdminUserMiddleware.html":{},"interfaces/AdmincreationAttrbs.html":{},"classes/AllExceptionsFilter.html":{},"classes/ApiError.html":{},"classes/ApiErrorExceptionFilter.html":{},"classes/ApiException.html":{},"classes/ApiExceptionFilter.html":{},"injectables/AppClusterService.html":{},"controllers/AppController.html":{},"injectables/AppListener.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"guards/AuthFerfershGuard.html":{},"injectables/AuthMiddleware.html":{},"modules/AuthModule.html":{},"interfaces/AuthUser.html":{},"classes/BadRequestError.html":{},"classes/BanUserDto.html":{},"classes/BookmarksProducts.html":{},"controllers/CardController.html":{},"injectables/CardService.html":{},"classes/Cart.html":{},"modules/CartModule.html":{},"classes/CartProduct.html":{},"modules/CategoriesColoursModule.html":{},"controllers/CategoriesController.html":{},"injectables/CategoriesService.html":{},"classes/Category.html":{},"interfaces/CategoryCreationAtrb.html":{},"classes/ChangeDto.html":{},"interfaces/CodeDto.html":{},"classes/Colour.html":{},"interfaces/ColourCreationAtrb.html":{},"controllers/ColoursController.html":{},"injectables/ColoursService.html":{},"modules/CoreModule.html":{},"injectables/CorsMiddleware.html":{},"classes/CreateAccessTokenDto.html":{},"classes/CreateAdminDto.html":{},"classes/CreateAdminRefreshTokenDto.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateColourDto.html":{},"classes/CreateOwnerDto.html":{},"classes/CreateOwnerRefreshTokenDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateReviewDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserRefreshTokenDto.html":{},"classes/Currencies.html":{},"injectables/CurrencyService.html":{},"guards/EditContentGuard.html":{},"guards/EditWebsiteGuard.html":{},"injectables/FilesService.html":{},"classes/GarbageCollectingProcessor.html":{},"injectables/GlobalInterceptor.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/ITelegramModuleAsyncOptions.html":{},"interfaces/ITelegramOptions.html":{},"injectables/InitializeEmailMiddleware.html":{},"interfaces/InitializeUser.html":{},"injectables/InitializeUserMiddleware.html":{},"guards/JwtAuthGuard.html":{},"classes/JwtRefreshTokenDeletedEvent.html":{},"injectables/LocationMiddleware.html":{},"classes/LoginDto.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"classes/MatchConstraint.html":{},"interfaces/Msg.html":{},"classes/Nested.html":{},"classes/Nested-1.html":{},"classes/NotFoundError.html":{},"classes/Order.html":{},"classes/OrderProduct.html":{},"controllers/OrdersController.html":{},"modules/OrdersModule.html":{},"injectables/OrdersService.html":{},"classes/Owner.html":{},"guards/OwnerAdminGuard.html":{},"interfaces/OwnerCreationAttrbs.html":{},"injectables/OwnerJwtRefreshService.html":{},"modules/OwnerModule.html":{},"classes/OwnerRefreshToken.html":{},"interfaces/OwnerRefreshTokenCreationAttrbs.html":{},"injectables/OwnerService.html":{},"classes/ParseFormDataJsonPipe.html":{},"injectables/ParseJsonPipe.html":{},"interfaces/Payload.html":{},"classes/Product.html":{},"classes/ProductCategories.html":{},"classes/ProductColours.html":{},"interfaces/ProductCreationAttrs.html":{},"injectables/ProductMiddleware.html":{},"modules/ProductModule.html":{},"classes/ProductReviews.html":{},"classes/QueryFilterDto.html":{},"guards/RefreshAuthGuard.html":{},"interfaces/RequestHeaders.html":{},"classes/RequestValidator.html":{},"classes/ResetDto.html":{},"interfaces/ReturnedAdmin.html":{},"interfaces/ReturnedCategory.html":{},"interfaces/ReturnedColour.html":{},"interfaces/ReturnedOwner.html":{},"interfaces/ReturnedProduct.html":{},"interfaces/ReturnedProducts.html":{},"interfaces/ReturnedReview.html":{},"interfaces/ReturnedUser.html":{},"classes/Review.html":{},"interfaces/ReviewCreationAtrb.html":{},"controllers/ReviewsController.html":{},"modules/ReviewsModule.html":{},"injectables/ReviewsService.html":{},"classes/Role.html":{},"interfaces/RolecreationAttrbs.html":{},"controllers/RolesController.html":{},"guards/RolesGuard.html":{},"modules/RolesModule.html":{},"injectables/RolesService.html":{},"classes/SignupDto.html":{},"injectables/TasksService.html":{},"modules/TelegramModule.html":{},"injectables/TelegramService.html":{},"injectables/ThrottlerBehindProxyGuard.html":{},"interfaces/Tokens.html":{},"classes/UpdateCategoryDto.html":{},"classes/UpdateColourDto.html":{},"classes/UpdateProductDto.html":{},"classes/UpdateUserDto.html":{},"injectables/UserAdminMiddleware.html":{},"guards/UserGuard.html":{},"interfaces/UserInterface.html":{},"injectables/UserJwtRefreshTokenService.html":{},"injectables/UserMiddleware.html":{},"injectables/UserMiddleware-1.html":{},"interfaces/UserRefreshCreationAttrbs.html":{},"classes/UserRefreshToken.html":{},"classes/UserRoles.html":{},"interfaces/UsercreationAttrbs.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"injectables/ValidateDto.html":{},"interfaces/ValidateUser.html":{},"classes/ValidationException.html":{},"classes/WatchedProducts.html":{},"dependencies.html":{},"interfaces/fileCreated.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{}}}],["retryattempts",{"_index":1275,"title":{},"body":{"modules/AppModule.html":{}}}],["retrydelay",{"_index":1274,"title":{},"body":{"modules/AppModule.html":{}}}],["retryprocessdelay",{"_index":1235,"title":{},"body":{"modules/AppModule.html":{}}}],["return",{"_index":104,"title":{},"body":{"guards/AddContentGuard.html":{},"controllers/AdminController.html":{},"guards/AdminGuard.html":{},"injectables/AdminJwtRefreshService.html":{},"classes/AdminRefreshToken.html":{},"injectables/AdminService.html":{},"injectables/AdminUserMiddleware.html":{},"controllers/AppController.html":{},"injectables/AppListener.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"guards/AuthFerfershGuard.html":{},"injectables/AuthMiddleware.html":{},"classes/Cart.html":{},"classes/CartProduct.html":{},"controllers/CategoriesController.html":{},"injectables/CategoriesService.html":{},"classes/Category.html":{},"classes/Colour.html":{},"controllers/ColoursController.html":{},"injectables/ColoursService.html":{},"injectables/CorsMiddleware.html":{},"classes/Currencies.html":{},"injectables/CurrencyService.html":{},"guards/EditContentGuard.html":{},"guards/EditWebsiteGuard.html":{},"injectables/FilesService.html":{},"injectables/GlobalInterceptor.html":{},"injectables/InitializeEmailMiddleware.html":{},"injectables/InitializeUserMiddleware.html":{},"guards/JwtAuthGuard.html":{},"injectables/LocationMiddleware.html":{},"classes/MatchConstraint.html":{},"classes/Order.html":{},"classes/OrderProduct.html":{},"classes/Owner.html":{},"guards/OwnerAdminGuard.html":{},"injectables/OwnerJwtRefreshService.html":{},"classes/OwnerRefreshToken.html":{},"injectables/OwnerService.html":{},"classes/ParseFormDataJsonPipe.html":{},"injectables/ParseJsonPipe.html":{},"classes/Product.html":{},"injectables/ProductMiddleware.html":{},"guards/RefreshAuthGuard.html":{},"interfaces/RequestHeaders.html":{},"classes/RequestValidator.html":{},"controllers/ReviewsController.html":{},"injectables/ReviewsService.html":{},"classes/Role.html":{},"controllers/RolesController.html":{},"guards/RolesGuard.html":{},"injectables/RolesService.html":{},"injectables/TasksService.html":{},"modules/TelegramModule.html":{},"injectables/ThrottlerBehindProxyGuard.html":{},"injectables/UserAdminMiddleware.html":{},"guards/UserGuard.html":{},"injectables/UserJwtRefreshTokenService.html":{},"injectables/UserMiddleware.html":{},"injectables/UserMiddleware-1.html":{},"classes/UserRefreshToken.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"injectables/ValidateDto.html":{},"interfaces/fileCreated.html":{}}}],["returnedadmin",{"_index":1444,"title":{"interfaces/ReturnedAdmin.html":{}},"body":{"interfaces/AuthUser.html":{},"interfaces/CodeDto.html":{},"interfaces/Payload.html":{},"interfaces/ReturnedAdmin.html":{},"interfaces/ReturnedOwner.html":{},"interfaces/ReturnedUser.html":{},"interfaces/Tokens.html":{}}}],["returnedcategory",{"_index":1598,"title":{"interfaces/ReturnedCategory.html":{}},"body":{"controllers/CategoriesController.html":{},"injectables/CategoriesService.html":{},"interfaces/CategoryCreationAtrb.html":{},"interfaces/ColourCreationAtrb.html":{},"interfaces/ProductCreationAttrs.html":{},"interfaces/ReturnedCategory.html":{},"interfaces/ReturnedColour.html":{},"interfaces/ReturnedProduct.html":{},"interfaces/ReturnedProducts.html":{},"interfaces/ReturnedReview.html":{},"interfaces/ReviewCreationAtrb.html":{}}}],["returnedcolour",{"_index":1692,"title":{"interfaces/ReturnedColour.html":{}},"body":{"interfaces/CategoryCreationAtrb.html":{},"interfaces/ColourCreationAtrb.html":{},"controllers/ColoursController.html":{},"injectables/ColoursService.html":{},"interfaces/ProductCreationAttrs.html":{},"interfaces/ReturnedCategory.html":{},"interfaces/ReturnedColour.html":{},"interfaces/ReturnedProduct.html":{},"interfaces/ReturnedProducts.html":{},"interfaces/ReturnedReview.html":{},"interfaces/ReviewCreationAtrb.html":{}}}],["returnedowner",{"_index":1445,"title":{"interfaces/ReturnedOwner.html":{}},"body":{"interfaces/AuthUser.html":{},"interfaces/CodeDto.html":{},"interfaces/Payload.html":{},"interfaces/ReturnedAdmin.html":{},"interfaces/ReturnedOwner.html":{},"interfaces/ReturnedUser.html":{},"interfaces/Tokens.html":{}}}],["returnedproduct",{"_index":1690,"title":{"interfaces/ReturnedProduct.html":{}},"body":{"interfaces/CategoryCreationAtrb.html":{},"interfaces/ColourCreationAtrb.html":{},"interfaces/ProductCreationAttrs.html":{},"interfaces/ReturnedCategory.html":{},"interfaces/ReturnedColour.html":{},"interfaces/ReturnedProduct.html":{},"interfaces/ReturnedProducts.html":{},"interfaces/ReturnedReview.html":{},"interfaces/ReviewCreationAtrb.html":{}}}],["returnedproducts",{"_index":1694,"title":{"interfaces/ReturnedProducts.html":{}},"body":{"interfaces/CategoryCreationAtrb.html":{},"interfaces/ColourCreationAtrb.html":{},"interfaces/ProductCreationAttrs.html":{},"interfaces/ReturnedCategory.html":{},"interfaces/ReturnedColour.html":{},"interfaces/ReturnedProduct.html":{},"interfaces/ReturnedProducts.html":{},"interfaces/ReturnedReview.html":{},"interfaces/ReviewCreationAtrb.html":{}}}],["returnedreview",{"_index":1687,"title":{"interfaces/ReturnedReview.html":{}},"body":{"interfaces/CategoryCreationAtrb.html":{},"interfaces/ColourCreationAtrb.html":{},"interfaces/ProductCreationAttrs.html":{},"interfaces/ReturnedCategory.html":{},"interfaces/ReturnedColour.html":{},"interfaces/ReturnedProduct.html":{},"interfaces/ReturnedProducts.html":{},"interfaces/ReturnedReview.html":{},"interfaces/ReviewCreationAtrb.html":{}}}],["returneduser",{"_index":1443,"title":{"interfaces/ReturnedUser.html":{}},"body":{"interfaces/AuthUser.html":{},"interfaces/CodeDto.html":{},"interfaces/Payload.html":{},"interfaces/ReturnedAdmin.html":{},"interfaces/ReturnedOwner.html":{},"interfaces/ReturnedUser.html":{},"interfaces/Tokens.html":{}}}],["returns",{"_index":30,"title":{},"body":{"injectables/ActivateMiddleware.html":{},"guards/AddContentGuard.html":{},"controllers/AdminController.html":{},"guards/AdminGuard.html":{},"injectables/AdminJwtRefreshService.html":{},"modules/AdminModule.html":{},"classes/AdminRefreshToken.html":{},"injectables/AdminService.html":{},"injectables/AdminUserMiddleware.html":{},"classes/AllExceptionsFilter.html":{},"classes/ApiErrorExceptionFilter.html":{},"classes/ApiException.html":{},"classes/ApiExceptionFilter.html":{},"injectables/AppClusterService.html":{},"controllers/AppController.html":{},"injectables/AppListener.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"guards/AuthFerfershGuard.html":{},"injectables/AuthMiddleware.html":{},"modules/AuthModule.html":{},"classes/Cart.html":{},"classes/CartProduct.html":{},"modules/CategoriesColoursModule.html":{},"controllers/CategoriesController.html":{},"injectables/CategoriesService.html":{},"classes/Category.html":{},"classes/Colour.html":{},"controllers/ColoursController.html":{},"injectables/ColoursService.html":{},"injectables/CorsMiddleware.html":{},"classes/Currencies.html":{},"injectables/CurrencyService.html":{},"guards/EditContentGuard.html":{},"guards/EditWebsiteGuard.html":{},"injectables/FilesService.html":{},"classes/GarbageCollectingProcessor.html":{},"injectables/GlobalInterceptor.html":{},"classes/HttpExceptionFilter.html":{},"injectables/InitializeEmailMiddleware.html":{},"injectables/InitializeUserMiddleware.html":{},"guards/JwtAuthGuard.html":{},"classes/JwtRefreshTokenDeletedEvent.html":{},"injectables/LocationMiddleware.html":{},"injectables/MailService.html":{},"classes/MatchConstraint.html":{},"classes/Order.html":{},"classes/OrderProduct.html":{},"classes/Owner.html":{},"guards/OwnerAdminGuard.html":{},"injectables/OwnerJwtRefreshService.html":{},"classes/OwnerRefreshToken.html":{},"injectables/OwnerService.html":{},"classes/ParseFormDataJsonPipe.html":{},"injectables/ParseJsonPipe.html":{},"classes/Product.html":{},"injectables/ProductMiddleware.html":{},"modules/ProductModule.html":{},"guards/RefreshAuthGuard.html":{},"controllers/ReviewsController.html":{},"modules/ReviewsModule.html":{},"injectables/ReviewsService.html":{},"classes/Role.html":{},"controllers/RolesController.html":{},"guards/RolesGuard.html":{},"modules/RolesModule.html":{},"injectables/RolesService.html":{},"injectables/TasksService.html":{},"modules/TelegramModule.html":{},"injectables/TelegramService.html":{},"injectables/ThrottlerBehindProxyGuard.html":{},"injectables/UserAdminMiddleware.html":{},"guards/UserGuard.html":{},"injectables/UserJwtRefreshTokenService.html":{},"injectables/UserMiddleware.html":{},"injectables/UserMiddleware-1.html":{},"classes/UserRefreshToken.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"injectables/ValidateDto.html":{},"miscellaneous/functions.html":{}}}],["revalidate",{"_index":1863,"title":{},"body":{"injectables/CorsMiddleware.html":{},"interfaces/RequestHeaders.html":{}}}],["review",{"_index":1188,"title":{"classes/Review.html":{}},"body":{"modules/AppModule.html":{},"interfaces/CategoryCreationAtrb.html":{},"interfaces/ColourCreationAtrb.html":{},"classes/CreateReviewDto.html":{},"classes/Product.html":{},"interfaces/ProductCreationAttrs.html":{},"classes/ProductReviews.html":{},"interfaces/ReturnedCategory.html":{},"interfaces/ReturnedColour.html":{},"interfaces/ReturnedProduct.html":{},"interfaces/ReturnedProducts.html":{},"interfaces/ReturnedReview.html":{},"classes/Review.html":{},"interfaces/ReviewCreationAtrb.html":{},"modules/ReviewsModule.html":{},"injectables/ReviewsService.html":{}}}],["review.$add('product",{"_index":3184,"title":{},"body":{"injectables/ReviewsService.html":{}}}],["review.id",{"_index":3180,"title":{},"body":{"injectables/ReviewsService.html":{}}}],["review.model",{"_index":3072,"title":{},"body":{"classes/ProductReviews.html":{}}}],["review.name",{"_index":3191,"title":{},"body":{"injectables/ReviewsService.html":{}}}],["review.productid",{"_index":3182,"title":{},"body":{"injectables/ReviewsService.html":{}}}],["review.review",{"_index":3193,"title":{},"body":{"injectables/ReviewsService.html":{}}}],["review.save",{"_index":3185,"title":{},"body":{"injectables/ReviewsService.html":{}}}],["review.surname",{"_index":3192,"title":{},"body":{"injectables/ReviewsService.html":{}}}],["reviewcreationatrb",{"_index":1686,"title":{"interfaces/ReviewCreationAtrb.html":{}},"body":{"interfaces/CategoryCreationAtrb.html":{},"interfaces/ColourCreationAtrb.html":{},"interfaces/ProductCreationAttrs.html":{},"interfaces/ReturnedCategory.html":{},"interfaces/ReturnedColour.html":{},"interfaces/ReturnedProduct.html":{},"interfaces/ReturnedProducts.html":{},"interfaces/ReturnedReview.html":{},"classes/Review.html":{},"interfaces/ReviewCreationAtrb.html":{}}}],["reviewid",{"_index":3068,"title":{},"body":{"classes/ProductReviews.html":{},"controllers/ReviewsController.html":{},"injectables/ReviewsService.html":{}}}],["reviewrepository",{"_index":3169,"title":{},"body":{"injectables/ReviewsService.html":{}}}],["reviews",{"_index":1693,"title":{},"body":{"interfaces/CategoryCreationAtrb.html":{},"interfaces/ColourCreationAtrb.html":{},"classes/Product.html":{},"interfaces/ProductCreationAttrs.html":{},"interfaces/ReturnedCategory.html":{},"interfaces/ReturnedColour.html":{},"interfaces/ReturnedProduct.html":{},"interfaces/ReturnedProducts.html":{},"interfaces/ReturnedReview.html":{},"classes/Review.html":{},"interfaces/ReviewCreationAtrb.html":{},"controllers/ReviewsController.html":{}}}],["reviews.controller",{"_index":3161,"title":{},"body":{"modules/ReviewsModule.html":{}}}],["reviews.service",{"_index":3145,"title":{},"body":{"controllers/ReviewsController.html":{},"modules/ReviewsModule.html":{}}}],["reviews/create_review",{"_index":3163,"title":{},"body":{"modules/ReviewsModule.html":{}}}],["reviews/delete_review",{"_index":3165,"title":{},"body":{"modules/ReviewsModule.html":{}}}],["reviews/models/product.reviews.model",{"_index":1191,"title":{},"body":{"modules/AppModule.html":{},"classes/Product.html":{},"modules/ProductModule.html":{}}}],["reviews/models/review.model",{"_index":1189,"title":{},"body":{"modules/AppModule.html":{},"classes/Product.html":{}}}],["reviews/reviews.module",{"_index":1187,"title":{},"body":{"modules/AppModule.html":{}}}],["reviewscontroller",{"_index":3132,"title":{"controllers/ReviewsController.html":{}},"body":{"controllers/ReviewsController.html":{},"modules/ReviewsModule.html":{}}}],["reviewsmodule",{"_index":1158,"title":{"modules/ReviewsModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ReviewsModule.html":{},"modules.html":{},"overview.html":{}}}],["reviewsservice",{"_index":3144,"title":{"injectables/ReviewsService.html":{}},"body":{"controllers/ReviewsController.html":{},"modules/ReviewsModule.html":{},"injectables/ReviewsService.html":{},"overview.html":{}}}],["rewritepassword",{"_index":686,"title":{},"body":{"injectables/AdminService.html":{},"injectables/OwnerService.html":{},"injectables/UsersService.html":{}}}],["rewritepassword(admin",{"_index":715,"title":{},"body":{"injectables/AdminService.html":{}}}],["rewritepassword(owner",{"_index":2861,"title":{},"body":{"injectables/OwnerService.html":{}}}],["rewritepassword(userid",{"_index":3606,"title":{},"body":{"injectables/UsersService.html":{}}}],["right",{"_index":1929,"title":{},"body":{"classes/CreateAdminDto.html":{},"injectables/MailService.html":{}}}],["right:0px!important",{"_index":2495,"title":{},"body":{"injectables/MailService.html":{}}}],["rights",{"_index":779,"title":{},"body":{"injectables/AdminService.html":{},"injectables/MailService.html":{}}}],["rimraf",{"_index":3746,"title":{},"body":{"dependencies.html":{}}}],["role",{"_index":133,"title":{"classes/Role.html":{}},"body":{"classes/AddRoleDto.html":{},"guards/AdminGuard.html":{},"modules/AdminModule.html":{},"injectables/AdminService.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"interfaces/AuthUser.html":{},"modules/CartModule.html":{},"modules/CategoriesColoursModule.html":{},"interfaces/CodeDto.html":{},"modules/CoreModule.html":{},"classes/CreateAccessTokenDto.html":{},"classes/CreateAdminRefreshTokenDto.html":{},"classes/CreateOwnerRefreshTokenDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUserRefreshTokenDto.html":{},"modules/MailModule.html":{},"modules/OrdersModule.html":{},"classes/Owner.html":{},"guards/OwnerAdminGuard.html":{},"modules/OwnerModule.html":{},"injectables/OwnerService.html":{},"interfaces/Payload.html":{},"modules/ProductModule.html":{},"interfaces/ReturnedAdmin.html":{},"interfaces/ReturnedOwner.html":{},"interfaces/ReturnedUser.html":{},"modules/ReviewsModule.html":{},"classes/Role.html":{},"controllers/RolesController.html":{},"modules/RolesModule.html":{},"injectables/RolesService.html":{},"interfaces/Tokens.html":{},"guards/UserGuard.html":{},"classes/UserRoles.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["role'})@column({type",{"_index":3205,"title":{},"body":{"classes/Role.html":{}}}],["role'})@isstring()@minlength(2)@maxlength(30)@matches(/[a",{"_index":2057,"title":{},"body":{"classes/CreateRoleDto.html":{}}}],["role.create",{"_index":2896,"title":{},"body":{"injectables/OwnerService.html":{}}}],["role.dto",{"_index":3614,"title":{},"body":{"injectables/UsersService.html":{}}}],["role.dto.ts",{"_index":120,"title":{},"body":{"classes/AddRoleDto.html":{}}}],["role.dto.ts:11",{"_index":131,"title":{},"body":{"classes/AddRoleDto.html":{}}}],["role.dto.ts:7",{"_index":135,"title":{},"body":{"classes/AddRoleDto.html":{}}}],["role.findone",{"_index":2894,"title":{},"body":{"injectables/OwnerService.html":{}}}],["role.id",{"_index":786,"title":{},"body":{"injectables/AdminService.html":{},"injectables/OwnerService.html":{},"injectables/UsersService.html":{}}}],["role`s",{"_index":2054,"title":{},"body":{"classes/CreateRoleDto.html":{},"classes/Role.html":{}}}],["rolecreationattrbs",{"_index":2277,"title":{"interfaces/RolecreationAttrbs.html":{}},"body":{"interfaces/InitializeUser.html":{},"classes/Role.html":{},"interfaces/RolecreationAttrbs.html":{},"interfaces/UserInterface.html":{},"interfaces/UserRefreshCreationAttrbs.html":{},"interfaces/UsercreationAttrbs.html":{},"interfaces/ValidateUser.html":{}}}],["roledto",{"_index":3225,"title":{},"body":{"controllers/RolesController.html":{}}}],["roleid",{"_index":3512,"title":{},"body":{"classes/UserRoles.html":{}}}],["roleid'})@foreignkey(undefined)@column({type",{"_index":3516,"title":{},"body":{"classes/UserRoles.html":{}}}],["rolerepository",{"_index":3257,"title":{},"body":{"injectables/RolesService.html":{}}}],["roles",{"_index":212,"title":{},"body":{"controllers/AdminController.html":{},"interfaces/AuthUser.html":{},"controllers/CategoriesController.html":{},"interfaces/CodeDto.html":{},"controllers/ColoursController.html":{},"classes/CreateAccessTokenDto.html":{},"classes/CreateAdminRefreshTokenDto.html":{},"classes/CreateOwnerRefreshTokenDto.html":{},"classes/CreateUserRefreshTokenDto.html":{},"classes/Owner.html":{},"interfaces/Payload.html":{},"interfaces/ReturnedAdmin.html":{},"interfaces/ReturnedOwner.html":{},"interfaces/ReturnedUser.html":{},"controllers/ReviewsController.html":{},"classes/Role.html":{},"controllers/RolesController.html":{},"interfaces/Tokens.html":{},"controllers/UsersController.html":{}}}],["roles'})@apiresponse({status",{"_index":3220,"title":{},"body":{"controllers/RolesController.html":{}}}],["roles'})@isarray()@arraynotempty",{"_index":1915,"title":{},"body":{"classes/CreateAccessTokenDto.html":{}}}],["roles('owner",{"_index":246,"title":{},"body":{"controllers/AdminController.html":{},"controllers/CategoriesController.html":{},"controllers/ColoursController.html":{},"controllers/ReviewsController.html":{},"controllers/RolesController.html":{},"controllers/UsersController.html":{}}}],["roles('user",{"_index":3560,"title":{},"body":{"controllers/UsersController.html":{}}}],["roles.controller",{"_index":3250,"title":{},"body":{"modules/RolesModule.html":{}}}],["roles.model",{"_index":3520,"title":{},"body":{"classes/UserRoles.html":{}}}],["roles.service",{"_index":3231,"title":{},"body":{"controllers/RolesController.html":{},"modules/RolesModule.html":{}}}],["roles/create_role",{"_index":3252,"title":{},"body":{"modules/RolesModule.html":{}}}],["roles/get",{"_index":3253,"title":{},"body":{"modules/RolesModule.html":{}}}],["roles/models/roles.model",{"_index":511,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"interfaces/AuthUser.html":{},"modules/CartModule.html":{},"modules/CategoriesColoursModule.html":{},"interfaces/CodeDto.html":{},"modules/CoreModule.html":{},"classes/CreateAccessTokenDto.html":{},"classes/CreateAdminRefreshTokenDto.html":{},"classes/CreateOwnerRefreshTokenDto.html":{},"classes/CreateUserRefreshTokenDto.html":{},"modules/MailModule.html":{},"modules/OrdersModule.html":{},"classes/Owner.html":{},"modules/OwnerModule.html":{},"injectables/OwnerService.html":{},"interfaces/Payload.html":{},"modules/ProductModule.html":{},"interfaces/ReturnedAdmin.html":{},"interfaces/ReturnedOwner.html":{},"interfaces/ReturnedUser.html":{},"modules/ReviewsModule.html":{},"interfaces/Tokens.html":{},"modules/UsersModule.html":{}}}],["roles/models/user.roles.model",{"_index":513,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CartModule.html":{},"modules/CategoriesColoursModule.html":{},"modules/CoreModule.html":{},"modules/MailModule.html":{},"modules/OrdersModule.html":{},"classes/Owner.html":{},"modules/OwnerModule.html":{},"modules/ProductModule.html":{},"modules/ReviewsModule.html":{},"modules/UsersModule.html":{}}}],["roles/roles.module",{"_index":515,"title":{},"body":{"modules/AdminModule.html":{},"modules/CartModule.html":{},"modules/CategoriesColoursModule.html":{},"modules/CoreModule.html":{},"modules/MailModule.html":{},"modules/OrdersModule.html":{},"modules/OwnerModule.html":{},"modules/ProductModule.html":{},"modules/ReviewsModule.html":{},"modules/UsersModule.html":{}}}],["roles/roles.service",{"_index":737,"title":{},"body":{"injectables/AdminService.html":{},"injectables/OwnerService.html":{},"injectables/UsersService.html":{}}}],["roles_key",{"_index":279,"title":{},"body":{"guards/AdminGuard.html":{},"guards/OwnerAdminGuard.html":{},"guards/RolesGuard.html":{},"guards/UserGuard.html":{}}}],["rolescontroller",{"_index":3215,"title":{"controllers/RolesController.html":{}},"body":{"controllers/RolesController.html":{},"modules/RolesModule.html":{}}}],["roleservice",{"_index":690,"title":{},"body":{"injectables/AdminService.html":{},"injectables/OwnerService.html":{},"controllers/RolesController.html":{},"injectables/UsersService.html":{}}}],["rolesguard",{"_index":160,"title":{"guards/RolesGuard.html":{}},"body":{"controllers/AdminController.html":{},"controllers/CategoriesController.html":{},"controllers/ColoursController.html":{},"controllers/ReviewsController.html":{},"controllers/RolesController.html":{},"guards/RolesGuard.html":{},"controllers/UsersController.html":{}}}],["rolesmodule",{"_index":514,"title":{"modules/RolesModule.html":{}},"body":{"modules/AdminModule.html":{},"modules/CartModule.html":{},"modules/CategoriesColoursModule.html":{},"modules/CoreModule.html":{},"modules/MailModule.html":{},"modules/OrdersModule.html":{},"modules/OwnerModule.html":{},"modules/ProductModule.html":{},"modules/ReviewsModule.html":{},"modules/RolesModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["rolesservice",{"_index":691,"title":{"injectables/RolesService.html":{}},"body":{"injectables/AdminService.html":{},"injectables/OwnerService.html":{},"controllers/RolesController.html":{},"modules/RolesModule.html":{},"injectables/RolesService.html":{},"injectables/UsersService.html":{},"overview.html":{}}}],["role})@roles('owner",{"_index":3221,"title":{},"body":{"controllers/RolesController.html":{}}}],["rootpath",{"_index":1238,"title":{},"body":{"modules/AppModule.html":{}}}],["row!important",{"_index":2513,"title":{},"body":{"injectables/MailService.html":{}}}],["rs",{"_index":956,"title":{},"body":{"classes/ApiException.html":{},"controllers/AuthController.html":{},"injectables/CategoriesService.html":{},"classes/Category.html":{},"interfaces/CategoryCreationAtrb.html":{},"classes/Colour.html":{},"interfaces/ColourCreationAtrb.html":{},"injectables/ColoursService.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateColourDto.html":{},"classes/CreateProductDto.html":{},"injectables/MailService.html":{},"classes/Nested.html":{},"classes/Nested-1.html":{},"classes/Product.html":{},"interfaces/ProductCreationAttrs.html":{},"interfaces/ReturnedCategory.html":{},"interfaces/ReturnedColour.html":{},"interfaces/ReturnedProduct.html":{},"interfaces/ReturnedProducts.html":{},"interfaces/ReturnedReview.html":{},"interfaces/ReviewCreationAtrb.html":{},"classes/UpdateCategoryDto.html":{},"classes/UpdateColourDto.html":{},"classes/UpdateProductDto.html":{}}}],["ru",{"_index":954,"title":{},"body":{"classes/ApiException.html":{},"controllers/AuthController.html":{},"injectables/CategoriesService.html":{},"classes/Category.html":{},"interfaces/CategoryCreationAtrb.html":{},"classes/Colour.html":{},"interfaces/ColourCreationAtrb.html":{},"injectables/ColoursService.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateColourDto.html":{},"classes/CreateProductDto.html":{},"injectables/MailService.html":{},"classes/Nested.html":{},"classes/Nested-1.html":{},"classes/Product.html":{},"interfaces/ProductCreationAttrs.html":{},"interfaces/ReturnedCategory.html":{},"interfaces/ReturnedColour.html":{},"interfaces/ReturnedProduct.html":{},"interfaces/ReturnedProducts.html":{},"interfaces/ReturnedReview.html":{},"interfaces/ReviewCreationAtrb.html":{},"classes/UpdateCategoryDto.html":{},"classes/UpdateColourDto.html":{},"classes/UpdateProductDto.html":{}}}],["run",{"_index":2877,"title":{},"body":{"injectables/OwnerService.html":{},"injectables/TasksService.html":{},"index.html":{}}}],["rxjs",{"_index":95,"title":{},"body":{"guards/AddContentGuard.html":{},"guards/AdminGuard.html":{},"controllers/AppController.html":{},"guards/AuthFerfershGuard.html":{},"injectables/CurrencyService.html":{},"guards/EditContentGuard.html":{},"guards/EditWebsiteGuard.html":{},"injectables/GlobalInterceptor.html":{},"guards/JwtAuthGuard.html":{},"guards/OwnerAdminGuard.html":{},"guards/RefreshAuthGuard.html":{},"guards/RolesGuard.html":{},"guards/UserGuard.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":2247,"title":{},"body":{"injectables/GlobalInterceptor.html":{}}}],["s",{"_index":1865,"title":{},"body":{"injectables/CorsMiddleware.html":{},"injectables/MailService.html":{},"interfaces/RequestHeaders.html":{}}}],["s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0",{"_index":1925,"title":{},"body":{"classes/CreateAccessTokenDto.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserRefreshTokenDto.html":{},"classes/LoginDto.html":{},"classes/ResetDto.html":{},"classes/SignupDto.html":{}}}],["s\\.]?[0",{"_index":1956,"title":{},"body":{"classes/CreateAdminDto.html":{},"classes/CreateOwnerDto.html":{},"classes/CreateUserDto.html":{},"classes/SignupDto.html":{}}}],["safari/523.34",{"_index":608,"title":{},"body":{"classes/AdminRefreshToken.html":{},"classes/CreateAdminRefreshTokenDto.html":{},"classes/CreateOwnerDto.html":{},"classes/CreateOwnerRefreshTokenDto.html":{},"classes/Owner.html":{},"classes/OwnerRefreshToken.html":{},"injectables/UserJwtRefreshTokenService.html":{}}}],["salt",{"_index":461,"title":{},"body":{"injectables/AdminJwtRefreshService.html":{},"injectables/AdminService.html":{},"controllers/AppController.html":{},"injectables/OwnerJwtRefreshService.html":{},"injectables/OwnerService.html":{},"injectables/UsersService.html":{}}}],["salt_rounds",{"_index":821,"title":{},"body":{"injectables/AdminService.html":{},"injectables/OwnerService.html":{},"injectables/UsersService.html":{}}}],["samesite",{"_index":1079,"title":{},"body":{"controllers/AppController.html":{}}}],["savetoken",{"_index":329,"title":{},"body":{"injectables/AdminJwtRefreshService.html":{},"injectables/OwnerJwtRefreshService.html":{},"injectables/UserJwtRefreshTokenService.html":{}}}],["savetoken(adminid",{"_index":360,"title":{},"body":{"injectables/AdminJwtRefreshService.html":{}}}],["savetoken(ownerid",{"_index":2756,"title":{},"body":{"injectables/OwnerJwtRefreshService.html":{}}}],["savetoken(userid",{"_index":3461,"title":{},"body":{"injectables/UserJwtRefreshTokenService.html":{}}}],["scalable",{"_index":3780,"title":{},"body":{"index.html":{}}}],["schedulemodule",{"_index":1811,"title":{},"body":{"modules/CoreModule.html":{},"modules/OwnerModule.html":{}}}],["schedulemodule.forroot",{"_index":1827,"title":{},"body":{"modules/CoreModule.html":{},"modules/OwnerModule.html":{}}}],["schedulerregistry",{"_index":2839,"title":{},"body":{"injectables/OwnerService.html":{},"injectables/TasksService.html":{}}}],["schema",{"_index":3774,"title":{},"body":{"miscellaneous/functions.html":{}}}],["scope",{"_index":35,"title":{},"body":{"injectables/ActivateMiddleware.html":{},"guards/AddContentGuard.html":{},"guards/AdminGuard.html":{},"injectables/AdminJwtRefreshService.html":{},"injectables/AdminService.html":{},"injectables/AdminUserMiddleware.html":{},"injectables/AppClusterService.html":{},"injectables/AppListener.html":{},"guards/AuthFerfershGuard.html":{},"injectables/AuthMiddleware.html":{},"injectables/CardService.html":{},"injectables/CategoriesService.html":{},"injectables/ColoursService.html":{},"injectables/CorsMiddleware.html":{},"injectables/CurrencyService.html":{},"guards/EditContentGuard.html":{},"guards/EditWebsiteGuard.html":{},"injectables/FilesService.html":{},"injectables/InitializeEmailMiddleware.html":{},"injectables/InitializeUserMiddleware.html":{},"guards/JwtAuthGuard.html":{},"injectables/LocationMiddleware.html":{},"injectables/MailService.html":{},"interfaces/Msg.html":{},"injectables/OrdersService.html":{},"guards/OwnerAdminGuard.html":{},"injectables/OwnerJwtRefreshService.html":{},"injectables/OwnerService.html":{},"injectables/ProductMiddleware.html":{},"interfaces/RequestHeaders.html":{},"injectables/ReviewsService.html":{},"guards/RolesGuard.html":{},"injectables/RolesService.html":{},"injectables/TasksService.html":{},"injectables/UserAdminMiddleware.html":{},"guards/UserGuard.html":{},"injectables/UserJwtRefreshTokenService.html":{},"injectables/UserMiddleware.html":{},"injectables/UserMiddleware-1.html":{},"injectables/UsersService.html":{},"interfaces/fileCreated.html":{}}}],["scope.default",{"_index":992,"title":{},"body":{"injectables/AppClusterService.html":{},"injectables/AppListener.html":{},"injectables/FilesService.html":{},"interfaces/Msg.html":{},"injectables/TasksService.html":{},"interfaces/fileCreated.html":{}}}],["scope.request",{"_index":49,"title":{},"body":{"injectables/ActivateMiddleware.html":{},"guards/AddContentGuard.html":{},"guards/AdminGuard.html":{},"injectables/AdminUserMiddleware.html":{},"guards/AuthFerfershGuard.html":{},"injectables/AuthMiddleware.html":{},"injectables/CategoriesService.html":{},"injectables/ColoursService.html":{},"injectables/CorsMiddleware.html":{},"guards/EditContentGuard.html":{},"guards/EditWebsiteGuard.html":{},"injectables/InitializeEmailMiddleware.html":{},"injectables/InitializeUserMiddleware.html":{},"guards/JwtAuthGuard.html":{},"injectables/LocationMiddleware.html":{},"injectables/MailService.html":{},"guards/OwnerAdminGuard.html":{},"injectables/ProductMiddleware.html":{},"interfaces/RequestHeaders.html":{},"guards/RolesGuard.html":{},"injectables/UserAdminMiddleware.html":{},"guards/UserGuard.html":{},"injectables/UserMiddleware.html":{},"injectables/UserMiddleware-1.html":{}}}],["scope.transient",{"_index":391,"title":{},"body":{"injectables/AdminJwtRefreshService.html":{},"injectables/AdminService.html":{},"injectables/CardService.html":{},"injectables/CurrencyService.html":{},"injectables/OrdersService.html":{},"injectables/OwnerJwtRefreshService.html":{},"injectables/OwnerService.html":{},"injectables/ReviewsService.html":{},"injectables/RolesService.html":{},"injectables/UserJwtRefreshTokenService.html":{},"injectables/UsersService.html":{}}}],["screen",{"_index":2442,"title":{},"body":{"injectables/MailService.html":{}}}],["script",{"_index":1877,"title":{},"body":{"injectables/CorsMiddleware.html":{},"interfaces/RequestHeaders.html":{}}}],["scrypt",{"_index":384,"title":{},"body":{"injectables/AdminJwtRefreshService.html":{},"controllers/AppController.html":{},"injectables/OwnerJwtRefreshService.html":{}}}],["sdk",{"_index":3732,"title":{},"body":{"dependencies.html":{}}}],["second",{"_index":2876,"title":{},"body":{"injectables/OwnerService.html":{},"injectables/TasksService.html":{}}}],["seconds",{"_index":3322,"title":{},"body":{"injectables/TasksService.html":{}}}],["secret",{"_index":565,"title":{},"body":{"modules/AdminModule.html":{},"modules/AuthModule.html":{},"modules/OwnerModule.html":{},"modules/UsersModule.html":{}}}],["secure",{"_index":1076,"title":{},"body":{"controllers/AppController.html":{},"modules/MailModule.html":{}}}],["security",{"_index":1870,"title":{},"body":{"injectables/CorsMiddleware.html":{},"injectables/InitializeUserMiddleware.html":{},"interfaces/RequestHeaders.html":{}}}],["self",{"_index":1874,"title":{},"body":{"injectables/CorsMiddleware.html":{},"interfaces/RequestHeaders.html":{}}}],["semicolon",{"_index":3115,"title":{},"body":{"classes/RequestValidator.html":{}}}],["sendactivationmailtoadmin",{"_index":2370,"title":{},"body":{"injectables/MailService.html":{}}}],["sendactivationmailtoadmin(tomail",{"_index":2376,"title":{},"body":{"injectables/MailService.html":{}}}],["sendactivationmailtoowner",{"_index":2371,"title":{},"body":{"injectables/MailService.html":{}}}],["sendactivationmailtoowner(tomail",{"_index":2379,"title":{},"body":{"injectables/MailService.html":{}}}],["sendcode",{"_index":2372,"title":{},"body":{"injectables/MailService.html":{}}}],["sendcode(tomail",{"_index":2381,"title":{},"body":{"injectables/MailService.html":{}}}],["sendmessage",{"_index":3381,"title":{},"body":{"injectables/TelegramService.html":{}}}],["sendmessage(message",{"_index":3383,"title":{},"body":{"injectables/TelegramService.html":{}}}],["sent",{"_index":2533,"title":{},"body":{"injectables/MailService.html":{}}}],["sequelize",{"_index":658,"title":{},"body":{"classes/AdminRefreshToken.html":{},"classes/BookmarksProducts.html":{},"classes/Cart.html":{},"classes/CartProduct.html":{},"classes/Category.html":{},"classes/Colour.html":{},"classes/Currencies.html":{},"classes/Order.html":{},"classes/OrderProduct.html":{},"classes/Owner.html":{},"classes/OwnerRefreshToken.html":{},"classes/Product.html":{},"classes/ProductCategories.html":{},"classes/ProductColours.html":{},"classes/ProductReviews.html":{},"classes/Review.html":{},"classes/Role.html":{},"classes/UserRefreshToken.html":{},"classes/UserRoles.html":{},"classes/WatchedProducts.html":{},"dependencies.html":{}}}],["sequelizemodule",{"_index":500,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CartModule.html":{},"modules/CategoriesColoursModule.html":{},"modules/CoreModule.html":{},"modules/MailModule.html":{},"modules/OrdersModule.html":{},"modules/OwnerModule.html":{},"modules/ProductModule.html":{},"modules/ReviewsModule.html":{},"modules/RolesModule.html":{},"modules/UsersModule.html":{}}}],["sequelizemodule.forfeature",{"_index":563,"title":{},"body":{"modules/AdminModule.html":{},"modules/AuthModule.html":{},"modules/CartModule.html":{},"modules/CategoriesColoursModule.html":{},"modules/CoreModule.html":{},"modules/MailModule.html":{},"modules/OrdersModule.html":{},"modules/OwnerModule.html":{},"modules/ProductModule.html":{},"modules/ReviewsModule.html":{},"modules/RolesModule.html":{},"modules/UsersModule.html":{}}}],["sequelizemodule.forfeature([owner",{"_index":2801,"title":{},"body":{"modules/OwnerModule.html":{}}}],["sequelizemodule.forroot",{"_index":1261,"title":{},"body":{"modules/AppModule.html":{}}}],["serializedvalue",{"_index":2937,"title":{},"body":{"classes/ParseFormDataJsonPipe.html":{}}}],["serve",{"_index":3751,"title":{},"body":{"dependencies.html":{}}}],["server",{"_index":398,"title":{},"body":{"injectables/AdminJwtRefreshService.html":{},"classes/ApiException.html":{},"injectables/AppClusterService.html":{},"interfaces/Msg.html":{},"injectables/OwnerJwtRefreshService.html":{},"injectables/UserJwtRefreshTokenService.html":{},"index.html":{}}}],["servestaticmodule.forroot",{"_index":1237,"title":{},"body":{"modules/AppModule.html":{}}}],["services/admin.service",{"_index":203,"title":{},"body":{"controllers/AdminController.html":{},"modules/AdminModule.html":{}}}],["services/categories.service",{"_index":1553,"title":{},"body":{"modules/CategoriesColoursModule.html":{},"controllers/CategoriesController.html":{}}}],["services/cluster.service",{"_index":1809,"title":{},"body":{"modules/CoreModule.html":{}}}],["services/colours.service",{"_index":1557,"title":{},"body":{"modules/CategoriesColoursModule.html":{},"controllers/ColoursController.html":{}}}],["services/currency.service",{"_index":2800,"title":{},"body":{"modules/OwnerModule.html":{}}}],["services/file.service",{"_index":1810,"title":{},"body":{"modules/CoreModule.html":{}}}],["services/jwt",{"_index":504,"title":{},"body":{"modules/AdminModule.html":{},"modules/OwnerModule.html":{},"modules/UsersModule.html":{}}}],["services/owner.service",{"_index":2799,"title":{},"body":{"modules/OwnerModule.html":{}}}],["services/scedule.service",{"_index":1813,"title":{},"body":{"modules/CoreModule.html":{}}}],["services/users.service",{"_index":3546,"title":{},"body":{"controllers/UsersController.html":{},"modules/UsersModule.html":{}}}],["setactivationcode",{"_index":2642,"title":{},"body":{"classes/Owner.html":{}}}],["setactivationcode(activationcode",{"_index":2694,"title":{},"body":{"classes/Owner.html":{}}}],["setadminagent",{"_index":593,"title":{},"body":{"classes/AdminRefreshToken.html":{}}}],["setadminagent(adminagent",{"_index":645,"title":{},"body":{"classes/AdminRefreshToken.html":{}}}],["setadminid",{"_index":2963,"title":{},"body":{"classes/Product.html":{}}}],["setadminid(adminid",{"_index":2996,"title":{},"body":{"classes/Product.html":{}}}],["setauthor",{"_index":2082,"title":{},"body":{"classes/Currencies.html":{}}}],["setauthor(owner",{"_index":2092,"title":{},"body":{"classes/Currencies.html":{}}}],["setcartstatus",{"_index":1487,"title":{},"body":{"classes/Cart.html":{}}}],["setcartstatus(cartstatus",{"_index":1502,"title":{},"body":{"classes/Cart.html":{}}}],["setcategories",{"_index":2964,"title":{},"body":{"classes/Product.html":{}}}],["setcategories(categories",{"_index":2998,"title":{},"body":{"classes/Product.html":{}}}],["setcolours",{"_index":2965,"title":{},"body":{"classes/Product.html":{}}}],["setcolours(colours",{"_index":3000,"title":{},"body":{"classes/Product.html":{}}}],["setconfirmcode",{"_index":687,"title":{},"body":{"injectables/AdminService.html":{},"classes/Owner.html":{},"injectables/OwnerService.html":{},"injectables/UsersService.html":{}}}],["setconfirmcode(codedto",{"_index":717,"title":{},"body":{"injectables/AdminService.html":{},"injectables/OwnerService.html":{},"injectables/UsersService.html":{}}}],["setconfirmcode(confirncode",{"_index":2696,"title":{},"body":{"classes/Owner.html":{}}}],["setcookie",{"_index":1040,"title":{},"body":{"controllers/AppController.html":{}}}],["setcookie(request",{"_index":1054,"title":{},"body":{"controllers/AppController.html":{}}}],["setcurrencies",{"_index":2105,"title":{},"body":{"injectables/CurrencyService.html":{}}}],["setcurrencies(ownerid",{"_index":2116,"title":{},"body":{"injectables/CurrencyService.html":{}}}],["setdescription",{"_index":2966,"title":{},"body":{"classes/Product.html":{}}}],["setdescription(description",{"_index":3002,"title":{},"body":{"classes/Product.html":{}}}],["setexpiredate",{"_index":594,"title":{},"body":{"classes/AdminRefreshToken.html":{},"classes/OwnerRefreshToken.html":{},"classes/UserRefreshToken.html":{}}}],["setexpiredate(expiredate",{"_index":647,"title":{},"body":{"classes/AdminRefreshToken.html":{},"classes/OwnerRefreshToken.html":{},"classes/UserRefreshToken.html":{}}}],["setidentifier",{"_index":595,"title":{},"body":{"classes/AdminRefreshToken.html":{},"classes/OwnerRefreshToken.html":{},"classes/UserRefreshToken.html":{}}}],["setidentifier(identifier",{"_index":649,"title":{},"body":{"classes/AdminRefreshToken.html":{},"classes/OwnerRefreshToken.html":{},"classes/UserRefreshToken.html":{}}}],["setinterval",{"_index":1017,"title":{},"body":{"injectables/AppClusterService.html":{},"interfaces/Msg.html":{}}}],["setinterval(callback",{"_index":3334,"title":{},"body":{"injectables/TasksService.html":{}}}],["setisactivated",{"_index":2643,"title":{},"body":{"classes/Owner.html":{}}}],["setisactivated(isactivated",{"_index":2699,"title":{},"body":{"classes/Owner.html":{}}}],["setname",{"_index":2644,"title":{},"body":{"classes/Owner.html":{}}}],["setname(name",{"_index":2701,"title":{},"body":{"classes/Owner.html":{}}}],["setnewpasssword",{"_index":2645,"title":{},"body":{"classes/Owner.html":{}}}],["setnewpasssword(password",{"_index":2703,"title":{},"body":{"classes/Owner.html":{}}}],["setorderstatus",{"_index":2579,"title":{},"body":{"classes/Order.html":{}}}],["setorderstatus(orderstatus",{"_index":2590,"title":{},"body":{"classes/Order.html":{}}}],["setowneragent",{"_index":2646,"title":{},"body":{"classes/Owner.html":{},"classes/OwnerRefreshToken.html":{}}}],["setowneragent(owneragent",{"_index":2705,"title":{},"body":{"classes/Owner.html":{},"classes/OwnerRefreshToken.html":{}}}],["setownerid",{"_index":2083,"title":{},"body":{"classes/Currencies.html":{},"classes/OwnerRefreshToken.html":{},"classes/Product.html":{}}}],["setownerid(ownerid",{"_index":2094,"title":{},"body":{"classes/Currencies.html":{},"classes/OwnerRefreshToken.html":{},"classes/Product.html":{}}}],["setresettoken",{"_index":2647,"title":{},"body":{"classes/Owner.html":{}}}],["setresettoken(resettoken",{"_index":2707,"title":{},"body":{"classes/Owner.html":{}}}],["setresettokenexpiration",{"_index":2648,"title":{},"body":{"classes/Owner.html":{}}}],["setresettokenexpiration(resettokenexpiration",{"_index":2709,"title":{},"body":{"classes/Owner.html":{}}}],["setsurname",{"_index":2649,"title":{},"body":{"classes/Owner.html":{}}}],["setsurname(surname",{"_index":2711,"title":{},"body":{"classes/Owner.html":{}}}],["settimeout",{"_index":1030,"title":{},"body":{"injectables/AppClusterService.html":{},"interfaces/Msg.html":{}}}],["settimeout(callback",{"_index":3351,"title":{},"body":{"injectables/TasksService.html":{}}}],["settimeouts",{"_index":972,"title":{},"body":{"injectables/AppClusterService.html":{}}}],["settimeouts(worker",{"_index":978,"title":{},"body":{"injectables/AppClusterService.html":{},"interfaces/Msg.html":{}}}],["setting",{"_index":2865,"title":{},"body":{"injectables/OwnerService.html":{},"injectables/TasksService.html":{}}}],["settings",{"_index":1226,"title":{},"body":{"modules/AppModule.html":{}}}],["settitle",{"_index":2967,"title":{},"body":{"classes/Product.html":{}}}],["settitle(title",{"_index":3005,"title":{},"body":{"classes/Product.html":{}}}],["setup",{"_index":2836,"title":{},"body":{"injectables/OwnerService.html":{},"injectables/TasksService.html":{}}}],["setuser",{"_index":1488,"title":{},"body":{"classes/Cart.html":{}}}],["setuser(user",{"_index":1504,"title":{},"body":{"classes/Cart.html":{}}}],["setuserid",{"_index":3491,"title":{},"body":{"classes/UserRefreshToken.html":{}}}],["setuserid(userid",{"_index":3507,"title":{},"body":{"classes/UserRefreshToken.html":{}}}],["sheduleservice",{"_index":333,"title":{},"body":{"injectables/AdminJwtRefreshService.html":{},"injectables/OwnerJwtRefreshService.html":{},"injectables/UserJwtRefreshTokenService.html":{}}}],["shutdown",{"_index":1012,"title":{},"body":{"injectables/AppClusterService.html":{},"interfaces/Msg.html":{}}}],["side",{"_index":3781,"title":{},"body":{"index.html":{}}}],["signal",{"_index":1002,"title":{},"body":{"injectables/AppClusterService.html":{},"interfaces/Msg.html":{}}}],["signed",{"_index":1081,"title":{},"body":{"controllers/AppController.html":{}}}],["signing",{"_index":1325,"title":{},"body":{"controllers/AuthController.html":{}}}],["signoptions",{"_index":568,"title":{},"body":{"modules/AdminModule.html":{},"modules/AuthModule.html":{},"modules/OwnerModule.html":{},"modules/UsersModule.html":{}}}],["signup",{"_index":1285,"title":{},"body":{"controllers/AuthController.html":{}}}],["signup(userdto",{"_index":1323,"title":{},"body":{"controllers/AuthController.html":{}}}],["signupdto",{"_index":1324,"title":{"classes/SignupDto.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"classes/SignupDto.html":{}}}],["simple",{"_index":3639,"title":{},"body":{"injectables/UsersService.html":{}}}],["size",{"_index":2400,"title":{},"body":{"injectables/MailService.html":{}}}],["size:12px!important",{"_index":2463,"title":{},"body":{"injectables/MailService.html":{}}}],["size:16px!important",{"_index":2461,"title":{},"body":{"injectables/MailService.html":{}}}],["size:20px!important",{"_index":2456,"title":{},"body":{"injectables/MailService.html":{}}}],["size:26px!important",{"_index":2455,"title":{},"body":{"injectables/MailService.html":{}}}],["size:30px!important",{"_index":2453,"title":{},"body":{"injectables/MailService.html":{}}}],["size:inherit!important",{"_index":2420,"title":{},"body":{"injectables/MailService.html":{}}}],["sizechart",{"_index":2983,"title":{},"body":{"classes/Product.html":{}}}],["sizechartimage",{"_index":1684,"title":{},"body":{"interfaces/CategoryCreationAtrb.html":{},"interfaces/ColourCreationAtrb.html":{},"classes/Product.html":{},"interfaces/ProductCreationAttrs.html":{},"interfaces/ReturnedCategory.html":{},"interfaces/ReturnedColour.html":{},"interfaces/ReturnedProduct.html":{},"interfaces/ReturnedProducts.html":{},"interfaces/ReturnedReview.html":{},"interfaces/ReviewCreationAtrb.html":{}}}],["sizes",{"_index":1685,"title":{},"body":{"interfaces/CategoryCreationAtrb.html":{},"interfaces/ColourCreationAtrb.html":{},"classes/CreateProductDto.html":{},"classes/Nested.html":{},"classes/Nested-1.html":{},"classes/Product.html":{},"interfaces/ProductCreationAttrs.html":{},"classes/QueryFilterDto.html":{},"interfaces/ReturnedCategory.html":{},"interfaces/ReturnedColour.html":{},"interfaces/ReturnedProduct.html":{},"interfaces/ReturnedProducts.html":{},"interfaces/ReturnedReview.html":{},"interfaces/ReviewCreationAtrb.html":{},"classes/UpdateProductDto.html":{}}}],["smtp.gmail.com",{"_index":2356,"title":{},"body":{"modules/MailModule.html":{}}}],["social",{"_index":2519,"title":{},"body":{"injectables/MailService.html":{}}}],["socket.io",{"_index":3700,"title":{},"body":{"dependencies.html":{}}}],["source",{"_index":4,"title":{},"body":{"injectables/ActivateMiddleware.html":{},"guards/AddContentGuard.html":{},"classes/AddRoleDto.html":{},"controllers/AdminController.html":{},"guards/AdminGuard.html":{},"interfaces/AdminInterface.html":{},"injectables/AdminJwtRefreshService.html":{},"modules/AdminModule.html":{},"classes/AdminRefreshToken.html":{},"interfaces/AdminRefreshTokenCreationAttrbs.html":{},"injectables/AdminService.html":{},"injectables/AdminUserMiddleware.html":{},"interfaces/AdmincreationAttrbs.html":{},"classes/AllExceptionsFilter.html":{},"classes/ApiError.html":{},"classes/ApiErrorExceptionFilter.html":{},"classes/ApiException.html":{},"classes/ApiExceptionFilter.html":{},"injectables/AppClusterService.html":{},"controllers/AppController.html":{},"injectables/AppListener.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"guards/AuthFerfershGuard.html":{},"injectables/AuthMiddleware.html":{},"modules/AuthModule.html":{},"interfaces/AuthUser.html":{},"classes/BadRequestError.html":{},"classes/BanUserDto.html":{},"classes/BookmarksProducts.html":{},"controllers/CardController.html":{},"injectables/CardService.html":{},"classes/Cart.html":{},"modules/CartModule.html":{},"classes/CartProduct.html":{},"modules/CategoriesColoursModule.html":{},"controllers/CategoriesController.html":{},"injectables/CategoriesService.html":{},"classes/Category.html":{},"interfaces/CategoryCreationAtrb.html":{},"classes/ChangeDto.html":{},"interfaces/CodeDto.html":{},"classes/Colour.html":{},"interfaces/ColourCreationAtrb.html":{},"controllers/ColoursController.html":{},"injectables/ColoursService.html":{},"modules/CoreModule.html":{},"injectables/CorsMiddleware.html":{},"classes/CreateAccessTokenDto.html":{},"classes/CreateAdminDto.html":{},"classes/CreateAdminRefreshTokenDto.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateColourDto.html":{},"classes/CreateOwnerDto.html":{},"classes/CreateOwnerRefreshTokenDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateReviewDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserRefreshTokenDto.html":{},"classes/Currencies.html":{},"injectables/CurrencyService.html":{},"guards/EditContentGuard.html":{},"guards/EditWebsiteGuard.html":{},"injectables/FilesService.html":{},"classes/GarbageCollectingProcessor.html":{},"injectables/GlobalInterceptor.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/ITelegramModuleAsyncOptions.html":{},"interfaces/ITelegramOptions.html":{},"injectables/InitializeEmailMiddleware.html":{},"interfaces/InitializeUser.html":{},"injectables/InitializeUserMiddleware.html":{},"guards/JwtAuthGuard.html":{},"classes/JwtRefreshTokenDeletedEvent.html":{},"injectables/LocationMiddleware.html":{},"classes/LoginDto.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"classes/MatchConstraint.html":{},"interfaces/Msg.html":{},"classes/Nested.html":{},"classes/Nested-1.html":{},"classes/NotFoundError.html":{},"classes/Order.html":{},"classes/OrderProduct.html":{},"controllers/OrdersController.html":{},"modules/OrdersModule.html":{},"injectables/OrdersService.html":{},"classes/Owner.html":{},"guards/OwnerAdminGuard.html":{},"interfaces/OwnerCreationAttrbs.html":{},"injectables/OwnerJwtRefreshService.html":{},"modules/OwnerModule.html":{},"classes/OwnerRefreshToken.html":{},"interfaces/OwnerRefreshTokenCreationAttrbs.html":{},"injectables/OwnerService.html":{},"classes/ParseFormDataJsonPipe.html":{},"injectables/ParseJsonPipe.html":{},"interfaces/Payload.html":{},"classes/Product.html":{},"classes/ProductCategories.html":{},"classes/ProductColours.html":{},"interfaces/ProductCreationAttrs.html":{},"injectables/ProductMiddleware.html":{},"modules/ProductModule.html":{},"classes/ProductReviews.html":{},"classes/QueryFilterDto.html":{},"guards/RefreshAuthGuard.html":{},"interfaces/RequestHeaders.html":{},"classes/RequestValidator.html":{},"classes/ResetDto.html":{},"interfaces/ReturnedAdmin.html":{},"interfaces/ReturnedCategory.html":{},"interfaces/ReturnedColour.html":{},"interfaces/ReturnedOwner.html":{},"interfaces/ReturnedProduct.html":{},"interfaces/ReturnedProducts.html":{},"interfaces/ReturnedReview.html":{},"interfaces/ReturnedUser.html":{},"classes/Review.html":{},"interfaces/ReviewCreationAtrb.html":{},"controllers/ReviewsController.html":{},"modules/ReviewsModule.html":{},"injectables/ReviewsService.html":{},"classes/Role.html":{},"interfaces/RolecreationAttrbs.html":{},"controllers/RolesController.html":{},"guards/RolesGuard.html":{},"modules/RolesModule.html":{},"injectables/RolesService.html":{},"classes/SignupDto.html":{},"injectables/TasksService.html":{},"modules/TelegramModule.html":{},"injectables/TelegramService.html":{},"injectables/ThrottlerBehindProxyGuard.html":{},"interfaces/Tokens.html":{},"classes/UpdateCategoryDto.html":{},"classes/UpdateColourDto.html":{},"classes/UpdateProductDto.html":{},"classes/UpdateUserDto.html":{},"injectables/UserAdminMiddleware.html":{},"guards/UserGuard.html":{},"interfaces/UserInterface.html":{},"injectables/UserJwtRefreshTokenService.html":{},"injectables/UserMiddleware.html":{},"injectables/UserMiddleware-1.html":{},"interfaces/UserRefreshCreationAttrbs.html":{},"classes/UserRefreshToken.html":{},"classes/UserRoles.html":{},"interfaces/UsercreationAttrbs.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"injectables/ValidateDto.html":{},"interfaces/ValidateUser.html":{},"classes/ValidationException.html":{},"classes/WatchedProducts.html":{},"interfaces/fileCreated.html":{},"index.html":{}}}],["span,.externalclass",{"_index":2407,"title":{},"body":{"injectables/MailService.html":{}}}],["sponsors",{"_index":3807,"title":{},"body":{"index.html":{}}}],["src",{"_index":1873,"title":{},"body":{"injectables/CorsMiddleware.html":{},"interfaces/RequestHeaders.html":{}}}],["src/.../cluster.service.ts",{"_index":3841,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../comander.ts",{"_index":3761,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../formdata.pipe.ts",{"_index":3842,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../main.ts",{"_index":3766,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../match.decorator.ts",{"_index":3762,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../nested.validation.decorator.ts",{"_index":3768,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../repl.ts",{"_index":3764,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/admin/admin.controller.ts",{"_index":146,"title":{},"body":{"controllers/AdminController.html":{}}}],["src/admin/admin.controller.ts:55",{"_index":163,"title":{},"body":{"controllers/AdminController.html":{}}}],["src/admin/admin.controller.ts:69",{"_index":182,"title":{},"body":{"controllers/AdminController.html":{}}}],["src/admin/admin.controller.ts:82",{"_index":171,"title":{},"body":{"controllers/AdminController.html":{}}}],["src/admin/admin.controller.ts:97",{"_index":176,"title":{},"body":{"controllers/AdminController.html":{}}}],["src/admin/admin.module.ts",{"_index":487,"title":{},"body":{"modules/AdminModule.html":{}}}],["src/admin/admin.module.ts:105",{"_index":493,"title":{},"body":{"modules/AdminModule.html":{}}}],["src/admin/dto/create",{"_index":1926,"title":{},"body":{"classes/CreateAdminDto.html":{},"classes/CreateAdminRefreshTokenDto.html":{}}}],["src/admin/models/admin.refresh.token.model.ts",{"_index":585,"title":{},"body":{"classes/AdminRefreshToken.html":{}}}],["src/admin/models/admin.refresh.token.model.ts:104",{"_index":637,"title":{},"body":{"classes/AdminRefreshToken.html":{}}}],["src/admin/models/admin.refresh.token.model.ts:107",{"_index":597,"title":{},"body":{"classes/AdminRefreshToken.html":{}}}],["src/admin/models/admin.refresh.token.model.ts:109",{"_index":643,"title":{},"body":{"classes/AdminRefreshToken.html":{}}}],["src/admin/models/admin.refresh.token.model.ts:113",{"_index":648,"title":{},"body":{"classes/AdminRefreshToken.html":{}}}],["src/admin/models/admin.refresh.token.model.ts:118",{"_index":642,"title":{},"body":{"classes/AdminRefreshToken.html":{}}}],["src/admin/models/admin.refresh.token.model.ts:122",{"_index":646,"title":{},"body":{"classes/AdminRefreshToken.html":{}}}],["src/admin/models/admin.refresh.token.model.ts:127",{"_index":641,"title":{},"body":{"classes/AdminRefreshToken.html":{}}}],["src/admin/models/admin.refresh.token.model.ts:131",{"_index":644,"title":{},"body":{"classes/AdminRefreshToken.html":{}}}],["src/admin/models/admin.refresh.token.model.ts:135",{"_index":650,"title":{},"body":{"classes/AdminRefreshToken.html":{}}}],["src/admin/models/admin.refresh.token.model.ts:28",{"_index":630,"title":{},"body":{"classes/AdminRefreshToken.html":{}}}],["src/admin/models/admin.refresh.token.model.ts:38",{"_index":623,"title":{},"body":{"classes/AdminRefreshToken.html":{}}}],["src/admin/models/admin.refresh.token.model.ts:47",{"_index":640,"title":{},"body":{"classes/AdminRefreshToken.html":{}}}],["src/admin/models/admin.refresh.token.model.ts:60",{"_index":620,"title":{},"body":{"classes/AdminRefreshToken.html":{}}}],["src/admin/models/admin.refresh.token.model.ts:70",{"_index":616,"title":{},"body":{"classes/AdminRefreshToken.html":{}}}],["src/admin/models/admin.refresh.token.model.ts:84",{"_index":614,"title":{},"body":{"classes/AdminRefreshToken.html":{}}}],["src/admin/models/admin.refresh.token.model.ts:91",{"_index":626,"title":{},"body":{"classes/AdminRefreshToken.html":{}}}],["src/admin/services/admin.service.ts",{"_index":677,"title":{},"body":{"injectables/AdminService.html":{}}}],["src/admin/services/admin.service.ts:151",{"_index":721,"title":{},"body":{"injectables/AdminService.html":{}}}],["src/admin/services/admin.service.ts:185",{"_index":703,"title":{},"body":{"injectables/AdminService.html":{}}}],["src/admin/services/admin.service.ts:199",{"_index":711,"title":{},"body":{"injectables/AdminService.html":{}}}],["src/admin/services/admin.service.ts:227",{"_index":707,"title":{},"body":{"injectables/AdminService.html":{}}}],["src/admin/services/admin.service.ts:241",{"_index":705,"title":{},"body":{"injectables/AdminService.html":{}}}],["src/admin/services/admin.service.ts:249",{"_index":696,"title":{},"body":{"injectables/AdminService.html":{}}}],["src/admin/services/admin.service.ts:270",{"_index":709,"title":{},"body":{"injectables/AdminService.html":{}}}],["src/admin/services/admin.service.ts:278",{"_index":724,"title":{},"body":{"injectables/AdminService.html":{}}}],["src/admin/services/admin.service.ts:28",{"_index":692,"title":{},"body":{"injectables/AdminService.html":{}}}],["src/admin/services/admin.service.ts:293",{"_index":719,"title":{},"body":{"injectables/AdminService.html":{}}}],["src/admin/services/admin.service.ts:301",{"_index":714,"title":{},"body":{"injectables/AdminService.html":{}}}],["src/admin/services/admin.service.ts:329",{"_index":694,"title":{},"body":{"injectables/AdminService.html":{}}}],["src/admin/services/admin.service.ts:335",{"_index":716,"title":{},"body":{"injectables/AdminService.html":{}}}],["src/admin/services/admin.service.ts:35",{"_index":701,"title":{},"body":{"injectables/AdminService.html":{}}}],["src/admin/services/admin.service.ts:79",{"_index":698,"title":{},"body":{"injectables/AdminService.html":{}}}],["src/admin/services/jwt",{"_index":317,"title":{},"body":{"injectables/AdminJwtRefreshService.html":{}}}],["src/app.controller.ts",{"_index":1036,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.controller.ts:101",{"_index":1050,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.controller.ts:111",{"_index":1059,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.controller.ts:118",{"_index":1044,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.controller.ts:140",{"_index":1042,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.controller.ts:33",{"_index":1057,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.controller.ts:71",{"_index":1053,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.module.ts",{"_index":1160,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.module.ts:190",{"_index":1161,"title":{},"body":{"modules/AppModule.html":{}}}],["src/auth/auth.controller.ts",{"_index":1280,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:101",{"_index":1318,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:119",{"_index":1314,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:135",{"_index":1304,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:152",{"_index":1322,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:169",{"_index":1299,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:194",{"_index":1291,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:53",{"_index":1329,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:77",{"_index":1309,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.module.ts",{"_index":1408,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/auth/auth.module.ts:104",{"_index":1409,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/auth/dto/change.password.dto.ts",{"_index":1696,"title":{},"body":{"classes/ChangeDto.html":{}}}],["src/auth/dto/change.password.dto.ts:18",{"_index":1709,"title":{},"body":{"classes/ChangeDto.html":{}}}],["src/auth/dto/change.password.dto.ts:32",{"_index":1707,"title":{},"body":{"classes/ChangeDto.html":{}}}],["src/auth/dto/create.access.token.dto.ts",{"_index":1903,"title":{},"body":{"classes/CreateAccessTokenDto.html":{}}}],["src/auth/dto/create.access.token.dto.ts:18",{"_index":1920,"title":{},"body":{"classes/CreateAccessTokenDto.html":{}}}],["src/auth/dto/create.access.token.dto.ts:25",{"_index":1914,"title":{},"body":{"classes/CreateAccessTokenDto.html":{}}}],["src/auth/dto/create.access.token.dto.ts:32",{"_index":1919,"title":{},"body":{"classes/CreateAccessTokenDto.html":{}}}],["src/auth/dto/create.access.token.dto.ts:43",{"_index":1912,"title":{},"body":{"classes/CreateAccessTokenDto.html":{}}}],["src/auth/dto/create.access.token.dto.ts:48",{"_index":1916,"title":{},"body":{"classes/CreateAccessTokenDto.html":{}}}],["src/auth/dto/login.dto.ts",{"_index":2343,"title":{},"body":{"classes/LoginDto.html":{}}}],["src/auth/dto/login.dto.ts:15",{"_index":2344,"title":{},"body":{"classes/LoginDto.html":{}}}],["src/auth/dto/login.dto.ts:28",{"_index":2345,"title":{},"body":{"classes/LoginDto.html":{}}}],["src/auth/dto/reset.password.dto.ts",{"_index":3116,"title":{},"body":{"classes/ResetDto.html":{}}}],["src/auth/dto/reset.password.dto.ts:16",{"_index":3121,"title":{},"body":{"classes/ResetDto.html":{}}}],["src/auth/dto/reset.password.dto.ts:21",{"_index":3119,"title":{},"body":{"classes/ResetDto.html":{}}}],["src/auth/dto/reset.password.dto.ts:34",{"_index":3122,"title":{},"body":{"classes/ResetDto.html":{}}}],["src/auth/dto/reset.password.dto.ts:48",{"_index":3120,"title":{},"body":{"classes/ResetDto.html":{}}}],["src/auth/dto/signup.dto.ts",{"_index":3264,"title":{},"body":{"classes/SignupDto.html":{}}}],["src/auth/dto/signup.dto.ts:28",{"_index":3268,"title":{},"body":{"classes/SignupDto.html":{}}}],["src/auth/dto/signup.dto.ts:37",{"_index":3271,"title":{},"body":{"classes/SignupDto.html":{}}}],["src/auth/dto/signup.dto.ts:44",{"_index":3270,"title":{},"body":{"classes/SignupDto.html":{}}}],["src/auth/dto/signup.dto.ts:55",{"_index":3266,"title":{},"body":{"classes/SignupDto.html":{}}}],["src/auth/dto/signup.dto.ts:68",{"_index":3269,"title":{},"body":{"classes/SignupDto.html":{}}}],["src/auth/dto/signup.dto.ts:82",{"_index":3265,"title":{},"body":{"classes/SignupDto.html":{}}}],["src/cart/cart.controller.ts",{"_index":1473,"title":{},"body":{"controllers/CardController.html":{}}}],["src/cart/cart.module.ts",{"_index":1518,"title":{},"body":{"modules/CartModule.html":{}}}],["src/cart/cart.service.ts",{"_index":1477,"title":{},"body":{"injectables/CardService.html":{}}}],["src/cart/models/cart.model.ts",{"_index":1478,"title":{},"body":{"classes/Cart.html":{}}}],["src/cart/models/cart.model.ts:24",{"_index":1492,"title":{},"body":{"classes/Cart.html":{}}}],["src/cart/models/cart.model.ts:31",{"_index":1491,"title":{},"body":{"classes/Cart.html":{}}}],["src/cart/models/cart.model.ts:38",{"_index":1495,"title":{},"body":{"classes/Cart.html":{}}}],["src/cart/models/cart.model.ts:45",{"_index":1497,"title":{},"body":{"classes/Cart.html":{}}}],["src/cart/models/cart.model.ts:48",{"_index":1496,"title":{},"body":{"classes/Cart.html":{}}}],["src/cart/models/cart.model.ts:51",{"_index":1494,"title":{},"body":{"classes/Cart.html":{}}}],["src/cart/models/cart.model.ts:54",{"_index":1490,"title":{},"body":{"classes/Cart.html":{}}}],["src/cart/models/cart.model.ts:56",{"_index":1499,"title":{},"body":{"classes/Cart.html":{}}}],["src/cart/models/cart.model.ts:60",{"_index":1503,"title":{},"body":{"classes/Cart.html":{}}}],["src/cart/models/cart.model.ts:65",{"_index":1500,"title":{},"body":{"classes/Cart.html":{}}}],["src/cart/models/cart.model.ts:69",{"_index":1498,"title":{},"body":{"classes/Cart.html":{}}}],["src/cart/models/cart.model.ts:73",{"_index":1501,"title":{},"body":{"classes/Cart.html":{}}}],["src/cart/models/cart.model.ts:77",{"_index":1505,"title":{},"body":{"classes/Cart.html":{}}}],["src/cart/models/cart.product.model.ts",{"_index":1524,"title":{},"body":{"classes/CartProduct.html":{}}}],["src/cart/models/cart.product.model.ts:22",{"_index":1532,"title":{},"body":{"classes/CartProduct.html":{}}}],["src/cart/models/cart.product.model.ts:32",{"_index":1534,"title":{},"body":{"classes/CartProduct.html":{}}}],["src/cart/models/cart.product.model.ts:42",{"_index":1531,"title":{},"body":{"classes/CartProduct.html":{}}}],["src/cart/models/cart.product.model.ts:51",{"_index":1536,"title":{},"body":{"classes/CartProduct.html":{}}}],["src/cart/models/cart.product.model.ts:54",{"_index":1529,"title":{},"body":{"classes/CartProduct.html":{}}}],["src/cart/models/cart.product.model.ts:57",{"_index":1533,"title":{},"body":{"classes/CartProduct.html":{}}}],["src/cart/models/cart.product.model.ts:59",{"_index":1538,"title":{},"body":{"classes/CartProduct.html":{}}}],["src/cart/models/cart.product.model.ts:63",{"_index":1537,"title":{},"body":{"classes/CartProduct.html":{}}}],["src/categories&colours/categories&colours.module",{"_index":1523,"title":{},"body":{"modules/CartModule.html":{},"modules/OrdersModule.html":{},"modules/ReviewsModule.html":{}}}],["src/categories&colours/categories&colours.module.ts",{"_index":1549,"title":{},"body":{"modules/CategoriesColoursModule.html":{}}}],["src/categories&colours/categories&colours.module.ts:69",{"_index":1552,"title":{},"body":{"modules/CategoriesColoursModule.html":{}}}],["src/categories&colours/controllers/categories.controller.ts",{"_index":1566,"title":{},"body":{"controllers/CategoriesController.html":{}}}],["src/categories&colours/controllers/categories.controller.ts:44",{"_index":1588,"title":{},"body":{"controllers/CategoriesController.html":{}}}],["src/categories&colours/controllers/categories.controller.ts:61",{"_index":1579,"title":{},"body":{"controllers/CategoriesController.html":{}}}],["src/categories&colours/controllers/categories.controller.ts:80",{"_index":1591,"title":{},"body":{"controllers/CategoriesController.html":{}}}],["src/categories&colours/controllers/categories.controller.ts:98",{"_index":1584,"title":{},"body":{"controllers/CategoriesController.html":{}}}],["src/categories&colours/controllers/colours.controller.ts",{"_index":1725,"title":{},"body":{"controllers/ColoursController.html":{}}}],["src/categories&colours/controllers/colours.controller.ts:44",{"_index":1742,"title":{},"body":{"controllers/ColoursController.html":{}}}],["src/categories&colours/controllers/colours.controller.ts:61",{"_index":1735,"title":{},"body":{"controllers/ColoursController.html":{}}}],["src/categories&colours/controllers/colours.controller.ts:78",{"_index":1745,"title":{},"body":{"controllers/ColoursController.html":{}}}],["src/categories&colours/controllers/colours.controller.ts:96",{"_index":1739,"title":{},"body":{"controllers/ColoursController.html":{}}}],["src/categories&colours/dto/create.category.dto.ts",{"_index":1975,"title":{},"body":{"classes/CreateCategoryDto.html":{}}}],["src/categories&colours/dto/create.category.dto.ts:14",{"_index":1982,"title":{},"body":{"classes/CreateCategoryDto.html":{}}}],["src/categories&colours/dto/create.category.dto.ts:20",{"_index":1981,"title":{},"body":{"classes/CreateCategoryDto.html":{}}}],["src/categories&colours/dto/create.category.dto.ts:26",{"_index":1980,"title":{},"body":{"classes/CreateCategoryDto.html":{}}}],["src/categories&colours/dto/create.category.dto.ts:8",{"_index":1983,"title":{},"body":{"classes/CreateCategoryDto.html":{}}}],["src/categories&colours/dto/create.colour.dto.ts",{"_index":1988,"title":{},"body":{"classes/CreateColourDto.html":{}}}],["src/categories&colours/dto/create.colour.dto.ts:14",{"_index":1992,"title":{},"body":{"classes/CreateColourDto.html":{}}}],["src/categories&colours/dto/create.colour.dto.ts:20",{"_index":1991,"title":{},"body":{"classes/CreateColourDto.html":{}}}],["src/categories&colours/dto/create.colour.dto.ts:26",{"_index":1989,"title":{},"body":{"classes/CreateColourDto.html":{}}}],["src/categories&colours/dto/create.colour.dto.ts:32",{"_index":1990,"title":{},"body":{"classes/CreateColourDto.html":{}}}],["src/categories&colours/dto/create.colour.dto.ts:8",{"_index":1993,"title":{},"body":{"classes/CreateColourDto.html":{}}}],["src/categories&colours/dto/update.category.dto.ts",{"_index":3401,"title":{},"body":{"classes/UpdateCategoryDto.html":{}}}],["src/categories&colours/dto/update.category.dto.ts:14",{"_index":3404,"title":{},"body":{"classes/UpdateCategoryDto.html":{}}}],["src/categories&colours/dto/update.category.dto.ts:20",{"_index":3403,"title":{},"body":{"classes/UpdateCategoryDto.html":{}}}],["src/categories&colours/dto/update.category.dto.ts:26",{"_index":3402,"title":{},"body":{"classes/UpdateCategoryDto.html":{}}}],["src/categories&colours/dto/update.category.dto.ts:8",{"_index":3405,"title":{},"body":{"classes/UpdateCategoryDto.html":{}}}],["src/categories&colours/dto/update.colour.dto.ts",{"_index":3406,"title":{},"body":{"classes/UpdateColourDto.html":{}}}],["src/categories&colours/dto/update.colour.dto.ts:14",{"_index":3410,"title":{},"body":{"classes/UpdateColourDto.html":{}}}],["src/categories&colours/dto/update.colour.dto.ts:20",{"_index":3409,"title":{},"body":{"classes/UpdateColourDto.html":{}}}],["src/categories&colours/dto/update.colour.dto.ts:26",{"_index":3407,"title":{},"body":{"classes/UpdateColourDto.html":{}}}],["src/categories&colours/dto/update.colour.dto.ts:32",{"_index":3408,"title":{},"body":{"classes/UpdateColourDto.html":{}}}],["src/categories&colours/dto/update.colour.dto.ts:8",{"_index":3411,"title":{},"body":{"classes/UpdateColourDto.html":{}}}],["src/categories&colours/models/category.model.ts",{"_index":1668,"title":{},"body":{"classes/Category.html":{}}}],["src/categories&colours/models/category.model.ts:21",{"_index":1670,"title":{},"body":{"classes/Category.html":{}}}],["src/categories&colours/models/category.model.ts:29",{"_index":1674,"title":{},"body":{"classes/Category.html":{}}}],["src/categories&colours/models/category.model.ts:37",{"_index":1673,"title":{},"body":{"classes/Category.html":{}}}],["src/categories&colours/models/category.model.ts:45",{"_index":1669,"title":{},"body":{"classes/Category.html":{}}}],["src/categories&colours/models/category.model.ts:53",{"_index":1672,"title":{},"body":{"classes/Category.html":{}}}],["src/categories&colours/models/category.model.ts:56",{"_index":1671,"title":{},"body":{"classes/Category.html":{}}}],["src/categories&colours/models/category.model.ts:58",{"_index":1675,"title":{},"body":{"classes/Category.html":{}}}],["src/categories&colours/models/colours.model",{"_index":3007,"title":{},"body":{"classes/Product.html":{},"modules/ProductModule.html":{}}}],["src/categories&colours/models/colours.model.ts",{"_index":1715,"title":{},"body":{"classes/Colour.html":{}}}],["src/categories&colours/models/colours.model.ts:21",{"_index":1718,"title":{},"body":{"classes/Colour.html":{}}}],["src/categories&colours/models/colours.model.ts:29",{"_index":1722,"title":{},"body":{"classes/Colour.html":{}}}],["src/categories&colours/models/colours.model.ts:37",{"_index":1721,"title":{},"body":{"classes/Colour.html":{}}}],["src/categories&colours/models/colours.model.ts:45",{"_index":1716,"title":{},"body":{"classes/Colour.html":{}}}],["src/categories&colours/models/colours.model.ts:53",{"_index":1720,"title":{},"body":{"classes/Colour.html":{}}}],["src/categories&colours/models/colours.model.ts:61",{"_index":1717,"title":{},"body":{"classes/Colour.html":{}}}],["src/categories&colours/models/colours.model.ts:64",{"_index":1719,"title":{},"body":{"classes/Colour.html":{}}}],["src/categories&colours/models/colours.model.ts:66",{"_index":1723,"title":{},"body":{"classes/Colour.html":{}}}],["src/categories&colours/models/product.categories.model.ts",{"_index":3026,"title":{},"body":{"classes/ProductCategories.html":{}}}],["src/categories&colours/models/product.categories.model.ts:21",{"_index":3028,"title":{},"body":{"classes/ProductCategories.html":{}}}],["src/categories&colours/models/product.categories.model.ts:28",{"_index":3027,"title":{},"body":{"classes/ProductCategories.html":{}}}],["src/categories&colours/models/product.categories.model.ts:35",{"_index":3029,"title":{},"body":{"classes/ProductCategories.html":{}}}],["src/categories&colours/models/product.colour.model",{"_index":3008,"title":{},"body":{"classes/Product.html":{},"modules/ProductModule.html":{}}}],["src/categories&colours/models/product.colour.model.ts",{"_index":3032,"title":{},"body":{"classes/ProductColours.html":{}}}],["src/categories&colours/models/product.colour.model.ts:21",{"_index":3034,"title":{},"body":{"classes/ProductColours.html":{}}}],["src/categories&colours/models/product.colour.model.ts:28",{"_index":3033,"title":{},"body":{"classes/ProductColours.html":{}}}],["src/categories&colours/models/product.colour.model.ts:35",{"_index":3035,"title":{},"body":{"classes/ProductColours.html":{}}}],["src/categories&colours/services/categories.service.ts",{"_index":1613,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["src/categories&colours/services/categories.service.ts:107",{"_index":1621,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["src/categories&colours/services/categories.service.ts:128",{"_index":1632,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["src/categories&colours/services/categories.service.ts:15",{"_index":1618,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["src/categories&colours/services/categories.service.ts:20",{"_index":1629,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["src/categories&colours/services/categories.service.ts:34",{"_index":1624,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["src/categories&colours/services/categories.service.ts:50",{"_index":1627,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["src/categories&colours/services/categories.service.ts:62",{"_index":1622,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["src/categories&colours/services/categories.service.ts:77",{"_index":1620,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["src/categories&colours/services/colours.service",{"_index":3058,"title":{},"body":{"modules/ProductModule.html":{}}}],["src/categories&colours/services/colours.service.ts",{"_index":1758,"title":{},"body":{"injectables/ColoursService.html":{}}}],["src/categories&colours/services/colours.service.ts:108",{"_index":1766,"title":{},"body":{"injectables/ColoursService.html":{}}}],["src/categories&colours/services/colours.service.ts:130",{"_index":1776,"title":{},"body":{"injectables/ColoursService.html":{}}}],["src/categories&colours/services/colours.service.ts:15",{"_index":1763,"title":{},"body":{"injectables/ColoursService.html":{}}}],["src/categories&colours/services/colours.service.ts:20",{"_index":1770,"title":{},"body":{"injectables/ColoursService.html":{}}}],["src/categories&colours/services/colours.service.ts:34",{"_index":1773,"title":{},"body":{"injectables/ColoursService.html":{}}}],["src/categories&colours/services/colours.service.ts:50",{"_index":1768,"title":{},"body":{"injectables/ColoursService.html":{}}}],["src/categories&colours/services/colours.service.ts:62",{"_index":1771,"title":{},"body":{"injectables/ColoursService.html":{}}}],["src/categories&colours/services/colours.service.ts:78",{"_index":1765,"title":{},"body":{"injectables/ColoursService.html":{}}}],["src/comander.ts",{"_index":3769,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/common/decorators/match.decorator.ts",{"_index":2542,"title":{},"body":{"classes/MatchConstraint.html":{},"miscellaneous/functions.html":{}}}],["src/common/decorators/match.decorator.ts:23",{"_index":2547,"title":{},"body":{"classes/MatchConstraint.html":{}}}],["src/common/decorators/nested.validation.decorator.ts",{"_index":3772,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/common/exceptions/api.exception.ts",{"_index":911,"title":{},"body":{"classes/ApiException.html":{}}}],["src/common/exceptions/api.exception.ts:173",{"_index":946,"title":{},"body":{"classes/ApiException.html":{}}}],["src/common/exceptions/api.exception.ts:234",{"_index":939,"title":{},"body":{"classes/ApiException.html":{}}}],["src/common/exceptions/api.exception.ts:263",{"_index":934,"title":{},"body":{"classes/ApiException.html":{}}}],["src/common/exceptions/api.exception.ts:300",{"_index":932,"title":{},"body":{"classes/ApiException.html":{}}}],["src/common/exceptions/api.exception.ts:41",{"_index":921,"title":{},"body":{"classes/ApiException.html":{}}}],["src/common/exceptions/api.exception.ts:42",{"_index":920,"title":{},"body":{"classes/ApiException.html":{}}}],["src/common/exceptions/api.exception.ts:64",{"_index":930,"title":{},"body":{"classes/ApiException.html":{}}}],["src/common/exceptions/validate",{"_index":875,"title":{},"body":{"classes/ApiError.html":{},"classes/BadRequestError.html":{},"classes/NotFoundError.html":{}}}],["src/common/exceptions/validation.excetion.ts",{"_index":3679,"title":{},"body":{"classes/ValidationException.html":{}}}],["src/common/exceptions/validation.excetion.ts:4",{"_index":3681,"title":{},"body":{"classes/ValidationException.html":{}}}],["src/common/filters/api",{"_index":963,"title":{},"body":{"classes/ApiExceptionFilter.html":{}}}],["src/common/filters/error",{"_index":895,"title":{},"body":{"classes/ApiErrorExceptionFilter.html":{}}}],["src/common/filters/http",{"_index":2251,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["src/common/guards/add",{"_index":82,"title":{},"body":{"guards/AddContentGuard.html":{}}}],["src/common/guards/admin.guard.ts",{"_index":265,"title":{},"body":{"guards/AdminGuard.html":{}}}],["src/common/guards/admin.guard.ts:22",{"_index":269,"title":{},"body":{"guards/AdminGuard.html":{}}}],["src/common/guards/admin.guard.ts:28",{"_index":271,"title":{},"body":{"guards/AdminGuard.html":{}}}],["src/common/guards/edit",{"_index":2162,"title":{},"body":{"guards/EditContentGuard.html":{},"guards/EditWebsiteGuard.html":{}}}],["src/common/guards/jw",{"_index":1379,"title":{},"body":{"guards/AuthFerfershGuard.html":{}}}],["src/common/guards/jwt",{"_index":2293,"title":{},"body":{"guards/JwtAuthGuard.html":{}}}],["src/common/guards/owner",{"_index":2731,"title":{},"body":{"guards/OwnerAdminGuard.html":{}}}],["src/common/guards/refresh.guard.ts",{"_index":3088,"title":{},"body":{"guards/RefreshAuthGuard.html":{}}}],["src/common/guards/refresh.guard.ts:16",{"_index":3089,"title":{},"body":{"guards/RefreshAuthGuard.html":{}}}],["src/common/guards/refresh.guard.ts:19",{"_index":3090,"title":{},"body":{"guards/RefreshAuthGuard.html":{}}}],["src/common/guards/roles.guard.ts",{"_index":3240,"title":{},"body":{"guards/RolesGuard.html":{}}}],["src/common/guards/roles.guard.ts:17",{"_index":3241,"title":{},"body":{"guards/RolesGuard.html":{}}}],["src/common/guards/roles.guard.ts:20",{"_index":3242,"title":{},"body":{"guards/RolesGuard.html":{}}}],["src/common/guards/throttler",{"_index":3392,"title":{},"body":{"injectables/ThrottlerBehindProxyGuard.html":{}}}],["src/common/guards/user.guard.ts",{"_index":3438,"title":{},"body":{"guards/UserGuard.html":{}}}],["src/common/guards/user.guard.ts:21",{"_index":3440,"title":{},"body":{"guards/UserGuard.html":{}}}],["src/common/guards/user.guard.ts:27",{"_index":3441,"title":{},"body":{"guards/UserGuard.html":{}}}],["src/common/middlewares/activate.middleware.ts",{"_index":6,"title":{},"body":{"injectables/ActivateMiddleware.html":{}}}],["src/common/middlewares/activate.middleware.ts:21",{"_index":15,"title":{},"body":{"injectables/ActivateMiddleware.html":{}}}],["src/common/middlewares/activate.middleware.ts:26",{"_index":27,"title":{},"body":{"injectables/ActivateMiddleware.html":{}}}],["src/common/middlewares/admin",{"_index":827,"title":{},"body":{"injectables/AdminUserMiddleware.html":{}}}],["src/common/middlewares/auth.middleware.ts",{"_index":1391,"title":{},"body":{"injectables/AuthMiddleware.html":{}}}],["src/common/middlewares/auth.middleware.ts:13",{"_index":1392,"title":{},"body":{"injectables/AuthMiddleware.html":{}}}],["src/common/middlewares/initialize",{"_index":2263,"title":{},"body":{"injectables/InitializeEmailMiddleware.html":{},"injectables/InitializeUserMiddleware.html":{}}}],["src/common/middlewares/product.mddleware.ts",{"_index":3485,"title":{},"body":{"injectables/UserMiddleware.html":{}}}],["src/common/middlewares/product.mddleware.ts:13",{"_index":3486,"title":{},"body":{"injectables/UserMiddleware.html":{}}}],["src/common/middlewares/product.middleware.ts",{"_index":3039,"title":{},"body":{"injectables/ProductMiddleware.html":{}}}],["src/common/middlewares/product.middleware.ts:13",{"_index":3040,"title":{},"body":{"injectables/ProductMiddleware.html":{}}}],["src/common/middlewares/user",{"_index":3430,"title":{},"body":{"injectables/UserAdminMiddleware.html":{}}}],["src/common/middlewares/user.middleware",{"_index":3057,"title":{},"body":{"modules/ProductModule.html":{}}}],["src/common/middlewares/user.middleware.ts",{"_index":3487,"title":{},"body":{"injectables/UserMiddleware-1.html":{}}}],["src/common/middlewares/user.middleware.ts:13",{"_index":3488,"title":{},"body":{"injectables/UserMiddleware-1.html":{}}}],["src/common/pipes/body",{"_index":3095,"title":{},"body":{"classes/RequestValidator.html":{}}}],["src/common/pipes/formdata.pipe.ts",{"_index":2922,"title":{},"body":{"classes/ParseFormDataJsonPipe.html":{},"miscellaneous/typealiases.html":{}}}],["src/common/pipes/formdata.pipe.ts:12",{"_index":2930,"title":{},"body":{"classes/ParseFormDataJsonPipe.html":{}}}],["src/common/pipes/formdata.pipe.ts:9",{"_index":2926,"title":{},"body":{"classes/ParseFormDataJsonPipe.html":{}}}],["src/common/pipes/parse.json.pipe.ts",{"_index":2946,"title":{},"body":{"injectables/ParseJsonPipe.html":{}}}],["src/common/pipes/parse.json.pipe.ts:12",{"_index":2948,"title":{},"body":{"injectables/ParseJsonPipe.html":{}}}],["src/common/pipes/parse.json.pipe.ts:20",{"_index":2950,"title":{},"body":{"injectables/ParseJsonPipe.html":{}}}],["src/common/pipes/validation.pipe.ts",{"_index":3666,"title":{},"body":{"injectables/ValidateDto.html":{}}}],["src/common/pipes/validation.pipe.ts:8",{"_index":3667,"title":{},"body":{"injectables/ValidateDto.html":{}}}],["src/core/core.module.ts",{"_index":1806,"title":{},"body":{"modules/CoreModule.html":{}}}],["src/core/events/jwt",{"_index":2306,"title":{},"body":{"classes/JwtRefreshTokenDeletedEvent.html":{}}}],["src/core/filters/all",{"_index":849,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["src/core/interceptors/global.interceptor.ts",{"_index":2238,"title":{},"body":{"injectables/GlobalInterceptor.html":{}}}],["src/core/interceptors/global.interceptor.ts:13",{"_index":2242,"title":{},"body":{"injectables/GlobalInterceptor.html":{}}}],["src/core/interfaces/admin.interfaces.ts",{"_index":304,"title":{},"body":{"interfaces/AdminInterface.html":{},"interfaces/AdminRefreshTokenCreationAttrbs.html":{},"interfaces/AdmincreationAttrbs.html":{}}}],["src/core/interfaces/auth.interfaces.ts",{"_index":1441,"title":{},"body":{"interfaces/AuthUser.html":{},"interfaces/CodeDto.html":{},"interfaces/Payload.html":{},"interfaces/ReturnedAdmin.html":{},"interfaces/ReturnedOwner.html":{},"interfaces/ReturnedUser.html":{},"interfaces/Tokens.html":{}}}],["src/core/interfaces/owner.interfaces.ts",{"_index":2739,"title":{},"body":{"interfaces/OwnerCreationAttrbs.html":{},"interfaces/OwnerRefreshTokenCreationAttrbs.html":{}}}],["src/core/interfaces/product.interfaces.ts",{"_index":1678,"title":{},"body":{"interfaces/CategoryCreationAtrb.html":{},"interfaces/ColourCreationAtrb.html":{},"interfaces/ProductCreationAttrs.html":{},"interfaces/ReturnedCategory.html":{},"interfaces/ReturnedColour.html":{},"interfaces/ReturnedProduct.html":{},"interfaces/ReturnedProducts.html":{},"interfaces/ReturnedReview.html":{},"interfaces/ReviewCreationAtrb.html":{}}}],["src/core/interfaces/user.interfaces.ts",{"_index":2275,"title":{},"body":{"interfaces/InitializeUser.html":{},"interfaces/RolecreationAttrbs.html":{},"interfaces/UserInterface.html":{},"interfaces/UserRefreshCreationAttrbs.html":{},"interfaces/UsercreationAttrbs.html":{},"interfaces/ValidateUser.html":{}}}],["src/core/middlewares/cors.middleware.ts",{"_index":1828,"title":{},"body":{"injectables/CorsMiddleware.html":{},"interfaces/RequestHeaders.html":{}}}],["src/core/middlewares/cors.middleware.ts:17",{"_index":3094,"title":{},"body":{"interfaces/RequestHeaders.html":{}}}],["src/core/middlewares/cors.middleware.ts:23",{"_index":1836,"title":{},"body":{"injectables/CorsMiddleware.html":{}}}],["src/core/middlewares/cors.middleware.ts:24",{"_index":1834,"title":{},"body":{"injectables/CorsMiddleware.html":{}}}],["src/core/middlewares/cors.middleware.ts:81",{"_index":1832,"title":{},"body":{"injectables/CorsMiddleware.html":{}}}],["src/core/middlewares/location.middleware.ts",{"_index":2317,"title":{},"body":{"injectables/LocationMiddleware.html":{}}}],["src/core/middlewares/location.middleware.ts:20",{"_index":2319,"title":{},"body":{"injectables/LocationMiddleware.html":{}}}],["src/core/middlewares/location.middleware.ts:22",{"_index":2320,"title":{},"body":{"injectables/LocationMiddleware.html":{}}}],["src/core/processors/garbage.processor.ts",{"_index":2221,"title":{},"body":{"classes/GarbageCollectingProcessor.html":{}}}],["src/core/processors/garbage.processor.ts:10",{"_index":2228,"title":{},"body":{"classes/GarbageCollectingProcessor.html":{}}}],["src/core/processors/garbage.processor.ts:7",{"_index":2224,"title":{},"body":{"classes/GarbageCollectingProcessor.html":{}}}],["src/core/services/cluster.service.ts",{"_index":970,"title":{},"body":{"injectables/AppClusterService.html":{},"interfaces/Msg.html":{},"miscellaneous/typealiases.html":{}}}],["src/core/services/cluster.service.ts:11",{"_index":983,"title":{},"body":{"injectables/AppClusterService.html":{}}}],["src/core/services/cluster.service.ts:12",{"_index":976,"title":{},"body":{"injectables/AppClusterService.html":{}}}],["src/core/services/cluster.service.ts:42",{"_index":981,"title":{},"body":{"injectables/AppClusterService.html":{}}}],["src/core/services/cluster.service.ts:57",{"_index":979,"title":{},"body":{"injectables/AppClusterService.html":{}}}],["src/core/services/events.service.ts",{"_index":1136,"title":{},"body":{"injectables/AppListener.html":{}}}],["src/core/services/events.service.ts:9",{"_index":1141,"title":{},"body":{"injectables/AppListener.html":{}}}],["src/core/services/file.service.ts",{"_index":2167,"title":{},"body":{"injectables/FilesService.html":{},"interfaces/fileCreated.html":{}}}],["src/core/services/file.service.ts:17",{"_index":2174,"title":{},"body":{"injectables/FilesService.html":{}}}],["src/core/services/file.service.ts:36",{"_index":2184,"title":{},"body":{"injectables/FilesService.html":{}}}],["src/core/services/file.service.ts:43",{"_index":2177,"title":{},"body":{"injectables/FilesService.html":{}}}],["src/core/services/file.service.ts:50",{"_index":2182,"title":{},"body":{"injectables/FilesService.html":{}}}],["src/core/services/file.service.ts:66",{"_index":2180,"title":{},"body":{"injectables/FilesService.html":{}}}],["src/core/services/scedule.service.ts",{"_index":3275,"title":{},"body":{"injectables/TasksService.html":{}}}],["src/core/services/scedule.service.ts:124",{"_index":3306,"title":{},"body":{"injectables/TasksService.html":{}}}],["src/core/services/scedule.service.ts:13",{"_index":3287,"title":{},"body":{"injectables/TasksService.html":{}}}],["src/core/services/scedule.service.ts:131",{"_index":3312,"title":{},"body":{"injectables/TasksService.html":{}}}],["src/core/services/scedule.service.ts:138",{"_index":3313,"title":{},"body":{"injectables/TasksService.html":{}}}],["src/core/services/scedule.service.ts:147",{"_index":3314,"title":{},"body":{"injectables/TasksService.html":{}}}],["src/core/services/scedule.service.ts:21",{"_index":3290,"title":{},"body":{"injectables/TasksService.html":{}}}],["src/core/services/scedule.service.ts:37",{"_index":3310,"title":{},"body":{"injectables/TasksService.html":{}}}],["src/core/services/scedule.service.ts:51",{"_index":3302,"title":{},"body":{"injectables/TasksService.html":{}}}],["src/core/services/scedule.service.ts:57",{"_index":3296,"title":{},"body":{"injectables/TasksService.html":{}}}],["src/core/services/scedule.service.ts:72",{"_index":3304,"title":{},"body":{"injectables/TasksService.html":{}}}],["src/core/services/scedule.service.ts:79",{"_index":3311,"title":{},"body":{"injectables/TasksService.html":{}}}],["src/core/services/scedule.service.ts:86",{"_index":3308,"title":{},"body":{"injectables/TasksService.html":{}}}],["src/core/services/scedule.service.ts:95",{"_index":3301,"title":{},"body":{"injectables/TasksService.html":{}}}],["src/mail/mail.module.ts",{"_index":2349,"title":{},"body":{"modules/MailModule.html":{}}}],["src/mail/mail.service.ts",{"_index":2369,"title":{},"body":{"injectables/MailService.html":{}}}],["src/mail/mail.service.ts:109",{"_index":2382,"title":{},"body":{"injectables/MailService.html":{}}}],["src/mail/mail.service.ts:23",{"_index":2375,"title":{},"body":{"injectables/MailService.html":{}}}],["src/mail/mail.service.ts:31",{"_index":2380,"title":{},"body":{"injectables/MailService.html":{}}}],["src/mail/mail.service.ts:70",{"_index":2377,"title":{},"body":{"injectables/MailService.html":{}}}],["src/main.ts",{"_index":3771,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/orders/models/order.model.ts",{"_index":2574,"title":{},"body":{"classes/Order.html":{}}}],["src/orders/models/order.model.ts:24",{"_index":2580,"title":{},"body":{"classes/Order.html":{}}}],["src/orders/models/order.model.ts:31",{"_index":2582,"title":{},"body":{"classes/Order.html":{}}}],["src/orders/models/order.model.ts:38",{"_index":2586,"title":{},"body":{"classes/Order.html":{}}}],["src/orders/models/order.model.ts:44",{"_index":2584,"title":{},"body":{"classes/Order.html":{}}}],["src/orders/models/order.model.ts:47",{"_index":2585,"title":{},"body":{"classes/Order.html":{}}}],["src/orders/models/order.model.ts:50",{"_index":2581,"title":{},"body":{"classes/Order.html":{}}}],["src/orders/models/order.model.ts:53",{"_index":2583,"title":{},"body":{"classes/Order.html":{}}}],["src/orders/models/order.model.ts:55",{"_index":2589,"title":{},"body":{"classes/Order.html":{}}}],["src/orders/models/order.model.ts:59",{"_index":2588,"title":{},"body":{"classes/Order.html":{}}}],["src/orders/models/order.model.ts:63",{"_index":2591,"title":{},"body":{"classes/Order.html":{}}}],["src/orders/models/order.model.ts:68",{"_index":2587,"title":{},"body":{"classes/Order.html":{}}}],["src/orders/models/order.product.model.ts",{"_index":2599,"title":{},"body":{"classes/OrderProduct.html":{}}}],["src/orders/models/order.product.model.ts:22",{"_index":2602,"title":{},"body":{"classes/OrderProduct.html":{}}}],["src/orders/models/order.product.model.ts:32",{"_index":2607,"title":{},"body":{"classes/OrderProduct.html":{}}}],["src/orders/models/order.product.model.ts:38",{"_index":2605,"title":{},"body":{"classes/OrderProduct.html":{}}}],["src/orders/models/order.product.model.ts:48",{"_index":2604,"title":{},"body":{"classes/OrderProduct.html":{}}}],["src/orders/models/order.product.model.ts:57",{"_index":2608,"title":{},"body":{"classes/OrderProduct.html":{}}}],["src/orders/models/order.product.model.ts:60",{"_index":2603,"title":{},"body":{"classes/OrderProduct.html":{}}}],["src/orders/models/order.product.model.ts:63",{"_index":2606,"title":{},"body":{"classes/OrderProduct.html":{}}}],["src/orders/models/order.product.model.ts:65",{"_index":2610,"title":{},"body":{"classes/OrderProduct.html":{}}}],["src/orders/models/order.product.model.ts:69",{"_index":2609,"title":{},"body":{"classes/OrderProduct.html":{}}}],["src/orders/orders.controller.ts",{"_index":2615,"title":{},"body":{"controllers/OrdersController.html":{}}}],["src/orders/orders.module.ts",{"_index":2620,"title":{},"body":{"modules/OrdersModule.html":{}}}],["src/orders/orders.service.ts",{"_index":2625,"title":{},"body":{"injectables/OrdersService.html":{}}}],["src/owner/dto/create.owner.dto",{"_index":3316,"title":{},"body":{"injectables/TasksService.html":{}}}],["src/owner/dto/create.owner.dto.ts",{"_index":1995,"title":{},"body":{"classes/CreateOwnerDto.html":{}}}],["src/owner/dto/create.owner.dto.ts:16",{"_index":2001,"title":{},"body":{"classes/CreateOwnerDto.html":{}}}],["src/owner/dto/create.owner.dto.ts:23",{"_index":2007,"title":{},"body":{"classes/CreateOwnerDto.html":{}}}],["src/owner/dto/create.owner.dto.ts:33",{"_index":2006,"title":{},"body":{"classes/CreateOwnerDto.html":{}}}],["src/owner/dto/create.owner.dto.ts:41",{"_index":1999,"title":{},"body":{"classes/CreateOwnerDto.html":{}}}],["src/owner/dto/create.owner.dto.ts:51",{"_index":2005,"title":{},"body":{"classes/CreateOwnerDto.html":{}}}],["src/owner/dto/create.owner.dto.ts:58",{"_index":1998,"title":{},"body":{"classes/CreateOwnerDto.html":{}}}],["src/owner/dto/create.owner.dto.ts:67",{"_index":2002,"title":{},"body":{"classes/CreateOwnerDto.html":{}}}],["src/owner/dto/create.owner.refresh.token.dto.ts",{"_index":2011,"title":{},"body":{"classes/CreateOwnerRefreshTokenDto.html":{}}}],["src/owner/dto/create.owner.refresh.token.dto.ts:16",{"_index":2016,"title":{},"body":{"classes/CreateOwnerRefreshTokenDto.html":{}}}],["src/owner/dto/create.owner.refresh.token.dto.ts:23",{"_index":2014,"title":{},"body":{"classes/CreateOwnerRefreshTokenDto.html":{}}}],["src/owner/dto/create.owner.refresh.token.dto.ts:31",{"_index":2013,"title":{},"body":{"classes/CreateOwnerRefreshTokenDto.html":{}}}],["src/owner/dto/create.owner.refresh.token.dto.ts:40",{"_index":2015,"title":{},"body":{"classes/CreateOwnerRefreshTokenDto.html":{}}}],["src/owner/dto/create.owner.refresh.token.dto.ts:47",{"_index":2017,"title":{},"body":{"classes/CreateOwnerRefreshTokenDto.html":{}}}],["src/owner/models/currencies.model",{"_index":553,"title":{},"body":{"modules/AdminModule.html":{},"modules/AuthModule.html":{},"modules/MailModule.html":{},"modules/ProductModule.html":{},"modules/RolesModule.html":{}}}],["src/owner/models/currencies.model.ts",{"_index":2078,"title":{},"body":{"classes/Currencies.html":{}}}],["src/owner/models/currencies.model.ts:24",{"_index":2086,"title":{},"body":{"classes/Currencies.html":{}}}],["src/owner/models/currencies.model.ts:32",{"_index":2084,"title":{},"body":{"classes/Currencies.html":{}}}],["src/owner/models/currencies.model.ts:40",{"_index":2085,"title":{},"body":{"classes/Currencies.html":{}}}],["src/owner/models/currencies.model.ts:48",{"_index":2089,"title":{},"body":{"classes/Currencies.html":{}}}],["src/owner/models/currencies.model.ts:53",{"_index":2088,"title":{},"body":{"classes/Currencies.html":{}}}],["src/owner/models/currencies.model.ts:56",{"_index":2087,"title":{},"body":{"classes/Currencies.html":{}}}],["src/owner/models/currencies.model.ts:58",{"_index":2090,"title":{},"body":{"classes/Currencies.html":{}}}],["src/owner/models/currencies.model.ts:62",{"_index":2093,"title":{},"body":{"classes/Currencies.html":{}}}],["src/owner/models/currencies.model.ts:67",{"_index":2091,"title":{},"body":{"classes/Currencies.html":{}}}],["src/owner/models/currencies.model.ts:71",{"_index":2095,"title":{},"body":{"classes/Currencies.html":{}}}],["src/owner/models/owner.model.ts",{"_index":2626,"title":{},"body":{"classes/Owner.html":{}}}],["src/owner/models/owner.model.ts:103",{"_index":2669,"title":{},"body":{"classes/Owner.html":{}}}],["src/owner/models/owner.model.ts:115",{"_index":2662,"title":{},"body":{"classes/Owner.html":{}}}],["src/owner/models/owner.model.ts:128",{"_index":2655,"title":{},"body":{"classes/Owner.html":{}}}],["src/owner/models/owner.model.ts:141",{"_index":2657,"title":{},"body":{"classes/Owner.html":{}}}],["src/owner/models/owner.model.ts:155",{"_index":2665,"title":{},"body":{"classes/Owner.html":{}}}],["src/owner/models/owner.model.ts:168",{"_index":2652,"title":{},"body":{"classes/Owner.html":{}}}],["src/owner/models/owner.model.ts:171",{"_index":2658,"title":{},"body":{"classes/Owner.html":{}}}],["src/owner/models/owner.model.ts:174",{"_index":2671,"title":{},"body":{"classes/Owner.html":{}}}],["src/owner/models/owner.model.ts:177",{"_index":2676,"title":{},"body":{"classes/Owner.html":{}}}],["src/owner/models/owner.model.ts:180",{"_index":2666,"title":{},"body":{"classes/Owner.html":{}}}],["src/owner/models/owner.model.ts:182",{"_index":2685,"title":{},"body":{"classes/Owner.html":{}}}],["src/owner/models/owner.model.ts:186",{"_index":2702,"title":{},"body":{"classes/Owner.html":{}}}],["src/owner/models/owner.model.ts:191",{"_index":2693,"title":{},"body":{"classes/Owner.html":{}}}],["src/owner/models/owner.model.ts:195",{"_index":2712,"title":{},"body":{"classes/Owner.html":{}}}],["src/owner/models/owner.model.ts:200",{"_index":2688,"title":{},"body":{"classes/Owner.html":{}}}],["src/owner/models/owner.model.ts:204",{"_index":2704,"title":{},"body":{"classes/Owner.html":{}}}],["src/owner/models/owner.model.ts:209",{"_index":2683,"title":{},"body":{"classes/Owner.html":{}}}],["src/owner/models/owner.model.ts:213",{"_index":2689,"title":{},"body":{"classes/Owner.html":{}}}],["src/owner/models/owner.model.ts:217",{"_index":2684,"title":{},"body":{"classes/Owner.html":{}}}],["src/owner/models/owner.model.ts:221",{"_index":2700,"title":{},"body":{"classes/Owner.html":{}}}],["src/owner/models/owner.model.ts:226",{"_index":2682,"title":{},"body":{"classes/Owner.html":{}}}],["src/owner/models/owner.model.ts:230",{"_index":2697,"title":{},"body":{"classes/Owner.html":{}}}],["src/owner/models/owner.model.ts:235",{"_index":2691,"title":{},"body":{"classes/Owner.html":{}}}],["src/owner/models/owner.model.ts:239",{"_index":2708,"title":{},"body":{"classes/Owner.html":{}}}],["src/owner/models/owner.model.ts:244",{"_index":2692,"title":{},"body":{"classes/Owner.html":{}}}],["src/owner/models/owner.model.ts:248",{"_index":2710,"title":{},"body":{"classes/Owner.html":{}}}],["src/owner/models/owner.model.ts:253",{"_index":2686,"title":{},"body":{"classes/Owner.html":{}}}],["src/owner/models/owner.model.ts:257",{"_index":2706,"title":{},"body":{"classes/Owner.html":{}}}],["src/owner/models/owner.model.ts:262",{"_index":2681,"title":{},"body":{"classes/Owner.html":{}}}],["src/owner/models/owner.model.ts:266",{"_index":2695,"title":{},"body":{"classes/Owner.html":{}}}],["src/owner/models/owner.model.ts:271",{"_index":2690,"title":{},"body":{"classes/Owner.html":{}}}],["src/owner/models/owner.model.ts:275",{"_index":2687,"title":{},"body":{"classes/Owner.html":{}}}],["src/owner/models/owner.model.ts:279",{"_index":2680,"title":{},"body":{"classes/Owner.html":{}}}],["src/owner/models/owner.model.ts:32",{"_index":2660,"title":{},"body":{"classes/Owner.html":{}}}],["src/owner/models/owner.model.ts:42",{"_index":2659,"title":{},"body":{"classes/Owner.html":{}}}],["src/owner/models/owner.model.ts:51",{"_index":2664,"title":{},"body":{"classes/Owner.html":{}}}],["src/owner/models/owner.model.ts:60",{"_index":2678,"title":{},"body":{"classes/Owner.html":{}}}],["src/owner/models/owner.model.ts:69",{"_index":2670,"title":{},"body":{"classes/Owner.html":{}}}],["src/owner/models/owner.model.ts:78",{"_index":2673,"title":{},"body":{"classes/Owner.html":{}}}],["src/owner/models/owner.model.ts:90",{"_index":2675,"title":{},"body":{"classes/Owner.html":{}}}],["src/owner/models/owner.refresh.token.model.ts",{"_index":2804,"title":{},"body":{"classes/OwnerRefreshToken.html":{}}}],["src/owner/models/owner.refresh.token.model.ts:103",{"_index":2809,"title":{},"body":{"classes/OwnerRefreshToken.html":{}}}],["src/owner/models/owner.refresh.token.model.ts:106",{"_index":2810,"title":{},"body":{"classes/OwnerRefreshToken.html":{}}}],["src/owner/models/owner.refresh.token.model.ts:108",{"_index":2818,"title":{},"body":{"classes/OwnerRefreshToken.html":{}}}],["src/owner/models/owner.refresh.token.model.ts:112",{"_index":2823,"title":{},"body":{"classes/OwnerRefreshToken.html":{}}}],["src/owner/models/owner.refresh.token.model.ts:117",{"_index":2822,"title":{},"body":{"classes/OwnerRefreshToken.html":{}}}],["src/owner/models/owner.refresh.token.model.ts:121",{"_index":2826,"title":{},"body":{"classes/OwnerRefreshToken.html":{}}}],["src/owner/models/owner.refresh.token.model.ts:126",{"_index":2821,"title":{},"body":{"classes/OwnerRefreshToken.html":{}}}],["src/owner/models/owner.refresh.token.model.ts:130",{"_index":2825,"title":{},"body":{"classes/OwnerRefreshToken.html":{}}}],["src/owner/models/owner.refresh.token.model.ts:135",{"_index":2820,"title":{},"body":{"classes/OwnerRefreshToken.html":{}}}],["src/owner/models/owner.refresh.token.model.ts:139",{"_index":2819,"title":{},"body":{"classes/OwnerRefreshToken.html":{}}}],["src/owner/models/owner.refresh.token.model.ts:143",{"_index":2824,"title":{},"body":{"classes/OwnerRefreshToken.html":{}}}],["src/owner/models/owner.refresh.token.model.ts:29",{"_index":2808,"title":{},"body":{"classes/OwnerRefreshToken.html":{}}}],["src/owner/models/owner.refresh.token.model.ts:38",{"_index":2817,"title":{},"body":{"classes/OwnerRefreshToken.html":{}}}],["src/owner/models/owner.refresh.token.model.ts:48",{"_index":2806,"title":{},"body":{"classes/OwnerRefreshToken.html":{}}}],["src/owner/models/owner.refresh.token.model.ts:61",{"_index":2815,"title":{},"body":{"classes/OwnerRefreshToken.html":{}}}],["src/owner/models/owner.refresh.token.model.ts:69",{"_index":2813,"title":{},"body":{"classes/OwnerRefreshToken.html":{}}}],["src/owner/models/owner.refresh.token.model.ts:83",{"_index":2811,"title":{},"body":{"classes/OwnerRefreshToken.html":{}}}],["src/owner/models/owner.refresh.token.model.ts:90",{"_index":2807,"title":{},"body":{"classes/OwnerRefreshToken.html":{}}}],["src/owner/owner.module.ts",{"_index":2798,"title":{},"body":{"modules/OwnerModule.html":{}}}],["src/owner/services/currency.service",{"_index":556,"title":{},"body":{"modules/AdminModule.html":{},"modules/RolesModule.html":{}}}],["src/owner/services/currency.service.ts",{"_index":2101,"title":{},"body":{"injectables/CurrencyService.html":{}}}],["src/owner/services/currency.service.ts:12",{"_index":2107,"title":{},"body":{"injectables/CurrencyService.html":{}}}],["src/owner/services/currency.service.ts:143",{"_index":2110,"title":{},"body":{"injectables/CurrencyService.html":{}}}],["src/owner/services/currency.service.ts:177",{"_index":2115,"title":{},"body":{"injectables/CurrencyService.html":{}}}],["src/owner/services/currency.service.ts:20",{"_index":2117,"title":{},"body":{"injectables/CurrencyService.html":{}}}],["src/owner/services/currency.service.ts:87",{"_index":2112,"title":{},"body":{"injectables/CurrencyService.html":{}}}],["src/owner/services/jwt",{"_index":2741,"title":{},"body":{"injectables/OwnerJwtRefreshService.html":{}}}],["src/owner/services/owner.service.ts",{"_index":2828,"title":{},"body":{"injectables/OwnerService.html":{}}}],["src/owner/services/owner.service.ts:112",{"_index":2848,"title":{},"body":{"injectables/OwnerService.html":{}}}],["src/owner/services/owner.service.ts:142",{"_index":2846,"title":{},"body":{"injectables/OwnerService.html":{}}}],["src/owner/services/owner.service.ts:162",{"_index":2853,"title":{},"body":{"injectables/OwnerService.html":{}}}],["src/owner/services/owner.service.ts:176",{"_index":2857,"title":{},"body":{"injectables/OwnerService.html":{}}}],["src/owner/services/owner.service.ts:190",{"_index":2855,"title":{},"body":{"injectables/OwnerService.html":{}}}],["src/owner/services/owner.service.ts:198",{"_index":2859,"title":{},"body":{"injectables/OwnerService.html":{}}}],["src/owner/services/owner.service.ts:206",{"_index":2870,"title":{},"body":{"injectables/OwnerService.html":{}}}],["src/owner/services/owner.service.ts:221",{"_index":2844,"title":{},"body":{"injectables/OwnerService.html":{}}}],["src/owner/services/owner.service.ts:239",{"_index":2863,"title":{},"body":{"injectables/OwnerService.html":{}}}],["src/owner/services/owner.service.ts:247",{"_index":2860,"title":{},"body":{"injectables/OwnerService.html":{}}}],["src/owner/services/owner.service.ts:274",{"_index":2842,"title":{},"body":{"injectables/OwnerService.html":{}}}],["src/owner/services/owner.service.ts:289",{"_index":2862,"title":{},"body":{"injectables/OwnerService.html":{}}}],["src/owner/services/owner.service.ts:31",{"_index":2840,"title":{},"body":{"injectables/OwnerService.html":{}}}],["src/owner/services/owner.service.ts:47",{"_index":2868,"title":{},"body":{"injectables/OwnerService.html":{}}}],["src/owner/services/owner.service.ts:62",{"_index":2852,"title":{},"body":{"injectables/OwnerService.html":{}}}],["src/owner/services/owner.service.ts:68",{"_index":2850,"title":{},"body":{"injectables/OwnerService.html":{}}}],["src/product/dto/create.product.dto.ts",{"_index":2019,"title":{},"body":{"classes/CreateProductDto.html":{},"classes/Nested.html":{}}}],["src/product/dto/create.product.dto.ts:11",{"_index":2565,"title":{},"body":{"classes/Nested.html":{}}}],["src/product/dto/create.product.dto.ts:15",{"_index":2564,"title":{},"body":{"classes/Nested.html":{}}}],["src/product/dto/create.product.dto.ts:19",{"_index":2563,"title":{},"body":{"classes/Nested.html":{}}}],["src/product/dto/create.product.dto.ts:24",{"_index":2027,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["src/product/dto/create.product.dto.ts:33",{"_index":2021,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["src/product/dto/create.product.dto.ts:43",{"_index":2023,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["src/product/dto/create.product.dto.ts:52",{"_index":2028,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["src/product/dto/create.product.dto.ts:61",{"_index":2029,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["src/product/dto/create.product.dto.ts:67",{"_index":2026,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["src/product/dto/create.product.dto.ts:7",{"_index":2566,"title":{},"body":{"classes/Nested.html":{}}}],["src/product/dto/create.product.dto.ts:74",{"_index":2030,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["src/product/dto/query",{"_index":3075,"title":{},"body":{"classes/QueryFilterDto.html":{}}}],["src/product/dto/update.product.dto.ts",{"_index":2567,"title":{},"body":{"classes/Nested-1.html":{},"classes/UpdateProductDto.html":{}}}],["src/product/dto/update.product.dto.ts:11",{"_index":2570,"title":{},"body":{"classes/Nested-1.html":{}}}],["src/product/dto/update.product.dto.ts:15",{"_index":2569,"title":{},"body":{"classes/Nested-1.html":{}}}],["src/product/dto/update.product.dto.ts:19",{"_index":2568,"title":{},"body":{"classes/Nested-1.html":{}}}],["src/product/dto/update.product.dto.ts:24",{"_index":3415,"title":{},"body":{"classes/UpdateProductDto.html":{}}}],["src/product/dto/update.product.dto.ts:33",{"_index":3412,"title":{},"body":{"classes/UpdateProductDto.html":{}}}],["src/product/dto/update.product.dto.ts:43",{"_index":3413,"title":{},"body":{"classes/UpdateProductDto.html":{}}}],["src/product/dto/update.product.dto.ts:52",{"_index":3416,"title":{},"body":{"classes/UpdateProductDto.html":{}}}],["src/product/dto/update.product.dto.ts:61",{"_index":3417,"title":{},"body":{"classes/UpdateProductDto.html":{}}}],["src/product/dto/update.product.dto.ts:67",{"_index":3414,"title":{},"body":{"classes/UpdateProductDto.html":{}}}],["src/product/dto/update.product.dto.ts:7",{"_index":2571,"title":{},"body":{"classes/Nested-1.html":{}}}],["src/product/dto/update.product.dto.ts:74",{"_index":3418,"title":{},"body":{"classes/UpdateProductDto.html":{}}}],["src/product/models/bookmark.products.ts",{"_index":1463,"title":{},"body":{"classes/BookmarksProducts.html":{}}}],["src/product/models/bookmark.products.ts:21",{"_index":1466,"title":{},"body":{"classes/BookmarksProducts.html":{}}}],["src/product/models/bookmark.products.ts:28",{"_index":1469,"title":{},"body":{"classes/BookmarksProducts.html":{}}}],["src/product/models/bookmark.products.ts:35",{"_index":1468,"title":{},"body":{"classes/BookmarksProducts.html":{}}}],["src/product/models/product.model.ts",{"_index":2956,"title":{},"body":{"classes/Product.html":{}}}],["src/product/models/product.model.ts:100",{"_index":2976,"title":{},"body":{"classes/Product.html":{}}}],["src/product/models/product.model.ts:108",{"_index":2984,"title":{},"body":{"classes/Product.html":{}}}],["src/product/models/product.model.ts:118",{"_index":2985,"title":{},"body":{"classes/Product.html":{}}}],["src/product/models/product.model.ts:126",{"_index":2974,"title":{},"body":{"classes/Product.html":{}}}],["src/product/models/product.model.ts:135",{"_index":2981,"title":{},"body":{"classes/Product.html":{}}}],["src/product/models/product.model.ts:140",{"_index":2969,"title":{},"body":{"classes/Product.html":{}}}],["src/product/models/product.model.ts:145",{"_index":2979,"title":{},"body":{"classes/Product.html":{}}}],["src/product/models/product.model.ts:148",{"_index":2978,"title":{},"body":{"classes/Product.html":{}}}],["src/product/models/product.model.ts:151",{"_index":2968,"title":{},"body":{"classes/Product.html":{}}}],["src/product/models/product.model.ts:154",{"_index":2971,"title":{},"body":{"classes/Product.html":{}}}],["src/product/models/product.model.ts:157",{"_index":2972,"title":{},"body":{"classes/Product.html":{}}}],["src/product/models/product.model.ts:160",{"_index":2970,"title":{},"body":{"classes/Product.html":{}}}],["src/product/models/product.model.ts:163",{"_index":2977,"title":{},"body":{"classes/Product.html":{}}}],["src/product/models/product.model.ts:166",{"_index":2982,"title":{},"body":{"classes/Product.html":{}}}],["src/product/models/product.model.ts:168",{"_index":2991,"title":{},"body":{"classes/Product.html":{}}}],["src/product/models/product.model.ts:172",{"_index":3001,"title":{},"body":{"classes/Product.html":{}}}],["src/product/models/product.model.ts:177",{"_index":2990,"title":{},"body":{"classes/Product.html":{}}}],["src/product/models/product.model.ts:181",{"_index":2999,"title":{},"body":{"classes/Product.html":{}}}],["src/product/models/product.model.ts:186",{"_index":2989,"title":{},"body":{"classes/Product.html":{}}}],["src/product/models/product.model.ts:190",{"_index":2988,"title":{},"body":{"classes/Product.html":{}}}],["src/product/models/product.model.ts:194",{"_index":2994,"title":{},"body":{"classes/Product.html":{}}}],["src/product/models/product.model.ts:198",{"_index":3004,"title":{},"body":{"classes/Product.html":{}}}],["src/product/models/product.model.ts:203",{"_index":2987,"title":{},"body":{"classes/Product.html":{}}}],["src/product/models/product.model.ts:207",{"_index":2997,"title":{},"body":{"classes/Product.html":{}}}],["src/product/models/product.model.ts:212",{"_index":2993,"title":{},"body":{"classes/Product.html":{}}}],["src/product/models/product.model.ts:34",{"_index":2975,"title":{},"body":{"classes/Product.html":{}}}],["src/product/models/product.model.ts:42",{"_index":2986,"title":{},"body":{"classes/Product.html":{}}}],["src/product/models/product.model.ts:44",{"_index":2995,"title":{},"body":{"classes/Product.html":{}}}],["src/product/models/product.model.ts:53",{"_index":3006,"title":{},"body":{"classes/Product.html":{}}}],["src/product/models/product.model.ts:64",{"_index":2973,"title":{},"body":{"classes/Product.html":{}}}],["src/product/models/product.model.ts:66",{"_index":2992,"title":{},"body":{"classes/Product.html":{}}}],["src/product/models/product.model.ts:75",{"_index":3003,"title":{},"body":{"classes/Product.html":{}}}],["src/product/models/product.model.ts:92",{"_index":2980,"title":{},"body":{"classes/Product.html":{}}}],["src/product/models/watched.products.model.ts",{"_index":3684,"title":{},"body":{"classes/WatchedProducts.html":{}}}],["src/product/models/watched.products.model.ts:21",{"_index":3685,"title":{},"body":{"classes/WatchedProducts.html":{}}}],["src/product/models/watched.products.model.ts:28",{"_index":3687,"title":{},"body":{"classes/WatchedProducts.html":{}}}],["src/product/models/watched.products.model.ts:35",{"_index":3686,"title":{},"body":{"classes/WatchedProducts.html":{}}}],["src/product/product.module.ts",{"_index":3045,"title":{},"body":{"modules/ProductModule.html":{}}}],["src/product/product.module.ts:93",{"_index":3047,"title":{},"body":{"modules/ProductModule.html":{}}}],["src/repl.ts",{"_index":3770,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/reviews/create.review.dto.ts",{"_index":2046,"title":{},"body":{"classes/CreateReviewDto.html":{}}}],["src/reviews/create.review.dto.ts:12",{"_index":2051,"title":{},"body":{"classes/CreateReviewDto.html":{}}}],["src/reviews/create.review.dto.ts:17",{"_index":2050,"title":{},"body":{"classes/CreateReviewDto.html":{}}}],["src/reviews/create.review.dto.ts:7",{"_index":2049,"title":{},"body":{"classes/CreateReviewDto.html":{}}}],["src/reviews/models/product.reviews.model.ts",{"_index":3067,"title":{},"body":{"classes/ProductReviews.html":{}}}],["src/reviews/models/product.reviews.model.ts:21",{"_index":3069,"title":{},"body":{"classes/ProductReviews.html":{}}}],["src/reviews/models/product.reviews.model.ts:28",{"_index":3071,"title":{},"body":{"classes/ProductReviews.html":{}}}],["src/reviews/models/product.reviews.model.ts:35",{"_index":3070,"title":{},"body":{"classes/ProductReviews.html":{}}}],["src/reviews/models/review.model.ts",{"_index":3124,"title":{},"body":{"classes/Review.html":{}}}],["src/reviews/models/review.model.ts:22",{"_index":3125,"title":{},"body":{"classes/Review.html":{}}}],["src/reviews/models/review.model.ts:29",{"_index":3126,"title":{},"body":{"classes/Review.html":{}}}],["src/reviews/models/review.model.ts:36",{"_index":3130,"title":{},"body":{"classes/Review.html":{}}}],["src/reviews/models/review.model.ts:43",{"_index":3129,"title":{},"body":{"classes/Review.html":{}}}],["src/reviews/models/review.model.ts:50",{"_index":3128,"title":{},"body":{"classes/Review.html":{}}}],["src/reviews/models/review.model.ts:53",{"_index":3127,"title":{},"body":{"classes/Review.html":{}}}],["src/reviews/reviews.controller.ts",{"_index":3133,"title":{},"body":{"controllers/ReviewsController.html":{}}}],["src/reviews/reviews.controller.ts:37",{"_index":3138,"title":{},"body":{"controllers/ReviewsController.html":{}}}],["src/reviews/reviews.controller.ts:59",{"_index":3142,"title":{},"body":{"controllers/ReviewsController.html":{}}}],["src/reviews/reviews.module.ts",{"_index":3156,"title":{},"body":{"modules/ReviewsModule.html":{}}}],["src/reviews/reviews.module.ts:86",{"_index":3157,"title":{},"body":{"modules/ReviewsModule.html":{}}}],["src/reviews/reviews.service.ts",{"_index":3166,"title":{},"body":{"injectables/ReviewsService.html":{}}}],["src/reviews/reviews.service.ts:15",{"_index":3171,"title":{},"body":{"injectables/ReviewsService.html":{}}}],["src/reviews/reviews.service.ts:31",{"_index":3173,"title":{},"body":{"injectables/ReviewsService.html":{}}}],["src/reviews/reviews.service.ts:9",{"_index":3168,"title":{},"body":{"injectables/ReviewsService.html":{}}}],["src/roles/dto/create.role.dto.ts",{"_index":2053,"title":{},"body":{"classes/CreateRoleDto.html":{}}}],["src/roles/dto/create.role.dto.ts:10",{"_index":2058,"title":{},"body":{"classes/CreateRoleDto.html":{}}}],["src/roles/dto/create.role.dto.ts:16",{"_index":2056,"title":{},"body":{"classes/CreateRoleDto.html":{}}}],["src/roles/models/roles.model.ts",{"_index":3194,"title":{},"body":{"classes/Role.html":{}}}],["src/roles/models/roles.model.ts:26",{"_index":3202,"title":{},"body":{"classes/Role.html":{}}}],["src/roles/models/roles.model.ts:34",{"_index":3206,"title":{},"body":{"classes/Role.html":{}}}],["src/roles/models/roles.model.ts:42",{"_index":3201,"title":{},"body":{"classes/Role.html":{}}}],["src/roles/models/roles.model.ts:44",{"_index":3204,"title":{},"body":{"classes/Role.html":{}}}],["src/roles/models/roles.model.ts:47",{"_index":3199,"title":{},"body":{"classes/Role.html":{}}}],["src/roles/models/roles.model.ts:50",{"_index":3203,"title":{},"body":{"classes/Role.html":{}}}],["src/roles/models/roles.model.ts:52",{"_index":3209,"title":{},"body":{"classes/Role.html":{}}}],["src/roles/models/roles.model.ts:56",{"_index":3207,"title":{},"body":{"classes/Role.html":{}}}],["src/roles/models/roles.model.ts:60",{"_index":3208,"title":{},"body":{"classes/Role.html":{}}}],["src/roles/models/user.roles.model.ts",{"_index":3511,"title":{},"body":{"classes/UserRoles.html":{}}}],["src/roles/models/user.roles.model.ts:25",{"_index":3514,"title":{},"body":{"classes/UserRoles.html":{}}}],["src/roles/models/user.roles.model.ts:32",{"_index":3517,"title":{},"body":{"classes/UserRoles.html":{}}}],["src/roles/models/user.roles.model.ts:39",{"_index":3519,"title":{},"body":{"classes/UserRoles.html":{}}}],["src/roles/models/user.roles.model.ts:47",{"_index":3513,"title":{},"body":{"classes/UserRoles.html":{}}}],["src/roles/models/user.roles.model.ts:55",{"_index":3515,"title":{},"body":{"classes/UserRoles.html":{}}}],["src/roles/roles.controller.ts",{"_index":3216,"title":{},"body":{"controllers/RolesController.html":{}}}],["src/roles/roles.controller.ts:48",{"_index":3224,"title":{},"body":{"controllers/RolesController.html":{}}}],["src/roles/roles.controller.ts:69",{"_index":3228,"title":{},"body":{"controllers/RolesController.html":{}}}],["src/roles/roles.module.ts",{"_index":3248,"title":{},"body":{"modules/RolesModule.html":{}}}],["src/roles/roles.module.ts:98",{"_index":3249,"title":{},"body":{"modules/RolesModule.html":{}}}],["src/roles/roles.service.ts",{"_index":3254,"title":{},"body":{"injectables/RolesService.html":{}}}],["src/roles/roles.service.ts:13",{"_index":3260,"title":{},"body":{"injectables/RolesService.html":{}}}],["src/roles/roles.service.ts:7",{"_index":3256,"title":{},"body":{"injectables/RolesService.html":{}}}],["src/roles/roles.service.ts:9",{"_index":3259,"title":{},"body":{"injectables/RolesService.html":{}}}],["src/telegram/telegram.interface.ts",{"_index":2256,"title":{},"body":{"interfaces/ITelegramModuleAsyncOptions.html":{},"interfaces/ITelegramOptions.html":{}}}],["src/telegram/telegram.module.ts",{"_index":3358,"title":{},"body":{"modules/TelegramModule.html":{}}}],["src/telegram/telegram.module.ts:19",{"_index":3361,"title":{},"body":{"modules/TelegramModule.html":{}}}],["src/telegram/telegram.module.ts:9",{"_index":3365,"title":{},"body":{"modules/TelegramModule.html":{}}}],["src/telegram/telegram.service.ts",{"_index":3379,"title":{},"body":{"injectables/TelegramService.html":{}}}],["src/telegram/telegram.service.ts:16",{"_index":3384,"title":{},"body":{"injectables/TelegramService.html":{}}}],["src/telegram/telegram.service.ts:8",{"_index":3387,"title":{},"body":{"injectables/TelegramService.html":{}}}],["src/telegram/telegram.service.ts:9",{"_index":3382,"title":{},"body":{"injectables/TelegramService.html":{}}}],["src/users/dto/add",{"_index":119,"title":{},"body":{"classes/AddRoleDto.html":{}}}],["src/users/dto/ban",{"_index":1455,"title":{},"body":{"classes/BanUserDto.html":{}}}],["src/users/dto/create",{"_index":2060,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/CreateUserRefreshTokenDto.html":{}}}],["src/users/dto/update",{"_index":3420,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["src/users/models/user.refresh.token.model.ts",{"_index":3489,"title":{},"body":{"classes/UserRefreshToken.html":{}}}],["src/users/models/user.refresh.token.model.ts:102",{"_index":3508,"title":{},"body":{"classes/UserRefreshToken.html":{}}}],["src/users/models/user.refresh.token.model.ts:107",{"_index":3503,"title":{},"body":{"classes/UserRefreshToken.html":{}}}],["src/users/models/user.refresh.token.model.ts:111",{"_index":3502,"title":{},"body":{"classes/UserRefreshToken.html":{}}}],["src/users/models/user.refresh.token.model.ts:115",{"_index":3506,"title":{},"body":{"classes/UserRefreshToken.html":{}}}],["src/users/models/user.refresh.token.model.ts:30",{"_index":3494,"title":{},"body":{"classes/UserRefreshToken.html":{}}}],["src/users/models/user.refresh.token.model.ts:40",{"_index":3492,"title":{},"body":{"classes/UserRefreshToken.html":{}}}],["src/users/models/user.refresh.token.model.ts:53",{"_index":3500,"title":{},"body":{"classes/UserRefreshToken.html":{}}}],["src/users/models/user.refresh.token.model.ts:64",{"_index":3498,"title":{},"body":{"classes/UserRefreshToken.html":{}}}],["src/users/models/user.refresh.token.model.ts:71",{"_index":3493,"title":{},"body":{"classes/UserRefreshToken.html":{}}}],["src/users/models/user.refresh.token.model.ts:84",{"_index":3495,"title":{},"body":{"classes/UserRefreshToken.html":{}}}],["src/users/models/user.refresh.token.model.ts:87",{"_index":3496,"title":{},"body":{"classes/UserRefreshToken.html":{}}}],["src/users/models/user.refresh.token.model.ts:89",{"_index":3501,"title":{},"body":{"classes/UserRefreshToken.html":{}}}],["src/users/models/user.refresh.token.model.ts:93",{"_index":3505,"title":{},"body":{"classes/UserRefreshToken.html":{}}}],["src/users/models/user.refresh.token.model.ts:98",{"_index":3504,"title":{},"body":{"classes/UserRefreshToken.html":{}}}],["src/users/services/jwt",{"_index":3446,"title":{},"body":{"injectables/UserJwtRefreshTokenService.html":{}}}],["src/users/services/users.service.ts",{"_index":3577,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/services/users.service.ts:109",{"_index":3610,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/services/users.service.ts:126",{"_index":3593,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/services/users.service.ts:150",{"_index":3596,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/services/users.service.ts:178",{"_index":3600,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/services/users.service.ts:192",{"_index":3598,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/services/users.service.ts:200",{"_index":3602,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/services/users.service.ts:208",{"_index":3588,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/services/users.service.ts:224",{"_index":3589,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/services/users.service.ts:239",{"_index":3612,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/services/users.service.ts:262",{"_index":3608,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/services/users.service.ts:270",{"_index":3605,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/services/users.service.ts:297",{"_index":3591,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/services/users.service.ts:30",{"_index":3585,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/services/users.service.ts:309",{"_index":3607,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/services/users.service.ts:36",{"_index":3595,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/services/users.service.ts:80",{"_index":3604,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.controller.ts",{"_index":3523,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.controller.ts:63",{"_index":3540,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.controller.ts:76",{"_index":3537,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.controller.ts:90",{"_index":3533,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.controller.ts:99",{"_index":3544,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.module.ts",{"_index":3566,"title":{},"body":{"modules/UsersModule.html":{}}}],["src/users/users.module.ts:108",{"_index":3567,"title":{},"body":{"modules/UsersModule.html":{}}}],["sse",{"_index":1041,"title":{},"body":{"controllers/AppController.html":{}}}],["sse('sse",{"_index":1058,"title":{},"body":{"controllers/AppController.html":{}}}],["stack",{"_index":908,"title":{},"body":{"classes/ApiErrorExceptionFilter.html":{},"classes/ApiExceptionFilter.html":{}}}],["stalledinterval",{"_index":1231,"title":{},"body":{"modules/AppModule.html":{}}}],["start",{"_index":3789,"title":{},"body":{"index.html":{}}}],["start:dev",{"_index":3792,"title":{},"body":{"index.html":{}}}],["start:prodtest",{"_index":3793,"title":{},"body":{"index.html":{}}}],["started",{"_index":996,"title":{"index.html":{}},"body":{"injectables/AppClusterService.html":{},"interfaces/Msg.html":{}}}],["starter",{"_index":3783,"title":{},"body":{"index.html":{}}}],["startserver",{"_index":3765,"title":{},"body":{"miscellaneous/functions.html":{}}}],["static",{"_index":912,"title":{},"body":{"classes/ApiException.html":{},"injectables/AppClusterService.html":{},"modules/AppModule.html":{},"injectables/FilesService.html":{},"interfaces/Msg.html":{},"injectables/OwnerService.html":{},"injectables/ParseJsonPipe.html":{},"classes/RequestValidator.html":{},"modules/TelegramModule.html":{},"dependencies.html":{},"interfaces/fileCreated.html":{}}}],["status",{"_index":243,"title":{},"body":{"controllers/AdminController.html":{},"classes/ApiErrorExceptionFilter.html":{},"classes/ApiException.html":{},"classes/ApiExceptionFilter.html":{},"controllers/AuthController.html":{},"controllers/CategoriesController.html":{},"controllers/ColoursController.html":{},"classes/HttpExceptionFilter.html":{},"controllers/RolesController.html":{},"controllers/UsersController.html":{}}}],["statuscode",{"_index":869,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"classes/ApiError.html":{},"classes/BadRequestError.html":{},"classes/HttpExceptionFilter.html":{},"classes/NotFoundError.html":{}}}],["stay",{"_index":3816,"title":{},"body":{"index.html":{}}}],["store",{"_index":1862,"title":{},"body":{"injectables/CorsMiddleware.html":{},"interfaces/RequestHeaders.html":{}}}],["strict",{"_index":1080,"title":{},"body":{"controllers/AppController.html":{},"injectables/InitializeUserMiddleware.html":{}}}],["string",{"_index":60,"title":{},"body":{"injectables/ActivateMiddleware.html":{},"classes/AddRoleDto.html":{},"controllers/AdminController.html":{},"guards/AdminGuard.html":{},"interfaces/AdminInterface.html":{},"injectables/AdminJwtRefreshService.html":{},"classes/AdminRefreshToken.html":{},"interfaces/AdminRefreshTokenCreationAttrbs.html":{},"injectables/AdminService.html":{},"interfaces/AdmincreationAttrbs.html":{},"classes/ApiError.html":{},"classes/ApiException.html":{},"injectables/AppClusterService.html":{},"controllers/AppController.html":{},"controllers/AuthController.html":{},"guards/AuthFerfershGuard.html":{},"interfaces/AuthUser.html":{},"classes/BadRequestError.html":{},"classes/BanUserDto.html":{},"classes/Cart.html":{},"injectables/CategoriesService.html":{},"classes/Category.html":{},"interfaces/CategoryCreationAtrb.html":{},"classes/ChangeDto.html":{},"interfaces/CodeDto.html":{},"classes/Colour.html":{},"interfaces/ColourCreationAtrb.html":{},"injectables/ColoursService.html":{},"injectables/CorsMiddleware.html":{},"classes/CreateAccessTokenDto.html":{},"classes/CreateAdminDto.html":{},"classes/CreateAdminRefreshTokenDto.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateColourDto.html":{},"classes/CreateOwnerDto.html":{},"classes/CreateOwnerRefreshTokenDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateReviewDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserRefreshTokenDto.html":{},"classes/Currencies.html":{},"injectables/CurrencyService.html":{},"injectables/FilesService.html":{},"interfaces/ITelegramModuleAsyncOptions.html":{},"interfaces/ITelegramOptions.html":{},"interfaces/InitializeUser.html":{},"classes/JwtRefreshTokenDeletedEvent.html":{},"classes/LoginDto.html":{},"injectables/MailService.html":{},"classes/MatchConstraint.html":{},"interfaces/Msg.html":{},"classes/Nested.html":{},"classes/Nested-1.html":{},"classes/NotFoundError.html":{},"classes/Order.html":{},"classes/Owner.html":{},"guards/OwnerAdminGuard.html":{},"interfaces/OwnerCreationAttrbs.html":{},"injectables/OwnerJwtRefreshService.html":{},"classes/OwnerRefreshToken.html":{},"interfaces/OwnerRefreshTokenCreationAttrbs.html":{},"injectables/OwnerService.html":{},"classes/ParseFormDataJsonPipe.html":{},"injectables/ParseJsonPipe.html":{},"interfaces/Payload.html":{},"classes/Product.html":{},"interfaces/ProductCreationAttrs.html":{},"classes/QueryFilterDto.html":{},"interfaces/RequestHeaders.html":{},"classes/RequestValidator.html":{},"classes/ResetDto.html":{},"interfaces/ReturnedAdmin.html":{},"interfaces/ReturnedCategory.html":{},"interfaces/ReturnedColour.html":{},"interfaces/ReturnedOwner.html":{},"interfaces/ReturnedProduct.html":{},"interfaces/ReturnedProducts.html":{},"interfaces/ReturnedReview.html":{},"interfaces/ReturnedUser.html":{},"classes/Review.html":{},"interfaces/ReviewCreationAtrb.html":{},"classes/Role.html":{},"interfaces/RolecreationAttrbs.html":{},"controllers/RolesController.html":{},"guards/RolesGuard.html":{},"injectables/RolesService.html":{},"classes/SignupDto.html":{},"injectables/TasksService.html":{},"injectables/TelegramService.html":{},"injectables/ThrottlerBehindProxyGuard.html":{},"interfaces/Tokens.html":{},"classes/UpdateCategoryDto.html":{},"classes/UpdateColourDto.html":{},"classes/UpdateProductDto.html":{},"classes/UpdateUserDto.html":{},"guards/UserGuard.html":{},"interfaces/UserInterface.html":{},"injectables/UserJwtRefreshTokenService.html":{},"interfaces/UserRefreshCreationAttrbs.html":{},"classes/UserRefreshToken.html":{},"interfaces/UsercreationAttrbs.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"interfaces/ValidateUser.html":{},"interfaces/fileCreated.html":{},"miscellaneous/functions.html":{}}}],["string,name",{"_index":3295,"title":{},"body":{"injectables/TasksService.html":{}}}],["style",{"_index":1878,"title":{},"body":{"injectables/CorsMiddleware.html":{},"injectables/MailService.html":{},"interfaces/RequestHeaders.html":{}}}],["subject",{"_index":2391,"title":{},"body":{"injectables/MailService.html":{}}}],["submitted",{"_index":2595,"title":{},"body":{"classes/Order.html":{}}}],["success",{"_index":906,"title":{},"body":{"classes/ApiErrorExceptionFilter.html":{},"classes/ApiExceptionFilter.html":{}}}],["summary",{"_index":242,"title":{},"body":{"controllers/AdminController.html":{},"controllers/AuthController.html":{},"controllers/CategoriesController.html":{},"controllers/ColoursController.html":{},"controllers/RolesController.html":{},"controllers/UsersController.html":{}}}],["sup",{"_index":2399,"title":{},"body":{"injectables/MailService.html":{}}}],["super(httpstatus.bad_request",{"_index":894,"title":{},"body":{"classes/ApiError.html":{},"classes/BadRequestError.html":{},"classes/NotFoundError.html":{}}}],["super(httpstatus.not_found",{"_index":889,"title":{},"body":{"classes/ApiError.html":{},"classes/BadRequestError.html":{},"classes/NotFoundError.html":{}}}],["super(message",{"_index":882,"title":{},"body":{"classes/ApiError.html":{},"classes/ApiException.html":{},"classes/BadRequestError.html":{},"classes/NotFoundError.html":{}}}],["super(response",{"_index":3682,"title":{},"body":{"classes/ValidationException.html":{}}}],["support",{"_index":3808,"title":{},"body":{"index.html":{},"modules.html":{}}}],["surname",{"_index":311,"title":{},"body":{"interfaces/AdminInterface.html":{},"interfaces/AdminRefreshTokenCreationAttrbs.html":{},"injectables/AdminService.html":{},"injectables/AdminUserMiddleware.html":{},"interfaces/AdmincreationAttrbs.html":{},"interfaces/AuthUser.html":{},"interfaces/CategoryCreationAtrb.html":{},"interfaces/CodeDto.html":{},"interfaces/ColourCreationAtrb.html":{},"classes/CreateAdminDto.html":{},"classes/CreateOwnerDto.html":{},"classes/CreateReviewDto.html":{},"classes/CreateUserDto.html":{},"interfaces/InitializeUser.html":{},"classes/Owner.html":{},"interfaces/OwnerCreationAttrbs.html":{},"interfaces/OwnerRefreshTokenCreationAttrbs.html":{},"injectables/OwnerService.html":{},"interfaces/Payload.html":{},"interfaces/ProductCreationAttrs.html":{},"interfaces/ReturnedAdmin.html":{},"interfaces/ReturnedCategory.html":{},"interfaces/ReturnedColour.html":{},"interfaces/ReturnedOwner.html":{},"interfaces/ReturnedProduct.html":{},"interfaces/ReturnedProducts.html":{},"interfaces/ReturnedReview.html":{},"interfaces/ReturnedUser.html":{},"classes/Review.html":{},"interfaces/ReviewCreationAtrb.html":{},"injectables/ReviewsService.html":{},"interfaces/RolecreationAttrbs.html":{},"classes/SignupDto.html":{},"injectables/TasksService.html":{},"interfaces/Tokens.html":{},"classes/UpdateUserDto.html":{},"injectables/UserAdminMiddleware.html":{},"interfaces/UserInterface.html":{},"interfaces/UserRefreshCreationAttrbs.html":{},"interfaces/UsercreationAttrbs.html":{},"injectables/UsersService.html":{},"interfaces/ValidateUser.html":{}}}],["surname'})@column({type",{"_index":2677,"title":{},"body":{"classes/Owner.html":{}}}],["surname'})@isstring()@minlength(2)@maxlength(30)@matches(/[a",{"_index":2071,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/SignupDto.html":{},"classes/UpdateUserDto.html":{}}}],["surname_validation",{"_index":2072,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/SignupDto.html":{},"classes/UpdateUserDto.html":{}}}],["svg",{"_index":3826,"title":{},"body":{"modules.html":{}}}],["swagger",{"_index":3754,"title":{},"body":{"dependencies.html":{}}}],["symbol",{"_index":2125,"title":{},"body":{"injectables/CurrencyService.html":{},"injectables/LocationMiddleware.html":{},"dependencies.html":{}}}],["synchronize",{"_index":1273,"title":{},"body":{"modules/AppModule.html":{}}}],["table",{"_index":653,"title":{},"body":{"classes/AdminRefreshToken.html":{},"classes/BookmarksProducts.html":{},"classes/Cart.html":{},"classes/CartProduct.html":{},"classes/Category.html":{},"classes/Colour.html":{},"classes/Currencies.html":{},"injectables/MailService.html":{},"classes/Order.html":{},"classes/OrderProduct.html":{},"classes/Owner.html":{},"classes/OwnerRefreshToken.html":{},"classes/Product.html":{},"classes/ProductCategories.html":{},"classes/ProductColours.html":{},"classes/ProductReviews.html":{},"classes/Review.html":{},"classes/Role.html":{},"classes/UserRefreshToken.html":{},"classes/UserRoles.html":{},"classes/WatchedProducts.html":{}}}],["table.es",{"_index":2507,"title":{},"body":{"injectables/MailService.html":{}}}],["tablename",{"_index":661,"title":{},"body":{"classes/AdminRefreshToken.html":{},"classes/BookmarksProducts.html":{},"classes/Cart.html":{},"classes/CartProduct.html":{},"classes/Category.html":{},"classes/Colour.html":{},"classes/Currencies.html":{},"classes/Order.html":{},"classes/OrderProduct.html":{},"classes/Owner.html":{},"classes/OwnerRefreshToken.html":{},"classes/Product.html":{},"classes/ProductCategories.html":{},"classes/ProductColours.html":{},"classes/ProductReviews.html":{},"classes/Review.html":{},"classes/Role.html":{},"classes/UserRefreshToken.html":{},"classes/UserRoles.html":{},"classes/WatchedProducts.html":{}}}],["target",{"_index":2553,"title":{},"body":{"classes/MatchConstraint.html":{}}}],["tasksservice",{"_index":334,"title":{"injectables/TasksService.html":{}},"body":{"injectables/AdminJwtRefreshService.html":{},"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CoreModule.html":{},"injectables/OwnerJwtRefreshService.html":{},"modules/OwnerModule.html":{},"modules/RolesModule.html":{},"injectables/TasksService.html":{},"injectables/UserJwtRefreshTokenService.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["td",{"_index":2460,"title":{},"body":{"injectables/MailService.html":{}}}],["td,.externalclass",{"_index":2409,"title":{},"body":{"injectables/MailService.html":{}}}],["td.es",{"_index":2506,"title":{},"body":{"injectables/MailService.html":{}}}],["telegraf",{"_index":3386,"title":{},"body":{"injectables/TelegramService.html":{},"dependencies.html":{}}}],["telegraf(options.token",{"_index":3390,"title":{},"body":{"injectables/TelegramService.html":{}}}],["telegram.constants",{"_index":3369,"title":{},"body":{"modules/TelegramModule.html":{},"injectables/TelegramService.html":{}}}],["telegram.interface",{"_index":3370,"title":{},"body":{"modules/TelegramModule.html":{},"injectables/TelegramService.html":{}}}],["telegram.service",{"_index":3372,"title":{},"body":{"modules/TelegramModule.html":{}}}],["telegram/telegram.config",{"_index":1181,"title":{},"body":{"modules/AppModule.html":{}}}],["telegram/telegram.module",{"_index":1179,"title":{},"body":{"modules/AppModule.html":{}}}],["telegram_module_options",{"_index":3368,"title":{},"body":{"modules/TelegramModule.html":{},"injectables/TelegramService.html":{}}}],["telegrammodule",{"_index":1159,"title":{"modules/TelegramModule.html":{}},"body":{"modules/AppModule.html":{},"modules/TelegramModule.html":{},"modules.html":{},"overview.html":{}}}],["telegrammodule.createasyncoptionsprovider(options",{"_index":3374,"title":{},"body":{"modules/TelegramModule.html":{}}}],["telegrammodule.forrootasync",{"_index":1206,"title":{},"body":{"modules/AppModule.html":{}}}],["telegramservice",{"_index":3371,"title":{"injectables/TelegramService.html":{}},"body":{"modules/TelegramModule.html":{},"injectables/TelegramService.html":{}}}],["test",{"_index":3796,"title":{},"body":{"index.html":{}}}],["test:covsupport",{"_index":3800,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":3798,"title":{},"body":{"index.html":{}}}],["tests",{"_index":3795,"title":{},"body":{"index.html":{}}}],["text",{"_index":2394,"title":{},"body":{"injectables/MailService.html":{}}}],["thanks",{"_index":3806,"title":{},"body":{"index.html":{}}}],["the&nbsp",{"_index":2527,"title":{},"body":{"injectables/MailService.html":{}}}],["this.activationcode",{"_index":2728,"title":{},"body":{"classes/Owner.html":{}}}],["this.admin",{"_index":675,"title":{},"body":{"classes/AdminRefreshToken.html":{}}}],["this.adminagent",{"_index":674,"title":{},"body":{"classes/AdminRefreshToken.html":{}}}],["this.adminid",{"_index":3024,"title":{},"body":{"classes/Product.html":{}}}],["this.adminjwtrefreshtokenservice.findtoken",{"_index":294,"title":{},"body":{"guards/AdminGuard.html":{}}}],["this.adminjwtrefreshtokenservice.findtoken(decodedtoken",{"_index":2291,"title":{},"body":{"injectables/InitializeUserMiddleware.html":{},"guards/OwnerAdminGuard.html":{}}}],["this.adminjwtrefreshtokenservice.validaterefreshtoken",{"_index":299,"title":{},"body":{"guards/AdminGuard.html":{},"guards/OwnerAdminGuard.html":{}}}],["this.adminrefreshtokenrepository.create",{"_index":406,"title":{},"body":{"injectables/AdminJwtRefreshService.html":{}}}],["this.adminrefreshtokenrepository.destroy",{"_index":450,"title":{},"body":{"injectables/AdminJwtRefreshService.html":{}}}],["this.adminrefreshtokenrepository.findone",{"_index":421,"title":{},"body":{"injectables/AdminJwtRefreshService.html":{}}}],["this.adminrepository.create(dto",{"_index":775,"title":{},"body":{"injectables/AdminService.html":{}}}],["this.adminrepository.destroy",{"_index":789,"title":{},"body":{"injectables/AdminService.html":{}}}],["this.adminrepository.findall",{"_index":742,"title":{},"body":{"injectables/AdminService.html":{}}}],["this.adminrepository.findbypk(id",{"_index":800,"title":{},"body":{"injectables/AdminService.html":{}}}],["this.adminrepository.findone",{"_index":792,"title":{},"body":{"injectables/AdminService.html":{}}}],["this.admins",{"_index":3213,"title":{},"body":{"classes/Role.html":{}}}],["this.adminservice.checkadmin(payload",{"_index":1388,"title":{},"body":{"guards/AuthFerfershGuard.html":{}}}],["this.adminservice.createadmin(admindto",{"_index":251,"title":{},"body":{"controllers/AdminController.html":{}}}],["this.adminservice.findadmin(v",{"_index":261,"title":{},"body":{"controllers/AdminController.html":{}}}],["this.adminservice.getadminbyemail(email",{"_index":844,"title":{},"body":{"injectables/AdminUserMiddleware.html":{},"injectables/InitializeEmailMiddleware.html":{}}}],["this.adminservice.getadminbyemail(tomail",{"_index":2536,"title":{},"body":{"injectables/MailService.html":{}}}],["this.adminservice.getadminbyid(adminid",{"_index":402,"title":{},"body":{"injectables/AdminJwtRefreshService.html":{}}}],["this.adminservice.getadminbyid(payload.userid",{"_index":113,"title":{},"body":{"guards/AddContentGuard.html":{},"guards/EditContentGuard.html":{},"guards/EditWebsiteGuard.html":{}}}],["this.adminservice.getadminbyid(token.adminid",{"_index":447,"title":{},"body":{"injectables/AdminJwtRefreshService.html":{}}}],["this.adminservice.getalladmins(page",{"_index":263,"title":{},"body":{"controllers/AdminController.html":{}}}],["this.adminservice.updateadmin(admindto",{"_index":255,"title":{},"body":{"controllers/AdminController.html":{}}}],["this.authservice.activate",{"_index":1378,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.changepassword",{"_index":1371,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.login",{"_index":1354,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.logout(response",{"_index":1360,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.refresh(response",{"_index":1358,"title":{},"body":{"controllers/AuthController.html":{},"controllers/UsersController.html":{}}}],["this.authservice.resetpassword(resetdto",{"_index":1368,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.setcode(codedto",{"_index":1364,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.signup",{"_index":1349,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.validateaccesstoken(decodedtoken",{"_index":2304,"title":{},"body":{"guards/JwtAuthGuard.html":{},"guards/RolesGuard.html":{}}}],["this.bot",{"_index":3389,"title":{},"body":{"injectables/TelegramService.html":{}}}],["this.bot.telegram.sendmessage(chatid",{"_index":3391,"title":{},"body":{"injectables/TelegramService.html":{}}}],["this.cart",{"_index":1543,"title":{},"body":{"classes/CartProduct.html":{}}}],["this.cartproducts",{"_index":1514,"title":{},"body":{"classes/Cart.html":{}}}],["this.carts",{"_index":3023,"title":{},"body":{"classes/Product.html":{}}}],["this.cartstatus",{"_index":1512,"title":{},"body":{"classes/Cart.html":{}}}],["this.categories",{"_index":3022,"title":{},"body":{"classes/Product.html":{}}}],["this.categoriesservice.createcategory(categorydto",{"_index":1607,"title":{},"body":{"controllers/CategoriesController.html":{}}}],["this.categoriesservice.deletecategory(categoryid",{"_index":1612,"title":{},"body":{"controllers/CategoriesController.html":{}}}],["this.categoriesservice.getcategories",{"_index":1605,"title":{},"body":{"controllers/CategoriesController.html":{}}}],["this.categoriesservice.updatecategory(categoryid",{"_index":1610,"title":{},"body":{"controllers/CategoriesController.html":{}}}],["this.categoryrepository.create",{"_index":1655,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["this.categoryrepository.destroy",{"_index":1657,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["this.categoryrepository.findall",{"_index":1639,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["this.categoryrepository.findbypk(categoryid",{"_index":1641,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["this.categoryrepository.findone",{"_index":1638,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["this.colourrepository.create",{"_index":1799,"title":{},"body":{"injectables/ColoursService.html":{}}}],["this.colourrepository.destroy",{"_index":1800,"title":{},"body":{"injectables/ColoursService.html":{}}}],["this.colourrepository.findall",{"_index":1782,"title":{},"body":{"injectables/ColoursService.html":{}}}],["this.colourrepository.findbypk(colourid",{"_index":1784,"title":{},"body":{"injectables/ColoursService.html":{}}}],["this.colourrepository.findone",{"_index":1781,"title":{},"body":{"injectables/ColoursService.html":{}}}],["this.colours",{"_index":3021,"title":{},"body":{"classes/Product.html":{}}}],["this.coloursservice.createcolour(colourdto",{"_index":1752,"title":{},"body":{"controllers/ColoursController.html":{}}}],["this.coloursservice.deletecolour(colourid",{"_index":1757,"title":{},"body":{"controllers/ColoursController.html":{}}}],["this.coloursservice.getcolours",{"_index":1749,"title":{},"body":{"controllers/ColoursController.html":{}}}],["this.coloursservice.updatecolour(colourid",{"_index":1755,"title":{},"body":{"controllers/ColoursController.html":{}}}],["this.confirmcode",{"_index":2724,"title":{},"body":{"classes/Owner.html":{}}}],["this.constructor",{"_index":886,"title":{},"body":{"classes/ApiError.html":{},"classes/BadRequestError.html":{},"classes/NotFoundError.html":{}}}],["this.create",{"_index":2904,"title":{},"body":{"injectables/OwnerService.html":{}}}],["this.createuser",{"_index":3625,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.currenciesrepository.findall",{"_index":2146,"title":{},"body":{"injectables/CurrencyService.html":{}}}],["this.currencyservice.getcurrentcurrency",{"_index":2337,"title":{},"body":{"injectables/LocationMiddleware.html":{}}}],["this.currencyservice.renewcurrencies",{"_index":3357,"title":{},"body":{"injectables/TasksService.html":{}}}],["this.currencyservice.setcurrencies(owner.id",{"_index":2884,"title":{},"body":{"injectables/OwnerService.html":{},"injectables/TasksService.html":{}}}],["this.deletecron",{"_index":3337,"title":{},"body":{"injectables/TasksService.html":{}}}],["this.deletecron('setting",{"_index":2885,"title":{},"body":{"injectables/OwnerService.html":{},"injectables/TasksService.html":{}}}],["this.deletetimeout(name",{"_index":3344,"title":{},"body":{"injectables/TasksService.html":{}}}],["this.description",{"_index":2316,"title":{},"body":{"classes/JwtRefreshTokenDeletedEvent.html":{},"classes/Product.html":{}}}],["this.email",{"_index":2721,"title":{},"body":{"classes/Owner.html":{}}}],["this.errors",{"_index":958,"title":{},"body":{"classes/ApiException.html":{}}}],["this.eventemitter.emit",{"_index":3348,"title":{},"body":{"injectables/TasksService.html":{}}}],["this.expiredate",{"_index":673,"title":{},"body":{"classes/AdminRefreshToken.html":{},"classes/OwnerRefreshToken.html":{},"classes/UserRefreshToken.html":{}}}],["this.findtoken(adminrefreshtoken",{"_index":446,"title":{},"body":{"injectables/AdminJwtRefreshService.html":{}}}],["this.findtoken(ownerrefreshtoken",{"_index":2787,"title":{},"body":{"injectables/OwnerJwtRefreshService.html":{}}}],["this.findtoken(userrefreshtoken",{"_index":3479,"title":{},"body":{"injectables/UserJwtRefreshTokenService.html":{}}}],["this.generateactivationcode",{"_index":432,"title":{},"body":{"injectables/AdminJwtRefreshService.html":{},"injectables/OwnerJwtRefreshService.html":{}}}],["this.generateencryptedvalue('admin",{"_index":430,"title":{},"body":{"injectables/AdminJwtRefreshService.html":{}}}],["this.generateencryptedvalue('owner",{"_index":2781,"title":{},"body":{"injectables/OwnerJwtRefreshService.html":{}}}],["this.generateencryptedvalue('user",{"_index":1073,"title":{},"body":{"controllers/AppController.html":{}}}],["this.getadminbyemail(admindto.email",{"_index":805,"title":{},"body":{"injectables/AdminService.html":{}}}],["this.getadminbyemail(codedto.email",{"_index":810,"title":{},"body":{"injectables/AdminService.html":{}}}],["this.getadminbyemail(dto.email",{"_index":767,"title":{},"body":{"injectables/AdminService.html":{}}}],["this.getadminbyemail(resetdto.email",{"_index":812,"title":{},"body":{"injectables/AdminService.html":{}}}],["this.getadminbyid(adminid",{"_index":820,"title":{},"body":{"injectables/AdminService.html":{}}}],["this.getadminbyid(payload.userid",{"_index":801,"title":{},"body":{"injectables/AdminService.html":{}}}],["this.getadminbyphonenumber(dto.phonenumber",{"_index":773,"title":{},"body":{"injectables/AdminService.html":{}}}],["this.getcurrencies(base",{"_index":1106,"title":{},"body":{"controllers/AppController.html":{}}}],["this.getownerbyemail(codedto.email",{"_index":2913,"title":{},"body":{"injectables/OwnerService.html":{}}}],["this.getownerbyemail(dto.email",{"_index":2902,"title":{},"body":{"injectables/OwnerService.html":{}}}],["this.getownerbyemail(ownerdto.email",{"_index":2908,"title":{},"body":{"injectables/OwnerService.html":{}}}],["this.getownerbyemail(resetdto.email",{"_index":2915,"title":{},"body":{"injectables/OwnerService.html":{}}}],["this.getownerbyid(ownerid",{"_index":2919,"title":{},"body":{"injectables/OwnerService.html":{}}}],["this.getownerbyid(payload.userid",{"_index":2911,"title":{},"body":{"injectables/OwnerService.html":{}}}],["this.getownerbyphonenumber(dto.phonenumber",{"_index":2901,"title":{},"body":{"injectables/OwnerService.html":{}}}],["this.getuserbyemail(codedto.email",{"_index":3658,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.getuserbyemail(resetdto.email",{"_index":3661,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.getuserbyemail(userdto.email",{"_index":3622,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.getuserbyid(userid",{"_index":3626,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.getuserbyphonenumber(userdto.phonenumber",{"_index":3623,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.httpadapterhost",{"_index":862,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["this.httpservice",{"_index":1118,"title":{},"body":{"controllers/AppController.html":{},"injectables/CurrencyService.html":{}}}],["this.identifier",{"_index":676,"title":{},"body":{"classes/AdminRefreshToken.html":{},"classes/OwnerRefreshToken.html":{},"classes/UserRefreshToken.html":{}}}],["this.isactivated",{"_index":2723,"title":{},"body":{"classes/Owner.html":{}}}],["this.isempty(headers",{"_index":1843,"title":{},"body":{"injectables/CorsMiddleware.html":{},"interfaces/RequestHeaders.html":{}}}],["this.jwtservice.sign(payload",{"_index":393,"title":{},"body":{"injectables/AdminJwtRefreshService.html":{},"injectables/OwnerJwtRefreshService.html":{},"injectables/UserJwtRefreshTokenService.html":{}}}],["this.jwtservice.verify(adminrefreshtoken",{"_index":401,"title":{},"body":{"injectables/AdminJwtRefreshService.html":{}}}],["this.jwtservice.verify(ownerrefreshtoken",{"_index":2764,"title":{},"body":{"injectables/OwnerJwtRefreshService.html":{}}}],["this.jwtservice.verify(userrefreshtoken",{"_index":3469,"title":{},"body":{"injectables/UserJwtRefreshTokenService.html":{}}}],["this.logger.debug('start",{"_index":2233,"title":{},"body":{"classes/GarbageCollectingProcessor.html":{}}}],["this.logger.debug('transcoding",{"_index":2236,"title":{},"body":{"classes/GarbageCollectingProcessor.html":{}}}],["this.logger.debug(job.data",{"_index":2235,"title":{},"body":{"classes/GarbageCollectingProcessor.html":{}}}],["this.logger.error(err",{"_index":1087,"title":{},"body":{"controllers/AppController.html":{},"injectables/LocationMiddleware.html":{}}}],["this.logger.error(error",{"_index":2142,"title":{},"body":{"injectables/CurrencyService.html":{}}}],["this.logger.error(error.response.data",{"_index":1131,"title":{},"body":{"controllers/AppController.html":{},"injectables/CurrencyService.html":{}}}],["this.logger.log",{"_index":439,"title":{},"body":{"injectables/AdminJwtRefreshService.html":{},"injectables/OwnerJwtRefreshService.html":{}}}],["this.logger.log('message",{"_index":2532,"title":{},"body":{"injectables/MailService.html":{}}}],["this.logger.log(`interval",{"_index":3341,"title":{},"body":{"injectables/TasksService.html":{}}}],["this.logger.log(`job",{"_index":3329,"title":{},"body":{"injectables/TasksService.html":{}}}],["this.logger.log(`timeout",{"_index":3342,"title":{},"body":{"injectables/TasksService.html":{}}}],["this.logger.log(geo",{"_index":1847,"title":{},"body":{"injectables/CorsMiddleware.html":{},"injectables/LocationMiddleware.html":{},"interfaces/RequestHeaders.html":{}}}],["this.logger.log(ipaddress",{"_index":1093,"title":{},"body":{"controllers/AppController.html":{},"injectables/CorsMiddleware.html":{},"interfaces/RequestHeaders.html":{}}}],["this.logger.log(req.headers['x",{"_index":1848,"title":{},"body":{"injectables/CorsMiddleware.html":{},"interfaces/RequestHeaders.html":{}}}],["this.logger.warn(`interval",{"_index":3330,"title":{},"body":{"injectables/TasksService.html":{}}}],["this.logger.warn(`job",{"_index":2887,"title":{},"body":{"injectables/OwnerService.html":{},"injectables/TasksService.html":{}}}],["this.logger.warn(`time",{"_index":2875,"title":{},"body":{"injectables/OwnerService.html":{},"injectables/TasksService.html":{}}}],["this.logger.warn(`timeout",{"_index":3350,"title":{},"body":{"injectables/TasksService.html":{}}}],["this.mailerservice.sendmail",{"_index":2389,"title":{},"body":{"injectables/MailService.html":{}}}],["this.mailservice.sendactivationmailtoadmin",{"_index":442,"title":{},"body":{"injectables/AdminJwtRefreshService.html":{}}}],["this.mailservice.sendactivationmailtoowner",{"_index":2785,"title":{},"body":{"injectables/OwnerJwtRefreshService.html":{}}}],["this.messages",{"_index":3683,"title":{},"body":{"classes/ValidationException.html":{}}}],["this.name",{"_index":2314,"title":{},"body":{"classes/JwtRefreshTokenDeletedEvent.html":{},"classes/Owner.html":{}}}],["this.options",{"_index":2936,"title":{},"body":{"classes/ParseFormDataJsonPipe.html":{},"injectables/TelegramService.html":{}}}],["this.options.chatid",{"_index":3385,"title":{},"body":{"injectables/TelegramService.html":{}}}],["this.order",{"_index":2613,"title":{},"body":{"classes/OrderProduct.html":{}}}],["this.orderproducts",{"_index":2598,"title":{},"body":{"classes/Order.html":{}}}],["this.orders",{"_index":3025,"title":{},"body":{"classes/Product.html":{}}}],["this.orderstatus",{"_index":2597,"title":{},"body":{"classes/Order.html":{}}}],["this.owner",{"_index":2099,"title":{},"body":{"classes/Currencies.html":{},"classes/OwnerRefreshToken.html":{},"classes/Product.html":{}}}],["this.owneragent",{"_index":2727,"title":{},"body":{"classes/Owner.html":{},"classes/OwnerRefreshToken.html":{}}}],["this.ownerid",{"_index":2100,"title":{},"body":{"classes/Currencies.html":{},"classes/OwnerRefreshToken.html":{},"classes/Product.html":{}}}],["this.ownerjwtrefreshtokenservice.findtoken(decodedtoken",{"_index":2290,"title":{},"body":{"injectables/InitializeUserMiddleware.html":{},"guards/OwnerAdminGuard.html":{}}}],["this.ownerjwtrefreshtokenservice.validaterefreshtoken",{"_index":2738,"title":{},"body":{"guards/OwnerAdminGuard.html":{}}}],["this.ownerrefreshtokenrepository.create",{"_index":2766,"title":{},"body":{"injectables/OwnerJwtRefreshService.html":{}}}],["this.ownerrefreshtokenrepository.destroy",{"_index":2790,"title":{},"body":{"injectables/OwnerJwtRefreshService.html":{}}}],["this.ownerrefreshtokenrepository.findone",{"_index":2773,"title":{},"body":{"injectables/OwnerJwtRefreshService.html":{}}}],["this.ownerrefreshtokens",{"_index":2729,"title":{},"body":{"classes/Owner.html":{}}}],["this.ownerrepository.create(dto",{"_index":2905,"title":{},"body":{"injectables/OwnerService.html":{}}}],["this.ownerrepository.findbypk(id",{"_index":2907,"title":{},"body":{"injectables/OwnerService.html":{}}}],["this.ownerrepository.findone",{"_index":73,"title":{},"body":{"injectables/ActivateMiddleware.html":{},"injectables/OwnerService.html":{}}}],["this.owners",{"_index":3214,"title":{},"body":{"classes/Role.html":{}}}],["this.ownerservice.checkowner(payload",{"_index":1387,"title":{},"body":{"guards/AuthFerfershGuard.html":{}}}],["this.ownerservice.getownerbyemail(email",{"_index":2269,"title":{},"body":{"injectables/InitializeEmailMiddleware.html":{}}}],["this.ownerservice.getownerbyemail(tomail",{"_index":2388,"title":{},"body":{"injectables/MailService.html":{}}}],["this.ownerservice.getownerbyid(ownerid",{"_index":2765,"title":{},"body":{"injectables/OwnerJwtRefreshService.html":{}}}],["this.ownerservice.getownerbyid(token.ownerid",{"_index":2788,"title":{},"body":{"injectables/OwnerJwtRefreshService.html":{}}}],["this.password",{"_index":2720,"title":{},"body":{"classes/Owner.html":{}}}],["this.phonenumber",{"_index":2722,"title":{},"body":{"classes/Owner.html":{}}}],["this.product",{"_index":1542,"title":{},"body":{"classes/CartProduct.html":{},"classes/OrderProduct.html":{}}}],["this.products",{"_index":1513,"title":{},"body":{"classes/Cart.html":{},"classes/Category.html":{},"classes/Colour.html":{},"classes/Owner.html":{}}}],["this.products.push(product",{"_index":2730,"title":{},"body":{"classes/Owner.html":{}}}],["this.productservice.findbyid(productid",{"_index":3176,"title":{},"body":{"injectables/ReviewsService.html":{}}}],["this.productservice.findbyid(review.productid",{"_index":3188,"title":{},"body":{"injectables/ReviewsService.html":{}}}],["this.rawerrors",{"_index":884,"title":{},"body":{"classes/ApiError.html":{},"classes/BadRequestError.html":{},"classes/NotFoundError.html":{}}}],["this.reflector.getallandoverride",{"_index":284,"title":{},"body":{"guards/AdminGuard.html":{},"guards/OwnerAdminGuard.html":{},"guards/RolesGuard.html":{},"guards/UserGuard.html":{}}}],["this.renewcurrencies",{"_index":2160,"title":{},"body":{"injectables/CurrencyService.html":{}}}],["this.resettoken",{"_index":2725,"title":{},"body":{"classes/Owner.html":{}}}],["this.resettokenexpiration",{"_index":2726,"title":{},"body":{"classes/Owner.html":{}}}],["this.reviewrepository.create(createdreviewdto",{"_index":3177,"title":{},"body":{"injectables/ReviewsService.html":{}}}],["this.reviewrepository.destroy",{"_index":3190,"title":{},"body":{"injectables/ReviewsService.html":{}}}],["this.reviewrepository.findbypk(reviewid",{"_index":3187,"title":{},"body":{"injectables/ReviewsService.html":{}}}],["this.reviewsservice.createreview(createreviewdto",{"_index":3150,"title":{},"body":{"controllers/ReviewsController.html":{}}}],["this.reviewsservice.deletereview(reviewid",{"_index":3153,"title":{},"body":{"controllers/ReviewsController.html":{}}}],["this.rewritepassword(admin",{"_index":819,"title":{},"body":{"injectables/AdminService.html":{}}}],["this.rewritepassword(owner",{"_index":2918,"title":{},"body":{"injectables/OwnerService.html":{}}}],["this.rewritepassword(user.id",{"_index":3664,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.rolerepository.create(dto",{"_index":3262,"title":{},"body":{"injectables/RolesService.html":{}}}],["this.rolerepository.findone",{"_index":3263,"title":{},"body":{"injectables/RolesService.html":{}}}],["this.roleservice.createrole",{"_index":778,"title":{},"body":{"injectables/AdminService.html":{},"injectables/OwnerService.html":{},"injectables/UsersService.html":{}}}],["this.roleservice.createrole(roledto",{"_index":3236,"title":{},"body":{"controllers/RolesController.html":{}}}],["this.roleservice.getrolebyvalue('admin",{"_index":776,"title":{},"body":{"injectables/AdminService.html":{}}}],["this.roleservice.getrolebyvalue('owner",{"_index":2906,"title":{},"body":{"injectables/OwnerService.html":{}}}],["this.roleservice.getrolebyvalue('user",{"_index":3638,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.roleservice.getrolebyvalue(dto.value",{"_index":3652,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.roleservice.getrolebyvalue(value",{"_index":3239,"title":{},"body":{"controllers/RolesController.html":{}}}],["this.schedulerregistry.addcronjob(name",{"_index":3318,"title":{},"body":{"injectables/TasksService.html":{}}}],["this.schedulerregistry.addinterval(name",{"_index":3335,"title":{},"body":{"injectables/TasksService.html":{}}}],["this.schedulerregistry.addtimeout(name",{"_index":3352,"title":{},"body":{"injectables/TasksService.html":{}}}],["this.schedulerregistry.deletecronjob(name",{"_index":2886,"title":{},"body":{"injectables/OwnerService.html":{},"injectables/TasksService.html":{}}}],["this.schedulerregistry.deleteinterval(name",{"_index":3336,"title":{},"body":{"injectables/TasksService.html":{}}}],["this.schedulerregistry.deletetimeout(name",{"_index":3353,"title":{},"body":{"injectables/TasksService.html":{}}}],["this.schedulerregistry.getcronjobs",{"_index":3324,"title":{},"body":{"injectables/TasksService.html":{}}}],["this.schedulerregistry.getintervals",{"_index":3339,"title":{},"body":{"injectables/TasksService.html":{}}}],["this.schedulerregistry.gettimeouts",{"_index":3355,"title":{},"body":{"injectables/TasksService.html":{}}}],["this.status",{"_index":957,"title":{},"body":{"classes/ApiException.html":{}}}],["this.statuscode",{"_index":883,"title":{},"body":{"classes/ApiError.html":{},"classes/BadRequestError.html":{},"classes/NotFoundError.html":{}}}],["this.surname",{"_index":2719,"title":{},"body":{"classes/Owner.html":{}}}],["this.title",{"_index":3010,"title":{},"body":{"classes/Product.html":{}}}],["this.user",{"_index":1515,"title":{},"body":{"classes/Cart.html":{},"classes/Order.html":{},"classes/UserRefreshToken.html":{}}}],["this.userid",{"_index":2315,"title":{},"body":{"classes/JwtRefreshTokenDeletedEvent.html":{},"classes/UserRefreshToken.html":{}}}],["this.userjwtrefreshtokenservice.findtoken",{"_index":2292,"title":{},"body":{"injectables/InitializeUserMiddleware.html":{},"guards/UserGuard.html":{}}}],["this.userjwtrefreshtokenservice.validaterefreshtoken",{"_index":3444,"title":{},"body":{"guards/UserGuard.html":{}}}],["this.userrefreshtokenrepository.create",{"_index":3471,"title":{},"body":{"injectables/UserJwtRefreshTokenService.html":{}}}],["this.userrefreshtokenrepository.destroy",{"_index":3482,"title":{},"body":{"injectables/UserJwtRefreshTokenService.html":{}}}],["this.userrefreshtokenrepository.findone",{"_index":3477,"title":{},"body":{"injectables/UserJwtRefreshTokenService.html":{}}}],["this.userrepository.create(dto",{"_index":3632,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.userrepository.findall",{"_index":3617,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.userrepository.findbypk(dto.userid",{"_index":3651,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.userrepository.findbypk(id",{"_index":3649,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.userrepository.findone",{"_index":3650,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.users",{"_index":3212,"title":{},"body":{"classes/Role.html":{}}}],["this.userservice.banuser(dto",{"_index":3559,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.userservice.finduser(v",{"_index":3556,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.userservice.getallusers(page",{"_index":3554,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.userservice.getuserbyemail(dto.email",{"_index":758,"title":{},"body":{"injectables/AdminService.html":{}}}],["this.userservice.getuserbyemail(email",{"_index":2272,"title":{},"body":{"injectables/InitializeEmailMiddleware.html":{},"injectables/UserAdminMiddleware.html":{}}}],["this.userservice.getuserbyemail(tomail",{"_index":2537,"title":{},"body":{"injectables/MailService.html":{}}}],["this.userservice.getuserbyid(payload.userid",{"_index":1389,"title":{},"body":{"guards/AuthFerfershGuard.html":{}}}],["this.userservice.getuserbyid(token.userid",{"_index":3480,"title":{},"body":{"injectables/UserJwtRefreshTokenService.html":{}}}],["this.userservice.getuserbyid(userid",{"_index":3470,"title":{},"body":{"injectables/UserJwtRefreshTokenService.html":{}}}],["this.userservice.rewritepassword(admin.userid",{"_index":817,"title":{},"body":{"injectables/AdminService.html":{}}}],["this.userservice.updateuser(userdto",{"_index":3562,"title":{},"body":{"controllers/UsersController.html":{}}}],["throttle",{"_index":221,"title":{},"body":{"controllers/AdminController.html":{},"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/CategoriesController.html":{},"controllers/ColoursController.html":{},"controllers/ReviewsController.html":{},"controllers/RolesController.html":{},"controllers/UsersController.html":{}}}],["throttle(20",{"_index":1047,"title":{},"body":{"controllers/AppController.html":{}}}],["throttle(40",{"_index":1351,"title":{},"body":{"controllers/AuthController.html":{},"controllers/UsersController.html":{}}}],["throttle(45",{"_index":1365,"title":{},"body":{"controllers/AuthController.html":{}}}],["throttle(50",{"_index":1346,"title":{},"body":{"controllers/AuthController.html":{}}}],["throttle(60",{"_index":244,"title":{},"body":{"controllers/AdminController.html":{},"controllers/UsersController.html":{}}}],["throttle(70",{"_index":252,"title":{},"body":{"controllers/AdminController.html":{},"controllers/AuthController.html":{},"controllers/CategoriesController.html":{},"controllers/ColoursController.html":{},"controllers/ReviewsController.html":{},"controllers/RolesController.html":{}}}],["throttle(700",{"_index":1586,"title":{},"body":{"controllers/CategoriesController.html":{},"controllers/ColoursController.html":{}}}],["throttlerbehindproxyguard",{"_index":208,"title":{"injectables/ThrottlerBehindProxyGuard.html":{}},"body":{"controllers/AdminController.html":{},"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/CategoriesController.html":{},"controllers/ColoursController.html":{},"modules/CoreModule.html":{},"controllers/ReviewsController.html":{},"controllers/RolesController.html":{},"injectables/ThrottlerBehindProxyGuard.html":{},"controllers/UsersController.html":{}}}],["throttlerguard",{"_index":1415,"title":{},"body":{"modules/AuthModule.html":{},"injectables/ThrottlerBehindProxyGuard.html":{}}}],["throttlermodule",{"_index":1165,"title":{},"body":{"modules/AppModule.html":{}}}],["throttlermodule.forroot",{"_index":1212,"title":{},"body":{"modules/AppModule.html":{}}}],["throw",{"_index":64,"title":{},"body":{"injectables/ActivateMiddleware.html":{},"guards/AddContentGuard.html":{},"guards/AdminGuard.html":{},"injectables/AdminJwtRefreshService.html":{},"injectables/AdminService.html":{},"injectables/AdminUserMiddleware.html":{},"classes/ApiException.html":{},"controllers/AppController.html":{},"controllers/AuthController.html":{},"guards/AuthFerfershGuard.html":{},"injectables/CategoriesService.html":{},"injectables/ColoursService.html":{},"injectables/CorsMiddleware.html":{},"injectables/CurrencyService.html":{},"guards/EditContentGuard.html":{},"guards/EditWebsiteGuard.html":{},"injectables/FilesService.html":{},"injectables/InitializeEmailMiddleware.html":{},"injectables/InitializeUserMiddleware.html":{},"guards/JwtAuthGuard.html":{},"injectables/MailService.html":{},"guards/OwnerAdminGuard.html":{},"injectables/OwnerJwtRefreshService.html":{},"injectables/OwnerService.html":{},"injectables/ParseJsonPipe.html":{},"guards/RefreshAuthGuard.html":{},"interfaces/RequestHeaders.html":{},"classes/RequestValidator.html":{},"controllers/ReviewsController.html":{},"controllers/RolesController.html":{},"guards/RolesGuard.html":{},"injectables/UserAdminMiddleware.html":{},"guards/UserGuard.html":{},"injectables/UserJwtRefreshTokenService.html":{},"injectables/UsersService.html":{},"injectables/ValidateDto.html":{},"interfaces/fileCreated.html":{}}}],["throwerror",{"_index":2245,"title":{},"body":{"injectables/GlobalInterceptor.html":{}}}],["time",{"_index":3289,"title":{},"body":{"injectables/TasksService.html":{}}}],["timeout",{"_index":1023,"title":{},"body":{"injectables/AppClusterService.html":{},"controllers/AppController.html":{},"injectables/GlobalInterceptor.html":{},"interfaces/Msg.html":{},"injectables/TasksService.html":{}}}],["timeout(1000).apply",{"_index":1107,"title":{},"body":{"controllers/AppController.html":{}}}],["timeout(5000",{"_index":2249,"title":{},"body":{"injectables/GlobalInterceptor.html":{}}}],["timeouterror",{"_index":2246,"title":{},"body":{"injectables/GlobalInterceptor.html":{}}}],["timeouts",{"_index":3354,"title":{},"body":{"injectables/TasksService.html":{}}}],["timeouts.foreach((key",{"_index":3356,"title":{},"body":{"injectables/TasksService.html":{}}}],["timestamp",{"_index":870,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"classes/ApiErrorExceptionFilter.html":{},"classes/ApiExceptionFilter.html":{},"classes/HttpExceptionFilter.html":{}}}],["title",{"_index":1680,"title":{},"body":{"interfaces/CategoryCreationAtrb.html":{},"interfaces/ColourCreationAtrb.html":{},"classes/CreateProductDto.html":{},"classes/Nested.html":{},"classes/Nested-1.html":{},"classes/Product.html":{},"interfaces/ProductCreationAttrs.html":{},"interfaces/ReturnedCategory.html":{},"interfaces/ReturnedColour.html":{},"interfaces/ReturnedProduct.html":{},"interfaces/ReturnedProducts.html":{},"interfaces/ReturnedReview.html":{},"interfaces/ReviewCreationAtrb.html":{},"classes/UpdateProductDto.html":{}}}],["tls",{"_index":2365,"title":{},"body":{"modules/MailModule.html":{}}}],["token",{"_index":405,"title":{},"body":{"injectables/AdminJwtRefreshService.html":{},"classes/AdminRefreshToken.html":{},"injectables/AppListener.html":{},"interfaces/ITelegramModuleAsyncOptions.html":{},"interfaces/ITelegramOptions.html":{},"classes/JwtRefreshTokenDeletedEvent.html":{},"injectables/OwnerJwtRefreshService.html":{},"classes/OwnerRefreshToken.html":{},"guards/RolesGuard.html":{},"injectables/TasksService.html":{},"injectables/UserJwtRefreshTokenService.html":{},"classes/UserRefreshToken.html":{}}}],["token'})@column({type",{"_index":619,"title":{},"body":{"classes/AdminRefreshToken.html":{},"classes/OwnerRefreshToken.html":{},"classes/UserRefreshToken.html":{}}}],["token.adminid",{"_index":452,"title":{},"body":{"injectables/AdminJwtRefreshService.html":{}}}],["token.dto",{"_index":379,"title":{},"body":{"injectables/AdminJwtRefreshService.html":{},"injectables/UserJwtRefreshTokenService.html":{}}}],["token.dto.ts",{"_index":1966,"title":{},"body":{"classes/CreateAdminRefreshTokenDto.html":{},"classes/CreateUserRefreshTokenDto.html":{}}}],["token.dto.ts:16",{"_index":1970,"title":{},"body":{"classes/CreateAdminRefreshTokenDto.html":{},"classes/CreateUserRefreshTokenDto.html":{}}}],["token.dto.ts:23",{"_index":1972,"title":{},"body":{"classes/CreateAdminRefreshTokenDto.html":{},"classes/CreateUserRefreshTokenDto.html":{}}}],["token.dto.ts:30",{"_index":2077,"title":{},"body":{"classes/CreateUserRefreshTokenDto.html":{}}}],["token.dto.ts:31",{"_index":1971,"title":{},"body":{"classes/CreateAdminRefreshTokenDto.html":{}}}],["token.dto.ts:40",{"_index":1969,"title":{},"body":{"classes/CreateAdminRefreshTokenDto.html":{}}}],["token.dto.ts:41",{"_index":2076,"title":{},"body":{"classes/CreateUserRefreshTokenDto.html":{}}}],["token.dto.ts:47",{"_index":1974,"title":{},"body":{"classes/CreateAdminRefreshTokenDto.html":{}}}],["token.getexpiredate",{"_index":410,"title":{},"body":{"injectables/AdminJwtRefreshService.html":{},"injectables/OwnerJwtRefreshService.html":{},"injectables/UserJwtRefreshTokenService.html":{}}}],["token.id",{"_index":416,"title":{},"body":{"injectables/AdminJwtRefreshService.html":{},"injectables/OwnerJwtRefreshService.html":{},"injectables/UserJwtRefreshTokenService.html":{}}}],["token.ownerid",{"_index":2791,"title":{},"body":{"injectables/OwnerJwtRefreshService.html":{}}}],["token.phonenumber",{"_index":454,"title":{},"body":{"injectables/AdminJwtRefreshService.html":{},"injectables/OwnerJwtRefreshService.html":{}}}],["token.save",{"_index":409,"title":{},"body":{"injectables/AdminJwtRefreshService.html":{},"injectables/OwnerJwtRefreshService.html":{},"injectables/UserJwtRefreshTokenService.html":{}}}],["token.setexpiredate(expiredate",{"_index":411,"title":{},"body":{"injectables/AdminJwtRefreshService.html":{},"injectables/OwnerJwtRefreshService.html":{},"injectables/UserJwtRefreshTokenService.html":{}}}],["token.setidentifier(v4",{"_index":408,"title":{},"body":{"injectables/AdminJwtRefreshService.html":{},"injectables/OwnerJwtRefreshService.html":{},"injectables/UserJwtRefreshTokenService.html":{}}}],["token.token.id",{"_index":449,"title":{},"body":{"injectables/AdminJwtRefreshService.html":{},"injectables/OwnerJwtRefreshService.html":{},"injectables/UserJwtRefreshTokenService.html":{}}}],["token.userid",{"_index":3484,"title":{},"body":{"injectables/UserJwtRefreshTokenService.html":{}}}],["token_invalid",{"_index":367,"title":{},"body":{"injectables/AdminJwtRefreshService.html":{},"classes/ApiException.html":{},"injectables/OwnerJwtRefreshService.html":{},"injectables/UserJwtRefreshTokenService.html":{}}}],["token_not_found",{"_index":368,"title":{},"body":{"injectables/AdminJwtRefreshService.html":{},"classes/ApiException.html":{},"injectables/OwnerJwtRefreshService.html":{},"injectables/UserJwtRefreshTokenService.html":{}}}],["tokendata",{"_index":420,"title":{},"body":{"injectables/AdminJwtRefreshService.html":{},"injectables/OwnerJwtRefreshService.html":{},"injectables/UserJwtRefreshTokenService.html":{}}}],["tokendata.adminrefreshtoken",{"_index":426,"title":{},"body":{"injectables/AdminJwtRefreshService.html":{}}}],["tokendata.ownerrefreshtoken",{"_index":2778,"title":{},"body":{"injectables/OwnerJwtRefreshService.html":{}}}],["tokendata.save",{"_index":425,"title":{},"body":{"injectables/AdminJwtRefreshService.html":{},"injectables/OwnerJwtRefreshService.html":{},"injectables/UserJwtRefreshTokenService.html":{}}}],["tokendata.setadminagent(adminagent",{"_index":424,"title":{},"body":{"injectables/AdminJwtRefreshService.html":{}}}],["tokendata.setowneragent(owneragent",{"_index":2776,"title":{},"body":{"injectables/OwnerJwtRefreshService.html":{}}}],["tokendata.userrefreshtoken",{"_index":3478,"title":{},"body":{"injectables/UserJwtRefreshTokenService.html":{}}}],["tokens",{"_index":663,"title":{"interfaces/Tokens.html":{}},"body":{"classes/AdminRefreshToken.html":{},"interfaces/AuthUser.html":{},"interfaces/CodeDto.html":{},"classes/OwnerRefreshToken.html":{},"interfaces/Payload.html":{},"interfaces/ReturnedAdmin.html":{},"interfaces/ReturnedOwner.html":{},"interfaces/ReturnedUser.html":{},"interfaces/Tokens.html":{},"classes/UserRefreshToken.html":{}}}],["tomail",{"_index":2378,"title":{},"body":{"injectables/MailService.html":{}}}],["top:0px!important",{"_index":2499,"title":{},"body":{"injectables/MailService.html":{}}}],["tostring('base64",{"_index":1133,"title":{},"body":{"controllers/AppController.html":{}}}],["totalprice",{"_index":1482,"title":{},"body":{"classes/Cart.html":{},"classes/Order.html":{}}}],["totalproducts",{"_index":1695,"title":{},"body":{"interfaces/CategoryCreationAtrb.html":{},"interfaces/ColourCreationAtrb.html":{},"interfaces/ProductCreationAttrs.html":{},"interfaces/ReturnedCategory.html":{},"interfaces/ReturnedColour.html":{},"interfaces/ReturnedProduct.html":{},"interfaces/ReturnedProducts.html":{},"interfaces/ReturnedReview.html":{},"interfaces/ReviewCreationAtrb.html":{}}}],["touch",{"_index":3817,"title":{},"body":{"index.html":{}}}],["tparseformdatajsonoptions",{"_index":2925,"title":{},"body":{"classes/ParseFormDataJsonPipe.html":{},"miscellaneous/typealiases.html":{}}}],["tr.es",{"_index":2505,"title":{},"body":{"injectables/MailService.html":{}}}],["trackofhttprequests",{"_index":973,"title":{},"body":{"injectables/AppClusterService.html":{},"interfaces/Msg.html":{}}}],["transcoding",{"_index":2234,"title":{},"body":{"classes/GarbageCollectingProcessor.html":{}}}],["transform",{"_index":2031,"title":{},"body":{"classes/CreateProductDto.html":{},"classes/Nested.html":{},"classes/Nested-1.html":{},"classes/ParseFormDataJsonPipe.html":{},"injectables/ParseJsonPipe.html":{},"classes/UpdateProductDto.html":{},"injectables/ValidateDto.html":{}}}],["transform((value",{"_index":2038,"title":{},"body":{"classes/CreateProductDto.html":{},"classes/Nested.html":{},"classes/Nested-1.html":{},"classes/UpdateProductDto.html":{}}}],["transform(value",{"_index":2927,"title":{},"body":{"classes/ParseFormDataJsonPipe.html":{},"injectables/ParseJsonPipe.html":{},"injectables/ValidateDto.html":{}}}],["transformer",{"_index":2032,"title":{},"body":{"classes/CreateProductDto.html":{},"classes/Nested.html":{},"classes/Nested-1.html":{},"classes/Owner.html":{},"classes/QueryFilterDto.html":{},"classes/RequestValidator.html":{},"classes/UpdateProductDto.html":{},"injectables/ValidateDto.html":{},"dependencies.html":{}}}],["transport",{"_index":1869,"title":{},"body":{"injectables/CorsMiddleware.html":{},"injectables/InitializeUserMiddleware.html":{},"modules/MailModule.html":{},"interfaces/RequestHeaders.html":{}}}],["trim()}?code=${code",{"_index":445,"title":{},"body":{"injectables/AdminJwtRefreshService.html":{},"injectables/OwnerJwtRefreshService.html":{}}}],["trouble_signing",{"_index":2386,"title":{},"body":{"injectables/MailService.html":{}}}],["trouble_signing[locale",{"_index":2539,"title":{},"body":{"injectables/MailService.html":{}}}],["true",{"_index":112,"title":{},"body":{"guards/AddContentGuard.html":{},"guards/AdminGuard.html":{},"modules/AdminModule.html":{},"classes/AdminRefreshToken.html":{},"injectables/AdminService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"guards/AuthFerfershGuard.html":{},"modules/AuthModule.html":{},"classes/BookmarksProducts.html":{},"classes/Cart.html":{},"modules/CartModule.html":{},"classes/CartProduct.html":{},"modules/CategoriesColoursModule.html":{},"classes/Category.html":{},"classes/Colour.html":{},"modules/CoreModule.html":{},"injectables/CorsMiddleware.html":{},"classes/CreateAccessTokenDto.html":{},"classes/CreateAdminRefreshTokenDto.html":{},"classes/CreateOwnerRefreshTokenDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateUserRefreshTokenDto.html":{},"classes/Currencies.html":{},"injectables/CurrencyService.html":{},"guards/EditContentGuard.html":{},"guards/EditWebsiteGuard.html":{},"injectables/FilesService.html":{},"guards/JwtAuthGuard.html":{},"modules/MailModule.html":{},"classes/Nested.html":{},"classes/Nested-1.html":{},"classes/Order.html":{},"classes/OrderProduct.html":{},"modules/OrdersModule.html":{},"classes/Owner.html":{},"guards/OwnerAdminGuard.html":{},"modules/OwnerModule.html":{},"classes/OwnerRefreshToken.html":{},"injectables/OwnerService.html":{},"classes/Product.html":{},"classes/ProductCategories.html":{},"classes/ProductColours.html":{},"modules/ProductModule.html":{},"classes/ProductReviews.html":{},"classes/QueryFilterDto.html":{},"guards/RefreshAuthGuard.html":{},"interfaces/RequestHeaders.html":{},"classes/RequestValidator.html":{},"classes/Review.html":{},"modules/ReviewsModule.html":{},"classes/Role.html":{},"guards/RolesGuard.html":{},"modules/RolesModule.html":{},"injectables/TasksService.html":{},"classes/UpdateProductDto.html":{},"guards/UserGuard.html":{},"classes/UserRefreshToken.html":{},"classes/UserRoles.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"classes/WatchedProducts.html":{},"interfaces/fileCreated.html":{}}}],["try",{"_index":57,"title":{},"body":{"injectables/ActivateMiddleware.html":{},"injectables/AdminJwtRefreshService.html":{},"injectables/AdminUserMiddleware.html":{},"controllers/AppController.html":{},"controllers/AuthController.html":{},"injectables/AuthMiddleware.html":{},"injectables/CurrencyService.html":{},"injectables/FilesService.html":{},"injectables/InitializeEmailMiddleware.html":{},"injectables/InitializeUserMiddleware.html":{},"guards/JwtAuthGuard.html":{},"injectables/LocationMiddleware.html":{},"injectables/MailService.html":{},"injectables/OwnerJwtRefreshService.html":{},"injectables/ParseJsonPipe.html":{},"injectables/ProductMiddleware.html":{},"controllers/ReviewsController.html":{},"controllers/RolesController.html":{},"guards/RolesGuard.html":{},"injectables/TasksService.html":{},"injectables/UserAdminMiddleware.html":{},"injectables/UserJwtRefreshTokenService.html":{},"injectables/UserMiddleware.html":{},"injectables/UserMiddleware-1.html":{},"interfaces/fileCreated.html":{}}}],["tslint:disable",{"_index":239,"title":{},"body":{"controllers/AdminController.html":{},"classes/AdminRefreshToken.html":{},"controllers/AuthController.html":{},"classes/CreateAdminRefreshTokenDto.html":{},"classes/CreateOwnerDto.html":{},"classes/CreateOwnerRefreshTokenDto.html":{},"injectables/FilesService.html":{},"classes/Owner.html":{},"classes/OwnerRefreshToken.html":{},"classes/RequestValidator.html":{},"controllers/RolesController.html":{},"interfaces/fileCreated.html":{}}}],["ttl",{"_index":1209,"title":{},"body":{"modules/AppModule.html":{}}}],["twitter",{"_index":3822,"title":{},"body":{"index.html":{}}}],["txt",{"_index":2468,"title":{},"body":{"injectables/MailService.html":{}}}],["type",{"_index":28,"title":{},"body":{"injectables/ActivateMiddleware.html":{},"guards/AddContentGuard.html":{},"classes/AddRoleDto.html":{},"controllers/AdminController.html":{},"guards/AdminGuard.html":{},"interfaces/AdminInterface.html":{},"injectables/AdminJwtRefreshService.html":{},"modules/AdminModule.html":{},"classes/AdminRefreshToken.html":{},"interfaces/AdminRefreshTokenCreationAttrbs.html":{},"injectables/AdminService.html":{},"injectables/AdminUserMiddleware.html":{},"interfaces/AdmincreationAttrbs.html":{},"classes/AllExceptionsFilter.html":{},"classes/ApiError.html":{},"classes/ApiErrorExceptionFilter.html":{},"classes/ApiException.html":{},"classes/ApiExceptionFilter.html":{},"injectables/AppClusterService.html":{},"controllers/AppController.html":{},"injectables/AppListener.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"guards/AuthFerfershGuard.html":{},"injectables/AuthMiddleware.html":{},"modules/AuthModule.html":{},"interfaces/AuthUser.html":{},"classes/BadRequestError.html":{},"classes/BanUserDto.html":{},"classes/BookmarksProducts.html":{},"classes/Cart.html":{},"classes/CartProduct.html":{},"modules/CategoriesColoursModule.html":{},"controllers/CategoriesController.html":{},"injectables/CategoriesService.html":{},"classes/Category.html":{},"interfaces/CategoryCreationAtrb.html":{},"classes/ChangeDto.html":{},"interfaces/CodeDto.html":{},"classes/Colour.html":{},"interfaces/ColourCreationAtrb.html":{},"controllers/ColoursController.html":{},"injectables/ColoursService.html":{},"injectables/CorsMiddleware.html":{},"classes/CreateAccessTokenDto.html":{},"classes/CreateAdminDto.html":{},"classes/CreateAdminRefreshTokenDto.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateColourDto.html":{},"classes/CreateOwnerDto.html":{},"classes/CreateOwnerRefreshTokenDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateReviewDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserRefreshTokenDto.html":{},"classes/Currencies.html":{},"injectables/CurrencyService.html":{},"guards/EditContentGuard.html":{},"guards/EditWebsiteGuard.html":{},"injectables/FilesService.html":{},"classes/GarbageCollectingProcessor.html":{},"injectables/GlobalInterceptor.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/ITelegramModuleAsyncOptions.html":{},"interfaces/ITelegramOptions.html":{},"injectables/InitializeEmailMiddleware.html":{},"interfaces/InitializeUser.html":{},"injectables/InitializeUserMiddleware.html":{},"guards/JwtAuthGuard.html":{},"classes/JwtRefreshTokenDeletedEvent.html":{},"injectables/LocationMiddleware.html":{},"classes/LoginDto.html":{},"injectables/MailService.html":{},"classes/MatchConstraint.html":{},"interfaces/Msg.html":{},"classes/Nested.html":{},"classes/Nested-1.html":{},"classes/NotFoundError.html":{},"classes/Order.html":{},"classes/OrderProduct.html":{},"classes/Owner.html":{},"guards/OwnerAdminGuard.html":{},"interfaces/OwnerCreationAttrbs.html":{},"injectables/OwnerJwtRefreshService.html":{},"classes/OwnerRefreshToken.html":{},"interfaces/OwnerRefreshTokenCreationAttrbs.html":{},"injectables/OwnerService.html":{},"classes/ParseFormDataJsonPipe.html":{},"injectables/ParseJsonPipe.html":{},"interfaces/Payload.html":{},"classes/Product.html":{},"classes/ProductCategories.html":{},"classes/ProductColours.html":{},"interfaces/ProductCreationAttrs.html":{},"injectables/ProductMiddleware.html":{},"modules/ProductModule.html":{},"classes/ProductReviews.html":{},"classes/QueryFilterDto.html":{},"guards/RefreshAuthGuard.html":{},"interfaces/RequestHeaders.html":{},"classes/ResetDto.html":{},"interfaces/ReturnedAdmin.html":{},"interfaces/ReturnedCategory.html":{},"interfaces/ReturnedColour.html":{},"interfaces/ReturnedOwner.html":{},"interfaces/ReturnedProduct.html":{},"interfaces/ReturnedProducts.html":{},"interfaces/ReturnedReview.html":{},"interfaces/ReturnedUser.html":{},"classes/Review.html":{},"interfaces/ReviewCreationAtrb.html":{},"controllers/ReviewsController.html":{},"modules/ReviewsModule.html":{},"injectables/ReviewsService.html":{},"classes/Role.html":{},"interfaces/RolecreationAttrbs.html":{},"controllers/RolesController.html":{},"guards/RolesGuard.html":{},"modules/RolesModule.html":{},"injectables/RolesService.html":{},"classes/SignupDto.html":{},"injectables/TasksService.html":{},"modules/TelegramModule.html":{},"injectables/TelegramService.html":{},"injectables/ThrottlerBehindProxyGuard.html":{},"interfaces/Tokens.html":{},"classes/UpdateCategoryDto.html":{},"classes/UpdateColourDto.html":{},"classes/UpdateProductDto.html":{},"classes/UpdateUserDto.html":{},"injectables/UserAdminMiddleware.html":{},"guards/UserGuard.html":{},"interfaces/UserInterface.html":{},"injectables/UserJwtRefreshTokenService.html":{},"injectables/UserMiddleware.html":{},"injectables/UserMiddleware-1.html":{},"interfaces/UserRefreshCreationAttrbs.html":{},"classes/UserRefreshToken.html":{},"classes/UserRoles.html":{},"interfaces/UsercreationAttrbs.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"injectables/ValidateDto.html":{},"interfaces/ValidateUser.html":{},"classes/WatchedProducts.html":{},"interfaces/fileCreated.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["type('activate",{"_index":1377,"title":{},"body":{"controllers/AuthController.html":{}}}],["type('codedto",{"_index":1362,"title":{},"body":{"controllers/AuthController.html":{}}}],["type('refreshtoken",{"_index":1357,"title":{},"body":{"controllers/AuthController.html":{}}}],["type(undefined)@isnumber",{"_index":2025,"title":{},"body":{"classes/CreateProductDto.html":{},"classes/UpdateProductDto.html":{}}}],["type.decorator",{"_index":1336,"title":{},"body":{"controllers/AuthController.html":{}}}],["typealiases",{"_index":3839,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typeof",{"_index":55,"title":{},"body":{"injectables/ActivateMiddleware.html":{},"injectables/AdminJwtRefreshService.html":{},"injectables/AdminService.html":{},"injectables/CategoriesService.html":{},"injectables/ColoursService.html":{},"injectables/CurrencyService.html":{},"injectables/OwnerJwtRefreshService.html":{},"injectables/OwnerService.html":{},"injectables/ReviewsService.html":{},"injectables/RolesService.html":{},"injectables/UserJwtRefreshTokenService.html":{},"injectables/UsersService.html":{}}}],["typescript",{"_index":659,"title":{},"body":{"classes/AdminRefreshToken.html":{},"controllers/AppController.html":{},"classes/BookmarksProducts.html":{},"classes/Cart.html":{},"classes/CartProduct.html":{},"classes/Category.html":{},"classes/Colour.html":{},"classes/Currencies.html":{},"classes/Order.html":{},"classes/OrderProduct.html":{},"classes/Owner.html":{},"classes/OwnerRefreshToken.html":{},"classes/Product.html":{},"classes/ProductCategories.html":{},"classes/ProductColours.html":{},"classes/ProductReviews.html":{},"classes/Review.html":{},"classes/Role.html":{},"classes/UserRefreshToken.html":{},"classes/UserRoles.html":{},"classes/WatchedProducts.html":{},"dependencies.html":{},"index.html":{}}}],["ua",{"_index":953,"title":{},"body":{"classes/ApiException.html":{},"controllers/AuthController.html":{},"injectables/CategoriesService.html":{},"classes/Category.html":{},"interfaces/CategoryCreationAtrb.html":{},"classes/Colour.html":{},"interfaces/ColourCreationAtrb.html":{},"injectables/ColoursService.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateColourDto.html":{},"classes/CreateProductDto.html":{},"injectables/MailService.html":{},"classes/Nested.html":{},"classes/Nested-1.html":{},"classes/Product.html":{},"interfaces/ProductCreationAttrs.html":{},"interfaces/ReturnedCategory.html":{},"interfaces/ReturnedColour.html":{},"interfaces/ReturnedProduct.html":{},"interfaces/ReturnedProducts.html":{},"interfaces/ReturnedReview.html":{},"interfaces/ReviewCreationAtrb.html":{},"classes/UpdateCategoryDto.html":{},"classes/UpdateColourDto.html":{},"classes/UpdateProductDto.html":{}}}],["ui",{"_index":3755,"title":{},"body":{"dependencies.html":{}}}],["ukraine",{"_index":3423,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["ul",{"_index":2445,"title":{},"body":{"injectables/MailService.html":{}}}],["unathorized",{"_index":110,"title":{},"body":{"guards/AddContentGuard.html":{},"guards/AdminGuard.html":{},"injectables/AdminService.html":{},"classes/ApiException.html":{},"guards/AuthFerfershGuard.html":{},"guards/EditContentGuard.html":{},"guards/EditWebsiteGuard.html":{},"guards/JwtAuthGuard.html":{},"guards/OwnerAdminGuard.html":{},"injectables/OwnerService.html":{},"guards/RefreshAuthGuard.html":{},"guards/RolesGuard.html":{},"guards/UserGuard.html":{},"injectables/UsersService.html":{}}}],["unauthorizederror",{"_index":916,"title":{},"body":{"classes/ApiException.html":{}}}],["unauthorizederror(type",{"_index":935,"title":{},"body":{"classes/ApiException.html":{}}}],["undefined",{"_index":111,"title":{},"body":{"guards/AddContentGuard.html":{},"classes/AdminRefreshToken.html":{},"injectables/AdminService.html":{},"controllers/AppController.html":{},"guards/AuthFerfershGuard.html":{},"classes/BookmarksProducts.html":{},"classes/Cart.html":{},"classes/CartProduct.html":{},"classes/Category.html":{},"classes/Colour.html":{},"classes/CreateProductDto.html":{},"classes/Currencies.html":{},"guards/EditContentGuard.html":{},"guards/EditWebsiteGuard.html":{},"classes/Order.html":{},"classes/OrderProduct.html":{},"classes/Owner.html":{},"guards/OwnerAdminGuard.html":{},"classes/OwnerRefreshToken.html":{},"injectables/OwnerService.html":{},"classes/Product.html":{},"classes/ProductCategories.html":{},"classes/ProductColours.html":{},"classes/ProductReviews.html":{},"classes/QueryFilterDto.html":{},"classes/Review.html":{},"classes/Role.html":{},"classes/UpdateProductDto.html":{},"classes/UserRefreshToken.html":{},"classes/UserRoles.html":{},"classes/WatchedProducts.html":{}}}],["undefined})@roles('owner')@useguards(jwtauthguard",{"_index":3538,"title":{},"body":{"controllers/UsersController.html":{}}}],["undefined})@throttle(60",{"_index":174,"title":{},"body":{"controllers/AdminController.html":{}}}],["unique",{"_index":129,"title":{},"body":{"classes/AddRoleDto.html":{},"classes/AdminRefreshToken.html":{},"classes/BanUserDto.html":{},"classes/BookmarksProducts.html":{},"classes/Cart.html":{},"classes/CartProduct.html":{},"classes/Category.html":{},"classes/Colour.html":{},"classes/CreateAccessTokenDto.html":{},"classes/CreateAdminRefreshTokenDto.html":{},"classes/CreateOwnerRefreshTokenDto.html":{},"classes/CreateUserRefreshTokenDto.html":{},"classes/Currencies.html":{},"classes/Order.html":{},"classes/OrderProduct.html":{},"classes/Owner.html":{},"classes/OwnerRefreshToken.html":{},"classes/Product.html":{},"classes/ProductCategories.html":{},"classes/ProductColours.html":{},"classes/ProductReviews.html":{},"classes/Review.html":{},"classes/Role.html":{},"classes/UserRefreshToken.html":{},"classes/UserRoles.html":{},"classes/WatchedProducts.html":{}}}],["unit",{"_index":3794,"title":{},"body":{"index.html":{}}}],["unknown",{"_index":31,"title":{},"body":{"injectables/ActivateMiddleware.html":{},"injectables/AdminJwtRefreshService.html":{},"injectables/AdminService.html":{},"injectables/AdminUserMiddleware.html":{},"controllers/AppController.html":{},"controllers/AuthController.html":{},"injectables/AuthMiddleware.html":{},"injectables/CurrencyService.html":{},"injectables/InitializeEmailMiddleware.html":{},"injectables/InitializeUserMiddleware.html":{},"injectables/MailService.html":{},"injectables/OwnerJwtRefreshService.html":{},"injectables/OwnerService.html":{},"injectables/ProductMiddleware.html":{},"injectables/ReviewsService.html":{},"injectables/TasksService.html":{},"injectables/UserAdminMiddleware.html":{},"injectables/UserJwtRefreshTokenService.html":{},"injectables/UserMiddleware.html":{},"injectables/UserMiddleware-1.html":{}}}],["unlicensed",{"_index":3837,"title":{},"body":{"properties.html":{}}}],["unlinkfile",{"_index":2172,"title":{},"body":{"injectables/FilesService.html":{}}}],["unlinkfile(filepath",{"_index":2183,"title":{},"body":{"injectables/FilesService.html":{},"interfaces/fileCreated.html":{}}}],["unreftimeout",{"_index":2866,"title":{},"body":{"injectables/OwnerService.html":{},"injectables/TasksService.html":{}}}],["unused",{"_index":1111,"title":{},"body":{"controllers/AppController.html":{}}}],["up",{"_index":1326,"title":{},"body":{"controllers/AuthController.html":{},"injectables/OwnerService.html":{},"injectables/TasksService.html":{}}}],["update",{"_index":3526,"title":{},"body":{"controllers/UsersController.html":{}}}],["update(response",{"_index":3541,"title":{},"body":{"controllers/UsersController.html":{}}}],["updateadmin",{"_index":151,"title":{},"body":{"controllers/AdminController.html":{},"injectables/AdminService.html":{}}}],["updateadmin(admindto",{"_index":177,"title":{},"body":{"controllers/AdminController.html":{}}}],["updateadmin(dto",{"_index":720,"title":{},"body":{"injectables/AdminService.html":{}}}],["updatecategory",{"_index":1571,"title":{},"body":{"controllers/CategoriesController.html":{},"injectables/CategoriesService.html":{}}}],["updatecategory(categoryid",{"_index":1589,"title":{},"body":{"controllers/CategoriesController.html":{},"injectables/CategoriesService.html":{}}}],["updatecategorydto",{"_index":1631,"title":{"classes/UpdateCategoryDto.html":{}},"body":{"injectables/CategoriesService.html":{},"classes/UpdateCategoryDto.html":{}}}],["updatecolour",{"_index":1729,"title":{},"body":{"controllers/ColoursController.html":{},"injectables/ColoursService.html":{}}}],["updatecolour(colourid",{"_index":1743,"title":{},"body":{"controllers/ColoursController.html":{},"injectables/ColoursService.html":{}}}],["updatecolourdto",{"_index":1775,"title":{"classes/UpdateColourDto.html":{}},"body":{"injectables/ColoursService.html":{},"classes/UpdateColourDto.html":{}}}],["updatedat",{"_index":746,"title":{},"body":{"injectables/AdminService.html":{},"classes/BookmarksProducts.html":{},"injectables/CategoriesService.html":{},"interfaces/CategoryCreationAtrb.html":{},"interfaces/ColourCreationAtrb.html":{},"injectables/ColoursService.html":{},"classes/ProductCategories.html":{},"classes/ProductColours.html":{},"interfaces/ProductCreationAttrs.html":{},"classes/ProductReviews.html":{},"interfaces/ReturnedCategory.html":{},"interfaces/ReturnedColour.html":{},"interfaces/ReturnedProduct.html":{},"interfaces/ReturnedProducts.html":{},"interfaces/ReturnedReview.html":{},"interfaces/ReviewCreationAtrb.html":{},"classes/UserRoles.html":{},"injectables/UsersService.html":{},"classes/WatchedProducts.html":{}}}],["updatedto",{"_index":1630,"title":{},"body":{"injectables/CategoriesService.html":{},"injectables/ColoursService.html":{}}}],["updatedto.en",{"_index":1666,"title":{},"body":{"injectables/CategoriesService.html":{},"injectables/ColoursService.html":{}}}],["updatedto.hex",{"_index":1802,"title":{},"body":{"injectables/ColoursService.html":{}}}],["updatedto.rs",{"_index":1665,"title":{},"body":{"injectables/CategoriesService.html":{},"injectables/ColoursService.html":{}}}],["updatedto.ru",{"_index":1664,"title":{},"body":{"injectables/CategoriesService.html":{},"injectables/ColoursService.html":{}}}],["updatedto.ua",{"_index":1663,"title":{},"body":{"injectables/CategoriesService.html":{},"injectables/ColoursService.html":{}}}],["updateproductdto",{"_index":2572,"title":{"classes/UpdateProductDto.html":{}},"body":{"classes/Nested-1.html":{},"classes/UpdateProductDto.html":{}}}],["updateuser",{"_index":3583,"title":{},"body":{"injectables/UsersService.html":{}}}],["updateuser(userdto",{"_index":3609,"title":{},"body":{"injectables/UsersService.html":{}}}],["updateuserdto",{"_index":3419,"title":{"classes/UpdateUserDto.html":{}},"body":{"classes/UpdateUserDto.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["updating",{"_index":178,"title":{},"body":{"controllers/AdminController.html":{}}}],["use",{"_index":10,"title":{},"body":{"injectables/ActivateMiddleware.html":{},"injectables/AdminUserMiddleware.html":{},"injectables/AuthMiddleware.html":{},"injectables/CorsMiddleware.html":{},"injectables/InitializeEmailMiddleware.html":{},"injectables/InitializeUserMiddleware.html":{},"injectables/LocationMiddleware.html":{},"injectables/ProductMiddleware.html":{},"injectables/UserAdminMiddleware.html":{},"injectables/UserMiddleware.html":{},"injectables/UserMiddleware-1.html":{}}}],["use(@req",{"_index":1393,"title":{},"body":{"injectables/AuthMiddleware.html":{},"injectables/CorsMiddleware.html":{},"injectables/LocationMiddleware.html":{},"injectables/ProductMiddleware.html":{},"interfaces/RequestHeaders.html":{},"injectables/UserMiddleware.html":{},"injectables/UserMiddleware-1.html":{}}}],["use(req",{"_index":21,"title":{},"body":{"injectables/ActivateMiddleware.html":{},"injectables/AdminUserMiddleware.html":{},"injectables/AuthMiddleware.html":{},"injectables/CorsMiddleware.html":{},"injectables/InitializeEmailMiddleware.html":{},"injectables/InitializeUserMiddleware.html":{},"injectables/LocationMiddleware.html":{},"injectables/ProductMiddleware.html":{},"injectables/UserAdminMiddleware.html":{},"injectables/UserMiddleware.html":{},"injectables/UserMiddleware-1.html":{}}}],["useclass",{"_index":1200,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CoreModule.html":{}}}],["usefactory",{"_index":1207,"title":{},"body":{"modules/AppModule.html":{},"interfaces/ITelegramModuleAsyncOptions.html":{},"interfaces/ITelegramOptions.html":{},"modules/TelegramModule.html":{}}}],["usefilters",{"_index":192,"title":{},"body":{"controllers/AdminController.html":{},"controllers/AuthController.html":{},"controllers/CardController.html":{},"controllers/CategoriesController.html":{},"controllers/ColoursController.html":{},"controllers/OrdersController.html":{},"controllers/ReviewsController.html":{},"controllers/RolesController.html":{},"controllers/UsersController.html":{}}}],["usefilters(apierrorexceptionfilter",{"_index":233,"title":{},"body":{"controllers/AdminController.html":{},"controllers/AuthController.html":{},"controllers/CardController.html":{},"controllers/CategoriesController.html":{},"controllers/ColoursController.html":{},"controllers/OrdersController.html":{},"controllers/ReviewsController.html":{},"controllers/RolesController.html":{},"controllers/UsersController.html":{}}}],["usefilters(apiexceptionfilter",{"_index":1350,"title":{},"body":{"controllers/AuthController.html":{}}}],["useguards",{"_index":185,"title":{},"body":{"controllers/AdminController.html":{},"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/CategoriesController.html":{},"controllers/ColoursController.html":{},"controllers/ReviewsController.html":{},"controllers/RolesController.html":{},"controllers/UsersController.html":{}}}],["useguards(jwtauthguard",{"_index":247,"title":{},"body":{"controllers/AdminController.html":{},"controllers/AuthController.html":{},"controllers/UsersController.html":{}}}],["useguards(refreshauthguard",{"_index":1355,"title":{},"body":{"controllers/AuthController.html":{}}}],["useguards(throttlerbehindproxyguard",{"_index":232,"title":{},"body":{"controllers/AdminController.html":{},"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/CategoriesController.html":{},"controllers/ColoursController.html":{},"controllers/ReviewsController.html":{},"controllers/RolesController.html":{},"controllers/UsersController.html":{}}}],["useinterceptors",{"_index":187,"title":{},"body":{"controllers/AdminController.html":{},"controllers/AuthController.html":{},"controllers/CategoriesController.html":{},"controllers/ColoursController.html":{},"controllers/ReviewsController.html":{},"controllers/RolesController.html":{},"controllers/UsersController.html":{}}}],["useinterceptors(cacheinterceptor",{"_index":1600,"title":{},"body":{"controllers/CategoriesController.html":{},"controllers/ColoursController.html":{},"controllers/ReviewsController.html":{},"controllers/RolesController.html":{}}}],["useinterceptors(classserializerinterceptor",{"_index":234,"title":{},"body":{"controllers/AdminController.html":{},"controllers/AuthController.html":{},"controllers/CategoriesController.html":{},"controllers/ColoursController.html":{},"controllers/UsersController.html":{}}}],["user",{"_index":132,"title":{},"body":{"classes/AddRoleDto.html":{},"controllers/AdminController.html":{},"modules/AdminModule.html":{},"injectables/AdminService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"guards/AuthFerfershGuard.html":{},"modules/AuthModule.html":{},"interfaces/AuthUser.html":{},"classes/BanUserDto.html":{},"classes/BookmarksProducts.html":{},"classes/Cart.html":{},"modules/CartModule.html":{},"modules/CategoriesColoursModule.html":{},"interfaces/CodeDto.html":{},"modules/CoreModule.html":{},"classes/CreateAccessTokenDto.html":{},"classes/CreateAdminDto.html":{},"classes/CreateAdminRefreshTokenDto.html":{},"classes/CreateOwnerRefreshTokenDto.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserRefreshTokenDto.html":{},"injectables/InitializeEmailMiddleware.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"classes/Order.html":{},"modules/OrdersModule.html":{},"modules/OwnerModule.html":{},"interfaces/Payload.html":{},"modules/ProductModule.html":{},"interfaces/ReturnedAdmin.html":{},"interfaces/ReturnedOwner.html":{},"interfaces/ReturnedUser.html":{},"modules/ReviewsModule.html":{},"classes/Role.html":{},"modules/RolesModule.html":{},"classes/SignupDto.html":{},"injectables/TasksService.html":{},"interfaces/Tokens.html":{},"injectables/UserAdminMiddleware.html":{},"injectables/UserJwtRefreshTokenService.html":{},"classes/UserRefreshToken.html":{},"classes/UserRoles.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"classes/WatchedProducts.html":{}}}],["user')@httpcode(200",{"_index":1056,"title":{},"body":{"controllers/AppController.html":{}}}],["user'})@apiresponse({status",{"_index":3530,"title":{},"body":{"controllers/UsersController.html":{}}}],["user'})@isarray",{"_index":1973,"title":{},"body":{"classes/CreateAdminRefreshTokenDto.html":{},"classes/CreateOwnerRefreshTokenDto.html":{},"classes/CreateUserRefreshTokenDto.html":{}}}],["user.$add('role",{"_index":3653,"title":{},"body":{"injectables/UsersService.html":{}}}],["user.$add('userrefreshtokens",{"_index":3476,"title":{},"body":{"injectables/UserJwtRefreshTokenService.html":{}}}],["user.$remove('userrefreshtokens",{"_index":3481,"title":{},"body":{"injectables/UserJwtRefreshTokenService.html":{}}}],["user.$set('roles",{"_index":3640,"title":{},"body":{"injectables/UsersService.html":{}}}],["user.$set('userrefreshtokens",{"_index":3474,"title":{},"body":{"injectables/UserJwtRefreshTokenService.html":{}}}],["user.banned",{"_index":3654,"title":{},"body":{"injectables/UsersService.html":{}}}],["user.banreason",{"_index":3655,"title":{},"body":{"injectables/UsersService.html":{}}}],["user.dto",{"_index":3548,"title":{},"body":{"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["user.dto.ts",{"_index":1456,"title":{},"body":{"classes/BanUserDto.html":{},"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{}}}],["user.dto.ts:11",{"_index":1460,"title":{},"body":{"classes/BanUserDto.html":{}}}],["user.dto.ts:16",{"_index":3426,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["user.dto.ts:25",{"_index":2064,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{}}}],["user.dto.ts:34",{"_index":2073,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{}}}],["user.dto.ts:42",{"_index":2069,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:43",{"_index":3425,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["user.dto.ts:52",{"_index":3428,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["user.dto.ts:53",{"_index":2061,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:66",{"_index":2065,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:7",{"_index":1461,"title":{},"body":{"classes/BanUserDto.html":{}}}],["user.email",{"_index":2273,"title":{},"body":{"injectables/InitializeEmailMiddleware.html":{},"injectables/MailService.html":{},"injectables/UsersService.html":{}}}],["user.getaddcontent",{"_index":3646,"title":{},"body":{"injectables/UsersService.html":{}}}],["user.getconfirmcode",{"_index":3663,"title":{},"body":{"injectables/UsersService.html":{}}}],["user.geteditcontent",{"_index":3647,"title":{},"body":{"injectables/UsersService.html":{}}}],["user.geteditwebsite",{"_index":3648,"title":{},"body":{"injectables/UsersService.html":{}}}],["user.getisadmin",{"_index":766,"title":{},"body":{"injectables/AdminService.html":{},"injectables/UsersService.html":{}}}],["user.getname",{"_index":3644,"title":{},"body":{"injectables/UsersService.html":{}}}],["user.getpassword",{"_index":3436,"title":{},"body":{"injectables/UserAdminMiddleware.html":{},"injectables/UsersService.html":{}}}],["user.getresettokenexpiration",{"_index":3662,"title":{},"body":{"injectables/UsersService.html":{}}}],["user.getsurname",{"_index":3645,"title":{},"body":{"injectables/UsersService.html":{}}}],["user.getuserrefreshtokens",{"_index":3472,"title":{},"body":{"injectables/UserJwtRefreshTokenService.html":{}}}],["user.getuserrefreshtokens().length",{"_index":3473,"title":{},"body":{"injectables/UserJwtRefreshTokenService.html":{}}}],["user.id",{"_index":782,"title":{},"body":{"injectables/AdminService.html":{},"injectables/UserJwtRefreshTokenService.html":{},"injectables/UsersService.html":{}}}],["user.middleware",{"_index":509,"title":{},"body":{"modules/AdminModule.html":{},"modules/AuthModule.html":{},"modules/CategoriesColoursModule.html":{},"modules/ProductModule.html":{},"modules/ReviewsModule.html":{},"modules/RolesModule.html":{},"modules/UsersModule.html":{}}}],["user.middleware.ts",{"_index":828,"title":{},"body":{"injectables/AdminUserMiddleware.html":{},"injectables/InitializeUserMiddleware.html":{}}}],["user.middleware.ts:17",{"_index":829,"title":{},"body":{"injectables/AdminUserMiddleware.html":{}}}],["user.middleware.ts:19",{"_index":830,"title":{},"body":{"injectables/AdminUserMiddleware.html":{},"injectables/InitializeUserMiddleware.html":{}}}],["user.middleware.ts:25",{"_index":2284,"title":{},"body":{"injectables/InitializeUserMiddleware.html":{}}}],["user.model",{"_index":3509,"title":{},"body":{"classes/UserRefreshToken.html":{}}}],["user.phonenumber",{"_index":3435,"title":{},"body":{"injectables/UserAdminMiddleware.html":{},"injectables/UsersService.html":{}}}],["user.roles",{"_index":3641,"title":{},"body":{"injectables/UsersService.html":{}}}],["user.roles.model",{"_index":3211,"title":{},"body":{"classes/Role.html":{}}}],["user.save",{"_index":764,"title":{},"body":{"injectables/AdminService.html":{},"injectables/UserJwtRefreshTokenService.html":{},"injectables/UsersService.html":{}}}],["user.setaddcontent(dto.addcontent",{"_index":761,"title":{},"body":{"injectables/AdminService.html":{}}}],["user.setaddcontent(false",{"_index":3635,"title":{},"body":{"injectables/UsersService.html":{}}}],["user.setcity(userdto.city",{"_index":3629,"title":{},"body":{"injectables/UsersService.html":{}}}],["user.setconfirmcode(code",{"_index":3659,"title":{},"body":{"injectables/UsersService.html":{}}}],["user.setcountry(userdto.country",{"_index":3630,"title":{},"body":{"injectables/UsersService.html":{}}}],["user.seteditcontent(dto.editcontent",{"_index":762,"title":{},"body":{"injectables/AdminService.html":{}}}],["user.seteditcontent(false",{"_index":3637,"title":{},"body":{"injectables/UsersService.html":{}}}],["user.seteditwebsite(dto.editwebsite",{"_index":763,"title":{},"body":{"injectables/AdminService.html":{}}}],["user.seteditwebsite(false",{"_index":3636,"title":{},"body":{"injectables/UsersService.html":{}}}],["user.setisactivated(false",{"_index":3633,"title":{},"body":{"injectables/UsersService.html":{}}}],["user.setisadmin(dto.isadmin",{"_index":760,"title":{},"body":{"injectables/AdminService.html":{}}}],["user.setisadmin(false",{"_index":3634,"title":{},"body":{"injectables/UsersService.html":{}}}],["user.setname(userdto.name",{"_index":3627,"title":{},"body":{"injectables/UsersService.html":{}}}],["user.setnewpasssword(hashedpassword",{"_index":3665,"title":{},"body":{"injectables/UsersService.html":{}}}],["user.setpostoffice(userdto.postoffice",{"_index":3631,"title":{},"body":{"injectables/UsersService.html":{}}}],["user.setresettokenexpiration(number(date.now",{"_index":3660,"title":{},"body":{"injectables/UsersService.html":{}}}],["user.setsurname(userdto.surname",{"_index":3628,"title":{},"body":{"injectables/UsersService.html":{}}}],["user.userrefreshtokens",{"_index":3475,"title":{},"body":{"injectables/UserJwtRefreshTokenService.html":{}}}],["user/find_users",{"_index":3576,"title":{},"body":{"modules/UsersModule.html":{}}}],["user/get_users",{"_index":3575,"title":{},"body":{"modules/UsersModule.html":{}}}],["user@gmail.com",{"_index":1904,"title":{},"body":{"classes/CreateAccessTokenDto.html":{},"classes/CreateAdminDto.html":{},"classes/CreateOwnerDto.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserRefreshTokenDto.html":{},"classes/LoginDto.html":{},"classes/ResetDto.html":{},"classes/SignupDto.html":{},"classes/UserRefreshToken.html":{}}}],["user_not_authorizied",{"_index":273,"title":{},"body":{"guards/AdminGuard.html":{},"guards/JwtAuthGuard.html":{},"guards/RolesGuard.html":{},"guards/UserGuard.html":{}}}],["user_not_detected",{"_index":97,"title":{},"body":{"guards/AddContentGuard.html":{},"guards/AuthFerfershGuard.html":{},"guards/EditContentGuard.html":{},"guards/EditWebsiteGuard.html":{},"guards/OwnerAdminGuard.html":{}}}],["user_not_found",{"_index":941,"title":{},"body":{"classes/ApiException.html":{},"guards/AuthFerfershGuard.html":{},"injectables/MailService.html":{},"injectables/UserAdminMiddleware.html":{},"injectables/UserJwtRefreshTokenService.html":{},"injectables/UsersService.html":{}}}],["user_or_role_not_found",{"_index":942,"title":{},"body":{"classes/ApiException.html":{},"injectables/UsersService.html":{}}}],["user_with_email_doesnt_exist",{"_index":925,"title":{},"body":{"classes/ApiException.html":{},"injectables/UsersService.html":{}}}],["user_with_email_exist",{"_index":923,"title":{},"body":{"classes/ApiException.html":{},"injectables/UsersService.html":{}}}],["user_with_email_not_found",{"_index":2268,"title":{},"body":{"injectables/InitializeEmailMiddleware.html":{}}}],["user_with_phonenumber_exist",{"_index":924,"title":{},"body":{"classes/ApiException.html":{},"injectables/UsersService.html":{}}}],["user`s",{"_index":1699,"title":{},"body":{"classes/ChangeDto.html":{},"classes/CreateAccessTokenDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserRefreshTokenDto.html":{},"classes/LoginDto.html":{},"classes/ResetDto.html":{},"classes/Role.html":{},"classes/SignupDto.html":{},"classes/UpdateUserDto.html":{},"classes/UserRefreshToken.html":{}}}],["user`s_refresh",{"_index":3510,"title":{},"body":{"classes/UserRefreshToken.html":{}}}],["user`s_roles",{"_index":3521,"title":{},"body":{"classes/UserRoles.html":{}}}],["useractivationlink",{"_index":1446,"title":{},"body":{"interfaces/AuthUser.html":{},"interfaces/CodeDto.html":{},"classes/CreateAccessTokenDto.html":{},"interfaces/Payload.html":{},"interfaces/ReturnedAdmin.html":{},"interfaces/ReturnedOwner.html":{},"interfaces/ReturnedUser.html":{},"interfaces/Tokens.html":{}}}],["useradminmiddleware",{"_index":521,"title":{"injectables/UserAdminMiddleware.html":{}},"body":{"modules/AdminModule.html":{},"injectables/UserAdminMiddleware.html":{}}}],["useragent",{"_index":613,"title":{},"body":{"classes/AdminRefreshToken.html":{},"controllers/AuthController.html":{},"injectables/AuthMiddleware.html":{},"interfaces/InitializeUser.html":{},"injectables/ProductMiddleware.html":{},"interfaces/RolecreationAttrbs.html":{},"interfaces/UserInterface.html":{},"injectables/UserJwtRefreshTokenService.html":{},"injectables/UserMiddleware.html":{},"injectables/UserMiddleware-1.html":{},"interfaces/UserRefreshCreationAttrbs.html":{},"interfaces/UsercreationAttrbs.html":{},"controllers/UsersController.html":{},"interfaces/ValidateUser.html":{}}}],["useragent('user",{"_index":1348,"title":{},"body":{"controllers/AuthController.html":{},"controllers/UsersController.html":{}}}],["usercreationattrbs",{"_index":2278,"title":{"interfaces/UsercreationAttrbs.html":{}},"body":{"interfaces/InitializeUser.html":{},"interfaces/RolecreationAttrbs.html":{},"interfaces/UserInterface.html":{},"interfaces/UserRefreshCreationAttrbs.html":{},"interfaces/UsercreationAttrbs.html":{},"interfaces/ValidateUser.html":{}}}],["userdata",{"_index":3468,"title":{},"body":{"injectables/UserJwtRefreshTokenService.html":{}}}],["userdto",{"_index":1310,"title":{},"body":{"controllers/AuthController.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["userdto.password",{"_index":3657,"title":{},"body":{"injectables/UsersService.html":{}}}],["userguard",{"_index":3437,"title":{"guards/UserGuard.html":{}},"body":{"guards/UserGuard.html":{},"controllers/UsersController.html":{}}}],["userguard)@httpcode(201)@patch('update",{"_index":3543,"title":{},"body":{"controllers/UsersController.html":{}}}],["userid",{"_index":122,"title":{},"body":{"classes/AddRoleDto.html":{},"interfaces/AdminInterface.html":{},"interfaces/AdminRefreshTokenCreationAttrbs.html":{},"injectables/AdminService.html":{},"interfaces/AdmincreationAttrbs.html":{},"controllers/AuthController.html":{},"interfaces/AuthUser.html":{},"classes/BanUserDto.html":{},"classes/BookmarksProducts.html":{},"classes/Cart.html":{},"interfaces/CodeDto.html":{},"classes/CreateAccessTokenDto.html":{},"classes/CreateUserRefreshTokenDto.html":{},"interfaces/InitializeUser.html":{},"classes/JwtRefreshTokenDeletedEvent.html":{},"classes/Order.html":{},"interfaces/Payload.html":{},"interfaces/ReturnedAdmin.html":{},"interfaces/ReturnedOwner.html":{},"interfaces/ReturnedUser.html":{},"interfaces/RolecreationAttrbs.html":{},"interfaces/Tokens.html":{},"interfaces/UserInterface.html":{},"injectables/UserJwtRefreshTokenService.html":{},"interfaces/UserRefreshCreationAttrbs.html":{},"classes/UserRefreshToken.html":{},"classes/UserRoles.html":{},"interfaces/UsercreationAttrbs.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"interfaces/ValidateUser.html":{},"classes/WatchedProducts.html":{}}}],["userid'})@foreignkey(undefined)@column({type",{"_index":3518,"title":{},"body":{"classes/UserRoles.html":{}}}],["userid'})@foreignkey(undefined)@isint()@column({type",{"_index":3497,"title":{},"body":{"classes/UserRefreshToken.html":{}}}],["userid('user",{"_index":1370,"title":{},"body":{"controllers/AuthController.html":{},"controllers/UsersController.html":{}}}],["userinterface",{"_index":2280,"title":{"interfaces/UserInterface.html":{}},"body":{"interfaces/InitializeUser.html":{},"interfaces/RolecreationAttrbs.html":{},"interfaces/UserInterface.html":{},"interfaces/UserRefreshCreationAttrbs.html":{},"interfaces/UsercreationAttrbs.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"interfaces/ValidateUser.html":{}}}],["userjwtrefreshtokenservice",{"_index":2282,"title":{"injectables/UserJwtRefreshTokenService.html":{}},"body":{"injectables/InitializeUserMiddleware.html":{},"modules/RolesModule.html":{},"guards/UserGuard.html":{},"injectables/UserJwtRefreshTokenService.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["usermiddleware",{"_index":3056,"title":{"injectables/UserMiddleware.html":{},"injectables/UserMiddleware-1.html":{}},"body":{"modules/ProductModule.html":{},"injectables/UserMiddleware.html":{},"injectables/UserMiddleware-1.html":{},"modules/UsersModule.html":{}}}],["username",{"_index":1266,"title":{},"body":{"modules/AppModule.html":{}}}],["username_validation",{"_index":2063,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/SignupDto.html":{},"classes/UpdateUserDto.html":{}}}],["usernotfound",{"_index":917,"title":{},"body":{"classes/ApiException.html":{}}}],["usernotfound(type",{"_index":940,"title":{},"body":{"classes/ApiException.html":{}}}],["userperpage",{"_index":3594,"title":{},"body":{"injectables/UsersService.html":{}}}],["userrefreshcreationattrbs",{"_index":2276,"title":{"interfaces/UserRefreshCreationAttrbs.html":{}},"body":{"interfaces/InitializeUser.html":{},"interfaces/RolecreationAttrbs.html":{},"interfaces/UserInterface.html":{},"interfaces/UserRefreshCreationAttrbs.html":{},"classes/UserRefreshToken.html":{},"interfaces/UsercreationAttrbs.html":{},"interfaces/ValidateUser.html":{}}}],["userrefreshtoken",{"_index":293,"title":{"classes/UserRefreshToken.html":{}},"body":{"guards/AdminGuard.html":{},"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CartModule.html":{},"modules/CategoriesColoursModule.html":{},"modules/CoreModule.html":{},"interfaces/InitializeUser.html":{},"injectables/InitializeUserMiddleware.html":{},"modules/MailModule.html":{},"modules/OrdersModule.html":{},"guards/OwnerAdminGuard.html":{},"modules/OwnerModule.html":{},"modules/ProductModule.html":{},"modules/ReviewsModule.html":{},"interfaces/RolecreationAttrbs.html":{},"modules/RolesModule.html":{},"guards/UserGuard.html":{},"interfaces/UserInterface.html":{},"injectables/UserJwtRefreshTokenService.html":{},"interfaces/UserRefreshCreationAttrbs.html":{},"classes/UserRefreshToken.html":{},"interfaces/UsercreationAttrbs.html":{},"modules/UsersModule.html":{},"interfaces/ValidateUser.html":{}}}],["userrefreshtoken.adminid",{"_index":297,"title":{},"body":{"guards/AdminGuard.html":{},"guards/OwnerAdminGuard.html":{}}}],["userrefreshtoken.findone",{"_index":3483,"title":{},"body":{"injectables/UserJwtRefreshTokenService.html":{}}}],["userrefreshtoken.ownerid",{"_index":2737,"title":{},"body":{"guards/OwnerAdminGuard.html":{}}}],["userrefreshtoken.userid",{"_index":3443,"title":{},"body":{"guards/UserGuard.html":{}}}],["userrefreshtokenid",{"_index":3460,"title":{},"body":{"injectables/UserJwtRefreshTokenService.html":{}}}],["userrefreshtokenrepository",{"_index":3447,"title":{},"body":{"injectables/UserJwtRefreshTokenService.html":{}}}],["userrepository",{"_index":3586,"title":{},"body":{"injectables/UsersService.html":{}}}],["userrole",{"_index":777,"title":{},"body":{"injectables/AdminService.html":{},"injectables/OwnerService.html":{},"injectables/UsersService.html":{}}}],["userrole.id",{"_index":784,"title":{},"body":{"injectables/AdminService.html":{},"injectables/OwnerService.html":{},"injectables/UsersService.html":{}}}],["userroles",{"_index":512,"title":{"classes/UserRoles.html":{}},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CartModule.html":{},"modules/CategoriesColoursModule.html":{},"modules/CoreModule.html":{},"modules/MailModule.html":{},"modules/OrdersModule.html":{},"classes/Owner.html":{},"modules/OwnerModule.html":{},"modules/ProductModule.html":{},"modules/ReviewsModule.html":{},"classes/Role.html":{},"modules/RolesModule.html":{},"classes/UserRoles.html":{},"modules/UsersModule.html":{}}}],["users",{"_index":1344,"title":{},"body":{"controllers/AuthController.html":{},"classes/Role.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["users'})@apiresponse({status",{"_index":1288,"title":{},"body":{"controllers/AuthController.html":{},"controllers/UsersController.html":{}}}],["users.controller",{"_index":3568,"title":{},"body":{"modules/UsersModule.html":{}}}],["users.length",{"_index":3642,"title":{},"body":{"injectables/UsersService.html":{}}}],["users.map((user",{"_index":3643,"title":{},"body":{"injectables/UsersService.html":{}}}],["users.push(user",{"_index":3621,"title":{},"body":{"injectables/UsersService.html":{}}}],["users.service",{"_index":3466,"title":{},"body":{"injectables/UserJwtRefreshTokenService.html":{}}}],["users/constants/jwt",{"_index":950,"title":{},"body":{"classes/ApiException.html":{}}}],["users/constants/user.constants",{"_index":951,"title":{},"body":{"classes/ApiException.html":{},"guards/AuthFerfershGuard.html":{},"injectables/MailService.html":{},"injectables/UserAdminMiddleware.html":{}}}],["users/models/user.model",{"_index":223,"title":{},"body":{"controllers/AdminController.html":{},"modules/AdminModule.html":{},"injectables/AdminService.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"classes/BookmarksProducts.html":{},"classes/Cart.html":{},"modules/CartModule.html":{},"modules/CategoriesColoursModule.html":{},"modules/CoreModule.html":{},"modules/MailModule.html":{},"classes/Order.html":{},"modules/OrdersModule.html":{},"modules/OwnerModule.html":{},"modules/ProductModule.html":{},"modules/ReviewsModule.html":{},"classes/Role.html":{},"modules/RolesModule.html":{},"classes/UserRoles.html":{},"classes/WatchedProducts.html":{}}}],["users/models/user.refresh.token.model",{"_index":520,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CartModule.html":{},"modules/CategoriesColoursModule.html":{},"modules/CoreModule.html":{},"modules/MailModule.html":{},"modules/OrdersModule.html":{},"modules/OwnerModule.html":{},"modules/ProductModule.html":{},"modules/ReviewsModule.html":{},"modules/RolesModule.html":{}}}],["users/services/jwt",{"_index":2285,"title":{},"body":{"injectables/InitializeUserMiddleware.html":{},"modules/RolesModule.html":{},"guards/UserGuard.html":{}}}],["users/services/users.service",{"_index":551,"title":{},"body":{"modules/AdminModule.html":{},"injectables/AdminService.html":{},"guards/AuthFerfershGuard.html":{},"injectables/InitializeEmailMiddleware.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"modules/OwnerModule.html":{},"modules/RolesModule.html":{},"injectables/UserAdminMiddleware.html":{}}}],["users/update",{"_index":3573,"title":{},"body":{"modules/UsersModule.html":{}}}],["users/users.module",{"_index":519,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CartModule.html":{},"modules/CategoriesColoursModule.html":{},"modules/CoreModule.html":{},"modules/MailModule.html":{},"modules/OrdersModule.html":{},"modules/ProductModule.html":{},"modules/ReviewsModule.html":{},"modules/RolesModule.html":{}}}],["userscontroller",{"_index":3522,"title":{"controllers/UsersController.html":{}},"body":{"controllers/UsersController.html":{},"modules/UsersModule.html":{}}}],["userservice",{"_index":689,"title":{},"body":{"injectables/AdminService.html":{},"guards/AuthFerfershGuard.html":{},"injectables/InitializeEmailMiddleware.html":{},"injectables/MailService.html":{},"injectables/UserAdminMiddleware.html":{},"injectables/UserJwtRefreshTokenService.html":{},"controllers/UsersController.html":{}}}],["usersmodule",{"_index":518,"title":{"modules/UsersModule.html":{}},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CartModule.html":{},"modules/CategoriesColoursModule.html":{},"modules/CoreModule.html":{},"modules/MailModule.html":{},"modules/OrdersModule.html":{},"modules/ProductModule.html":{},"modules/ReviewsModule.html":{},"modules/RolesModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["usersservice",{"_index":483,"title":{"injectables/UsersService.html":{}},"body":{"modules/AdminModule.html":{},"injectables/AdminService.html":{},"guards/AuthFerfershGuard.html":{},"injectables/InitializeEmailMiddleware.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"modules/OwnerModule.html":{},"modules/RolesModule.html":{},"injectables/UserAdminMiddleware.html":{},"injectables/UserJwtRefreshTokenService.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"overview.html":{}}}],["usertype",{"_index":2336,"title":{},"body":{"injectables/LocationMiddleware.html":{}}}],["user})@roles('owner')@useguards(jwtauthguard",{"_index":3535,"title":{},"body":{"controllers/UsersController.html":{}}}],["utcoffset",{"_index":2867,"title":{},"body":{"injectables/OwnerService.html":{},"injectables/TasksService.html":{}}}],["utf8",{"_index":1204,"title":{},"body":{"modules/AppModule.html":{},"modules/OwnerModule.html":{}}}],["util",{"_index":388,"title":{},"body":{"injectables/AdminJwtRefreshService.html":{},"controllers/AppController.html":{},"injectables/OwnerJwtRefreshService.html":{}}}],["uuid",{"_index":390,"title":{},"body":{"injectables/AdminJwtRefreshService.html":{},"controllers/AppController.html":{},"injectables/FilesService.html":{},"injectables/OwnerJwtRefreshService.html":{},"injectables/OwnerService.html":{},"injectables/UserAdminMiddleware.html":{},"injectables/UserJwtRefreshTokenService.html":{},"dependencies.html":{},"interfaces/fileCreated.html":{}}}],["uuid.v4",{"_index":2192,"title":{},"body":{"injectables/FilesService.html":{},"interfaces/fileCreated.html":{}}}],["v",{"_index":172,"title":{},"body":{"controllers/AdminController.html":{},"injectables/AdminService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["v.map((param",{"_index":739,"title":{},"body":{"injectables/AdminService.html":{},"injectables/UsersService.html":{}}}],["v4",{"_index":389,"title":{},"body":{"injectables/AdminJwtRefreshService.html":{},"controllers/AppController.html":{},"injectables/FilesService.html":{},"injectables/OwnerJwtRefreshService.html":{},"injectables/OwnerService.html":{},"injectables/UserAdminMiddleware.html":{},"injectables/UserJwtRefreshTokenService.html":{},"interfaces/fileCreated.html":{}}}],["v4()}`).replace",{"_index":435,"title":{},"body":{"injectables/AdminJwtRefreshService.html":{},"injectables/OwnerJwtRefreshService.html":{}}}],["valid",{"_index":1458,"title":{},"body":{"classes/BanUserDto.html":{}}}],["validate",{"_index":2544,"title":{},"body":{"classes/MatchConstraint.html":{},"classes/RequestValidator.html":{},"injectables/ValidateDto.html":{}}}],["validate(convertedobject).then((errors",{"_index":3104,"title":{},"body":{"classes/RequestValidator.html":{}}}],["validate(obj",{"_index":3673,"title":{},"body":{"injectables/ValidateDto.html":{}}}],["validate(value",{"_index":2545,"title":{},"body":{"classes/MatchConstraint.html":{}}}],["validateadmin",{"_index":688,"title":{},"body":{"injectables/AdminService.html":{}}}],["validateadmin(admindto",{"_index":722,"title":{},"body":{"injectables/AdminService.html":{}}}],["validatedto",{"_index":204,"title":{"injectables/ValidateDto.html":{}},"body":{"controllers/AdminController.html":{},"controllers/AuthController.html":{},"injectables/ValidateDto.html":{}}}],["validatenested",{"_index":3767,"title":{},"body":{"miscellaneous/functions.html":{}}}],["validatenested(schema",{"_index":3773,"title":{},"body":{"miscellaneous/functions.html":{}}}],["validateowner",{"_index":2837,"title":{},"body":{"injectables/OwnerService.html":{}}}],["validateowner(ownerdto",{"_index":2869,"title":{},"body":{"injectables/OwnerService.html":{}}}],["validaterefreshtoken",{"_index":330,"title":{},"body":{"injectables/AdminJwtRefreshService.html":{},"injectables/OwnerJwtRefreshService.html":{},"injectables/UserJwtRefreshTokenService.html":{}}}],["validaterefreshtoken(adminrefreshtoken",{"_index":362,"title":{},"body":{"injectables/AdminJwtRefreshService.html":{}}}],["validaterefreshtoken(ownerrefreshtoken",{"_index":2757,"title":{},"body":{"injectables/OwnerJwtRefreshService.html":{}}}],["validaterefreshtoken(userrefreshtoken",{"_index":3463,"title":{},"body":{"injectables/UserJwtRefreshTokenService.html":{}}}],["validateuser",{"_index":2279,"title":{"interfaces/ValidateUser.html":{}},"body":{"interfaces/InitializeUser.html":{},"interfaces/RolecreationAttrbs.html":{},"interfaces/UserInterface.html":{},"interfaces/UserRefreshCreationAttrbs.html":{},"interfaces/UsercreationAttrbs.html":{},"injectables/UsersService.html":{},"interfaces/ValidateUser.html":{}}}],["validateuser(userdto",{"_index":3611,"title":{},"body":{"injectables/UsersService.html":{}}}],["validation",{"_index":3110,"title":{},"body":{"classes/RequestValidator.html":{}}}],["validationarguments",{"_index":2546,"title":{},"body":{"classes/MatchConstraint.html":{}}}],["validationerrortext",{"_index":3109,"title":{},"body":{"classes/RequestValidator.html":{}}}],["validationexception",{"_index":3669,"title":{"classes/ValidationException.html":{}},"body":{"injectables/ValidateDto.html":{},"classes/ValidationException.html":{}}}],["validationexception(messages",{"_index":3678,"title":{},"body":{"injectables/ValidateDto.html":{}}}],["validationoptions",{"_index":2549,"title":{},"body":{"classes/MatchConstraint.html":{},"miscellaneous/functions.html":{}}}],["validator",{"_index":140,"title":{},"body":{"classes/AddRoleDto.html":{},"classes/BanUserDto.html":{},"classes/ChangeDto.html":{},"classes/CreateAccessTokenDto.html":{},"classes/CreateAdminDto.html":{},"classes/CreateAdminRefreshTokenDto.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateColourDto.html":{},"classes/CreateOwnerDto.html":{},"classes/CreateOwnerRefreshTokenDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateReviewDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserRefreshTokenDto.html":{},"classes/LoginDto.html":{},"classes/MatchConstraint.html":{},"classes/Nested.html":{},"classes/Nested-1.html":{},"classes/QueryFilterDto.html":{},"classes/RequestValidator.html":{},"classes/ResetDto.html":{},"classes/SignupDto.html":{},"classes/UpdateCategoryDto.html":{},"classes/UpdateColourDto.html":{},"classes/UpdateProductDto.html":{},"classes/UpdateUserDto.html":{},"injectables/ValidateDto.html":{},"dependencies.html":{}}}],["validator.pipe",{"_index":526,"title":{},"body":{"modules/AdminModule.html":{},"modules/AuthModule.html":{},"modules/ReviewsModule.html":{},"modules/UsersModule.html":{}}}],["validator.pipe.ts",{"_index":3096,"title":{},"body":{"classes/RequestValidator.html":{}}}],["validator.pipe.ts:6",{"_index":3097,"title":{},"body":{"classes/RequestValidator.html":{}}}],["validatorconstraint",{"_index":2550,"title":{},"body":{"classes/MatchConstraint.html":{}}}],["validatorconstraintinterface",{"_index":2543,"title":{},"body":{"classes/MatchConstraint.html":{}}}],["value",{"_index":123,"title":{},"body":{"classes/AddRoleDto.html":{},"guards/AdminGuard.html":{},"injectables/AdminJwtRefreshService.html":{},"injectables/AdminService.html":{},"classes/ApiError.html":{},"injectables/AppClusterService.html":{},"controllers/AppController.html":{},"classes/BadRequestError.html":{},"injectables/CategoriesService.html":{},"injectables/ColoursService.html":{},"injectables/CorsMiddleware.html":{},"classes/CreateRoleDto.html":{},"injectables/CurrencyService.html":{},"classes/GarbageCollectingProcessor.html":{},"interfaces/InitializeUser.html":{},"injectables/LocationMiddleware.html":{},"injectables/MailService.html":{},"classes/MatchConstraint.html":{},"classes/NotFoundError.html":{},"guards/OwnerAdminGuard.html":{},"injectables/OwnerJwtRefreshService.html":{},"injectables/OwnerService.html":{},"classes/ParseFormDataJsonPipe.html":{},"injectables/ParseJsonPipe.html":{},"classes/QueryFilterDto.html":{},"classes/RequestValidator.html":{},"injectables/ReviewsService.html":{},"classes/Role.html":{},"interfaces/RolecreationAttrbs.html":{},"controllers/RolesController.html":{},"guards/RolesGuard.html":{},"injectables/RolesService.html":{},"injectables/TasksService.html":{},"injectables/TelegramService.html":{},"guards/UserGuard.html":{},"interfaces/UserInterface.html":{},"interfaces/UserRefreshCreationAttrbs.html":{},"interfaces/UsercreationAttrbs.html":{},"injectables/UsersService.html":{},"injectables/ValidateDto.html":{},"interfaces/ValidateUser.html":{}}}],["value'})@isstring",{"_index":134,"title":{},"body":{"classes/AddRoleDto.html":{}}}],["value.nextdates().tojsdate",{"_index":3326,"title":{},"body":{"injectables/TasksService.html":{}}}],["value.obj",{"_index":2040,"title":{},"body":{"classes/CreateProductDto.html":{},"classes/Nested.html":{},"classes/Nested-1.html":{},"classes/UpdateProductDto.html":{}}}],["vars",{"_index":1112,"title":{},"body":{"controllers/AppController.html":{}}}],["verbosememoryleak",{"_index":1825,"title":{},"body":{"modules/CoreModule.html":{}}}],["version",{"_index":3835,"title":{},"body":{"properties.html":{}}}],["void",{"_index":495,"title":{},"body":{"modules/AdminModule.html":{},"classes/AllExceptionsFilter.html":{},"classes/ApiErrorExceptionFilter.html":{},"classes/ApiException.html":{},"classes/ApiExceptionFilter.html":{},"injectables/AppClusterService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"modules/CategoriesColoursModule.html":{},"injectables/FilesService.html":{},"classes/GarbageCollectingProcessor.html":{},"classes/HttpExceptionFilter.html":{},"classes/JwtRefreshTokenDeletedEvent.html":{},"injectables/LocationMiddleware.html":{},"injectables/OwnerService.html":{},"modules/ProductModule.html":{},"modules/ReviewsModule.html":{},"modules/RolesModule.html":{},"injectables/TasksService.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"interfaces/fileCreated.html":{}}}],["watch",{"_index":3790,"title":{},"body":{"index.html":{}}}],["watchedproducts",{"_index":1194,"title":{"classes/WatchedProducts.html":{}},"body":{"modules/AppModule.html":{},"modules/ProductModule.html":{},"modules/UsersModule.html":{},"classes/WatchedProducts.html":{}}}],["webkit",{"_index":1891,"title":{},"body":{"injectables/CorsMiddleware.html":{},"interfaces/RequestHeaders.html":{}}}],["website",{"_index":1965,"title":{},"body":{"classes/CreateAdminDto.html":{},"injectables/MailService.html":{},"injectables/OwnerService.html":{},"index.html":{}}}],["website'})@isboolean",{"_index":1935,"title":{},"body":{"classes/CreateAdminDto.html":{}}}],["website.guard.ts",{"_index":2164,"title":{},"body":{"guards/EditWebsiteGuard.html":{}}}],["website.guard.ts:19",{"_index":2165,"title":{},"body":{"guards/EditWebsiteGuard.html":{}}}],["website.guard.ts:22",{"_index":2166,"title":{},"body":{"guards/EditWebsiteGuard.html":{}}}],["weight:inherit!important",{"_index":2422,"title":{},"body":{"injectables/MailService.html":{}}}],["width:0",{"_index":2429,"title":{},"body":{"injectables/MailService.html":{}}}],["width:0!important",{"_index":2435,"title":{},"body":{"injectables/MailService.html":{}}}],["width:1%!important",{"_index":2516,"title":{},"body":{"injectables/MailService.html":{}}}],["width:100%!important",{"_index":2487,"title":{},"body":{"injectables/MailService.html":{}}}],["width:100%;}.externalclass,.externalclass",{"_index":2405,"title":{},"body":{"injectables/MailService.html":{}}}],["width:10px",{"_index":2482,"title":{},"body":{"injectables/MailService.html":{}}}],["width:15px",{"_index":2478,"title":{},"body":{"injectables/MailService.html":{}}}],["width:600px",{"_index":2443,"title":{},"body":{"injectables/MailService.html":{}}}],["width:600px!important",{"_index":2488,"title":{},"body":{"injectables/MailService.html":{}}}],["width:auto!important",{"_index":2508,"title":{},"body":{"injectables/MailService.html":{}}}],["wildcard",{"_index":1820,"title":{},"body":{"modules/CoreModule.html":{}}}],["win32",{"_index":602,"title":{},"body":{"classes/AdminRefreshToken.html":{},"classes/CreateAdminRefreshTokenDto.html":{},"classes/CreateOwnerDto.html":{},"classes/CreateOwnerRefreshTokenDto.html":{},"classes/Owner.html":{},"classes/OwnerRefreshToken.html":{},"injectables/UserJwtRefreshTokenService.html":{}}}],["windows",{"_index":599,"title":{},"body":{"classes/AdminRefreshToken.html":{},"classes/CreateAdminRefreshTokenDto.html":{},"classes/CreateOwnerDto.html":{},"classes/CreateOwnerRefreshTokenDto.html":{},"classes/Owner.html":{},"classes/OwnerRefreshToken.html":{},"injectables/UserJwtRefreshTokenService.html":{}}}],["withcredentials",{"_index":1202,"title":{},"body":{"modules/AppModule.html":{},"modules/OwnerModule.html":{}}}],["worker",{"_index":980,"title":{},"body":{"injectables/AppClusterService.html":{},"interfaces/Msg.html":{}}}],["worker.disconnect",{"_index":1029,"title":{},"body":{"injectables/AppClusterService.html":{},"interfaces/Msg.html":{}}}],["worker.kill",{"_index":1031,"title":{},"body":{"injectables/AppClusterService.html":{},"interfaces/Msg.html":{}}}],["worker.on('disconnect",{"_index":1033,"title":{},"body":{"injectables/AppClusterService.html":{},"interfaces/Msg.html":{}}}],["worker.on('listening",{"_index":1025,"title":{},"body":{"injectables/AppClusterService.html":{},"interfaces/Msg.html":{}}}],["worker.process.pid",{"_index":999,"title":{},"body":{"injectables/AppClusterService.html":{},"interfaces/Msg.html":{}}}],["worker.send('shutdown",{"_index":1028,"title":{},"body":{"injectables/AppClusterService.html":{},"interfaces/Msg.html":{}}}],["working",{"_index":1240,"title":{},"body":{"modules/AppModule.html":{}}}],["world",{"_index":1116,"title":{},"body":{"controllers/AppController.html":{}}}],["writing",{"_index":2202,"title":{},"body":{"injectables/FilesService.html":{},"interfaces/fileCreated.html":{}}}],["x",{"_index":1856,"title":{},"body":{"injectables/CorsMiddleware.html":{},"interfaces/RequestHeaders.html":{}}}],["x32",{"_index":603,"title":{},"body":{"classes/AdminRefreshToken.html":{},"classes/CreateAdminRefreshTokenDto.html":{},"classes/CreateOwnerDto.html":{},"classes/CreateOwnerRefreshTokenDto.html":{},"classes/Owner.html":{},"classes/OwnerRefreshToken.html":{},"injectables/UserJwtRefreshTokenService.html":{}}}],["xl",{"_index":3019,"title":{},"body":{"classes/Product.html":{}}}],["xs",{"_index":3018,"title":{},"body":{"classes/Product.html":{}}}],["xss",{"_index":1888,"title":{},"body":{"injectables/CorsMiddleware.html":{},"interfaces/RequestHeaders.html":{}}}],["xxl",{"_index":3020,"title":{},"body":{"classes/Product.html":{}}}],["xxs",{"_index":3017,"title":{},"body":{"classes/Product.html":{}}}],["yes",{"_index":880,"title":{},"body":{"classes/ApiError.html":{},"classes/ParseFormDataJsonPipe.html":{},"miscellaneous/functions.html":{}}}],["you'd",{"_index":3811,"title":{},"body":{"index.html":{}}}],["z",{"_index":1908,"title":{},"body":{"classes/CreateAccessTokenDto.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserRefreshTokenDto.html":{},"classes/LoginDto.html":{},"classes/ResetDto.html":{},"classes/SignupDto.html":{}}}],["z0",{"_index":1938,"title":{},"body":{"classes/CreateAdminDto.html":{},"classes/CreateAdminRefreshTokenDto.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateColourDto.html":{},"classes/CreateOwnerDto.html":{},"classes/CreateOwnerRefreshTokenDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateReviewDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUserDto.html":{},"classes/Nested.html":{},"classes/Nested-1.html":{},"classes/SignupDto.html":{},"classes/UpdateCategoryDto.html":{},"classes/UpdateColourDto.html":{},"classes/UpdateProductDto.html":{},"classes/UpdateUserDto.html":{}}}],["z\\d@$!%*?&]{8",{"_index":1705,"title":{},"body":{"classes/ChangeDto.html":{},"classes/CreateUserDto.html":{},"classes/LoginDto.html":{},"classes/ResetDto.html":{},"classes/SignupDto.html":{}}}],["z])(?=.*[@#$%^&+=]).{6,64}$/gm",{"_index":2004,"title":{},"body":{"classes/CreateOwnerDto.html":{}}}],["z])(?=.*[a",{"_index":1702,"title":{},"body":{"classes/ChangeDto.html":{},"classes/CreateOwnerDto.html":{},"classes/CreateUserDto.html":{},"classes/LoginDto.html":{},"classes/ResetDto.html":{},"classes/SignupDto.html":{}}}],["z])(?=.*\\d)(?=.*[@$!%*?&])[a",{"_index":1703,"title":{},"body":{"classes/ChangeDto.html":{},"classes/CreateUserDto.html":{},"classes/LoginDto.html":{},"classes/ResetDto.html":{},"classes/SignupDto.html":{}}}],["z]+\\.[a",{"_index":1940,"title":{},"body":{"classes/CreateAdminDto.html":{},"classes/CreateAdminRefreshTokenDto.html":{},"classes/CreateOwnerDto.html":{},"classes/CreateOwnerRefreshTokenDto.html":{}}}],["z]{2",{"_index":1910,"title":{},"body":{"classes/CreateAccessTokenDto.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserRefreshTokenDto.html":{},"classes/LoginDto.html":{},"classes/ResetDto.html":{},"classes/SignupDto.html":{}}}],["z]{2,64",{"_index":1941,"title":{},"body":{"classes/CreateAdminDto.html":{},"classes/CreateAdminRefreshTokenDto.html":{},"classes/CreateOwnerDto.html":{},"classes/CreateOwnerRefreshTokenDto.html":{}}}],["za",{"_index":1704,"title":{},"body":{"classes/ChangeDto.html":{},"classes/CreateAccessTokenDto.html":{},"classes/CreateAdminDto.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateColourDto.html":{},"classes/CreateOwnerDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateReviewDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserRefreshTokenDto.html":{},"classes/LoginDto.html":{},"classes/Nested.html":{},"classes/Nested-1.html":{},"classes/ResetDto.html":{},"classes/SignupDto.html":{},"classes/UpdateCategoryDto.html":{},"classes/UpdateColourDto.html":{},"classes/UpdateProductDto.html":{},"classes/UpdateUserDto.html":{}}}],["zoom",{"_index":484,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CartModule.html":{},"modules/CategoriesColoursModule.html":{},"modules/CoreModule.html":{},"modules/MailModule.html":{},"modules/OrdersModule.html":{},"modules/OwnerModule.html":{},"modules/ProductModule.html":{},"modules/ReviewsModule.html":{},"modules/RolesModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["zžitisšte_",{"_index":2035,"title":{},"body":{"classes/CreateProductDto.html":{},"classes/CreateReviewDto.html":{},"classes/Nested.html":{},"classes/Nested-1.html":{},"classes/UpdateProductDto.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"injectables/ActivateMiddleware.html":{"url":"injectables/ActivateMiddleware.html","title":"injectable - ActivateMiddleware","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ActivateMiddleware\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/middlewares/activate.middleware.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                use\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(adminRepository, ownerRepository)\n                    \n                \n                        \n                            \n                                Defined in src/common/middlewares/activate.middleware.ts:21\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        adminRepository\n                                                  \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        ownerRepository\n                                                  \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        use\n                        \n                    \n                \n            \n            \n                \n                    \n                    use(req: Request, res: Response, next: NextFunction)\n                \n            \n\n\n            \n                \n                    Defined in src/common/middlewares/activate.middleware.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                            NextFunction\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  HttpStatus,\n  Injectable,\n  NestMiddleware,\n  Next,\n  Req,\n  Res,\n  Scope,\n} from '@nestjs/common';\nimport { InjectModel } from '@nestjs/sequelize';\nimport { Request, Response, NextFunction } from 'express';\nimport {\n  ACTIVTING_PARAMS_NOT_PROVIDED,\n  INVALID_PARAMS,\n} from '../../auth/auth.constants';\nimport { Admin } from '../../admin/models/admin.model';\nimport { Owner } from '../../owner/models/owner.model';\nimport { ApiException } from '../exceptions/api.exception';\n\n@Injectable({ scope: Scope.REQUEST })\nexport class ActivateMiddleware implements NestMiddleware {\n  constructor(\n    @InjectModel(Admin) private adminRepository: typeof Admin,\n    @InjectModel(Owner) private ownerRepository: typeof Owner,\n  ) {}\n  async use(\n    @Req() req: Request,\n    @Res() res: Response,\n    @Next() next: NextFunction,\n  ) {\n    try {\n      const activationLink: string = req.params?.link;\n      const code = Number(req.query?.code);\n      if (!activationLink || !code) {\n        throw new ApiException(\n          HttpStatus.BAD_REQUEST,\n          'Bad request!',\n          ACTIVTING_PARAMS_NOT_PROVIDED,\n        );\n      }\n      res.setHeader('X-Content-Type-Options', 'nosniff');\n      const owner = await this.ownerRepository.findOne({\n        where: {\n          resetToken: activationLink,\n        },\n      });\n      if (\n        owner &&\n        !owner.getIsActivated() &&\n        Number(Date.now()) \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/AddContentGuard.html":{"url":"guards/AddContentGuard.html","title":"guard - AddContentGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    AddContentGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/common/guards/add-content.guard.ts\n            \n\n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(adminService: AdminService)\n                    \n                \n                        \n                            \n                                Defined in src/common/guards/add-content.guard.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        adminService\n                                                  \n                                                        \n                                                                        AdminService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate(context: ExecutionContext)\n                \n            \n\n\n            \n                \n                    Defined in src/common/guards/add-content.guard.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                            ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     boolean | Promise | Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import {\n  CanActivate,\n  ExecutionContext,\n  HttpStatus,\n  Injectable,\n  Scope,\n} from '@nestjs/common';\nimport { Observable } from 'rxjs';\nimport {\n  INVALID_REQUEST,\n  USER_NOT_DETECTED,\n  NO_RIGHT,\n} from '../../auth/auth.constants';\nimport { AdminService } from '../../admin/services/admin.service';\nimport { Payload } from '../../core/interfaces/auth.interfaces';\nimport { ApiException } from '../exceptions/api.exception';\n\n@Injectable({ scope: Scope.REQUEST })\nexport class AddContentGuard implements CanActivate {\n  constructor(private readonly adminService: AdminService) {}\n\n  canActivate(\n    context: ExecutionContext,\n  ): boolean | Promise | Observable {\n    return (async () => {\n      const req = context.switchToHttp().getRequest();\n      const payload: Payload = req?.payload;\n      const type: 'OWNER' | 'ADMIN' | null = req['type'];\n      if (!payload) {\n        throw new ApiException(\n          HttpStatus.UNAUTHORIZED,\n          'Unathorized!',\n          INVALID_REQUEST,\n        );\n      }\n      if (type === undefined) {\n        throw new ApiException(\n          HttpStatus.UNAUTHORIZED,\n          'Unathorized!',\n          USER_NOT_DETECTED,\n        );\n      }\n      if (type && type === 'OWNER') {\n        return true;\n      }\n      const admin = await this.adminService.getAdminById(payload.userId);\n      if (type && type === 'ADMIN' && admin.getAddContent()) {\n        return true;\n      }\n      throw new ApiException(HttpStatus.FORBIDDEN, 'Forbidden!', NO_RIGHT);\n    })();\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AddRoleDto.html":{"url":"classes/AddRoleDto.html","title":"class - AddRoleDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AddRoleDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/dto/add-role.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                userId\n                            \n                            \n                                    Readonly\n                                value\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        userId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: '1', description: 'unique identifier'})@IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/add-role.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        value\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'User role', description: 'some value'})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/add-role.dto.ts:7\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsNumber, IsString } from 'class-validator';\n\nexport class AddRoleDto {\n  @ApiProperty({ example: 'User role', description: 'some value' })\n  @IsString()\n  readonly value: string;\n\n  @ApiProperty({ example: '1', description: 'unique identifier' })\n  @IsNumber()\n  readonly userId: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AdminController.html":{"url":"controllers/AdminController.html","title":"controller - AdminController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AdminController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/admin/admin.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                admin\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createAdmin\n                            \n                            \n                                findAdmin\n                            \n                            \n                                getAllUsers\n                            \n                            \n                                updateAdmin\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        createAdmin\n                        \n                    \n                \n            \n            \n                \ncreateAdmin(adminDto: CreateAdminDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'Creating Admin'})@ApiResponse({status: 200, type: Admin})@Throttle(60, 700)@Roles('OWNER')@UseGuards(JwtAuthGuard, RolesGuard, OwnerAdminGuard, AuthFerfershGuard)@HttpCode(201)@Post('create_admin')\n                \n            \n\n            \n                \n                    Defined in src/admin/admin.controller.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    adminDto\n                                    \n                                                CreateAdminDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAdmin\n                        \n                    \n                \n            \n            \n                \nfindAdmin(v: string[], page: number, pageSize: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'Getting Admins'})@ApiResponse({status: 200, type: Admin})@Throttle(60, 700)@Roles('OWNER')@UseGuards(JwtAuthGuard, RolesGuard, OwnerAdminGuard, AuthFerfershGuard)@Get('find_admin')\n                \n            \n\n            \n                \n                    Defined in src/admin/admin.controller.ts:82\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    v\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    page\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    pageSize\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAllUsers\n                        \n                    \n                \n            \n            \n                \ngetAllUsers(page: number, pageSize: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'Getting Admins'})@ApiResponse({status: 200, type: undefined})@Throttle(60, 700)@Roles('OWNER')@UseGuards(JwtAuthGuard, RolesGuard, OwnerAdminGuard, AuthFerfershGuard)@Get('get_admins')\n                \n            \n\n            \n                \n                    Defined in src/admin/admin.controller.ts:97\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    page\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    pageSize\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateAdmin\n                        \n                    \n                \n            \n            \n                \nupdateAdmin(adminDto: CreateAdminDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'Updating Admin'})@ApiResponse({status: 202, type: Admin})@Throttle(70, 700)@Roles('OWNER')@UseGuards(JwtAuthGuard, RolesGuard, OwnerAdminGuard, AuthFerfershGuard)@HttpCode(202)@Patch('update_admin')\n                \n            \n\n            \n                \n                    Defined in src/admin/admin.controller.ts:69\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    adminDto\n                                    \n                                                CreateAdminDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Get,\n  Post,\n  Body,\n  UseGuards,\n  ClassSerializerInterceptor,\n  UseInterceptors,\n  HttpCode,\n  Query,\n  ParseIntPipe,\n  Patch,\n  UseFilters,\n} from '@nestjs/common';\nimport {\n  ApiBearerAuth,\n  ApiOperation,\n  ApiResponse,\n  ApiTags,\n} from '@nestjs/swagger';\nimport { JwtAuthGuard } from '../common/guards/jwt-auth.guard';\nimport { CreateAdminDto } from './dto/create-admin.dto';\nimport { Admin } from './models/admin.model';\nimport { AdminService } from './services/admin.service';\nimport { ValidateDto } from '../common/pipes/validation.pipe';\nimport { AdminInterface } from '../core/interfaces/admin.interfaces';\nimport { ThrottlerBehindProxyGuard } from '../common/guards/throttler-behind-proxy.guard';\nimport { Roles } from '../common/decorators/roles-auth.decorator';\nimport { RolesGuard } from '../common/guards/roles.guard';\nimport { OwnerAdminGuard } from '../common/guards/owner-admin.guard';\nimport { AuthFerfershGuard } from '../common/guards/jw-refresh.guard';\nimport { Throttle } from '@nestjs/throttler';\nimport { User } from '../users/models/user.model';\nimport { ParseArrayPipe } from '@nestjs/common/pipes';\nimport { ApiErrorExceptionFilter } from '../common/filters/error-handler.filter';\nimport { ApiExceptionFilter } from '../common/filters/api-exception.filter';\n\n@UseGuards(ThrottlerBehindProxyGuard)\n@UseFilters(ApiErrorExceptionFilter, ApiExceptionFilter)\n@UseInterceptors(ClassSerializerInterceptor)\n@ApiTags('admin')\n@ApiBearerAuth('JWT-auth')\n@Controller('admin')\nexport class AdminController {\n  constructor(private readonly adminService: AdminService) {}\n\n  // tslint:disable-next-line: promise-function-async\n  @ApiOperation({ summary: 'Creating Admin' })\n  @ApiResponse({ status: 200, type: Admin })\n  @Throttle(60, 700)\n  @Roles('OWNER')\n  @UseGuards(JwtAuthGuard, RolesGuard, OwnerAdminGuard, AuthFerfershGuard)\n  @HttpCode(201)\n  @Post('create_admin')\n  createAdmin(\n    @Body(new ValidateDto()) adminDto: CreateAdminDto,\n  ): Promise {\n    return this.adminService.createAdmin(adminDto);\n  }\n\n  // tslint:disable-next-line: promise-function-async\n  @ApiOperation({ summary: 'Updating Admin' })\n  @ApiResponse({ status: 202, type: Admin })\n  @Throttle(70, 700)\n  @Roles('OWNER')\n  @UseGuards(JwtAuthGuard, RolesGuard, OwnerAdminGuard, AuthFerfershGuard)\n  @HttpCode(202)\n  @Patch('update_admin')\n  updateAdmin(\n    @Body(new ValidateDto()) adminDto: CreateAdminDto,\n  ): Promise {\n    return this.adminService.updateAdmin(adminDto);\n  }\n\n  // tslint:disable-next-line: promise-function-async\n  @ApiOperation({ summary: 'Getting Admins' })\n  @ApiResponse({ status: 200, type: Admin })\n  @Throttle(60, 700)\n  @Roles('OWNER')\n  @UseGuards(JwtAuthGuard, RolesGuard, OwnerAdminGuard, AuthFerfershGuard)\n  @Get('find_admin')\n  findAdmin(\n    @Query('v', ParseArrayPipe) v: string[],\n    @Query('page', ParseIntPipe) page: number,\n    @Query('pageSize', ParseIntPipe) pageSize: number,\n  ): Promise {\n    return this.adminService.findAdmin(v, page, pageSize);\n  }\n\n  // tslint:disable-next-line: promise-function-async\n  @ApiOperation({ summary: 'Getting Admins' })\n  @ApiResponse({ status: 200, type: [Admin] })\n  @Throttle(60, 700)\n  @Roles('OWNER')\n  @UseGuards(JwtAuthGuard, RolesGuard, OwnerAdminGuard, AuthFerfershGuard)\n  @Get('get_admins')\n  getAllUsers(\n    @Query('page', ParseIntPipe) page: number,\n    @Query('pageSize', ParseIntPipe) pageSize: number,\n  ): Promise {\n    return this.adminService.getAllAdmins(page, pageSize);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/AdminGuard.html":{"url":"guards/AdminGuard.html","title":"guard - AdminGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    AdminGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/common/guards/admin.guard.ts\n            \n\n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(adminJwtRefreshTokenService: AdminJwtRefreshService, reflector: Reflector)\n                    \n                \n                        \n                            \n                                Defined in src/common/guards/admin.guard.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        adminJwtRefreshTokenService\n                                                  \n                                                        \n                                                                        AdminJwtRefreshService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        reflector\n                                                  \n                                                        \n                                                                    Reflector\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate(context: ExecutionContext)\n                \n            \n\n\n            \n                \n                    Defined in src/common/guards/admin.guard.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                            ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     boolean | Promise | Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import {\n  CanActivate,\n  ExecutionContext,\n  HttpStatus,\n  Injectable,\n  Scope,\n} from '@nestjs/common';\nimport { Observable } from 'rxjs';\nimport { Payload } from '../../core/interfaces/auth.interfaces';\nimport {\n  REFRESH_TOKEN_NOT_PROVIDED,\n  USER_NOT_AUTHORIZIED,\n} from '../../auth/auth.constants';\nimport { AdminJwtRefreshService } from '../../admin/services/jwt-refresh.service';\nimport { AdminRefreshToken } from '../../admin/models/admin.refresh.token.model';\nimport { Reflector } from '@nestjs/core';\nimport { ROLES_KEY } from '../decorators/roles-auth.decorator';\nimport { ApiException } from '../exceptions/api.exception';\nimport { ACCESS_DENIED } from '../../admin/constants/admin.constants';\n\n@Injectable({ scope: Scope.REQUEST })\nexport class AdminGuard implements CanActivate {\n  constructor(\n    private readonly adminJwtRefreshTokenService: AdminJwtRefreshService,\n    private reflector: Reflector,\n  ) {}\n\n  canActivate(\n    context: ExecutionContext,\n  ): boolean | Promise | Observable {\n    return (async () => {\n      const requiredRoles: string[] = this.reflector.getAllAndOverride(\n        ROLES_KEY,\n        [context.getHandler(), context.getClass()],\n      );\n      if (!requiredRoles) {\n        return true;\n      }\n      const req = context.switchToHttp().getRequest();\n      const refreshToken = req?.cookies['refreshToken'];\n      if (!refreshToken) {\n        throw new ApiException(\n          HttpStatus.BAD_REQUEST,\n          'Bad request!',\n          REFRESH_TOKEN_NOT_PROVIDED,\n        );\n      }\n      const decodedToken = Buffer.from(refreshToken, 'base64').toString(\n        'ascii',\n      );\n      const userRefreshToken = await this.adminJwtRefreshTokenService.findToken(\n        decodedToken,\n      );\n      if (!userRefreshToken) {\n        throw new ApiException(\n          HttpStatus.UNAUTHORIZED,\n          'Unathorized!',\n          USER_NOT_AUTHORIZIED,\n        );\n      }\n      const payload: Payload = req?.payload;\n      if (!payload) {\n        throw new ApiException(\n          HttpStatus.UNAUTHORIZED,\n          'Unathorized!',\n          USER_NOT_AUTHORIZIED,\n        );\n      }\n      if (\n        userRefreshToken instanceof AdminRefreshToken &&\n        payload.userId !== userRefreshToken.adminId\n      ) {\n        throw new ApiException(\n          HttpStatus.UNAUTHORIZED,\n          'Unathorized!',\n          USER_NOT_AUTHORIZIED,\n        );\n      }\n      const refreshPayload =\n        await this.adminJwtRefreshTokenService.validateRefreshToken(\n          decodedToken,\n        );\n      if (\n        !refreshPayload.roles.some(\n          (role: { value: string; description: string }) =>\n            requiredRoles.includes(role.value),\n        )\n      ) {\n        throw new ApiException(\n          HttpStatus.UNAUTHORIZED,\n          'Unathorized!',\n          ACCESS_DENIED,\n        );\n      }\n      return true;\n    })();\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AdminInterface.html":{"url":"interfaces/AdminInterface.html","title":"interface - AdminInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  AdminInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/interfaces/admin.interfaces.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            addContent\n                                        \n                                \n                                \n                                        \n                                            editContent\n                                        \n                                \n                                \n                                        \n                                            editWebsite\n                                        \n                                \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            phoneNumber\n                                        \n                                \n                                \n                                        \n                                            surname\n                                        \n                                \n                                \n                                        \n                                            userId\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        addContent\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        addContent:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        editContent\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        editContent:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        editWebsite\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        editWebsite:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        phoneNumber\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        phoneNumber:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        surname\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        surname:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        userId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        userId:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface AdminRefreshTokenCreationAttrbs {\n  email: string;\n  adminId: number;\n  adminRefreshToken: string;\n  adminAgent: string;\n  phoneNumber: string;\n}\n\nexport interface AdmincreationAttrbs {\n  name: string;\n  surname: string;\n  email: string;\n  phoneNumber: string;\n  password: string;\n  activationLink: string;\n}\n\nexport interface AdminInterface {\n  id: number;\n  name: string;\n  surname: string;\n  email: string;\n  phoneNumber: string;\n  userId: number;\n  addContent: boolean;\n  editContent: boolean;\n  editWebsite: boolean;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AdminJwtRefreshService.html":{"url":"injectables/AdminJwtRefreshService.html","title":"injectable - AdminJwtRefreshService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AdminJwtRefreshService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/admin/services/jwt-refresh.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                Logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                findToken\n                            \n                            \n                                    Async\n                                findTokenByParams\n                            \n                            \n                                    Async\n                                findTokenByToken\n                            \n                            \n                                    Private\n                                generateActivationCode\n                            \n                            \n                                    Private\n                                    Async\n                                generateEncryptedValue\n                            \n                            \n                                    Async\n                                generateRefreshToken\n                            \n                            \n                                    Async\n                                insertToken\n                            \n                            \n                                    Async\n                                removeToken\n                            \n                            \n                                    Async\n                                removeTokenInTime\n                            \n                            \n                                    Async\n                                saveToken\n                            \n                            \n                                    Async\n                                validateRefreshToken\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(jwtService: JwtService, adminService: AdminService, sheduleService: TasksService, mailService: MailService, adminRefreshTokenRepository)\n                    \n                \n                        \n                            \n                                Defined in src/admin/services/jwt-refresh.service.ts:25\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        jwtService\n                                                  \n                                                        \n                                                                    JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        adminService\n                                                  \n                                                        \n                                                                        AdminService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        sheduleService\n                                                  \n                                                        \n                                                                        TasksService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        mailService\n                                                  \n                                                        \n                                                                        MailService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        adminRefreshTokenRepository\n                                                  \n                                                        \n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findToken\n                        \n                    \n                \n            \n            \n                \n                    \n                    findToken(adminRefreshToken: string)\n                \n            \n\n\n            \n                \n                    Defined in src/admin/services/jwt-refresh.service.ts:228\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    adminRefreshToken\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findTokenByParams\n                        \n                    \n                \n            \n            \n                \n                    \n                    findTokenByParams(email: string, phoneNumber: string, identifier: string)\n                \n            \n\n\n            \n                \n                    Defined in src/admin/services/jwt-refresh.service.ts:261\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    phoneNumber\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    identifier\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findTokenByToken\n                        \n                    \n                \n            \n            \n                \n                    \n                    findTokenByToken(adminRefreshToken: string, identifier: string)\n                \n            \n\n\n            \n                \n                    Defined in src/admin/services/jwt-refresh.service.ts:244\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    adminRefreshToken\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    identifier\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        generateActivationCode\n                        \n                    \n                \n            \n            \n                \n                    \n                    generateActivationCode()\n                \n            \n\n\n            \n                \n                    Defined in src/admin/services/jwt-refresh.service.ts:317\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         number\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Async\n                        generateEncryptedValue\n                        \n                    \n                \n            \n            \n                \n                    \n                    generateEncryptedValue(value: string, bytes: number)\n                \n            \n\n\n            \n                \n                    Defined in src/admin/services/jwt-refresh.service.ts:304\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    bytes\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        generateRefreshToken\n                        \n                    \n                \n            \n            \n                \n                    \n                    generateRefreshToken(payload: CreateAdminRefreshTokenDto)\n                \n            \n\n\n            \n                \n                    Defined in src/admin/services/jwt-refresh.service.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    payload\n                                    \n                                                CreateAdminRefreshTokenDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        insertToken\n                        \n                    \n                \n            \n            \n                \n                    \n                    insertToken(adminId: number, adminRefreshToken: string, email: string, adminAgent: string, phoneNumber: string, expireDate: Date)\n                \n            \n\n\n            \n                \n                    Defined in src/admin/services/jwt-refresh.service.ts:72\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    adminId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    adminRefreshToken\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    adminAgent\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    phoneNumber\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    expireDate\n                                    \n                                                Date\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        removeToken\n                        \n                    \n                \n            \n            \n                \n                    \n                    removeToken(adminRefreshToken: string)\n                \n            \n\n\n            \n                \n                    Defined in src/admin/services/jwt-refresh.service.ts:202\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    adminRefreshToken\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        removeTokenInTime\n                        \n                    \n                \n            \n            \n                \n                    \n                    removeTokenInTime(adminRefreshTokenId: number, identifier: string)\n                \n            \n\n\n            \n                \n                    Defined in src/admin/services/jwt-refresh.service.ts:279\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    adminRefreshTokenId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    identifier\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        saveToken\n                        \n                    \n                \n            \n            \n                \n                    \n                    saveToken(adminId: number, adminRefreshToken: string, email: string, adminAgent: string, phoneNumber: string, expireDate: Date, identifier: string)\n                \n            \n\n\n            \n                \n                    Defined in src/admin/services/jwt-refresh.service.ts:122\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    adminId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    adminRefreshToken\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    adminAgent\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    phoneNumber\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    expireDate\n                                    \n                                                Date\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    identifier\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        validateRefreshToken\n                        \n                    \n                \n            \n            \n                \n                    \n                    validateRefreshToken(adminRefreshToken: string)\n                \n            \n\n\n            \n                \n                    Defined in src/admin/services/jwt-refresh.service.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    adminRefreshToken\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        Logger\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Logger(AdminJwtRefreshService.name)\n                    \n                \n                    \n                        \n                                Defined in src/admin/services/jwt-refresh.service.ts:25\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { HttpStatus, Injectable, Logger, Scope } from '@nestjs/common';\nimport { JwtService } from '@nestjs/jwt';\nimport {\n  TOKEN_INVALID,\n  TOKEN_NOT_FOUND,\n  ADMIN_NOT_FOUND,\n  ERROR_WHILE_REMOVING_TOKEN,\n  ERROR_WHILE_SAVING_TOKEN,\n  ERROR_WHILE_VALIDATING_TOKEN,\n  ERROR_WHILE_SIGNING_TOKEN,\n} from '../constants/jwt-refresh.constants';\nimport { AdminRefreshToken } from '../models/admin.refresh.token.model';\nimport { AdminService } from './admin.service';\nimport { CreateAdminRefreshTokenDto } from '../dto/create-admin-refresh-token.dto';\nimport { MailService } from '../../mail/mail.service';\nimport { InjectModel } from '@nestjs/sequelize';\nimport { TasksService } from '../../core/services/scedule.service';\nimport { ApiException } from '../../common/exceptions/api.exception';\nimport { randomBytes, scrypt, createCipheriv } from 'crypto';\nimport { promisify } from 'util';\nimport { v4 } from 'uuid';\n\n@Injectable({ scope: Scope.TRANSIENT })\nexport class AdminJwtRefreshService {\n  private readonly Logger = new Logger(AdminJwtRefreshService.name);\n  constructor(\n    private jwtService: JwtService,\n    private adminService: AdminService,\n    private sheduleService: TasksService,\n    private mailService: MailService,\n    @InjectModel(AdminRefreshToken)\n    private readonly adminRefreshTokenRepository: typeof AdminRefreshToken,\n  ) {}\n\n  async generateRefreshToken(\n    payload: CreateAdminRefreshTokenDto,\n  ): Promise {\n    try {\n      const adminRefreshToken = this.jwtService.sign(payload);\n      return adminRefreshToken;\n    } catch (err) {\n      throw new ApiException(\n        HttpStatus.INTERNAL_SERVER_ERROR,\n        'Internal Server Error',\n        ERROR_WHILE_SIGNING_TOKEN,\n      );\n    }\n  }\n\n  async validateRefreshToken(\n    adminRefreshToken: string,\n  ): Promise {\n    try {\n      const adminData = this.jwtService.verify(adminRefreshToken);\n      if (!adminData) {\n        throw new ApiException(\n          HttpStatus.BAD_REQUEST,\n          'Bad request',\n          TOKEN_INVALID,\n        );\n      }\n      return adminData;\n    } catch (err: unknown) {\n      throw new ApiException(\n        HttpStatus.INTERNAL_SERVER_ERROR,\n        'Internal Server Error',\n        ERROR_WHILE_VALIDATING_TOKEN,\n      );\n    }\n  }\n\n  async insertToken(\n    adminId: number,\n    adminRefreshToken: string,\n    email: string,\n    adminAgent: string,\n    phoneNumber: string,\n    expireDate: Date,\n  ) {\n    try {\n      const admin = await this.adminService.getAdminById(adminId);\n      if (!admin) {\n        throw new ApiException(\n          HttpStatus.NOT_FOUND,\n          'Not found!',\n          ADMIN_NOT_FOUND,\n        );\n      }\n      const token = await this.adminRefreshTokenRepository.create({\n        adminRefreshToken: adminRefreshToken,\n        adminId: admin.id,\n        email: email,\n        adminAgent: adminAgent,\n        phoneNumber: phoneNumber,\n      });\n      token.setIdentifier(v4());\n      await token.save();\n      if (!token.getExpireDate()) {\n        token.setExpireDate(expireDate);\n        await token.save();\n      }\n      if (\n        !admin.getAdminRefreshTokens() ||\n        admin.getAdminRefreshTokens().length === 0\n      ) {\n        admin.$set('adminRefreshTokens', token.id);\n        admin.adminRefreshTokens = [token];\n      } else {\n        admin.$add('adminRefreshTokens', token.id);\n      }\n      await admin.save();\n      return token;\n    } catch (err: unknown) {\n      throw new ApiException(\n        HttpStatus.INTERNAL_SERVER_ERROR,\n        'Internal Server Error',\n        ERROR_WHILE_SAVING_TOKEN,\n      );\n    }\n  }\n\n  async saveToken(\n    adminId: number,\n    adminRefreshToken: string,\n    email: string,\n    adminAgent: string,\n    phoneNumber: string,\n    expireDate: Date,\n    identifier: string,\n  ): Promise {\n    try {\n      const admin = await this.adminService.getAdminById(adminId);\n      if (!admin) {\n        throw new ApiException(\n          HttpStatus.NOT_FOUND,\n          'Not found!',\n          ADMIN_NOT_FOUND,\n        );\n      }\n      const tokenData = await this.adminRefreshTokenRepository.findOne({\n        where: {\n          adminId: adminId,\n          identifier: identifier,\n        },\n      });\n      if (tokenData && admin.getAdminAgent() === 'null') {\n        admin.setAdminAgent(adminAgent);\n        tokenData.setAdminAgent(adminAgent);\n        await admin.save();\n        await tokenData.save();\n      }\n      if (tokenData) {\n        tokenData.adminRefreshToken = adminRefreshToken;\n        if (\n          admin.getAdminAgent() &&\n          admin.getAdminAgent().trim() !== adminAgent\n        ) {\n          admin.setIsActivated(false);\n          const link = await this.generateEncryptedValue('ADMIN', 16);\n          const code = this.generateActivationCode();\n          admin.setResetToken(\n            link.replace('/', `${v4()}`).replace('=', `${v4()}`),\n          );\n          admin.setActivationCode(code);\n          admin.setResetTokenExpiration(Number(Date.now() + 3600000));\n          await admin.save();\n          this.Logger.log(\n            `checking owner with email ${admin.email}`,\n            admin.getAdminAgent() !== adminAgent,\n          );\n          this.mailService.sendActivationMailToAdmin(\n            admin.email,\n            `${process.env.API_URL}/auth/activate/${admin\n              .getResetToken()\n              .trim()}?code=${code}`,\n          );\n        }\n        await tokenData.save();\n        return tokenData;\n      }\n      const token = await this.adminRefreshTokenRepository.create({\n        adminRefreshToken: adminRefreshToken,\n        adminId: adminId,\n        email: email,\n        adminAgent: adminAgent,\n        phoneNumber: phoneNumber,\n      });\n      if (!token.getExpireDate()) {\n        token.setExpireDate(expireDate);\n        await token.save();\n      }\n      return token;\n    } catch (err: unknown) {\n      throw new ApiException(\n        HttpStatus.INTERNAL_SERVER_ERROR,\n        'Internal Server Error',\n        ERROR_WHILE_SAVING_TOKEN,\n      );\n    }\n  }\n\n  async removeToken(adminRefreshToken: string): Promise {\n    try {\n      const token = await this.findToken(adminRefreshToken);\n      if (!token) {\n        throw new ApiException(\n          HttpStatus.NOT_FOUND,\n          'Not found!',\n          TOKEN_NOT_FOUND,\n        );\n      }\n      const admin = await this.adminService.getAdminById(token.adminId);\n      admin.$remove('adminRefreshTokens', token.token.id);\n      await admin.save();\n      const tokenData = await this.adminRefreshTokenRepository.destroy({\n        where: { adminRefreshToken: adminRefreshToken },\n      });\n      return tokenData;\n    } catch (err: unknown) {\n      throw new ApiException(\n        HttpStatus.INTERNAL_SERVER_ERROR,\n        'Internal Server Error',\n        ERROR_WHILE_REMOVING_TOKEN,\n      );\n    }\n  }\n\n  async findToken(adminRefreshToken: string): Promise {\n    const token = await this.adminRefreshTokenRepository.findOne({\n      where: { adminRefreshToken: adminRefreshToken },\n    });\n    if (!token) {\n      return false;\n    }\n    return { token: token, adminId: token.adminId };\n  }\n\n  async findTokenByToken(\n    adminRefreshToken: string,\n    identifier: string,\n  ): Promise {\n    const token = await this.adminRefreshTokenRepository.findOne({\n      where: { adminRefreshToken: adminRefreshToken, identifier: identifier },\n    });\n    if (!token) {\n      throw new ApiException(\n        HttpStatus.NOT_FOUND,\n        'Not found!',\n        TOKEN_NOT_FOUND,\n      );\n    }\n    return token;\n  }\n\n  async findTokenByParams(\n    email: string,\n    phoneNumber: string,\n    identifier: string,\n  ): Promise {\n    const token = await this.adminRefreshTokenRepository.findOne({\n      where: { email: email, phoneNumber: phoneNumber, identifier: identifier },\n    });\n    if (!token) {\n      throw new ApiException(\n        HttpStatus.BAD_REQUEST,\n        'Bad request',\n        TOKEN_INVALID,\n      );\n    }\n    return token;\n  }\n\n  async removeTokenInTime(\n    adminRefreshTokenId: number,\n    identifier: string,\n  ): Promise {\n    const token = await AdminRefreshToken.findOne({\n      where: {\n        id: adminRefreshTokenId,\n        identifier: identifier,\n      },\n    });\n    if (!token) {\n      return false;\n    }\n    const admin = await this.adminService.getAdminById(token.adminId);\n    admin.$remove('adminRefreshTokens', token.id);\n    await admin.save();\n    return this.adminRefreshTokenRepository.destroy({\n      where: {\n        id: token.id,\n        phoneNumber: token.phoneNumber,\n        identifier: identifier,\n      },\n    });\n  }\n\n  private async generateEncryptedValue(\n    value: string,\n    bytes: number,\n  ): Promise {\n    const iv = randomBytes(bytes);\n    const API_KEY = process.env.API_KEY.toString();\n    const key = (await promisify(scrypt)(API_KEY, 'salt', 32)) as Buffer;\n    const cipher = createCipheriv('aes-256-ctr', key, iv);\n    return Buffer.concat([cipher.update(value), cipher.final()]).toString(\n      'base64',\n    );\n  }\n\n  private generateActivationCode(): number {\n    const confirmCode = Number(('' + Math.random()).substring(2, 10));\n    return confirmCode;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AdminModule.html":{"url":"modules/AdminModule.html","title":"module - AdminModule","body":"\n                   \n\n\n\n\n    Modules\n    AdminModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AdminModule\n\n\n\ncluster_AdminModule_exports\n\n\n\ncluster_AdminModule_providers\n\n\n\n\nAdminJwtRefreshService \n\nAdminJwtRefreshService \n\n\n\nAdminService \n\nAdminService \n\n\n\nAdminModule\n\nAdminModule\n\nAdminJwtRefreshService  -->\n\nAdminModule->AdminJwtRefreshService \n\n\n\nAdminService  -->\n\nAdminModule->AdminService \n\n\n\n\n\nAdminJwtRefreshService\n\nAdminJwtRefreshService\n\nAdminModule -->\n\nAdminJwtRefreshService->AdminModule\n\n\n\n\n\nAdminService\n\nAdminService\n\nAdminModule -->\n\nAdminService->AdminModule\n\n\n\nAdminModule -->\n\nAdminService->AdminModule\n\n\n\n\n\nCurrencyService\n\nCurrencyService\n\nAdminModule -->\n\nCurrencyService->AdminModule\n\n\n\n\n\nMailService\n\nMailService\n\nAdminModule -->\n\nMailService->AdminModule\n\n\n\n\n\nOwnerService\n\nOwnerService\n\nAdminModule -->\n\nOwnerService->AdminModule\n\n\n\n\n\nTasksService\n\nTasksService\n\nAdminModule -->\n\nTasksService->AdminModule\n\n\n\n\n\nUsersService\n\nUsersService\n\nAdminModule -->\n\nUsersService->AdminModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/admin/admin.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AdminJwtRefreshService\n                        \n                        \n                            AdminService\n                        \n                        \n                            AdminService\n                        \n                        \n                            CurrencyService\n                        \n                        \n                            MailService\n                        \n                        \n                            OwnerService\n                        \n                        \n                            TasksService\n                        \n                        \n                            UsersService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AdminController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AdminJwtRefreshService\n                        \n                        \n                            AdminService\n                        \n                    \n                \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        configure\n                        \n                    \n                \n            \n            \n                \nconfigure(consumer: MiddlewareConsumer)\n                \n            \n\n\n            \n                \n                    Defined in src/admin/admin.module.ts:105\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    consumer\n                                    \n                                            MiddlewareConsumer\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        import {\n  forwardRef,\n  MiddlewareConsumer,\n  Module,\n  NestModule,\n  RequestMethod,\n} from '@nestjs/common';\nimport { AdminController } from './admin.controller';\nimport { AdminService } from './services/admin.service';\nimport { SequelizeModule } from '@nestjs/sequelize';\nimport { Admin } from './models/admin.model';\nimport { AuthModule } from '../auth/auth.module';\nimport { JwtModule } from '@nestjs/jwt';\nimport { AdminRefreshToken } from './models/admin.refresh.token.model';\nimport { AdminJwtRefreshService } from './services/jwt-refresh.service';\nimport { OwnerModule } from '../owner/owner.module';\nimport { MailService } from '../mail/mail.service';\nimport { InitializeUserMiddleware } from '../common/middlewares/initialize-user.middleware';\nimport { OwnerService } from '../owner/services/owner.service';\nimport { Owner } from '../owner/models/owner.model';\nimport { Role } from '../roles/models/roles.model';\nimport { UserRoles } from '../roles/models/user.roles.model';\nimport { RolesModule } from '../roles/roles.module';\nimport { OwnerRefreshToken } from '../owner/models/owner.refresh.token.model';\nimport { UsersModule } from '../users/users.module';\nimport { User } from '../users/models/user.model';\nimport { UserRefreshToken } from '../users/models/user.refresh.token.model';\nimport { UserAdminMiddleware } from '../common/middlewares/user-admin.middleware';\nimport RequestValidator from '../common/pipes/body-validator.pipe';\nimport { CreateAdminDto } from './dto/create-admin.dto';\nimport { ConfigModule } from '@nestjs/config';\nimport { AdminUserMiddleware } from '../common/middlewares/admin-user.middleware';\nimport { CoreModule } from '../core/core.module';\nimport { TasksService } from '../core/services/scedule.service';\nimport { CartProduct } from '../cart/models/cart.product.model';\nimport { Cart } from '../cart/models/cart.model';\nimport { Colour } from '../categories&colours/models/colours.model';\nimport { ProductColours } from '../categories&colours/models/product.colour.model';\nimport { Category } from '../categories&colours/models/category.model';\nimport { ProductCategories } from '../categories&colours/models/product.categories.model';\nimport { Order } from '../orders/models/order.model';\nimport { OrderProduct } from '../orders/models/order.product.model';\nimport { Product } from '../product/models/product.model';\nimport { UsersService } from '../users/services/users.service';\nimport { Currencies } from 'src/owner/models/currencies.model';\nimport { HttpModule } from '@nestjs/axios';\nimport { CurrencyService } from 'src/owner/services/currency.service';\n@Module({\n  controllers: [AdminController],\n  imports: [\n    HttpModule,\n    ConfigModule.forRoot({\n      envFilePath: `.${process.env.NODE_ENV}.env`,\n      expandVariables: true,\n      isGlobal: true,\n    }),\n    SequelizeModule.forFeature([\n      Product,\n      Order,\n      OrderProduct,\n      Category,\n      ProductCategories,\n      Admin,\n      AdminRefreshToken,\n      Owner,\n      OwnerRefreshToken,\n      User,\n      UserRefreshToken,\n      Role,\n      UserRoles,\n      Cart,\n      CartProduct,\n      Currencies,\n      Colour,\n      ProductColours,\n    ]),\n    JwtModule.register({\n      secret:\n        process.env.JWT_REFRESH_ADMIN_SECRET.toString().trim() ||\n        'knfdljhtop6hohjlymhnhgnljjukfty6yujhjbjlvcglkidrtujhtrfujuj',\n      signOptions: {\n        expiresIn: 172800000,\n      },\n    }),\n    forwardRef(() => CoreModule),\n    forwardRef(() => AdminModule),\n    forwardRef(() => RolesModule),\n    forwardRef(() => AuthModule),\n    forwardRef(() => OwnerModule),\n    forwardRef(() => UsersModule),\n  ],\n  providers: [\n    TasksService,\n    AdminService,\n    AdminJwtRefreshService,\n    MailService,\n    OwnerService,\n    AdminService,\n    UsersService,\n    CurrencyService,\n  ],\n  exports: [AdminService, AdminJwtRefreshService],\n})\nexport class AdminModule implements NestModule {\n  configure(consumer: MiddlewareConsumer) {\n    consumer\n      .apply(InitializeUserMiddleware)\n      .forRoutes(\n        { path: 'admin/get_admins', method: RequestMethod.GET },\n        { path: 'admin/find_admin', method: RequestMethod.GET },\n        { path: 'admin/create_admin', method: RequestMethod.POST },\n        { path: 'admin/update_admin', method: RequestMethod.PATCH },\n      );\n    consumer\n      .apply(UserAdminMiddleware)\n      .forRoutes({ path: 'admin/create_admin', method: RequestMethod.POST });\n    consumer\n      .apply(RequestValidator.validate(CreateAdminDto))\n      .forRoutes({ path: 'admin/create_admin', method: RequestMethod.POST });\n    consumer\n      .apply(AdminUserMiddleware)\n      .forRoutes({ path: 'admin/update_admin', method: RequestMethod.PATCH });\n    consumer\n      .apply(RequestValidator.validate(CreateAdminDto))\n      .forRoutes({ path: 'admin/update_admin', method: RequestMethod.PATCH });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AdminRefreshToken.html":{"url":"classes/AdminRefreshToken.html","title":"class - AdminRefreshToken","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AdminRefreshToken\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/admin/models/admin.refresh.token.model.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    Model\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                admin\n                            \n                            \n                                    Private\n                                adminAgent\n                            \n                            \n                                    Public\n                                adminId\n                            \n                            \n                                    Public\n                                adminRefreshToken\n                            \n                            \n                                    Public\n                                email\n                            \n                            \n                                    Private\n                                expireDate\n                            \n                            \n                                    Public\n                                id\n                            \n                            \n                                    Public\n                                identifier\n                            \n                            \n                                    Public\n                                phoneNumber\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getAdmin\n                            \n                            \n                                getAdminAgent\n                            \n                            \n                                getExpireDate\n                            \n                            \n                                getIdentifier\n                            \n                            \n                                setAdminAgent\n                            \n                            \n                                setExpireDate\n                            \n                            \n                                setIdentifier\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        admin\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Admin\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @BelongsTo(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/admin/models/admin.refresh.token.model.ts:107\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        adminAgent\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'Mozilla/5.0 (Windows NT 7.0; Win32; x32) AppleWebKit/523.34 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/523.34', description: 'admin`s agent'})@Column({type: undefined, unique: false, allowNull: false, field: 'userAgent'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/admin/models/admin.refresh.token.model.ts:84\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        adminId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: '1', description: 'adminId'})@ForeignKey(undefined)@Column({type: undefined, field: 'adminId', unique: false, allowNull: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/admin/models/admin.refresh.token.model.ts:70\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        adminRefreshToken\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'eyJhbGciOiJrdyIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjEsImlzQWN0aXZhdGVkIjpmYWxzZSwiZW1haWwiOiJ1c2VyQGdtYWlsLmNvbSIsInJvbGVzIjpbeyJpZCI6MSwidmFsdWUiOiJVU0VSIiwiZGVzY3JpcHRpb24iOiJzaW1wbGUgdXNlciIsInJpZ2h0MSI6ZmFsc2UsInJpZ2h0MiI6ZmFsc2UsImNyZWF0ZWRBdCI6IjIwMjMtMDEtMTZUMTA6NDE6MjguOTY5WiIsInVwZGF0ZWRBdCI6IjIwMjMtMDEtMTZUMTA6NDE6MjguOTY5WiIsIlVzZXJSb2xlcyI6eyJpZCI6MSwicm9sZUlkIjoxLCJ1c2VySWQiOjEsImFkbWluSWQiOm51bGx9fV0sImlhdCI6MTY3Mzg2NTcxNiwiZXhwIjoxNjczODY5MzE2fQ.cx0YqrXwrvrL8wNMsnTiitL632ORCOxYUJuNQ-g4lOc', description: 'admin`s refresh token'})@Column({type: undefined, unique: true, allowNull: false, field: 'adminRefreshToken'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/admin/models/admin.refresh.token.model.ts:60\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'admin@gmail.com', description: 'admin`s email'})@IsEmail()@Column({type: undefined, unique: false, allowNull: false, field: 'email'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/admin/models/admin.refresh.token.model.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        expireDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: '86400000', description: 'expireDate'})@Column({type: undefined, field: 'expireDate'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/admin/models/admin.refresh.token.model.ts:91\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: '1', description: 'unique identifier'})@Column({type: undefined, unique: true, autoIncrement: true, primaryKey: true, allowNull: false, field: 'id'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/admin/models/admin.refresh.token.model.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        identifier\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: '9b1deb4d-3b7d-4bad-9bdd-2b0d7b3dcb6d', description: 'identifier'})@IsUUID(4)@Column({type: undefined, unique: true, allowNull: true, field: 'identifier'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/admin/models/admin.refresh.token.model.ts:104\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        phoneNumber\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: '+251912345678', description: 'admin`s phoneNumber'})@Column({type: undefined, unique: false, allowNull: false, field: 'phoneNumber'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/admin/models/admin.refresh.token.model.ts:47\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getAdmin\n                        \n                    \n                \n            \n            \n                \ngetAdmin()\n                \n            \n\n\n            \n                \n                    Defined in src/admin/models/admin.refresh.token.model.ts:127\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Admin\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAdminAgent\n                        \n                    \n                \n            \n            \n                \ngetAdminAgent()\n                \n            \n\n\n            \n                \n                    Defined in src/admin/models/admin.refresh.token.model.ts:118\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getExpireDate\n                        \n                    \n                \n            \n            \n                \ngetExpireDate()\n                \n            \n\n\n            \n                \n                    Defined in src/admin/models/admin.refresh.token.model.ts:109\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Date\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getIdentifier\n                        \n                    \n                \n            \n            \n                \ngetIdentifier()\n                \n            \n\n\n            \n                \n                    Defined in src/admin/models/admin.refresh.token.model.ts:131\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setAdminAgent\n                        \n                    \n                \n            \n            \n                \nsetAdminAgent(adminAgent: string)\n                \n            \n\n\n            \n                \n                    Defined in src/admin/models/admin.refresh.token.model.ts:122\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    adminAgent\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setExpireDate\n                        \n                    \n                \n            \n            \n                \nsetExpireDate(expireDate: Date)\n                \n            \n\n\n            \n                \n                    Defined in src/admin/models/admin.refresh.token.model.ts:113\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    expireDate\n                                    \n                                                Date\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Date\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setIdentifier\n                        \n                    \n                \n            \n            \n                \nsetIdentifier(identifier: string)\n                \n            \n\n\n            \n                \n                    Defined in src/admin/models/admin.refresh.token.model.ts:135\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    identifier\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport {\n  Column,\n  DataType,\n  Table,\n  Model,\n  ForeignKey,\n  IsEmail,\n  BelongsTo,\n  IsUUID,\n} from 'sequelize-typescript';\nimport { AdminRefreshTokenCreationAttrbs } from '../../core/interfaces/admin.interfaces';\nimport { Admin } from './admin.model';\n@Table({ tableName: 'ADMIN`s_Refresh-tokens' })\nexport class AdminRefreshToken extends Model {\n  @ApiProperty({ example: '1', description: 'unique identifier' })\n  @Column({\n    type: DataType.INTEGER,\n    unique: true,\n    autoIncrement: true,\n    primaryKey: true,\n    allowNull: false,\n    field: 'id',\n  })\n  public id: number;\n\n  @ApiProperty({ example: 'admin@gmail.com', description: 'admin`s email' })\n  @IsEmail\n  @Column({\n    type: DataType.STRING,\n    unique: false,\n    allowNull: false,\n    field: 'email',\n  })\n  public email: string;\n\n  @ApiProperty({ example: '+251912345678', description: 'admin`s phoneNumber' })\n  @Column({\n    type: DataType.STRING,\n    unique: false,\n    allowNull: false,\n    field: 'phoneNumber',\n  })\n  public phoneNumber: string;\n\n  @ApiProperty({\n    example:\n      'eyJhbGciOiJrdyIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjEsImlzQWN0aXZhdGVkIjpmYWxzZSwiZW1haWwiOiJ1c2VyQGdtYWlsLmNvbSIsInJvbGVzIjpbeyJpZCI6MSwidmFsdWUiOiJVU0VSIiwiZGVzY3JpcHRpb24iOiJzaW1wbGUgdXNlciIsInJpZ2h0MSI6ZmFsc2UsInJpZ2h0MiI6ZmFsc2UsImNyZWF0ZWRBdCI6IjIwMjMtMDEtMTZUMTA6NDE6MjguOTY5WiIsInVwZGF0ZWRBdCI6IjIwMjMtMDEtMTZUMTA6NDE6MjguOTY5WiIsIlVzZXJSb2xlcyI6eyJpZCI6MSwicm9sZUlkIjoxLCJ1c2VySWQiOjEsImFkbWluSWQiOm51bGx9fV0sImlhdCI6MTY3Mzg2NTcxNiwiZXhwIjoxNjczODY5MzE2fQ.cx0YqrXwrvrL8wNMsnTiitL632ORCOxYUJuNQ-g4lOc',\n    description: 'admin`s refresh token',\n  })\n  @Column({\n    type: DataType.CHAR(2500),\n    unique: true,\n    allowNull: false,\n    field: 'adminRefreshToken',\n  })\n  public adminRefreshToken: string;\n\n  @ApiProperty({ example: '1', description: 'adminId' })\n  @ForeignKey(() => Admin)\n  @Column({\n    type: DataType.INTEGER,\n    field: 'adminId',\n    unique: false,\n    allowNull: false,\n  })\n  public adminId: number;\n\n  @ApiProperty({\n    example:\n      // tslint:disable-next-line: max-line-length\n      'Mozilla/5.0 (Windows NT 7.0; Win32; x32) AppleWebKit/523.34 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/523.34',\n    description: 'admin`s agent',\n  })\n  @Column({\n    type: DataType.CHAR(350),\n    unique: false,\n    allowNull: false,\n    field: 'userAgent',\n  })\n  private adminAgent: string;\n\n  @ApiProperty({ example: '86400000', description: 'expireDate' })\n  @Column({\n    type: DataType.DATE,\n    field: 'expireDate',\n  })\n  private expireDate: Date;\n\n  @ApiProperty({\n    example: '9b1deb4d-3b7d-4bad-9bdd-2b0d7b3dcb6d',\n    description: 'identifier',\n  })\n  @IsUUID(4)\n  @Column({\n    type: DataType.STRING,\n    unique: true,\n    allowNull: true,\n    field: 'identifier',\n  })\n  public identifier: string;\n\n  @BelongsTo(() => Admin)\n  private admin: Admin;\n\n  getExpireDate(): Date {\n    return this.expireDate;\n  }\n\n  setExpireDate(expireDate: Date): Date {\n    this.expireDate = expireDate;\n    return this.expireDate;\n  }\n\n  getAdminAgent(): string {\n    return this.adminAgent;\n  }\n\n  setAdminAgent(adminAgent: string): string {\n    this.adminAgent = adminAgent;\n    return this.adminAgent;\n  }\n\n  getAdmin(): Admin {\n    return this.admin;\n  }\n\n  getIdentifier(): string {\n    return this.identifier;\n  }\n\n  setIdentifier(identifier: string): string {\n    this.identifier = identifier;\n    return this.identifier;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AdminRefreshTokenCreationAttrbs.html":{"url":"interfaces/AdminRefreshTokenCreationAttrbs.html","title":"interface - AdminRefreshTokenCreationAttrbs","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  AdminRefreshTokenCreationAttrbs\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/interfaces/admin.interfaces.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            adminAgent\n                                        \n                                \n                                \n                                        \n                                            adminId\n                                        \n                                \n                                \n                                        \n                                            adminRefreshToken\n                                        \n                                \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            phoneNumber\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        adminAgent\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        adminAgent:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        adminId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        adminId:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        adminRefreshToken\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        adminRefreshToken:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        phoneNumber\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        phoneNumber:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface AdminRefreshTokenCreationAttrbs {\n  email: string;\n  adminId: number;\n  adminRefreshToken: string;\n  adminAgent: string;\n  phoneNumber: string;\n}\n\nexport interface AdmincreationAttrbs {\n  name: string;\n  surname: string;\n  email: string;\n  phoneNumber: string;\n  password: string;\n  activationLink: string;\n}\n\nexport interface AdminInterface {\n  id: number;\n  name: string;\n  surname: string;\n  email: string;\n  phoneNumber: string;\n  userId: number;\n  addContent: boolean;\n  editContent: boolean;\n  editWebsite: boolean;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AdminService.html":{"url":"injectables/AdminService.html","title":"injectable - AdminService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AdminService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/admin/services/admin.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                changePassword\n                            \n                            \n                                    Async\n                                checkAdmin\n                            \n                            \n                                    Async\n                                createAdmin\n                            \n                            \n                                    Async\n                                findAdmin\n                            \n                            \n                                    Async\n                                findByActivationLink\n                            \n                            \n                                    Async\n                                getAdminByEmail\n                            \n                            \n                                    Async\n                                getAdminById\n                            \n                            \n                                    Async\n                                getAdminByPhoneNumber\n                            \n                            \n                                    Async\n                                getAllAdmins\n                            \n                            \n                                    Async\n                                resetPassword\n                            \n                            \n                                    Private\n                                    Async\n                                rewritePassword\n                            \n                            \n                                    Async\n                                setConfirmCode\n                            \n                            \n                                    Async\n                                updateAdmin\n                            \n                            \n                                    Async\n                                validateAdmin\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(adminRepository, userService: UsersService, roleService: RolesService)\n                    \n                \n                        \n                            \n                                Defined in src/admin/services/admin.service.ts:28\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        adminRepository\n                                                  \n                                                        \n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UsersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        roleService\n                                                  \n                                                        \n                                                                        RolesService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        changePassword\n                        \n                    \n                \n            \n            \n                \n                    \n                    changePassword(adminId: number, password: string)\n                \n            \n\n\n            \n                \n                    Defined in src/admin/services/admin.service.ts:329\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    adminId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        checkAdmin\n                        \n                    \n                \n            \n            \n                \n                    \n                    checkAdmin(payload: Payload, activationLink: string | undefined)\n                \n            \n\n\n            \n                \n                    Defined in src/admin/services/admin.service.ts:249\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    payload\n                                    \n                                                Payload\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    activationLink\n                                    \n                                            string | undefined\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        createAdmin\n                        \n                    \n                \n            \n            \n                \n                    \n                    createAdmin(dto: CreateAdminDto)\n                \n            \n\n\n            \n                \n                    Defined in src/admin/services/admin.service.ts:79\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dto\n                                    \n                                                CreateAdminDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAdmin\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAdmin(v: string[], page: number, adminPerPage: number)\n                \n            \n\n\n            \n                \n                    Defined in src/admin/services/admin.service.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    v\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    page\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    adminPerPage\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findByActivationLink\n                        \n                    \n                \n            \n            \n                \n                    \n                    findByActivationLink(activationLink: string)\n                \n            \n\n\n            \n                \n                    Defined in src/admin/services/admin.service.ts:185\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    activationLink\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getAdminByEmail\n                        \n                    \n                \n            \n            \n                \n                    \n                    getAdminByEmail(email: string)\n                \n            \n\n\n            \n                \n                    Defined in src/admin/services/admin.service.ts:241\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getAdminById\n                        \n                    \n                \n            \n            \n                \n                    \n                    getAdminById(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/admin/services/admin.service.ts:227\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getAdminByPhoneNumber\n                        \n                    \n                \n            \n            \n                \n                    \n                    getAdminByPhoneNumber(phoneNumber: string)\n                \n            \n\n\n            \n                \n                    Defined in src/admin/services/admin.service.ts:270\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    phoneNumber\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getAllAdmins\n                        \n                    \n                \n            \n            \n                \n                    \n                    getAllAdmins(page: number, adminPerPage: number)\n                \n            \n\n\n            \n                \n                    Defined in src/admin/services/admin.service.ts:199\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    page\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    adminPerPage\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        resetPassword\n                        \n                    \n                \n            \n            \n                \n                    \n                    resetPassword(resetDto: ResetDto)\n                \n            \n\n\n            \n                \n                    Defined in src/admin/services/admin.service.ts:301\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    resetDto\n                                    \n                                                ResetDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Async\n                        rewritePassword\n                        \n                    \n                \n            \n            \n                \n                    \n                    rewritePassword(admin: Admin, password: string)\n                \n            \n\n\n            \n                \n                    Defined in src/admin/services/admin.service.ts:335\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    admin\n                                    \n                                                Admin\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        setConfirmCode\n                        \n                    \n                \n            \n            \n                \n                    \n                    setConfirmCode(codeDto: CodeDto, code: number)\n                \n            \n\n\n            \n                \n                    Defined in src/admin/services/admin.service.ts:293\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    codeDto\n                                    \n                                                CodeDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    code\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        updateAdmin\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateAdmin(dto: CreateAdminDto)\n                \n            \n\n\n            \n                \n                    Defined in src/admin/services/admin.service.ts:151\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dto\n                                    \n                                                CreateAdminDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        validateAdmin\n                        \n                    \n                \n            \n            \n                \n                    \n                    validateAdmin(adminDto: LoginDto)\n                \n            \n\n\n            \n                \n                    Defined in src/admin/services/admin.service.ts:278\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    adminDto\n                                    \n                                                LoginDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpStatus, Injectable, Scope } from '@nestjs/common';\nimport { InjectModel } from '@nestjs/sequelize';\nimport { CreateAdminDto } from '../dto/create-admin.dto';\nimport * as bcrypt from 'bcrypt';\nimport {\n  INVALID_LINK,\n  ADMIN_NOT_FOUND,\n  ADMIN_WITH_EMAIL_EXIST,\n  ADMIN_WITH_PHONENUMBER_EXIST,\n  INVALID_EMAIL,\n  RESET_TIME_EXPIRED,\n  INVALID_CODE,\n  ADMIN_ID_NOT_PROVIDED,\n  NOT_ACTIVATED,\n} from '../constants/admin.constants';\nimport { Admin } from '../models/admin.model';\nimport { LoginDto } from '../../auth/dto/login.dto';\nimport { ResetDto } from '../../auth/dto/reset.password.dto';\nimport { CodeDto } from '../../core/interfaces/auth.interfaces';\nimport { Payload } from '../../core/interfaces/auth.interfaces';\nimport { AdminInterface } from '../../core/interfaces/admin.interfaces';\nimport { UsersService } from '../../users/services/users.service';\nimport { User } from '../../users/models/user.model';\nimport { RolesService } from '../../roles/roles.service';\nimport { ApiException } from '../../common/exceptions/api.exception';\n\n@Injectable({ scope: Scope.TRANSIENT })\nexport class AdminService {\n  constructor(\n    @InjectModel(Admin) private adminRepository: typeof Admin,\n    private readonly userService: UsersService,\n    private readonly roleService: RolesService,\n  ) {}\n\n  async findAdmin(\n    v: string[],\n    page: number,\n    adminPerPage: number,\n  ): Promise {\n    const params = v.map((param: string) => {\n      return param.toLowerCase();\n    });\n    const dbAdmins = await this.adminRepository.findAll({\n      include: { all: true },\n      offset: (page - 1) * adminPerPage,\n      limit: adminPerPage,\n      order: [['updatedAt', 'DESC']],\n      attributes: [\n        'id',\n        'name',\n        'surname',\n        'email',\n        'phoneNumber',\n        'userId',\n        'addContent',\n        'editContent',\n        'editWebsite',\n      ],\n    });\n    if (dbAdmins.length === 0) {\n      return [];\n    }\n    const admins = [];\n    dbAdmins.forEach((admin: Admin) => {\n      const dbArray = [];\n      for (const key in admin) {\n        dbArray.push(admin[key]);\n      }\n      const isContained = params.some(\n        (param: string) => dbArray.indexOf(param) >= 0,\n      );\n      if (isContained) {\n        admins.push(admin);\n      }\n    });\n    return admins;\n  }\n\n  async createAdmin(dto: CreateAdminDto): Promise {\n    const user = await this.userService.getUserByEmail(dto.email);\n    if (!dto.isAdmin) {\n      user.setIsAdmin(dto.isAdmin);\n      user.setAddContent(dto.addContent);\n      user.setEditContent(dto.editContent);\n      user.setEditWebsite(dto.editWebSite);\n      await user.save();\n      return JSON.parse(JSON.stringify(user));\n    }\n    if (user.getIsAdmin()) {\n      user.setAddContent(dto.addContent);\n      user.setEditContent(dto.editContent);\n      user.setEditWebsite(dto.editWebSite);\n      await user.save();\n      const admin = await this.getAdminByEmail(dto.email);\n      admin.setAddContent(dto.addContent);\n      admin.setEditContent(dto.editWebSite);\n      admin.setEditWebsite(dto.editWebSite);\n      await admin.save();\n      return JSON.parse(JSON.stringify(admin));\n    }\n    const [phoneNumber, email] = await Promise.all([\n      await this.getAdminByPhoneNumber(dto.phoneNumber),\n      await this.getAdminByEmail(dto.email),\n    ]);\n    if (phoneNumber) {\n      throw new ApiException(\n        HttpStatus.BAD_REQUEST,\n        'Bad request',\n        ADMIN_WITH_PHONENUMBER_EXIST,\n      );\n    }\n    if (email) {\n      throw new ApiException(\n        HttpStatus.BAD_REQUEST,\n        'Bad request',\n        ADMIN_WITH_EMAIL_EXIST,\n      );\n    }\n    const [admin] = await Promise.all([await this.adminRepository.create(dto)]);\n    const role = await this.roleService.getRoleByValue('ADMIN');\n    if (!role) {\n      const userRole = await this.roleService.createRole({\n        value: 'ADMIN',\n        description: 'User with rights',\n      });\n      user.setIsAdmin(dto.isAdmin);\n      user.setAddContent(dto.addContent);\n      user.setEditContent(dto.editContent);\n      user.setEditWebsite(dto.editWebSite);\n      await user.save();\n      admin.setIsActivated(user.getIsActivated());\n      admin.userId = user.id;\n      await admin.$set('roles', userRole.id);\n      admin.roles = [role];\n      await admin.save();\n      return JSON.parse(JSON.stringify(admin));\n    }\n    user.setIsAdmin(dto.isAdmin);\n    user.setAddContent(dto.addContent);\n    user.setEditContent(dto.editContent);\n    user.setEditWebsite(dto.editWebSite);\n    await user.save();\n    admin.setIsActivated(user.getIsActivated());\n    await admin.$set('roles', role.id);\n    admin.roles = [role];\n    admin.userId = user.id;\n    await admin.save();\n    return JSON.parse(JSON.stringify(admin));\n  }\n\n  async updateAdmin(dto: CreateAdminDto): Promise {\n    const [admin, user] = await Promise.all([\n      await this.getAdminByEmail(dto.email),\n      await this.userService.getUserByEmail(dto.email),\n    ]);\n    if (dto.isAdmin) {\n      user.setIsAdmin(dto.isAdmin);\n      user.setAddContent(dto.addContent);\n      user.setEditContent(dto.editContent);\n      user.setEditWebsite(dto.editWebSite);\n      admin.userId = user.id;\n      admin.setAddContent(dto.addContent);\n      admin.setEditContent(dto.editContent);\n      admin.setEditWebsite(dto.editWebSite);\n      await Promise.all([await user.save(), await admin.save()]);\n      return JSON.parse(JSON.stringify(admin));\n    }\n    user.setIsAdmin(dto.isAdmin);\n    user.setAddContent(dto.addContent);\n    user.setEditContent(dto.editContent);\n    user.setEditWebsite(dto.editWebSite);\n    const [deletedAdmin] = await Promise.all([\n      await this.adminRepository.destroy({\n        where: {\n          userId: user.id,\n          email: dto.email,\n          phoneNumber: dto.phoneNumber,\n        },\n      }),\n      await user.save(),\n    ]);\n    return deletedAdmin;\n  }\n\n  async findByActivationLink(activationLink: string): Promise {\n    const admin = this.adminRepository.findOne({\n      where: { activationLink: activationLink },\n    });\n    if (!admin) {\n      throw new ApiException(\n        HttpStatus.BAD_REQUEST,\n        'Bad request',\n        INVALID_LINK,\n      );\n    }\n    return admin;\n  }\n\n  async getAllAdmins(\n    page: number,\n    adminPerPage: number,\n  ): Promise {\n    const admins = await this.adminRepository.findAll({\n      include: { all: true },\n      offset: (page - 1) * adminPerPage,\n      limit: adminPerPage,\n      order: [['updatedAt', 'DESC']],\n    });\n    if (admins.length === 0) {\n      return [];\n    }\n    return admins.map((admin: Admin) => {\n      return {\n        id: admin.id,\n        name: admin.getName(),\n        surname: admin.getSurname(),\n        email: admin.email,\n        phoneNumber: admin.phoneNumber,\n        userId: admin.userId,\n        addContent: admin.getAddContent(),\n        editContent: admin.getEditContent(),\n        editWebsite: admin.getEditWebSite(),\n      };\n    });\n  }\n\n  async getAdminById(id: number): Promise {\n    const admin = await this.adminRepository.findByPk(id, {\n      include: { all: true },\n    });\n    if (!admin) {\n      throw new ApiException(\n        HttpStatus.NOT_FOUND,\n        'Not found!',\n        ADMIN_NOT_FOUND,\n      );\n    }\n    return admin;\n  }\n\n  async getAdminByEmail(email: string): Promise {\n    const admin = await this.adminRepository.findOne({\n      where: { email: email },\n      include: { all: true },\n    });\n    return admin;\n  }\n\n  async checkAdmin(payload: Payload, activationLink: string | undefined) {\n    if (!activationLink) {\n      throw new ApiException(\n        HttpStatus.UNAUTHORIZED,\n        'Unathorized!',\n        ADMIN_ID_NOT_PROVIDED,\n      );\n    }\n    const admin = await this.getAdminById(payload.userId);\n    if (!admin.getIsActivated()) {\n      throw new ApiException(HttpStatus.FORBIDDEN, 'Forbidden!', NOT_ACTIVATED);\n    }\n    if (\n      admin.activationLink === activationLink &&\n      payload.userActivationLink === activationLink\n    ) {\n      return true;\n    }\n    return false;\n  }\n\n  async getAdminByPhoneNumber(phoneNumber: string): Promise {\n    const admin = await this.adminRepository.findOne({\n      where: { phoneNumber: phoneNumber },\n      include: { all: true },\n    });\n    return admin;\n  }\n\n  async validateAdmin(adminDto: LoginDto): Promise {\n    const admin = await this.getAdminByEmail(adminDto.email);\n    if (!admin) {\n      return false;\n    }\n    const passwordEquals = await bcrypt.compare(\n      adminDto.password,\n      admin.getPassword(),\n    );\n    if (passwordEquals) {\n      return admin;\n    }\n    return false;\n  }\n\n  async setConfirmCode(codeDto: CodeDto, code: number): Promise {\n    const admin = await this.getAdminByEmail(codeDto.email);\n    admin.setConfirmCode(code);\n    admin.setResetTokenExpiration(Number(Date.now() + 3600000));\n    await admin.save();\n    return admin.email;\n  }\n\n  async resetPassword(resetDto: ResetDto): Promise {\n    const admin = await this.getAdminByEmail(resetDto.email);\n    if (resetDto.email !== admin.email) {\n      throw new ApiException(\n        HttpStatus.BAD_REQUEST,\n        'Bad request',\n        INVALID_EMAIL,\n      );\n    }\n    if (Number(Date.now()) >= admin.getResetTokenExpiration()) {\n      throw new ApiException(\n        HttpStatus.BAD_REQUEST,\n        'Bad request',\n        RESET_TIME_EXPIRED,\n      );\n    }\n    if (Number(resetDto.code) !== admin.getConfirmCode()) {\n      throw new ApiException(\n        HttpStatus.BAD_REQUEST,\n        'Bad request',\n        INVALID_CODE,\n      );\n    }\n    await this.userService.rewritePassword(admin.userId, resetDto.password);\n    await this.rewritePassword(admin, resetDto.password);\n    return admin.email;\n  }\n\n  async changePassword(adminId: number, password: string): Promise {\n    const admin = await this.getAdminById(adminId);\n    await this.userService.rewritePassword(admin.userId, password);\n    return this.rewritePassword(admin, password);\n  }\n\n  private async rewritePassword(\n    admin: Admin,\n    password: string,\n  ): Promise {\n    const SALT_ROUNDS = Number(process.env.SALT_ROUNDS);\n    const salt = await bcrypt.genSalt(SALT_ROUNDS);\n    const hashedPassword = await bcrypt.hash(password, salt);\n    admin.setNewPasssword(hashedPassword);\n    return admin.save();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AdminUserMiddleware.html":{"url":"injectables/AdminUserMiddleware.html","title":"injectable - AdminUserMiddleware","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AdminUserMiddleware\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/middlewares/admin-user.middleware.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                use\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(adminService: AdminService)\n                    \n                \n                        \n                            \n                                Defined in src/common/middlewares/admin-user.middleware.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        adminService\n                                                  \n                                                        \n                                                                        AdminService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        use\n                        \n                    \n                \n            \n            \n                \n                    \n                    use(req: Request, res: Response, next: NextFunction)\n                \n            \n\n\n            \n                \n                    Defined in src/common/middlewares/admin-user.middleware.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                            NextFunction\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  HttpStatus,\n  Injectable,\n  NestMiddleware,\n  Next,\n  Req,\n  Res,\n  Scope,\n} from '@nestjs/common';\nimport { Request, Response, NextFunction } from 'express';\nimport { ADMIN_NOT_FOUND } from '../../admin/constants/admin.constants';\nimport { INVALID_PARAMS } from '../../auth/auth.constants';\nimport { AdminService } from '../../admin/services/admin.service';\nimport { ApiException } from '../exceptions/api.exception';\n\n@Injectable({ scope: Scope.REQUEST })\nexport class AdminUserMiddleware implements NestMiddleware {\n  constructor(private readonly adminService: AdminService) {}\n  async use(\n    @Req() req: Request,\n    @Res() res: Response,\n    @Next() next: NextFunction,\n  ) {\n    try {\n      const name = req?.body?.name;\n      const surname = req?.body?.surname;\n      const email = req?.body?.email;\n      const phoneNumber = req?.body?.phoneNumber;\n      const isAdmin = req?.body?.isAdmin;\n      const addContent = req?.body?.addContent;\n      const editContent = req?.body?.editContent;\n      const editWebSite = req?.body?.editWebSite;\n      if (\n        !name ||\n        !surname ||\n        !phoneNumber ||\n        !email ||\n        !isAdmin.toString() ||\n        !addContent.toString() ||\n        !editContent.toString() ||\n        !editWebSite.toString()\n      ) {\n        throw new ApiException(\n          HttpStatus.BAD_REQUEST,\n          'Bad request!',\n          INVALID_PARAMS,\n        );\n      }\n      const admin = await this.adminService.getAdminByEmail(email);\n      if (admin.phoneNumber === phoneNumber) {\n        req.body.password = admin.getPassword();\n        req.body.activationLink = admin.activationLink;\n        return next();\n      }\n      throw new ApiException(\n        HttpStatus.NOT_FOUND,\n        'Not found!',\n        ADMIN_NOT_FOUND,\n      );\n    } catch (err: unknown) {\n      return next(err);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AdmincreationAttrbs.html":{"url":"interfaces/AdmincreationAttrbs.html","title":"interface - AdmincreationAttrbs","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  AdmincreationAttrbs\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/interfaces/admin.interfaces.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            activationLink\n                                        \n                                \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            password\n                                        \n                                \n                                \n                                        \n                                            phoneNumber\n                                        \n                                \n                                \n                                        \n                                            surname\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        activationLink\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        activationLink:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        password\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        password:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        phoneNumber\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        phoneNumber:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        surname\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        surname:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface AdminRefreshTokenCreationAttrbs {\n  email: string;\n  adminId: number;\n  adminRefreshToken: string;\n  adminAgent: string;\n  phoneNumber: string;\n}\n\nexport interface AdmincreationAttrbs {\n  name: string;\n  surname: string;\n  email: string;\n  phoneNumber: string;\n  password: string;\n  activationLink: string;\n}\n\nexport interface AdminInterface {\n  id: number;\n  name: string;\n  surname: string;\n  email: string;\n  phoneNumber: string;\n  userId: number;\n  addContent: boolean;\n  editContent: boolean;\n  editWebsite: boolean;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AllExceptionsFilter.html":{"url":"classes/AllExceptionsFilter.html","title":"class - AllExceptionsFilter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AllExceptionsFilter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/filters/all-exceptions.filter.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        ExceptionFilter\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                catch\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(httpAdapterHost: HttpAdapterHost)\n                    \n                \n                        \n                            \n                                Defined in src/core/filters/all-exceptions.filter.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        httpAdapterHost\n                                                  \n                                                        \n                                                                    HttpAdapterHost\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        catch\n                        \n                    \n                \n            \n            \n                \ncatch(exception: HttpException, host: ArgumentsHost)\n                \n            \n\n\n            \n                \n                    Defined in src/core/filters/all-exceptions.filter.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    exception\n                                    \n                                            HttpException\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    host\n                                    \n                                            ArgumentsHost\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n  ExceptionFilter,\n  Catch,\n  ArgumentsHost,\n  HttpException,\n  HttpStatus,\n} from '@nestjs/common';\nimport { HttpAdapterHost } from '@nestjs/core';\n\n@Catch()\nexport class AllExceptionsFilter implements ExceptionFilter {\n  constructor(private readonly httpAdapterHost: HttpAdapterHost) {}\n  catch(exception: HttpException, host: ArgumentsHost): void {\n    const { httpAdapter } = this.httpAdapterHost;\n    const ctx = host.switchToHttp();\n    const message = exception.message;\n    const httpStatus =\n      exception instanceof HttpException\n        ? exception.getStatus()\n        : HttpStatus.INTERNAL_SERVER_ERROR;\n    const responseBody = {\n      statusCode: httpStatus,\n      timestamp: new Date().toISOString(),\n      message: message,\n      path: httpAdapter.getRequestUrl(ctx.getRequest()),\n    };\n    httpAdapter.reply(ctx.getResponse(), responseBody, httpStatus);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ApiError.html":{"url":"classes/ApiError.html","title":"class - ApiError","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ApiError\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/exceptions/validate-dto.exception.error.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    Error\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                rawErrors\n                            \n                            \n                                statusCode\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(statusCode: number, message: string, rawErrors?: string[])\n                    \n                \n                        \n                            \n                                Defined in src/common/exceptions/validate-dto.exception.error.ts:5\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        statusCode\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        message\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        rawErrors\n                                                  \n                                                        \n                                                                    string[]\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        rawErrors\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/common/exceptions/validate-dto.exception.error.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        statusCode\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/common/exceptions/validate-dto.exception.error.ts:4\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { HttpStatus } from '@nestjs/common';\n\nexport class ApiError extends Error {\n  statusCode: number;\n  rawErrors: string[] = [];\n  constructor(statusCode: number, message: string, rawErrors?: string[]) {\n    super(message);\n\n    this.statusCode = statusCode;\n    if (rawErrors) {\n      this.rawErrors = rawErrors;\n    }\n    Error.captureStackTrace(this, this.constructor);\n  }\n}\n\nexport class NotFoundError extends ApiError {\n  constructor(path: string) {\n    super(HttpStatus.NOT_FOUND, `The requested path ${path} not found!`);\n  }\n}\n\nexport class BadRequestError extends ApiError {\n  constructor(message: string, errors: string[]) {\n    super(HttpStatus.BAD_REQUEST, message, errors);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ApiErrorExceptionFilter.html":{"url":"classes/ApiErrorExceptionFilter.html","title":"class - ApiErrorExceptionFilter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ApiErrorExceptionFilter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/filters/error-handler.filter.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        ExceptionFilter\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                catch\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        catch\n                        \n                    \n                \n            \n            \n                \ncatch(exception: BadRequestError, host: ArgumentsHost)\n                \n            \n\n\n            \n                \n                    Defined in src/common/filters/error-handler.filter.ts:7\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    exception\n                                    \n                                                BadRequestError\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    host\n                                    \n                                            ArgumentsHost\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { BadRequestError } from '../exceptions/validate-dto.exception.error';\nimport { ExceptionFilter, Catch, ArgumentsHost } from '@nestjs/common';\nimport { Request, Response } from 'express';\n\n@Catch(BadRequestError)\nexport class ApiErrorExceptionFilter implements ExceptionFilter {\n  catch(exception: BadRequestError, host: ArgumentsHost) {\n    const ctx = host.switchToHttp();\n    const response = ctx.getResponse();\n    const request = ctx.getRequest();\n    const status = exception.statusCode || 500;\n    response.status(status).send({\n      success: false,\n      message: exception.message,\n      rawErrors: exception.rawErrors ?? [],\n      stack:\n        exception.stack.toString().split(' ')[0] +\n        exception.stack.toString().split(' ')[1],\n      timestamp: new Date().toISOString(),\n      path: request.url,\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ApiException.html":{"url":"classes/ApiException.html","title":"class - ApiException","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ApiException\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/exceptions/api.exception.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    Error\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                errors\n                            \n                            \n                                status\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                BadRequest\n                            \n                            \n                                    Static\n                                ForbiddenException\n                            \n                            \n                                    Static\n                                InternalServerError\n                            \n                            \n                                    Static\n                                UnauthorizedError\n                            \n                            \n                                    Static\n                                UserNotFound\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(status: number, message: string, errors: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/common/exceptions/api.exception.ts:42\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        status\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        message\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        errors\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        errors\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type[]\n\n                    \n                \n                    \n                        \n                                Defined in src/common/exceptions/api.exception.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/common/exceptions/api.exception.ts:41\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        BadRequest\n                        \n                    \n                \n            \n            \n                \n                    \n                    BadRequest(type: \"USER_WITH_EMAIL_EXIST\" | \"USER_WITH_PHONENUMBER_EXIST\" | \"USER_WITH_EMAIL_DOESNT_EXIST\" | \"INVALID_EMAIL\" | \"RESET_TIME_EXPIRED\" | \"ADMIN_WITH_EMAIL_EXIST\" | \"ADMIN_WITH_PHONENUMBER_EXIST\" | \"ADMIN_WITH_EMAIL_DOESNT_EXIST\" | \"OWNER_WITH_EMAIL_EXIST\" | \"OWNER_WITH_PHONENUMBER_EXIST\" | \"OWNER_WITH_EMAIL_DOESNT_EXIST\" | \"INVALID_CODE\" | \"TOKEN_INVALID\")\n                \n            \n\n\n            \n                \n                    Defined in src/common/exceptions/api.exception.ts:64\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    type\n                                    \n                                            \"USER_WITH_EMAIL_EXIST\" | \"USER_WITH_PHONENUMBER_EXIST\" | \"USER_WITH_EMAIL_DOESNT_EXIST\" | \"INVALID_EMAIL\" | \"RESET_TIME_EXPIRED\" | \"ADMIN_WITH_EMAIL_EXIST\" | \"ADMIN_WITH_PHONENUMBER_EXIST\" | \"ADMIN_WITH_EMAIL_DOESNT_EXIST\" | \"OWNER_WITH_EMAIL_EXIST\" | \"OWNER_WITH_PHONENUMBER_EXIST\" | \"OWNER_WITH_EMAIL_DOESNT_EXIST\" | \"INVALID_CODE\" | \"TOKEN_INVALID\"\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        ForbiddenException\n                        \n                    \n                \n            \n            \n                \n                    \n                    ForbiddenException(type: \"NOT_ACTIVATED\" | \"ACCESS_DENIED\")\n                \n            \n\n\n            \n                \n                    Defined in src/common/exceptions/api.exception.ts:300\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    type\n                                    \n                                            \"NOT_ACTIVATED\" | \"ACCESS_DENIED\"\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        InternalServerError\n                        \n                    \n                \n            \n            \n                \n                    \n                    InternalServerError(type: \"ERROR_WHILE_SIGNING_TOKEN\" | \"ERROR_WHILE_VALIDATING_TOKEN\" | \"ERROR_WHILE_SAVING_TOKEN\" | \"ERROR_WHILE_REMOVING_TOKEN\")\n                \n            \n\n\n            \n                \n                    Defined in src/common/exceptions/api.exception.ts:263\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    type\n                                    \n                                            \"ERROR_WHILE_SIGNING_TOKEN\" | \"ERROR_WHILE_VALIDATING_TOKEN\" | \"ERROR_WHILE_SAVING_TOKEN\" | \"ERROR_WHILE_REMOVING_TOKEN\"\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        UnauthorizedError\n                        \n                    \n                \n            \n            \n                \n                    \n                    UnauthorizedError(type: \"INVALID_EMAIL_OR_PASSWORD\" | \"OWNER_ID_NOT_PROVIDED\" | \"ADMIN_ID_NOT_FOUND\")\n                \n            \n\n\n            \n                \n                    Defined in src/common/exceptions/api.exception.ts:234\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    type\n                                    \n                                            \"INVALID_EMAIL_OR_PASSWORD\" | \"OWNER_ID_NOT_PROVIDED\" | \"ADMIN_ID_NOT_FOUND\"\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        UserNotFound\n                        \n                    \n                \n            \n            \n                \n                    \n                    UserNotFound(type: \"USER_NOT_FOUND\" | \"USER_OR_ROLE_NOT_FOUND\" | \"TOKEN_NOT_FOUND\" | \"OWNER_NOT_FOUND\" | \"ADMIN_NOT_FOUND\" | \"OWNER_OR_ROLE_NOT_FOUND\" | \"ADMIN_OR_ROLE_NOT_FOUND\")\n                \n            \n\n\n            \n                \n                    Defined in src/common/exceptions/api.exception.ts:173\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    type\n                                    \n                                            \"USER_NOT_FOUND\" | \"USER_OR_ROLE_NOT_FOUND\" | \"TOKEN_NOT_FOUND\" | \"OWNER_NOT_FOUND\" | \"ADMIN_NOT_FOUND\" | \"OWNER_OR_ROLE_NOT_FOUND\" | \"ADMIN_OR_ROLE_NOT_FOUND\"\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { HttpStatus } from '@nestjs/common';\nimport {\n  ADMIN_ID_NOT_PROVIDED,\n  ADMIN_OR_ROLE_NOT_FOUND,\n  ADMIN_WITH_EMAIL_DOESNT_EXIST,\n  ADMIN_WITH_EMAIL_EXIST,\n  ADMIN_WITH_PHONENUMBER_EXIST,\n} from '../../admin/constants/admin.constants';\nimport {\n  ACCESS_DENIED,\n  NOT_ACTIVATED,\n  OWNER_ID_NOT_PROVIDED,\n  OWNER_OR_ROLE_NOT_FOUND,\n  OWNER_WITH_EMAIL_DOESNT_EXIST,\n  OWNER_WITH_EMAIL_EXIST,\n  OWNER_WITH_PHONENUMBER_EXIST,\n} from '../../owner/constants/owner.constants';\nimport { ADMIN_NOT_FOUND } from '../../admin/constants/jwt-refresh.constants';\nimport { OWNER_NOT_FOUND } from '../../owner/constants/jwt-refresh.constants';\nimport {\n  ERROR_WHILE_REMOVING_TOKEN,\n  ERROR_WHILE_SAVING_TOKEN,\n  ERROR_WHILE_SIGNING_TOKEN,\n  ERROR_WHILE_VALIDATING_TOKEN,\n  TOKEN_INVALID,\n  TOKEN_NOT_FOUND,\n} from '../../users/constants/jwt-refresh.constants';\nimport {\n  INVALID_CODE,\n  INVALID_EMAIL,\n  INVALID_EMAIL_OR_PASSWORD,\n  RESET_TIME_EXPIRED,\n  USER_NOT_FOUND,\n  USER_OR_ROLE_NOT_FOUND,\n  USER_WITH_EMAIL_DOESNT_EXIST,\n  USER_WITH_EMAIL_EXIST,\n  USER_WITH_PHONENUMBER_EXIST,\n} from '../../users/constants/user.constants';\n\nexport class ApiException extends Error {\n  status: number;\n  errors: { locale: string; error: string }[];\n\n  constructor(\n    status: number,\n    message: string,\n    errors: {\n      ua: string;\n      ru: string;\n      en: string;\n      rs: string;\n    },\n  ) {\n    super(message);\n    this.status = status;\n    this.errors = [\n      { locale: 'ua', error: errors.ua },\n      { locale: 'ru', error: errors.ru },\n      { locale: 'en', error: errors.en },\n      { locale: 'rs', error: errors.rs },\n    ];\n  }\n\n  static BadRequest(\n    type:\n      | 'USER_WITH_EMAIL_EXIST'\n      | 'USER_WITH_PHONENUMBER_EXIST'\n      | 'USER_WITH_EMAIL_DOESNT_EXIST'\n      | 'INVALID_EMAIL'\n      | 'RESET_TIME_EXPIRED'\n      | 'ADMIN_WITH_EMAIL_EXIST'\n      | 'ADMIN_WITH_PHONENUMBER_EXIST'\n      | 'ADMIN_WITH_EMAIL_DOESNT_EXIST'\n      | 'OWNER_WITH_EMAIL_EXIST'\n      | 'OWNER_WITH_PHONENUMBER_EXIST'\n      | 'OWNER_WITH_EMAIL_DOESNT_EXIST'\n      | 'INVALID_CODE'\n      | 'TOKEN_INVALID',\n  ) {\n    if ((type = 'USER_WITH_EMAIL_EXIST')) {\n      throw new ApiException(\n        HttpStatus.BAD_REQUEST,\n        'Bad request',\n        USER_WITH_EMAIL_EXIST,\n      );\n    }\n    if ((type = 'USER_WITH_PHONENUMBER_EXIST')) {\n      throw new ApiException(\n        HttpStatus.BAD_REQUEST,\n        'Bad request',\n        USER_WITH_PHONENUMBER_EXIST,\n      );\n    }\n    if ((type = 'USER_WITH_EMAIL_DOESNT_EXIST')) {\n      throw new ApiException(\n        HttpStatus.BAD_REQUEST,\n        'Bad request',\n        USER_WITH_EMAIL_DOESNT_EXIST,\n      );\n    }\n    if ((type = 'ADMIN_WITH_EMAIL_EXIST')) {\n      throw new ApiException(\n        HttpStatus.BAD_REQUEST,\n        'Bad request',\n        ADMIN_WITH_EMAIL_EXIST,\n      );\n    }\n    if ((type = 'ADMIN_WITH_PHONENUMBER_EXIST')) {\n      throw new ApiException(\n        HttpStatus.BAD_REQUEST,\n        'Bad request',\n        ADMIN_WITH_PHONENUMBER_EXIST,\n      );\n    }\n    if ((type = 'ADMIN_WITH_EMAIL_DOESNT_EXIST')) {\n      throw new ApiException(\n        HttpStatus.BAD_REQUEST,\n        'Bad request',\n        ADMIN_WITH_EMAIL_DOESNT_EXIST,\n      );\n    }\n    if ((type = 'OWNER_WITH_EMAIL_EXIST')) {\n      throw new ApiException(\n        HttpStatus.BAD_REQUEST,\n        'Bad request',\n        OWNER_WITH_EMAIL_EXIST,\n      );\n    }\n    if ((type = 'OWNER_WITH_PHONENUMBER_EXIST')) {\n      throw new ApiException(\n        HttpStatus.BAD_REQUEST,\n        'Bad request',\n        OWNER_WITH_PHONENUMBER_EXIST,\n      );\n    }\n    if ((type = 'OWNER_WITH_EMAIL_DOESNT_EXIST')) {\n      throw new ApiException(\n        HttpStatus.BAD_REQUEST,\n        'Bad request',\n        OWNER_WITH_EMAIL_DOESNT_EXIST,\n      );\n    }\n    if ((type = 'INVALID_EMAIL')) {\n      throw new ApiException(\n        HttpStatus.BAD_REQUEST,\n        'Bad request',\n        INVALID_EMAIL,\n      );\n    }\n    if ((type = 'RESET_TIME_EXPIRED')) {\n      throw new ApiException(\n        HttpStatus.BAD_REQUEST,\n        'Bad request',\n        RESET_TIME_EXPIRED,\n      );\n    }\n    if ((type = 'INVALID_CODE')) {\n      throw new ApiException(\n        HttpStatus.BAD_REQUEST,\n        'Bad request',\n        INVALID_CODE,\n      );\n    }\n    if ((type = 'TOKEN_INVALID')) {\n      throw new ApiException(\n        HttpStatus.BAD_REQUEST,\n        'Bad request',\n        TOKEN_INVALID,\n      );\n    }\n  }\n\n  static UserNotFound(\n    type:\n      | 'USER_NOT_FOUND'\n      | 'USER_OR_ROLE_NOT_FOUND'\n      | 'TOKEN_NOT_FOUND'\n      | 'OWNER_NOT_FOUND'\n      | 'ADMIN_NOT_FOUND'\n      | 'OWNER_OR_ROLE_NOT_FOUND'\n      | 'ADMIN_OR_ROLE_NOT_FOUND',\n  ) {\n    if ((type = 'USER_NOT_FOUND')) {\n      throw new ApiException(\n        HttpStatus.NOT_FOUND,\n        'Not found!',\n        USER_NOT_FOUND,\n      );\n    }\n    if ((type = 'USER_OR_ROLE_NOT_FOUND')) {\n      throw new ApiException(\n        HttpStatus.NOT_FOUND,\n        'Not found!',\n        USER_OR_ROLE_NOT_FOUND,\n      );\n    }\n    if ((type = 'TOKEN_NOT_FOUND')) {\n      throw new ApiException(\n        HttpStatus.NOT_FOUND,\n        'Not found!',\n        TOKEN_NOT_FOUND,\n      );\n    }\n    if ((type = 'OWNER_NOT_FOUND')) {\n      throw new ApiException(\n        HttpStatus.NOT_FOUND,\n        'Not found!',\n        OWNER_NOT_FOUND,\n      );\n    }\n    if ((type = 'ADMIN_NOT_FOUND')) {\n      throw new ApiException(\n        HttpStatus.NOT_FOUND,\n        'Not found!',\n        ADMIN_NOT_FOUND,\n      );\n    }\n    if ((type = 'OWNER_OR_ROLE_NOT_FOUND')) {\n      throw new ApiException(\n        HttpStatus.NOT_FOUND,\n        'Not found!',\n        OWNER_OR_ROLE_NOT_FOUND,\n      );\n    }\n    if ((type = 'ADMIN_OR_ROLE_NOT_FOUND')) {\n      throw new ApiException(\n        HttpStatus.NOT_FOUND,\n        'Not found!',\n        ADMIN_OR_ROLE_NOT_FOUND,\n      );\n    }\n  }\n\n  static UnauthorizedError(\n    type:\n      | 'INVALID_EMAIL_OR_PASSWORD'\n      | 'OWNER_ID_NOT_PROVIDED'\n      | 'ADMIN_ID_NOT_FOUND',\n  ) {\n    if ((type = 'INVALID_EMAIL_OR_PASSWORD')) {\n      throw new ApiException(\n        HttpStatus.UNAUTHORIZED,\n        'Unathorized!',\n        INVALID_EMAIL_OR_PASSWORD,\n      );\n    }\n    if ((type = 'OWNER_ID_NOT_PROVIDED')) {\n      throw new ApiException(\n        HttpStatus.UNAUTHORIZED,\n        'Unathorized!',\n        OWNER_ID_NOT_PROVIDED,\n      );\n    }\n    if ((type = 'ADMIN_ID_NOT_FOUND')) {\n      throw new ApiException(\n        HttpStatus.UNAUTHORIZED,\n        'Unathorized!',\n        ADMIN_ID_NOT_PROVIDED,\n      );\n    }\n  }\n\n  static InternalServerError(\n    type:\n      | 'ERROR_WHILE_SIGNING_TOKEN'\n      | 'ERROR_WHILE_VALIDATING_TOKEN'\n      | 'ERROR_WHILE_SAVING_TOKEN'\n      | 'ERROR_WHILE_REMOVING_TOKEN',\n  ) {\n    if ((type = 'ERROR_WHILE_SIGNING_TOKEN')) {\n      throw new ApiException(\n        HttpStatus.INTERNAL_SERVER_ERROR,\n        'Internal Server Error',\n        ERROR_WHILE_SIGNING_TOKEN,\n      );\n    }\n    if ((type = 'ERROR_WHILE_VALIDATING_TOKEN')) {\n      throw new ApiException(\n        HttpStatus.INTERNAL_SERVER_ERROR,\n        'Internal Server Error',\n        ERROR_WHILE_VALIDATING_TOKEN,\n      );\n    }\n    if ((type = 'ERROR_WHILE_SAVING_TOKEN')) {\n      throw new ApiException(\n        HttpStatus.INTERNAL_SERVER_ERROR,\n        'Internal Server Error',\n        ERROR_WHILE_SAVING_TOKEN,\n      );\n    }\n    if ((type = 'ERROR_WHILE_REMOVING_TOKEN')) {\n      throw new ApiException(\n        HttpStatus.INTERNAL_SERVER_ERROR,\n        'Internal Server Error',\n        ERROR_WHILE_REMOVING_TOKEN,\n      );\n    }\n  }\n\n  static ForbiddenException(type: 'NOT_ACTIVATED' | 'ACCESS_DENIED') {\n    if ((type = 'NOT_ACTIVATED')) {\n      throw new ApiException(HttpStatus.FORBIDDEN, 'Forbidden!', NOT_ACTIVATED);\n    }\n    if ((type = 'ACCESS_DENIED')) {\n      throw new ApiException(HttpStatus.FORBIDDEN, 'Forbidden!', ACCESS_DENIED);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ApiExceptionFilter.html":{"url":"classes/ApiExceptionFilter.html","title":"class - ApiExceptionFilter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ApiExceptionFilter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/filters/api-exception.filter.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        ExceptionFilter\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                catch\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        catch\n                        \n                    \n                \n            \n            \n                \ncatch(exception: ApiException, host: ArgumentsHost)\n                \n            \n\n\n            \n                \n                    Defined in src/common/filters/api-exception.filter.ts:7\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    exception\n                                    \n                                                ApiException\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    host\n                                    \n                                            ArgumentsHost\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ExceptionFilter, Catch, ArgumentsHost } from '@nestjs/common';\nimport { Request, Response } from 'express';\nimport { ApiException } from '../exceptions/api.exception';\n\n@Catch(ApiException)\nexport class ApiExceptionFilter implements ExceptionFilter {\n  catch(exception: ApiException, host: ArgumentsHost) {\n    const ctx = host.switchToHttp();\n    const response = ctx.getResponse();\n    const request = ctx.getRequest();\n    const status = exception.status || 500;\n    response.status(status).send({\n      success: false,\n      message: exception.message,\n      rawErrors: exception.errors,\n      stack:\n        exception.stack.toString().split(' ')[0] +\n        exception.stack.toString().split(' ')[1],\n      timestamp: new Date().toISOString(),\n      path: request.url,\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppClusterService.html":{"url":"injectables/AppClusterService.html","title":"injectable - AppClusterService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AppClusterService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/services/cluster.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                    Readonly\n                                Logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                    Async\n                                clusterize\n                            \n                            \n                                    Private\n                                    Static\n                                setTimeouts\n                            \n                            \n                                    Private\n                                    Static\n                                trackOfhttpRequests\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        Async\n                        clusterize\n                        \n                    \n                \n            \n            \n                \n                    \n                    clusterize(callback: CallbackFunction)\n                \n            \n\n\n            \n                \n                    Defined in src/core/services/cluster.service.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    callback\n                                    \n                                                CallbackFunction\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Static\n                        setTimeouts\n                        \n                    \n                \n            \n            \n                \n                    \n                    setTimeouts(worker: any)\n                \n            \n\n\n            \n                \n                    Defined in src/core/services/cluster.service.ts:57\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    worker\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Static\n                        trackOfhttpRequests\n                        \n                    \n                \n            \n            \n                \n                    \n                    trackOfhttpRequests()\n                \n            \n\n\n            \n                \n                    Defined in src/core/services/cluster.service.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        Logger\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Logger(AppClusterService.name)\n                    \n                \n                    \n                        \n                                Defined in src/core/services/cluster.service.ts:11\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import cluster from 'cluster';\nimport { cpus } from 'os';\nimport { INestApplication, Injectable, Logger, Scope } from '@nestjs/common';\ntype CallbackFunction = () => Promise;\nconst numCPUs: number = cpus().length;\ninterface Msg {\n  cmd: string;\n}\n@Injectable({ scope: Scope.DEFAULT })\nexport class AppClusterService {\n  static readonly Logger = new Logger(AppClusterService.name);\n  static async clusterize(callback: CallbackFunction): Promise {\n    if (cluster.isPrimary) {\n      AppClusterService.Logger.log(`Number of CPUs is ${numCPUs}`);\n      AppClusterService.Logger.log(`Master server started on ${process.pid}`);\n      for (let i = 0; i  {\n        AppClusterService.Logger.log(\n          `Worker ${worker.process.pid} died. Restarting`,\n          signal || code,\n        );\n        cluster.fork();\n      });\n    } else {\n      AppClusterService.Logger.log(`Cluster server started on ${process.pid}`);\n      const app = await callback();\n      console.info(app);\n      process.on('SIGINT', () => process.exit(1));\n      process.on('SIGTERM', () => process.exit(1));\n      process.on('SIGUSR2', async () => process.exit(1));\n      process.on('message', (msg) => {\n        if (msg === 'shutdown') {\n          process.exit(1);\n        }\n      });\n    }\n  }\n\n  private static trackOfhttpRequests() {\n    let numReqs = 0;\n    for (const id in cluster.workers) {\n      cluster.workers[id].on('message', messageHandler);\n    }\n    setInterval(() => {\n      AppClusterService.Logger.log(`numReqs = ${numReqs}`);\n    }, 1000);\n    function messageHandler(msg: Msg) {\n      if (msg.cmd && msg.cmd === 'notifyRequest') {\n        numReqs = numReqs + 1;\n      }\n    }\n  }\n\n  private static setTimeouts(worker: any) {\n    let timeout: NodeJS.Timeout;\n    worker.on('listening', (address: any) => {\n      Logger.log(address);\n      worker.send('shutdown');\n      worker.disconnect();\n      timeout = setTimeout(() => {\n        worker.kill();\n      }, 2000);\n    });\n    worker.on('disconnect', () => {\n      clearTimeout(timeout);\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                /\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Async\n                                generateEncryptedValue\n                            \n                            \n                                    Private\n                                    Async\n                                getCurrencies\n                            \n                            \n                                getCurrency\n                            \n                            \n                                getLocation\n                            \n                            \n                                setCookie\n                            \n                            \n                                sse\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Async\n                        generateEncryptedValue\n                        \n                    \n                \n            \n            \n                \n                    \n                    generateEncryptedValue(value: string, bytes: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app.controller.ts:140\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    bytes\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Async\n                        getCurrencies\n                        \n                    \n                \n            \n            \n                \n                    \n                    getCurrencies(base: string | undefined)\n                \n            \n\n\n            \n                \n                    Defined in src/app.controller.ts:118\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    base\n                                    \n                                            string | undefined\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getCurrency\n                        \n                    \n                \n            \n            \n                \ngetCurrency(base: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Throttle(20, 500)@Get('get-currencies')@HttpCode(200)\n                \n            \n\n            \n                \n                    Defined in src/app.controller.ts:101\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    base\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getLocation\n                        \n                    \n                \n            \n            \n                \ngetLocation(request: Request, response: Response, next: NextFunction)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Throttle(20, 500)@Get('get-location')@HttpCode(200)\n                \n            \n\n            \n                \n                    Defined in src/app.controller.ts:71\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    response\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                            NextFunction\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setCookie\n                        \n                    \n                \n            \n            \n                \nsetCookie(request: Request, response: Response, next: NextFunction)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Throttle(20, 500)@Get('set-user')@HttpCode(200)\n                \n            \n\n            \n                \n                    Defined in src/app.controller.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    response\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                            NextFunction\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sse\n                        \n                    \n                \n            \n            \n                \nsse()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Sse('sse')\n                \n            \n\n            \n                \n                    Defined in src/app.controller.ts:111\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Get,\n  HttpCode,\n  Logger,\n  Next,\n  Req,\n  Res,\n  Sse,\n} from '@nestjs/common';\nimport { ApiTags } from '@nestjs/swagger';\nimport path from 'path';\nimport { Reader } from '@maxmind/geoip2-node';\nimport { Observable, map, timeout, firstValueFrom, catchError } from 'rxjs';\nimport { NextFunction, Request, Response } from 'express';\nimport { randomBytes, scrypt, createCipheriv } from 'crypto';\nimport { promisify } from 'util';\nimport { HttpService } from '@nestjs/axios';\nimport { Query, UseGuards } from '@nestjs/common/decorators';\nimport { ThrottlerBehindProxyGuard } from './common/guards/throttler-behind-proxy.guard';\nimport { Throttle } from '@nestjs/throttler';\nimport { v4 } from 'uuid';\n@ApiTags('/')\n@UseGuards(ThrottlerBehindProxyGuard)\n@Controller('/')\nexport class AppController {\n  private readonly Logger = new Logger(AppController.name);\n  constructor(private readonly httpService: HttpService) {}\n\n  @Throttle(20, 500)\n  @Get('set-user')\n  @HttpCode(200)\n  setCookie(\n    @Req() request: Request,\n    @Res() response: Response,\n    @Next() next: NextFunction,\n  ) {\n    (async () => {\n      try {\n        if (!request.signedCookies['_id']) {\n          const _id = await this.generateEncryptedValue('USER', 16);\n          response.cookie('_id', _id, {\n            httpOnly: true,\n            secure: process.env.NODE_ENV === 'production' ? true : false,\n            sameSite: 'strict',\n            signed: true,\n            path: '/',\n            maxAge: 30 * 24 * 60 * 60 * 1000,\n          });\n          return response.json({ _id: _id });\n        }\n        response.cookie('_id', request.signedCookies['_id'], {\n          httpOnly: true,\n          secure: process.env.NODE_ENV === 'production' ? true : false,\n          sameSite: 'strict',\n          signed: true,\n          path: '/',\n          maxAge: 30 * 24 * 60 * 60 * 1000,\n        });\n        return response.json({ _id: request.signedCookies['_id'] });\n      } catch (err: unknown) {\n        this.Logger.error(err);\n        next(err);\n      }\n    })();\n  }\n\n  @Throttle(20, 500)\n  @Get('get-location')\n  @HttpCode(200)\n  getLocation(\n    @Req() request: Request,\n    @Res() response: Response,\n    @Next() next: NextFunction,\n  ) {\n    (async () => {\n      try {\n        const ipAddress = request.headers['x-forwarded-for'];\n        this.Logger.log(ipAddress);\n        const reader = await Reader.open(\n          path.join(__dirname, 'GeoLite2-Country.mmdb'),\n        );\n        const geoCountry = reader.country(request.ip);\n        return response.json({\n          geoLocation: {\n            currency: request['currency'],\n            city: request['city'],\n            ...geoCountry,\n          },\n        });\n      } catch (err) {\n        this.Logger.error(err);\n        next(err);\n      }\n    })();\n  }\n\n  @Throttle(20, 500)\n  @Get('get-currencies')\n  @HttpCode(200)\n  getCurrency(@Query('base') base: string) {\n    try {\n      return this.getCurrencies(base);\n    } catch (err) {\n      this.Logger.error(err);\n      throw err;\n    }\n  }\n\n  @Sse('sse')\n  sse(): Observable {\n    return timeout(1000).apply(\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n      map((_) => ({ data: { hello: 'world' } } as MessageEvent)),\n    );\n  }\n\n  private async getCurrencies(base: string | undefined): Promise {\n    const data = await firstValueFrom(\n      this.httpService\n        .get(\n          `${process.env.API_CURRENCIES.trim()}/${\n            !base\n              ? process.env.BASE_CURRENCY.toLowerCase().trim()\n              : base.toLowerCase().trim()\n          }.json`,\n          { headers: { 'Accept-Encoding': 'gzip,deflate,compress' } },\n        )\n        .pipe(map((res) => res.data))\n        .pipe(\n          catchError((error) => {\n            this.Logger.error(error.response.data);\n            throw error;\n          }),\n        ),\n    );\n    return data;\n  }\n\n  private async generateEncryptedValue(\n    value: string,\n    bytes: number,\n  ): Promise {\n    const iv = randomBytes(bytes);\n    const API_KEY = process.env.API_KEY.toString();\n    const key = (await promisify(scrypt)(API_KEY, 'salt', 16)) as Buffer;\n    const cipher = createCipheriv('aes-256-ctr', key, iv);\n    return Buffer.concat([cipher.update(value), cipher.final()])\n      .toString('base64')\n      .replace('/', `${v4()}`)\n      .replace('=', `${v4()}`);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppListener.html":{"url":"injectables/AppListener.html","title":"injectable - AppListener","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AppListener\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/services/events.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                handleTokenDeletedEvent\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        handleTokenDeletedEvent\n                        \n                    \n                \n            \n            \n                \nhandleTokenDeletedEvent(event: JwtRefreshTokenDeletedEvent)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @OnEvent('refreshtoken.deleted')\n                \n            \n\n            \n                \n                    Defined in src/core/services/events.service.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                JwtRefreshTokenDeletedEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         JwtRefreshTokenDeletedEvent\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { Scope } from '@nestjs/common/interfaces';\nimport { OnEvent } from '@nestjs/event-emitter';\nimport { JwtRefreshTokenDeletedEvent } from '../events/jwt-refresh-token-deleted.evet';\n\n@Injectable({ scope: Scope.DEFAULT })\nexport class AppListener {\n  @OnEvent('refreshtoken.deleted')\n  handleTokenDeletedEvent(event: JwtRefreshTokenDeletedEvent) {\n    return event;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAdminModule\n\nAdminModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAdminModule->AppModule\n\n\n\n\n\nAuthModule\n\nAuthModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nCartModule\n\nCartModule\n\nAppModule -->\n\nCartModule->AppModule\n\n\n\n\n\nCategoriesColoursModule\n\nCategoriesColoursModule\n\nAppModule -->\n\nCategoriesColoursModule->AppModule\n\n\n\n\n\nCoreModule\n\nCoreModule\n\nAppModule -->\n\nCoreModule->AppModule\n\n\n\n\n\nMailModule\n\nMailModule\n\nAppModule -->\n\nMailModule->AppModule\n\n\n\n\n\nOrdersModule\n\nOrdersModule\n\nAppModule -->\n\nOrdersModule->AppModule\n\n\n\n\n\nOwnerModule\n\nOwnerModule\n\nAppModule -->\n\nOwnerModule->AppModule\n\n\n\n\n\nProductModule\n\nProductModule\n\nAppModule -->\n\nProductModule->AppModule\n\n\n\n\n\nReviewsModule\n\nReviewsModule\n\nAppModule -->\n\nReviewsModule->AppModule\n\n\n\n\n\nTelegramModule\n\nTelegramModule\n\nAppModule -->\n\nTelegramModule->AppModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nAppModule -->\n\nUsersModule->AppModule\n\n\n\n\n\nAppClusterService\n\nAppClusterService\n\nAppModule -->\n\nAppClusterService->AppModule\n\n\n\n\n\nTasksService\n\nTasksService\n\nAppModule -->\n\nTasksService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppClusterService\n                        \n                        \n                            TasksService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AdminModule\n                        \n                        \n                            AuthModule\n                        \n                        \n                            CartModule\n                        \n                        \n                            CategoriesColoursModule\n                        \n                        \n                            CoreModule\n                        \n                        \n                            MailModule\n                        \n                        \n                            OrdersModule\n                        \n                        \n                            OwnerModule\n                        \n                        \n                            ProductModule\n                        \n                        \n                            ReviewsModule\n                        \n                        \n                            TelegramModule\n                        \n                        \n                            UsersModule\n                        \n                    \n                \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        configure\n                        \n                    \n                \n            \n            \n                \nconfigure(consumer: MiddlewareConsumer)\n                \n            \n\n\n            \n                \n                    Defined in src/app.module.ts:190\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    consumer\n                                    \n                                            MiddlewareConsumer\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        import {\n  CacheModule,\n  MiddlewareConsumer,\n  Module,\n  NestModule,\n  RequestMethod,\n} from '@nestjs/common';\nimport { SequelizeModule } from '@nestjs/sequelize';\nimport { AdminModule } from './admin/admin.module';\nimport { ConfigModule } from '@nestjs/config';\nimport { Admin } from './admin/models/admin.model';\nimport { AuthModule } from './auth/auth.module';\nimport { AppClusterService } from './core/services/cluster.service';\nimport { ThrottlerModule } from '@nestjs/throttler';\nimport path from 'path';\nimport { AdminRefreshToken } from './admin/models/admin.refresh.token.model';\nimport { MailModule } from './mail/mail.module';\nimport { CorsMiddleware } from './core/middlewares/cors.middleware';\nimport { APP_FILTER, APP_INTERCEPTOR } from '@nestjs/core';\nimport { AllExceptionsFilter } from './core/filters/all-exceptions.filter';\nimport { GlobalInterceptor } from './core/interceptors/global.interceptor';\nimport { CoreModule } from './core/core.module';\nimport { ProductModule } from './product/product.module';\nimport { UsersModule } from './users/users.module';\nimport { OwnerModule } from './owner/owner.module';\nimport { OrdersModule } from './orders/orders.module';\nimport { CartModule } from './cart/cart.module';\nimport { Owner } from './owner/models/owner.model';\nimport { OwnerRefreshToken } from './owner/models/owner.refresh.token.model';\nimport { User } from './users/models/user.model';\nimport { UserRefreshToken } from './users/models/user.refresh.token.model';\nimport { Role } from './roles/models/roles.model';\nimport { UserRoles } from './roles/models/user.roles.model';\nimport { AppController } from './app.controller';\nimport { TelegramModule } from './telegram/telegram.module';\nimport { getTelegramConfig } from './telegram/telegram.config';\nimport { CategoriesColoursModule } from './categories&colours/categories&colours.module';\nimport { Product } from './product/models/product.model';\nimport { Category } from './categories&colours/models/category.model';\nimport { ProductCategories } from './categories&colours/models/product.categories.model';\nimport { CartProduct } from './cart/models/cart.product.model';\nimport { Cart } from './cart/models/cart.model';\nimport { Order } from './orders/models/order.model';\nimport { OrderProduct } from './orders/models/order.product.model';\nimport { MulterModule } from '@nestjs/platform-express';\nimport { BullModule } from '@nestjs/bull';\nimport { ReviewsModule } from './reviews/reviews.module';\nimport { Review } from './reviews/models/review.model';\nimport { ProductReviews } from './reviews/models/product.reviews.model';\nimport { BookmarksProducts } from './product/models/bookmark.products';\nimport { WatchedProducts } from './product/models/watched.products.model';\nimport { Currencies } from './owner/models/currencies.model';\nimport { HttpModule } from '@nestjs/axios';\nimport { LocationMiddleware } from './core/middlewares/location.middleware';\nimport { TasksService } from './core/services/scedule.service';\nimport { Colour } from './categories&colours/models/colours.model';\nimport { ProductColours } from './categories&colours/models/product.colour.model';\n@Module({\n  controllers: [AppController],\n  providers: [\n    TasksService,\n    HttpModule,\n    AppClusterService,\n    {\n      provide: APP_FILTER,\n      useClass: AllExceptionsFilter,\n    },\n    {\n      provide: APP_INTERCEPTOR,\n      useClass: GlobalInterceptor,\n    },\n  ],\n  imports: [\n    HttpModule.register({\n      withCredentials: true,\n      responseEncoding: 'utf8',\n      responseType: 'json',\n    }),\n    ConfigModule.forRoot({\n      envFilePath: `.${process.env.NODE_ENV}.env`,\n      expandVariables: true,\n      isGlobal: true,\n    }),\n    TelegramModule.forRootAsync({\n      useFactory: getTelegramConfig,\n    }),\n    CacheModule.register({\n      ttl: 6000,\n      max: 100,\n      isGlobal: true,\n    }),\n    ThrottlerModule.forRoot({\n      ttl: 600,\n      limit: 100,\n    }),\n    BullModule.forRoot({\n      limiter: {\n        max: 5,\n        duration: 10000,\n        bounceBack: true,\n      },\n      redis: {\n        host: process.env.REDIS_HOST.toString(),\n        port: Number(process.env.REDIS_PORT),\n        db: 1,\n        password: process.env.REDIS_PASSWORD.toString(),\n      },\n      settings: {\n        lockDuration: 30000,\n        lockRenewTime: 15000,\n        stalledInterval: 30000,\n        maxStalledCount: 1,\n        guardInterval: 5000,\n        retryProcessDelay: 5000,\n        drainDelay: 5,\n      },\n    }),\n    // ServeStaticModule.forRoot({\n    //   rootPath: path.join(__dirname, 'static'),\n    //   renderPath: '*',\n    // }),  NOT WORKING\n    MulterModule.register({\n      dest: './static',\n      fileFilter(req, file, callback) {\n        const filetypes = /\\.(jpg|jpeg|png|gif)$/;\n        const extname = filetypes.test(\n          path.extname(file.originalname).toLowerCase(),\n        );\n        const mimetype = filetypes.test(file.mimetype);\n        if (mimetype && extname) {\n          return callback(null, true);\n        }\n        return callback(new Error('Only image files are allowed!'), false);\n      },\n      preservePath: true,\n      limits: {\n        fileSize: 12282810,\n      },\n    }),\n    SequelizeModule.forRoot({\n      dialect: 'postgres',\n      host: process.env.PGHOST.toString(),\n      port: Number(process.env.PGPORT),\n      username: process.env.PGUSER.toString(),\n      password: process.env.PGPASSWORD.toString(),\n      database: process.env.PGDATABASE.toString(),\n      models: [\n        ProductReviews,\n        Product,\n        Order,\n        OrderProduct,\n        Category,\n        ProductCategories,\n        Admin,\n        AdminRefreshToken,\n        Owner,\n        OwnerRefreshToken,\n        User,\n        UserRefreshToken,\n        Role,\n        UserRoles,\n        Cart,\n        CartProduct,\n        Review,\n        BookmarksProducts,\n        WatchedProducts,\n        Currencies,\n        Colour,\n        ProductColours,\n      ],\n      autoLoadModels: true,\n      synchronize: true,\n      retryDelay: 5,\n      retryAttempts: 5,\n    }),\n    AdminModule,\n    AuthModule,\n    MailModule,\n    CoreModule,\n    ProductModule,\n    UsersModule,\n    OwnerModule,\n    OrdersModule,\n    CartModule,\n    CategoriesColoursModule,\n    ReviewsModule,\n  ],\n})\nexport class AppModule implements NestModule {\n  configure(consumer: MiddlewareConsumer) {\n    consumer.apply(CorsMiddleware, LocationMiddleware).forRoutes({\n      path: '*',\n      method: RequestMethod.ALL,\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AuthController.html":{"url":"controllers/AuthController.html","title":"controller - AuthController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AuthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                auth\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                activate\n                            \n                            \n                                changePassword\n                            \n                            \n                                fetchRenewalCode\n                            \n                            \n                                login\n                            \n                            \n                                logout\n                            \n                            \n                                refresh\n                            \n                            \n                                resetPassword\n                            \n                            \n                                signup\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        activate\n                        \n                    \n                \n            \n            \n                \nactivate(activationLink: string, code: number, request: Request, response: Response, next: NextFunction, type: \"OWNER\" | \"ADMIN\", userAgent: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'Activating users'})@ApiResponse({status: 204})@Throttle(70, 700)@Get('activate/:link')@HttpCode(204)\n                \n            \n\n            \n                \n                    Defined in src/auth/auth.controller.ts:194\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    activationLink\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    code\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    request\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    response\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                            NextFunction\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    type\n                                    \n                                            \"OWNER\" | \"ADMIN\"\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    userAgent\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        changePassword\n                        \n                    \n                \n            \n            \n                \nchangePassword(response: Response, request: Request, next: NextFunction, changeDto: ChangeDto, userId: number, type: \"OWNER\" | \"ADMIN\" | null)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'Changing password'})@ApiResponse({status: 202})@Throttle(70, 700)@Patch('change')@UseGuards(JwtAuthGuard, AuthFerfershGuard)@HttpCode(202)\n                \n            \n\n            \n                \n                    Defined in src/auth/auth.controller.ts:169\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    response\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    request\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                            NextFunction\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    changeDto\n                                    \n                                                ChangeDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    userId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    type\n                                    \n                                            \"OWNER\" | \"ADMIN\" | null\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        fetchRenewalCode\n                        \n                    \n                \n            \n            \n                \nfetchRenewalCode(codeDto: CodeDto, locale: \"ua\" | \"ru\" | \"rs\" | \"en\")\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'Getting code'})@ApiResponse({status: 202})@Throttle(40, 400)@Post('code')@HttpCode(202)\n                \n            \n\n            \n                \n                    Defined in src/auth/auth.controller.ts:135\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    codeDto\n                                    \n                                                CodeDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    locale\n                                    \n                                            \"ua\" | \"ru\" | \"rs\" | \"en\"\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        login\n                        \n                    \n                \n            \n            \n                \nlogin(userDto: LoginDto, response: Response, request: Request, next: NextFunction, userAgent: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'Logging in users'})@ApiResponse({status: 200})@UseFilters(ApiExceptionFilter)@Throttle(40, 400)@HttpCode(200)@Post('login')\n                \n            \n\n            \n                \n                    Defined in src/auth/auth.controller.ts:77\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userDto\n                                    \n                                                LoginDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    response\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    request\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                            NextFunction\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    userAgent\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        logout\n                        \n                    \n                \n            \n            \n                \nlogout(response: Response, request: Request, next: NextFunction, type: \"OWNER\" | \"ADMIN\" | null)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'Loggigng out users'})@ApiResponse({status: 202})@Throttle(40, 400)@UseGuards(JwtAuthGuard)@HttpCode(202)@Post('logout')\n                \n            \n\n            \n                \n                    Defined in src/auth/auth.controller.ts:119\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    response\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    request\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                            NextFunction\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    type\n                                    \n                                            \"OWNER\" | \"ADMIN\" | null\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        refresh\n                        \n                    \n                \n            \n            \n                \nrefresh(response: Response, request: Request, next: NextFunction, type: \"OWNER\" | \"ADMIN\" | null, userAgent: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'Refreshing users'})@ApiResponse({status: 202})@Throttle(40, 400)@UseGuards(RefreshAuthGuard)@HttpCode(202)@Patch('refresh')\n                \n            \n\n            \n                \n                    Defined in src/auth/auth.controller.ts:101\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    response\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    request\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                            NextFunction\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    type\n                                    \n                                            \"OWNER\" | \"ADMIN\" | null\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    userAgent\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resetPassword\n                        \n                    \n                \n            \n            \n                \nresetPassword(resetDto: ResetDto, codeDto: CodeDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'Resetting password'})@ApiResponse({status: 201})@Throttle(45, 450)@Patch('reset')@HttpCode(201)\n                \n            \n\n            \n                \n                    Defined in src/auth/auth.controller.ts:152\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    resetDto\n                                    \n                                                ResetDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    codeDto\n                                    \n                                                CodeDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        signup\n                        \n                    \n                \n            \n            \n                \nsignup(userDto: SignupDto, response: Response, request: Request, next: NextFunction, userAgent: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'Signing up users'})@ApiResponse({status: 201})@Throttle(50, 600)@Post('signup')@HttpCode(201)\n                \n            \n\n            \n                \n                    Defined in src/auth/auth.controller.ts:53\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userDto\n                                    \n                                                SignupDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    response\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    request\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                            NextFunction\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    userAgent\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Post,\n  Body,\n  Req,\n  Res,\n  Next,\n  ClassSerializerInterceptor,\n  ParseIntPipe,\n} from '@nestjs/common';\nimport {\n  Get,\n  HttpCode,\n  Param,\n  Patch,\n  Query,\n  UseFilters,\n  UseGuards,\n  UseInterceptors,\n} from '@nestjs/common/decorators';\nimport { AuthService } from './auth.service';\nimport { LoginDto } from './dto/login.dto';\nimport { ResetDto } from './dto/reset.password.dto';\nimport { SignupDto } from './dto/signup.dto';\nimport { ApiOperation, ApiResponse, ApiTags } from '@nestjs/swagger';\nimport { NextFunction, Request, Response } from 'express';\nimport { JwtAuthGuard } from '../common/guards/jwt-auth.guard';\nimport { Throttle } from '@nestjs/throttler';\nimport { ThrottlerBehindProxyGuard } from '../common/guards/throttler-behind-proxy.guard';\nimport { Type } from '../common/decorators/user-type.decorator';\nimport { UserAgent } from '../common/decorators/user-agent.decorator';\nimport { ValidateDto } from '../common/pipes/validation.pipe';\nimport { RefreshAuthGuard } from '../common/guards/refresh.guard';\nimport { CodeDto } from '../core/interfaces/auth.interfaces';\nimport { AuthFerfershGuard } from '../common/guards/jw-refresh.guard';\nimport { ChangeDto } from './dto/change.password.dto';\nimport { UserId } from '../common/decorators/user.id.decorator';\nimport { ApiErrorExceptionFilter } from '../common/filters/error-handler.filter';\nimport { ApiExceptionFilter } from '../common/filters/api-exception.filter';\n@UseGuards(ThrottlerBehindProxyGuard)\n@UseFilters(ApiErrorExceptionFilter, ApiExceptionFilter)\n@UseInterceptors(ClassSerializerInterceptor)\n@ApiTags('auth')\n@Controller('auth')\nexport class AuthController {\n  constructor(private authService: AuthService) {}\n\n  @ApiOperation({ summary: 'Signing up users' })\n  @ApiResponse({ status: 201 })\n  @Throttle(50, 600)\n  @Post('signup')\n  @HttpCode(201)\n  signup(\n    @Body(new ValidateDto()) userDto: SignupDto,\n    @Res() response: Response,\n    @Req() request: Request,\n    @Next() next: NextFunction,\n    @UserAgent('USER-AGENT') userAgent: string,\n  ): void {\n    (async () => {\n      return this.authService.signup(\n        userDto,\n        response,\n        request,\n        next,\n        userAgent,\n      );\n    })();\n  }\n\n  @ApiOperation({ summary: 'Logging in users' })\n  @ApiResponse({ status: 200 })\n  @UseFilters(ApiExceptionFilter)\n  @Throttle(40, 400)\n  @HttpCode(200)\n  @Post('login')\n  login(\n    @Body(new ValidateDto()) userDto: LoginDto,\n    @Res() response: Response,\n    @Req() request: Request,\n    @Next() next: NextFunction,\n    @UserAgent('USER-AGENT') userAgent: string,\n  ): void {\n    (async () => {\n      return this.authService.login(\n        userDto,\n        response,\n        request,\n        next,\n        userAgent,\n      );\n    })();\n  }\n\n  @ApiOperation({ summary: 'Refreshing users' })\n  @ApiResponse({ status: 202 })\n  @Throttle(40, 400)\n  @UseGuards(RefreshAuthGuard)\n  @HttpCode(202)\n  @Patch('refresh')\n  refresh(\n    @Res() response: Response,\n    @Req() request: Request,\n    @Next() next: NextFunction,\n    @Type('REFRESHTOKEN') type: 'OWNER' | 'ADMIN' | null,\n    @UserAgent('USER-AGENT') userAgent: string,\n  ) {\n    (async () => {\n      return this.authService.refresh(response, request, next, type, userAgent);\n    })();\n  }\n\n  @ApiOperation({ summary: 'Loggigng out users' })\n  @ApiResponse({ status: 202 })\n  @Throttle(40, 400)\n  @UseGuards(JwtAuthGuard)\n  @HttpCode(202)\n  @Post('logout')\n  logout(\n    @Res() response: Response,\n    @Req() request: Request,\n    @Next() next: NextFunction,\n    @Type('REFRESHTOKEN') type: 'OWNER' | 'ADMIN' | null,\n  ): void {\n    (async () => {\n      return this.authService.logout(response, request, next, type);\n    })();\n  }\n\n  @ApiOperation({ summary: 'Getting code' })\n  @ApiResponse({ status: 202 })\n  @Throttle(40, 400)\n  @Post('code')\n  @HttpCode(202)\n  fetchRenewalCode(\n    @Type('CODEDTO') codeDto: CodeDto,\n    @Query('locale') locale: 'ua' | 'ru' | 'rs' | 'en',\n  ): Promise {\n    try {\n      return this.authService.setCode(codeDto, locale);\n    } catch (error: unknown) {\n      throw error;\n    }\n  }\n\n  // tslint:disable-next-line: promise-function-async\n  @ApiOperation({ summary: 'Resetting password' })\n  @ApiResponse({ status: 201 })\n  @Throttle(45, 450)\n  @Patch('reset')\n  @HttpCode(201)\n  resetPassword(\n    @Body(new ValidateDto()) resetDto: ResetDto,\n    @Type('CODEDTO') codeDto: CodeDto,\n  ): Promise {\n    try {\n      return this.authService.resetPassword(resetDto, codeDto);\n    } catch (error: unknown) {\n      throw error;\n    }\n  }\n\n  @ApiOperation({ summary: 'Changing password' })\n  @ApiResponse({ status: 202 })\n  @Throttle(70, 700)\n  @Patch('change')\n  @UseGuards(JwtAuthGuard, AuthFerfershGuard)\n  @HttpCode(202)\n  changePassword(\n    @Res() response: Response,\n    @Req() request: Request,\n    @Next() next: NextFunction,\n    @Body() changeDto: ChangeDto,\n    @UserId('USER-ID') userId: number,\n    @Type('REFRESHTOKEN') type: 'OWNER' | 'ADMIN' | null,\n  ): void {\n    (async () => {\n      return this.authService.changePassword(\n        response,\n        request,\n        next,\n        changeDto,\n        userId,\n        type,\n      );\n    })();\n  }\n\n  @ApiOperation({ summary: 'Activating users' })\n  @ApiResponse({ status: 204 })\n  @Throttle(70, 700)\n  @Get('activate/:link')\n  @HttpCode(204)\n  activate(\n    @Param('link') activationLink: string,\n    @Query('code', ParseIntPipe) code: number,\n    @Req() request: Request,\n    @Res() response: Response,\n    @Next() next: NextFunction,\n    @Type('ACTIVATE') type: 'OWNER' | 'ADMIN',\n    @UserAgent('USER-AGENT') userAgent: string,\n  ): void {\n    (async () => {\n      return this.authService.activate(\n        request,\n        response,\n        next,\n        activationLink,\n        code,\n        type,\n        userAgent,\n      );\n    })();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/AuthFerfershGuard.html":{"url":"guards/AuthFerfershGuard.html","title":"guard - AuthFerfershGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    AuthFerfershGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/common/guards/jw-refresh.guard.ts\n            \n\n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(ownerService: OwnerService, adminService: AdminService, userService: UsersService)\n                    \n                \n                        \n                            \n                                Defined in src/common/guards/jw-refresh.guard.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        ownerService\n                                                  \n                                                        \n                                                                        OwnerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        adminService\n                                                  \n                                                        \n                                                                        AdminService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UsersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate(context: ExecutionContext)\n                \n            \n\n\n            \n                \n                    Defined in src/common/guards/jw-refresh.guard.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                            ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     boolean | Promise | Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import {\n  CanActivate,\n  ExecutionContext,\n  HttpStatus,\n  Injectable,\n  Scope,\n} from '@nestjs/common';\nimport { Observable } from 'rxjs';\nimport { AdminService } from '../../admin/services/admin.service';\nimport { OwnerService } from '../../owner/services/owner.service';\nimport { UsersService } from '../../users/services/users.service';\nimport { Payload } from '../../core/interfaces/auth.interfaces';\nimport { USER_NOT_FOUND } from '../../users/constants/user.constants';\nimport { ApiException } from '../exceptions/api.exception';\nimport {\n  INVALID_REQUEST,\n  NO_LINK_PROVIDED,\n  USER_NOT_DETECTED,\n} from '../../auth/auth.constants';\n\n@Injectable({ scope: Scope.REQUEST })\nexport class AuthFerfershGuard implements CanActivate {\n  constructor(\n    private readonly ownerService: OwnerService,\n    private readonly adminService: AdminService,\n    private readonly userService: UsersService,\n  ) {}\n\n  canActivate(\n    context: ExecutionContext,\n  ): boolean | Promise | Observable {\n    return (async () => {\n      const req = context.switchToHttp().getRequest();\n      const payload: Payload = req?.payload;\n      const type: 'OWNER' | 'ADMIN' | null = req['type'];\n      if (!payload) {\n        throw new ApiException(\n          HttpStatus.UNAUTHORIZED,\n          'Unathorized!',\n          INVALID_REQUEST,\n        );\n      }\n      if (type === undefined) {\n        throw new ApiException(\n          HttpStatus.UNAUTHORIZED,\n          'Unathorized!',\n          USER_NOT_DETECTED,\n        );\n      }\n      if (type && type === 'OWNER') {\n        const activationLink: string = req?.signedCookies['user-id'];\n        if (!activationLink) {\n          throw new ApiException(\n            HttpStatus.FORBIDDEN,\n            'Forbidden!',\n            NO_LINK_PROVIDED,\n          );\n        }\n        return this.ownerService.checkOwner(payload, activationLink);\n      }\n      if (type && type === 'ADMIN') {\n        const activationLink: string = req?.signedCookies['user-id'];\n        if (!activationLink) {\n          throw new ApiException(\n            HttpStatus.FORBIDDEN,\n            'Forbidden!',\n            NO_LINK_PROVIDED,\n          );\n        }\n        return this.adminService.checkAdmin(payload, activationLink);\n      }\n      const user = await this.userService.getUserById(payload.userId);\n      if (!user) {\n        throw new ApiException(\n          HttpStatus.NOT_FOUND,\n          'Not found!',\n          USER_NOT_FOUND,\n        );\n      }\n      return true;\n    })();\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthMiddleware.html":{"url":"injectables/AuthMiddleware.html","title":"injectable - AuthMiddleware","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthMiddleware\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/middlewares/auth.middleware.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                use\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        use\n                        \n                    \n                \n            \n            \n                \nuse(req: Request, res: Response, next: NextFunction)\n                \n            \n\n\n            \n                \n                    Defined in src/common/middlewares/auth.middleware.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                            NextFunction\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  Injectable,\n  NestMiddleware,\n  Next,\n  Req,\n  Res,\n  Scope,\n} from '@nestjs/common';\nimport { Request, Response, NextFunction } from 'express';\n\n@Injectable({ scope: Scope.REQUEST })\nexport class AuthMiddleware implements NestMiddleware {\n  use(@Req() req: Request, @Res() res: Response, @Next() next: NextFunction) {\n    try {\n      const userAgent = req.headers['user-agent'];\n      res.setHeader('Access-Control-Request-Headers', 'Authorization');\n      res.setHeader('Access-Control-Request-Method', 'POST, GET, PUT, PATCH');\n      res.setHeader('Timing-Allow-Origin', `${process.env.ACCESS_ALLOW}`);\n      req['userAgent'] = userAgent;\n      return next();\n    } catch (err: unknown) {\n      return next(err);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_exports\n\n\n\ncluster_AuthModule_providers\n\n\n\n\nAdminJwtRefreshService \n\nAdminJwtRefreshService \n\n\n\nAuthService \n\nAuthService \n\n\n\nOwnerJwtRefreshService \n\nOwnerJwtRefreshService \n\n\n\nAuthModule\n\nAuthModule\n\nAdminJwtRefreshService  -->\n\nAuthModule->AdminJwtRefreshService \n\n\n\nAuthService  -->\n\nAuthModule->AuthService \n\n\n\nOwnerJwtRefreshService  -->\n\nAuthModule->OwnerJwtRefreshService \n\n\n\n\n\nAdminJwtRefreshService\n\nAdminJwtRefreshService\n\nAuthModule -->\n\nAdminJwtRefreshService->AuthModule\n\n\n\n\n\nAppListener\n\nAppListener\n\nAuthModule -->\n\nAppListener->AuthModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nCurrencyService\n\nCurrencyService\n\nAuthModule -->\n\nCurrencyService->AuthModule\n\n\n\n\n\nMailService\n\nMailService\n\nAuthModule -->\n\nMailService->AuthModule\n\n\n\n\n\nOwnerJwtRefreshService\n\nOwnerJwtRefreshService\n\nAuthModule -->\n\nOwnerJwtRefreshService->AuthModule\n\n\n\n\n\nTasksService\n\nTasksService\n\nAuthModule -->\n\nTasksService->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/auth/auth.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AdminJwtRefreshService\n                        \n                        \n                            AppListener\n                        \n                        \n                            AuthService\n                        \n                        \n                            CurrencyService\n                        \n                        \n                            MailService\n                        \n                        \n                            OwnerJwtRefreshService\n                        \n                        \n                            TasksService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AuthController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AdminJwtRefreshService\n                        \n                        \n                            AuthService\n                        \n                        \n                            OwnerJwtRefreshService\n                        \n                    \n                \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        configure\n                        \n                    \n                \n            \n            \n                \nconfigure(consumer: MiddlewareConsumer)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.module.ts:104\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    consumer\n                                    \n                                            MiddlewareConsumer\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        import {\n  forwardRef,\n  MiddlewareConsumer,\n  Module,\n  NestModule,\n  RequestMethod,\n} from '@nestjs/common';\nimport { AuthService } from './auth.service';\nimport { AuthController } from './auth.controller';\nimport { AdminModule } from '../admin/admin.module';\nimport { JwtModule } from '@nestjs/jwt';\nimport { MailService } from '../mail/mail.service';\nimport { APP_FILTER, APP_GUARD } from '@nestjs/core';\nimport { HttpExceptionFilter } from '../common/filters/http-exception.filter';\nimport { AuthMiddleware } from '../common/middlewares/auth.middleware';\nimport { ThrottlerGuard } from '@nestjs/throttler';\nimport { OwnerModule } from '../owner/owner.module';\nimport { AdminJwtRefreshService } from '../admin/services/jwt-refresh.service';\nimport { OwnerJwtRefreshService } from '../owner/services/jwt-refresh.service';\nimport { UsersModule } from '../users/users.module';\nimport { InitializeUserMiddleware } from '../common/middlewares/initialize-user.middleware';\nimport { InitializeEmailMiddleware } from '../common/middlewares/initialize-email.middleware';\nimport { ActivateMiddleware } from '../common/middlewares/activate.middleware';\nimport RequestValidator from '../common/pipes/body-validator.pipe';\nimport { LoginDto } from './dto/login.dto';\nimport { SignupDto } from './dto/signup.dto';\nimport { ResetDto } from './dto/reset.password.dto';\nimport { ChangeDto } from './dto/change.password.dto';\nimport { SequelizeModule } from '@nestjs/sequelize';\nimport { Admin } from '../admin/models/admin.model';\nimport { AdminRefreshToken } from '../admin/models/admin.refresh.token.model';\nimport { Owner } from '../owner/models/owner.model';\nimport { OwnerRefreshToken } from '../owner/models/owner.refresh.token.model';\nimport { Role } from '../roles/models/roles.model';\nimport { UserRoles } from '../roles/models/user.roles.model';\nimport { User } from '../users/models/user.model';\nimport { UserRefreshToken } from '../users/models/user.refresh.token.model';\nimport { ConfigModule } from '@nestjs/config';\nimport { TasksService } from '../core/services/scedule.service';\nimport { CoreModule } from '../core/core.module';\nimport { AppListener } from '../core/services/events.service';\nimport { CurrencyService } from '../owner/services/currency.service';\nimport { Currencies } from 'src/owner/models/currencies.model';\nimport { HttpModule } from '@nestjs/axios';\n@Module({\n  providers: [\n    CurrencyService,\n    AppListener,\n    AuthService,\n    JwtModule,\n    AdminJwtRefreshService,\n    OwnerJwtRefreshService,\n    MailService,\n    TasksService,\n    {\n      provide: APP_GUARD,\n      useClass: ThrottlerGuard,\n    },\n    {\n      provide: APP_FILTER,\n      useClass: HttpExceptionFilter,\n    },\n  ],\n  controllers: [AuthController],\n  imports: [\n    HttpModule,\n    ConfigModule.forRoot({\n      envFilePath: `.${process.env.NODE_ENV}.env`,\n      expandVariables: true,\n      isGlobal: true,\n    }),\n    SequelizeModule.forFeature([\n      User,\n      UserRefreshToken,\n      Admin,\n      AdminRefreshToken,\n      Owner,\n      Role,\n      UserRoles,\n      OwnerRefreshToken,\n      Currencies,\n    ]),\n    forwardRef(() => CoreModule),\n    forwardRef(() => AdminModule),\n    forwardRef(() => OwnerModule),\n    forwardRef(() => UsersModule),\n    JwtModule.register({\n      secret:\n        process.env.JWT_ACCESS_SECRET.toString().trim() ||\n        'knfdljhtop6hohjlymhnhgnljjukfty6yujhjbjlvcglki',\n      signOptions: {\n        expiresIn: 3600000,\n      },\n    }),\n  ],\n  exports: [\n    AuthService,\n    JwtModule,\n    AdminJwtRefreshService,\n    OwnerJwtRefreshService,\n  ],\n})\nexport class AuthModule implements NestModule {\n  configure(consumer: MiddlewareConsumer) {\n    consumer\n      .apply(AuthMiddleware)\n      .forRoutes(\n        { path: 'auth/login', method: RequestMethod.POST },\n        { path: 'auth/signup', method: RequestMethod.POST },\n        { path: 'auth/refresh', method: RequestMethod.PATCH },\n        { path: 'auth/change', method: RequestMethod.PATCH },\n      );\n    consumer\n      .apply(InitializeUserMiddleware)\n      .forRoutes(\n        { path: 'auth/logout', method: RequestMethod.POST },\n        { path: 'auth/refresh', method: RequestMethod.PATCH },\n        { path: 'auth/change', method: RequestMethod.PATCH },\n      );\n    consumer\n      .apply(InitializeEmailMiddleware)\n      .forRoutes(\n        { path: 'auth/code', method: RequestMethod.POST },\n        { path: 'auth/reset', method: RequestMethod.PATCH },\n      );\n    consumer\n      .apply(ActivateMiddleware)\n      .forRoutes({ path: 'auth/activate/:link', method: RequestMethod.GET });\n    consumer\n      .apply(RequestValidator.validate(LoginDto))\n      .forRoutes({ path: 'auth/login', method: RequestMethod.POST });\n    consumer\n      .apply(RequestValidator.validate(SignupDto))\n      .forRoutes({ path: 'auth/signup', method: RequestMethod.PUT });\n    consumer\n      .apply(RequestValidator.validate(ResetDto))\n      .forRoutes({ path: 'auth/reset', method: RequestMethod.PATCH });\n    consumer\n      .apply(RequestValidator.validate(ChangeDto))\n      .forRoutes({ path: 'auth/change', method: RequestMethod.PATCH });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AuthUser.html":{"url":"interfaces/AuthUser.html","title":"interface - AuthUser","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  AuthUser\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/interfaces/auth.interfaces.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            accessToken\n                                        \n                                \n                                \n                                        \n                                            user\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        accessToken\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        accessToken:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        user\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        user:     ReturnedUser | ReturnedAdmin | ReturnedOwner\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     ReturnedUser | ReturnedAdmin | ReturnedOwner\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Role } from '../../roles/models/roles.model';\nexport interface Payload {\n  email: string;\n  userId: number;\n  userActivationLink: string;\n  isUserActivated: boolean;\n  roles?: Role[];\n}\n\nexport interface Tokens {\n  refreshToken: string;\n  accessToken: string;\n  expireDate: Date;\n}\n\nexport interface AuthUser {\n  accessToken: string;\n  user: ReturnedUser | ReturnedAdmin | ReturnedOwner;\n}\n\nexport interface ReturnedUser {\n  id: number;\n  name: string;\n  surname: string;\n  phoneNumber: string;\n  email: string;\n  country: string | null;\n  city: string | null;\n  postOffice: string | null;\n  type: 'USER';\n}\n\nexport interface ReturnedOwner {\n  id: number;\n  name: string;\n  surname: string;\n  phoneNumber: string;\n  email: string;\n  type: 'OWNER';\n}\n\nexport interface ReturnedAdmin {\n  id: number;\n  name: string;\n  surname: string;\n  phoneNumber: string;\n  email: string;\n  type: 'ADMIN';\n}\n\nexport interface CodeDto {\n  type: 'OWNER' | 'ADMIN' | null;\n  email: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BadRequestError.html":{"url":"classes/BadRequestError.html","title":"class - BadRequestError","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BadRequestError\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/exceptions/validate-dto.exception.error.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        ApiError\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                rawErrors\n                            \n                            \n                                statusCode\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(message: string, errors: string[])\n                    \n                \n                        \n                            \n                                Defined in src/common/exceptions/validate-dto.exception.error.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        message\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        errors\n                                                  \n                                                        \n                                                                    string[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        rawErrors\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                        \n                            \n                                Inherited from         ApiError\n\n                            \n                        \n                    \n                        \n                                Defined in         ApiError:5\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        statusCode\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                Inherited from         ApiError\n\n                            \n                        \n                    \n                        \n                                Defined in         ApiError:4\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { HttpStatus } from '@nestjs/common';\n\nexport class ApiError extends Error {\n  statusCode: number;\n  rawErrors: string[] = [];\n  constructor(statusCode: number, message: string, rawErrors?: string[]) {\n    super(message);\n\n    this.statusCode = statusCode;\n    if (rawErrors) {\n      this.rawErrors = rawErrors;\n    }\n    Error.captureStackTrace(this, this.constructor);\n  }\n}\n\nexport class NotFoundError extends ApiError {\n  constructor(path: string) {\n    super(HttpStatus.NOT_FOUND, `The requested path ${path} not found!`);\n  }\n}\n\nexport class BadRequestError extends ApiError {\n  constructor(message: string, errors: string[]) {\n    super(HttpStatus.BAD_REQUEST, message, errors);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BanUserDto.html":{"url":"classes/BanUserDto.html","title":"class - BanUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BanUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/dto/ban-user.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                banReason\n                            \n                            \n                                    Readonly\n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        banReason\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'User is not valid!', description: 'some reason'})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/ban-user.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        userId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: '1', description: 'unique identifier'})@IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/ban-user.dto.ts:7\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsNumber, IsString } from 'class-validator';\n\nexport class BanUserDto {\n  @ApiProperty({ example: '1', description: 'unique identifier' })\n  @IsNumber()\n  readonly userId: number;\n\n  @ApiProperty({ example: 'User is not valid!', description: 'some reason' })\n  @IsString()\n  readonly banReason: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BookmarksProducts.html":{"url":"classes/BookmarksProducts.html","title":"class - BookmarksProducts","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BookmarksProducts\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/product/models/bookmark.products.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    Model\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                id\n                            \n                            \n                                    Public\n                                productId\n                            \n                            \n                                    Public\n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: undefined, unique: true, autoIncrement: true, primaryKey: true, allowNull: false, field: 'id'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/product/models/bookmark.products.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        productId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ForeignKey(undefined)@Column({type: undefined, field: 'productId'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/product/models/bookmark.products.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        userId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ForeignKey(undefined)@Column({type: undefined, field: 'userId'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/product/models/bookmark.products.ts:28\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  Column,\n  DataType,\n  Table,\n  Model,\n  ForeignKey,\n} from 'sequelize-typescript';\nimport { User } from '../../users/models/user.model';\nimport { Product } from '../../product/models/product.model';\n\n@Table({ tableName: 'BOOKMARKS_Products', createdAt: false, updatedAt: false })\nexport class BookmarksProducts extends Model {\n  @Column({\n    type: DataType.INTEGER,\n    unique: true,\n    autoIncrement: true,\n    primaryKey: true,\n    allowNull: false,\n    field: 'id',\n  })\n  public id: number;\n\n  @ForeignKey(() => User)\n  @Column({\n    type: DataType.INTEGER,\n    field: 'userId',\n  })\n  public userId: number;\n\n  @ForeignKey(() => Product)\n  @Column({\n    type: DataType.INTEGER,\n    field: 'productId',\n  })\n  public productId: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/CardController.html":{"url":"controllers/CardController.html","title":"controller - CardController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  CardController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/cart/cart.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                card\n            \n\n\n\n\n\n\n\n    \n\n\n    \n        import { Controller, UseFilters } from '@nestjs/common';\nimport { ApiExceptionFilter } from '../common/filters/api-exception.filter';\nimport { ApiErrorExceptionFilter } from '../common/filters/error-handler.filter';\n@UseFilters(ApiErrorExceptionFilter, ApiExceptionFilter)\n@Controller('card')\nexport class CardController {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CardService.html":{"url":"injectables/CardService.html","title":"injectable - CardService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  CardService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/cart/cart.service.ts\n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable, Scope } from '@nestjs/common';\n\n@Injectable({ scope: Scope.TRANSIENT })\nexport class CardService {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Cart.html":{"url":"classes/Cart.html","title":"class - Cart","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Cart\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/cart/models/cart.model.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    Model\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                cartProducts\n                            \n                            \n                                    Private\n                                cartStatus\n                            \n                            \n                                    Public\n                                id\n                            \n                            \n                                    Public\n                                products\n                            \n                            \n                                    Public\n                                totalPrice\n                            \n                            \n                                    Private\n                                user\n                            \n                            \n                                    Public\n                                userId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getCartProducts\n                            \n                            \n                                getCartStatus\n                            \n                            \n                                getProducts\n                            \n                            \n                                getUser\n                            \n                            \n                                setCartStatus\n                            \n                            \n                                setUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        cartProducts\n                        \n                    \n                \n            \n                \n                    \n                        Type :     CartProduct[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @HasMany(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/cart/models/cart.model.ts:54\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        cartStatus\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: undefined, unique: false, field: 'cartStatus'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/cart/models/cart.model.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: undefined, unique: true, autoIncrement: true, primaryKey: true, field: 'id'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/cart/models/cart.model.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        products\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Product[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @BelongsToMany(undefined, undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/cart/models/cart.model.ts:51\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        totalPrice\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: undefined, unique: false, field: 'totalPrice'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/cart/models/cart.model.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @BelongsTo(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/cart/models/cart.model.ts:48\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        userId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ForeignKey(undefined)@Column({type: undefined, field: 'userId'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/cart/models/cart.model.ts:45\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getCartProducts\n                        \n                    \n                \n            \n            \n                \ngetCartProducts()\n                \n            \n\n\n            \n                \n                    Defined in src/cart/models/cart.model.ts:69\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     CartProduct[]\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getCartStatus\n                        \n                    \n                \n            \n            \n                \ngetCartStatus()\n                \n            \n\n\n            \n                \n                    Defined in src/cart/models/cart.model.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getProducts\n                        \n                    \n                \n            \n            \n                \ngetProducts()\n                \n            \n\n\n            \n                \n                    Defined in src/cart/models/cart.model.ts:65\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Product[]\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getUser\n                        \n                    \n                \n            \n            \n                \ngetUser()\n                \n            \n\n\n            \n                \n                    Defined in src/cart/models/cart.model.ts:73\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         User\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setCartStatus\n                        \n                    \n                \n            \n            \n                \nsetCartStatus(cartStatus: string)\n                \n            \n\n\n            \n                \n                    Defined in src/cart/models/cart.model.ts:60\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    cartStatus\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setUser\n                        \n                    \n                \n            \n            \n                \nsetUser(user: User)\n                \n            \n\n\n            \n                \n                    Defined in src/cart/models/cart.model.ts:77\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         User\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n  Column,\n  DataType,\n  Table,\n  Model,\n  HasMany,\n  ForeignKey,\n  BelongsToMany,\n  BelongsTo,\n} from 'sequelize-typescript';\nimport { Product } from '../../product/models/product.model';\nimport { User } from '../../users/models/user.model';\nimport { CartProduct } from './cart.product.model';\n\n@Table({ tableName: 'CARTS' })\nexport class Cart extends Model {\n  @Column({\n    type: DataType.INTEGER,\n    unique: true,\n    autoIncrement: true,\n    primaryKey: true,\n    field: 'id',\n  })\n  public id: number;\n\n  @Column({\n    type: DataType.ENUM('Open', 'CheckedOut'),\n    unique: false,\n    field: 'cartStatus',\n  })\n  private cartStatus: string;\n\n  @Column({\n    type: DataType.INTEGER,\n    unique: false,\n    field: 'totalPrice',\n  })\n  public totalPrice: number;\n\n  @ForeignKey(() => User)\n  @Column({\n    type: DataType.INTEGER,\n    field: 'userId',\n  })\n  public userId: number;\n\n  @BelongsTo(() => User)\n  private user: User;\n\n  @BelongsToMany(() => Product, () => CartProduct)\n  public products: Product[];\n\n  @HasMany(() => CartProduct)\n  public cartProducts: CartProduct[];\n\n  getCartStatus(): string {\n    return this.cartStatus;\n  }\n\n  setCartStatus(cartStatus: string): string {\n    this.cartStatus = cartStatus;\n    return this.cartStatus;\n  }\n\n  getProducts(): Product[] {\n    return this.products;\n  }\n\n  getCartProducts(): CartProduct[] {\n    return this.cartProducts;\n  }\n\n  getUser(): User {\n    return this.user;\n  }\n\n  setUser(user: User): User {\n    this.user = user;\n    return this.user;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CartModule.html":{"url":"modules/CartModule.html","title":"module - CartModule","body":"\n                   \n\n\n\n\n    Modules\n    CartModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_CartModule\n\n\n\ncluster_CartModule_providers\n\n\n\n\nCardService\n\nCardService\n\n\n\nCartModule\n\nCartModule\n\nCartModule -->\n\nCardService->CartModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/cart/cart.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            CardService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            CardController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { forwardRef, Module } from '@nestjs/common';\nimport { CardService } from './cart.service';\nimport { CardController } from './cart.controller';\nimport { ConfigModule } from '@nestjs/config';\nimport { SequelizeModule } from '@nestjs/sequelize';\nimport { Admin } from '../admin/models/admin.model';\nimport { AdminRefreshToken } from '../admin/models/admin.refresh.token.model';\nimport { Owner } from '../owner/models/owner.model';\nimport { OwnerRefreshToken } from '../owner/models/owner.refresh.token.model';\nimport { Role } from '../roles/models/roles.model';\nimport { UserRoles } from '../roles/models/user.roles.model';\nimport { RolesModule } from '../roles/roles.module';\nimport { User } from '../users/models/user.model';\nimport { UserRefreshToken } from '../users/models/user.refresh.token.model';\nimport { Cart } from './models/cart.model';\nimport { AuthModule } from '../auth/auth.module';\nimport { ProductModule } from '../product/product.module';\nimport { UsersModule } from '../users/users.module';\nimport { CartProduct } from './models/cart.product.model';\nimport { Colour } from '../categories&colours/models/colours.model';\nimport { ProductColours } from '../categories&colours/models/product.colour.model';\nimport { Category } from '../categories&colours/models/category.model';\nimport { ProductCategories } from '../categories&colours/models/product.categories.model';\nimport { Order } from '../orders/models/order.model';\nimport { OrderProduct } from '../orders/models/order.product.model';\nimport { Product } from '../product/models/product.model';\nimport { OrdersModule } from '../orders/orders.module';\nimport { CategoriesColoursModule } from 'src/categories&colours/categories&colours.module';\n\n@Module({\n  providers: [CardService],\n  controllers: [CardController],\n  imports: [\n    forwardRef(() => AuthModule),\n    ConfigModule.forRoot({\n      envFilePath: `.${process.env.NODE_ENV}.env`,\n      expandVariables: true,\n      isGlobal: true,\n    }),\n    SequelizeModule.forFeature([\n      Product,\n      Order,\n      OrderProduct,\n      Category,\n      ProductCategories,\n      Admin,\n      AdminRefreshToken,\n      Owner,\n      OwnerRefreshToken,\n      User,\n      UserRefreshToken,\n      Role,\n      UserRoles,\n      Cart,\n      CartProduct,\n      Colour,\n      ProductColours,\n    ]),\n    forwardRef(() => ProductModule),\n    forwardRef(() => OrdersModule),\n    forwardRef(() => CategoriesColoursModule),\n    forwardRef(() => RolesModule),\n    forwardRef(() => AuthModule),\n    forwardRef(() => UsersModule),\n  ],\n})\nexport class CartModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CartProduct.html":{"url":"classes/CartProduct.html","title":"class - CartProduct","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CartProduct\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/cart/models/cart.product.model.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    Model\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                cart\n                            \n                            \n                                    Public\n                                cartId\n                            \n                            \n                                    Public\n                                id\n                            \n                            \n                                    Private\n                                product\n                            \n                            \n                                    Public\n                                productId\n                            \n                            \n                                    Public\n                                quantity\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getCart\n                            \n                            \n                                getProduct\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        cart\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Cart\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @BelongsTo(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/cart/models/cart.product.model.ts:54\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        cartId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsInt()@ForeignKey(undefined)@Column({type: undefined, unique: true, allowNull: false, field: 'cartId'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/cart/models/cart.product.model.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: undefined, unique: true, autoIncrement: true, primaryKey: true, field: 'id'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/cart/models/cart.product.model.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        product\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Product\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @BelongsTo(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/cart/models/cart.product.model.ts:57\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        productId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsInt()@ForeignKey(undefined)@Column({type: undefined, unique: true, allowNull: false, field: 'productId'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/cart/models/cart.product.model.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        quantity\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsInt()@Column({type: undefined, unique: false, allowNull: false, field: 'quantity'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/cart/models/cart.product.model.ts:51\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getCart\n                        \n                    \n                \n            \n            \n                \ngetCart()\n                \n            \n\n\n            \n                \n                    Defined in src/cart/models/cart.product.model.ts:63\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Cart\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getProduct\n                        \n                    \n                \n            \n            \n                \ngetProduct()\n                \n            \n\n\n            \n                \n                    Defined in src/cart/models/cart.product.model.ts:59\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Product\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n  Column,\n  DataType,\n  Table,\n  Model,\n  IsInt,\n  ForeignKey,\n  BelongsTo,\n} from 'sequelize-typescript';\nimport { Product } from '../../product/models/product.model';\nimport { Cart } from './cart.model';\n\n@Table({ tableName: 'CART_products' })\nexport class CartProduct extends Model {\n  @Column({\n    type: DataType.INTEGER,\n    unique: true,\n    autoIncrement: true,\n    primaryKey: true,\n    field: 'id',\n  })\n  public id: number;\n\n  @IsInt\n  @ForeignKey(() => Product)\n  @Column({\n    type: DataType.INTEGER,\n    unique: true,\n    allowNull: false,\n    field: 'productId',\n  })\n  public productId: number;\n\n  @IsInt\n  @ForeignKey(() => Cart)\n  @Column({\n    type: DataType.INTEGER,\n    unique: true,\n    allowNull: false,\n    field: 'cartId',\n  })\n  public cartId: number;\n\n  @IsInt\n  @Column({\n    type: DataType.INTEGER,\n    unique: false,\n    allowNull: false,\n    field: 'quantity',\n  })\n  public quantity: number;\n\n  @BelongsTo(() => Cart)\n  private cart: Cart;\n\n  @BelongsTo(() => Product)\n  private product: Product;\n\n  getProduct(): Product {\n    return this.product;\n  }\n\n  getCart(): Cart {\n    return this.cart;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CategoriesColoursModule.html":{"url":"modules/CategoriesColoursModule.html","title":"module - CategoriesColoursModule","body":"\n                   \n\n\n\n\n    Modules\n    CategoriesColoursModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_CategoriesColoursModule\n\n\n\ncluster_CategoriesColoursModule_exports\n\n\n\ncluster_CategoriesColoursModule_providers\n\n\n\n\nCategoriesService \n\nCategoriesService \n\n\n\nColoursService \n\nColoursService \n\n\n\nCategoriesColoursModule\n\nCategoriesColoursModule\n\nCategoriesService  -->\n\nCategoriesColoursModule->CategoriesService \n\n\n\nColoursService  -->\n\nCategoriesColoursModule->ColoursService \n\n\n\n\n\nCategoriesService\n\nCategoriesService\n\nCategoriesColoursModule -->\n\nCategoriesService->CategoriesColoursModule\n\n\n\n\n\nColoursService\n\nColoursService\n\nCategoriesColoursModule -->\n\nColoursService->CategoriesColoursModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/categories&colours/categories&colours.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            CategoriesService\n                        \n                        \n                            ColoursService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            CategoriesController\n                        \n                        \n                            ColoursController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            CategoriesService\n                        \n                        \n                            ColoursService\n                        \n                    \n                \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        configure\n                        \n                    \n                \n            \n            \n                \nconfigure(consumer: MiddlewareConsumer)\n                \n            \n\n\n            \n                \n                    Defined in src/categories&colours/categories&colours.module.ts:69\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    consumer\n                                    \n                                            MiddlewareConsumer\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        import {\n  forwardRef,\n  MiddlewareConsumer,\n  Module,\n  NestModule,\n  RequestMethod,\n} from '@nestjs/common';\nimport { CategoriesService } from './services/categories.service';\nimport { CategoriesController } from './controllers/categories.controller';\nimport { ConfigModule } from '@nestjs/config';\nimport { SequelizeModule } from '@nestjs/sequelize';\nimport { AdminModule } from '../admin/admin.module';\nimport { Admin } from '../admin/models/admin.model';\nimport { AdminRefreshToken } from '../admin/models/admin.refresh.token.model';\nimport { AuthModule } from '../auth/auth.module';\nimport { Owner } from '../owner/models/owner.model';\nimport { OwnerRefreshToken } from '../owner/models/owner.refresh.token.model';\nimport { OwnerModule } from '../owner/owner.module';\nimport { Product } from '../product/models/product.model';\nimport { Role } from '../roles/models/roles.model';\nimport { UserRoles } from '../roles/models/user.roles.model';\nimport { RolesModule } from '../roles/roles.module';\nimport { User } from '../users/models/user.model';\nimport { UserRefreshToken } from '../users/models/user.refresh.token.model';\nimport { UsersModule } from '../users/users.module';\nimport { Category } from './models/category.model';\nimport { ProductCategories } from './models/product.categories.model';\nimport { ProductModule } from '../product/product.module';\nimport { InitializeUserMiddleware } from '../common/middlewares/initialize-user.middleware';\nimport { ColoursService } from './services/colours.service';\nimport { ColoursController } from './controllers/colours.controller';\nimport { Colour } from './models/colours.model';\nimport { ProductColours } from './models/product.colour.model';\n\n@Module({\n  providers: [CategoriesService, ColoursService],\n  controllers: [CategoriesController, ColoursController],\n  imports: [\n    ConfigModule.forRoot({\n      envFilePath: `.${process.env.NODE_ENV}.env`,\n      expandVariables: true,\n      isGlobal: true,\n    }),\n    SequelizeModule.forFeature([\n      Product,\n      Category,\n      ProductCategories,\n      Admin,\n      AdminRefreshToken,\n      Owner,\n      OwnerRefreshToken,\n      User,\n      UserRefreshToken,\n      Role,\n      UserRoles,\n      Colour,\n      ProductColours,\n    ]),\n    forwardRef(() => ProductModule),\n    forwardRef(() => AdminModule),\n    forwardRef(() => RolesModule),\n    forwardRef(() => AuthModule),\n    forwardRef(() => OwnerModule),\n    forwardRef(() => UsersModule),\n  ],\n  exports: [CategoriesService, ColoursService],\n})\nexport class CategoriesColoursModule implements NestModule {\n  configure(consumer: MiddlewareConsumer) {\n    consumer\n      .apply(InitializeUserMiddleware)\n      .forRoutes(\n        { path: 'categories/create_category', method: RequestMethod.PUT },\n        { path: 'categories/delete_category', method: RequestMethod.DELETE },\n        { path: 'colours/create_colour', method: RequestMethod.PUT },\n        { path: 'colours/delete_colour', method: RequestMethod.DELETE },\n        { path: '*', method: RequestMethod.PATCH },\n      );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/CategoriesController.html":{"url":"controllers/CategoriesController.html","title":"controller - CategoriesController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  CategoriesController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/categories&colours/controllers/categories.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                categories\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createCategory\n                            \n                            \n                                deleteCategory\n                            \n                            \n                                getCategories\n                            \n                            \n                                updateCategory\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        createCategory\n                        \n                    \n                \n            \n            \n                \ncreateCategory(categoryDto: CreateCategoryDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Throttle(70, 700)@ApiOperation({summary: 'Creating Categories'})@ApiResponse({status: 201, type: Category})@HttpCode(201)@Roles('OWNER', 'ADMIN')@UseGuards(JwtAuthGuard, RolesGuard, OwnerAdminGuard, AuthFerfershGuard, AddContentGuard)@Put('create_category')\n                \n            \n\n            \n                \n                    Defined in src/categories&colours/controllers/categories.controller.ts:61\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    categoryDto\n                                    \n                                                CreateCategoryDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteCategory\n                        \n                    \n                \n            \n            \n                \ndeleteCategory(categoryId: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Throttle(70, 700)@HttpCode(200)@Roles('OWNER', 'ADMIN')@UseGuards(JwtAuthGuard, RolesGuard, OwnerAdminGuard, AuthFerfershGuard, AddContentGuard)@Delete('delete_category/:categoryId')\n                \n            \n\n            \n                \n                    Defined in src/categories&colours/controllers/categories.controller.ts:98\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    categoryId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getCategories\n                        \n                    \n                \n            \n            \n                \ngetCategories()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Throttle(700, 7000)@CacheTTL(200)@Get('get_categoties')\n                \n            \n\n            \n                \n                    Defined in src/categories&colours/controllers/categories.controller.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateCategory\n                        \n                    \n                \n            \n            \n                \nupdateCategory(categoryId: number, categoryDto: CreateCategoryDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Throttle(70, 700)@ApiOperation({summary: 'Creating Categories'})@ApiResponse({status: 201, type: Category})@HttpCode(201)@Roles('OWNER', 'ADMIN')@UseGuards(JwtAuthGuard, RolesGuard, OwnerAdminGuard, AuthFerfershGuard, AddContentGuard)@Patch('update_category/:categoryId')\n                \n            \n\n            \n                \n                    Defined in src/categories&colours/controllers/categories.controller.ts:80\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    categoryId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    categoryDto\n                                    \n                                                CreateCategoryDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Body,\n  CacheInterceptor,\n  CacheTTL,\n  ClassSerializerInterceptor,\n  Controller,\n  Delete,\n  Get,\n  HttpCode,\n  Param,\n  ParseIntPipe,\n  Patch,\n  Put,\n  UseFilters,\n  UseGuards,\n  UseInterceptors,\n} from '@nestjs/common';\nimport { ApiOperation, ApiResponse } from '@nestjs/swagger';\nimport { Throttle } from '@nestjs/throttler';\nimport { Roles } from '../../common/decorators/roles-auth.decorator';\nimport { AddContentGuard } from '../../common/guards/add-content.guard';\nimport { AuthFerfershGuard } from '../../common/guards/jw-refresh.guard';\nimport { JwtAuthGuard } from '../../common/guards/jwt-auth.guard';\nimport { OwnerAdminGuard } from '../../common/guards/owner-admin.guard';\nimport { RolesGuard } from '../../common/guards/roles.guard';\nimport { ThrottlerBehindProxyGuard } from '../../common/guards/throttler-behind-proxy.guard';\nimport { ApiErrorExceptionFilter } from '../../common/filters/error-handler.filter';\nimport { CategoriesService } from '../services/categories.service';\nimport { CreateCategoryDto } from '../dto/create.category.dto';\nimport { Category } from '../models/category.model';\nimport { ApiExceptionFilter } from '../../common/filters/api-exception.filter';\nimport { ReturnedCategory } from '../../core/interfaces/product.interfaces';\n@UseGuards(ThrottlerBehindProxyGuard)\n@UseFilters(ApiErrorExceptionFilter, ApiExceptionFilter)\n@UseInterceptors(ClassSerializerInterceptor)\n@UseInterceptors(CacheInterceptor)\n@Controller('categories')\nexport class CategoriesController {\n  constructor(private readonly categoriesService: CategoriesService) {}\n\n  @Throttle(700, 7000)\n  @CacheTTL(200)\n  @Get('get_categoties')\n  getCategories(): Promise {\n    return this.categoriesService.getCategories();\n  }\n\n  @Throttle(70, 700)\n  @ApiOperation({ summary: 'Creating Categories' })\n  @ApiResponse({ status: 201, type: Category })\n  @HttpCode(201)\n  @Roles('OWNER', 'ADMIN')\n  @UseGuards(\n    JwtAuthGuard,\n    RolesGuard,\n    OwnerAdminGuard,\n    AuthFerfershGuard,\n    AddContentGuard,\n  )\n  @Put('create_category')\n  createCategory(\n    @Body() categoryDto: CreateCategoryDto,\n  ): Promise {\n    return this.categoriesService.createCategory(categoryDto);\n  }\n\n  @Throttle(70, 700)\n  @ApiOperation({ summary: 'Creating Categories' })\n  @ApiResponse({ status: 201, type: Category })\n  @HttpCode(201)\n  @Roles('OWNER', 'ADMIN')\n  @UseGuards(\n    JwtAuthGuard,\n    RolesGuard,\n    OwnerAdminGuard,\n    AuthFerfershGuard,\n    AddContentGuard,\n  )\n  @Patch('update_category/:categoryId')\n  updateCategory(\n    @Param('categoryId', ParseIntPipe) categoryId: number,\n    @Body() categoryDto: CreateCategoryDto,\n  ): Promise {\n    return this.categoriesService.updateCategory(categoryId, categoryDto);\n  }\n\n  @Throttle(70, 700)\n  @HttpCode(200)\n  @Roles('OWNER', 'ADMIN')\n  @UseGuards(\n    JwtAuthGuard,\n    RolesGuard,\n    OwnerAdminGuard,\n    AuthFerfershGuard,\n    AddContentGuard,\n  )\n  @Delete('delete_category/:categoryId')\n  deleteCategory(\n    @Param('categoryId', ParseIntPipe) categoryId: number,\n  ): Promise {\n    return this.categoriesService.deleteCategory(categoryId);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CategoriesService.html":{"url":"injectables/CategoriesService.html","title":"injectable - CategoriesService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  CategoriesService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/categories&colours/services/categories.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createCategory\n                            \n                            \n                                    Async\n                                deleteCategory\n                            \n                            \n                                    Async\n                                getCategories\n                            \n                            \n                                    Async\n                                getCategoriesByIds\n                            \n                            \n                                    Async\n                                getCategoryById\n                            \n                            \n                                    Async\n                                getCategoryByValue\n                            \n                            \n                                    Async\n                                updateCategory\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(categoryRepository)\n                    \n                \n                        \n                            \n                                Defined in src/categories&colours/services/categories.service.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        categoryRepository\n                                                  \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        createCategory\n                        \n                    \n                \n            \n            \n                \n                    \n                    createCategory(categoryDto: CreateCategoryDto)\n                \n            \n\n\n            \n                \n                    Defined in src/categories&colours/services/categories.service.ts:77\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    categoryDto\n                                    \n                                                CreateCategoryDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        deleteCategory\n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteCategory(categoryId: number)\n                \n            \n\n\n            \n                \n                    Defined in src/categories&colours/services/categories.service.ts:107\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    categoryId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getCategories\n                        \n                    \n                \n            \n            \n                \n                    \n                    getCategories()\n                \n            \n\n\n            \n                \n                    Defined in src/categories&colours/services/categories.service.ts:62\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getCategoriesByIds\n                        \n                    \n                \n            \n            \n                \n                    \n                    getCategoriesByIds(categoryIds: number[])\n                \n            \n\n\n            \n                \n                    Defined in src/categories&colours/services/categories.service.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    categoryIds\n                                    \n                                            number[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getCategoryById\n                        \n                    \n                \n            \n            \n                \n                    \n                    getCategoryById(categoryId: number)\n                \n            \n\n\n            \n                \n                    Defined in src/categories&colours/services/categories.service.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    categoryId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getCategoryByValue\n                        \n                    \n                \n            \n            \n                \n                    \n                    getCategoryByValue(value: string)\n                \n            \n\n\n            \n                \n                    Defined in src/categories&colours/services/categories.service.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        updateCategory\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateCategory(categoryId: number, updateDto: UpdateCategoryDto)\n                \n            \n\n\n            \n                \n                    Defined in src/categories&colours/services/categories.service.ts:128\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    categoryId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateDto\n                                    \n                                                UpdateCategoryDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpStatus, Injectable } from '@nestjs/common';\nimport { Scope } from '@nestjs/common/interfaces';\nimport { InjectModel } from '@nestjs/sequelize';\nimport { ApiException } from '../../common/exceptions/api.exception';\nimport { ReturnedCategory } from '../../core/interfaces/product.interfaces';\nimport {\n  ALREADY_EXIST_CATEGORY,\n  NOT_FOUND_CATEGORY,\n} from '../category.colour.constants';\nimport { CreateCategoryDto } from '../dto/create.category.dto';\nimport { UpdateCategoryDto } from '../dto/update.category.dto';\nimport { Category } from '../models/category.model';\n\n@Injectable({ scope: Scope.REQUEST })\nexport class CategoriesService {\n  constructor(\n    @InjectModel(Category) private readonly categoryRepository: typeof Category,\n  ) {}\n\n  async getCategoryByValue(value: string): Promise {\n    const category = await this.categoryRepository.findOne({\n      where: { ua: value },\n    });\n    if (!category) {\n      throw new ApiException(\n        HttpStatus.NOT_FOUND,\n        'Not found!',\n        NOT_FOUND_CATEGORY,\n      );\n    }\n    return category;\n  }\n\n  async getCategoriesByIds(categoryIds: number[]): Promise {\n    const category = await this.categoryRepository.findAll({\n      where: {\n        id: categoryIds,\n      },\n    });\n    if (category.length === 0 || !category) {\n      throw new ApiException(\n        HttpStatus.NOT_FOUND,\n        'Not found!',\n        NOT_FOUND_CATEGORY,\n      );\n    }\n    return category;\n  }\n\n  async getCategoryById(categoryId: number): Promise {\n    const category = await this.categoryRepository.findByPk(categoryId);\n    if (!category) {\n      throw new ApiException(\n        HttpStatus.NOT_FOUND,\n        'Not found!',\n        NOT_FOUND_CATEGORY,\n      );\n    }\n    return category;\n  }\n\n  async getCategories(): Promise {\n    const categories = await this.categoryRepository.findAll();\n    return categories.map((category) => {\n      return {\n        id: category.id,\n        ua: category.ua,\n        en: category.en,\n        rs: category.rs,\n        ru: category.ru,\n        createdAt: category.createdAt,\n        updatedAt: category.updatedAt,\n      };\n    });\n  }\n\n  async createCategory(\n    categoryDto: CreateCategoryDto,\n  ): Promise {\n    const isExist = await this.categoryRepository.findOne({\n      where: {\n        ua: categoryDto.ua,\n        en: categoryDto.en,\n        rs: categoryDto.rs,\n        ru: categoryDto.ru,\n      },\n    });\n    if (isExist) {\n      throw new ApiException(\n        HttpStatus.BAD_REQUEST,\n        'Bad request',\n        ALREADY_EXIST_CATEGORY,\n      );\n    }\n    const category = await this.categoryRepository.create({ ...categoryDto });\n    return {\n      id: category.id,\n      ua: category.ua,\n      en: category.en,\n      rs: category.rs,\n      ru: category.ru,\n      createdAt: category.createdAt,\n      updatedAt: category.updatedAt,\n    };\n  }\n\n  async deleteCategory(categoryId: number): Promise {\n    const isExist = await this.categoryRepository.findByPk(categoryId);\n    if (!isExist) {\n      throw new ApiException(\n        HttpStatus.NOT_FOUND,\n        'Not found!',\n        NOT_FOUND_CATEGORY,\n      );\n    }\n    const deleted = await this.categoryRepository.destroy({\n      where: {\n        id: isExist.id,\n        ua: isExist.ua,\n        en: isExist.en,\n        rs: isExist.rs,\n        ru: isExist.ru,\n      },\n    });\n    return deleted;\n  }\n\n  async updateCategory(\n    categoryId: number,\n    updateDto: UpdateCategoryDto,\n  ): Promise {\n    const isExist = await this.categoryRepository.findByPk(categoryId);\n    if (!isExist) {\n      throw new ApiException(\n        HttpStatus.NOT_FOUND,\n        'Not found!',\n        NOT_FOUND_CATEGORY,\n      );\n    }\n    isExist.ua = updateDto.ua;\n    isExist.ru = updateDto.ru;\n    isExist.rs = updateDto.rs;\n    isExist.en = updateDto.en;\n    await isExist.save();\n    const category = await this.categoryRepository.findOne({\n      where: {\n        id: isExist.id,\n        ua: isExist.ua,\n        en: isExist.en,\n        rs: isExist.rs,\n        ru: isExist.ru,\n      },\n    });\n    return {\n      id: category.id,\n      ua: category.ua,\n      en: category.en,\n      rs: category.rs,\n      ru: category.ru,\n      createdAt: category.createdAt,\n      updatedAt: category.updatedAt,\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Category.html":{"url":"classes/Category.html","title":"class - Category","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Category\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/categories&colours/models/category.model.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    Model\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                en\n                            \n                            \n                                    Public\n                                id\n                            \n                            \n                                    Private\n                                products\n                            \n                            \n                                    Public\n                                rs\n                            \n                            \n                                    Public\n                                ru\n                            \n                            \n                                    Public\n                                ua\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getProducts\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        en\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: undefined, allowNull: false, unique: false, field: 'en-locale'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/categories&colours/models/category.model.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: undefined, unique: true, autoIncrement: true, primaryKey: true, field: 'id'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/categories&colours/models/category.model.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        products\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Product[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @BelongsToMany(undefined, undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/categories&colours/models/category.model.ts:56\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        rs\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: undefined, allowNull: false, unique: false, field: 'rs-locale'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/categories&colours/models/category.model.ts:53\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        ru\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: undefined, allowNull: false, unique: false, field: 'ru-locale'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/categories&colours/models/category.model.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        ua\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: undefined, allowNull: false, unique: false, field: 'ua-locale'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/categories&colours/models/category.model.ts:29\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getProducts\n                        \n                    \n                \n            \n            \n                \ngetProducts()\n                \n            \n\n\n            \n                \n                    Defined in src/categories&colours/models/category.model.ts:58\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Product[]\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n  Column,\n  DataType,\n  Table,\n  Model,\n  BelongsToMany,\n} from 'sequelize-typescript';\nimport { CategoryCreationAtrb } from '../../core/interfaces/product.interfaces';\nimport { Product } from '../../product/models/product.model';\nimport { ProductCategories } from './product.categories.model';\n\n@Table({ tableName: 'CATEGORIES' })\nexport class Category extends Model {\n  @Column({\n    type: DataType.INTEGER,\n    unique: true,\n    autoIncrement: true,\n    primaryKey: true,\n    field: 'id',\n  })\n  public id: number;\n\n  @Column({\n    type: DataType.STRING,\n    allowNull: false,\n    unique: false,\n    field: 'ua-locale',\n  })\n  public ua: string;\n\n  @Column({\n    type: DataType.STRING,\n    allowNull: false,\n    unique: false,\n    field: 'ru-locale',\n  })\n  public ru: string;\n\n  @Column({\n    type: DataType.STRING,\n    allowNull: false,\n    unique: false,\n    field: 'en-locale',\n  })\n  public en: string;\n\n  @Column({\n    type: DataType.STRING,\n    allowNull: false,\n    unique: false,\n    field: 'rs-locale',\n  })\n  public rs: string;\n\n  @BelongsToMany(() => Product, () => ProductCategories)\n  private products: Product[];\n\n  getProducts(): Product[] {\n    return this.products;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CategoryCreationAtrb.html":{"url":"interfaces/CategoryCreationAtrb.html","title":"interface - CategoryCreationAtrb","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  CategoryCreationAtrb\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/interfaces/product.interfaces.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            en\n                                        \n                                \n                                \n                                        \n                                            rs\n                                        \n                                \n                                \n                                        \n                                            ru\n                                        \n                                \n                                \n                                        \n                                            ua\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        en\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        en:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        rs\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        rs:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ru\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ru:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ua\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ua:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface ProductCreationAttrs {\n  title: string;\n  description: string;\n  ownerId?: number;\n  adminId?: number;\n  images: string[];\n  price: number;\n  sizeChartImage: string;\n  sizes: string[];\n}\n\nexport interface ReviewCreationAtrb {\n  name: string;\n  surname: string;\n  review: string;\n}\n\nexport interface ReturnedReview {\n  id: number;\n  name: string;\n  surname: string;\n  review: string;\n  createdAt: any;\n  updatedAt: any;\n}\n\nexport interface CategoryCreationAtrb {\n  ua: string;\n  ru: string;\n  rs: string;\n  en: string;\n}\n\nexport interface ColourCreationAtrb {\n  ua: string;\n  ru: string;\n  rs: string;\n  en: string;\n  hex: string;\n}\n\nexport interface ReturnedProduct {\n  id: number;\n  title: {\n    ua: string;\n    ru: string;\n    rs: string;\n    en: string;\n  };\n  description: {\n    ua: string;\n    ru: string;\n    rs: string;\n    en: string;\n  };\n  price: number;\n  quantity: number;\n  images: string[];\n  sizeChartImage: string;\n  sizes: string[];\n  colours: ReturnedColour[];\n  categories: ReturnedCategory[];\n  reviews: ReturnedReview[] | [];\n}\n\nexport interface ReturnedProducts {\n  products: ReturnedProduct[];\n  totalProducts: number;\n}\n\nexport interface ReturnedCategory {\n  id: number;\n  ua: string;\n  en: string;\n  rs: string;\n  ru: string;\n  createdAt: any;\n  updatedAt: any;\n}\n\nexport interface ReturnedColour {\n  id: number;\n  ua: string;\n  en: string;\n  rs: string;\n  ru: string;\n  hex: string;\n  createdAt: any;\n  updatedAt: any;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ChangeDto.html":{"url":"classes/ChangeDto.html","title":"class - ChangeDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ChangeDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/dto/change.password.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                confirmPassword\n                            \n                            \n                                    Readonly\n                                password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        confirmPassword\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'etrhg45ty5yeewt4t4665y', description: 'user`s confirm password'})@IsString()@Matches(/^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{8,}$/, {message: PASSWORD_VALIDATION})@Match('password')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/change.password.dto.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'etrhg45ty5yeewt4t4665y', description: 'user`s password'})@IsString()@Matches(/^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{8,}$/, {message: PASSWORD_VALIDATION})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/change.password.dto.ts:18\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsString, Matches } from 'class-validator';\nimport { Match } from '../../common/decorators/match.decorator';\nimport { PASSWORD_VALIDATION } from '../auth.constants';\n\nexport class ChangeDto {\n  @ApiProperty({\n    example: 'etrhg45ty5yeewt4t4665y',\n    description: 'user`s password',\n  })\n  @IsString()\n  @Matches(\n    /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{8,}$/,\n    {\n      message: PASSWORD_VALIDATION,\n    },\n  )\n  readonly password: string;\n\n  @ApiProperty({\n    example: 'etrhg45ty5yeewt4t4665y',\n    description: 'user`s confirm password',\n  })\n  @IsString()\n  @Matches(\n    /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{8,}$/,\n    {\n      message: PASSWORD_VALIDATION,\n    },\n  )\n  @Match('password')\n  readonly confirmPassword: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CodeDto.html":{"url":"interfaces/CodeDto.html","title":"interface - CodeDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  CodeDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/interfaces/auth.interfaces.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:     \"OWNER\" | \"ADMIN\" | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"OWNER\" | \"ADMIN\" | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Role } from '../../roles/models/roles.model';\nexport interface Payload {\n  email: string;\n  userId: number;\n  userActivationLink: string;\n  isUserActivated: boolean;\n  roles?: Role[];\n}\n\nexport interface Tokens {\n  refreshToken: string;\n  accessToken: string;\n  expireDate: Date;\n}\n\nexport interface AuthUser {\n  accessToken: string;\n  user: ReturnedUser | ReturnedAdmin | ReturnedOwner;\n}\n\nexport interface ReturnedUser {\n  id: number;\n  name: string;\n  surname: string;\n  phoneNumber: string;\n  email: string;\n  country: string | null;\n  city: string | null;\n  postOffice: string | null;\n  type: 'USER';\n}\n\nexport interface ReturnedOwner {\n  id: number;\n  name: string;\n  surname: string;\n  phoneNumber: string;\n  email: string;\n  type: 'OWNER';\n}\n\nexport interface ReturnedAdmin {\n  id: number;\n  name: string;\n  surname: string;\n  phoneNumber: string;\n  email: string;\n  type: 'ADMIN';\n}\n\nexport interface CodeDto {\n  type: 'OWNER' | 'ADMIN' | null;\n  email: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Colour.html":{"url":"classes/Colour.html","title":"class - Colour","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Colour\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/categories&colours/models/colours.model.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    Model\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                en\n                            \n                            \n                                    Public\n                                hex\n                            \n                            \n                                    Public\n                                id\n                            \n                            \n                                    Private\n                                products\n                            \n                            \n                                    Public\n                                rs\n                            \n                            \n                                    Public\n                                ru\n                            \n                            \n                                    Public\n                                ua\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getProducts\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        en\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: undefined, allowNull: false, unique: false, field: 'en-locale'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/categories&colours/models/colours.model.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        hex\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: undefined, allowNull: false, unique: false, field: 'hex'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/categories&colours/models/colours.model.ts:61\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: undefined, unique: true, autoIncrement: true, primaryKey: true, field: 'id'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/categories&colours/models/colours.model.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        products\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Product[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @BelongsToMany(undefined, undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/categories&colours/models/colours.model.ts:64\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        rs\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: undefined, allowNull: false, unique: false, field: 'rs-locale'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/categories&colours/models/colours.model.ts:53\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        ru\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: undefined, allowNull: false, unique: false, field: 'ru-locale'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/categories&colours/models/colours.model.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        ua\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: undefined, allowNull: false, unique: false, field: 'ua-locale'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/categories&colours/models/colours.model.ts:29\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getProducts\n                        \n                    \n                \n            \n            \n                \ngetProducts()\n                \n            \n\n\n            \n                \n                    Defined in src/categories&colours/models/colours.model.ts:66\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Product[]\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n  Column,\n  DataType,\n  Table,\n  Model,\n  BelongsToMany,\n} from 'sequelize-typescript';\nimport { ColourCreationAtrb } from '../../core/interfaces/product.interfaces';\nimport { Product } from '../../product/models/product.model';\nimport { ProductColours } from './product.colour.model';\n\n@Table({ tableName: 'COLOURS' })\nexport class Colour extends Model {\n  @Column({\n    type: DataType.INTEGER,\n    unique: true,\n    autoIncrement: true,\n    primaryKey: true,\n    field: 'id',\n  })\n  public id: number;\n\n  @Column({\n    type: DataType.STRING,\n    allowNull: false,\n    unique: false,\n    field: 'ua-locale',\n  })\n  public ua: string;\n\n  @Column({\n    type: DataType.STRING,\n    allowNull: false,\n    unique: false,\n    field: 'ru-locale',\n  })\n  public ru: string;\n\n  @Column({\n    type: DataType.STRING,\n    allowNull: false,\n    unique: false,\n    field: 'en-locale',\n  })\n  public en: string;\n\n  @Column({\n    type: DataType.STRING,\n    allowNull: false,\n    unique: false,\n    field: 'rs-locale',\n  })\n  public rs: string;\n\n  @Column({\n    type: DataType.STRING,\n    allowNull: false,\n    unique: false,\n    field: 'hex',\n  })\n  public hex: string;\n\n  @BelongsToMany(() => Product, () => ProductColours)\n  private products: Product[];\n\n  getProducts(): Product[] {\n    return this.products;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ColourCreationAtrb.html":{"url":"interfaces/ColourCreationAtrb.html","title":"interface - ColourCreationAtrb","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ColourCreationAtrb\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/interfaces/product.interfaces.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            en\n                                        \n                                \n                                \n                                        \n                                            hex\n                                        \n                                \n                                \n                                        \n                                            rs\n                                        \n                                \n                                \n                                        \n                                            ru\n                                        \n                                \n                                \n                                        \n                                            ua\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        en\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        en:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        hex\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        hex:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        rs\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        rs:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ru\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ru:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ua\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ua:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface ProductCreationAttrs {\n  title: string;\n  description: string;\n  ownerId?: number;\n  adminId?: number;\n  images: string[];\n  price: number;\n  sizeChartImage: string;\n  sizes: string[];\n}\n\nexport interface ReviewCreationAtrb {\n  name: string;\n  surname: string;\n  review: string;\n}\n\nexport interface ReturnedReview {\n  id: number;\n  name: string;\n  surname: string;\n  review: string;\n  createdAt: any;\n  updatedAt: any;\n}\n\nexport interface CategoryCreationAtrb {\n  ua: string;\n  ru: string;\n  rs: string;\n  en: string;\n}\n\nexport interface ColourCreationAtrb {\n  ua: string;\n  ru: string;\n  rs: string;\n  en: string;\n  hex: string;\n}\n\nexport interface ReturnedProduct {\n  id: number;\n  title: {\n    ua: string;\n    ru: string;\n    rs: string;\n    en: string;\n  };\n  description: {\n    ua: string;\n    ru: string;\n    rs: string;\n    en: string;\n  };\n  price: number;\n  quantity: number;\n  images: string[];\n  sizeChartImage: string;\n  sizes: string[];\n  colours: ReturnedColour[];\n  categories: ReturnedCategory[];\n  reviews: ReturnedReview[] | [];\n}\n\nexport interface ReturnedProducts {\n  products: ReturnedProduct[];\n  totalProducts: number;\n}\n\nexport interface ReturnedCategory {\n  id: number;\n  ua: string;\n  en: string;\n  rs: string;\n  ru: string;\n  createdAt: any;\n  updatedAt: any;\n}\n\nexport interface ReturnedColour {\n  id: number;\n  ua: string;\n  en: string;\n  rs: string;\n  ru: string;\n  hex: string;\n  createdAt: any;\n  updatedAt: any;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/ColoursController.html":{"url":"controllers/ColoursController.html","title":"controller - ColoursController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  ColoursController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/categories&colours/controllers/colours.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                colours\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createcolour\n                            \n                            \n                                deletecolour\n                            \n                            \n                                getcolours\n                            \n                            \n                                updatecolour\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        createcolour\n                        \n                    \n                \n            \n            \n                \ncreatecolour(colourDto: CreateColourDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Throttle(70, 700)@ApiOperation({summary: 'Creating colours'})@ApiResponse({status: 201, type: Colour})@HttpCode(201)@Roles('OWNER', 'ADMIN')@UseGuards(JwtAuthGuard, RolesGuard, OwnerAdminGuard, AuthFerfershGuard, AddContentGuard)@Put('create_colour')\n                \n            \n\n            \n                \n                    Defined in src/categories&colours/controllers/colours.controller.ts:61\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    colourDto\n                                    \n                                                CreateColourDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deletecolour\n                        \n                    \n                \n            \n            \n                \ndeletecolour(colourId: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Throttle(70, 700)@HttpCode(200)@Roles('OWNER', 'ADMIN')@UseGuards(JwtAuthGuard, RolesGuard, OwnerAdminGuard, AuthFerfershGuard, AddContentGuard)@Delete('delete_colour/:colourId')\n                \n            \n\n            \n                \n                    Defined in src/categories&colours/controllers/colours.controller.ts:96\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    colourId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getcolours\n                        \n                    \n                \n            \n            \n                \ngetcolours()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Throttle(700, 7000)@CacheTTL(200)@Get('get_colours')\n                \n            \n\n            \n                \n                    Defined in src/categories&colours/controllers/colours.controller.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatecolour\n                        \n                    \n                \n            \n            \n                \nupdatecolour(colourId: number, colourDto: CreateColourDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Throttle(70, 700)@ApiOperation({summary: 'Creating colours'})@ApiResponse({status: 201, type: Colour})@HttpCode(201)@Roles('OWNER', 'ADMIN')@UseGuards(JwtAuthGuard, RolesGuard, OwnerAdminGuard, AuthFerfershGuard, AddContentGuard)@Patch('update_colour/:colourId')\n                \n            \n\n            \n                \n                    Defined in src/categories&colours/controllers/colours.controller.ts:78\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    colourId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    colourDto\n                                    \n                                                CreateColourDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Body,\n  CacheInterceptor,\n  CacheTTL,\n  ClassSerializerInterceptor,\n  Controller,\n  Delete,\n  Get,\n  HttpCode,\n  Param,\n  ParseIntPipe,\n  Patch,\n  Put,\n  UseFilters,\n  UseGuards,\n  UseInterceptors,\n} from '@nestjs/common';\nimport { ApiOperation, ApiResponse } from '@nestjs/swagger';\nimport { Throttle } from '@nestjs/throttler';\nimport { Roles } from '../../common/decorators/roles-auth.decorator';\nimport { AddContentGuard } from '../../common/guards/add-content.guard';\nimport { AuthFerfershGuard } from '../../common/guards/jw-refresh.guard';\nimport { JwtAuthGuard } from '../../common/guards/jwt-auth.guard';\nimport { OwnerAdminGuard } from '../../common/guards/owner-admin.guard';\nimport { RolesGuard } from '../../common/guards/roles.guard';\nimport { ThrottlerBehindProxyGuard } from '../../common/guards/throttler-behind-proxy.guard';\nimport { ApiErrorExceptionFilter } from '../../common/filters/error-handler.filter';\nimport { CreateColourDto } from '../dto/create.colour.dto';\nimport { Colour } from '../models/colours.model';\nimport { ApiExceptionFilter } from '../../common/filters/api-exception.filter';\nimport { ReturnedColour } from '../../core/interfaces/product.interfaces';\nimport { ColoursService } from '../services/colours.service';\n@UseGuards(ThrottlerBehindProxyGuard)\n@UseFilters(ApiErrorExceptionFilter, ApiExceptionFilter)\n@UseInterceptors(ClassSerializerInterceptor)\n@UseInterceptors(CacheInterceptor)\n@Controller('colours')\nexport class ColoursController {\n  constructor(private readonly coloursService: ColoursService) {}\n\n  @Throttle(700, 7000)\n  @CacheTTL(200)\n  @Get('get_colours')\n  getcolours(): Promise {\n    return this.coloursService.getColours();\n  }\n\n  @Throttle(70, 700)\n  @ApiOperation({ summary: 'Creating colours' })\n  @ApiResponse({ status: 201, type: Colour })\n  @HttpCode(201)\n  @Roles('OWNER', 'ADMIN')\n  @UseGuards(\n    JwtAuthGuard,\n    RolesGuard,\n    OwnerAdminGuard,\n    AuthFerfershGuard,\n    AddContentGuard,\n  )\n  @Put('create_colour')\n  createcolour(@Body() colourDto: CreateColourDto): Promise {\n    return this.coloursService.createColour(colourDto);\n  }\n\n  @Throttle(70, 700)\n  @ApiOperation({ summary: 'Creating colours' })\n  @ApiResponse({ status: 201, type: Colour })\n  @HttpCode(201)\n  @Roles('OWNER', 'ADMIN')\n  @UseGuards(\n    JwtAuthGuard,\n    RolesGuard,\n    OwnerAdminGuard,\n    AuthFerfershGuard,\n    AddContentGuard,\n  )\n  @Patch('update_colour/:colourId')\n  updatecolour(\n    @Param('colourId', ParseIntPipe) colourId: number,\n    @Body() colourDto: CreateColourDto,\n  ): Promise {\n    return this.coloursService.updateColour(colourId, colourDto);\n  }\n\n  @Throttle(70, 700)\n  @HttpCode(200)\n  @Roles('OWNER', 'ADMIN')\n  @UseGuards(\n    JwtAuthGuard,\n    RolesGuard,\n    OwnerAdminGuard,\n    AuthFerfershGuard,\n    AddContentGuard,\n  )\n  @Delete('delete_colour/:colourId')\n  deletecolour(\n    @Param('colourId', ParseIntPipe) colourId: number,\n  ): Promise {\n    return this.coloursService.deleteColour(colourId);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ColoursService.html":{"url":"injectables/ColoursService.html","title":"injectable - ColoursService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ColoursService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/categories&colours/services/colours.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createColour\n                            \n                            \n                                    Async\n                                deleteColour\n                            \n                            \n                                    Async\n                                getColourById\n                            \n                            \n                                    Async\n                                getColourByValue\n                            \n                            \n                                    Async\n                                getColours\n                            \n                            \n                                    Async\n                                getColoursByIds\n                            \n                            \n                                    Async\n                                updateColour\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(colourRepository)\n                    \n                \n                        \n                            \n                                Defined in src/categories&colours/services/colours.service.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        colourRepository\n                                                  \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        createColour\n                        \n                    \n                \n            \n            \n                \n                    \n                    createColour(colourDto: CreateColourDto)\n                \n            \n\n\n            \n                \n                    Defined in src/categories&colours/services/colours.service.ts:78\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    colourDto\n                                    \n                                                CreateColourDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        deleteColour\n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteColour(colourId: number)\n                \n            \n\n\n            \n                \n                    Defined in src/categories&colours/services/colours.service.ts:108\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    colourId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getColourById\n                        \n                    \n                \n            \n            \n                \n                    \n                    getColourById(colourId: number)\n                \n            \n\n\n            \n                \n                    Defined in src/categories&colours/services/colours.service.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    colourId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getColourByValue\n                        \n                    \n                \n            \n            \n                \n                    \n                    getColourByValue(value: string)\n                \n            \n\n\n            \n                \n                    Defined in src/categories&colours/services/colours.service.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getColours\n                        \n                    \n                \n            \n            \n                \n                    \n                    getColours()\n                \n            \n\n\n            \n                \n                    Defined in src/categories&colours/services/colours.service.ts:62\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getColoursByIds\n                        \n                    \n                \n            \n            \n                \n                    \n                    getColoursByIds(colourIds: number[])\n                \n            \n\n\n            \n                \n                    Defined in src/categories&colours/services/colours.service.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    colourIds\n                                    \n                                            number[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        updateColour\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateColour(colourId: number, updateDto: UpdateColourDto)\n                \n            \n\n\n            \n                \n                    Defined in src/categories&colours/services/colours.service.ts:130\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    colourId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateDto\n                                    \n                                                UpdateColourDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpStatus, Injectable } from '@nestjs/common';\nimport { Scope } from '@nestjs/common/interfaces';\nimport { InjectModel } from '@nestjs/sequelize';\nimport { ApiException } from '../../common/exceptions/api.exception';\nimport { ReturnedColour } from '../../core/interfaces/product.interfaces';\nimport {\n  ALREADY_EXIST_COLOUR,\n  NOT_FOUND_COLOUR,\n} from '../category.colour.constants';\nimport { CreateColourDto } from '../dto/create.colour.dto';\nimport { UpdateColourDto } from '../dto/update.colour.dto';\nimport { Colour } from '../models/colours.model';\n\n@Injectable({ scope: Scope.REQUEST })\nexport class ColoursService {\n  constructor(\n    @InjectModel(Colour) private readonly colourRepository: typeof Colour,\n  ) {}\n\n  async getColourByValue(value: string): Promise {\n    const colour = await this.colourRepository.findOne({\n      where: { ua: value },\n    });\n    if (!colour) {\n      throw new ApiException(\n        HttpStatus.NOT_FOUND,\n        'Not found!',\n        NOT_FOUND_COLOUR,\n      );\n    }\n    return colour;\n  }\n\n  async getColoursByIds(colourIds: number[]): Promise {\n    const colour = await this.colourRepository.findAll({\n      where: {\n        id: colourIds,\n      },\n    });\n    if (colour.length === 0 || !colour) {\n      throw new ApiException(\n        HttpStatus.NOT_FOUND,\n        'Not found!',\n        NOT_FOUND_COLOUR,\n      );\n    }\n    return colour;\n  }\n\n  async getColourById(colourId: number): Promise {\n    const colour = await this.colourRepository.findByPk(colourId);\n    if (!colour) {\n      throw new ApiException(\n        HttpStatus.NOT_FOUND,\n        'Not found!',\n        NOT_FOUND_COLOUR,\n      );\n    }\n    return colour;\n  }\n\n  async getColours(): Promise {\n    const categories = await this.colourRepository.findAll();\n    return categories.map((colour) => {\n      return {\n        id: colour.id,\n        ua: colour.ua,\n        en: colour.en,\n        rs: colour.rs,\n        ru: colour.ru,\n        hex: colour.hex,\n        createdAt: colour.createdAt,\n        updatedAt: colour.updatedAt,\n      };\n    });\n  }\n\n  async createColour(colourDto: CreateColourDto): Promise {\n    const isExist = await this.colourRepository.findOne({\n      where: {\n        ua: colourDto.ua,\n        en: colourDto.en,\n        rs: colourDto.rs,\n        ru: colourDto.ru,\n        hex: colourDto.hex,\n      },\n    });\n    if (isExist) {\n      throw new ApiException(\n        HttpStatus.BAD_REQUEST,\n        'Bad request',\n        ALREADY_EXIST_COLOUR,\n      );\n    }\n    const colour = await this.colourRepository.create({ ...colourDto });\n    return {\n      id: colour.id,\n      ua: colour.ua,\n      en: colour.en,\n      rs: colour.rs,\n      ru: colour.ru,\n      hex: colour.hex,\n      createdAt: colour.createdAt,\n      updatedAt: colour.updatedAt,\n    };\n  }\n\n  async deleteColour(colourId: number): Promise {\n    const isExist = await this.colourRepository.findByPk(colourId);\n    if (!isExist) {\n      throw new ApiException(\n        HttpStatus.NOT_FOUND,\n        'Not found!',\n        NOT_FOUND_COLOUR,\n      );\n    }\n    const deleted = await this.colourRepository.destroy({\n      where: {\n        id: isExist.id,\n        ua: isExist.ua,\n        en: isExist.en,\n        rs: isExist.rs,\n        ru: isExist.ru,\n        hex: isExist.hex,\n      },\n    });\n    return deleted;\n  }\n\n  async updateColour(\n    colourId: number,\n    updateDto: UpdateColourDto,\n  ): Promise {\n    const isExist = await this.colourRepository.findByPk(colourId);\n    if (!isExist) {\n      throw new ApiException(\n        HttpStatus.NOT_FOUND,\n        'Not found!',\n        NOT_FOUND_COLOUR,\n      );\n    }\n    isExist.ua = updateDto.ua;\n    isExist.ru = updateDto.ru;\n    isExist.rs = updateDto.rs;\n    isExist.en = updateDto.en;\n    isExist.hex = updateDto.hex;\n    await isExist.save();\n    const colour = await this.colourRepository.findOne({\n      where: {\n        id: isExist.id,\n        ua: isExist.ua,\n        en: isExist.en,\n        rs: isExist.rs,\n        ru: isExist.ru,\n      },\n    });\n    return {\n      id: colour.id,\n      ua: colour.ua,\n      en: colour.en,\n      rs: colour.rs,\n      ru: colour.ru,\n      hex: colour.hex,\n      createdAt: colour.createdAt,\n      updatedAt: colour.updatedAt,\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CoreModule.html":{"url":"modules/CoreModule.html","title":"module - CoreModule","body":"\n                   \n\n\n\n\n    Modules\n    CoreModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_CoreModule\n\n\n\ncluster_CoreModule_providers\n\n\n\n\nAppClusterService\n\nAppClusterService\n\n\n\nCoreModule\n\nCoreModule\n\nCoreModule -->\n\nAppClusterService->CoreModule\n\n\n\n\n\nCurrencyService\n\nCurrencyService\n\nCoreModule -->\n\nCurrencyService->CoreModule\n\n\n\n\n\nFilesService\n\nFilesService\n\nCoreModule -->\n\nFilesService->CoreModule\n\n\n\n\n\nTasksService\n\nTasksService\n\nCoreModule -->\n\nTasksService->CoreModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/core/core.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppClusterService\n                        \n                        \n                            CurrencyService\n                        \n                        \n                            FilesService\n                        \n                        \n                            TasksService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { forwardRef, Module } from '@nestjs/common';\nimport { APP_FILTER, APP_GUARD, APP_INTERCEPTOR } from '@nestjs/core';\nimport { AllExceptionsFilter } from './filters/all-exceptions.filter';\nimport { ThrottlerBehindProxyGuard } from '../common/guards/throttler-behind-proxy.guard';\nimport { GlobalInterceptor } from './interceptors/global.interceptor';\nimport { AppClusterService } from './services/cluster.service';\nimport { FilesService } from './services/file.service';\nimport { ConfigModule } from '@nestjs/config';\nimport { ScheduleModule } from '@nestjs/schedule';\nimport { TasksService } from './services/scedule.service';\nimport { EventEmitterModule } from '@nestjs/event-emitter';\nimport { BullModule } from '@nestjs/bull';\nimport { GarbageCollectingProcessor } from './processors/garbage.processor';\nimport { Admin } from '../admin/models/admin.model';\nimport { AdminRefreshToken } from '../admin/models/admin.refresh.token.model';\nimport { CartProduct } from '../cart/models/cart.product.model';\nimport { Cart } from '../cart/models/cart.model';\nimport { Colour } from '../categories&colours/models/colours.model';\nimport { ProductColours } from '../categories&colours/models/product.colour.model';\nimport { Category } from '../categories&colours/models/category.model';\nimport { ProductCategories } from '../categories&colours/models/product.categories.model';\nimport { Order } from '../orders/models/order.model';\nimport { OrderProduct } from '../orders/models/order.product.model';\nimport { Owner } from '../owner/models/owner.model';\nimport { OwnerRefreshToken } from '../owner/models/owner.refresh.token.model';\nimport { Product } from '../product/models/product.model';\nimport { Role } from '../roles/models/roles.model';\nimport { UserRoles } from '../roles/models/user.roles.model';\nimport { User } from '../users/models/user.model';\nimport { UserRefreshToken } from '../users/models/user.refresh.token.model';\nimport { SequelizeModule } from '@nestjs/sequelize';\nimport { CurrencyService } from '../owner/services/currency.service';\nimport { Currencies } from '../owner/models/currencies.model';\nimport { HttpModule } from '@nestjs/axios';\nimport { AdminModule } from '../admin/admin.module';\nimport { AuthModule } from '../auth/auth.module';\nimport { MailModule } from '../mail/mail.module';\nimport { OwnerModule } from '../owner/owner.module';\nimport { ProductModule } from '../product/product.module';\nimport { RolesModule } from '../roles/roles.module';\nimport { UsersModule } from '../users/users.module';\n@Module({\n  providers: [\n    { provide: APP_INTERCEPTOR, useClass: GlobalInterceptor },\n    { provide: APP_FILTER, useClass: AllExceptionsFilter },\n    {\n      provide: APP_GUARD,\n      useClass: ThrottlerBehindProxyGuard,\n    },\n    CurrencyService,\n    TasksService,\n    AppClusterService,\n    FilesService,\n    GarbageCollectingProcessor,\n  ],\n  imports: [\n    HttpModule,\n    BullModule.registerQueue({\n      name: 'garbageCollecting',\n    }),\n    EventEmitterModule.forRoot({\n      wildcard: true,\n      delimiter: '.',\n      newListener: true,\n      removeListener: true,\n      maxListeners: 10,\n      verboseMemoryLeak: true,\n      ignoreErrors: false,\n    }),\n    ScheduleModule.forRoot(),\n    ConfigModule.forRoot({\n      envFilePath: `.${process.env.NODE_ENV}.env`,\n      expandVariables: true,\n      isGlobal: true,\n    }),\n    SequelizeModule.forFeature([\n      Product,\n      Order,\n      OrderProduct,\n      Category,\n      ProductCategories,\n      Admin,\n      AdminRefreshToken,\n      Owner,\n      OwnerRefreshToken,\n      User,\n      UserRefreshToken,\n      Role,\n      UserRoles,\n      Cart,\n      CartProduct,\n      Currencies,\n      Colour,\n      ProductColours,\n    ]),\n    forwardRef(() => MailModule),\n    forwardRef(() => ProductModule),\n    forwardRef(() => CoreModule),\n    forwardRef(() => AdminModule),\n    forwardRef(() => RolesModule),\n    forwardRef(() => AuthModule),\n    forwardRef(() => OwnerModule),\n    forwardRef(() => UsersModule),\n  ],\n})\nexport class CoreModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CorsMiddleware.html":{"url":"injectables/CorsMiddleware.html","title":"injectable - CorsMiddleware","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  CorsMiddleware\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/middlewares/cors.middleware.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                Logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                isEmpty\n                            \n                            \n                                use\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        isEmpty\n                        \n                    \n                \n            \n            \n                \n                    \n                    isEmpty(object: RequestHeaders)\n                \n            \n\n\n            \n                \n                    Defined in src/core/middlewares/cors.middleware.ts:81\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    object\n                                    \n                                                RequestHeaders\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        use\n                        \n                    \n                \n            \n            \n                \nuse(req: Request, res: Response, next: NextFunction)\n                \n            \n\n\n            \n                \n                    Defined in src/core/middlewares/cors.middleware.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                            NextFunction\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        Logger\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Logger(CorsMiddleware.name)\n                    \n                \n                    \n                        \n                                Defined in src/core/middlewares/cors.middleware.ts:23\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import {\n  BadRequestException,\n  Injectable,\n  Logger,\n  NestMiddleware,\n  Next,\n  Req,\n  Res,\n  Scope,\n} from '@nestjs/common';\nimport { Request, Response, NextFunction } from 'express';\nimport geoip from 'geoip-lite';\nimport IP from 'ip';\ninterface RequestHeaders {\n  Accept?: string;\n  Host?: string;\n  Connection?: string;\n  [key: string]: string;\n}\n\n@Injectable({ scope: Scope.REQUEST })\nexport class CorsMiddleware implements NestMiddleware {\n  readonly Logger = new Logger(CorsMiddleware.name);\n  use(@Req() req: Request, @Res() res: Response, @Next() next: NextFunction) {\n    const headers: RequestHeaders = JSON.parse(JSON.stringify(req.headers));\n    const isEmpty = this.isEmpty(headers);\n    const geo = geoip.reloadDataSync();\n    const ipAddress = IP.address();\n    this.Logger.log(geo);\n    this.Logger.log(ipAddress);\n    this.Logger.log(req.headers['x-forwarded-for']);\n    if (isEmpty) {\n      throw new BadRequestException({\n        message: 'No request headers were provided!',\n      });\n    }\n    res.setHeader(\n      'Access-Control-Allow-Origin',\n      `${process.env.CLIENT_URL.toString().trim()}`,\n    );\n    res.setHeader(\n      'Access-Control-Allow-Methods',\n      'OPTIONS, GET, POST, PUT, PATCH, DELETE',\n    );\n    res.setHeader('Access-Control-Allow-Credentials', 'true');\n    res.header(\n      'Access-Control-Allow-Headers',\n      'imageType, Authorization, X-Requested-With, X-HTTP-Method-Override, Content-Type, Accept',\n    );\n    res.setHeader('X-Frame-Options', 'deny');\n    res.setHeader(\n      'Cache-Control',\n      'no-store, no-cache, must-revalidate, max-age=0, s-maxage=0',\n    );\n    res.setHeader('Expires', '0');\n    res.setHeader('Strict-Transport-Security', 'max-age=5184000,preload');\n    res.setHeader(\n      'Content-Security-Policy',\n      `default-src 'self'; font-src 'self'; img-src 'self'; script-src 'self'; style-src 'self'; frame-src 'self'`,\n    );\n    res.setHeader(\n      'X-Content-Security-Policy',\n      `default-src 'self'; script-src 'self'; object-src 'self'; style-src 'self'; img - src 'self' data:; media - src 'self'; frame - src 'self'; font - src 'self'; connect - src 'self'`,\n    );\n    res.setHeader('X-Permitted-Cross-Domain-Policies', 'none');\n    res.setHeader('X-DNS-Prefetch-Control', 'off');\n    res.setHeader('X-XSS-Protection', '1; mode=block');\n    res.setHeader(\n      'X-WebKit-CSP',\n      `default-src 'self'; script-src 'self'; object-src 'self'; style-src 'self'; img-src 'self' data:; media-src 'self'; frame-src 'self'; font-src 'self'; connect-src 'self'`,\n    );\n    res.removeHeader('server');\n    res.removeHeader('X-Powered-By');\n    res.setHeader('X-XSS-Protection', '1; mode=block');\n    if (req.method === 'OPTIONS') {\n      return res.status(204).end();\n    }\n    return next();\n  }\n\n  private isEmpty(object: RequestHeaders): boolean {\n    for (const prop in object) {\n      if (Object.prototype.hasOwnProperty.call(object, prop)) {\n        return false;\n      }\n    }\n    return JSON.stringify(object) === JSON.stringify({});\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateAccessTokenDto.html":{"url":"classes/CreateAccessTokenDto.html","title":"class - CreateAccessTokenDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateAccessTokenDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/dto/create.access.token.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                email\n                            \n                            \n                                    Readonly\n                                    Optional\n                                isUserActivated\n                            \n                            \n                                    Readonly\n                                    Optional\n                                roles\n                            \n                            \n                                    Readonly\n                                    Optional\n                                userActivationLink\n                            \n                            \n                                    Readonly\n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'user@gmail.com', description: 'user`s email'})@IsString()@IsEmail()@Matches(/^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/, {message: EMAIL_VALIDATION})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/create.access.token.dto.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                            Optional\n                        isUserActivated\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'True', description: 'Is user activated'})@IsBoolean()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/create.access.token.dto.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                            Optional\n                        roles\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Role[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'USER', description: 'user`s roles'})@IsArray()@ArrayNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/create.access.token.dto.ts:48\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                            Optional\n                        userActivationLink\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: '9b1deb4d-3b7d-4bad-9bdd-2b0d7b3dcb6d', description: 'user`s activation link'})@IsUUID(4)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/create.access.token.dto.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        userId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: '1', description: 'unique identifier'})@IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/create.access.token.dto.ts:18\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport {\n  IsEmail,\n  IsString,\n  Matches,\n  IsBoolean,\n  IsNumber,\n  IsUUID,\n  IsArray,\n  ArrayNotEmpty,\n} from 'class-validator';\nimport { Role } from '../../roles/models/roles.model';\nimport { EMAIL_VALIDATION } from '../auth.constants';\n\nexport class CreateAccessTokenDto {\n  @ApiProperty({ example: '1', description: 'unique identifier' })\n  @IsNumber()\n  readonly userId: number;\n\n  @ApiProperty({\n    example: 'True',\n    description: 'Is user activated',\n  })\n  @IsBoolean()\n  readonly isUserActivated?: boolean;\n\n  @ApiProperty({\n    example: '9b1deb4d-3b7d-4bad-9bdd-2b0d7b3dcb6d',\n    description: 'user`s activation link',\n  })\n  @IsUUID(4)\n  readonly userActivationLink?: string;\n\n  @ApiProperty({ example: 'user@gmail.com', description: 'user`s email' })\n  @IsString()\n  @IsEmail()\n  @Matches(\n    /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/,\n    {\n      message: EMAIL_VALIDATION,\n    },\n  )\n  readonly email: string;\n\n  @ApiProperty({ example: 'USER', description: 'user`s roles' })\n  @IsArray()\n  @ArrayNotEmpty()\n  readonly roles?: Role[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateAdminDto.html":{"url":"classes/CreateAdminDto.html","title":"class - CreateAdminDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateAdminDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/admin/dto/create-admin.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                activationLink\n                            \n                            \n                                    Readonly\n                                addContent\n                            \n                            \n                                    Readonly\n                                editContent\n                            \n                            \n                                    Readonly\n                                editWebSite\n                            \n                            \n                                    Readonly\n                                email\n                            \n                            \n                                    Readonly\n                                isAdmin\n                            \n                            \n                                    Readonly\n                                name\n                            \n                            \n                                    Readonly\n                                password\n                            \n                            \n                                    Readonly\n                                phoneNumber\n                            \n                            \n                                    Readonly\n                                surname\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        activationLink\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'etrhg45ty5yeewt4t4665yупвіяпвкірніп', description: 'admin`s activation link'})@IsUUID(4)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/admin/dto/create-admin.dto.ts:54\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        addContent\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'False', description: 'Right to add content'})@IsBoolean()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/admin/dto/create-admin.dto.ts:68\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        editContent\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'False', description: 'Right to edit content'})@IsBoolean()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/admin/dto/create-admin.dto.ts:75\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        editWebSite\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'False', description: 'Right to edit website'})@IsBoolean()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/admin/dto/create-admin.dto.ts:61\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'user@gmail.com', description: 'admin`s email'})@IsString()@IsEmail()@Matches(/^[a-z0-9]+@[a-z]+\\.[a-z]{2,64}$/, {message: EMAIL_VALIDATION})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/admin/dto/create-admin.dto.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        isAdmin\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'False', description: 'is user Admin'})@IsBoolean()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/admin/dto/create-admin.dto.ts:82\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'Alex', description: 'admin`s name'})@IsString()@Matches(/[a-zA-Z0-9_-]{2,20}/, {message: ADMINNAME_VALIDATION})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/admin/dto/create-admin.dto.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'etrhg45ty5yeewt4t4665y', description: 'admin`s password'})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/admin/dto/create-admin.dto.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        phoneNumber\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: '+251912345678', description: 'admin`s phone number'})@IsString()@Matches(/^[\\+]?[(]?[0-9]{3}[)]?[-\\s\\.]?[0-9]{3}[-\\s\\.]?[0-9]{4,6}$/, {message: PHONENUMBER_VALIDATION})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/admin/dto/create-admin.dto.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        surname\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'Casler', description: 'admin`s name'})@IsString()@Matches(/[a-zA-Z0-9_-]{2,20}/, {message: ADMINNAME_VALIDATION})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/admin/dto/create-admin.dto.ts:22\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsBoolean, IsEmail, IsString, IsUUID, Matches } from 'class-validator';\nimport {\n  EMAIL_VALIDATION,\n  PHONENUMBER_VALIDATION,\n  ADMINNAME_VALIDATION,\n} from '../constants/admin.constants';\n\nexport class CreateAdminDto {\n  @ApiProperty({ example: 'Alex', description: 'admin`s name' })\n  @IsString()\n  @Matches(/[a-zA-Z0-9_-]{2,20}/, {\n    message: ADMINNAME_VALIDATION,\n  })\n  readonly name: string;\n\n  @ApiProperty({ example: 'Casler', description: 'admin`s name' })\n  @IsString()\n  @Matches(/[a-zA-Z0-9_-]{2,20}/, {\n    message: ADMINNAME_VALIDATION,\n  })\n  readonly surname: string;\n\n  @ApiProperty({\n    example: '+251912345678',\n    description: 'admin`s phone number',\n  })\n  @IsString()\n  @Matches(/^[\\+]?[(]?[0-9]{3}[)]?[-\\s\\.]?[0-9]{3}[-\\s\\.]?[0-9]{4,6}$/, {\n    message: PHONENUMBER_VALIDATION,\n  })\n  readonly phoneNumber: string;\n\n  @ApiProperty({ example: 'user@gmail.com', description: 'admin`s email' })\n  @IsString()\n  @IsEmail()\n  @Matches(/^[a-z0-9]+@[a-z]+\\.[a-z]{2,64}$/, {\n    message: EMAIL_VALIDATION,\n  })\n  readonly email: string;\n\n  @ApiProperty({\n    example: 'etrhg45ty5yeewt4t4665y',\n    description: 'admin`s password',\n  })\n  @IsString()\n  readonly password: string;\n\n  @ApiProperty({\n    example: 'etrhg45ty5yeewt4t4665yупвіяпвкірніп',\n    description: 'admin`s activation link',\n  })\n  @IsUUID(4)\n  readonly activationLink: string;\n\n  @ApiProperty({\n    example: 'False',\n    description: 'Right to edit website',\n  })\n  @IsBoolean()\n  readonly editWebSite: boolean;\n\n  @ApiProperty({\n    example: 'False',\n    description: 'Right to add content',\n  })\n  @IsBoolean()\n  readonly addContent: boolean;\n\n  @ApiProperty({\n    example: 'False',\n    description: 'Right to edit content',\n  })\n  @IsBoolean()\n  readonly editContent: boolean;\n\n  @ApiProperty({\n    example: 'False',\n    description: 'is user Admin',\n  })\n  @IsBoolean()\n  readonly isAdmin: boolean;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateAdminRefreshTokenDto.html":{"url":"classes/CreateAdminRefreshTokenDto.html","title":"class - CreateAdminRefreshTokenDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateAdminRefreshTokenDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/admin/dto/create-admin-refresh-token.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                adminAgent\n                            \n                            \n                                    Readonly\n                                adminId\n                            \n                            \n                                    Readonly\n                                email\n                            \n                            \n                                    Readonly\n                                isActivated\n                            \n                            \n                                    Readonly\n                                roles\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        adminAgent\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'Mozilla/5.0 (Windows NT 7.0; Win32; x32) AppleWebKit/523.34 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/523.34', description: 'admin`s agent'})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/admin/dto/create-admin-refresh-token.dto.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        adminId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: '1', description: 'unique identifier'})@IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/admin/dto/create-admin-refresh-token.dto.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'admin@gmail.com', description: 'admin`s email'})@IsString()@IsEmail()@Matches(/^[a-z0-9]+@[a-z]+\\.[a-z]{2,64}$/, {message: EMAIL_VALIDATION})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/admin/dto/create-admin-refresh-token.dto.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        isActivated\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'True', description: 'Is admin activated'})@IsBoolean()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/admin/dto/create-admin-refresh-token.dto.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        roles\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Role[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: '[User, Admin]', description: 'roles of User'})@IsArray()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/admin/dto/create-admin-refresh-token.dto.ts:47\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport {\n  IsEmail,\n  IsString,\n  Matches,\n  IsBoolean,\n  IsNumber,\n  IsArray,\n} from 'class-validator';\nimport { Role } from '../../roles/models/roles.model';\nimport { EMAIL_VALIDATION } from '../constants/admin.constants';\n\nexport class CreateAdminRefreshTokenDto {\n  @ApiProperty({ example: '1', description: 'unique identifier' })\n  @IsNumber()\n  readonly adminId: number;\n\n  @ApiProperty({\n    example: 'True',\n    description: 'Is admin activated',\n  })\n  @IsBoolean()\n  readonly isActivated: boolean;\n\n  @ApiProperty({ example: 'admin@gmail.com', description: 'admin`s email' })\n  @IsString()\n  @IsEmail()\n  @Matches(/^[a-z0-9]+@[a-z]+\\.[a-z]{2,64}$/, {\n    message: EMAIL_VALIDATION,\n  })\n  readonly email: string;\n\n  @ApiProperty({\n    example:\n      // tslint:disable-next-line: max-line-length\n      'Mozilla/5.0 (Windows NT 7.0; Win32; x32) AppleWebKit/523.34 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/523.34',\n    description: 'admin`s agent',\n  })\n  @IsString()\n  readonly adminAgent: string;\n\n  @ApiProperty({\n    example: '[User, Admin]',\n    description: 'roles of User',\n  })\n  @IsArray()\n  readonly roles: Role[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateCategoryDto.html":{"url":"classes/CreateCategoryDto.html","title":"class - CreateCategoryDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateCategoryDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/categories&colours/dto/create.category.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                en\n                            \n                            \n                                rs\n                            \n                            \n                                ru\n                            \n                            \n                                ua\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        en\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@MinLength(2)@MaxLength(30)@Matches(/[a-zA-Z0-9а-яієїґА_ЯЇЄЇЁёА-я_-]{2,30}/)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/categories&colours/dto/create.category.dto.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        rs\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@MinLength(2)@MaxLength(30)@Matches(/[a-zA-Z0-9а-яієїґА_ЯЇЄЇЁёА-я_-]{2,30}/)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/categories&colours/dto/create.category.dto.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ru\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@MinLength(2)@MaxLength(30)@Matches(/[a-zA-Z0-9а-яієїґА_ЯЇЄЇЁёА-я_-]{2,30}/)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/categories&colours/dto/create.category.dto.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ua\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@MinLength(2)@MaxLength(30)@Matches(/[a-zA-Z0-9а-яієїґА_ЯЇЄЇЁёА-я_-]{2,30}/)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/categories&colours/dto/create.category.dto.ts:8\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsString, MinLength, MaxLength, Matches } from 'class-validator';\n\nexport class CreateCategoryDto {\n  @IsString()\n  @MinLength(2)\n  @MaxLength(30)\n  @Matches(/[a-zA-Z0-9а-яієїґА_ЯЇЄЇЁёА-я_-]{2,30}/)\n  ua: string;\n\n  @IsString()\n  @MinLength(2)\n  @MaxLength(30)\n  @Matches(/[a-zA-Z0-9а-яієїґА_ЯЇЄЇЁёА-я_-]{2,30}/)\n  ru: string;\n\n  @IsString()\n  @MinLength(2)\n  @MaxLength(30)\n  @Matches(/[a-zA-Z0-9а-яієїґА_ЯЇЄЇЁёА-я_-]{2,30}/)\n  rs: string;\n\n  @IsString()\n  @MinLength(2)\n  @MaxLength(30)\n  @Matches(/[a-zA-Z0-9а-яієїґА_ЯЇЄЇЁёА-я_-]{2,30}/)\n  en: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateColourDto.html":{"url":"classes/CreateColourDto.html","title":"class - CreateColourDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateColourDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/categories&colours/dto/create.colour.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                en\n                            \n                            \n                                hex\n                            \n                            \n                                rs\n                            \n                            \n                                ru\n                            \n                            \n                                ua\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        en\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@MinLength(2)@MaxLength(30)@Matches(/[a-zA-Z0-9а-яієїґА_ЯЇЄЇЁёА-я_-]{2,30}/)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/categories&colours/dto/create.colour.dto.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hex\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@MinLength(2)@MaxLength(30)@Matches(/[a-zA-Z0-9а-яієїґА_ЯЇЄЇЁёА-я_-]{2,30}/)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/categories&colours/dto/create.colour.dto.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        rs\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@MinLength(2)@MaxLength(30)@Matches(/[a-zA-Z0-9а-яієїґА_ЯЇЄЇЁёА-я_-]{2,30}/)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/categories&colours/dto/create.colour.dto.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ru\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@MinLength(2)@MaxLength(30)@Matches(/[a-zA-Z0-9а-яієїґА_ЯЇЄЇЁёА-я_-]{2,30}/)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/categories&colours/dto/create.colour.dto.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ua\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@MinLength(2)@MaxLength(30)@Matches(/[a-zA-Z0-9а-яієїґА_ЯЇЄЇЁёА-я_-]{2,30}/)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/categories&colours/dto/create.colour.dto.ts:8\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsString, MinLength, MaxLength, Matches } from 'class-validator';\n\nexport class CreateColourDto {\n  @IsString()\n  @MinLength(2)\n  @MaxLength(30)\n  @Matches(/[a-zA-Z0-9а-яієїґА_ЯЇЄЇЁёА-я_-]{2,30}/)\n  ua: string;\n\n  @IsString()\n  @MinLength(2)\n  @MaxLength(30)\n  @Matches(/[a-zA-Z0-9а-яієїґА_ЯЇЄЇЁёА-я_-]{2,30}/)\n  ru: string;\n\n  @IsString()\n  @MinLength(2)\n  @MaxLength(30)\n  @Matches(/[a-zA-Z0-9а-яієїґА_ЯЇЄЇЁёА-я_-]{2,30}/)\n  rs: string;\n\n  @IsString()\n  @MinLength(2)\n  @MaxLength(30)\n  @Matches(/[a-zA-Z0-9а-яієїґА_ЯЇЄЇЁёА-я_-]{2,30}/)\n  en: string;\n\n  @IsString()\n  @MinLength(2)\n  @MaxLength(30)\n  @Matches(/[a-zA-Z0-9а-яієїґА_ЯЇЄЇЁёА-я_-]{2,30}/)\n  hex: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateOwnerDto.html":{"url":"classes/CreateOwnerDto.html","title":"class - CreateOwnerDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateOwnerDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/owner/dto/create.owner.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                activationLink\n                            \n                            \n                                    Readonly\n                                email\n                            \n                            \n                                    Readonly\n                                name\n                            \n                            \n                                    Readonly\n                                ownerAgent\n                            \n                            \n                                    Readonly\n                                password\n                            \n                            \n                                    Readonly\n                                phoneNumber\n                            \n                            \n                                    Readonly\n                                surname\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        activationLink\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'etrhg45ty5yeewt4t4665yупвіяпвкірніп', description: 'owner`s activation link'})@IsUUID(4)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/owner/dto/create.owner.dto.ts:58\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'user@gmail.com', description: 'owner`s email'})@IsString()@IsEmail()@Matches(/^[a-z0-9]+@[a-z]+\\.[a-z]{2,64}$/, {message: EMAIL_VALIDATION})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/owner/dto/create.owner.dto.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'Alex', description: 'owner`s name'})@IsString()@Matches(/[a-zA-Z0-9_-]{2,20}/, {message: OWNERNAME_VALIDATION})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/owner/dto/create.owner.dto.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        ownerAgent\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'Mozilla/5.0 (Windows NT 7.0; Win32; x32) AppleWebKit/523.34 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/523.34', description: 'owner`s agent'})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/owner/dto/create.owner.dto.ts:67\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'etrhg45ty5yeewt4t4665y', description: 'owner`s password'})@IsString()@Matches(/^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[@#$%^&+=]).{6,64}$/gm, {message: PASSWORD_VALIDATION})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/owner/dto/create.owner.dto.ts:51\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        phoneNumber\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: '+251912345678', description: 'owner`s phone number'})@IsString()@Matches(/^[\\+]?[(]?[0-9]{3}[)]?[-\\s\\.]?[0-9]{3}[-\\s\\.]?[0-9]{4,6}$/, {message: PHONENUMBER_VALIDATION})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/owner/dto/create.owner.dto.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        surname\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'Casler', description: 'owner`s name'})@IsString()@Matches(/[a-zA-Z0-9_-]{2,20}/, {message: OWNERNAME_VALIDATION})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/owner/dto/create.owner.dto.ts:23\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsEmail, IsString, IsUUID, Matches } from 'class-validator';\nimport {\n  EMAIL_VALIDATION,\n  PASSWORD_VALIDATION,\n  PHONENUMBER_VALIDATION,\n  OWNERNAME_VALIDATION,\n} from '../constants/owner.constants';\n\nexport class CreateOwnerDto {\n  @ApiProperty({ example: 'Alex', description: 'owner`s name' })\n  @IsString()\n  @Matches(/[a-zA-Z0-9_-]{2,20}/, {\n    message: OWNERNAME_VALIDATION,\n  })\n  readonly name: string;\n\n  @ApiProperty({ example: 'Casler', description: 'owner`s name' })\n  @IsString()\n  @Matches(/[a-zA-Z0-9_-]{2,20}/, {\n    message: OWNERNAME_VALIDATION,\n  })\n  readonly surname: string;\n\n  @ApiProperty({\n    example: '+251912345678',\n    description: 'owner`s phone number',\n  })\n  @IsString()\n  @Matches(/^[\\+]?[(]?[0-9]{3}[)]?[-\\s\\.]?[0-9]{3}[-\\s\\.]?[0-9]{4,6}$/, {\n    message: PHONENUMBER_VALIDATION,\n  })\n  readonly phoneNumber: string;\n\n  @ApiProperty({ example: 'user@gmail.com', description: 'owner`s email' })\n  @IsString()\n  @IsEmail()\n  @Matches(/^[a-z0-9]+@[a-z]+\\.[a-z]{2,64}$/, {\n    message: EMAIL_VALIDATION,\n  })\n  readonly email: string;\n\n  @ApiProperty({\n    example: 'etrhg45ty5yeewt4t4665y',\n    description: 'owner`s password',\n  })\n  @IsString()\n  @Matches(/^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[@#$%^&+=]).{6,64}$/gm, {\n    message: PASSWORD_VALIDATION,\n  })\n  readonly password: string;\n\n  @ApiProperty({\n    example: 'etrhg45ty5yeewt4t4665yупвіяпвкірніп',\n    description: 'owner`s activation link',\n  })\n  @IsUUID(4)\n  readonly activationLink: string;\n\n  @ApiProperty({\n    example:\n      // tslint:disable-next-line: max-line-length\n      'Mozilla/5.0 (Windows NT 7.0; Win32; x32) AppleWebKit/523.34 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/523.34',\n    description: 'owner`s agent',\n  })\n  @IsString()\n  readonly ownerAgent: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateOwnerRefreshTokenDto.html":{"url":"classes/CreateOwnerRefreshTokenDto.html","title":"class - CreateOwnerRefreshTokenDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateOwnerRefreshTokenDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/owner/dto/create.owner.refresh.token.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                email\n                            \n                            \n                                    Readonly\n                                isActivated\n                            \n                            \n                                    Readonly\n                                ownerAgent\n                            \n                            \n                                    Readonly\n                                ownerId\n                            \n                            \n                                    Readonly\n                                roles\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'owner@gmail.com', description: 'owner`s email'})@IsString()@IsEmail()@Matches(/^[a-z0-9]+@[a-z]+\\.[a-z]{2,64}$/, {message: EMAIL_VALIDATION})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/owner/dto/create.owner.refresh.token.dto.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        isActivated\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'True', description: 'Is owner activated'})@IsBoolean()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/owner/dto/create.owner.refresh.token.dto.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        ownerAgent\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'Mozilla/5.0 (Windows NT 7.0; Win32; x32) AppleWebKit/523.34 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/523.34', description: 'owner`s agent'})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/owner/dto/create.owner.refresh.token.dto.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        ownerId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: '1', description: 'unique identifier'})@IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/owner/dto/create.owner.refresh.token.dto.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        roles\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Role[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: '[User, Admin]', description: 'roles of User'})@IsArray()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/owner/dto/create.owner.refresh.token.dto.ts:47\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport {\n  IsEmail,\n  IsString,\n  Matches,\n  IsBoolean,\n  IsNumber,\n  IsArray,\n} from 'class-validator';\nimport { Role } from '../../roles/models/roles.model';\nimport { EMAIL_VALIDATION } from '../constants/owner.constants';\n\nexport class CreateOwnerRefreshTokenDto {\n  @ApiProperty({ example: '1', description: 'unique identifier' })\n  @IsNumber()\n  readonly ownerId: number;\n\n  @ApiProperty({\n    example: 'True',\n    description: 'Is owner activated',\n  })\n  @IsBoolean()\n  readonly isActivated: boolean;\n\n  @ApiProperty({ example: 'owner@gmail.com', description: 'owner`s email' })\n  @IsString()\n  @IsEmail()\n  @Matches(/^[a-z0-9]+@[a-z]+\\.[a-z]{2,64}$/, {\n    message: EMAIL_VALIDATION,\n  })\n  readonly email: string;\n\n  @ApiProperty({\n    example:\n      // tslint:disable-next-line: max-line-length\n      'Mozilla/5.0 (Windows NT 7.0; Win32; x32) AppleWebKit/523.34 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/523.34',\n    description: 'owner`s agent',\n  })\n  @IsString()\n  readonly ownerAgent: string;\n\n  @ApiProperty({\n    example: '[User, Admin]',\n    description: 'roles of User',\n  })\n  @IsArray()\n  readonly roles: Role[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateProductDto.html":{"url":"classes/CreateProductDto.html","title":"class - CreateProductDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateProductDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/product/dto/create.product.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                description\n                            \n                            \n                                    Readonly\n                                price\n                            \n                            \n                                    Readonly\n                                quantity\n                            \n                            \n                                    Readonly\n                                title\n                            \n                            \n                                \n                            \n                            \n                                \n                            \n                            \n                                \n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsDefined()@Type(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/product/dto/create.product.dto.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        price\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsDefined()@Type(undefined)@IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/product/dto/create.product.dto.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        quantity\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsDefined()@Transform(value => )@Type(undefined)@IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/product/dto/create.product.dto.ts:67\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsDefined()@Type(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/product/dto/create.product.dto.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                    \n                \n            \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsDefined()@Type(undefined, readonly, sizes, undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/product/dto/create.product.dto.ts:52\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                    \n                \n            \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsDefined()@Type(undefined, readonly, colours, undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/product/dto/create.product.dto.ts:61\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                    \n                \n            \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsDefined()@Type(undefined, readonly, categories, undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/product/dto/create.product.dto.ts:74\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Transform, Type } from 'class-transformer';\nimport { IsString, IsNumber, IsDefined, Matches } from 'class-validator';\nclass Nested {\n  @IsDefined()\n  @IsString()\n  @Matches(/[a-zA-Z0-9а-яієїґА_ЯЇЄЇЁёА-яzžitisšte_-]/gi)\n  ua: string;\n  @IsDefined()\n  @IsString()\n  @Matches(/[a-zA-Z0-9а-яієїґА_ЯЇЄЇЁёА-яzžitisšte_-]/gi)\n  ru: string;\n  @IsDefined()\n  @IsString()\n  @Matches(/[a-zA-Z0-9а-яієїґА_ЯЇЄЇЁёА-яzžitisšte_-]/gi)\n  rs: string;\n  @IsDefined()\n  @IsString()\n  @Matches(/[a-zA-Z0-9а-яієїґА_ЯЇЄЇЁёА-яzžitisšte_-]/gi)\n  en: string;\n}\nexport class CreateProductDto {\n  @IsDefined()\n  @Type(() => Nested)\n  readonly title: {\n    ua: string;\n    ru: string;\n    rs: string;\n    en: string;\n  };\n\n  @IsDefined()\n  @Type(() => Nested)\n  readonly description: {\n    ua: string;\n    ru: string;\n    rs: string;\n    en: string;\n  };\n\n  @IsDefined()\n  @Type(() => Number)\n  @IsNumber()\n  readonly price: number;\n\n  @IsDefined()\n  @Type(() => Array)\n  // @Transform((value) => ParseJsonPipe.transform(value.value, value.obj))\n  // @IsArray()\n  // @ArrayNotEmpty()\n  // @IsString({ each: true })\n  // @MaxLength(15, { each: true })\n  readonly sizes: string[];\n\n  @IsDefined()\n  @Type(() => Array)\n  // @Transform((value) => JSON.parse(value.value))\n  // @IsArray()\n  // @ArrayNotEmpty()\n  // @IsString({ each: true })\n  // @MaxLength(15, { each: true })\n  readonly colours: number[];\n\n  @IsDefined()\n  @Transform((value: any) => Number(value.value))\n  @Type(() => Number)\n  @IsNumber()\n  readonly quantity: number;\n\n  @IsDefined()\n  @Type(() => Array)\n  // @Transform((value) => JSON.parse(value.value))\n  // @IsArray()\n  // @ArrayNotEmpty()\n  readonly categories: number[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateReviewDto.html":{"url":"classes/CreateReviewDto.html","title":"class - CreateReviewDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateReviewDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/reviews/create.review.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                name\n                            \n                            \n                                    Readonly\n                                review\n                            \n                            \n                                    Readonly\n                                surname\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsDefined()@Matches(/[a-zA-Z0-9а-яієїґА_ЯЇЄЇЁёА-яzžitisšte_-]/gi)@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/reviews/create.review.dto.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        review\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsDefined()@Matches(/[a-zA-Z0-9а-яієїґА_ЯЇЄЇЁёА-яzžitisšte_-]/gi)@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/reviews/create.review.dto.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        surname\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsDefined()@Matches(/[a-zA-Z0-9а-яієїґА_ЯЇЄЇЁёА-яzžitisšte_-]/gi)@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/reviews/create.review.dto.ts:12\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsString, IsDefined, Matches } from 'class-validator';\n\nexport class CreateReviewDto {\n  @IsDefined()\n  @Matches(/[a-zA-Z0-9а-яієїґА_ЯЇЄЇЁёА-яzžitisšte_-]/gi)\n  @IsString()\n  readonly name: string;\n\n  @IsDefined()\n  @Matches(/[a-zA-Z0-9а-яієїґА_ЯЇЄЇЁёА-яzžitisšte_-]/gi)\n  @IsString()\n  readonly surname: string;\n\n  @IsDefined()\n  @Matches(/[a-zA-Z0-9а-яієїґА_ЯЇЄЇЁёА-яzžitisšte_-]/gi)\n  @IsString()\n  readonly review: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateRoleDto.html":{"url":"classes/CreateRoleDto.html","title":"class - CreateRoleDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateRoleDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/roles/dto/create.role.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                description\n                            \n                            \n                                    Readonly\n                                value\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'Admin', description: 'Role`s description'})@IsString()@MinLength(2)@MaxLength(30)@Matches(/[a-zA-Z0-9а-яієїґА_ЯЇЄЇЁёА-я_-]{2,30}/)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/roles/dto/create.role.dto.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        value\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'ADMIN', description: 'user`s role'})@IsString()@MinLength(2)@MaxLength(30)@Matches(/[a-zA-Z0-9а-яієїґА_ЯЇЄЇЁёА-я_-]{2,30}/)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/roles/dto/create.role.dto.ts:10\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsString, MinLength, MaxLength, Matches } from 'class-validator';\n\nexport class CreateRoleDto {\n  @ApiProperty({ example: 'ADMIN', description: 'user`s role' })\n  @IsString()\n  @MinLength(2)\n  @MaxLength(30)\n  @Matches(/[a-zA-Z0-9а-яієїґА_ЯЇЄЇЁёА-я_-]{2,30}/)\n  readonly value: string;\n  @ApiProperty({ example: 'Admin', description: 'Role`s description' })\n  @IsString()\n  @MinLength(2)\n  @MaxLength(30)\n  @Matches(/[a-zA-Z0-9а-яієїґА_ЯЇЄЇЁёА-я_-]{2,30}/)\n  readonly description: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateUserDto.html":{"url":"classes/CreateUserDto.html","title":"class - CreateUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/dto/create-user.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                email\n                            \n                            \n                                    Readonly\n                                name\n                            \n                            \n                                    Readonly\n                                password\n                            \n                            \n                                    Readonly\n                                phoneNumber\n                            \n                            \n                                    Readonly\n                                surname\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'user@gmail.com', description: 'user`s email'})@IsString()@IsEmail()@Matches(/^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/, {message: EMAIL_VALIDATION})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:53\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'Alex', description: 'user`s name'})@IsString()@MinLength(2)@MaxLength(30)@Matches(/[a-zA-Z0-9а-яієїґА_ЯЇЄЇЁёА-я_-]{2,30}/, {message: USERNAME_VALIDATION})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'etrhg45ty5yeewt4t4665y', description: 'user`s password'})@IsString()@Matches(/^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{8,}$/, {message: PASSWORD_VALIDATION})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:66\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        phoneNumber\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: '+381056733', description: 'user phone number'})@IsString()@IsEmail()@Matches(/^[\\+]?[(]?[0-9]{3}[)]?[-\\s\\.]?[0-9]{3}[-\\s\\.]?[0-9]{4,6}$/, {message: PHONE_NUMRER_VALIDATION})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        surname\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'Cusler', description: 'user`s surname'})@IsString()@MinLength(2)@MaxLength(30)@Matches(/[a-zA-Z0-9а-яієїґА_ЯЇЄЇЁёА-я_-]{2,30}/, {message: SURNAME_VALIDATION})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:34\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport {\n  IsEmail,\n  IsString,\n  Matches,\n  MaxLength,\n  MinLength,\n} from 'class-validator';\nimport {\n  EMAIL_VALIDATION,\n  PASSWORD_VALIDATION,\n  PHONE_NUMRER_VALIDATION,\n  SURNAME_VALIDATION,\n  USERNAME_VALIDATION,\n} from '../constants/user.constants';\n\nexport class CreateUserDto {\n  @ApiProperty({ example: 'Alex', description: 'user`s name' })\n  @IsString()\n  @MinLength(2)\n  @MaxLength(30)\n  @Matches(/[a-zA-Z0-9а-яієїґА_ЯЇЄЇЁёА-я_-]{2,30}/, {\n    message: USERNAME_VALIDATION,\n  })\n  readonly name: string;\n\n  @ApiProperty({ example: 'Cusler', description: 'user`s surname' })\n  @IsString()\n  @MinLength(2)\n  @MaxLength(30)\n  @Matches(/[a-zA-Z0-9а-яієїґА_ЯЇЄЇЁёА-я_-]{2,30}/, {\n    message: SURNAME_VALIDATION,\n  })\n  readonly surname: string;\n\n  @ApiProperty({ example: '+381056733', description: 'user phone number' })\n  @IsString()\n  @IsEmail()\n  @Matches(/^[\\+]?[(]?[0-9]{3}[)]?[-\\s\\.]?[0-9]{3}[-\\s\\.]?[0-9]{4,6}$/, {\n    message: PHONE_NUMRER_VALIDATION,\n  })\n  readonly phoneNumber: string;\n\n  @ApiProperty({ example: 'user@gmail.com', description: 'user`s email' })\n  @IsString()\n  @IsEmail()\n  @Matches(\n    /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/,\n    {\n      message: EMAIL_VALIDATION,\n    },\n  )\n  readonly email: string;\n\n  @ApiProperty({\n    example: 'etrhg45ty5yeewt4t4665y',\n    description: 'user`s password',\n  })\n  @IsString()\n  @Matches(\n    /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{8,}$/,\n    {\n      message: PASSWORD_VALIDATION,\n    },\n  )\n  readonly password: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateUserRefreshTokenDto.html":{"url":"classes/CreateUserRefreshTokenDto.html","title":"class - CreateUserRefreshTokenDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateUserRefreshTokenDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/dto/create-user-refresh-token.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                email\n                            \n                            \n                                    Readonly\n                                isActivated\n                            \n                            \n                                    Readonly\n                                roles\n                            \n                            \n                                    Readonly\n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'user@gmail.com', description: 'user`s email'})@IsString()@IsEmail()@Matches(/^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/, {message: EMAIL_VALIDATION})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user-refresh-token.dto.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        isActivated\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'True', description: 'Is user activated'})@IsBoolean()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user-refresh-token.dto.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        roles\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Role[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: '[User, Admin]', description: 'roles of User'})@IsArray()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user-refresh-token.dto.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        userId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: '1', description: 'unique identifier'})@IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user-refresh-token.dto.ts:16\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport {\n  IsEmail,\n  IsString,\n  Matches,\n  IsBoolean,\n  IsNumber,\n  IsArray,\n} from 'class-validator';\nimport { Role } from '../../roles/models/roles.model';\nimport { EMAIL_VALIDATION } from '../constants/user.constants';\n\nexport class CreateUserRefreshTokenDto {\n  @ApiProperty({ example: '1', description: 'unique identifier' })\n  @IsNumber()\n  readonly userId: number;\n\n  @ApiProperty({\n    example: 'True',\n    description: 'Is user activated',\n  })\n  @IsBoolean()\n  readonly isActivated: boolean;\n\n  @ApiProperty({\n    example: '[User, Admin]',\n    description: 'roles of User',\n  })\n  @IsArray()\n  readonly roles: Role[];\n\n  @ApiProperty({ example: 'user@gmail.com', description: 'user`s email' })\n  @IsString()\n  @IsEmail()\n  @Matches(\n    /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/,\n    {\n      message: EMAIL_VALIDATION,\n    },\n  )\n  readonly email: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Currencies.html":{"url":"classes/Currencies.html","title":"class - Currencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Currencies\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/owner/models/currencies.model.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    Model\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                base\n                            \n                            \n                                    Public\n                                date\n                            \n                            \n                                    Public\n                                id\n                            \n                            \n                                    Private\n                                owner\n                            \n                            \n                                    Private\n                                ownerId\n                            \n                            \n                                    Public\n                                rates\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getAuthor\n                            \n                            \n                                getOwnerId\n                            \n                            \n                                setAuthor\n                            \n                            \n                                setOwnerId\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        base\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: undefined, unique: true, allowNull: false, field: 'base'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/owner/models/currencies.model.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        date\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: undefined, unique: true, allowNull: false, field: 'Date'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/owner/models/currencies.model.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: '1', description: 'unique identifier'})@Column({type: undefined, unique: true, autoIncrement: true, primaryKey: true, allowNull: false, field: 'id'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/owner/models/currencies.model.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        owner\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Owner\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @BelongsTo(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/owner/models/currencies.model.ts:56\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        ownerId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsInt()@ForeignKey(undefined)@Column({type: undefined, unique: false, allowNull: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/owner/models/currencies.model.ts:53\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        rates\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: undefined, unique: true, allowNull: false, field: 'rates'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/owner/models/currencies.model.ts:48\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getAuthor\n                        \n                    \n                \n            \n            \n                \ngetAuthor()\n                \n            \n\n\n            \n                \n                    Defined in src/owner/models/currencies.model.ts:58\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Owner\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getOwnerId\n                        \n                    \n                \n            \n            \n                \ngetOwnerId()\n                \n            \n\n\n            \n                \n                    Defined in src/owner/models/currencies.model.ts:67\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         number\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setAuthor\n                        \n                    \n                \n            \n            \n                \nsetAuthor(owner: Owner)\n                \n            \n\n\n            \n                \n                    Defined in src/owner/models/currencies.model.ts:62\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    owner\n                                    \n                                                Owner\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Owner\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setOwnerId\n                        \n                    \n                \n            \n            \n                \nsetOwnerId(ownerId: number)\n                \n            \n\n\n            \n                \n                    Defined in src/owner/models/currencies.model.ts:71\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    ownerId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n  Column,\n  DataType,\n  Table,\n  Model,\n  BelongsTo,\n  ForeignKey,\n  IsInt,\n} from 'sequelize-typescript';\nimport { ApiProperty } from '@nestjs/swagger';\nimport { Owner } from './owner.model';\n\n@Table({ tableName: 'Currencies' })\nexport class Currencies extends Model {\n  @ApiProperty({ example: '1', description: 'unique identifier' })\n  @Column({\n    type: DataType.INTEGER,\n    unique: true,\n    autoIncrement: true,\n    primaryKey: true,\n    allowNull: false,\n    field: 'id',\n  })\n  public id: number;\n\n  @Column({\n    type: DataType.ENUM('USD'),\n    unique: true,\n    allowNull: false,\n    field: 'base',\n  })\n  public base: string;\n\n  @Column({\n    type: DataType.DATE,\n    unique: true,\n    allowNull: false,\n    field: 'Date',\n  })\n  public date: Date;\n\n  @Column({\n    type: DataType.JSONB,\n    unique: true,\n    allowNull: false,\n    field: 'rates',\n  })\n  public rates: string;\n\n  @IsInt\n  @ForeignKey(() => Owner)\n  @Column({ type: DataType.INTEGER, unique: false, allowNull: true })\n  private ownerId: number;\n\n  @BelongsTo(() => Owner)\n  private owner: Owner;\n\n  getAuthor(): Owner {\n    return this.owner;\n  }\n\n  setAuthor(owner: Owner): Owner {\n    this.owner = owner;\n    return this.owner;\n  }\n\n  getOwnerId(): number {\n    return this.ownerId;\n  }\n\n  setOwnerId(ownerId: number): number {\n    this.ownerId = ownerId;\n    return this.ownerId;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CurrencyService.html":{"url":"injectables/CurrencyService.html","title":"injectable - CurrencyService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  CurrencyService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/owner/services/currency.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                Logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getCurrentCurrency\n                            \n                            \n                                    Async\n                                renewCurrencies\n                            \n                            \n                                    Async\n                                renewCurrenciesCron\n                            \n                            \n                                    Async\n                                setCurrencies\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(currenciesRepository, ownerRepository, httpService: HttpService)\n                    \n                \n                        \n                            \n                                Defined in src/owner/services/currency.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        currenciesRepository\n                                                  \n                                                        \n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        ownerRepository\n                                                  \n                                                        \n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        httpService\n                                                  \n                                                        \n                                                                    HttpService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getCurrentCurrency\n                        \n                    \n                \n            \n            \n                \n                    \n                    getCurrentCurrency(countryIsoCode: string)\n                \n            \n\n\n            \n                \n                    Defined in src/owner/services/currency.service.ts:143\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    countryIsoCode\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        renewCurrencies\n                        \n                    \n                \n            \n            \n                \n                    \n                    renewCurrencies()\n                \n            \n\n\n            \n                \n                    Defined in src/owner/services/currency.service.ts:87\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        renewCurrenciesCron\n                        \n                    \n                \n            \n            \n                \n                    \n                    renewCurrenciesCron()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Cron(CronExpression.EVERY_WEEK, {disabled: true})\n                \n            \n\n            \n                \n                    Defined in src/owner/services/currency.service.ts:177\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        setCurrencies\n                        \n                    \n                \n            \n            \n                \n                    \n                    setCurrencies(ownerId: number)\n                \n            \n\n\n            \n                \n                    Defined in src/owner/services/currency.service.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    ownerId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        Logger\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Logger(CurrencyService.name)\n                    \n                \n                    \n                        \n                                Defined in src/owner/services/currency.service.ts:12\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Logger, Scope } from '@nestjs/common';\nimport { InjectModel } from '@nestjs/sequelize';\nimport { Owner } from '../models/owner.model';\nimport { Currencies } from '../models/currencies.model';\nimport { HttpService } from '@nestjs/axios';\nimport { catchError, firstValueFrom, map } from 'rxjs';\nimport countryToCurrency from 'country-to-currency';\nimport { Cron, CronExpression } from '@nestjs/schedule';\nimport getSymbolFromCurrency from 'currency-symbol-map';\n@Injectable({ scope: Scope.TRANSIENT })\nexport class CurrencyService {\n  private Logger = new Logger(CurrencyService.name);\n  constructor(\n    @InjectModel(Currencies)\n    private readonly currenciesRepository: typeof Currencies,\n    @InjectModel(Owner) private readonly ownerRepository: typeof Owner,\n    private readonly httpService: HttpService,\n  ) {}\n\n  async setCurrencies(ownerId: number) {\n    const currencies = await Currencies.findAll();\n    if (currencies.length > 0) {\n      console.log(currencies);\n      return false;\n    }\n    let data: any;\n    try {\n      data = await firstValueFrom(\n        this.httpService\n          .get(\n            `${process.env.CURRENCIES_URL.trim()}/latest?base=${process.env.BASE_CURRENCY.trim()}`,\n            {\n              headers: {\n                apikey: process.env.CURRENCIES_API_KEY.trim(),\n                'Accept-Encoding': 'gzip,deflate,compress',\n              },\n            },\n          )\n          .pipe(map((res) => res.data))\n          .pipe(\n            catchError((error) => {\n              this.Logger.error(error.response.data);\n              throw error;\n            }),\n          ),\n      );\n      console.log(data);\n      const currency = await Currencies.create({\n        base: data.base,\n        date: data.date,\n        rates: JSON.stringify(data.rates),\n      });\n      currency.setOwnerId(ownerId);\n      const owner = await Owner.findByPk(ownerId);\n      currency.setAuthor(owner);\n      await currency.save();\n    } catch (error) {\n      this.Logger.error(error);\n      data = await firstValueFrom(\n        this.httpService\n          .get(\n            `${process.env.API_CURRENCIES.trim()}/${process.env.BASE_CURRENCY.trim()}.json`,\n            { headers: { 'Accept-Encoding': 'gzip,deflate,compress' } },\n          )\n          .pipe(map((res) => res.data))\n          .pipe(\n            catchError((error) => {\n              this.Logger.error(error.response.data);\n              throw error;\n            }),\n          ),\n      );\n      const currency = await Currencies.create({\n        base: Object.keys(data)[1].toUpperCase().trim(),\n        date: data.date,\n        rates: JSON.stringify(\n          data[process.env.BASE_CURRENCY.toLowerCase().trim()],\n        ),\n      });\n      currency.setOwnerId(ownerId);\n      const owner = await Owner.findByPk(ownerId);\n      currency.setAuthor(owner);\n      await currency.save();\n    }\n  }\n\n  async renewCurrencies(): Promise {\n    const currencies = await this.currenciesRepository.findAll({\n      include: { all: true },\n    });\n    const currency = currencies[0];\n    let data: any;\n    try {\n      data = await firstValueFrom(\n        this.httpService\n          .get(\n            `${process.env.CURRENCIES_URL.trim()}/latest?base=${process.env.BASE_CURRENCY.trim()}`,\n            {\n              headers: {\n                apikey: process.env.CURRENCIES_API_KEY.trim(),\n                'Accept-Encoding': 'gzip,deflate,compress',\n              },\n            },\n          )\n          .pipe(map((res) => res.data))\n          .pipe(\n            catchError((error) => {\n              this.Logger.error(error.response.data);\n              throw error;\n            }),\n          ),\n      );\n      currency.base = data.base;\n      currency.date = data.date;\n      currency.rates = JSON.stringify(data.rates);\n      await currency.save();\n    } catch (error) {\n      this.Logger.error(error);\n      data = await firstValueFrom(\n        this.httpService\n          .get(\n            `${process.env.API_CURRENCIES.trim()}/${process.env.BASE_CURRENCY.trim()}.json`,\n            { headers: { 'Accept-Encoding': 'gzip,deflate,compress' } },\n          )\n          .pipe(map((res) => res.data))\n          .pipe(\n            catchError((error) => {\n              this.Logger.error(error.response.data);\n              throw error;\n            }),\n          ),\n      );\n      currency.base = Object.keys(data)[1].toUpperCase().trim();\n      currency.date = data.date;\n      currency.rates = JSON.stringify(\n        data[process.env.BASE_CURRENCY.toLowerCase().trim()],\n      );\n      await currency.save();\n      return currency;\n    }\n  }\n\n  async getCurrentCurrency(countryIsoCode: string): Promise {\n    const currrencyCode = countryToCurrency[countryIsoCode];\n    const currencies = await this.currenciesRepository.findAll({});\n    if (currencies.length === 0) {\n      return null;\n    }\n    const currency = currencies[0];\n    const availableCurrencies: {\n      [key: string]: number;\n    } = JSON.parse(currency.rates);\n    if (currrencyCode.toLowerCase() in availableCurrencies) {\n      return {\n        currrencyCode: countryToCurrency[countryIsoCode],\n        symbol: getSymbolFromCurrency(currrencyCode),\n        rate: availableCurrencies[currrencyCode.toLowerCase()],\n      };\n    }\n    if (currrencyCode in availableCurrencies) {\n      return {\n        currrencyCode: countryToCurrency[countryIsoCode],\n        symbol: getSymbolFromCurrency(currrencyCode),\n        rate: availableCurrencies[currrencyCode],\n      };\n    }\n    return null;\n  }\n\n  @Cron(CronExpression.EVERY_WEEK, {\n    disabled: true,\n  })\n  async renewCurrenciesCron(): Promise {\n    return this.renewCurrencies();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/EditContentGuard.html":{"url":"guards/EditContentGuard.html","title":"guard - EditContentGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    EditContentGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/common/guards/edit-content.guard.ts\n            \n\n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(adminService: AdminService)\n                    \n                \n                        \n                            \n                                Defined in src/common/guards/edit-content.guard.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        adminService\n                                                  \n                                                        \n                                                                        AdminService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate(context: ExecutionContext)\n                \n            \n\n\n            \n                \n                    Defined in src/common/guards/edit-content.guard.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                            ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     boolean | Promise | Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import {\n  CanActivate,\n  ExecutionContext,\n  HttpStatus,\n  Injectable,\n  Scope,\n} from '@nestjs/common';\nimport { Observable } from 'rxjs';\nimport {\n  INVALID_REQUEST,\n  USER_NOT_DETECTED,\n  NO_RIGHT,\n} from '../../auth/auth.constants';\nimport { AdminService } from '../../admin/services/admin.service';\nimport { Payload } from '../../core/interfaces/auth.interfaces';\nimport { ApiException } from '../exceptions/api.exception';\n\n@Injectable({ scope: Scope.REQUEST })\nexport class EditContentGuard implements CanActivate {\n  constructor(private readonly adminService: AdminService) {}\n\n  canActivate(\n    context: ExecutionContext,\n  ): boolean | Promise | Observable {\n    return (async () => {\n      const req = context.switchToHttp().getRequest();\n      const payload: Payload = req?.payload;\n      const type: 'OWNER' | 'ADMIN' | null = req['type'];\n      if (!payload) {\n        throw new ApiException(\n          HttpStatus.UNAUTHORIZED,\n          'Unathorized!',\n          INVALID_REQUEST,\n        );\n      }\n      if (type === undefined) {\n        throw new ApiException(\n          HttpStatus.UNAUTHORIZED,\n          'Unathorized!',\n          USER_NOT_DETECTED,\n        );\n      }\n      if (type && type === 'OWNER') {\n        return true;\n      }\n      const admin = await this.adminService.getAdminById(payload.userId);\n      if (type && type === 'ADMIN' && admin.getEditContent()) {\n        return true;\n      }\n      throw new ApiException(HttpStatus.FORBIDDEN, 'Forbidden!', NO_RIGHT);\n    })();\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/EditWebsiteGuard.html":{"url":"guards/EditWebsiteGuard.html","title":"guard - EditWebsiteGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    EditWebsiteGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/common/guards/edit-website.guard.ts\n            \n\n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(adminService: AdminService)\n                    \n                \n                        \n                            \n                                Defined in src/common/guards/edit-website.guard.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        adminService\n                                                  \n                                                        \n                                                                        AdminService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate(context: ExecutionContext)\n                \n            \n\n\n            \n                \n                    Defined in src/common/guards/edit-website.guard.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                            ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     boolean | Promise | Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import {\n  CanActivate,\n  ExecutionContext,\n  HttpStatus,\n  Injectable,\n  Scope,\n} from '@nestjs/common';\nimport { Observable } from 'rxjs';\nimport {\n  INVALID_REQUEST,\n  NO_RIGHT,\n  USER_NOT_DETECTED,\n} from '../../auth/auth.constants';\nimport { AdminService } from '../../admin/services/admin.service';\nimport { Payload } from '../../core/interfaces/auth.interfaces';\nimport { ApiException } from '../exceptions/api.exception';\n\n@Injectable({ scope: Scope.REQUEST })\nexport class EditWebsiteGuard implements CanActivate {\n  constructor(private readonly adminService: AdminService) {}\n\n  canActivate(\n    context: ExecutionContext,\n  ): boolean | Promise | Observable {\n    return (async () => {\n      const req = context.switchToHttp().getRequest();\n      const payload: Payload = req?.payload;\n      const type: 'OWNER' | 'ADMIN' | null = req['type'];\n      if (!payload) {\n        throw new ApiException(\n          HttpStatus.UNAUTHORIZED,\n          'Unathorized!',\n          INVALID_REQUEST,\n        );\n      }\n      if (type === undefined) {\n        throw new ApiException(\n          HttpStatus.UNAUTHORIZED,\n          'Unathorized!',\n          USER_NOT_DETECTED,\n        );\n      }\n      if (type && type === 'OWNER') {\n        return true;\n      }\n      const admin = await this.adminService.getAdminById(payload.userId);\n      if (type && type === 'ADMIN' && admin.getEditWebSite()) {\n        return true;\n      }\n      throw new ApiException(HttpStatus.FORBIDDEN, 'Forbidden!', NO_RIGHT);\n    })();\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FilesService.html":{"url":"injectables/FilesService.html","title":"injectable - FilesService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  FilesService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/services/file.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createFile\n                            \n                            \n                                createfileName\n                            \n                            \n                                destination\n                            \n                            \n                                fileFilter\n                            \n                            \n                                    Async\n                                unlinkFile\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        createFile\n                        \n                    \n                \n            \n            \n                \n                    \n                    createFile(file: literal type)\n                \n            \n\n\n            \n                \n                    Defined in src/core/services/file.service.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    file\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createfileName\n                        \n                    \n                \n            \n            \n                \ncreatefileName(req: Request, file: Express.Multer.File, callback: any)\n                \n            \n\n\n            \n                \n                    Defined in src/core/services/file.service.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    file\n                                    \n                                            Express.Multer.File\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    callback\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        destination\n                        \n                    \n                \n            \n            \n                \ndestination(req: Request, file: Express.Multer.File, callback: (error: Error,destination: string) => void)\n                \n            \n\n\n            \n                \n                    Defined in src/core/services/file.service.ts:66\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    file\n                                    \n                                            Express.Multer.File\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    callback\n                                    \n                                                function\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        fileFilter\n                        \n                    \n                \n            \n            \n                \nfileFilter(req: Request, file: Express.Multer.File, callback: (error: Error,acceptFile: boolean) => void)\n                \n            \n\n\n            \n                \n                    Defined in src/core/services/file.service.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    file\n                                    \n                                            Express.Multer.File\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    callback\n                                    \n                                                function\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        unlinkFile\n                        \n                    \n                \n            \n            \n                \n                    \n                    unlinkFile(filePath: string)\n                \n            \n\n\n            \n                \n                    Defined in src/core/services/file.service.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filePath\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpException, HttpStatus, Injectable, Scope } from '@nestjs/common';\nimport * as fs from 'fs';\nimport * as uuid from 'uuid';\nimport path, { extname } from 'path';\nimport { Request } from 'express';\nimport { mkdirSync, existsSync } from 'fs';\nimport { v4 } from 'uuid';\n\n// tslint:disable-next-line: class-name\ninterface fileCreated {\n  readonly fileName: string;\n  readonly filePath: string;\n}\n\n@Injectable({ scope: Scope.DEFAULT })\nexport class FilesService {\n  async createFile(file: {\n    buffer: string | NodeJS.ArrayBufferView;\n  }): Promise {\n    try {\n      const fileName = uuid.v4() + '.jpg';\n      const filePath = path.resolve(__dirname, '..', 'static');\n      if (!fs.existsSync(filePath)) {\n        fs.mkdirSync(filePath, { recursive: true });\n      }\n      fs.writeFileSync(path.join(filePath, fileName), file.buffer);\n      return { fileName: fileName, filePath: filePath };\n    } catch (e) {\n      throw new HttpException(\n        'Error occured while writing file.',\n        HttpStatus.INTERNAL_SERVER_ERROR,\n      );\n    }\n  }\n\n  async unlinkFile(filePath: string) {\n    filePath = path.join(__dirname, 'static', filePath);\n    fs.unlink(filePath, (err) => {\n      throw new HttpException(err.message, HttpStatus.INTERNAL_SERVER_ERROR);\n    });\n  }\n\n  createfileName(req: Request, file: Express.Multer.File, callback: any) {\n    const name = file.originalname.split('.')[0];\n    const ext = extname(file.originalname);\n    const randomName = v4();\n    callback(null, `${randomName}--${req.body.title}--${name}${ext}`);\n  }\n\n  fileFilter(\n    req: Request,\n    file: Express.Multer.File,\n    callback: (error: Error, acceptFile: boolean) => void,\n  ) {\n    const filetypes = /\\.(jpg|jpeg|png|gif)$/;\n    const extname = filetypes.test(\n      path.extname(file.originalname).toLowerCase(),\n    );\n    const mimetype = filetypes.test(file.mimetype);\n    if (mimetype && extname) {\n      return callback(null, true);\n    }\n    return callback(new Error('Only image files are allowed!'), false);\n  }\n\n  destination(\n    req: Request,\n    file: Express.Multer.File,\n    callback: (error: Error, destination: string) => void,\n  ) {\n    const destination = path.join(\n      __dirname,\n      'static',\n      'products',\n      `${req?.body?.title}`,\n    );\n    const imagesPath = path.join(\n      __dirname,\n      'static',\n      'products',\n      `${req?.body?.title}`,\n      file.fieldname,\n    );\n    if (!existsSync(destination)) {\n      mkdirSync(destination, { recursive: true });\n    }\n    if (!existsSync(imagesPath)) {\n      mkdirSync(imagesPath, { recursive: true });\n    }\n    callback(null, imagesPath);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GarbageCollectingProcessor.html":{"url":"classes/GarbageCollectingProcessor.html","title":"class - GarbageCollectingProcessor","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GarbageCollectingProcessor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/processors/garbage.processor.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                handleTranscode\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Logger(GarbageCollectingProcessor.name)\n                    \n                \n                    \n                        \n                                Defined in src/core/processors/garbage.processor.ts:7\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        handleTranscode\n                        \n                    \n                \n            \n            \n                \nhandleTranscode(job: Job)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Process('transcode')\n                \n            \n\n            \n                \n                    Defined in src/core/processors/garbage.processor.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    job\n                                    \n                                            Job\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Process, Processor } from '@nestjs/bull';\nimport { Logger } from '@nestjs/common';\nimport { Job } from 'bull';\n\n@Processor('garbageCollecting')\nexport class GarbageCollectingProcessor {\n  private readonly logger = new Logger(GarbageCollectingProcessor.name);\n\n  @Process('transcode')\n  handleTranscode(job: Job) {\n    this.logger.debug('Start transcoding...');\n    this.logger.debug(job.data);\n    this.logger.debug('Transcoding completed');\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GlobalInterceptor.html":{"url":"injectables/GlobalInterceptor.html","title":"injectable - GlobalInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  GlobalInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/interceptors/global.interceptor.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        intercept\n                        \n                    \n                \n            \n            \n                \nintercept(context: ExecutionContext, next: CallHandler)\n                \n            \n\n\n            \n                \n                    Defined in src/core/interceptors/global.interceptor.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                            ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                            CallHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  Injectable,\n  NestInterceptor,\n  ExecutionContext,\n  CallHandler,\n  RequestTimeoutException,\n} from '@nestjs/common';\nimport { Observable, throwError, TimeoutError } from 'rxjs';\nimport { catchError, timeout } from 'rxjs/operators';\n\n@Injectable()\nexport class GlobalInterceptor implements NestInterceptor {\n  intercept(context: ExecutionContext, next: CallHandler): Observable {\n    return next.handle().pipe(\n      timeout(5000),\n      catchError((err) => {\n        if (err instanceof TimeoutError) {\n          return throwError(() => new RequestTimeoutException());\n        }\n        return throwError(() => err);\n      }),\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/HttpExceptionFilter.html":{"url":"classes/HttpExceptionFilter.html","title":"class - HttpExceptionFilter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  HttpExceptionFilter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/filters/http-exception.filter.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        ExceptionFilter\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                catch\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        catch\n                        \n                    \n                \n            \n            \n                \ncatch(exception: HttpException, host: ArgumentsHost)\n                \n            \n\n\n            \n                \n                    Defined in src/common/filters/http-exception.filter.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    exception\n                                    \n                                            HttpException\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    host\n                                    \n                                            ArgumentsHost\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n  ExceptionFilter,\n  Catch,\n  ArgumentsHost,\n  HttpException,\n} from '@nestjs/common';\nimport { Request, Response } from 'express';\n\n@Catch(HttpException)\nexport class HttpExceptionFilter implements ExceptionFilter {\n  catch(exception: HttpException, host: ArgumentsHost) {\n    const ctx = host.switchToHttp();\n    const response = ctx.getResponse();\n    const request = ctx.getRequest();\n    const status = exception.getStatus();\n    const message = exception.message;\n    response.status(status).json({\n      statusCode: status,\n      message: message,\n      timestamp: new Date().toISOString(),\n      path: request.url,\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ITelegramModuleAsyncOptions.html":{"url":"interfaces/ITelegramModuleAsyncOptions.html","title":"interface - ITelegramModuleAsyncOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ITelegramModuleAsyncOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/telegram/telegram.interface.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    Pick\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            inject\n                                        \n                                \n                                \n                                        \n                                            useFactory\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        inject\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        inject:     any[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        useFactory\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        useFactory:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ModuleMetadata } from '@nestjs/common';\n\nexport interface ITelegramOptions {\n  chatId: string;\n  token: string;\n}\n\nexport interface ITelegramModuleAsyncOptions\n  extends Pick {\n  useFactory: (...args: any[]) => Promise | ITelegramOptions;\n  inject?: any[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ITelegramOptions.html":{"url":"interfaces/ITelegramOptions.html","title":"interface - ITelegramOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ITelegramOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/telegram/telegram.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            chatId\n                                        \n                                \n                                \n                                        \n                                            token\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        chatId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        chatId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        token\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        token:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ModuleMetadata } from '@nestjs/common';\n\nexport interface ITelegramOptions {\n  chatId: string;\n  token: string;\n}\n\nexport interface ITelegramModuleAsyncOptions\n  extends Pick {\n  useFactory: (...args: any[]) => Promise | ITelegramOptions;\n  inject?: any[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/InitializeEmailMiddleware.html":{"url":"injectables/InitializeEmailMiddleware.html","title":"injectable - InitializeEmailMiddleware","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  InitializeEmailMiddleware\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/middlewares/initialize-email.middleware.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                use\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(ownerService: OwnerService, adminService: AdminService, userService: UsersService)\n                    \n                \n                        \n                            \n                                Defined in src/common/middlewares/initialize-email.middleware.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        ownerService\n                                                  \n                                                        \n                                                                        OwnerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        adminService\n                                                  \n                                                        \n                                                                        AdminService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UsersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        use\n                        \n                    \n                \n            \n            \n                \n                    \n                    use(req: Request, res: Response, next: NextFunction)\n                \n            \n\n\n            \n                \n                    Defined in src/common/middlewares/initialize-email.middleware.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                            NextFunction\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  HttpStatus,\n  Injectable,\n  NestMiddleware,\n  Req,\n  Scope,\n} from '@nestjs/common';\nimport { Request, Response, NextFunction } from 'express';\nimport { Next, Res } from '@nestjs/common/decorators';\nimport { AdminService } from '../../admin/services/admin.service';\nimport { OwnerService } from '../../owner/services/owner.service';\nimport { UsersService } from '../../users/services/users.service';\nimport {\n  EMAIL_NOT_PROVIDED,\n  USER_WITH_EMAIL_NOT_FOUND,\n} from '../../auth/auth.constants';\nimport { ApiException } from '../exceptions/api.exception';\n@Injectable({ scope: Scope.REQUEST })\nexport class InitializeEmailMiddleware implements NestMiddleware {\n  constructor(\n    private readonly ownerService: OwnerService,\n    private readonly adminService: AdminService,\n    private readonly userService: UsersService,\n  ) {}\n  async use(\n    @Req() req: Request,\n    @Res() res: Response,\n    @Next() next: NextFunction,\n  ) {\n    const email = req?.body?.email;\n    try {\n      if (!email) {\n        throw new ApiException(\n          HttpStatus.BAD_REQUEST,\n          'Bad request',\n          EMAIL_NOT_PROVIDED,\n        );\n      }\n      const owner = await this.ownerService.getOwnerByEmail(email);\n      if (owner) {\n        req['codeDto'] = { email: owner.email, type: 'OWNER' };\n        return next();\n      }\n      const admin = await this.adminService.getAdminByEmail(email);\n      if (admin) {\n        req['codeDto'] = { email: admin.email, type: 'ADMIN' };\n        return next();\n      }\n      const user = await this.userService.getUserByEmail(email);\n      if (!user) {\n        throw new ApiException(\n          HttpStatus.NOT_FOUND,\n          'Not found!',\n          USER_WITH_EMAIL_NOT_FOUND,\n        );\n      }\n      res.setHeader('X-Content-Type-Options', 'nosniff');\n      req['codeDto'] = { email: user.email, type: null };\n      return next();\n    } catch (err: unknown) {\n      return next(err);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/InitializeUser.html":{"url":"interfaces/InitializeUser.html","title":"interface - InitializeUser","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  InitializeUser\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/interfaces/user.interfaces.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            confirmPassword\n                                        \n                                \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            password\n                                        \n                                \n                                \n                                        \n                                            phoneNumber\n                                        \n                                \n                                \n                                        \n                                            surname\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        confirmPassword\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        confirmPassword:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        password\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        password:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        phoneNumber\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        phoneNumber:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        surname\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        surname:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface UserRefreshCreationAttrbs {\n  userId: number;\n  userRefreshToken: string;\n  userAgent: string;\n  email: string;\n}\n\nexport interface RolecreationAttrbs {\n  value: string;\n  description: string;\n}\nexport interface UsercreationAttrbs {\n  name: string;\n  surname: string;\n  email: string;\n  phoneNumber: string;\n  password: string;\n  activationLink: string;\n}\n\nexport interface InitializeUser {\n  name: string;\n  surname: string;\n  phoneNumber: string;\n  email: string;\n  password: string;\n  confirmPassword: string;\n}\n\nexport interface ValidateUser {\n  email: string;\n  password: string;\n}\n\nexport interface UserInterface {\n  id: number;\n  name: string;\n  surname: string;\n  email: string;\n  phoneNumber: string;\n  isAdmin: boolean;\n  addContent: boolean;\n  editContent: boolean;\n  editWebsite: boolean;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/InitializeUserMiddleware.html":{"url":"injectables/InitializeUserMiddleware.html","title":"injectable - InitializeUserMiddleware","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  InitializeUserMiddleware\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/middlewares/initialize-user.middleware.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                use\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(ownerJwtRefreshTokenService: OwnerJwtRefreshService, adminJwtRefreshTokenService: AdminJwtRefreshService, userJwtRefreshTokenService: UserJwtRefreshTokenService)\n                    \n                \n                        \n                            \n                                Defined in src/common/middlewares/initialize-user.middleware.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        ownerJwtRefreshTokenService\n                                                  \n                                                        \n                                                                        OwnerJwtRefreshService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        adminJwtRefreshTokenService\n                                                  \n                                                        \n                                                                        AdminJwtRefreshService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userJwtRefreshTokenService\n                                                  \n                                                        \n                                                                        UserJwtRefreshTokenService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        use\n                        \n                    \n                \n            \n            \n                \n                    \n                    use(req: Request, res: Response, next: NextFunction)\n                \n            \n\n\n            \n                \n                    Defined in src/common/middlewares/initialize-user.middleware.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                            NextFunction\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  HttpStatus,\n  Injectable,\n  NestMiddleware,\n  Req,\n  Scope,\n} from '@nestjs/common';\nimport { Request, Response, NextFunction } from 'express';\nimport { OwnerJwtRefreshService } from '../../owner/services/jwt-refresh.service';\nimport { AdminJwtRefreshService } from '../../admin/services/jwt-refresh.service';\nimport { UserJwtRefreshTokenService } from '../../users/services/jwt-refresh.service';\nimport { Next, Res } from '@nestjs/common/decorators';\nimport {\n  REFRESH_TOKEN_NOT_PROVIDED,\n  INVALID_REFRESH_TOKEN,\n} from '../../auth/auth.constants';\nimport { ApiException } from '../exceptions/api.exception';\n@Injectable({ scope: Scope.REQUEST })\nexport class InitializeUserMiddleware implements NestMiddleware {\n  constructor(\n    private readonly ownerJwtRefreshTokenService: OwnerJwtRefreshService,\n    private readonly adminJwtRefreshTokenService: AdminJwtRefreshService,\n    private readonly userJwtRefreshTokenService: UserJwtRefreshTokenService,\n  ) {}\n  async use(\n    @Req() req: Request,\n    @Res() res: Response,\n    @Next() next: NextFunction,\n  ) {\n    const refreshToken = req?.cookies['refreshToken'];\n    if (!refreshToken) {\n      throw new ApiException(\n        HttpStatus.BAD_REQUEST,\n        'Bad request!',\n        REFRESH_TOKEN_NOT_PROVIDED,\n      );\n    }\n    const decodedToken = Buffer.from(refreshToken, 'base64').toString('ascii');\n    try {\n      res.setHeader(\n        'Strict-Transport-Security',\n        'max-age=31536000; includeSubDomains',\n      );\n      const ownerRefreshToken =\n        await this.ownerJwtRefreshTokenService.findToken(decodedToken);\n      if (ownerRefreshToken) {\n        req['type'] = 'OWNER';\n        return next();\n      }\n      const adminRefreshToken =\n        await this.adminJwtRefreshTokenService.findToken(decodedToken);\n      if (adminRefreshToken) {\n        req['type'] = 'ADMIN';\n        return next();\n      }\n      const userRefreshToken = await this.userJwtRefreshTokenService.findToken(\n        decodedToken,\n      );\n      if (!userRefreshToken) {\n        throw new ApiException(\n          HttpStatus.BAD_REQUEST,\n          'Bad request!',\n          INVALID_REFRESH_TOKEN,\n        );\n      }\n      req['type'] = null;\n      return next();\n    } catch (err: unknown) {\n      return next(err);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/JwtAuthGuard.html":{"url":"guards/JwtAuthGuard.html","title":"guard - JwtAuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    JwtAuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/common/guards/jwt-auth.guard.ts\n            \n\n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/common/guards/jwt-auth.guard.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate(context: ExecutionContext)\n                \n            \n\n\n            \n                \n                    Defined in src/common/guards/jwt-auth.guard.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                            ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     boolean | Promise | Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import {\n  CanActivate,\n  ExecutionContext,\n  HttpStatus,\n  Injectable,\n  Scope,\n} from '@nestjs/common';\nimport { Observable } from 'rxjs';\nimport { USER_NOT_AUTHORIZIED } from '../../auth/auth.constants';\nimport { AuthService } from '../../auth/auth.service';\nimport { Payload } from '../../core/interfaces/auth.interfaces';\nimport { ApiException } from '../exceptions/api.exception';\n@Injectable({ scope: Scope.REQUEST })\nexport class JwtAuthGuard implements CanActivate {\n  constructor(private authService: AuthService) {}\n\n  canActivate(\n    context: ExecutionContext,\n  ): boolean | Promise | Observable {\n    return (async () => {\n      const req = context.switchToHttp().getRequest();\n      const authHeader = req.headers.authorization;\n      if (!authHeader) {\n        throw new ApiException(\n          HttpStatus.UNAUTHORIZED,\n          'Unathorized!',\n          USER_NOT_AUTHORIZIED,\n        );\n      }\n      const bearer = authHeader.split(' ')[0];\n      const accessToken = authHeader.split(' ')[1];\n      if (bearer !== 'Bearer' || !accessToken) {\n        throw new ApiException(\n          HttpStatus.UNAUTHORIZED,\n          'Unathorized!',\n          USER_NOT_AUTHORIZIED,\n        );\n      }\n      const decodedToken = Buffer.from(accessToken, 'base64').toString('ascii');\n      let payload: Payload;\n      try {\n        payload = await this.authService.validateAccessToken(decodedToken);\n      } catch (err) {\n        throw new ApiException(\n          HttpStatus.UNAUTHORIZED,\n          'Unathorized!',\n          USER_NOT_AUTHORIZIED,\n        );\n      }\n      if (!payload) {\n        throw new ApiException(\n          HttpStatus.UNAUTHORIZED,\n          'Unathorized!',\n          USER_NOT_AUTHORIZIED,\n        );\n      }\n      req.payload = payload;\n      return true;\n    })();\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/JwtRefreshTokenDeletedEvent.html":{"url":"classes/JwtRefreshTokenDeletedEvent.html","title":"class - JwtRefreshTokenDeletedEvent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  JwtRefreshTokenDeletedEvent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/events/jwt-refresh-token-deleted.evet.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                description\n                            \n                            \n                                name\n                            \n                            \n                                userId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                contructor\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/core/events/jwt-refresh-token-deleted.evet.ts:4\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/core/events/jwt-refresh-token-deleted.evet.ts:2\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        userId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/core/events/jwt-refresh-token-deleted.evet.ts:3\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        contructor\n                        \n                    \n                \n            \n            \n                \ncontructor(name: string, userId: number, description: string)\n                \n            \n\n\n            \n                \n                    Defined in src/core/events/jwt-refresh-token-deleted.evet.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    userId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    description\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        export class JwtRefreshTokenDeletedEvent {\n  name: string;\n  userId: number;\n  description: string;\n  contructor(name: string, userId: number, description: string) {\n    this.name = name;\n    this.userId = userId;\n    this.description = description;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LocationMiddleware.html":{"url":"injectables/LocationMiddleware.html","title":"injectable - LocationMiddleware","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LocationMiddleware\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/middlewares/location.middleware.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                Logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                use\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(currencyService: CurrencyService)\n                    \n                \n                        \n                            \n                                Defined in src/core/middlewares/location.middleware.ts:20\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        currencyService\n                                                  \n                                                        \n                                                                        CurrencyService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        use\n                        \n                    \n                \n            \n            \n                \nuse(req: Request, res: Response, next: NextFunction)\n                \n            \n\n\n            \n                \n                    Defined in src/core/middlewares/location.middleware.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                            NextFunction\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        Logger\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Logger(LocationMiddleware.name)\n                    \n                \n                    \n                        \n                                Defined in src/core/middlewares/location.middleware.ts:20\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import {\n  Injectable,\n  Logger,\n  NestMiddleware,\n  Next,\n  Req,\n  Res,\n  Scope,\n} from '@nestjs/common';\nimport { Request, Response, NextFunction } from 'express';\nimport geoip from 'geoip-lite';\nimport IP from 'ip';\nimport path from 'path';\nimport { Reader } from '@maxmind/geoip2-node';\nimport { CurrencyService } from '../../owner/services/currency.service';\nimport getSymbolFromCurrency from 'currency-symbol-map';\nimport countryToCurrency from 'country-to-currency';\n@Injectable({ scope: Scope.REQUEST })\nexport class LocationMiddleware implements NestMiddleware {\n  private readonly Logger = new Logger(LocationMiddleware.name);\n  constructor(private readonly currencyService: CurrencyService) {}\n  use(@Req() req: Request, @Res() res: Response, @Next() next: NextFunction) {\n    (async () => {\n      try {\n        const ipAddress = IP.address();\n        const reader = await Reader.open(\n          path.join(__dirname, 'GeoLite2-Country.mmdb'),\n        );\n        const data = reader.country('62.122.202.29');\n        const geo = geoip.lookup('62.122.202.29');\n        this.Logger.log(geo, ipAddress);\n        req['countryIsoCode'] = data.country.isoCode;\n        req['CLient-IP'] = data.traits.ipAddress;\n        req['CLient-Network'] = data.traits.network;\n        req['user-type'] = data.traits.userType;\n        req['city'] = geo.city;\n        req['geo'] = geo;\n        res.setHeader('Client-IP-Address', `${data.traits.ipAddress}`);\n        res.setHeader('Client-Network', `${data.traits.network}`);\n        res.setHeader('Client-Location', `${data.country.isoCode}`);\n        res.setHeader('Client-userType', `${data.traits.userType}`);\n        const currency = await this.currencyService.getCurrentCurrency(\n          data.country.isoCode,\n        );\n        if (currency) {\n          req['currency'] = currency;\n          return next();\n        }\n        req['currency'] = {\n          currencyCode: countryToCurrency[data.country.isoCode],\n          symbol: getSymbolFromCurrency(\n            process.env.BASE_CURRENCY.toUpperCase().trim(),\n          ),\n          rate: 1,\n        };\n        return next();\n      } catch (err) {\n        console.log(err);\n        this.Logger.error(err);\n        return next(err);\n      }\n    })();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoginDto.html":{"url":"classes/LoginDto.html","title":"class - LoginDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoginDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/dto/login.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                email\n                            \n                            \n                                    Readonly\n                                password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'user@gmail.com', description: 'user`s email'})@IsString()@IsEmail()@Matches(/^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/, {message: EMAIL_VALIDATION})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/login.dto.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'etrhg45ty5yeewt4t4665y', description: 'user`s password'})@IsString()@Matches(/^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{8,}$/, {message: PASSWORD_VALIDATION})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/login.dto.ts:28\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsEmail, Matches, IsString } from 'class-validator';\nimport { EMAIL_VALIDATION, PASSWORD_VALIDATION } from '../auth.constants';\n\nexport class LoginDto {\n  @ApiProperty({ example: 'user@gmail.com', description: 'user`s email' })\n  @IsString()\n  @IsEmail()\n  @Matches(\n    /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/,\n    {\n      message: EMAIL_VALIDATION,\n    },\n  )\n  readonly email: string;\n\n  @ApiProperty({\n    example: 'etrhg45ty5yeewt4t4665y',\n    description: 'user`s password',\n  })\n  @IsString()\n  @Matches(\n    /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{8,}$/,\n    {\n      message: PASSWORD_VALIDATION,\n    },\n  )\n  readonly password: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/MailModule.html":{"url":"modules/MailModule.html","title":"module - MailModule","body":"\n                   \n\n\n\n\n    Modules\n    MailModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_MailModule\n\n\n\ncluster_MailModule_exports\n\n\n\ncluster_MailModule_providers\n\n\n\n\nMailService \n\nMailService \n\n\n\nMailModule\n\nMailModule\n\nMailService  -->\n\nMailModule->MailService \n\n\n\n\n\nAdminService\n\nAdminService\n\nMailModule -->\n\nAdminService->MailModule\n\n\n\n\n\nMailService\n\nMailService\n\nMailModule -->\n\nMailService->MailModule\n\n\n\n\n\nOwnerService\n\nOwnerService\n\nMailModule -->\n\nOwnerService->MailModule\n\n\n\n\n\nUsersService\n\nUsersService\n\nMailModule -->\n\nUsersService->MailModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/mail/mail.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AdminService\n                        \n                        \n                            MailService\n                        \n                        \n                            OwnerService\n                        \n                        \n                            UsersService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            MailService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { forwardRef, Module } from '@nestjs/common';\nimport { MailService } from './mail.service';\nimport { MailerModule } from '@nestjs-modules/mailer';\nimport { AdminModule } from '../admin/admin.module';\nimport { AuthModule } from '../auth/auth.module';\nimport { OwnerModule } from '../owner/owner.module';\nimport { RolesModule } from '../roles/roles.module';\nimport { UsersModule } from '../users/users.module';\nimport { ConfigModule } from '@nestjs/config';\nimport { UsersService } from '../users/services/users.service';\nimport { OwnerService } from '../owner/services/owner.service';\nimport { AdminService } from '../admin/services/admin.service';\nimport { SequelizeModule } from '@nestjs/sequelize';\nimport { Admin } from '../admin/models/admin.model';\nimport { AdminRefreshToken } from '../admin/models/admin.refresh.token.model';\nimport { CartProduct } from '../cart/models/cart.product.model';\nimport { Cart } from '../cart/models/cart.model';\nimport { Order } from '../orders/models/order.model';\nimport { OrderProduct } from '../orders/models/order.product.model';\nimport { Owner } from '../owner/models/owner.model';\nimport { OwnerRefreshToken } from '../owner/models/owner.refresh.token.model';\nimport { Product } from '../product/models/product.model';\nimport { Role } from '../roles/models/roles.model';\nimport { UserRoles } from '../roles/models/user.roles.model';\nimport { User } from '../users/models/user.model';\nimport { UserRefreshToken } from '../users/models/user.refresh.token.model';\nimport { Currencies } from 'src/owner/models/currencies.model';\n\n@Module({\n  providers: [MailService, UsersService, OwnerService, AdminService],\n  imports: [\n    ConfigModule.forRoot({\n      envFilePath: `.${process.env.NODE_ENV}.env`,\n      expandVariables: true,\n      isGlobal: true,\n    }),\n    SequelizeModule.forFeature([\n      Product,\n      Order,\n      OrderProduct,\n      Admin,\n      AdminRefreshToken,\n      Owner,\n      OwnerRefreshToken,\n      User,\n      UserRefreshToken,\n      Role,\n      UserRoles,\n      Cart,\n      CartProduct,\n      Currencies,\n    ]),\n    forwardRef(() => AdminModule),\n    forwardRef(() => RolesModule),\n    forwardRef(() => AuthModule),\n    forwardRef(() => OwnerModule),\n    forwardRef(() => UsersModule),\n    MailerModule.forRoot({\n      transport: {\n        host: process.env.MAILER_HOST?.toString().trim() || 'smtp.gmail.com',\n        port: Number(process.env.MAILER_PORT?.trim()) || 465,\n        secure: Boolean(process.env.MAILER_SECURITY?.trim()) || true,\n        auth: {\n          user:\n            process.env.MAILER_USER?.toString().trim() ||\n            'kazesport2022@gmail.com',\n          pass:\n            process.env.MAILER_PASS?.toString().trim() || 'flbwyzikawirfudk',\n        },\n        tls: {\n          rejectUnauthorized: false,\n        },\n      },\n      defaults: {\n        from: '\"No Reply\" ',\n      },\n    }),\n  ],\n  exports: [MailService],\n})\nexport class MailModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MailService.html":{"url":"injectables/MailService.html","title":"injectable - MailService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  MailService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/mail/mail.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                Logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                sendActivationMailToAdmin\n                            \n                            \n                                    Async\n                                sendActivationMailToOwner\n                            \n                            \n                                    Async\n                                sendCode\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(mailerService: MailerService, userService: UsersService, adminService: AdminService, ownerService: OwnerService)\n                    \n                \n                        \n                            \n                                Defined in src/mail/mail.service.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        mailerService\n                                                  \n                                                        \n                                                                    MailerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UsersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        adminService\n                                                  \n                                                        \n                                                                        AdminService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        ownerService\n                                                  \n                                                        \n                                                                        OwnerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        sendActivationMailToAdmin\n                        \n                    \n                \n            \n            \n                \n                    \n                    sendActivationMailToAdmin(toMail: string, link: string)\n                \n            \n\n\n            \n                \n                    Defined in src/mail/mail.service.ts:70\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    toMail\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    link\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        sendActivationMailToOwner\n                        \n                    \n                \n            \n            \n                \n                    \n                    sendActivationMailToOwner(toMail: string, link: string)\n                \n            \n\n\n            \n                \n                    Defined in src/mail/mail.service.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    toMail\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    link\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        sendCode\n                        \n                    \n                \n            \n            \n                \n                    \n                    sendCode(toMail: string, code: number, locale: \"ua\" | \"ru\" | \"rs\" | \"en\")\n                \n            \n\n\n            \n                \n                    Defined in src/mail/mail.service.ts:109\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    toMail\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    code\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    locale\n                                    \n                                            \"ua\" | \"ru\" | \"rs\" | \"en\"\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        Logger\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Logger(MailService.name)\n                    \n                \n                    \n                        \n                                Defined in src/mail/mail.service.ts:23\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import {\n  HttpStatus,\n  Injectable,\n  InternalServerErrorException,\n  Logger,\n  Scope,\n} from '@nestjs/common';\nimport { MailerService } from '@nestjs-modules/mailer';\nimport {\n  ERORR_WHILE_SENDING_EMAIL,\n  RESETTING,\n  TROUBLE_SIGNING,\n} from './mail.constants';\nimport { UsersService } from '../users/services/users.service';\nimport { AdminService } from '../admin/services/admin.service';\nimport { OwnerService } from '../owner/services/owner.service';\nimport { ApiException } from '../common/exceptions/api.exception';\nimport { OWNER_NOT_FOUND } from '../owner/constants/owner.constants';\nimport { ADMIN_NOT_FOUND } from '../admin/constants/admin.constants';\nimport { USER_NOT_FOUND } from '../users/constants/user.constants';\n@Injectable({ scope: Scope.REQUEST })\nexport class MailService {\n  private readonly Logger = new Logger(MailService.name);\n  constructor(\n    private readonly mailerService: MailerService,\n    private readonly userService: UsersService,\n    private readonly adminService: AdminService,\n    private readonly ownerService: OwnerService,\n  ) {}\n\n  async sendActivationMailToOwner(toMail: string, link: string) {\n    try {\n      const owner = await this.ownerService.getOwnerByEmail(toMail);\n      if (!owner) {\n        throw new ApiException(\n          HttpStatus.NOT_FOUND,\n          'Not found!',\n          OWNER_NOT_FOUND,\n        );\n      }\n      const info = await this.mailerService.sendMail({\n        from: process.env.MAILER_USER,\n        to: owner.email,\n        subject: 'Activation of account on ' + process.env.API_URL,\n        text: 'KAZE_SPORT',\n        html: `\n        Новий лист 2     a {text-decoration: none;}     sup { font-size: 100% !important; }   96  #outlook a {\tpadding:0;}.ExternalClass {\twidth:100%;}.ExternalClass,.ExternalClass p,.ExternalClass span,.ExternalClass font,.ExternalClass td,.ExternalClass div {\tline-height:100%;}.es-button {\tmso-style-priority:100!important;\ttext-decoration:none!important;}a[x-apple-data-detectors] {\tcolor:inherit!important;\ttext-decoration:none!important;\tfont-size:inherit!important;\tfont-family:inherit!important;\tfont-weight:inherit!important;\tline-height:inherit!important;}.es-desk-hidden {\tdisplay:none;\tfloat:left;\toverflow:hidden;\twidth:0;\tmax-height:0;\tline-height:0;\tmso-hide:all;}[data-ogsb] .es-button {\tborder-width:0!important;\tpadding:15px 25px 15px 25px!important;}[data-ogsb] .es-button.es-button-1 {\tpadding:15px 25px!important;}@media only screen and (max-width:600px) {p, ul li, ol li, a { line-height:150%!important } h1, h2, h3, h1 a, h2 a, h3 a { line-height:120%!important } h1 { font-size:30px!important; text-align:center } h2 { font-size:26px!important; text-align:center } h3 { font-size:20px!important; text-align:center } .es-header-body h1 a, .es-content-body h1 a, .es-footer-body h1 a { font-size:30px!important } .es-header-body h2 a, .es-content-body h2 a, .es-footer-body h2 a { font-size:26px!important } .es-header-body h3 a, .es-content-body h3 a, .es-footer-body h3 a { font-size:20px!important } .es-menu td a { font-size:16px!important } .es-header-body p, .es-header-body ul li, .es-header-body ol li, .es-header-body a { font-size:16px!important } .es-content-body p, .es-content-body ul li, .es-content-body ol li, .es-content-body a { font-size:16px!important } .es-footer-body p, .es-footer-body ul li, .es-footer-body ol li, .es-footer-body a { font-size:16px!important } .es-infoblock p, .es-infoblock ul li, .es-infoblock ol li, .es-infoblock a { font-size:12px!important } *[class=\"gmail-fix\"] { display:none!important } .es-m-txt-c, .es-m-txt-c h1, .es-m-txt-c h2, .es-m-txt-c h3 { text-align:center!important } .es-m-txt-r, .es-m-txt-r h1, .es-m-txt-r h2, .es-m-txt-r h3 { text-align:right!important } .es-m-txt-l, .es-m-txt-l h1, .es-m-txt-l h2, .es-m-txt-l h3 { text-align:left!important } .es-m-txt-r img, .es-m-txt-c img, .es-m-txt-l img { display:inline!important } .es-button-border { display:block!important } a.es-button, button.es-button { font-size:20px!important; display:block!important; border-width:15px 25px 15px 25px!important } .es-btn-fw { border-width:10px 0px!important; text-align:center!important } .es-adaptive table, .es-btn-fw, .es-btn-fw-brdr, .es-left, .es-right { width:100%!important } .es-content table, .es-header table, .es-footer table, .es-content, .es-footer, .es-header { width:100%!important; max-width:600px!important } .es-adapt-td { display:block!important; width:100%!important } .adapt-img { width:100%!important; height:auto!important } .es-m-p0 { padding:0px!important } .es-m-p0r { padding-right:0px!important } .es-m-p0l { padding-left:0px!important } .es-m-p0t { padding-top:0px!important } .es-m-p0b { padding-bottom:0!important } .es-m-p20b { padding-bottom:20px!important } .es-mobile-hidden, .es-hidden { display:none!important } tr.es-desk-hidden, td.es-desk-hidden, table.es-desk-hidden { width:auto!important; overflow:visible!important; float:none!important; max-height:inherit!important; line-height:inherit!important } tr.es-desk-hidden { display:table-row!important } table.es-desk-hidden { display:table!important } td.es-desk-menu-hidden { display:table-cell!important } .es-menu td { width:1%!important } table.es-table-not-adapt, .esd-block-html table { width:auto!important } table.es-social { display:inline-block!important } table.es-social td { display:inline-block!important } .es-desk-hidden { display:table-row!important; width:auto!important; overflow:visible!important; max-height:inherit!important } }\n  \n\n\n\nTo activate Owner rights, click the button below...\n\n   Activate Account Activate Account\n\nMake your website better.\nYou will get the rights to edit and create content on the&nbsp; website.\n\n\nNeed more help?\nKAZE_SHOP \n        `,\n      });\n      this.Logger.log('Message sent: %s', info.messageId);\n    } catch (err) {\n      throw new InternalServerErrorException(ERORR_WHILE_SENDING_EMAIL);\n    }\n  }\n\n  async sendActivationMailToAdmin(toMail: string, link: string) {\n    try {\n      const admin = await this.adminService.getAdminByEmail(toMail);\n      if (!admin) {\n        throw new ApiException(\n          HttpStatus.NOT_FOUND,\n          'Not found!',\n          ADMIN_NOT_FOUND,\n        );\n      }\n      const info = await this.mailerService.sendMail({\n        from: process.env.MAILER_USER,\n        to: admin.email,\n        subject: 'Activation of account on ' + process.env.API_URL,\n        text: 'KAZE_SPORT',\n        html: `\n       Новий лист 2     a {text-decoration: none;}     sup { font-size: 100% !important; }   96  #outlook a {\tpadding:0;}.ExternalClass {\twidth:100%;}.ExternalClass,.ExternalClass p,.ExternalClass span,.ExternalClass font,.ExternalClass td,.ExternalClass div {\tline-height:100%;}.es-button {\tmso-style-priority:100!important;\ttext-decoration:none!important;}a[x-apple-data-detectors] {\tcolor:inherit!important;\ttext-decoration:none!important;\tfont-size:inherit!important;\tfont-family:inherit!important;\tfont-weight:inherit!important;\tline-height:inherit!important;}.es-desk-hidden {\tdisplay:none;\tfloat:left;\toverflow:hidden;\twidth:0;\tmax-height:0;\tline-height:0;\tmso-hide:all;}[data-ogsb] .es-button {\tborder-width:0!important;\tpadding:15px 25px 15px 25px!important;}[data-ogsb] .es-button.es-button-1 {\tpadding:15px 25px!important;}@media only screen and (max-width:600px) {p, ul li, ol li, a { line-height:150%!important } h1, h2, h3, h1 a, h2 a, h3 a { line-height:120%!important } h1 { font-size:30px!important; text-align:center } h2 { font-size:26px!important; text-align:center } h3 { font-size:20px!important; text-align:center } .es-header-body h1 a, .es-content-body h1 a, .es-footer-body h1 a { font-size:30px!important } .es-header-body h2 a, .es-content-body h2 a, .es-footer-body h2 a { font-size:26px!important } .es-header-body h3 a, .es-content-body h3 a, .es-footer-body h3 a { font-size:20px!important } .es-menu td a { font-size:16px!important } .es-header-body p, .es-header-body ul li, .es-header-body ol li, .es-header-body a { font-size:16px!important } .es-content-body p, .es-content-body ul li, .es-content-body ol li, .es-content-body a { font-size:16px!important } .es-footer-body p, .es-footer-body ul li, .es-footer-body ol li, .es-footer-body a { font-size:16px!important } .es-infoblock p, .es-infoblock ul li, .es-infoblock ol li, .es-infoblock a { font-size:12px!important } *[class=\"gmail-fix\"] { display:none!important } .es-m-txt-c, .es-m-txt-c h1, .es-m-txt-c h2, .es-m-txt-c h3 { text-align:center!important } .es-m-txt-r, .es-m-txt-r h1, .es-m-txt-r h2, .es-m-txt-r h3 { text-align:right!important } .es-m-txt-l, .es-m-txt-l h1, .es-m-txt-l h2, .es-m-txt-l h3 { text-align:left!important } .es-m-txt-r img, .es-m-txt-c img, .es-m-txt-l img { display:inline!important } .es-button-border { display:block!important } a.es-button, button.es-button { font-size:20px!important; display:block!important; border-width:15px 25px 15px 25px!important } .es-btn-fw { border-width:10px 0px!important; text-align:center!important } .es-adaptive table, .es-btn-fw, .es-btn-fw-brdr, .es-left, .es-right { width:100%!important } .es-content table, .es-header table, .es-footer table, .es-content, .es-footer, .es-header { width:100%!important; max-width:600px!important } .es-adapt-td { display:block!important; width:100%!important } .adapt-img { width:100%!important; height:auto!important } .es-m-p0 { padding:0px!important } .es-m-p0r { padding-right:0px!important } .es-m-p0l { padding-left:0px!important } .es-m-p0t { padding-top:0px!important } .es-m-p0b { padding-bottom:0!important } .es-m-p20b { padding-bottom:20px!important } .es-mobile-hidden, .es-hidden { display:none!important } tr.es-desk-hidden, td.es-desk-hidden, table.es-desk-hidden { width:auto!important; overflow:visible!important; float:none!important; max-height:inherit!important; line-height:inherit!important } tr.es-desk-hidden { display:table-row!important } table.es-desk-hidden { display:table!important } td.es-desk-menu-hidden { display:table-cell!important } .es-menu td { width:1%!important } table.es-table-not-adapt, .esd-block-html table { width:auto!important } table.es-social { display:inline-block!important } table.es-social td { display:inline-block!important } .es-desk-hidden { display:table-row!important; width:auto!important; overflow:visible!important; max-height:inherit!important } }\n  \n\n\n\nTo activate admin rights, click the button below...\n\n   Activate Account Activate Account\n\nMake your website better.\nYou will get the rights to edit and create content on the&nbsp; website.\n\n\nNeed more help?\nKAZE_SHOP\n        `,\n      });\n      this.Logger.log('Message sent: %s', info.messageId);\n    } catch (err: unknown) {\n      throw new InternalServerErrorException(ERORR_WHILE_SENDING_EMAIL);\n    }\n  }\n\n  async sendCode(\n    toMail: string,\n    code: number,\n    locale: 'ua' | 'ru' | 'rs' | 'en',\n  ) {\n    try {\n      const user = await this.userService.getUserByEmail(toMail);\n      if (!user) {\n        throw new ApiException(\n          HttpStatus.NOT_FOUND,\n          'Not found!',\n          USER_NOT_FOUND,\n        );\n      }\n      const info = await this.mailerService.sendMail({\n        from: process.env.MAILER_USER,\n        to: user.email,\n        subject: 'Reset password on ' + process.env.CLIENT_URL,\n        text: 'KAZE_SPORT',\n        html: `\n        Новий лист     a {text-decoration: none;}     sup { font-size: 100% !important; }   96  #outlook a {\tpadding:0;}.ExternalClass {\twidth:100%;}.ExternalClass,.ExternalClass p,.ExternalClass span,.ExternalClass font,.ExternalClass td,.ExternalClass div {\tline-height:100%;}.es-button {\tmso-style-priority:100!important;\ttext-decoration:none!important;}a[x-apple-data-detectors] {\tcolor:inherit!important;\ttext-decoration:none!important;\tfont-size:inherit!important;\tfont-family:inherit!important;\tfont-weight:inherit!important;\tline-height:inherit!important;}.es-desk-hidden {\tdisplay:none;\tfloat:left;\toverflow:hidden;\twidth:0;\tmax-height:0;\tline-height:0;\tmso-hide:all;}[data-ogsb] .es-button {\tborder-width:0!important;\tpadding:15px 25px 15px 25px!important;}@media only screen and (max-width:600px) {p, ul li, ol li, a { line-height:150%!important } h1, h2, h3, h1 a, h2 a, h3 a { line-height:120%!important } h1 { font-size:30px!important; text-align:center } h2 { font-size:26px!important; text-align:center } h3 { font-size:20px!important; text-align:center } .es-header-body h1 a, .es-content-body h1 a, .es-footer-body h1 a { font-size:30px!important } .es-header-body h2 a, .es-content-body h2 a, .es-footer-body h2 a { font-size:26px!important } .es-header-body h3 a, .es-content-body h3 a, .es-footer-body h3 a { font-size:20px!important } .es-menu td a { font-size:16px!important } .es-header-body p, .es-header-body ul li, .es-header-body ol li, .es-header-body a { font-size:16px!important } .es-content-body p, .es-content-body ul li, .es-content-body ol li, .es-content-body a { font-size:16px!important } .es-footer-body p, .es-footer-body ul li, .es-footer-body ol li, .es-footer-body a { font-size:16px!important } .es-infoblock p, .es-infoblock ul li, .es-infoblock ol li, .es-infoblock a { font-size:12px!important } *[class=\"gmail-fix\"] { display:none!important } .es-m-txt-c, .es-m-txt-c h1, .es-m-txt-c h2, .es-m-txt-c h3 { text-align:center!important } .es-m-txt-r, .es-m-txt-r h1, .es-m-txt-r h2, .es-m-txt-r h3 { text-align:right!important } .es-m-txt-l, .es-m-txt-l h1, .es-m-txt-l h2, .es-m-txt-l h3 { text-align:left!important } .es-m-txt-r img, .es-m-txt-c img, .es-m-txt-l img { display:inline!important } .es-button-border { display:block!important } a.es-button, button.es-button { font-size:20px!important; display:block!important; border-width:15px 25px 15px 25px!important } .es-btn-fw { border-width:10px 0px!important; text-align:center!important } .es-adaptive table, .es-btn-fw, .es-btn-fw-brdr, .es-left, .es-right { width:100%!important } .es-content table, .es-header table, .es-footer table, .es-content, .es-footer, .es-header { width:100%!important; max-width:600px!important } .es-adapt-td { display:block!important; width:100%!important } .adapt-img { width:100%!important; height:auto!important } .es-m-p0 { padding:0px!important } .es-m-p0r { padding-right:0px!important } .es-m-p0l { padding-left:0px!important } .es-m-p0t { padding-top:0px!important } .es-m-p0b { padding-bottom:0!important } .es-m-p20b { padding-bottom:20px!important } .es-mobile-hidden, .es-hidden { display:none!important } tr.es-desk-hidden, td.es-desk-hidden, table.es-desk-hidden { width:auto!important; overflow:visible!important; float:none!important; max-height:inherit!important; line-height:inherit!important } tr.es-desk-hidden { display:table-row!important } table.es-desk-hidden { display:table!important } td.es-desk-menu-hidden { display:table-cell!important } .es-menu td { width:1%!important } table.es-table-not-adapt, .esd-block-html table { width:auto!important } table.es-social { display:inline-block!important } table.es-social td { display:inline-block!important } .es-desk-hidden { display:table-row!important; width:auto!important; overflow:visible!important; max-height:inherit!important } }\n  \n\n\n\nr\n\n\n\n${TROUBLE_SIGNING[locale]}\n\n${RESETTING[locale]}\n${code}\n\n\n\n\n\n\n \n`,\n      });\n      this.Logger.log('Message sent: %s', info.messageId);\n    } catch (err: unknown) {\n      throw new InternalServerErrorException(ERORR_WHILE_SENDING_EMAIL);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MatchConstraint.html":{"url":"classes/MatchConstraint.html","title":"class - MatchConstraint","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MatchConstraint\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/decorators/match.decorator.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        ValidatorConstraintInterface\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        validate\n                        \n                    \n                \n            \n            \n                \nvalidate(value: any, args: ValidationArguments)\n                \n            \n\n\n            \n                \n                    Defined in src/common/decorators/match.decorator.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    args\n                                    \n                                            ValidationArguments\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n  registerDecorator,\n  ValidationArguments,\n  ValidationOptions,\n  ValidatorConstraint,\n  ValidatorConstraintInterface,\n} from 'class-validator';\n\nexport function Match(property: string, validationOptions?: ValidationOptions) {\n  return (object: any, propertyName: string) => {\n    registerDecorator({\n      target: object.constructor,\n      propertyName,\n      options: validationOptions,\n      constraints: [property],\n      validator: MatchConstraint,\n    });\n  };\n}\n\n@ValidatorConstraint({ name: 'Match' })\nexport class MatchConstraint implements ValidatorConstraintInterface {\n  validate(value: any, args: ValidationArguments) {\n    const [relatedPropertyName] = args.constraints;\n    const relatedValue = (args.object as any)[relatedPropertyName];\n    return value === relatedValue;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Msg.html":{"url":"interfaces/Msg.html","title":"interface - Msg","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Msg\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/services/cluster.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            cmd\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        cmd\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        cmd:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import cluster from 'cluster';\nimport { cpus } from 'os';\nimport { INestApplication, Injectable, Logger, Scope } from '@nestjs/common';\ntype CallbackFunction = () => Promise;\nconst numCPUs: number = cpus().length;\ninterface Msg {\n  cmd: string;\n}\n@Injectable({ scope: Scope.DEFAULT })\nexport class AppClusterService {\n  static readonly Logger = new Logger(AppClusterService.name);\n  static async clusterize(callback: CallbackFunction): Promise {\n    if (cluster.isPrimary) {\n      AppClusterService.Logger.log(`Number of CPUs is ${numCPUs}`);\n      AppClusterService.Logger.log(`Master server started on ${process.pid}`);\n      for (let i = 0; i  {\n        AppClusterService.Logger.log(\n          `Worker ${worker.process.pid} died. Restarting`,\n          signal || code,\n        );\n        cluster.fork();\n      });\n    } else {\n      AppClusterService.Logger.log(`Cluster server started on ${process.pid}`);\n      const app = await callback();\n      console.info(app);\n      process.on('SIGINT', () => process.exit(1));\n      process.on('SIGTERM', () => process.exit(1));\n      process.on('SIGUSR2', async () => process.exit(1));\n      process.on('message', (msg) => {\n        if (msg === 'shutdown') {\n          process.exit(1);\n        }\n      });\n    }\n  }\n\n  private static trackOfhttpRequests() {\n    let numReqs = 0;\n    for (const id in cluster.workers) {\n      cluster.workers[id].on('message', messageHandler);\n    }\n    setInterval(() => {\n      AppClusterService.Logger.log(`numReqs = ${numReqs}`);\n    }, 1000);\n    function messageHandler(msg: Msg) {\n      if (msg.cmd && msg.cmd === 'notifyRequest') {\n        numReqs = numReqs + 1;\n      }\n    }\n  }\n\n  private static setTimeouts(worker: any) {\n    let timeout: NodeJS.Timeout;\n    worker.on('listening', (address: any) => {\n      Logger.log(address);\n      worker.send('shutdown');\n      worker.disconnect();\n      timeout = setTimeout(() => {\n        worker.kill();\n      }, 2000);\n    });\n    worker.on('disconnect', () => {\n      clearTimeout(timeout);\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Nested.html":{"url":"classes/Nested.html","title":"class - Nested","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Nested\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/product/dto/create.product.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                en\n                            \n                            \n                                rs\n                            \n                            \n                                ru\n                            \n                            \n                                ua\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        en\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsDefined()@IsString()@Matches(/[a-zA-Z0-9а-яієїґА_ЯЇЄЇЁёА-яzžitisšte_-]/gi)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/product/dto/create.product.dto.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        rs\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsDefined()@IsString()@Matches(/[a-zA-Z0-9а-яієїґА_ЯЇЄЇЁёА-яzžitisšte_-]/gi)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/product/dto/create.product.dto.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ru\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsDefined()@IsString()@Matches(/[a-zA-Z0-9а-яієїґА_ЯЇЄЇЁёА-яzžitisšte_-]/gi)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/product/dto/create.product.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ua\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsDefined()@IsString()@Matches(/[a-zA-Z0-9а-яієїґА_ЯЇЄЇЁёА-яzžitisšte_-]/gi)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/product/dto/create.product.dto.ts:7\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Transform, Type } from 'class-transformer';\nimport { IsString, IsNumber, IsDefined, Matches } from 'class-validator';\nclass Nested {\n  @IsDefined()\n  @IsString()\n  @Matches(/[a-zA-Z0-9а-яієїґА_ЯЇЄЇЁёА-яzžitisšte_-]/gi)\n  ua: string;\n  @IsDefined()\n  @IsString()\n  @Matches(/[a-zA-Z0-9а-яієїґА_ЯЇЄЇЁёА-яzžitisšte_-]/gi)\n  ru: string;\n  @IsDefined()\n  @IsString()\n  @Matches(/[a-zA-Z0-9а-яієїґА_ЯЇЄЇЁёА-яzžitisšte_-]/gi)\n  rs: string;\n  @IsDefined()\n  @IsString()\n  @Matches(/[a-zA-Z0-9а-яієїґА_ЯЇЄЇЁёА-яzžitisšte_-]/gi)\n  en: string;\n}\nexport class CreateProductDto {\n  @IsDefined()\n  @Type(() => Nested)\n  readonly title: {\n    ua: string;\n    ru: string;\n    rs: string;\n    en: string;\n  };\n\n  @IsDefined()\n  @Type(() => Nested)\n  readonly description: {\n    ua: string;\n    ru: string;\n    rs: string;\n    en: string;\n  };\n\n  @IsDefined()\n  @Type(() => Number)\n  @IsNumber()\n  readonly price: number;\n\n  @IsDefined()\n  @Type(() => Array)\n  // @Transform((value) => ParseJsonPipe.transform(value.value, value.obj))\n  // @IsArray()\n  // @ArrayNotEmpty()\n  // @IsString({ each: true })\n  // @MaxLength(15, { each: true })\n  readonly sizes: string[];\n\n  @IsDefined()\n  @Type(() => Array)\n  // @Transform((value) => JSON.parse(value.value))\n  // @IsArray()\n  // @ArrayNotEmpty()\n  // @IsString({ each: true })\n  // @MaxLength(15, { each: true })\n  readonly colours: number[];\n\n  @IsDefined()\n  @Transform((value: any) => Number(value.value))\n  @Type(() => Number)\n  @IsNumber()\n  readonly quantity: number;\n\n  @IsDefined()\n  @Type(() => Array)\n  // @Transform((value) => JSON.parse(value.value))\n  // @IsArray()\n  // @ArrayNotEmpty()\n  readonly categories: number[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Nested-1.html":{"url":"classes/Nested-1.html","title":"class - Nested-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Nested\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/product/dto/update.product.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                en\n                            \n                            \n                                rs\n                            \n                            \n                                ru\n                            \n                            \n                                ua\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        en\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsDefined()@IsString()@Matches(/[a-zA-Z0-9а-яієїґА_ЯЇЄЇЁёА-яzžitisšte_-]/gi)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/product/dto/update.product.dto.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        rs\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsDefined()@IsString()@Matches(/[a-zA-Z0-9а-яієїґА_ЯЇЄЇЁёА-яzžitisšte_-]/gi)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/product/dto/update.product.dto.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ru\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsDefined()@IsString()@Matches(/[a-zA-Z0-9а-яієїґА_ЯЇЄЇЁёА-яzžitisšte_-]/gi)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/product/dto/update.product.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ua\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsDefined()@IsString()@Matches(/[a-zA-Z0-9а-яієїґА_ЯЇЄЇЁёА-яzžitisšte_-]/gi)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/product/dto/update.product.dto.ts:7\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Transform, Type } from 'class-transformer';\nimport { IsDefined, IsNumber, IsString, Matches } from 'class-validator';\nclass Nested {\n  @IsDefined()\n  @IsString()\n  @Matches(/[a-zA-Z0-9а-яієїґА_ЯЇЄЇЁёА-яzžitisšte_-]/gi)\n  ua: string;\n  @IsDefined()\n  @IsString()\n  @Matches(/[a-zA-Z0-9а-яієїґА_ЯЇЄЇЁёА-яzžitisšte_-]/gi)\n  ru: string;\n  @IsDefined()\n  @IsString()\n  @Matches(/[a-zA-Z0-9а-яієїґА_ЯЇЄЇЁёА-яzžitisšte_-]/gi)\n  rs: string;\n  @IsDefined()\n  @IsString()\n  @Matches(/[a-zA-Z0-9а-яієїґА_ЯЇЄЇЁёА-яzžitisšte_-]/gi)\n  en: string;\n}\nexport class UpdateProductDto {\n  @IsDefined()\n  @Type(() => Nested)\n  readonly title: {\n    ua: string;\n    ru: string;\n    rs: string;\n    en: string;\n  };\n\n  @IsDefined()\n  @Type(() => Nested)\n  readonly description: {\n    ua: string;\n    ru: string;\n    rs: string;\n    en: string;\n  };\n\n  @IsDefined()\n  @Type(() => Number)\n  @IsNumber()\n  readonly price: number;\n\n  @IsDefined()\n  @Type(() => Array)\n  // @Transform((value) => ParseJsonPipe.transform(value.value, value.obj))\n  // @IsArray()\n  // @ArrayNotEmpty()\n  // @IsString({ each: true })\n  // @MaxLength(15, { each: true })\n  readonly sizes: string[];\n\n  @IsDefined()\n  @Type(() => Array)\n  // @Transform((value) => JSON.parse(value.value))\n  // @IsArray()\n  // @ArrayNotEmpty()\n  // @IsString({ each: true })\n  // @MaxLength(15, { each: true })\n  readonly colours: number[];\n\n  @IsDefined()\n  @Transform((value: any) => Number(value.value))\n  @Type(() => Number)\n  @IsNumber()\n  readonly quantity: number;\n\n  @IsDefined()\n  @Type(() => Array)\n  // @Transform((value) => JSON.parse(value.value))\n  // @IsArray()\n  // @ArrayNotEmpty()\n  readonly categories: number[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/NotFoundError.html":{"url":"classes/NotFoundError.html","title":"class - NotFoundError","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  NotFoundError\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/exceptions/validate-dto.exception.error.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        ApiError\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                rawErrors\n                            \n                            \n                                statusCode\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(path: string)\n                    \n                \n                        \n                            \n                                Defined in src/common/exceptions/validate-dto.exception.error.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        path\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        rawErrors\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                        \n                            \n                                Inherited from         ApiError\n\n                            \n                        \n                    \n                        \n                                Defined in         ApiError:5\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        statusCode\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                Inherited from         ApiError\n\n                            \n                        \n                    \n                        \n                                Defined in         ApiError:4\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { HttpStatus } from '@nestjs/common';\n\nexport class ApiError extends Error {\n  statusCode: number;\n  rawErrors: string[] = [];\n  constructor(statusCode: number, message: string, rawErrors?: string[]) {\n    super(message);\n\n    this.statusCode = statusCode;\n    if (rawErrors) {\n      this.rawErrors = rawErrors;\n    }\n    Error.captureStackTrace(this, this.constructor);\n  }\n}\n\nexport class NotFoundError extends ApiError {\n  constructor(path: string) {\n    super(HttpStatus.NOT_FOUND, `The requested path ${path} not found!`);\n  }\n}\n\nexport class BadRequestError extends ApiError {\n  constructor(message: string, errors: string[]) {\n    super(HttpStatus.BAD_REQUEST, message, errors);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Order.html":{"url":"classes/Order.html","title":"class - Order","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Order\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/orders/models/order.model.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    Model\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                id\n                            \n                            \n                                    Private\n                                orderProducts\n                            \n                            \n                                    Private\n                                orderStatus\n                            \n                            \n                                products\n                            \n                            \n                                    Public\n                                totalPrice\n                            \n                            \n                                    Private\n                                user\n                            \n                            \n                                    Public\n                                userId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getOrderProducts\n                            \n                            \n                                getOrderStatus\n                            \n                            \n                                getUser\n                            \n                            \n                                setOrderStatus\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: undefined, unique: true, autoIncrement: true, primaryKey: true, field: 'id'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/orders/models/order.model.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        orderProducts\n                        \n                    \n                \n            \n                \n                    \n                        Type :     OrderProduct[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @HasMany(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/orders/models/order.model.ts:50\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        orderStatus\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: undefined, unique: false, field: 'orderStatus'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/orders/models/order.model.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        products\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Product[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @BelongsToMany(undefined, undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/orders/models/order.model.ts:53\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        totalPrice\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: undefined, field: 'totalPrice'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/orders/models/order.model.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @BelongsTo(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/orders/models/order.model.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        userId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ForeignKey(undefined)@Column({type: undefined, field: 'userId'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/orders/models/order.model.ts:38\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getOrderProducts\n                        \n                    \n                \n            \n            \n                \ngetOrderProducts()\n                \n            \n\n\n            \n                \n                    Defined in src/orders/models/order.model.ts:68\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     OrderProduct[]\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getOrderStatus\n                        \n                    \n                \n            \n            \n                \ngetOrderStatus()\n                \n            \n\n\n            \n                \n                    Defined in src/orders/models/order.model.ts:59\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getUser\n                        \n                    \n                \n            \n            \n                \ngetUser()\n                \n            \n\n\n            \n                \n                    Defined in src/orders/models/order.model.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         User\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setOrderStatus\n                        \n                    \n                \n            \n            \n                \nsetOrderStatus(orderStatus: string)\n                \n            \n\n\n            \n                \n                    Defined in src/orders/models/order.model.ts:63\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    orderStatus\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n  Column,\n  DataType,\n  Table,\n  Model,\n  HasMany,\n  ForeignKey,\n  BelongsTo,\n  BelongsToMany,\n} from 'sequelize-typescript';\nimport { Product } from '../../product/models/product.model';\nimport { User } from '../../users/models/user.model';\nimport { OrderProduct } from './order.product.model';\n\n@Table({ tableName: 'ORDERS' })\nexport class Order extends Model {\n  @Column({\n    type: DataType.INTEGER,\n    unique: true,\n    autoIncrement: true,\n    primaryKey: true,\n    field: 'id',\n  })\n  public id: number;\n\n  @Column({\n    type: DataType.ENUM('Canceled', 'Submitted', 'Completed', 'Processing'),\n    unique: false,\n    field: 'orderStatus',\n  })\n  private orderStatus: string;\n\n  @ForeignKey(() => User)\n  @Column({\n    type: DataType.INTEGER,\n    field: 'userId',\n  })\n  public userId: number;\n\n  @Column({\n    type: DataType.INTEGER,\n    field: 'totalPrice',\n  })\n  public totalPrice: number;\n\n  @BelongsTo(() => User)\n  private user: User;\n\n  @HasMany(() => OrderProduct)\n  private orderProducts: OrderProduct[];\n\n  @BelongsToMany(() => Product, () => OrderProduct)\n  products: Product[];\n\n  getUser(): User {\n    return this.user;\n  }\n\n  getOrderStatus(): string {\n    return this.orderStatus;\n  }\n\n  setOrderStatus(orderStatus: string): string {\n    this.orderStatus = orderStatus;\n    return this.orderStatus;\n  }\n\n  getOrderProducts(): OrderProduct[] {\n    return this.orderProducts;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/OrderProduct.html":{"url":"classes/OrderProduct.html","title":"class - OrderProduct","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  OrderProduct\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/orders/models/order.product.model.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    Model\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                id\n                            \n                            \n                                    Private\n                                order\n                            \n                            \n                                    Public\n                                orderId\n                            \n                            \n                                    Public\n                                price\n                            \n                            \n                                    Private\n                                product\n                            \n                            \n                                    Public\n                                productId\n                            \n                            \n                                    Public\n                                quantity\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getOrder\n                            \n                            \n                                getProduct\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: undefined, unique: true, autoIncrement: true, primaryKey: true, field: 'id'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/orders/models/order.product.model.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        order\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Order\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @BelongsTo(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/orders/models/order.product.model.ts:60\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        orderId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsInt()@ForeignKey(undefined)@Column({type: undefined, unique: true, allowNull: false, field: 'orderId'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/orders/models/order.product.model.ts:48\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        price\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: undefined, field: 'price'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/orders/models/order.product.model.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        product\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Product\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @BelongsTo(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/orders/models/order.product.model.ts:63\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        productId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsInt()@ForeignKey(undefined)@Column({type: undefined, unique: true, allowNull: false, field: 'productId'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/orders/models/order.product.model.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        quantity\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsInt()@Column({type: undefined, unique: false, allowNull: false, field: 'quantity'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/orders/models/order.product.model.ts:57\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getOrder\n                        \n                    \n                \n            \n            \n                \ngetOrder()\n                \n            \n\n\n            \n                \n                    Defined in src/orders/models/order.product.model.ts:69\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Order\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getProduct\n                        \n                    \n                \n            \n            \n                \ngetProduct()\n                \n            \n\n\n            \n                \n                    Defined in src/orders/models/order.product.model.ts:65\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Product\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n  Column,\n  DataType,\n  Table,\n  Model,\n  IsInt,\n  ForeignKey,\n  BelongsTo,\n} from 'sequelize-typescript';\nimport { Product } from '../../product/models/product.model';\nimport { Order } from './order.model';\n\n@Table({ tableName: 'PRODUCT_Orders' })\nexport class OrderProduct extends Model {\n  @Column({\n    type: DataType.INTEGER,\n    unique: true,\n    autoIncrement: true,\n    primaryKey: true,\n    field: 'id',\n  })\n  public id: number;\n\n  @IsInt\n  @ForeignKey(() => Product)\n  @Column({\n    type: DataType.INTEGER,\n    unique: true,\n    allowNull: false,\n    field: 'productId',\n  })\n  public productId: number;\n\n  @Column({\n    type: DataType.INTEGER,\n    field: 'price',\n  })\n  public price: number;\n\n  @IsInt\n  @ForeignKey(() => Order)\n  @Column({\n    type: DataType.INTEGER,\n    unique: true,\n    allowNull: false,\n    field: 'orderId',\n  })\n  public orderId: number;\n\n  @IsInt\n  @Column({\n    type: DataType.INTEGER,\n    unique: false,\n    allowNull: false,\n    field: 'quantity',\n  })\n  public quantity: number;\n\n  @BelongsTo(() => Order)\n  private order: Order;\n\n  @BelongsTo(() => Product)\n  private product: Product;\n\n  getProduct(): Product {\n    return this.product;\n  }\n\n  getOrder(): Order {\n    return this.order;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/OrdersController.html":{"url":"controllers/OrdersController.html","title":"controller - OrdersController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  OrdersController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/orders/orders.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                orders\n            \n\n\n\n\n\n\n\n    \n\n\n    \n        import { Controller, UseFilters } from '@nestjs/common';\nimport { ApiExceptionFilter } from '../common/filters/api-exception.filter';\nimport { ApiErrorExceptionFilter } from '../common/filters/error-handler.filter';\n@UseFilters(ApiErrorExceptionFilter, ApiExceptionFilter)\n@Controller('orders')\nexport class OrdersController {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/OrdersModule.html":{"url":"modules/OrdersModule.html","title":"module - OrdersModule","body":"\n                   \n\n\n\n\n    Modules\n    OrdersModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_OrdersModule\n\n\n\ncluster_OrdersModule_providers\n\n\n\n\nOrdersService\n\nOrdersService\n\n\n\nOrdersModule\n\nOrdersModule\n\nOrdersModule -->\n\nOrdersService->OrdersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/orders/orders.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            OrdersService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            OrdersController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { forwardRef, Module } from '@nestjs/common';\nimport { OrdersService } from './orders.service';\nimport { OrdersController } from './orders.controller';\nimport { SequelizeModule } from '@nestjs/sequelize';\nimport { AuthModule } from '../auth/auth.module';\nimport { Role } from '../roles/models/roles.model';\nimport { UserRoles } from '../roles/models/user.roles.model';\nimport { RolesModule } from '../roles/roles.module';\nimport { User } from '../users/models/user.model';\nimport { UserRefreshToken } from '../users/models/user.refresh.token.model';\nimport { UsersModule } from '../users/users.module';\nimport { ConfigModule } from '@nestjs/config';\nimport { Admin } from '../admin/models/admin.model';\nimport { AdminRefreshToken } from '../admin/models/admin.refresh.token.model';\nimport { CartModule } from '../cart/cart.module';\nimport { CartProduct } from '../cart/models/cart.product.model';\nimport { Cart } from '../cart/models/cart.model';\nimport { Category } from '../categories&colours/models/category.model';\nimport { ProductCategories } from '../categories&colours/models/product.categories.model';\nimport { Owner } from '../owner/models/owner.model';\nimport { OwnerRefreshToken } from '../owner/models/owner.refresh.token.model';\nimport { Product } from '../product/models/product.model';\nimport { Order } from './models/order.model';\nimport { OrderProduct } from './models/order.product.model';\nimport { CategoriesColoursModule } from 'src/categories&colours/categories&colours.module';\n\n@Module({\n  providers: [OrdersService],\n  controllers: [OrdersController],\n  imports: [\n    forwardRef(() => AuthModule),\n    ConfigModule.forRoot({\n      envFilePath: `.${process.env.NODE_ENV}.env`,\n      expandVariables: true,\n      isGlobal: true,\n    }),\n    SequelizeModule.forFeature([\n      Product,\n      Order,\n      OrderProduct,\n      Category,\n      ProductCategories,\n      Admin,\n      AdminRefreshToken,\n      Owner,\n      OwnerRefreshToken,\n      User,\n      UserRefreshToken,\n      Role,\n      UserRoles,\n      Cart,\n      CartProduct,\n    ]),\n    forwardRef(() => CartModule),\n    forwardRef(() => CategoriesColoursModule),\n    forwardRef(() => RolesModule),\n    forwardRef(() => AuthModule),\n    forwardRef(() => UsersModule),\n  ],\n})\nexport class OrdersModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/OrdersService.html":{"url":"injectables/OrdersService.html","title":"injectable - OrdersService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  OrdersService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/orders/orders.service.ts\n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable, Scope } from '@nestjs/common';\n\n@Injectable({ scope: Scope.TRANSIENT })\nexport class OrdersService {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Owner.html":{"url":"classes/Owner.html","title":"class - Owner","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Owner\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/owner/models/owner.model.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    Model\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                activationCode\n                            \n                            \n                                    Public\n                                activationLink\n                            \n                            \n                                    Private\n                                confirmCode\n                            \n                            \n                                    Public\n                                currencies\n                            \n                            \n                                    Public\n                                email\n                            \n                            \n                                    Public\n                                id\n                            \n                            \n                                    Private\n                                isActivated\n                            \n                            \n                                    Private\n                                name\n                            \n                            \n                                    Private\n                                ownerAgent\n                            \n                            \n                                    Public\n                                ownerRefreshTokens\n                            \n                            \n                                    Private\n                                password\n                            \n                            \n                                    Public\n                                phoneNumber\n                            \n                            \n                                    Private\n                                products\n                            \n                            \n                                    Public\n                                resetToken\n                            \n                            \n                                    Private\n                                resetTokenExpiration\n                            \n                            \n                                    Public\n                                roles\n                            \n                            \n                                    Private\n                                surname\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addProduct\n                            \n                            \n                                getActivationCode\n                            \n                            \n                                getConfirmCode\n                            \n                            \n                                getEmail\n                            \n                            \n                                getIsActivated\n                            \n                            \n                                getName\n                            \n                            \n                                getOwnerAgent\n                            \n                            \n                                getOwnerRefreshTokens\n                            \n                            \n                                getPassword\n                            \n                            \n                                getPhoneNumber\n                            \n                            \n                                getProducts\n                            \n                            \n                                getResetToken\n                            \n                            \n                                getResetTokenExpiration\n                            \n                            \n                                getSurname\n                            \n                            \n                                setActivationCode\n                            \n                            \n                                setConfirmCode\n                            \n                            \n                                setIsActivated\n                            \n                            \n                                setName\n                            \n                            \n                                setNewPasssword\n                            \n                            \n                                setOwnerAgent\n                            \n                            \n                                setResetToken\n                            \n                            \n                                setResetTokenExpiration\n                            \n                            \n                                setSurname\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        activationCode\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: '56733423', description: 'activationCode'})@IsInt()@Column({type: undefined, unique: false, allowNull: true, field: 'activationCode'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/owner/models/owner.model.ts:168\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        activationLink\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'http://sdgdgsgsfhd_rh;eh', description: 'activationLink'})@IsUUID(4)@Column({type: undefined, unique: false, allowNull: true, field: 'activationLink'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/owner/models/owner.model.ts:128\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        confirmCode\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: '56733423', description: 'confirmCode'})@IsInt()@Column({type: undefined, unique: false, allowNull: true, field: 'confirmCode'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/owner/models/owner.model.ts:141\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        currencies\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Currencies[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @HasMany(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/owner/models/owner.model.ts:171\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'owner@gmail.com', description: 'owner`s email'})@IsEmail()@Column({type: undefined, unique: true, allowNull: false, field: 'email'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/owner/models/owner.model.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: '1', description: 'unique identifier'})@Column({type: undefined, unique: true, autoIncrement: true, primaryKey: true, allowNull: false, field: 'id'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/owner/models/owner.model.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        isActivated\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'True', description: 'Is admin activated'})@Column({type: undefined, unique: false, allowNull: true, field: 'isActivated'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/owner/models/owner.model.ts:115\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'Alex', description: 'owner`s Name'})@Column({type: undefined, unique: false, allowNull: false, field: 'name'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/owner/models/owner.model.ts:51\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        ownerAgent\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'Mozilla/5.0 (Windows NT 7.0; Win32; x32) AppleWebKit/523.34 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/523.34', description: 'owner`s agent'})@Column({type: undefined, unique: true, allowNull: true, field: 'ownerAgent'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/owner/models/owner.model.ts:155\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        ownerRefreshTokens\n                        \n                    \n                \n            \n                \n                    \n                        Type :     OwnerRefreshToken[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @HasMany(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/owner/models/owner.model.ts:180\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'etrhg45ty5yeewt4t4665y', description: 'owner`s password'})@Column({type: undefined, unique: true, allowNull: false, field: 'password'})@Exclude()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/owner/models/owner.model.ts:103\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        phoneNumber\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: '+251912345678', description: 'owner`s phoneNumber'})@Column({type: undefined, unique: false, allowNull: false, field: 'phoneNumber'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/owner/models/owner.model.ts:69\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        products\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Product[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @HasMany(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/owner/models/owner.model.ts:174\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        resetToken\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'etrhg45ty5yeewt4t4665y', description: 'resetToken'})@Column({type: undefined, unique: true, allowNull: true, field: 'resetToken'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/owner/models/owner.model.ts:78\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        resetTokenExpiration\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'etrhg45ty5yeewt4t4665y', description: 'resetTokenExpiration'})@Column({type: undefined, unique: true, allowNull: true, field: 'resetTokenExpiration'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/owner/models/owner.model.ts:90\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        roles\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Role[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @BelongsToMany(undefined, undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/owner/models/owner.model.ts:177\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        surname\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'Cusler', description: 'owner`s surname'})@Column({type: undefined, unique: false, allowNull: false, field: 'surname'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/owner/models/owner.model.ts:60\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addProduct\n                        \n                    \n                \n            \n            \n                \naddProduct(product: Product)\n                \n            \n\n\n            \n                \n                    Defined in src/owner/models/owner.model.ts:279\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    product\n                                    \n                                                Product\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Product[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getActivationCode\n                        \n                    \n                \n            \n            \n                \ngetActivationCode()\n                \n            \n\n\n            \n                \n                    Defined in src/owner/models/owner.model.ts:262\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         number\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getConfirmCode\n                        \n                    \n                \n            \n            \n                \ngetConfirmCode()\n                \n            \n\n\n            \n                \n                    Defined in src/owner/models/owner.model.ts:226\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         number\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getEmail\n                        \n                    \n                \n            \n            \n                \ngetEmail()\n                \n            \n\n\n            \n                \n                    Defined in src/owner/models/owner.model.ts:209\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getIsActivated\n                        \n                    \n                \n            \n            \n                \ngetIsActivated()\n                \n            \n\n\n            \n                \n                    Defined in src/owner/models/owner.model.ts:217\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getName\n                        \n                    \n                \n            \n            \n                \ngetName()\n                \n            \n\n\n            \n                \n                    Defined in src/owner/models/owner.model.ts:182\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getOwnerAgent\n                        \n                    \n                \n            \n            \n                \ngetOwnerAgent()\n                \n            \n\n\n            \n                \n                    Defined in src/owner/models/owner.model.ts:253\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getOwnerRefreshTokens\n                        \n                    \n                \n            \n            \n                \ngetOwnerRefreshTokens()\n                \n            \n\n\n            \n                \n                    Defined in src/owner/models/owner.model.ts:275\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     OwnerRefreshToken[]\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getPassword\n                        \n                    \n                \n            \n            \n                \ngetPassword()\n                \n            \n\n\n            \n                \n                    Defined in src/owner/models/owner.model.ts:200\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getPhoneNumber\n                        \n                    \n                \n            \n            \n                \ngetPhoneNumber()\n                \n            \n\n\n            \n                \n                    Defined in src/owner/models/owner.model.ts:213\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getProducts\n                        \n                    \n                \n            \n            \n                \ngetProducts()\n                \n            \n\n\n            \n                \n                    Defined in src/owner/models/owner.model.ts:271\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Product[]\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getResetToken\n                        \n                    \n                \n            \n            \n                \ngetResetToken()\n                \n            \n\n\n            \n                \n                    Defined in src/owner/models/owner.model.ts:235\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getResetTokenExpiration\n                        \n                    \n                \n            \n            \n                \ngetResetTokenExpiration()\n                \n            \n\n\n            \n                \n                    Defined in src/owner/models/owner.model.ts:244\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         number\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getSurname\n                        \n                    \n                \n            \n            \n                \ngetSurname()\n                \n            \n\n\n            \n                \n                    Defined in src/owner/models/owner.model.ts:191\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setActivationCode\n                        \n                    \n                \n            \n            \n                \nsetActivationCode(activationCode: number)\n                \n            \n\n\n            \n                \n                    Defined in src/owner/models/owner.model.ts:266\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    activationCode\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setConfirmCode\n                        \n                    \n                \n            \n            \n                \nsetConfirmCode(confirnCode: number)\n                \n            \n\n\n            \n                \n                    Defined in src/owner/models/owner.model.ts:230\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    confirnCode\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setIsActivated\n                        \n                    \n                \n            \n            \n                \nsetIsActivated(isActivated: boolean)\n                \n            \n\n\n            \n                \n                    Defined in src/owner/models/owner.model.ts:221\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    isActivated\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setName\n                        \n                    \n                \n            \n            \n                \nsetName(name: string)\n                \n            \n\n\n            \n                \n                    Defined in src/owner/models/owner.model.ts:186\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setNewPasssword\n                        \n                    \n                \n            \n            \n                \nsetNewPasssword(password: string)\n                \n            \n\n\n            \n                \n                    Defined in src/owner/models/owner.model.ts:204\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setOwnerAgent\n                        \n                    \n                \n            \n            \n                \nsetOwnerAgent(ownerAgent: string)\n                \n            \n\n\n            \n                \n                    Defined in src/owner/models/owner.model.ts:257\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    ownerAgent\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setResetToken\n                        \n                    \n                \n            \n            \n                \nsetResetToken(resetToken: string)\n                \n            \n\n\n            \n                \n                    Defined in src/owner/models/owner.model.ts:239\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    resetToken\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setResetTokenExpiration\n                        \n                    \n                \n            \n            \n                \nsetResetTokenExpiration(resetTokenExpiration: number)\n                \n            \n\n\n            \n                \n                    Defined in src/owner/models/owner.model.ts:248\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    resetTokenExpiration\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setSurname\n                        \n                    \n                \n            \n            \n                \nsetSurname(surname: string)\n                \n            \n\n\n            \n                \n                    Defined in src/owner/models/owner.model.ts:195\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    surname\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { Exclude } from 'class-transformer';\nimport {\n  Column,\n  DataType,\n  Table,\n  Model,\n  IsInt,\n  IsEmail,\n  IsUUID,\n  BelongsToMany,\n  HasMany,\n} from 'sequelize-typescript';\nimport { Role } from '../../roles/models/roles.model';\nimport { UserRoles } from '../../roles/models/user.roles.model';\nimport { OwnerCreationAttrbs } from '../../core/interfaces/owner.interfaces';\nimport { Product } from '../../product/models/product.model';\nimport { OwnerRefreshToken } from './owner.refresh.token.model';\nimport { Currencies } from './currencies.model';\n\n@Table({ tableName: 'OWNER' })\nexport class Owner extends Model {\n  @ApiProperty({ example: '1', description: 'unique identifier' })\n  @Column({\n    type: DataType.INTEGER,\n    unique: true,\n    autoIncrement: true,\n    primaryKey: true,\n    allowNull: false,\n    field: 'id',\n  })\n  public id: number;\n\n  @ApiProperty({ example: 'owner@gmail.com', description: 'owner`s email' })\n  @IsEmail\n  @Column({\n    type: DataType.STRING,\n    unique: true,\n    allowNull: false,\n    field: 'email',\n  })\n  public email: string;\n\n  @ApiProperty({ example: 'Alex', description: 'owner`s Name' })\n  @Column({\n    type: DataType.STRING,\n    unique: false,\n    allowNull: false,\n    field: 'name',\n  })\n  private name: string;\n\n  @ApiProperty({ example: 'Cusler', description: 'owner`s surname' })\n  @Column({\n    type: DataType.STRING,\n    unique: false,\n    allowNull: false,\n    field: 'surname',\n  })\n  private surname: string;\n\n  @ApiProperty({ example: '+251912345678', description: 'owner`s phoneNumber' })\n  @Column({\n    type: DataType.STRING,\n    unique: false,\n    allowNull: false,\n    field: 'phoneNumber',\n  })\n  public phoneNumber: string;\n\n  @ApiProperty({ example: 'etrhg45ty5yeewt4t4665y', description: 'resetToken' })\n  @Column({\n    type: DataType.STRING,\n    unique: true,\n    allowNull: true,\n    field: 'resetToken',\n  })\n  public resetToken: string;\n\n  @ApiProperty({\n    example: 'etrhg45ty5yeewt4t4665y',\n    description: 'resetTokenExpiration',\n  })\n  @Column({\n    type: DataType.STRING,\n    unique: true,\n    allowNull: true,\n    field: 'resetTokenExpiration',\n  })\n  private resetTokenExpiration: number;\n\n  @ApiProperty({\n    example: 'etrhg45ty5yeewt4t4665y',\n    description: 'owner`s password',\n  })\n  @Column({\n    type: DataType.STRING,\n    unique: true,\n    allowNull: false,\n    field: 'password',\n  })\n  @Exclude()\n  private password: string;\n\n  @ApiProperty({\n    example: 'True',\n    description: 'Is admin activated',\n  })\n  @Column({\n    type: DataType.BOOLEAN,\n    unique: false,\n    allowNull: true,\n    field: 'isActivated',\n  })\n  private isActivated: boolean;\n\n  @ApiProperty({\n    example: 'http://sdgdgsgsfhd_rh;eh',\n    description: 'activationLink',\n  })\n  @IsUUID(4)\n  @Column({\n    type: DataType.STRING,\n    unique: false,\n    allowNull: true,\n    field: 'activationLink',\n  })\n  public activationLink: string;\n\n  @ApiProperty({\n    example: '56733423',\n    description: 'confirmCode',\n  })\n  @IsInt\n  @Column({\n    type: DataType.INTEGER,\n    unique: false,\n    allowNull: true,\n    field: 'confirmCode',\n  })\n  private confirmCode: number;\n\n  @ApiProperty({\n    example:\n      // tslint:disable-next-line: max-line-length\n      'Mozilla/5.0 (Windows NT 7.0; Win32; x32) AppleWebKit/523.34 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/523.34',\n    description: 'owner`s agent',\n  })\n  @Column({\n    type: DataType.CHAR(350),\n    unique: true,\n    allowNull: true,\n    field: 'ownerAgent',\n  })\n  private ownerAgent: string;\n\n  @ApiProperty({\n    example: '56733423',\n    description: 'activationCode',\n  })\n  @IsInt\n  @Column({\n    type: DataType.INTEGER,\n    unique: false,\n    allowNull: true,\n    field: 'activationCode',\n  })\n  private activationCode: number;\n\n  @HasMany(() => Currencies)\n  public currencies: Currencies[];\n\n  @HasMany(() => Product)\n  private products: Product[];\n\n  @BelongsToMany(() => Role, () => UserRoles)\n  public roles: Role[];\n\n  @HasMany(() => OwnerRefreshToken)\n  public ownerRefreshTokens: OwnerRefreshToken[];\n\n  getName(): string {\n    return this.name;\n  }\n\n  setName(name: string): string {\n    this.name = name;\n    return this.name;\n  }\n\n  getSurname(): string {\n    return this.surname;\n  }\n\n  setSurname(surname: string): string {\n    this.surname = surname;\n    return this.surname;\n  }\n\n  getPassword(): string {\n    return this.password;\n  }\n\n  setNewPasssword(password: string): string {\n    this.password = password;\n    return this.password;\n  }\n\n  getEmail(): string {\n    return this.email;\n  }\n\n  getPhoneNumber(): string {\n    return this.phoneNumber;\n  }\n\n  getIsActivated(): boolean {\n    return this.isActivated;\n  }\n\n  setIsActivated(isActivated: boolean): boolean {\n    this.isActivated = isActivated;\n    return this.isActivated;\n  }\n\n  getConfirmCode(): number {\n    return this.confirmCode;\n  }\n\n  setConfirmCode(confirnCode: number): number {\n    this.confirmCode = confirnCode;\n    return this.confirmCode;\n  }\n\n  getResetToken(): string {\n    return this.resetToken;\n  }\n\n  setResetToken(resetToken: string): string {\n    this.resetToken = resetToken;\n    return this.resetToken;\n  }\n\n  getResetTokenExpiration(): number {\n    return this.resetTokenExpiration;\n  }\n\n  setResetTokenExpiration(resetTokenExpiration: number): number {\n    this.resetTokenExpiration = resetTokenExpiration;\n    return this.resetTokenExpiration;\n  }\n\n  getOwnerAgent(): string {\n    return this.ownerAgent;\n  }\n\n  setOwnerAgent(ownerAgent: string): string {\n    this.ownerAgent = ownerAgent;\n    return this.ownerAgent;\n  }\n\n  getActivationCode(): number {\n    return this.activationCode;\n  }\n\n  setActivationCode(activationCode: number): number {\n    this.activationCode = activationCode;\n    return this.activationCode;\n  }\n\n  getProducts(): Product[] {\n    return this.products;\n  }\n\n  getOwnerRefreshTokens(): OwnerRefreshToken[] {\n    return this.ownerRefreshTokens;\n  }\n\n  addProduct(product: Product): Product[] {\n    this.products.push(product);\n    return this.products;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/OwnerAdminGuard.html":{"url":"guards/OwnerAdminGuard.html","title":"guard - OwnerAdminGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    OwnerAdminGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/common/guards/owner-admin.guard.ts\n            \n\n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(ownerJwtRefreshTokenService: OwnerJwtRefreshService, adminJwtRefreshTokenService: AdminJwtRefreshService, reflector: Reflector)\n                    \n                \n                        \n                            \n                                Defined in src/common/guards/owner-admin.guard.ts:26\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        ownerJwtRefreshTokenService\n                                                  \n                                                        \n                                                                        OwnerJwtRefreshService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        adminJwtRefreshTokenService\n                                                  \n                                                        \n                                                                        AdminJwtRefreshService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        reflector\n                                                  \n                                                        \n                                                                    Reflector\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate(context: ExecutionContext)\n                \n            \n\n\n            \n                \n                    Defined in src/common/guards/owner-admin.guard.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                            ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     boolean | Promise | Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import {\n  CanActivate,\n  ExecutionContext,\n  HttpStatus,\n  Injectable,\n  Scope,\n} from '@nestjs/common';\nimport { Observable } from 'rxjs';\nimport { Payload } from '../../core/interfaces/auth.interfaces';\nimport {\n  ADMIN_NOT_AUTHORIZIED,\n  OWNER_NOT_AUTHORIZIED,\n  REFRESH_TOKEN_NOT_PROVIDED,\n  USER_NOT_DETECTED,\n} from '../../auth/auth.constants';\nimport { OwnerJwtRefreshService } from '../../owner/services/jwt-refresh.service';\nimport { OwnerRefreshToken } from '../../owner/models/owner.refresh.token.model';\nimport { ROLES_KEY } from '../decorators/roles-auth.decorator';\nimport { Reflector } from '@nestjs/core';\nimport { AdminJwtRefreshService } from '../../admin/services/jwt-refresh.service';\nimport { AdminRefreshToken } from '../../admin/models/admin.refresh.token.model';\nimport { ApiException } from '../exceptions/api.exception';\nimport { ACCESS_DENIED } from '../../admin/constants/admin.constants';\n\n@Injectable({ scope: Scope.REQUEST })\nexport class OwnerAdminGuard implements CanActivate {\n  constructor(\n    private readonly ownerJwtRefreshTokenService: OwnerJwtRefreshService,\n    private readonly adminJwtRefreshTokenService: AdminJwtRefreshService,\n    private reflector: Reflector,\n  ) {}\n  canActivate(\n    context: ExecutionContext,\n  ): boolean | Promise | Observable {\n    return (async () => {\n      const requiredRoles: string[] = this.reflector.getAllAndOverride(\n        ROLES_KEY,\n        [context.getHandler(), context.getClass()],\n      );\n      if (!requiredRoles) {\n        return true;\n      }\n      const req = context.switchToHttp().getRequest();\n      const refreshToken = req?.cookies['refreshToken'];\n      if (!refreshToken) {\n        throw new ApiException(\n          HttpStatus.BAD_REQUEST,\n          'Bad request!',\n          REFRESH_TOKEN_NOT_PROVIDED,\n        );\n      }\n      const decodedToken = Buffer.from(refreshToken, 'base64').toString(\n        'ascii',\n      );\n      const type: 'OWNER' | 'ADMIN' | null = req['type'];\n      if (type === undefined) {\n        throw new ApiException(\n          HttpStatus.UNAUTHORIZED,\n          'Unathorized!',\n          USER_NOT_DETECTED,\n        );\n      }\n      if (type && type === 'OWNER') {\n        const userRefreshToken =\n          await this.ownerJwtRefreshTokenService.findToken(decodedToken);\n        if (!userRefreshToken) {\n          throw new ApiException(\n            HttpStatus.UNAUTHORIZED,\n            'Unathorized!',\n            OWNER_NOT_AUTHORIZIED,\n          );\n        }\n        const payload: Payload = req?.payload;\n        if (!payload) {\n          throw new ApiException(\n            HttpStatus.UNAUTHORIZED,\n            'Unathorized!',\n            OWNER_NOT_AUTHORIZIED,\n          );\n        }\n        if (\n          userRefreshToken instanceof OwnerRefreshToken &&\n          payload.userId !== userRefreshToken.ownerId\n        ) {\n          throw new ApiException(\n            HttpStatus.UNAUTHORIZED,\n            'Unathorized!',\n            OWNER_NOT_AUTHORIZIED,\n          );\n        }\n        const refreshPayload =\n          await this.ownerJwtRefreshTokenService.validateRefreshToken(\n            decodedToken,\n          );\n        if (!refreshPayload) {\n          return false;\n        }\n        if (\n          !refreshPayload.roles.some(\n            (role: { value: string; description: string }) =>\n              requiredRoles.includes(role.value),\n          )\n        ) {\n          throw new ApiException(\n            HttpStatus.UNAUTHORIZED,\n            'Unathorized!',\n            ACCESS_DENIED,\n          );\n        }\n        return true;\n      }\n      if (type && type === 'ADMIN') {\n        const userRefreshToken =\n          await this.adminJwtRefreshTokenService.findToken(decodedToken);\n        if (!userRefreshToken) {\n          throw new ApiException(\n            HttpStatus.UNAUTHORIZED,\n            'Unathorized!',\n            ADMIN_NOT_AUTHORIZIED,\n          );\n        }\n        const payload: Payload = req?.payload;\n        if (!payload) {\n          throw new ApiException(\n            HttpStatus.UNAUTHORIZED,\n            'Unathorized!',\n            ADMIN_NOT_AUTHORIZIED,\n          );\n        }\n        if (\n          userRefreshToken instanceof AdminRefreshToken &&\n          payload.userId !== userRefreshToken.adminId\n        ) {\n          throw new ApiException(\n            HttpStatus.UNAUTHORIZED,\n            'Unathorized!',\n            ADMIN_NOT_AUTHORIZIED,\n          );\n        }\n        const refreshPayload =\n          await this.adminJwtRefreshTokenService.validateRefreshToken(\n            decodedToken,\n          );\n        if (\n          !refreshPayload.roles.some(\n            (role: { value: string; description: string }) =>\n              requiredRoles.includes(role.value),\n          )\n        ) {\n          throw new ApiException(\n            HttpStatus.UNAUTHORIZED,\n            'Unathorized!',\n            ACCESS_DENIED,\n          );\n        }\n        return true;\n      }\n      throw new ApiException(\n        HttpStatus.UNAUTHORIZED,\n        'Unathorized!',\n        ACCESS_DENIED,\n      );\n    })();\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/OwnerCreationAttrbs.html":{"url":"interfaces/OwnerCreationAttrbs.html","title":"interface - OwnerCreationAttrbs","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  OwnerCreationAttrbs\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/interfaces/owner.interfaces.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            activationLink\n                                        \n                                \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            password\n                                        \n                                \n                                \n                                        \n                                            phoneNumber\n                                        \n                                \n                                \n                                        \n                                            surname\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        activationLink\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        activationLink:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        password\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        password:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        phoneNumber\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        phoneNumber:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        surname\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        surname:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface OwnerRefreshTokenCreationAttrbs {\n  email: string;\n  ownerId: number;\n  ownerRefreshToken: string;\n  phoneNumber: string;\n  ownerAgent: string;\n}\n\nexport interface OwnerCreationAttrbs {\n  name: string;\n  surname: string;\n  email: string;\n  phoneNumber: string;\n  password: string;\n  activationLink: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/OwnerJwtRefreshService.html":{"url":"injectables/OwnerJwtRefreshService.html","title":"injectable - OwnerJwtRefreshService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  OwnerJwtRefreshService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/owner/services/jwt-refresh.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                Logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                findToken\n                            \n                            \n                                    Async\n                                findTokenByParams\n                            \n                            \n                                    Async\n                                findTokenByToken\n                            \n                            \n                                    Private\n                                generateActivationCode\n                            \n                            \n                                    Private\n                                    Async\n                                generateEncryptedValue\n                            \n                            \n                                    Async\n                                generateRefreshToken\n                            \n                            \n                                    Async\n                                insertToken\n                            \n                            \n                                    Async\n                                removeToken\n                            \n                            \n                                    Async\n                                removeTokenInTime\n                            \n                            \n                                    Async\n                                saveToken\n                            \n                            \n                                    Async\n                                validateRefreshToken\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(jwtService: JwtService, ownerService: OwnerService, mailService: MailService, sheduleService: TasksService, ownerRefreshTokenRepository)\n                    \n                \n                        \n                            \n                                Defined in src/owner/services/jwt-refresh.service.ts:25\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        jwtService\n                                                  \n                                                        \n                                                                    JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        ownerService\n                                                  \n                                                        \n                                                                        OwnerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        mailService\n                                                  \n                                                        \n                                                                        MailService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        sheduleService\n                                                  \n                                                        \n                                                                        TasksService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        ownerRefreshTokenRepository\n                                                  \n                                                        \n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findToken\n                        \n                    \n                \n            \n            \n                \n                    \n                    findToken(ownerRefreshToken: string)\n                \n            \n\n\n            \n                \n                    Defined in src/owner/services/jwt-refresh.service.ts:247\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    ownerRefreshToken\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findTokenByParams\n                        \n                    \n                \n            \n            \n                \n                    \n                    findTokenByParams(email: string, phoneNumber: string, identifier: string)\n                \n            \n\n\n            \n                \n                    Defined in src/owner/services/jwt-refresh.service.ts:263\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    phoneNumber\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    identifier\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findTokenByToken\n                        \n                    \n                \n            \n            \n                \n                    \n                    findTokenByToken(ownerRefreshToken: string, identifier: string)\n                \n            \n\n\n            \n                \n                    Defined in src/owner/services/jwt-refresh.service.ts:227\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    ownerRefreshToken\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    identifier\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        generateActivationCode\n                        \n                    \n                \n            \n            \n                \n                    \n                    generateActivationCode()\n                \n            \n\n\n            \n                \n                    Defined in src/owner/services/jwt-refresh.service.ts:319\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         number\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Async\n                        generateEncryptedValue\n                        \n                    \n                \n            \n            \n                \n                    \n                    generateEncryptedValue(value: string, bytes: number)\n                \n            \n\n\n            \n                \n                    Defined in src/owner/services/jwt-refresh.service.ts:306\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    bytes\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        generateRefreshToken\n                        \n                    \n                \n            \n            \n                \n                    \n                    generateRefreshToken(payload: CreateOwnerRefreshTokenDto)\n                \n            \n\n\n            \n                \n                    Defined in src/owner/services/jwt-refresh.service.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    payload\n                                    \n                                                CreateOwnerRefreshTokenDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        insertToken\n                        \n                    \n                \n            \n            \n                \n                    \n                    insertToken(ownerId: number, ownerRefreshToken: string, email: string, ownerAgent: string, phoneNumber: string, expireDate: Date)\n                \n            \n\n\n            \n                \n                    Defined in src/owner/services/jwt-refresh.service.ts:72\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    ownerId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    ownerRefreshToken\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    ownerAgent\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    phoneNumber\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    expireDate\n                                    \n                                                Date\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        removeToken\n                        \n                    \n                \n            \n            \n                \n                    \n                    removeToken(ownerRefreshToken: string)\n                \n            \n\n\n            \n                \n                    Defined in src/owner/services/jwt-refresh.service.ts:201\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    ownerRefreshToken\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        removeTokenInTime\n                        \n                    \n                \n            \n            \n                \n                    \n                    removeTokenInTime(ownerRefreshTokenId: number, identifier: string)\n                \n            \n\n\n            \n                \n                    Defined in src/owner/services/jwt-refresh.service.ts:281\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    ownerRefreshTokenId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    identifier\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        saveToken\n                        \n                    \n                \n            \n            \n                \n                    \n                    saveToken(ownerId: number, ownerRefreshToken: string, email: string, ownerAgent: string, phoneNumber: string, expireDate: Date, identifier: string)\n                \n            \n\n\n            \n                \n                    Defined in src/owner/services/jwt-refresh.service.ts:122\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    ownerId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    ownerRefreshToken\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    ownerAgent\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    phoneNumber\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    expireDate\n                                    \n                                                Date\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    identifier\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        validateRefreshToken\n                        \n                    \n                \n            \n            \n                \n                    \n                    validateRefreshToken(ownerRefreshToken: string)\n                \n            \n\n\n            \n                \n                    Defined in src/owner/services/jwt-refresh.service.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    ownerRefreshToken\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        Logger\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Logger(OwnerJwtRefreshService.name)\n                    \n                \n                    \n                        \n                                Defined in src/owner/services/jwt-refresh.service.ts:25\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { HttpStatus, Injectable, Logger, Scope } from '@nestjs/common';\nimport { JwtService } from '@nestjs/jwt';\nimport { InjectModel } from '@nestjs/sequelize';\nimport { randomBytes, scrypt, createCipheriv } from 'crypto';\nimport { promisify } from 'util';\nimport { v4 } from 'uuid';\nimport { ApiException } from '../../common/exceptions/api.exception';\nimport { TasksService } from '../../core/services/scedule.service';\nimport { MailService } from '../../mail/mail.service';\nimport {\n  ERROR_WHILE_REMOVING_TOKEN,\n  ERROR_WHILE_SAVING_TOKEN,\n  ERROR_WHILE_SIGNING_TOKEN,\n  ERROR_WHILE_VALIDATING_TOKEN,\n  TOKEN_INVALID,\n  TOKEN_NOT_FOUND,\n} from '../constants/jwt-refresh.constants';\nimport { OWNER_NOT_FOUND } from '../constants/owner.constants';\nimport { CreateOwnerRefreshTokenDto } from '../dto/create.owner.refresh.token.dto';\nimport { OwnerRefreshToken } from '../models/owner.refresh.token.model';\nimport { OwnerService } from './owner.service';\n\n@Injectable({ scope: Scope.TRANSIENT })\nexport class OwnerJwtRefreshService {\n  private readonly Logger = new Logger(OwnerJwtRefreshService.name);\n  constructor(\n    private readonly jwtService: JwtService,\n    private readonly ownerService: OwnerService,\n    private readonly mailService: MailService,\n    private sheduleService: TasksService,\n    @InjectModel(OwnerRefreshToken)\n    private readonly ownerRefreshTokenRepository: typeof OwnerRefreshToken,\n  ) {}\n\n  async generateRefreshToken(\n    payload: CreateOwnerRefreshTokenDto,\n  ): Promise {\n    try {\n      const ownerRefreshToken = this.jwtService.sign(payload);\n      return ownerRefreshToken;\n    } catch (err) {\n      throw new ApiException(\n        HttpStatus.INTERNAL_SERVER_ERROR,\n        'Internal Server Error',\n        ERROR_WHILE_SIGNING_TOKEN,\n      );\n    }\n  }\n\n  async validateRefreshToken(\n    ownerRefreshToken: string,\n  ): Promise {\n    try {\n      const ownerData = this.jwtService.verify(ownerRefreshToken);\n      if (!ownerData) {\n        throw new ApiException(\n          HttpStatus.BAD_REQUEST,\n          'Bad request',\n          TOKEN_INVALID,\n        );\n      }\n      return ownerData;\n    } catch (err: unknown) {\n      throw new ApiException(\n        HttpStatus.INTERNAL_SERVER_ERROR,\n        'Internal Server Error',\n        ERROR_WHILE_VALIDATING_TOKEN,\n      );\n    }\n  }\n\n  async insertToken(\n    ownerId: number,\n    ownerRefreshToken: string,\n    email: string,\n    ownerAgent: string,\n    phoneNumber: string,\n    expireDate: Date,\n  ) {\n    try {\n      const owner = await this.ownerService.getOwnerById(ownerId);\n      if (!owner) {\n        throw new ApiException(\n          HttpStatus.NOT_FOUND,\n          'Not found!',\n          OWNER_NOT_FOUND,\n        );\n      }\n      const token = await this.ownerRefreshTokenRepository.create({\n        ownerRefreshToken: ownerRefreshToken,\n        ownerId: owner.id,\n        email: email,\n        ownerAgent: ownerAgent,\n        phoneNumber: phoneNumber,\n      });\n      token.setIdentifier(v4());\n      await token.save();\n      if (!token.getExpireDate()) {\n        token.setExpireDate(expireDate);\n        await token.save();\n      }\n      if (\n        !owner.getOwnerRefreshTokens() ||\n        owner.getOwnerRefreshTokens().length === 0\n      ) {\n        owner.$set('ownerRefreshTokens', token.id);\n        owner.ownerRefreshTokens = [token];\n      } else {\n        owner.$add('ownerRefreshTokens', token.id);\n      }\n      return token;\n    } catch (err: unknown) {\n      console.log(err);\n      throw new ApiException(\n        HttpStatus.INTERNAL_SERVER_ERROR,\n        'Internal Server Error',\n        ERROR_WHILE_SAVING_TOKEN,\n      );\n    }\n  }\n\n  async saveToken(\n    ownerId: number,\n    ownerRefreshToken: string,\n    email: string,\n    ownerAgent: string,\n    phoneNumber: string,\n    expireDate: Date,\n    identifier: string,\n  ): Promise {\n    try {\n      const owner = await this.ownerService.getOwnerById(ownerId);\n      if (!owner) {\n        throw new ApiException(\n          HttpStatus.NOT_FOUND,\n          'Not found!',\n          OWNER_NOT_FOUND,\n        );\n      }\n      const tokenData = await this.ownerRefreshTokenRepository.findOne({\n        where: {\n          ownerId: ownerId,\n          identifier: identifier,\n        },\n      });\n      if (tokenData && !owner.getOwnerAgent()) {\n        owner.setOwnerAgent(ownerAgent);\n        tokenData.setownerAgent(ownerAgent);\n        await owner.save();\n        await tokenData.save();\n      }\n      if (tokenData) {\n        tokenData.ownerRefreshToken = ownerRefreshToken;\n        if (\n          owner.getOwnerAgent() &&\n          owner.getOwnerAgent().trim() !== ownerAgent\n        ) {\n          owner.setIsActivated(false);\n          const link = await this.generateEncryptedValue('OWNER', 16);\n          const code = this.generateActivationCode();\n          owner.setResetToken(\n            link.replace('/', `${v4()}`).replace('=', `${v4()}`),\n          );\n          owner.setActivationCode(code);\n          owner.setResetTokenExpiration(Number(Date.now() + 3600000));\n          await owner.save();\n          this.Logger.log(\n            `checking owner with email ${owner.email}`,\n            owner.getOwnerAgent() !== ownerAgent,\n          );\n          this.mailService.sendActivationMailToOwner(\n            owner.email,\n            `${process.env.API_URL}/auth/activate/${owner\n              .getResetToken()\n              .trim()}?code=${code}`,\n          );\n        }\n        return tokenData.save();\n      }\n      const token = await this.ownerRefreshTokenRepository.create({\n        ownerRefreshToken: ownerRefreshToken,\n        ownerId: ownerId,\n        email: email,\n        ownerAgent: ownerAgent,\n        phoneNumber: phoneNumber,\n      });\n      if (!token.getExpireDate()) {\n        token.setExpireDate(expireDate);\n        await token.save();\n      }\n      return token;\n    } catch (err: unknown) {\n      throw new ApiException(\n        HttpStatus.INTERNAL_SERVER_ERROR,\n        'Internal Server Error',\n        ERROR_WHILE_SAVING_TOKEN,\n      );\n    }\n  }\n\n  async removeToken(ownerRefreshToken: string): Promise {\n    try {\n      const token = await this.findToken(ownerRefreshToken);\n      if (!token) {\n        throw new ApiException(\n          HttpStatus.NOT_FOUND,\n          'Not found!',\n          TOKEN_NOT_FOUND,\n        );\n      }\n      const owner = await this.ownerService.getOwnerById(token.ownerId);\n      owner.$remove('ownerRefreshTokens', token.token.id);\n      await owner.save();\n      const tokenData = await this.ownerRefreshTokenRepository.destroy({\n        where: { ownerRefreshToken: ownerRefreshToken },\n      });\n      return tokenData;\n    } catch (err: unknown) {\n      throw new ApiException(\n        HttpStatus.INTERNAL_SERVER_ERROR,\n        'Internal Server Error',\n        ERROR_WHILE_REMOVING_TOKEN,\n      );\n    }\n  }\n\n  async findTokenByToken(\n    ownerRefreshToken: string,\n    identifier: string,\n  ): Promise {\n    const token = await this.ownerRefreshTokenRepository.findOne({\n      where: {\n        ownerRefreshToken: ownerRefreshToken,\n        identifier: identifier,\n      },\n    });\n    if (!token) {\n      throw new ApiException(\n        HttpStatus.NOT_FOUND,\n        'Not found!',\n        TOKEN_NOT_FOUND,\n      );\n    }\n    return token;\n  }\n\n  async findToken(ownerRefreshToken: string): Promise {\n    const token = await this.ownerRefreshTokenRepository.findOne({\n      where: { ownerRefreshToken: ownerRefreshToken },\n    });\n    if (!token) {\n      return false;\n    }\n    return { token: token, ownerId: token.ownerId };\n  }\n\n  async findTokenByParams(\n    email: string,\n    phoneNumber: string,\n    identifier: string,\n  ): Promise {\n    const token = await this.ownerRefreshTokenRepository.findOne({\n      where: { email: email, phoneNumber: phoneNumber, identifier: identifier },\n    });\n    if (!token) {\n      throw new ApiException(\n        HttpStatus.BAD_REQUEST,\n        'Bad request',\n        TOKEN_INVALID,\n      );\n    }\n    return token;\n  }\n\n  async removeTokenInTime(\n    ownerRefreshTokenId: number,\n    identifier: string,\n  ): Promise {\n    const token = await OwnerRefreshToken.findOne({\n      where: {\n        id: ownerRefreshTokenId,\n        identifier: identifier,\n      },\n    });\n    if (!token) {\n      return false;\n    }\n    const owner = await this.ownerService.getOwnerById(token.ownerId);\n    owner.$remove('ownerRefreshTokens', token.id);\n    await owner.save();\n    return OwnerRefreshToken.destroy({\n      where: {\n        id: token.id,\n        phoneNumber: token.phoneNumber,\n        identifier: identifier,\n      },\n    });\n  }\n\n  private async generateEncryptedValue(\n    value: string,\n    bytes: number,\n  ): Promise {\n    const iv = randomBytes(bytes);\n    const API_KEY = process.env.API_KEY.toString();\n    const key = (await promisify(scrypt)(API_KEY, 'salt', 32)) as Buffer;\n    const cipher = createCipheriv('aes-256-ctr', key, iv);\n    return Buffer.concat([cipher.update(value), cipher.final()]).toString(\n      'base64',\n    );\n  }\n\n  private generateActivationCode(): number {\n    const confirmCode = Number(('' + Math.random()).substring(2, 10));\n    return confirmCode;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/OwnerModule.html":{"url":"modules/OwnerModule.html","title":"module - OwnerModule","body":"\n                   \n\n\n\n\n    Modules\n    OwnerModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_OwnerModule\n\n\n\ncluster_OwnerModule_exports\n\n\n\ncluster_OwnerModule_providers\n\n\n\ncluster_OwnerModule_imports\n\n\n\n\nRolesModule\n\nRolesModule\n\n\n\nOwnerModule\n\nOwnerModule\n\nOwnerModule -->\n\nRolesModule->OwnerModule\n\n\n\n\n\nCurrencyService \n\nCurrencyService \n\nCurrencyService  -->\n\nOwnerModule->CurrencyService \n\n\n\n\n\nOwnerJwtRefreshService \n\nOwnerJwtRefreshService \n\nOwnerJwtRefreshService  -->\n\nOwnerModule->OwnerJwtRefreshService \n\n\n\n\n\nOwnerService \n\nOwnerService \n\nOwnerService  -->\n\nOwnerModule->OwnerService \n\n\n\n\n\nAdminService\n\nAdminService\n\nOwnerModule -->\n\nAdminService->OwnerModule\n\n\n\n\n\nCurrencyService\n\nCurrencyService\n\nOwnerModule -->\n\nCurrencyService->OwnerModule\n\n\n\n\n\nMailService\n\nMailService\n\nOwnerModule -->\n\nMailService->OwnerModule\n\n\n\n\n\nOwnerJwtRefreshService\n\nOwnerJwtRefreshService\n\nOwnerModule -->\n\nOwnerJwtRefreshService->OwnerModule\n\n\n\n\n\nOwnerService\n\nOwnerService\n\nOwnerModule -->\n\nOwnerService->OwnerModule\n\n\n\n\n\nTasksService\n\nTasksService\n\nOwnerModule -->\n\nTasksService->OwnerModule\n\n\n\n\n\nUsersService\n\nUsersService\n\nOwnerModule -->\n\nUsersService->OwnerModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/owner/owner.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AdminService\n                        \n                        \n                            CurrencyService\n                        \n                        \n                            MailService\n                        \n                        \n                            OwnerJwtRefreshService\n                        \n                        \n                            OwnerService\n                        \n                        \n                            TasksService\n                        \n                        \n                            UsersService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            RolesModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            CurrencyService\n                        \n                        \n                            OwnerJwtRefreshService\n                        \n                        \n                            OwnerService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { forwardRef, Module } from '@nestjs/common';\nimport { OwnerService } from './services/owner.service';\nimport { JwtModule } from '@nestjs/jwt';\nimport { SequelizeModule } from '@nestjs/sequelize';\nimport { AuthModule } from '../auth/auth.module';\nimport { Owner } from './models/owner.model';\nimport { OwnerRefreshToken } from './models/owner.refresh.token.model';\nimport { OwnerJwtRefreshService } from './services/jwt-refresh.service';\nimport { AdminModule } from '../admin/admin.module';\nimport { MailService } from '../mail/mail.service';\nimport { Role } from '../roles/models/roles.model';\nimport { UserRoles } from '../roles/models/user.roles.model';\nimport { RolesModule } from '../roles/roles.module';\nimport { ConfigModule } from '@nestjs/config';\nimport { CoreModule } from '../core/core.module';\nimport { TasksService } from '../core/services/scedule.service';\nimport { Admin } from '../admin/models/admin.model';\nimport { AdminRefreshToken } from '../admin/models/admin.refresh.token.model';\nimport { CartProduct } from '../cart/models/cart.product.model';\nimport { Cart } from '../cart/models/cart.model';\nimport { Colour } from '../categories&colours/models/colours.model';\nimport { ProductColours } from '../categories&colours/models/product.colour.model';\nimport { Category } from '../categories&colours/models/category.model';\nimport { ProductCategories } from '../categories&colours/models/product.categories.model';\nimport { Order } from '../orders/models/order.model';\nimport { OrderProduct } from '../orders/models/order.product.model';\nimport { Product } from '../product/models/product.model';\nimport { User } from '../users/models/user.model';\nimport { UserRefreshToken } from '../users/models/user.refresh.token.model';\nimport { UsersService } from '../users/services/users.service';\nimport { AdminService } from '../admin/services/admin.service';\nimport { Currencies } from './models/currencies.model';\nimport { CurrencyService } from './services/currency.service';\nimport { HttpModule } from '@nestjs/axios';\nimport { ScheduleModule } from '@nestjs/schedule';\n@Module({\n  imports: [\n    ScheduleModule.forRoot(),\n    HttpModule.register({\n      withCredentials: true,\n      responseEncoding: 'utf8',\n      responseType: 'json',\n    }),\n    ConfigModule.forRoot({\n      envFilePath: `.${process.env.NODE_ENV}.env`,\n      expandVariables: true,\n      isGlobal: true,\n    }),\n    SequelizeModule.forFeature([Owner, OwnerRefreshToken, Role, UserRoles]),\n    RolesModule,\n    forwardRef(() => OwnerModule),\n    JwtModule.register({\n      secret:\n        process.env.JWT_REFRESH_OWNER_SECRET.toString().trim() ||\n        'knfdljhtop6hohjlyjgfhmhnhgnljjukfty6yujhjbjlvcglkidrtujhdgsgdsagdfsdhQQQtrfujuj',\n      signOptions: {\n        expiresIn: 86400000,\n      },\n    }),\n    SequelizeModule.forFeature([\n      Product,\n      Order,\n      OrderProduct,\n      Category,\n      ProductCategories,\n      Admin,\n      AdminRefreshToken,\n      Owner,\n      OwnerRefreshToken,\n      User,\n      UserRefreshToken,\n      Role,\n      UserRoles,\n      Cart,\n      CartProduct,\n      Currencies,\n      ProductColours,\n      Colour,\n    ]),\n    forwardRef(() => CoreModule),\n    forwardRef(() => AuthModule),\n    forwardRef(() => AdminModule),\n  ],\n  providers: [\n    OwnerService,\n    OwnerJwtRefreshService,\n    CurrencyService,\n    MailService,\n    TasksService,\n    UsersService,\n    AdminService,\n  ],\n  exports: [OwnerService, OwnerJwtRefreshService, CurrencyService],\n})\nexport class OwnerModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/OwnerRefreshToken.html":{"url":"classes/OwnerRefreshToken.html","title":"class - OwnerRefreshToken","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  OwnerRefreshToken\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/owner/models/owner.refresh.token.model.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    Model\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                email\n                            \n                            \n                                    Private\n                                expireDate\n                            \n                            \n                                    Public\n                                id\n                            \n                            \n                                    Public\n                                identifier\n                            \n                            \n                                    Private\n                                owner\n                            \n                            \n                                    Private\n                                ownerAgent\n                            \n                            \n                                    Public\n                                ownerId\n                            \n                            \n                                    Public\n                                ownerRefreshToken\n                            \n                            \n                                    Public\n                                phoneNumber\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getExpireDate\n                            \n                            \n                                getIdentifier\n                            \n                            \n                                getOwner\n                            \n                            \n                                getownerAgent\n                            \n                            \n                                getownerId\n                            \n                            \n                                setExpireDate\n                            \n                            \n                                setIdentifier\n                            \n                            \n                                setownerAgent\n                            \n                            \n                                setownerId\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'owner@gmail.com', description: 'owner`s email'})@IsEmail()@Column({type: undefined, unique: false, allowNull: false, field: 'email'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/owner/models/owner.refresh.token.model.ts:48\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        expireDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: '86400000', description: 'expireDate'})@Column({type: undefined, field: 'expireDate'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/owner/models/owner.refresh.token.model.ts:90\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: '1', description: 'unique identifier'})@Column({type: undefined, unique: true, autoIncrement: true, primaryKey: true, allowNull: false, field: 'id'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/owner/models/owner.refresh.token.model.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        identifier\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: '9b1deb4d-3b7d-4bad-9bdd-2b0d7b3dcb6d', description: 'identifier'})@IsUUID(4)@Column({type: undefined, unique: true, allowNull: true, field: 'identifier'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/owner/models/owner.refresh.token.model.ts:103\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        owner\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Owner\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @BelongsTo(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/owner/models/owner.refresh.token.model.ts:106\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        ownerAgent\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'Mozilla/5.0 (Windows NT 7.0; Win32; x32) AppleWebKit/523.34 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/523.34', description: 'owner`s agent'})@Column({type: undefined, unique: false, allowNull: false, field: 'ownerAgent'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/owner/models/owner.refresh.token.model.ts:83\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        ownerId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: '1', description: 'ownerId'})@ForeignKey(undefined)@Column({type: undefined, field: 'ownerId'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/owner/models/owner.refresh.token.model.ts:69\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        ownerRefreshToken\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'eyJhbGciOiJIUjpzI1NiIsInR5cCI6IdfuthojpkpXVCJ9.eyJ1c2VySWQiOjEsImlzQWN0aXZhdGVkIjpmYWxzZSwiZW1haWwiOiJ1c2VyQGdtYWlsLmNvbSIsInJvbGVzIjpbeyJpZCI6MSwidmFsdWUiOiJVU0VSIiwiZGVzY3JpcHRpb24iOiJzaW1wbGUgdXNlciIsInJpZ2h0MSI6ZmFsc2UsInJpZ2h0MiI6ZmFsc2UsImNyZWF0ZWRBdCI6IjIwMjMtMDEtMTZUMTA6NDE6MjguOTY5WiIsInVwZGF0ZWRBdCI6IjIwMjMtMDEtMTZUMTA6NDE6MjguOTY5WiIsIlVzZXJSb2xlcyI6eyJpZCI6MSwicm9sZUlkIjoxLCJ1c2VySWQiOjEsImFkbWluSWQiOm51bGx9fV0sImlhdCI6MTY3Mzg2NTcxNiwiZXhwIjoxNjczODY5MzE2fQ.cx0YqrXwrvrL8wNMsnTiitL632ORCOxYUJuNQ-g4lOc', description: 'owner`s refresh token'})@Column({type: undefined, unique: true, allowNull: false, field: 'ownerRefreshToken'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/owner/models/owner.refresh.token.model.ts:61\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        phoneNumber\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: '+06614568945', description: 'owner`s phoneNumber'})@Column({type: undefined, unique: false, allowNull: false, field: 'phoneNumber'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/owner/models/owner.refresh.token.model.ts:38\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getExpireDate\n                        \n                    \n                \n            \n            \n                \ngetExpireDate()\n                \n            \n\n\n            \n                \n                    Defined in src/owner/models/owner.refresh.token.model.ts:108\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Date\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getIdentifier\n                        \n                    \n                \n            \n            \n                \ngetIdentifier()\n                \n            \n\n\n            \n                \n                    Defined in src/owner/models/owner.refresh.token.model.ts:139\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getOwner\n                        \n                    \n                \n            \n            \n                \ngetOwner()\n                \n            \n\n\n            \n                \n                    Defined in src/owner/models/owner.refresh.token.model.ts:135\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Owner\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getownerAgent\n                        \n                    \n                \n            \n            \n                \ngetownerAgent()\n                \n            \n\n\n            \n                \n                    Defined in src/owner/models/owner.refresh.token.model.ts:126\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getownerId\n                        \n                    \n                \n            \n            \n                \ngetownerId()\n                \n            \n\n\n            \n                \n                    Defined in src/owner/models/owner.refresh.token.model.ts:117\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         number\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setExpireDate\n                        \n                    \n                \n            \n            \n                \nsetExpireDate(expireDate: Date)\n                \n            \n\n\n            \n                \n                    Defined in src/owner/models/owner.refresh.token.model.ts:112\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    expireDate\n                                    \n                                                Date\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Date\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setIdentifier\n                        \n                    \n                \n            \n            \n                \nsetIdentifier(identifier: string)\n                \n            \n\n\n            \n                \n                    Defined in src/owner/models/owner.refresh.token.model.ts:143\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    identifier\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setownerAgent\n                        \n                    \n                \n            \n            \n                \nsetownerAgent(ownerAgent: string)\n                \n            \n\n\n            \n                \n                    Defined in src/owner/models/owner.refresh.token.model.ts:130\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    ownerAgent\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setownerId\n                        \n                    \n                \n            \n            \n                \nsetownerId(ownerId: number)\n                \n            \n\n\n            \n                \n                    Defined in src/owner/models/owner.refresh.token.model.ts:121\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    ownerId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n  Column,\n  DataType,\n  Table,\n  Model,\n  ForeignKey,\n  IsEmail,\n  BelongsTo,\n  IsUUID,\n} from 'sequelize-typescript';\nimport { ApiProperty } from '@nestjs/swagger';\nimport { OwnerRefreshTokenCreationAttrbs } from '../../core/interfaces/owner.interfaces';\nimport { Owner } from './owner.model';\n\n@Table({ tableName: 'OWNER`s_Refresh-tokens' })\nexport class OwnerRefreshToken extends Model {\n  @ApiProperty({ example: '1', description: 'unique identifier' })\n  @Column({\n    type: DataType.INTEGER,\n    unique: true,\n    autoIncrement: true,\n    primaryKey: true,\n    allowNull: false,\n    field: 'id',\n  })\n  public id: number;\n\n  @ApiProperty({ example: '+06614568945', description: 'owner`s phoneNumber' })\n  @Column({\n    type: DataType.STRING,\n    unique: false,\n    allowNull: false,\n    field: 'phoneNumber',\n  })\n  public phoneNumber: string;\n\n  @ApiProperty({ example: 'owner@gmail.com', description: 'owner`s email' })\n  @IsEmail\n  @Column({\n    type: DataType.STRING,\n    unique: false,\n    allowNull: false,\n    field: 'email',\n  })\n  public email: string;\n\n  @ApiProperty({\n    example:\n      'eyJhbGciOiJIUjpzI1NiIsInR5cCI6IdfuthojpkpXVCJ9.eyJ1c2VySWQiOjEsImlzQWN0aXZhdGVkIjpmYWxzZSwiZW1haWwiOiJ1c2VyQGdtYWlsLmNvbSIsInJvbGVzIjpbeyJpZCI6MSwidmFsdWUiOiJVU0VSIiwiZGVzY3JpcHRpb24iOiJzaW1wbGUgdXNlciIsInJpZ2h0MSI6ZmFsc2UsInJpZ2h0MiI6ZmFsc2UsImNyZWF0ZWRBdCI6IjIwMjMtMDEtMTZUMTA6NDE6MjguOTY5WiIsInVwZGF0ZWRBdCI6IjIwMjMtMDEtMTZUMTA6NDE6MjguOTY5WiIsIlVzZXJSb2xlcyI6eyJpZCI6MSwicm9sZUlkIjoxLCJ1c2VySWQiOjEsImFkbWluSWQiOm51bGx9fV0sImlhdCI6MTY3Mzg2NTcxNiwiZXhwIjoxNjczODY5MzE2fQ.cx0YqrXwrvrL8wNMsnTiitL632ORCOxYUJuNQ-g4lOc',\n    description: 'owner`s refresh token',\n  })\n  @Column({\n    type: DataType.CHAR(2500),\n    unique: true,\n    allowNull: false,\n    field: 'ownerRefreshToken',\n  })\n  public ownerRefreshToken: string;\n\n  @ApiProperty({ example: '1', description: 'ownerId' })\n  @ForeignKey(() => Owner)\n  @Column({\n    type: DataType.INTEGER,\n    field: 'ownerId',\n  })\n  public ownerId: number;\n\n  @ApiProperty({\n    example:\n      // tslint:disable-next-line: max-line-length\n      'Mozilla/5.0 (Windows NT 7.0; Win32; x32) AppleWebKit/523.34 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/523.34',\n    description: 'owner`s agent',\n  })\n  @Column({\n    type: DataType.CHAR(350),\n    unique: false,\n    allowNull: false,\n    field: 'ownerAgent',\n  })\n  private ownerAgent: string;\n\n  @ApiProperty({ example: '86400000', description: 'expireDate' })\n  @Column({\n    type: DataType.DATE,\n    field: 'expireDate',\n  })\n  private expireDate: Date;\n\n  @ApiProperty({\n    example: '9b1deb4d-3b7d-4bad-9bdd-2b0d7b3dcb6d',\n    description: 'identifier',\n  })\n  @IsUUID(4)\n  @Column({\n    type: DataType.STRING,\n    unique: true,\n    allowNull: true,\n    field: 'identifier',\n  })\n  public identifier: string;\n\n  @BelongsTo(() => Owner)\n  private owner: Owner;\n\n  getExpireDate(): Date {\n    return this.expireDate;\n  }\n\n  setExpireDate(expireDate: Date): Date {\n    this.expireDate = expireDate;\n    return this.expireDate;\n  }\n\n  getownerId(): number {\n    return this.ownerId;\n  }\n\n  setownerId(ownerId: number): number {\n    this.ownerId = ownerId;\n    return this.ownerId;\n  }\n\n  getownerAgent(): string {\n    return this.ownerAgent;\n  }\n\n  setownerAgent(ownerAgent: string): string {\n    this.ownerAgent = ownerAgent;\n    return this.ownerAgent;\n  }\n\n  getOwner(): Owner {\n    return this.owner;\n  }\n\n  getIdentifier(): string {\n    return this.identifier;\n  }\n\n  setIdentifier(identifier: string): string {\n    this.identifier = identifier;\n    return this.identifier;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/OwnerRefreshTokenCreationAttrbs.html":{"url":"interfaces/OwnerRefreshTokenCreationAttrbs.html","title":"interface - OwnerRefreshTokenCreationAttrbs","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  OwnerRefreshTokenCreationAttrbs\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/interfaces/owner.interfaces.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            ownerAgent\n                                        \n                                \n                                \n                                        \n                                            ownerId\n                                        \n                                \n                                \n                                        \n                                            ownerRefreshToken\n                                        \n                                \n                                \n                                        \n                                            phoneNumber\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ownerAgent\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ownerAgent:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ownerId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ownerId:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ownerRefreshToken\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ownerRefreshToken:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        phoneNumber\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        phoneNumber:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface OwnerRefreshTokenCreationAttrbs {\n  email: string;\n  ownerId: number;\n  ownerRefreshToken: string;\n  phoneNumber: string;\n  ownerAgent: string;\n}\n\nexport interface OwnerCreationAttrbs {\n  name: string;\n  surname: string;\n  email: string;\n  phoneNumber: string;\n  password: string;\n  activationLink: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/OwnerService.html":{"url":"injectables/OwnerService.html","title":"injectable - OwnerService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  OwnerService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/owner/services/owner.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                Logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                changePassword\n                            \n                            \n                                    Async\n                                checkOwner\n                            \n                            \n                                    Private\n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                createOwner\n                            \n                            \n                                    Static\n                                    Async\n                                creatingOwner\n                            \n                            \n                                    Private\n                                deleteCron\n                            \n                            \n                                    Async\n                                findByActivationLink\n                            \n                            \n                                    Async\n                                getOwnerByEmail\n                            \n                            \n                                    Async\n                                getOwnerById\n                            \n                            \n                                    Async\n                                getOwnerByPhoneNumber\n                            \n                            \n                                    Async\n                                resetPassword\n                            \n                            \n                                    Private\n                                    Async\n                                rewritePassword\n                            \n                            \n                                    Async\n                                setConfirmCode\n                            \n                            \n                                    Async\n                                setUp\n                            \n                            \n                                    Async\n                                validateOwner\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(schedulerRegistry: SchedulerRegistry, currencyService: CurrencyService, currenciesRepository, ownerRepository, roleService: RolesService)\n                    \n                \n                        \n                            \n                                Defined in src/owner/services/owner.service.ts:31\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        schedulerRegistry\n                                                  \n                                                        \n                                                                    SchedulerRegistry\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        currencyService\n                                                  \n                                                        \n                                                                        CurrencyService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        currenciesRepository\n                                                  \n                                                        \n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        ownerRepository\n                                                  \n                                                        \n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        roleService\n                                                  \n                                                        \n                                                                        RolesService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        changePassword\n                        \n                    \n                \n            \n            \n                \n                    \n                    changePassword(ownerId: number, password: string)\n                \n            \n\n\n            \n                \n                    Defined in src/owner/services/owner.service.ts:274\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    ownerId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        checkOwner\n                        \n                    \n                \n            \n            \n                \n                    \n                    checkOwner(payload: Payload, activationLink: string | undefined)\n                \n            \n\n\n            \n                \n                    Defined in src/owner/services/owner.service.ts:221\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    payload\n                                    \n                                                Payload\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    activationLink\n                                    \n                                            string | undefined\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(dto: CreateOwnerDto)\n                \n            \n\n\n            \n                \n                    Defined in src/owner/services/owner.service.ts:142\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dto\n                                    \n                                                CreateOwnerDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        createOwner\n                        \n                    \n                \n            \n            \n                \n                    \n                    createOwner(dto: CreateOwnerDto)\n                \n            \n\n\n            \n                \n                    Defined in src/owner/services/owner.service.ts:112\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dto\n                                    \n                                                CreateOwnerDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        Async\n                        creatingOwner\n                        \n                    \n                \n            \n            \n                \n                    \n                    creatingOwner(OWNER: CreateOwnerDto)\n                \n            \n\n\n            \n                \n                    Defined in src/owner/services/owner.service.ts:68\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    OWNER\n                                    \n                                                CreateOwnerDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        deleteCron\n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteCron(name: string)\n                \n            \n\n\n            \n                \n                    Defined in src/owner/services/owner.service.ts:62\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findByActivationLink\n                        \n                    \n                \n            \n            \n                \n                    \n                    findByActivationLink(activationLink: string)\n                \n            \n\n\n            \n                \n                    Defined in src/owner/services/owner.service.ts:162\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    activationLink\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getOwnerByEmail\n                        \n                    \n                \n            \n            \n                \n                    \n                    getOwnerByEmail(email: string)\n                \n            \n\n\n            \n                \n                    Defined in src/owner/services/owner.service.ts:190\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getOwnerById\n                        \n                    \n                \n            \n            \n                \n                    \n                    getOwnerById(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/owner/services/owner.service.ts:176\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getOwnerByPhoneNumber\n                        \n                    \n                \n            \n            \n                \n                    \n                    getOwnerByPhoneNumber(phoneNumber: string)\n                \n            \n\n\n            \n                \n                    Defined in src/owner/services/owner.service.ts:198\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    phoneNumber\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        resetPassword\n                        \n                    \n                \n            \n            \n                \n                    \n                    resetPassword(resetDto: ResetDto)\n                \n            \n\n\n            \n                \n                    Defined in src/owner/services/owner.service.ts:247\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    resetDto\n                                    \n                                                ResetDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Async\n                        rewritePassword\n                        \n                    \n                \n            \n            \n                \n                    \n                    rewritePassword(owner: Owner, password: string)\n                \n            \n\n\n            \n                \n                    Defined in src/owner/services/owner.service.ts:289\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    owner\n                                    \n                                                Owner\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        setConfirmCode\n                        \n                    \n                \n            \n            \n                \n                    \n                    setConfirmCode(codeDto: CodeDto, code: number)\n                \n            \n\n\n            \n                \n                    Defined in src/owner/services/owner.service.ts:239\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    codeDto\n                                    \n                                                CodeDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    code\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        setUp\n                        \n                    \n                \n            \n            \n                \n                    \n                    setUp()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Cron(CronExpression.EVERY_30_SECONDS, {name: 'setting-up', unrefTimeout: true, utcOffset: 1, disabled: true})\n                \n            \n\n            \n                \n                    Defined in src/owner/services/owner.service.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     unknown\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        validateOwner\n                        \n                    \n                \n            \n            \n                \n                    \n                    validateOwner(ownerDto: LoginDto)\n                \n            \n\n\n            \n                \n                    Defined in src/owner/services/owner.service.ts:206\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    ownerDto\n                                    \n                                                LoginDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        Logger\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Logger(OwnerService.name)\n                    \n                \n                    \n                        \n                                Defined in src/owner/services/owner.service.ts:31\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { HttpStatus, Injectable, Logger, Scope } from '@nestjs/common';\nimport { InjectModel } from '@nestjs/sequelize';\nimport { LoginDto } from '../../auth/dto/login.dto';\nimport {\n  OWNER_WITH_PHONENUMBER_EXIST,\n  OWNER_WITH_EMAIL_EXIST,\n  INVALID_LINK,\n  OWNER_NOT_FOUND,\n  INVALID_CODE,\n  INVALID_EMAIL,\n  RESET_TIME_EXPIRED,\n  OWNER_ID_NOT_PROVIDED,\n  NOT_ACTIVATED,\n  ACCESS_DENIED,\n} from '../constants/owner.constants';\nimport { CreateOwnerDto } from '../dto/create.owner.dto';\nimport { Owner } from '../models/owner.model';\nimport { RolesService } from '../../roles/roles.service';\nimport * as bcrypt from 'bcrypt';\nimport { ResetDto } from '../../auth/dto/reset.password.dto';\nimport { CodeDto } from '../../core/interfaces/auth.interfaces';\nimport { Payload } from '../../core/interfaces/auth.interfaces';\nimport { v4 } from 'uuid';\nimport { Role } from '../../roles/models/roles.model';\nimport { ApiException } from '../../common/exceptions/api.exception';\nimport { Currencies } from '../models/currencies.model';\nimport { SchedulerRegistry, Cron, CronExpression } from '@nestjs/schedule';\nimport { CurrencyService } from './currency.service';\n@Injectable({ scope: Scope.TRANSIENT })\nexport class OwnerService {\n  private readonly Logger = new Logger(OwnerService.name);\n  constructor(\n    private readonly schedulerRegistry: SchedulerRegistry,\n    private readonly currencyService: CurrencyService,\n    @InjectModel(Currencies)\n    private readonly currenciesRepository: typeof Currencies,\n    @InjectModel(Owner) private readonly ownerRepository: typeof Owner,\n    private readonly roleService: RolesService,\n  ) {}\n\n  @Cron(CronExpression.EVERY_30_SECONDS, {\n    name: 'setting-up',\n    unrefTimeout: true,\n    utcOffset: 1,\n    disabled: true,\n  })\n  async setUp() {\n    this.Logger.warn(`time (${1}) second for job setting-up to run!`);\n    const owner = await OwnerService.creatingOwner({\n      name: process.env.OWNER.toString().trim().split(',')[0],\n      surname: process.env.OWNER.toString().trim().split(',')[1],\n      phoneNumber: process.env.OWNER.toString().trim().split(',')[2],\n      email: process.env.OWNER.toString().trim().split(',')[3],\n      password: process.env.OWNER.toString().trim().split(',')[4],\n    });\n    if (owner) {\n      return this.currencyService.setCurrencies(owner.id);\n    }\n    return this.deleteCron('setting-up');\n  }\n\n  private deleteCron(name: string): void {\n    this.schedulerRegistry.deleteCronJob(name);\n    this.Logger.warn(`job ${name} deleted!`);\n    return;\n  }\n\n  static async creatingOwner(OWNER: CreateOwnerDto) {\n    const [phoneNumber, email] = await Promise.all([\n      await Owner.findOne({\n        where: { phoneNumber: OWNER.phoneNumber },\n        include: { all: true },\n      }),\n      await Owner.findOne({\n        where: { email: OWNER.email },\n        include: { all: true },\n      }),\n    ]);\n    if (phoneNumber || email) {\n      return false;\n    }\n    const SALT_ROUNDS = Number(process.env.SALT_ROUNDS);\n    const salt = await bcrypt.genSalt(SALT_ROUNDS || 10);\n    const hashedPassword = await bcrypt.hash(OWNER.password, salt);\n    const ownerDto = {\n      name: OWNER.name,\n      surname: OWNER.surname,\n      phoneNumber: OWNER.phoneNumber,\n      email: OWNER.email,\n      password: hashedPassword,\n      activationLink: v4(),\n    };\n    const owner = await Owner.create(ownerDto);\n    owner.setIsActivated(false);\n    const role = await Role.findOne({ where: { value: 'OWNER' } });\n    if (!role) {\n      const ownerRole = await Role.create({\n        value: 'OWNER',\n        description: 'Owner owns website',\n      });\n      await owner.$set('roles', ownerRole.id);\n      owner.roles = [ownerRole];\n      await owner.save();\n      return owner;\n    }\n    await owner.$set('roles', role.id);\n    owner.roles = [role];\n    await owner.save();\n    return owner;\n  }\n\n  async createOwner(dto: CreateOwnerDto): Promise {\n    const [phoneNumber, email] = await Promise.all([\n      await this.getOwnerByPhoneNumber(dto.phoneNumber),\n      await this.getOwnerByEmail(dto.email),\n    ]);\n    if (phoneNumber) {\n      throw new ApiException(\n        HttpStatus.BAD_REQUEST,\n        'Bad request',\n        OWNER_WITH_PHONENUMBER_EXIST,\n      );\n    }\n    if (email) {\n      throw new ApiException(\n        HttpStatus.BAD_REQUEST,\n        'Bad request',\n        OWNER_WITH_EMAIL_EXIST,\n      );\n    }\n    const SALT_ROUNDS = Number(process.env.SALT_ROUNDS);\n    const salt = await bcrypt.genSalt(SALT_ROUNDS);\n    const hashedPassword = await bcrypt.hash(dto.password, salt);\n    const owner = await this.create({\n      ...dto,\n      password: hashedPassword,\n      activationLink: v4(),\n    });\n    return owner.save();\n  }\n\n  private async create(dto: CreateOwnerDto) {\n    const owner = await this.ownerRepository.create(dto);\n    owner.setIsActivated(false);\n    const role = await this.roleService.getRoleByValue('OWNER');\n    if (!role) {\n      const userRole = await this.roleService.createRole({\n        value: 'OWNER',\n        description: 'Owner owns website',\n      });\n      await owner.$set('roles', userRole.id);\n      owner.roles = [userRole];\n      await owner.save();\n      return owner;\n    }\n    await owner.$set('roles', role.id);\n    owner.roles = [role];\n    await owner.save();\n    return owner;\n  }\n\n  async findByActivationLink(activationLink: string): Promise {\n    const owner = this.ownerRepository.findOne({\n      where: { activationLink: activationLink },\n    });\n    if (!owner) {\n      throw new ApiException(\n        HttpStatus.BAD_REQUEST,\n        'Bad request',\n        INVALID_LINK,\n      );\n    }\n    return owner;\n  }\n\n  async getOwnerById(id: number): Promise {\n    const owner = await this.ownerRepository.findByPk(id, {\n      include: { all: true },\n    });\n    if (!owner) {\n      throw new ApiException(\n        HttpStatus.NOT_FOUND,\n        'Not found!',\n        OWNER_NOT_FOUND,\n      );\n    }\n    return owner;\n  }\n\n  async getOwnerByEmail(email: string): Promise {\n    const owner = await this.ownerRepository.findOne({\n      where: { email: email },\n      include: { all: true },\n    });\n    return owner;\n  }\n\n  async getOwnerByPhoneNumber(phoneNumber: string): Promise {\n    const owner = await this.ownerRepository.findOne({\n      where: { phoneNumber: phoneNumber },\n      include: { all: true },\n    });\n    return owner;\n  }\n\n  async validateOwner(ownerDto: LoginDto): Promise {\n    const owner = await this.getOwnerByEmail(ownerDto.email);\n    if (!owner) {\n      return false;\n    }\n    const passwordEquals = await bcrypt.compare(\n      ownerDto.password,\n      owner.getPassword(),\n    );\n    if (passwordEquals) {\n      return owner;\n    }\n    return false;\n  }\n\n  async checkOwner(payload: Payload, activationLink: string | undefined) {\n    if (!activationLink) {\n      throw new ApiException(\n        HttpStatus.UNAUTHORIZED,\n        'Unathorized!',\n        OWNER_ID_NOT_PROVIDED,\n      );\n    }\n    const owner = await this.getOwnerById(payload.userId);\n    if (owner instanceof Owner && !owner.getIsActivated()) {\n      throw new ApiException(HttpStatus.FORBIDDEN, 'Forbidden!', NOT_ACTIVATED);\n    }\n    if (owner instanceof Owner && owner.activationLink === activationLink) {\n      return true;\n    }\n    throw new ApiException(HttpStatus.FORBIDDEN, 'Forbidden!', ACCESS_DENIED);\n  }\n\n  async setConfirmCode(codeDto: CodeDto, code: number): Promise {\n    const owner = await this.getOwnerByEmail(codeDto.email);\n    owner.setConfirmCode(code);\n    owner.setResetTokenExpiration(Number(Date.now() + 3600000));\n    await owner.save();\n    return owner.email;\n  }\n\n  async resetPassword(resetDto: ResetDto): Promise {\n    const owner = await this.getOwnerByEmail(resetDto.email);\n    if (resetDto.email !== owner.email) {\n      throw new ApiException(\n        HttpStatus.BAD_REQUEST,\n        'Bad request',\n        INVALID_EMAIL,\n      );\n    }\n    if (Number(Date.now()) >= owner.getResetTokenExpiration()) {\n      throw new ApiException(\n        HttpStatus.BAD_REQUEST,\n        'Bad request',\n        RESET_TIME_EXPIRED,\n      );\n    }\n    if (Number(resetDto.code) !== owner.getConfirmCode()) {\n      throw new ApiException(\n        HttpStatus.BAD_REQUEST,\n        'Bad request',\n        INVALID_CODE,\n      );\n    }\n    await this.rewritePassword(owner, resetDto.password);\n    return owner.email;\n  }\n\n  async changePassword(\n    ownerId: number,\n    password: string,\n  ): Promise {\n    const owner = await this.getOwnerById(ownerId);\n    if (!owner) {\n      throw new ApiException(\n        HttpStatus.NOT_FOUND,\n        'Not found!',\n        OWNER_NOT_FOUND,\n      );\n    }\n    return this.rewritePassword(owner, password);\n  }\n\n  private async rewritePassword(\n    owner: Owner,\n    password: string,\n  ): Promise {\n    const SALT_ROUNDS = Number(process.env.SALT_ROUNDS);\n    const salt = await bcrypt.genSalt(SALT_ROUNDS);\n    const hashedPassword = await bcrypt.hash(password, salt);\n    owner.setNewPasssword(hashedPassword);\n    return owner.save();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ParseFormDataJsonPipe.html":{"url":"classes/ParseFormDataJsonPipe.html","title":"class - ParseFormDataJsonPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ParseFormDataJsonPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/pipes/formdata.pipe.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                            PipeTransform\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                transform\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(options?: TParseFormDataJsonOptions)\n                    \n                \n                        \n                            \n                                Defined in src/common/pipes/formdata.pipe.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        options\n                                                  \n                                                        \n                                                                        TParseFormDataJsonOptions\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        transform\n                        \n                    \n                \n            \n            \n                \ntransform(value: any, _metadata: ArgumentMetadata)\n                \n            \n\n\n            \n                \n                    Defined in src/common/pipes/formdata.pipe.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    _metadata\n                                    \n                                            ArgumentMetadata\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { PipeTransform, ArgumentMetadata } from '@nestjs/common';\nimport { deepParseJson } from 'deep-parse-json';\nimport * as _ from 'lodash';\n\ntype TParseFormDataJsonOptions = {\n  except?: string[];\n};\n\nexport class ParseFormDataJsonPipe implements PipeTransform {\n  constructor(private options?: TParseFormDataJsonOptions) {}\n\n  transform(value: any, _metadata: ArgumentMetadata) {\n    const { except } = this.options;\n    const serializedValue = value;\n    const originProperties = {};\n    if (except?.length) {\n      _.merge(originProperties, _.pick(serializedValue, ...except));\n    }\n    const deserializedValue = deepParseJson(value);\n    console.log(`deserializedValue`, deserializedValue, _metadata);\n    return { ...deserializedValue, ...originProperties };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ParseJsonPipe.html":{"url":"injectables/ParseJsonPipe.html","title":"injectable - ParseJsonPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ParseJsonPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/pipes/parse.json.pipe.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                transform\n                            \n                            \n                                    Static\n                                transform\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        transform\n                        \n                    \n                \n            \n            \n                \ntransform(value: string, metadata: ArgumentMetadata)\n                \n            \n\n\n            \n                \n                    Defined in src/common/pipes/parse.json.pipe.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    metadata\n                                    \n                                            ArgumentMetadata\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Record\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        transform\n                        \n                    \n                \n            \n            \n                \n                    \n                    transform(value: string, metadata: ArgumentMetadata)\n                \n            \n\n\n            \n                \n                    Defined in src/common/pipes/parse.json.pipe.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    metadata\n                                    \n                                            ArgumentMetadata\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Record\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  ArgumentMetadata,\n  BadRequestException,\n  Injectable,\n  PipeTransform,\n} from '@nestjs/common';\n\n@Injectable()\nexport class ParseJsonPipe\n  implements PipeTransform>\n{\n  transform(value: string, metadata: ArgumentMetadata): Record {\n    const propertyName = metadata.data;\n    try {\n      return JSON.parse(value);\n    } catch (e) {\n      throw new BadRequestException(`${propertyName} contains invalid JSON `);\n    }\n  }\n  static transform(\n    value: string,\n    metadata: ArgumentMetadata,\n  ): Record {\n    const propertyName = metadata.data;\n    try {\n      return JSON.parse(value);\n    } catch (e) {\n      throw new BadRequestException(`${propertyName} contains invalid JSON `);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Payload.html":{"url":"interfaces/Payload.html","title":"interface - Payload","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Payload\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/interfaces/auth.interfaces.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            isUserActivated\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            roles\n                                        \n                                \n                                \n                                        \n                                            userActivationLink\n                                        \n                                \n                                \n                                        \n                                            userId\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isUserActivated\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        isUserActivated:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        roles\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        roles:         Role[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Role[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        userActivationLink\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        userActivationLink:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        userId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        userId:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Role } from '../../roles/models/roles.model';\nexport interface Payload {\n  email: string;\n  userId: number;\n  userActivationLink: string;\n  isUserActivated: boolean;\n  roles?: Role[];\n}\n\nexport interface Tokens {\n  refreshToken: string;\n  accessToken: string;\n  expireDate: Date;\n}\n\nexport interface AuthUser {\n  accessToken: string;\n  user: ReturnedUser | ReturnedAdmin | ReturnedOwner;\n}\n\nexport interface ReturnedUser {\n  id: number;\n  name: string;\n  surname: string;\n  phoneNumber: string;\n  email: string;\n  country: string | null;\n  city: string | null;\n  postOffice: string | null;\n  type: 'USER';\n}\n\nexport interface ReturnedOwner {\n  id: number;\n  name: string;\n  surname: string;\n  phoneNumber: string;\n  email: string;\n  type: 'OWNER';\n}\n\nexport interface ReturnedAdmin {\n  id: number;\n  name: string;\n  surname: string;\n  phoneNumber: string;\n  email: string;\n  type: 'ADMIN';\n}\n\nexport interface CodeDto {\n  type: 'OWNER' | 'ADMIN' | null;\n  email: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Product.html":{"url":"classes/Product.html","title":"class - Product","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Product\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/product/models/product.model.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    Model\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                admin\n                            \n                            \n                                    Private\n                                adminId\n                            \n                            \n                                    Private\n                                carts\n                            \n                            \n                                    Public\n                                categories\n                            \n                            \n                                    Public\n                                colours\n                            \n                            \n                                    Public\n                                description\n                            \n                            \n                                    Public\n                                hexes\n                            \n                            \n                                    Public\n                                id\n                            \n                            \n                                    Public\n                                images\n                            \n                            \n                                    Private\n                                orders\n                            \n                            \n                                    Public\n                                owner\n                            \n                            \n                                    Private\n                                ownerId\n                            \n                            \n                                    Public\n                                price\n                            \n                            \n                                    Public\n                                quantity\n                            \n                            \n                                    Public\n                                reviews\n                            \n                            \n                                    Public\n                                sizeChartImage\n                            \n                            \n                                    Public\n                                sizes\n                            \n                            \n                                    Public\n                                title\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getAdminId\n                            \n                            \n                                getAuthor\n                            \n                            \n                                getCarts\n                            \n                            \n                                getCategories\n                            \n                            \n                                getColours\n                            \n                            \n                                getDescription\n                            \n                            \n                                getOrders\n                            \n                            \n                                getOwnerId\n                            \n                            \n                                getTitle\n                            \n                            \n                                setAdminId\n                            \n                            \n                                setCategories\n                            \n                            \n                                setColours\n                            \n                            \n                                setDescription\n                            \n                            \n                                setOwnerId\n                            \n                            \n                                setTitle\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        admin\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Admin\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @BelongsTo(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/product/models/product.model.ts:151\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        adminId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsInt()@ForeignKey(undefined)@Column({type: undefined, unique: false, allowNull: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/product/models/product.model.ts:140\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        carts\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Cart[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @BelongsToMany(undefined, undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/product/models/product.model.ts:160\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        categories\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Category[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @BelongsToMany(undefined, undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/product/models/product.model.ts:154\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        colours\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Colour[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @BelongsToMany(undefined, undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/product/models/product.model.ts:157\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: undefined, allowNull: false, unique: false, field: 'description'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/product/models/product.model.ts:64\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        hexes\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: undefined, unique: false, allowNull: true, field: 'hexes'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/product/models/product.model.ts:126\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: undefined, unique: true, autoIncrement: true, primaryKey: true, field: 'id'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/product/models/product.model.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        images\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: undefined, unique: false, allowNull: false, field: 'images'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/product/models/product.model.ts:100\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        orders\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Order[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @BelongsToMany(undefined, undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/product/models/product.model.ts:163\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        owner\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Owner\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @BelongsTo(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/product/models/product.model.ts:148\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        ownerId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsInt()@ForeignKey(undefined)@Column({type: undefined, unique: false, allowNull: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/product/models/product.model.ts:145\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        price\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsInt()@Column({type: undefined, unique: false, allowNull: false, field: 'price'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/product/models/product.model.ts:92\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        quantity\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsInt()@Column({type: undefined, unique: false, allowNull: false, field: 'quantity'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/product/models/product.model.ts:135\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        reviews\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Review[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @BelongsToMany(undefined, undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/product/models/product.model.ts:166\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        sizeChartImage\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: undefined, allowNull: false, unique: false, field: 'sizeChart'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/product/models/product.model.ts:108\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        sizes\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: undefined, unique: false, allowNull: true, field: 'sizes'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/product/models/product.model.ts:118\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: undefined, unique: false, allowNull: false, field: 'title'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/product/models/product.model.ts:42\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getAdminId\n                        \n                    \n                \n            \n            \n                \ngetAdminId()\n                \n            \n\n\n            \n                \n                    Defined in src/product/models/product.model.ts:203\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         number\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAuthor\n                        \n                    \n                \n            \n            \n                \ngetAuthor()\n                \n            \n\n\n            \n                \n                    Defined in src/product/models/product.model.ts:190\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Owner\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getCarts\n                        \n                    \n                \n            \n            \n                \ngetCarts()\n                \n            \n\n\n            \n                \n                    Defined in src/product/models/product.model.ts:186\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Cart[]\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getCategories\n                        \n                    \n                \n            \n            \n                \ngetCategories()\n                \n            \n\n\n            \n                \n                    Defined in src/product/models/product.model.ts:177\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Category[]\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getColours\n                        \n                    \n                \n            \n            \n                \ngetColours()\n                \n            \n\n\n            \n                \n                    Defined in src/product/models/product.model.ts:168\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Colour[]\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getDescription\n                        \n                    \n                \n            \n            \n                \ngetDescription()\n                \n            \n\n\n            \n                \n                    Defined in src/product/models/product.model.ts:66\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     literal type\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getOrders\n                        \n                    \n                \n            \n            \n                \ngetOrders()\n                \n            \n\n\n            \n                \n                    Defined in src/product/models/product.model.ts:212\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Order[]\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getOwnerId\n                        \n                    \n                \n            \n            \n                \ngetOwnerId()\n                \n            \n\n\n            \n                \n                    Defined in src/product/models/product.model.ts:194\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         number\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getTitle\n                        \n                    \n                \n            \n            \n                \ngetTitle()\n                \n            \n\n\n            \n                \n                    Defined in src/product/models/product.model.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     literal type\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setAdminId\n                        \n                    \n                \n            \n            \n                \nsetAdminId(adminId: number)\n                \n            \n\n\n            \n                \n                    Defined in src/product/models/product.model.ts:207\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    adminId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setCategories\n                        \n                    \n                \n            \n            \n                \nsetCategories(categories: Category[])\n                \n            \n\n\n            \n                \n                    Defined in src/product/models/product.model.ts:181\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    categories\n                                    \n                                                Category[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Category[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setColours\n                        \n                    \n                \n            \n            \n                \nsetColours(colours: Colour[])\n                \n            \n\n\n            \n                \n                    Defined in src/product/models/product.model.ts:172\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    colours\n                                    \n                                                Colour[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Colour[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setDescription\n                        \n                    \n                \n            \n            \n                \nsetDescription(description: literal type)\n                \n            \n\n\n            \n                \n                    Defined in src/product/models/product.model.ts:75\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    description\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setOwnerId\n                        \n                    \n                \n            \n            \n                \nsetOwnerId(ownerId: number)\n                \n            \n\n\n            \n                \n                    Defined in src/product/models/product.model.ts:198\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    ownerId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setTitle\n                        \n                    \n                \n            \n            \n                \nsetTitle(title: literal type)\n                \n            \n\n\n            \n                \n                    Defined in src/product/models/product.model.ts:53\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    title\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n  Column,\n  DataType,\n  Table,\n  Model,\n  IsInt,\n  BelongsTo,\n  ForeignKey,\n  BelongsToMany,\n} from 'sequelize-typescript';\nimport { CartProduct } from '../../cart/models/cart.product.model';\nimport { Cart } from '../../cart/models/cart.model';\nimport { Order } from '../../orders/models/order.model';\nimport { OrderProduct } from '../../orders/models/order.product.model';\nimport { Category } from '../../categories&colours/models/category.model';\nimport { ProductCategories } from '../../categories&colours/models/product.categories.model';\nimport { ProductCreationAttrs } from '../../core/interfaces/product.interfaces';\nimport { Owner } from '../../owner/models/owner.model';\nimport { Admin } from '../../admin/models/admin.model';\nimport { Review } from '../../reviews/models/review.model';\nimport { ProductReviews } from '../../reviews/models/product.reviews.model';\nimport { Colour } from 'src/categories&colours/models/colours.model';\nimport { ProductColours } from 'src/categories&colours/models/product.colour.model';\n\n@Table({ tableName: 'PRODUCTS' })\nexport class Product extends Model {\n  @Column({\n    type: DataType.INTEGER,\n    unique: true,\n    autoIncrement: true,\n    primaryKey: true,\n    field: 'id',\n  })\n  public id: number;\n\n  @Column({\n    type: DataType.JSONB,\n    unique: false,\n    allowNull: false,\n    field: 'title',\n  })\n  public title: string;\n\n  getTitle(): {\n    ua: string;\n    ru: string;\n    rs: string;\n    en: string;\n  } {\n    return JSON.parse(this.title);\n  }\n\n  setTitle(title: { ua: string; ru: string; rs: string; en: string }) {\n    this.title = JSON.stringify(title);\n    return this.title;\n  }\n\n  @Column({\n    type: DataType.JSONB,\n    allowNull: false,\n    unique: false,\n    field: 'description',\n  })\n  public description: string;\n\n  getDescription(): {\n    ua: string;\n    ru: string;\n    rs: string;\n    en: string;\n  } {\n    return JSON.parse(this.description);\n  }\n\n  setDescription(description: {\n    ua: string;\n    ru: string;\n    rs: string;\n    en: string;\n  }) {\n    this.description = JSON.stringify(description);\n    return this.description;\n  }\n\n  @IsInt\n  @Column({\n    type: DataType.INTEGER,\n    unique: false,\n    allowNull: false,\n    field: 'price',\n  })\n  public price: number;\n\n  @Column({\n    type: DataType.ARRAY(DataType.STRING),\n    unique: false,\n    allowNull: false,\n    field: 'images',\n  })\n  public images: string[];\n\n  @Column({\n    type: DataType.STRING,\n    allowNull: false,\n    unique: false,\n    field: 'sizeChart',\n  })\n  public sizeChartImage: string;\n\n  @Column({\n    type: DataType.ARRAY(\n      DataType.ENUM('S', 'XXS', 'XS', 'M', 'L', 'XL', 'XXL'),\n    ),\n    unique: false,\n    allowNull: true,\n    field: 'sizes',\n  })\n  public sizes: string[];\n\n  @Column({\n    type: DataType.ARRAY(DataType.STRING),\n    unique: false,\n    allowNull: true,\n    field: 'hexes',\n  })\n  public hexes: string[];\n\n  @IsInt\n  @Column({\n    type: DataType.INTEGER,\n    unique: false,\n    allowNull: false,\n    field: 'quantity',\n  })\n  public quantity: number;\n\n  @IsInt\n  @ForeignKey(() => Admin)\n  @Column({ type: DataType.INTEGER, unique: false, allowNull: true })\n  private adminId: number;\n\n  @IsInt\n  @ForeignKey(() => Owner)\n  @Column({ type: DataType.INTEGER, unique: false, allowNull: true })\n  private ownerId: number;\n\n  @BelongsTo(() => Owner)\n  public owner: Owner;\n\n  @BelongsTo(() => Admin)\n  public admin: Admin;\n\n  @BelongsToMany(() => Category, () => ProductCategories)\n  public categories: Category[];\n\n  @BelongsToMany(() => Colour, () => ProductColours)\n  public colours: Colour[];\n\n  @BelongsToMany(() => Cart, () => CartProduct)\n  private carts: Cart[];\n\n  @BelongsToMany(() => Order, () => OrderProduct)\n  private orders: Order[];\n\n  @BelongsToMany(() => Review, () => ProductReviews)\n  public reviews: Review[];\n\n  getColours(): Colour[] {\n    return this.colours;\n  }\n\n  setColours(colours: Colour[]): Colour[] {\n    this.colours = colours;\n    return this.colours;\n  }\n\n  getCategories(): Category[] {\n    return this.categories;\n  }\n\n  setCategories(categories: Category[]): Category[] {\n    this.categories = categories;\n    return this.categories;\n  }\n\n  getCarts(): Cart[] {\n    return this.carts;\n  }\n\n  getAuthor(): Owner {\n    return this.owner;\n  }\n\n  getOwnerId(): number {\n    return this.ownerId;\n  }\n\n  setOwnerId(ownerId: number): number {\n    this.ownerId = ownerId;\n    return this.ownerId;\n  }\n\n  getAdminId(): number {\n    return this.adminId;\n  }\n\n  setAdminId(adminId: number): number {\n    this.adminId = adminId;\n    return adminId;\n  }\n\n  getOrders(): Order[] {\n    return this.orders;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ProductCategories.html":{"url":"classes/ProductCategories.html","title":"class - ProductCategories","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ProductCategories\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/categories&colours/models/product.categories.model.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    Model\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                categoryId\n                            \n                            \n                                    Public\n                                id\n                            \n                            \n                                    Public\n                                productId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        categoryId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ForeignKey(undefined)@Column({type: undefined, field: 'categoryId'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/categories&colours/models/product.categories.model.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: undefined, unique: true, autoIncrement: true, primaryKey: true, allowNull: false, field: 'id'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/categories&colours/models/product.categories.model.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        productId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ForeignKey(undefined)@Column({type: undefined, field: 'productId'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/categories&colours/models/product.categories.model.ts:35\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  Column,\n  DataType,\n  Table,\n  Model,\n  ForeignKey,\n} from 'sequelize-typescript';\nimport { Product } from '../../product/models/product.model';\nimport { Category } from './category.model';\n\n@Table({ tableName: 'PRODUCT_Categories', createdAt: false, updatedAt: false })\nexport class ProductCategories extends Model {\n  @Column({\n    type: DataType.INTEGER,\n    unique: true,\n    autoIncrement: true,\n    primaryKey: true,\n    allowNull: false,\n    field: 'id',\n  })\n  public id: number;\n\n  @ForeignKey(() => Category)\n  @Column({\n    type: DataType.INTEGER,\n    field: 'categoryId',\n  })\n  public categoryId: number;\n\n  @ForeignKey(() => Product)\n  @Column({\n    type: DataType.INTEGER,\n    field: 'productId',\n  })\n  public productId: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ProductColours.html":{"url":"classes/ProductColours.html","title":"class - ProductColours","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ProductColours\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/categories&colours/models/product.colour.model.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    Model\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                colourId\n                            \n                            \n                                    Public\n                                id\n                            \n                            \n                                    Public\n                                productId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        colourId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ForeignKey(undefined)@Column({type: undefined, field: 'colourId'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/categories&colours/models/product.colour.model.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: undefined, unique: true, autoIncrement: true, primaryKey: true, allowNull: false, field: 'id'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/categories&colours/models/product.colour.model.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        productId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ForeignKey(undefined)@Column({type: undefined, field: 'productId'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/categories&colours/models/product.colour.model.ts:35\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  Column,\n  DataType,\n  Table,\n  Model,\n  ForeignKey,\n} from 'sequelize-typescript';\nimport { Product } from '../../product/models/product.model';\nimport { Colour } from './colours.model';\n\n@Table({ tableName: 'PRODUCT_Colours', createdAt: false, updatedAt: false })\nexport class ProductColours extends Model {\n  @Column({\n    type: DataType.INTEGER,\n    unique: true,\n    autoIncrement: true,\n    primaryKey: true,\n    allowNull: false,\n    field: 'id',\n  })\n  public id: number;\n\n  @ForeignKey(() => Colour)\n  @Column({\n    type: DataType.INTEGER,\n    field: 'colourId',\n  })\n  public colourId: number;\n\n  @ForeignKey(() => Product)\n  @Column({\n    type: DataType.INTEGER,\n    field: 'productId',\n  })\n  public productId: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ProductCreationAttrs.html":{"url":"interfaces/ProductCreationAttrs.html","title":"interface - ProductCreationAttrs","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ProductCreationAttrs\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/interfaces/product.interfaces.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            adminId\n                                        \n                                \n                                \n                                        \n                                            description\n                                        \n                                \n                                \n                                        \n                                            images\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            ownerId\n                                        \n                                \n                                \n                                        \n                                            price\n                                        \n                                \n                                \n                                        \n                                            sizeChartImage\n                                        \n                                \n                                \n                                        \n                                            sizes\n                                        \n                                \n                                \n                                        \n                                            title\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        adminId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        adminId:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        images\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        images:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ownerId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ownerId:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        price\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        price:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sizeChartImage\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        sizeChartImage:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sizes\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        sizes:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface ProductCreationAttrs {\n  title: string;\n  description: string;\n  ownerId?: number;\n  adminId?: number;\n  images: string[];\n  price: number;\n  sizeChartImage: string;\n  sizes: string[];\n}\n\nexport interface ReviewCreationAtrb {\n  name: string;\n  surname: string;\n  review: string;\n}\n\nexport interface ReturnedReview {\n  id: number;\n  name: string;\n  surname: string;\n  review: string;\n  createdAt: any;\n  updatedAt: any;\n}\n\nexport interface CategoryCreationAtrb {\n  ua: string;\n  ru: string;\n  rs: string;\n  en: string;\n}\n\nexport interface ColourCreationAtrb {\n  ua: string;\n  ru: string;\n  rs: string;\n  en: string;\n  hex: string;\n}\n\nexport interface ReturnedProduct {\n  id: number;\n  title: {\n    ua: string;\n    ru: string;\n    rs: string;\n    en: string;\n  };\n  description: {\n    ua: string;\n    ru: string;\n    rs: string;\n    en: string;\n  };\n  price: number;\n  quantity: number;\n  images: string[];\n  sizeChartImage: string;\n  sizes: string[];\n  colours: ReturnedColour[];\n  categories: ReturnedCategory[];\n  reviews: ReturnedReview[] | [];\n}\n\nexport interface ReturnedProducts {\n  products: ReturnedProduct[];\n  totalProducts: number;\n}\n\nexport interface ReturnedCategory {\n  id: number;\n  ua: string;\n  en: string;\n  rs: string;\n  ru: string;\n  createdAt: any;\n  updatedAt: any;\n}\n\nexport interface ReturnedColour {\n  id: number;\n  ua: string;\n  en: string;\n  rs: string;\n  ru: string;\n  hex: string;\n  createdAt: any;\n  updatedAt: any;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ProductMiddleware.html":{"url":"injectables/ProductMiddleware.html","title":"injectable - ProductMiddleware","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ProductMiddleware\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/middlewares/product.middleware.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                use\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        use\n                        \n                    \n                \n            \n            \n                \nuse(req: Request, res: Response, next: NextFunction)\n                \n            \n\n\n            \n                \n                    Defined in src/common/middlewares/product.middleware.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                            NextFunction\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  Injectable,\n  NestMiddleware,\n  Next,\n  Req,\n  Res,\n  Scope,\n} from '@nestjs/common';\nimport { Request, Response, NextFunction } from 'express';\n\n@Injectable({ scope: Scope.REQUEST })\nexport class ProductMiddleware implements NestMiddleware {\n  use(@Req() req: Request, @Res() res: Response, @Next() next: NextFunction) {\n    try {\n      const userAgent = req.headers['user-agent'];\n      res.setHeader('Access-Control-Request-Headers', 'Authorization');\n      res.setHeader(\n        'Access-Control-Request-Method',\n        'POST, GET, PUT, PATCH, DELETE',\n      );\n      res.setHeader('Timing-Allow-Origin', `${process.env.CLIENT_URL.trim()}`);\n      res.setHeader('X-Content-Type-Options', 'nosniff');\n      req['userAgent'] = userAgent;\n      return next();\n    } catch (err: unknown) {\n      return next(err);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ProductModule.html":{"url":"modules/ProductModule.html","title":"module - ProductModule","body":"\n                   \n\n\n\n\n    Modules\n    ProductModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_ProductModule\n\n\n\ncluster_ProductModule_providers\n\n\n\n\nCategoriesService\n\nCategoriesService\n\n\n\nProductModule\n\nProductModule\n\nProductModule -->\n\nCategoriesService->ProductModule\n\n\n\n\n\nColoursService\n\nColoursService\n\nProductModule -->\n\nColoursService->ProductModule\n\n\n\n\n\nFilesService\n\nFilesService\n\nProductModule -->\n\nFilesService->ProductModule\n\n\n\n\n\nProductService\n\nProductService\n\nProductModule -->\n\nProductService->ProductModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/product/product.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            CategoriesService\n                        \n                        \n                            ColoursService\n                        \n                        \n                            FilesService\n                        \n                        \n                            ProductService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            ProductController\n                        \n                    \n                \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        configure\n                        \n                    \n                \n            \n            \n                \nconfigure(consumer: MiddlewareConsumer)\n                \n            \n\n\n            \n                \n                    Defined in src/product/product.module.ts:93\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    consumer\n                                    \n                                            MiddlewareConsumer\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        import {\n  forwardRef,\n  MiddlewareConsumer,\n  Module,\n  NestModule,\n  RequestMethod,\n} from '@nestjs/common';\nimport { ProductService } from './product.service';\nimport { ProductController } from './product.controller';\nimport { SequelizeModule } from '@nestjs/sequelize';\nimport { AdminModule } from '../admin/admin.module';\nimport { Admin } from '../admin/models/admin.model';\nimport { AdminRefreshToken } from '../admin/models/admin.refresh.token.model';\nimport { AuthModule } from '../auth/auth.module';\nimport { Owner } from '../owner/models/owner.model';\nimport { OwnerRefreshToken } from '../owner/models/owner.refresh.token.model';\nimport { OwnerModule } from '../owner/owner.module';\nimport { Role } from '../roles/models/roles.model';\nimport { UserRoles } from '../roles/models/user.roles.model';\nimport { RolesModule } from '../roles/roles.module';\nimport { User } from '../users/models/user.model';\nimport { UserRefreshToken } from '../users/models/user.refresh.token.model';\nimport { UsersModule } from '../users/users.module';\nimport { ConfigModule } from '@nestjs/config';\nimport { Product } from './models/product.model';\nimport { Category } from '../categories&colours/models/category.model';\nimport { ProductCategories } from '../categories&colours/models/product.categories.model';\nimport { CategoriesColoursModule } from '../categories&colours/categories&colours.module';\nimport { CartModule } from '../cart/cart.module';\nimport { CartProduct } from '../cart/models/cart.product.model';\nimport { Cart } from '../cart/models/cart.model';\nimport { Order } from '../orders/models/order.model';\nimport { OrderProduct } from '../orders/models/order.product.model';\nimport { OrdersModule } from '../orders/orders.module';\nimport { InitializeUserMiddleware } from '../common/middlewares/initialize-user.middleware';\nimport { CategoriesService } from '../categories&colours/services/categories.service';\nimport { FilesService } from '../core/services/file.service';\nimport { ProductMiddleware } from '../common/middlewares/product.middleware';\nimport { ProductReviews } from '../reviews/models/product.reviews.model';\nimport { BookmarksProducts } from './models/bookmark.products';\nimport { WatchedProducts } from './models/watched.products.model';\nimport { UserMiddleware } from 'src/common/middlewares/user.middleware';\nimport { HttpModule } from '@nestjs/axios';\nimport { Currencies } from 'src/owner/models/currencies.model';\nimport { ColoursService } from 'src/categories&colours/services/colours.service';\nimport { Colour } from 'src/categories&colours/models/colours.model';\nimport { ProductColours } from 'src/categories&colours/models/product.colour.model';\n\n@Module({\n  providers: [ProductService, FilesService, CategoriesService, ColoursService],\n  controllers: [ProductController],\n  imports: [\n    ConfigModule.forRoot({\n      envFilePath: `.${process.env.NODE_ENV}.env`,\n      expandVariables: true,\n      isGlobal: true,\n    }),\n    HttpModule,\n    SequelizeModule.forFeature([\n      ProductReviews,\n      Product,\n      Order,\n      OrderProduct,\n      Category,\n      ProductCategories,\n      Admin,\n      AdminRefreshToken,\n      Owner,\n      OwnerRefreshToken,\n      User,\n      UserRefreshToken,\n      Role,\n      BookmarksProducts,\n      WatchedProducts,\n      UserRoles,\n      Cart,\n      Colour,\n      ProductColours,\n      CartProduct,\n      Currencies,\n    ]),\n    forwardRef(() => OrdersModule),\n    forwardRef(() => CartModule),\n    forwardRef(() => CategoriesColoursModule),\n    forwardRef(() => AdminModule),\n    forwardRef(() => RolesModule),\n    forwardRef(() => AuthModule),\n    forwardRef(() => OwnerModule),\n    forwardRef(() => UsersModule),\n  ],\n})\nexport class ProductModule implements NestModule {\n  configure(consumer: MiddlewareConsumer) {\n    consumer.apply(ProductMiddleware).forRoutes({\n      path: '*',\n      method: RequestMethod.ALL,\n    });\n    consumer\n      .apply(UserMiddleware, InitializeUserMiddleware)\n      .forRoutes(\n        { path: 'product/addBookmark', method: RequestMethod.POST },\n        { path: 'product/addWatchedProduct', method: RequestMethod.POST },\n        { path: 'product/watchedProducts', method: RequestMethod.GET },\n        { path: 'product/bookmarkProducts', method: RequestMethod.GET },\n      );\n    consumer\n      .apply(InitializeUserMiddleware)\n      .forRoutes(\n        { path: 'product/create_product', method: RequestMethod.PUT },\n        { path: '*', method: RequestMethod.PATCH },\n        { path: '*', method: RequestMethod.DELETE },\n        { path: 'product/delete_image', method: RequestMethod.DELETE },\n      );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ProductReviews.html":{"url":"classes/ProductReviews.html","title":"class - ProductReviews","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ProductReviews\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/reviews/models/product.reviews.model.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    Model\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                id\n                            \n                            \n                                    Public\n                                productId\n                            \n                            \n                                    Public\n                                reviewId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: undefined, unique: true, autoIncrement: true, primaryKey: true, allowNull: false, field: 'id'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/reviews/models/product.reviews.model.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        productId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ForeignKey(undefined)@Column({type: undefined, field: 'productId'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/reviews/models/product.reviews.model.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        reviewId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ForeignKey(undefined)@Column({type: undefined, field: 'reviewId'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/reviews/models/product.reviews.model.ts:28\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  Column,\n  DataType,\n  Table,\n  Model,\n  ForeignKey,\n} from 'sequelize-typescript';\nimport { Product } from '../../product/models/product.model';\nimport { Review } from './review.model';\n\n@Table({ tableName: 'PRODUCT_Reviews', createdAt: false, updatedAt: false })\nexport class ProductReviews extends Model {\n  @Column({\n    type: DataType.INTEGER,\n    unique: true,\n    autoIncrement: true,\n    primaryKey: true,\n    allowNull: false,\n    field: 'id',\n  })\n  public id: number;\n\n  @ForeignKey(() => Review)\n  @Column({\n    type: DataType.INTEGER,\n    field: 'reviewId',\n  })\n  public reviewId: number;\n\n  @ForeignKey(() => Product)\n  @Column({\n    type: DataType.INTEGER,\n    field: 'productId',\n  })\n  public productId: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/QueryFilterDto.html":{"url":"classes/QueryFilterDto.html","title":"class - QueryFilterDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  QueryFilterDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/product/dto/query-filter.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                    Optional\n                                order\n                            \n                            \n                                    Readonly\n                                page\n                            \n                            \n                                    Readonly\n                                pageSize\n                            \n                            \n                                    Readonly\n                                    Optional\n                                sizes\n                            \n                            \n                                \n                            \n                            \n                                \n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                            Optional\n                        order\n                        \n                    \n                \n            \n                \n                    \n                        Type :     \"ASC\" | \"DESC\" | undefined\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/product/dto/query-filter.dto.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        page\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsDefined()@Type(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/product/dto/query-filter.dto.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        pageSize\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 5\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsDefined()@Type(undefined)@IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/product/dto/query-filter.dto.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                            Optional\n                        sizes\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[] | undefined\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@Type(undefined)@IsString({each: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/product/dto/query-filter.dto.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                    \n                \n            \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@Type(undefined, readonly, undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/product/dto/query-filter.dto.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                    \n                \n            \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@Type(undefined, readonly, undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/product/dto/query-filter.dto.ts:29\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Type } from 'class-transformer';\nimport { IsDefined, IsNumber, IsOptional, IsString } from 'class-validator';\n\nexport class QueryFilterDto {\n  @IsDefined()\n  @Type(() => Number)\n  readonly page: number = 1;\n\n  @IsDefined()\n  @Type(() => Number)\n  @IsNumber()\n  readonly pageSize: number = 5;\n\n  @IsOptional()\n  @IsString()\n  readonly order?: 'ASC' | 'DESC' | undefined;\n\n  @IsOptional()\n  @Type(() => Array)\n  @IsString({ each: true })\n  readonly sizes?: string[] | undefined;\n\n  @IsOptional()\n  @Type(() => Array)\n  readonly colours?: number[] | undefined;\n\n  @IsOptional()\n  @Type(() => Array)\n  readonly categories?: number[] | undefined;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/RefreshAuthGuard.html":{"url":"guards/RefreshAuthGuard.html","title":"guard - RefreshAuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    RefreshAuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/common/guards/refresh.guard.ts\n            \n\n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/common/guards/refresh.guard.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate(context: ExecutionContext)\n                \n            \n\n\n            \n                \n                    Defined in src/common/guards/refresh.guard.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                            ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     boolean | Promise | Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import {\n  CanActivate,\n  ExecutionContext,\n  HttpStatus,\n  Injectable,\n} from '@nestjs/common';\nimport { Observable } from 'rxjs';\nimport {\n  ACCESS_TOKEN_NOT_PROVIDED,\n  INVALID_HEADER,\n} from '../../auth/auth.constants';\nimport { AuthService } from '../../auth/auth.service';\nimport { ApiException } from '../exceptions/api.exception';\n\n@Injectable()\nexport class RefreshAuthGuard implements CanActivate {\n  constructor(private authService: AuthService) {}\n\n  canActivate(\n    context: ExecutionContext,\n  ): boolean | Promise | Observable {\n    const req = context.switchToHttp().getRequest();\n    const authHeader = req.headers.authorization;\n    if (!authHeader) {\n      throw new ApiException(\n        HttpStatus.BAD_REQUEST,\n        'Bad request!',\n        INVALID_HEADER,\n      );\n    }\n    const bearer = authHeader.split(' ')[0];\n    const accessToken = authHeader.split(' ')[1];\n    if (bearer !== 'Bearer' || !accessToken) {\n      throw new ApiException(\n        HttpStatus.UNAUTHORIZED,\n        'Unathorized!',\n        ACCESS_TOKEN_NOT_PROVIDED,\n      );\n    }\n    return true;\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/RequestHeaders.html":{"url":"interfaces/RequestHeaders.html","title":"interface - RequestHeaders","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  RequestHeaders\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/middlewares/cors.middleware.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            Accept\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            Connection\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            Host\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [key: string]:        string\n\n                    \n                \n                        \n                            \n                                Defined in src/core/middlewares/cors.middleware.ts:17\n                            \n                        \n            \n        \n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        Accept\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        Accept:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Connection\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        Connection:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Host\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        Host:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {\n  BadRequestException,\n  Injectable,\n  Logger,\n  NestMiddleware,\n  Next,\n  Req,\n  Res,\n  Scope,\n} from '@nestjs/common';\nimport { Request, Response, NextFunction } from 'express';\nimport geoip from 'geoip-lite';\nimport IP from 'ip';\ninterface RequestHeaders {\n  Accept?: string;\n  Host?: string;\n  Connection?: string;\n  [key: string]: string;\n}\n\n@Injectable({ scope: Scope.REQUEST })\nexport class CorsMiddleware implements NestMiddleware {\n  readonly Logger = new Logger(CorsMiddleware.name);\n  use(@Req() req: Request, @Res() res: Response, @Next() next: NextFunction) {\n    const headers: RequestHeaders = JSON.parse(JSON.stringify(req.headers));\n    const isEmpty = this.isEmpty(headers);\n    const geo = geoip.reloadDataSync();\n    const ipAddress = IP.address();\n    this.Logger.log(geo);\n    this.Logger.log(ipAddress);\n    this.Logger.log(req.headers['x-forwarded-for']);\n    if (isEmpty) {\n      throw new BadRequestException({\n        message: 'No request headers were provided!',\n      });\n    }\n    res.setHeader(\n      'Access-Control-Allow-Origin',\n      `${process.env.CLIENT_URL.toString().trim()}`,\n    );\n    res.setHeader(\n      'Access-Control-Allow-Methods',\n      'OPTIONS, GET, POST, PUT, PATCH, DELETE',\n    );\n    res.setHeader('Access-Control-Allow-Credentials', 'true');\n    res.header(\n      'Access-Control-Allow-Headers',\n      'imageType, Authorization, X-Requested-With, X-HTTP-Method-Override, Content-Type, Accept',\n    );\n    res.setHeader('X-Frame-Options', 'deny');\n    res.setHeader(\n      'Cache-Control',\n      'no-store, no-cache, must-revalidate, max-age=0, s-maxage=0',\n    );\n    res.setHeader('Expires', '0');\n    res.setHeader('Strict-Transport-Security', 'max-age=5184000,preload');\n    res.setHeader(\n      'Content-Security-Policy',\n      `default-src 'self'; font-src 'self'; img-src 'self'; script-src 'self'; style-src 'self'; frame-src 'self'`,\n    );\n    res.setHeader(\n      'X-Content-Security-Policy',\n      `default-src 'self'; script-src 'self'; object-src 'self'; style-src 'self'; img - src 'self' data:; media - src 'self'; frame - src 'self'; font - src 'self'; connect - src 'self'`,\n    );\n    res.setHeader('X-Permitted-Cross-Domain-Policies', 'none');\n    res.setHeader('X-DNS-Prefetch-Control', 'off');\n    res.setHeader('X-XSS-Protection', '1; mode=block');\n    res.setHeader(\n      'X-WebKit-CSP',\n      `default-src 'self'; script-src 'self'; object-src 'self'; style-src 'self'; img-src 'self' data:; media-src 'self'; frame-src 'self'; font-src 'self'; connect-src 'self'`,\n    );\n    res.removeHeader('server');\n    res.removeHeader('X-Powered-By');\n    res.setHeader('X-XSS-Protection', '1; mode=block');\n    if (req.method === 'OPTIONS') {\n      return res.status(204).end();\n    }\n    return next();\n  }\n\n  private isEmpty(object: RequestHeaders): boolean {\n    for (const prop in object) {\n      if (Object.prototype.hasOwnProperty.call(object, prop)) {\n        return false;\n      }\n    }\n    return JSON.stringify(object) === JSON.stringify({});\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RequestValidator.html":{"url":"classes/RequestValidator.html","title":"class - RequestValidator","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RequestValidator\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/pipes/body-validator.pipe.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        validate\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/common/pipes/body-validator.pipe.ts:6\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Request, Response, NextFunction } from 'express';\nimport { ClassConstructor, plainToInstance } from 'class-transformer';\nimport { validate } from 'class-validator';\nimport { BadRequestError } from '../exceptions/validate-dto.exception.error';\nexport default class RequestValidator {\n  static validate = (classInstance: ClassConstructor) => {\n    return async (req: Request, res: Response, next: NextFunction) => {\n      const convertedObject = plainToInstance(classInstance, req.body);\n      await validate(convertedObject).then((errors) => {\n        if (errors.length > 0) {\n          let rawErrors: string[] = [];\n          for (const errorItem of errors) {\n            rawErrors = rawErrors.concat(\n              ...rawErrors,\n              Object.values(errorItem.constraints ?? []),\n            );\n          }\n          const validationErrorText = 'Request validation failed!';\n          console.log('error found!', rawErrors);\n          throw new BadRequestError(validationErrorText, rawErrors);\n        }\n      });\n      res.setHeader('Passed-validation', 'true');\n      next();\n    };\n    // tslint:disable-next-line: semicolon\n  };\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ResetDto.html":{"url":"classes/ResetDto.html","title":"class - ResetDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ResetDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/dto/reset.password.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                code\n                            \n                            \n                                    Readonly\n                                confirmPassword\n                            \n                            \n                                    Readonly\n                                email\n                            \n                            \n                                    Readonly\n                                password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        code\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: '46756868', description: 'user`s code'})@MinLength(8)@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/reset.password.dto.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        confirmPassword\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'etrhg45ty5yeewt4t4665y', description: 'user`s confirm password'})@IsString()@Matches(/^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{8,}$/, {message: PASSWORD_VALIDATION})@Match('password')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/reset.password.dto.ts:48\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'user@gmail.com', description: 'user`s email'})@IsString()@IsEmail()@Matches(/^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/, {message: EMAIL_VALIDATION})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/reset.password.dto.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'etrhg45ty5yeewt4t4665y', description: 'user`s password'})@IsString()@Matches(/^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{8,}$/, {message: PASSWORD_VALIDATION})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/reset.password.dto.ts:34\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsEmail, IsString, Matches, MinLength } from 'class-validator';\nimport { Match } from '../../common/decorators/match.decorator';\nimport { EMAIL_VALIDATION, PASSWORD_VALIDATION } from '../auth.constants';\n\nexport class ResetDto {\n  @ApiProperty({ example: 'user@gmail.com', description: 'user`s email' })\n  @IsString()\n  @IsEmail()\n  @Matches(\n    /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/,\n    {\n      message: EMAIL_VALIDATION,\n    },\n  )\n  readonly email: string;\n\n  @ApiProperty({ example: '46756868', description: 'user`s code' })\n  @MinLength(8)\n  @IsString()\n  readonly code: string;\n\n  @ApiProperty({\n    example: 'etrhg45ty5yeewt4t4665y',\n    description: 'user`s password',\n  })\n  @IsString()\n  @Matches(\n    /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{8,}$/,\n    {\n      message: PASSWORD_VALIDATION,\n    },\n  )\n  readonly password: string;\n\n  @ApiProperty({\n    example: 'etrhg45ty5yeewt4t4665y',\n    description: 'user`s confirm password',\n  })\n  @IsString()\n  @Matches(\n    /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{8,}$/,\n    {\n      message: PASSWORD_VALIDATION,\n    },\n  )\n  @Match('password')\n  readonly confirmPassword: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ReturnedAdmin.html":{"url":"interfaces/ReturnedAdmin.html","title":"interface - ReturnedAdmin","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ReturnedAdmin\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/interfaces/auth.interfaces.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            phoneNumber\n                                        \n                                \n                                \n                                        \n                                            surname\n                                        \n                                \n                                \n                                        \n                                            type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        phoneNumber\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        phoneNumber:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        surname\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        surname:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Role } from '../../roles/models/roles.model';\nexport interface Payload {\n  email: string;\n  userId: number;\n  userActivationLink: string;\n  isUserActivated: boolean;\n  roles?: Role[];\n}\n\nexport interface Tokens {\n  refreshToken: string;\n  accessToken: string;\n  expireDate: Date;\n}\n\nexport interface AuthUser {\n  accessToken: string;\n  user: ReturnedUser | ReturnedAdmin | ReturnedOwner;\n}\n\nexport interface ReturnedUser {\n  id: number;\n  name: string;\n  surname: string;\n  phoneNumber: string;\n  email: string;\n  country: string | null;\n  city: string | null;\n  postOffice: string | null;\n  type: 'USER';\n}\n\nexport interface ReturnedOwner {\n  id: number;\n  name: string;\n  surname: string;\n  phoneNumber: string;\n  email: string;\n  type: 'OWNER';\n}\n\nexport interface ReturnedAdmin {\n  id: number;\n  name: string;\n  surname: string;\n  phoneNumber: string;\n  email: string;\n  type: 'ADMIN';\n}\n\nexport interface CodeDto {\n  type: 'OWNER' | 'ADMIN' | null;\n  email: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ReturnedCategory.html":{"url":"interfaces/ReturnedCategory.html","title":"interface - ReturnedCategory","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ReturnedCategory\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/interfaces/product.interfaces.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            createdAt\n                                        \n                                \n                                \n                                        \n                                            en\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            rs\n                                        \n                                \n                                \n                                        \n                                            ru\n                                        \n                                \n                                \n                                        \n                                            ua\n                                        \n                                \n                                \n                                        \n                                            updatedAt\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        createdAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        createdAt:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        en\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        en:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        rs\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        rs:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ru\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ru:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ua\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ua:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        updatedAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        updatedAt:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface ProductCreationAttrs {\n  title: string;\n  description: string;\n  ownerId?: number;\n  adminId?: number;\n  images: string[];\n  price: number;\n  sizeChartImage: string;\n  sizes: string[];\n}\n\nexport interface ReviewCreationAtrb {\n  name: string;\n  surname: string;\n  review: string;\n}\n\nexport interface ReturnedReview {\n  id: number;\n  name: string;\n  surname: string;\n  review: string;\n  createdAt: any;\n  updatedAt: any;\n}\n\nexport interface CategoryCreationAtrb {\n  ua: string;\n  ru: string;\n  rs: string;\n  en: string;\n}\n\nexport interface ColourCreationAtrb {\n  ua: string;\n  ru: string;\n  rs: string;\n  en: string;\n  hex: string;\n}\n\nexport interface ReturnedProduct {\n  id: number;\n  title: {\n    ua: string;\n    ru: string;\n    rs: string;\n    en: string;\n  };\n  description: {\n    ua: string;\n    ru: string;\n    rs: string;\n    en: string;\n  };\n  price: number;\n  quantity: number;\n  images: string[];\n  sizeChartImage: string;\n  sizes: string[];\n  colours: ReturnedColour[];\n  categories: ReturnedCategory[];\n  reviews: ReturnedReview[] | [];\n}\n\nexport interface ReturnedProducts {\n  products: ReturnedProduct[];\n  totalProducts: number;\n}\n\nexport interface ReturnedCategory {\n  id: number;\n  ua: string;\n  en: string;\n  rs: string;\n  ru: string;\n  createdAt: any;\n  updatedAt: any;\n}\n\nexport interface ReturnedColour {\n  id: number;\n  ua: string;\n  en: string;\n  rs: string;\n  ru: string;\n  hex: string;\n  createdAt: any;\n  updatedAt: any;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ReturnedColour.html":{"url":"interfaces/ReturnedColour.html","title":"interface - ReturnedColour","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ReturnedColour\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/interfaces/product.interfaces.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            createdAt\n                                        \n                                \n                                \n                                        \n                                            en\n                                        \n                                \n                                \n                                        \n                                            hex\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            rs\n                                        \n                                \n                                \n                                        \n                                            ru\n                                        \n                                \n                                \n                                        \n                                            ua\n                                        \n                                \n                                \n                                        \n                                            updatedAt\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        createdAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        createdAt:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        en\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        en:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        hex\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        hex:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        rs\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        rs:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ru\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ru:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ua\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ua:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        updatedAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        updatedAt:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface ProductCreationAttrs {\n  title: string;\n  description: string;\n  ownerId?: number;\n  adminId?: number;\n  images: string[];\n  price: number;\n  sizeChartImage: string;\n  sizes: string[];\n}\n\nexport interface ReviewCreationAtrb {\n  name: string;\n  surname: string;\n  review: string;\n}\n\nexport interface ReturnedReview {\n  id: number;\n  name: string;\n  surname: string;\n  review: string;\n  createdAt: any;\n  updatedAt: any;\n}\n\nexport interface CategoryCreationAtrb {\n  ua: string;\n  ru: string;\n  rs: string;\n  en: string;\n}\n\nexport interface ColourCreationAtrb {\n  ua: string;\n  ru: string;\n  rs: string;\n  en: string;\n  hex: string;\n}\n\nexport interface ReturnedProduct {\n  id: number;\n  title: {\n    ua: string;\n    ru: string;\n    rs: string;\n    en: string;\n  };\n  description: {\n    ua: string;\n    ru: string;\n    rs: string;\n    en: string;\n  };\n  price: number;\n  quantity: number;\n  images: string[];\n  sizeChartImage: string;\n  sizes: string[];\n  colours: ReturnedColour[];\n  categories: ReturnedCategory[];\n  reviews: ReturnedReview[] | [];\n}\n\nexport interface ReturnedProducts {\n  products: ReturnedProduct[];\n  totalProducts: number;\n}\n\nexport interface ReturnedCategory {\n  id: number;\n  ua: string;\n  en: string;\n  rs: string;\n  ru: string;\n  createdAt: any;\n  updatedAt: any;\n}\n\nexport interface ReturnedColour {\n  id: number;\n  ua: string;\n  en: string;\n  rs: string;\n  ru: string;\n  hex: string;\n  createdAt: any;\n  updatedAt: any;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ReturnedOwner.html":{"url":"interfaces/ReturnedOwner.html","title":"interface - ReturnedOwner","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ReturnedOwner\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/interfaces/auth.interfaces.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            phoneNumber\n                                        \n                                \n                                \n                                        \n                                            surname\n                                        \n                                \n                                \n                                        \n                                            type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        phoneNumber\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        phoneNumber:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        surname\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        surname:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Role } from '../../roles/models/roles.model';\nexport interface Payload {\n  email: string;\n  userId: number;\n  userActivationLink: string;\n  isUserActivated: boolean;\n  roles?: Role[];\n}\n\nexport interface Tokens {\n  refreshToken: string;\n  accessToken: string;\n  expireDate: Date;\n}\n\nexport interface AuthUser {\n  accessToken: string;\n  user: ReturnedUser | ReturnedAdmin | ReturnedOwner;\n}\n\nexport interface ReturnedUser {\n  id: number;\n  name: string;\n  surname: string;\n  phoneNumber: string;\n  email: string;\n  country: string | null;\n  city: string | null;\n  postOffice: string | null;\n  type: 'USER';\n}\n\nexport interface ReturnedOwner {\n  id: number;\n  name: string;\n  surname: string;\n  phoneNumber: string;\n  email: string;\n  type: 'OWNER';\n}\n\nexport interface ReturnedAdmin {\n  id: number;\n  name: string;\n  surname: string;\n  phoneNumber: string;\n  email: string;\n  type: 'ADMIN';\n}\n\nexport interface CodeDto {\n  type: 'OWNER' | 'ADMIN' | null;\n  email: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ReturnedProduct.html":{"url":"interfaces/ReturnedProduct.html","title":"interface - ReturnedProduct","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ReturnedProduct\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/interfaces/product.interfaces.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            categories\n                                        \n                                \n                                \n                                        \n                                            colours\n                                        \n                                \n                                \n                                        \n                                            description\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            images\n                                        \n                                \n                                \n                                        \n                                            price\n                                        \n                                \n                                \n                                        \n                                            quantity\n                                        \n                                \n                                \n                                        \n                                            reviews\n                                        \n                                \n                                \n                                        \n                                            sizeChartImage\n                                        \n                                \n                                \n                                        \n                                            sizes\n                                        \n                                \n                                \n                                        \n                                            title\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        categories\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        categories:         ReturnedCategory[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ReturnedCategory[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        colours\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        colours:         ReturnedColour[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ReturnedColour[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        description:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        images\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        images:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        price\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        price:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        quantity\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        quantity:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        reviews\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        reviews:         ReturnedReview[] | \n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ReturnedReview[] | \n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sizeChartImage\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        sizeChartImage:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sizes\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        sizes:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        title:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface ProductCreationAttrs {\n  title: string;\n  description: string;\n  ownerId?: number;\n  adminId?: number;\n  images: string[];\n  price: number;\n  sizeChartImage: string;\n  sizes: string[];\n}\n\nexport interface ReviewCreationAtrb {\n  name: string;\n  surname: string;\n  review: string;\n}\n\nexport interface ReturnedReview {\n  id: number;\n  name: string;\n  surname: string;\n  review: string;\n  createdAt: any;\n  updatedAt: any;\n}\n\nexport interface CategoryCreationAtrb {\n  ua: string;\n  ru: string;\n  rs: string;\n  en: string;\n}\n\nexport interface ColourCreationAtrb {\n  ua: string;\n  ru: string;\n  rs: string;\n  en: string;\n  hex: string;\n}\n\nexport interface ReturnedProduct {\n  id: number;\n  title: {\n    ua: string;\n    ru: string;\n    rs: string;\n    en: string;\n  };\n  description: {\n    ua: string;\n    ru: string;\n    rs: string;\n    en: string;\n  };\n  price: number;\n  quantity: number;\n  images: string[];\n  sizeChartImage: string;\n  sizes: string[];\n  colours: ReturnedColour[];\n  categories: ReturnedCategory[];\n  reviews: ReturnedReview[] | [];\n}\n\nexport interface ReturnedProducts {\n  products: ReturnedProduct[];\n  totalProducts: number;\n}\n\nexport interface ReturnedCategory {\n  id: number;\n  ua: string;\n  en: string;\n  rs: string;\n  ru: string;\n  createdAt: any;\n  updatedAt: any;\n}\n\nexport interface ReturnedColour {\n  id: number;\n  ua: string;\n  en: string;\n  rs: string;\n  ru: string;\n  hex: string;\n  createdAt: any;\n  updatedAt: any;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ReturnedProducts.html":{"url":"interfaces/ReturnedProducts.html","title":"interface - ReturnedProducts","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ReturnedProducts\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/interfaces/product.interfaces.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            products\n                                        \n                                \n                                \n                                        \n                                            totalProducts\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        products\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        products:         ReturnedProduct[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ReturnedProduct[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        totalProducts\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        totalProducts:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface ProductCreationAttrs {\n  title: string;\n  description: string;\n  ownerId?: number;\n  adminId?: number;\n  images: string[];\n  price: number;\n  sizeChartImage: string;\n  sizes: string[];\n}\n\nexport interface ReviewCreationAtrb {\n  name: string;\n  surname: string;\n  review: string;\n}\n\nexport interface ReturnedReview {\n  id: number;\n  name: string;\n  surname: string;\n  review: string;\n  createdAt: any;\n  updatedAt: any;\n}\n\nexport interface CategoryCreationAtrb {\n  ua: string;\n  ru: string;\n  rs: string;\n  en: string;\n}\n\nexport interface ColourCreationAtrb {\n  ua: string;\n  ru: string;\n  rs: string;\n  en: string;\n  hex: string;\n}\n\nexport interface ReturnedProduct {\n  id: number;\n  title: {\n    ua: string;\n    ru: string;\n    rs: string;\n    en: string;\n  };\n  description: {\n    ua: string;\n    ru: string;\n    rs: string;\n    en: string;\n  };\n  price: number;\n  quantity: number;\n  images: string[];\n  sizeChartImage: string;\n  sizes: string[];\n  colours: ReturnedColour[];\n  categories: ReturnedCategory[];\n  reviews: ReturnedReview[] | [];\n}\n\nexport interface ReturnedProducts {\n  products: ReturnedProduct[];\n  totalProducts: number;\n}\n\nexport interface ReturnedCategory {\n  id: number;\n  ua: string;\n  en: string;\n  rs: string;\n  ru: string;\n  createdAt: any;\n  updatedAt: any;\n}\n\nexport interface ReturnedColour {\n  id: number;\n  ua: string;\n  en: string;\n  rs: string;\n  ru: string;\n  hex: string;\n  createdAt: any;\n  updatedAt: any;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ReturnedReview.html":{"url":"interfaces/ReturnedReview.html","title":"interface - ReturnedReview","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ReturnedReview\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/interfaces/product.interfaces.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            createdAt\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            review\n                                        \n                                \n                                \n                                        \n                                            surname\n                                        \n                                \n                                \n                                        \n                                            updatedAt\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        createdAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        createdAt:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        review\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        review:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        surname\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        surname:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        updatedAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        updatedAt:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface ProductCreationAttrs {\n  title: string;\n  description: string;\n  ownerId?: number;\n  adminId?: number;\n  images: string[];\n  price: number;\n  sizeChartImage: string;\n  sizes: string[];\n}\n\nexport interface ReviewCreationAtrb {\n  name: string;\n  surname: string;\n  review: string;\n}\n\nexport interface ReturnedReview {\n  id: number;\n  name: string;\n  surname: string;\n  review: string;\n  createdAt: any;\n  updatedAt: any;\n}\n\nexport interface CategoryCreationAtrb {\n  ua: string;\n  ru: string;\n  rs: string;\n  en: string;\n}\n\nexport interface ColourCreationAtrb {\n  ua: string;\n  ru: string;\n  rs: string;\n  en: string;\n  hex: string;\n}\n\nexport interface ReturnedProduct {\n  id: number;\n  title: {\n    ua: string;\n    ru: string;\n    rs: string;\n    en: string;\n  };\n  description: {\n    ua: string;\n    ru: string;\n    rs: string;\n    en: string;\n  };\n  price: number;\n  quantity: number;\n  images: string[];\n  sizeChartImage: string;\n  sizes: string[];\n  colours: ReturnedColour[];\n  categories: ReturnedCategory[];\n  reviews: ReturnedReview[] | [];\n}\n\nexport interface ReturnedProducts {\n  products: ReturnedProduct[];\n  totalProducts: number;\n}\n\nexport interface ReturnedCategory {\n  id: number;\n  ua: string;\n  en: string;\n  rs: string;\n  ru: string;\n  createdAt: any;\n  updatedAt: any;\n}\n\nexport interface ReturnedColour {\n  id: number;\n  ua: string;\n  en: string;\n  rs: string;\n  ru: string;\n  hex: string;\n  createdAt: any;\n  updatedAt: any;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ReturnedUser.html":{"url":"interfaces/ReturnedUser.html","title":"interface - ReturnedUser","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ReturnedUser\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/interfaces/auth.interfaces.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            city\n                                        \n                                \n                                \n                                        \n                                            country\n                                        \n                                \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            phoneNumber\n                                        \n                                \n                                \n                                        \n                                            postOffice\n                                        \n                                \n                                \n                                        \n                                            surname\n                                        \n                                \n                                \n                                        \n                                            type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        city\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        city:     string | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        country\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        country:     string | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        phoneNumber\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        phoneNumber:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        postOffice\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        postOffice:     string | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        surname\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        surname:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Role } from '../../roles/models/roles.model';\nexport interface Payload {\n  email: string;\n  userId: number;\n  userActivationLink: string;\n  isUserActivated: boolean;\n  roles?: Role[];\n}\n\nexport interface Tokens {\n  refreshToken: string;\n  accessToken: string;\n  expireDate: Date;\n}\n\nexport interface AuthUser {\n  accessToken: string;\n  user: ReturnedUser | ReturnedAdmin | ReturnedOwner;\n}\n\nexport interface ReturnedUser {\n  id: number;\n  name: string;\n  surname: string;\n  phoneNumber: string;\n  email: string;\n  country: string | null;\n  city: string | null;\n  postOffice: string | null;\n  type: 'USER';\n}\n\nexport interface ReturnedOwner {\n  id: number;\n  name: string;\n  surname: string;\n  phoneNumber: string;\n  email: string;\n  type: 'OWNER';\n}\n\nexport interface ReturnedAdmin {\n  id: number;\n  name: string;\n  surname: string;\n  phoneNumber: string;\n  email: string;\n  type: 'ADMIN';\n}\n\nexport interface CodeDto {\n  type: 'OWNER' | 'ADMIN' | null;\n  email: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Review.html":{"url":"classes/Review.html","title":"class - Review","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Review\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/reviews/models/review.model.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    Model\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                id\n                            \n                            \n                                    Public\n                                name\n                            \n                            \n                                    Public\n                                product\n                            \n                            \n                                    Public\n                                productId\n                            \n                            \n                                    Public\n                                review\n                            \n                            \n                                    Public\n                                surname\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: undefined, unique: true, autoIncrement: true, primaryKey: true, field: 'id'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/reviews/models/review.model.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: undefined, unique: false, field: 'name'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/reviews/models/review.model.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        product\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Product\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @BelongsToMany(undefined, undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/reviews/models/review.model.ts:53\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        productId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ForeignKey(undefined)@Column({type: undefined, field: 'productId'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/reviews/models/review.model.ts:50\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        review\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: undefined, unique: false, field: 'review'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/reviews/models/review.model.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        surname\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: undefined, unique: false, field: 'surname'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/reviews/models/review.model.ts:36\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  Column,\n  DataType,\n  Table,\n  Model,\n  ForeignKey,\n  BelongsToMany,\n} from 'sequelize-typescript';\nimport { ReviewCreationAtrb } from '../../core/interfaces/product.interfaces';\nimport { Product } from '../../product/models/product.model';\nimport { ProductReviews } from './product.reviews.model';\n\n@Table({ tableName: 'REVIEWS' })\nexport class Review extends Model {\n  @Column({\n    type: DataType.INTEGER,\n    unique: true,\n    autoIncrement: true,\n    primaryKey: true,\n    field: 'id',\n  })\n  public id: number;\n\n  @Column({\n    type: DataType.STRING,\n    unique: false,\n    field: 'name',\n  })\n  public name: string;\n\n  @Column({\n    type: DataType.STRING,\n    unique: false,\n    field: 'surname',\n  })\n  public surname: string;\n\n  @Column({\n    type: DataType.STRING,\n    unique: false,\n    field: 'review',\n  })\n  public review: string;\n\n  @ForeignKey(() => Product)\n  @Column({\n    type: DataType.INTEGER,\n    field: 'productId',\n  })\n  public productId: number;\n\n  @BelongsToMany(() => Product, () => ProductReviews)\n  public product: Product;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ReviewCreationAtrb.html":{"url":"interfaces/ReviewCreationAtrb.html","title":"interface - ReviewCreationAtrb","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ReviewCreationAtrb\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/interfaces/product.interfaces.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            review\n                                        \n                                \n                                \n                                        \n                                            surname\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        review\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        review:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        surname\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        surname:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface ProductCreationAttrs {\n  title: string;\n  description: string;\n  ownerId?: number;\n  adminId?: number;\n  images: string[];\n  price: number;\n  sizeChartImage: string;\n  sizes: string[];\n}\n\nexport interface ReviewCreationAtrb {\n  name: string;\n  surname: string;\n  review: string;\n}\n\nexport interface ReturnedReview {\n  id: number;\n  name: string;\n  surname: string;\n  review: string;\n  createdAt: any;\n  updatedAt: any;\n}\n\nexport interface CategoryCreationAtrb {\n  ua: string;\n  ru: string;\n  rs: string;\n  en: string;\n}\n\nexport interface ColourCreationAtrb {\n  ua: string;\n  ru: string;\n  rs: string;\n  en: string;\n  hex: string;\n}\n\nexport interface ReturnedProduct {\n  id: number;\n  title: {\n    ua: string;\n    ru: string;\n    rs: string;\n    en: string;\n  };\n  description: {\n    ua: string;\n    ru: string;\n    rs: string;\n    en: string;\n  };\n  price: number;\n  quantity: number;\n  images: string[];\n  sizeChartImage: string;\n  sizes: string[];\n  colours: ReturnedColour[];\n  categories: ReturnedCategory[];\n  reviews: ReturnedReview[] | [];\n}\n\nexport interface ReturnedProducts {\n  products: ReturnedProduct[];\n  totalProducts: number;\n}\n\nexport interface ReturnedCategory {\n  id: number;\n  ua: string;\n  en: string;\n  rs: string;\n  ru: string;\n  createdAt: any;\n  updatedAt: any;\n}\n\nexport interface ReturnedColour {\n  id: number;\n  ua: string;\n  en: string;\n  rs: string;\n  ru: string;\n  hex: string;\n  createdAt: any;\n  updatedAt: any;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/ReviewsController.html":{"url":"controllers/ReviewsController.html","title":"controller - ReviewsController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  ReviewsController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/reviews/reviews.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                reviews\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createReview\n                            \n                            \n                                deleteReview\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        createReview\n                        \n                    \n                \n            \n            \n                \ncreateReview(createReviewDto: CreateReviewDto, productId: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Throttle(70, 700)@Put('create_review')\n                \n            \n\n            \n                \n                    Defined in src/reviews/reviews.controller.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createReviewDto\n                                    \n                                                CreateReviewDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    productId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteReview\n                        \n                    \n                \n            \n            \n                \ndeleteReview(reviewId: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Throttle(70, 700)@Delete('delete_review')@Roles('OWNER', 'ADMIN')@UseGuards(JwtAuthGuard, RolesGuard, OwnerAdminGuard, AuthFerfershGuard, EditContentGuard)@HttpCode(201)\n                \n            \n\n            \n                \n                    Defined in src/reviews/reviews.controller.ts:59\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    reviewId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Body,\n  CacheInterceptor,\n  ClassSerializerInterceptor,\n  Controller,\n  Delete,\n  HttpCode,\n  ParseIntPipe,\n  Put,\n  Query,\n  UseFilters,\n  UseGuards,\n  UseInterceptors,\n} from '@nestjs/common';\nimport { Throttle } from '@nestjs/throttler';\nimport { Roles } from '../common/decorators/roles-auth.decorator';\nimport { AuthFerfershGuard } from '../common/guards/jw-refresh.guard';\nimport { JwtAuthGuard } from '../common/guards/jwt-auth.guard';\nimport { OwnerAdminGuard } from '../common/guards/owner-admin.guard';\nimport { RolesGuard } from '../common/guards/roles.guard';\nimport { ApiExceptionFilter } from '../common/filters/api-exception.filter';\nimport { ApiErrorExceptionFilter } from '../common/filters/error-handler.filter';\nimport { ThrottlerBehindProxyGuard } from '../common/guards/throttler-behind-proxy.guard';\nimport { CreateReviewDto } from './create.review.dto';\nimport { ReviewsService } from './reviews.service';\nimport { EditContentGuard } from '../common/guards/edit-content.guard';\n\n@UseGuards(ThrottlerBehindProxyGuard)\n@UseFilters(ApiErrorExceptionFilter, ApiExceptionFilter)\n@UseInterceptors(CacheInterceptor, ClassSerializerInterceptor)\n@Controller('reviews')\nexport class ReviewsController {\n  constructor(private readonly reviewsService: ReviewsService) {}\n\n  @Throttle(70, 700)\n  @Put('create_review')\n  createReview(\n    @Body() createReviewDto: CreateReviewDto,\n    @Query('productId', ParseIntPipe) productId: number,\n  ) {\n    try {\n      return this.reviewsService.createReview(createReviewDto, productId);\n    } catch (error) {\n      throw error;\n    }\n  }\n\n  @Throttle(70, 700)\n  @Delete('delete_review')\n  @Roles('OWNER', 'ADMIN')\n  @UseGuards(\n    JwtAuthGuard,\n    RolesGuard,\n    OwnerAdminGuard,\n    AuthFerfershGuard,\n    EditContentGuard,\n  )\n  @HttpCode(201)\n  deleteReview(@Query('reviewId', ParseIntPipe) reviewId: number) {\n    try {\n      return this.reviewsService.deleteReview(reviewId);\n    } catch (error) {\n      throw error;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ReviewsModule.html":{"url":"modules/ReviewsModule.html","title":"module - ReviewsModule","body":"\n                   \n\n\n\n\n    Modules\n    ReviewsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_ReviewsModule\n\n\n\ncluster_ReviewsModule_providers\n\n\n\n\nCategoriesService\n\nCategoriesService\n\n\n\nReviewsModule\n\nReviewsModule\n\nReviewsModule -->\n\nCategoriesService->ReviewsModule\n\n\n\n\n\nProductService\n\nProductService\n\nReviewsModule -->\n\nProductService->ReviewsModule\n\n\n\n\n\nReviewsService\n\nReviewsService\n\nReviewsModule -->\n\nReviewsService->ReviewsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/reviews/reviews.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            CategoriesService\n                        \n                        \n                            ProductService\n                        \n                        \n                            ReviewsService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            ReviewsController\n                        \n                    \n                \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        configure\n                        \n                    \n                \n            \n            \n                \nconfigure(consumer: MiddlewareConsumer)\n                \n            \n\n\n            \n                \n                    Defined in src/reviews/reviews.module.ts:86\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    consumer\n                                    \n                                            MiddlewareConsumer\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        import {\n  forwardRef,\n  MiddlewareConsumer,\n  Module,\n  NestModule,\n  RequestMethod,\n} from '@nestjs/common';\nimport { ConfigModule } from '@nestjs/config';\nimport { SequelizeModule } from '@nestjs/sequelize';\nimport { CategoriesService } from '../categories&colours/services/categories.service';\nimport { InitializeUserMiddleware } from '../common/middlewares/initialize-user.middleware';\nimport { AdminModule } from '../admin/admin.module';\nimport { Admin } from '../admin/models/admin.model';\nimport { AdminRefreshToken } from '../admin/models/admin.refresh.token.model';\nimport { AuthModule } from '../auth/auth.module';\nimport { CartModule } from '../cart/cart.module';\nimport { CartProduct } from '../cart/models/cart.product.model';\nimport { Cart } from '../cart/models/cart.model';\nimport { Colour } from '../categories&colours/models/colours.model';\nimport { ProductColours } from '../categories&colours/models/product.colour.model';\nimport { Category } from '../categories&colours/models/category.model';\nimport { ProductCategories } from '../categories&colours/models/product.categories.model';\nimport { Order } from '../orders/models/order.model';\nimport { OrderProduct } from '../orders/models/order.product.model';\nimport { OrdersModule } from '../orders/orders.module';\nimport { Owner } from '../owner/models/owner.model';\nimport { OwnerRefreshToken } from '../owner/models/owner.refresh.token.model';\nimport { OwnerModule } from '../owner/owner.module';\nimport { Product } from '../product/models/product.model';\nimport { ProductService } from '../product/product.service';\nimport { Role } from '../roles/models/roles.model';\nimport { UserRoles } from '../roles/models/user.roles.model';\nimport { RolesModule } from '../roles/roles.module';\nimport { User } from '../users/models/user.model';\nimport { UserRefreshToken } from '../users/models/user.refresh.token.model';\nimport { UsersModule } from '../users/users.module';\nimport { ProductReviews } from './models/product.reviews.model';\nimport { Review } from './models/review.model';\nimport { ReviewsController } from './reviews.controller';\nimport { ReviewsService } from './reviews.service';\nimport { CreateReviewDto } from './create.review.dto';\nimport RequestValidator from '../common/pipes/body-validator.pipe';\nimport { CategoriesColoursModule } from 'src/categories&colours/categories&colours.module';\n\n@Module({\n  controllers: [ReviewsController],\n  providers: [ReviewsService, ProductService, CategoriesService],\n  imports: [\n    ConfigModule.forRoot({\n      envFilePath: `.${process.env.NODE_ENV}.env`,\n      expandVariables: true,\n      isGlobal: true,\n    }),\n    SequelizeModule.forFeature([\n      ProductReviews,\n      Review,\n      Product,\n      Colour,\n      ProductColours,\n      Order,\n      OrderProduct,\n      Category,\n      ProductCategories,\n      Admin,\n      AdminRefreshToken,\n      Owner,\n      OwnerRefreshToken,\n      User,\n      UserRefreshToken,\n      Role,\n      UserRoles,\n      Cart,\n      CartProduct,\n    ]),\n    forwardRef(() => OrdersModule),\n    forwardRef(() => CartModule),\n    forwardRef(() => CategoriesColoursModule),\n    forwardRef(() => AdminModule),\n    forwardRef(() => RolesModule),\n    forwardRef(() => AuthModule),\n    forwardRef(() => OwnerModule),\n    forwardRef(() => UsersModule),\n  ],\n})\nexport class ReviewsModule implements NestModule {\n  configure(consumer: MiddlewareConsumer) {\n    consumer.apply(RequestValidator.validate(CreateReviewDto)).forRoutes({\n      path: 'reviews/create_review',\n      method: RequestMethod.DELETE,\n    });\n    consumer.apply(InitializeUserMiddleware).forRoutes({\n      path: 'reviews/delete_review',\n      method: RequestMethod.DELETE,\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ReviewsService.html":{"url":"injectables/ReviewsService.html","title":"injectable - ReviewsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ReviewsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/reviews/reviews.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                Logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createReview\n                            \n                            \n                                    Async\n                                deleteReview\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(reviewRepository, productService: ProductService)\n                    \n                \n                        \n                            \n                                Defined in src/reviews/reviews.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        reviewRepository\n                                                  \n                                                        \n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        productService\n                                                  \n                                                        \n                                                                        ProductService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        createReview\n                        \n                    \n                \n            \n            \n                \n                    \n                    createReview(createdReviewDto: CreateReviewDto, productId: number)\n                \n            \n\n\n            \n                \n                    Defined in src/reviews/reviews.service.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createdReviewDto\n                                    \n                                                CreateReviewDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    productId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        deleteReview\n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteReview(reviewId: number)\n                \n            \n\n\n            \n                \n                    Defined in src/reviews/reviews.service.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    reviewId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        Logger\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Logger(ProductService.name)\n                    \n                \n                    \n                        \n                                Defined in src/reviews/reviews.service.ts:9\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Logger, Scope } from '@nestjs/common';\nimport { InjectModel } from '@nestjs/sequelize';\nimport { ProductService } from '../product/product.service';\nimport { CreateReviewDto } from './create.review.dto';\nimport { Review } from './models/review.model';\n\n@Injectable({ scope: Scope.TRANSIENT })\nexport class ReviewsService {\n  private readonly Logger = new Logger(ProductService.name);\n  constructor(\n    @InjectModel(Review) private readonly reviewRepository: typeof Review,\n    private readonly productService: ProductService,\n  ) {}\n\n  async createReview(createdReviewDto: CreateReviewDto, productId: number) {\n    const product = await this.productService.findById(productId);\n    const review = await this.reviewRepository.create(createdReviewDto);\n    if (!product.reviews) {\n      product.$set('reviews', review.id);\n      product.reviews = [review];\n    } else {\n      product.$add('categories', review.id);\n    }\n    review.productId = product.id;\n    review.$add('product', product.id);\n    await review.save();\n    await product.save();\n    return review;\n  }\n\n  async deleteReview(reviewId: number): Promise {\n    const review = await this.reviewRepository.findByPk(reviewId);\n    const product = await this.productService.findById(review.productId);\n    product.$remove('reviews', review.id);\n    await product.save();\n    const deleted = await this.reviewRepository.destroy({\n      where: {\n        id: review.id,\n        name: review.name,\n        surname: review.surname,\n        review: review.review,\n      },\n    });\n    return deleted;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Role.html":{"url":"classes/Role.html","title":"class - Role","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Role\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/roles/models/roles.model.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    Model\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                admins\n                            \n                            \n                                    Public\n                                description\n                            \n                            \n                                    Public\n                                id\n                            \n                            \n                                    Private\n                                owners\n                            \n                            \n                                    Private\n                                users\n                            \n                            \n                                    Public\n                                value\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getAdmins\n                            \n                            \n                                getOwners\n                            \n                            \n                                getUsers\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        admins\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Admin[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @BelongsToMany(undefined, undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/roles/models/roles.model.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'Admin', description: 'Role`s description'})@Column({type: undefined, unique: false, allowNull: false, field: 'description'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/roles/models/roles.model.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: '1', description: 'unique identifier'})@Column({type: undefined, unique: true, autoIncrement: true, primaryKey: true, allowNull: false, field: 'id'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/roles/models/roles.model.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        owners\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Owner[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @BelongsToMany(undefined, undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/roles/models/roles.model.ts:50\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        users\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @BelongsToMany(undefined, undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/roles/models/roles.model.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        value\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'ADMIN', description: 'User`s role'})@Column({type: undefined, unique: true, allowNull: false, field: 'value'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/roles/models/roles.model.ts:34\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getAdmins\n                        \n                    \n                \n            \n            \n                \ngetAdmins()\n                \n            \n\n\n            \n                \n                    Defined in src/roles/models/roles.model.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Admin[]\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getOwners\n                        \n                    \n                \n            \n            \n                \ngetOwners()\n                \n            \n\n\n            \n                \n                    Defined in src/roles/models/roles.model.ts:60\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Owner[]\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getUsers\n                        \n                    \n                \n            \n            \n                \ngetUsers()\n                \n            \n\n\n            \n                \n                    Defined in src/roles/models/roles.model.ts:52\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         User[]\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport {\n  Column,\n  DataType,\n  Table,\n  Model,\n  BelongsToMany,\n} from 'sequelize-typescript';\nimport { RolecreationAttrbs } from '../../core/interfaces/user.interfaces';\nimport { Admin } from '../../admin/models/admin.model';\nimport { Owner } from '../../owner/models/owner.model';\nimport { User } from '../../users/models/user.model';\nimport { UserRoles } from './user.roles.model';\n\n@Table({ tableName: 'ROLES' })\nexport class Role extends Model {\n  @ApiProperty({ example: '1', description: 'unique identifier' })\n  @Column({\n    type: DataType.INTEGER,\n    unique: true,\n    autoIncrement: true,\n    primaryKey: true,\n    allowNull: false,\n    field: 'id',\n  })\n  public id: number;\n  @ApiProperty({ example: 'ADMIN', description: 'User`s role' })\n  @Column({\n    type: DataType.STRING,\n    unique: true,\n    allowNull: false,\n    field: 'value',\n  })\n  public value: string;\n  @ApiProperty({ example: 'Admin', description: 'Role`s description' })\n  @Column({\n    type: DataType.STRING,\n    unique: false,\n    allowNull: false,\n    field: 'description',\n  })\n  public description: string;\n  @BelongsToMany(() => User, () => UserRoles)\n  private users: User[];\n\n  @BelongsToMany(() => Admin, () => UserRoles)\n  private admins: Admin[];\n\n  @BelongsToMany(() => Owner, () => UserRoles)\n  private owners: Owner[];\n\n  getUsers(): User[] {\n    return this.users;\n  }\n\n  getAdmins(): Admin[] {\n    return this.admins;\n  }\n\n  getOwners(): Owner[] {\n    return this.owners;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/RolecreationAttrbs.html":{"url":"interfaces/RolecreationAttrbs.html","title":"interface - RolecreationAttrbs","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  RolecreationAttrbs\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/interfaces/user.interfaces.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            description\n                                        \n                                \n                                \n                                        \n                                            value\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        value\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        value:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface UserRefreshCreationAttrbs {\n  userId: number;\n  userRefreshToken: string;\n  userAgent: string;\n  email: string;\n}\n\nexport interface RolecreationAttrbs {\n  value: string;\n  description: string;\n}\nexport interface UsercreationAttrbs {\n  name: string;\n  surname: string;\n  email: string;\n  phoneNumber: string;\n  password: string;\n  activationLink: string;\n}\n\nexport interface InitializeUser {\n  name: string;\n  surname: string;\n  phoneNumber: string;\n  email: string;\n  password: string;\n  confirmPassword: string;\n}\n\nexport interface ValidateUser {\n  email: string;\n  password: string;\n}\n\nexport interface UserInterface {\n  id: number;\n  name: string;\n  surname: string;\n  email: string;\n  phoneNumber: string;\n  isAdmin: boolean;\n  addContent: boolean;\n  editContent: boolean;\n  editWebsite: boolean;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/RolesController.html":{"url":"controllers/RolesController.html","title":"controller - RolesController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  RolesController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/roles/roles.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                /roles\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createRole\n                            \n                            \n                                getRoleByValue\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        createRole\n                        \n                    \n                \n            \n            \n                \ncreateRole(roleDto: CreateRoleDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Throttle(70, 700)@ApiOperation({summary: 'Creating Roles'})@ApiResponse({status: 200, type: Role})@Roles('OWNER', 'ADMIN')@HttpCode(201)@UseGuards(JwtAuthGuard, RolesGuard, OwnerAdminGuard, AuthFerfershGuard, AddContentGuard)@Put('/create_role')\n                \n            \n\n            \n                \n                    Defined in src/roles/roles.controller.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    roleDto\n                                    \n                                                CreateRoleDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getRoleByValue\n                        \n                    \n                \n            \n            \n                \ngetRoleByValue(value: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Throttle(70, 700)@ApiOperation({summary: 'Getting Roles'})@ApiResponse({status: 200, type: Role})@Roles('OWNER', 'ADMIN')@UseGuards(JwtAuthGuard, RolesGuard, OwnerAdminGuard, AuthFerfershGuard, AddContentGuard)@Get('get/:value')\n                \n            \n\n            \n                \n                    Defined in src/roles/roles.controller.ts:69\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Body,\n  CacheInterceptor,\n  Controller,\n  Get,\n  HttpCode,\n  Param,\n  Put,\n  UseFilters,\n  UseGuards,\n  UseInterceptors,\n} from '@nestjs/common';\nimport { ApiOperation, ApiResponse, ApiTags } from '@nestjs/swagger';\nimport { Roles } from '../common/decorators/roles-auth.decorator';\nimport { AddContentGuard } from '../common/guards/add-content.guard';\nimport { AuthFerfershGuard } from '../common/guards/jw-refresh.guard';\nimport { JwtAuthGuard } from '../common/guards/jwt-auth.guard';\nimport { OwnerAdminGuard } from '../common/guards/owner-admin.guard';\nimport { RolesGuard } from '../common/guards/roles.guard';\nimport { ApiErrorExceptionFilter } from '../common/filters/error-handler.filter';\nimport { CreateRoleDto } from './dto/create.role.dto';\nimport { Role } from './models/roles.model';\nimport { RolesService } from './roles.service';\nimport { Throttle } from '@nestjs/throttler';\nimport { ApiExceptionFilter } from '../common/filters/api-exception.filter';\nimport { ThrottlerBehindProxyGuard } from '../common/guards/throttler-behind-proxy.guard';\n@UseGuards(ThrottlerBehindProxyGuard)\n@ApiTags('roles')\n@UseFilters(ApiErrorExceptionFilter, ApiExceptionFilter)\n@Controller('/roles')\n@UseInterceptors(CacheInterceptor)\nexport class RolesController {\n  constructor(private readonly roleService: RolesService) {}\n  // tslint:disable-next-line: promise-function-async\n  @Throttle(70, 700)\n  @ApiOperation({ summary: 'Creating Roles' })\n  @ApiResponse({ status: 200, type: Role })\n  @Roles('OWNER', 'ADMIN')\n  @HttpCode(201)\n  @UseGuards(\n    JwtAuthGuard,\n    RolesGuard,\n    OwnerAdminGuard,\n    AuthFerfershGuard,\n    AddContentGuard,\n  )\n  @Put('/create_role')\n  createRole(@Body() roleDto: CreateRoleDto): Promise {\n    try {\n      return this.roleService.createRole(roleDto);\n    } catch (error) {\n      throw error;\n    }\n  }\n\n  // tslint:disable-next-line: promise-function-async\n  @Throttle(70, 700)\n  @ApiOperation({ summary: 'Getting Roles' })\n  @ApiResponse({ status: 200, type: Role })\n  @Roles('OWNER', 'ADMIN')\n  @UseGuards(\n    JwtAuthGuard,\n    RolesGuard,\n    OwnerAdminGuard,\n    AuthFerfershGuard,\n    AddContentGuard,\n  )\n  @Get('get/:value')\n  getRoleByValue(@Param('value') value: string): Promise {\n    try {\n      return this.roleService.getRoleByValue(value);\n    } catch (error) {\n      throw error;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/RolesGuard.html":{"url":"guards/RolesGuard.html","title":"guard - RolesGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    RolesGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/common/guards/roles.guard.ts\n            \n\n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService, reflector: Reflector)\n                    \n                \n                        \n                            \n                                Defined in src/common/guards/roles.guard.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        reflector\n                                                  \n                                                        \n                                                                    Reflector\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate(context: ExecutionContext)\n                \n            \n\n\n            \n                \n                    Defined in src/common/guards/roles.guard.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                            ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     boolean | Promise | Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import {\n  CanActivate,\n  ExecutionContext,\n  HttpStatus,\n  Injectable,\n  Scope,\n} from '@nestjs/common';\nimport { Reflector } from '@nestjs/core';\nimport { Observable } from 'rxjs';\nimport { AuthService } from '../../auth/auth.service';\nimport { ROLES_KEY } from '../decorators/roles-auth.decorator';\nimport { Payload } from '../../core/interfaces/auth.interfaces';\nimport { USER_NOT_AUTHORIZIED } from '../../auth/auth.constants';\nimport { ApiException } from '../exceptions/api.exception';\nimport { ACCESS_DENIED } from '../../admin/constants/admin.constants';\n@Injectable({ scope: Scope.REQUEST })\nexport class RolesGuard implements CanActivate {\n  constructor(private authService: AuthService, private reflector: Reflector) {}\n\n  canActivate(\n    context: ExecutionContext,\n  ): boolean | Promise | Observable {\n    return (async () => {\n      try {\n        const requiredRoles: string[] = this.reflector.getAllAndOverride(\n          ROLES_KEY,\n          [context.getHandler(), context.getClass()],\n        );\n        if (!requiredRoles) {\n          return true;\n        }\n        const req = context.switchToHttp().getRequest();\n        const authHeader = req.headers.authorization;\n        const bearer = authHeader.split(' ')[0];\n        const token = authHeader.split(' ')[1];\n        if (bearer !== 'Bearer' || !token) {\n          throw new ApiException(\n            HttpStatus.UNAUTHORIZED,\n            'Unathorized!',\n            USER_NOT_AUTHORIZIED,\n          );\n        }\n        const decodedToken = Buffer.from(token, 'base64').toString('ascii');\n        let payload: Payload;\n        try {\n          payload = await this.authService.validateAccessToken(decodedToken);\n        } catch (err) {\n          throw new ApiException(\n            HttpStatus.UNAUTHORIZED,\n            'Unathorized!',\n            USER_NOT_AUTHORIZIED,\n          );\n        }\n        if (!payload) {\n          throw new ApiException(\n            HttpStatus.UNAUTHORIZED,\n            'Unathorized!',\n            USER_NOT_AUTHORIZIED,\n          );\n        }\n        req.payload = payload;\n        if (\n          !payload.roles.some((role: { value: string; description: string }) =>\n            requiredRoles.includes(role.value),\n          )\n        ) {\n          throw new ApiException(\n            HttpStatus.UNAUTHORIZED,\n            'Unathorized!',\n            ACCESS_DENIED,\n          );\n        }\n        return true;\n      } catch (err) {\n        throw new ApiException(\n          HttpStatus.UNAUTHORIZED,\n          'Unathorized!',\n          ACCESS_DENIED,\n        );\n      }\n    })();\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/RolesModule.html":{"url":"modules/RolesModule.html","title":"module - RolesModule","body":"\n                   \n\n\n\n\n    Modules\n    RolesModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_RolesModule\n\n\n\ncluster_RolesModule_exports\n\n\n\ncluster_RolesModule_providers\n\n\n\n\nRolesService \n\nRolesService \n\n\n\nRolesModule\n\nRolesModule\n\nRolesService  -->\n\nRolesModule->RolesService \n\n\n\n\n\nAuthService\n\nAuthService\n\nRolesModule -->\n\nAuthService->RolesModule\n\n\n\n\n\nCurrencyService\n\nCurrencyService\n\nRolesModule -->\n\nCurrencyService->RolesModule\n\n\n\n\n\nRolesService\n\nRolesService\n\nRolesModule -->\n\nRolesService->RolesModule\n\n\n\n\n\nTasksService\n\nTasksService\n\nRolesModule -->\n\nTasksService->RolesModule\n\n\n\n\n\nUserJwtRefreshTokenService\n\nUserJwtRefreshTokenService\n\nRolesModule -->\n\nUserJwtRefreshTokenService->RolesModule\n\n\n\n\n\nUsersService\n\nUsersService\n\nRolesModule -->\n\nUsersService->RolesModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/roles/roles.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AuthService\n                        \n                        \n                            CurrencyService\n                        \n                        \n                            RolesService\n                        \n                        \n                            TasksService\n                        \n                        \n                            UserJwtRefreshTokenService\n                        \n                        \n                            UsersService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            RolesController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            RolesService\n                        \n                    \n                \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        configure\n                        \n                    \n                \n            \n            \n                \nconfigure(consumer: MiddlewareConsumer)\n                \n            \n\n\n            \n                \n                    Defined in src/roles/roles.module.ts:98\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    consumer\n                                    \n                                            MiddlewareConsumer\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        import {\n  forwardRef,\n  MiddlewareConsumer,\n  Module,\n  NestModule,\n  RequestMethod,\n} from '@nestjs/common';\nimport { RolesController } from './roles.controller';\nimport { RolesService } from './roles.service';\nimport { SequelizeModule } from '@nestjs/sequelize';\nimport { Role } from './models/roles.model';\nimport { User } from '../users/models/user.model';\nimport { UserRoles } from './models/user.roles.model';\nimport { ConfigModule } from '@nestjs/config';\nimport { OrderProduct } from '../orders/models/order.product.model';\nimport { Admin } from '../admin/models/admin.model';\nimport { AdminRefreshToken } from '../admin/models/admin.refresh.token.model';\nimport { CartProduct } from '../cart/models/cart.product.model';\nimport { Cart } from '../cart/models/cart.model';\nimport { Colour } from '../categories&colours/models/colours.model';\nimport { ProductColours } from '../categories&colours/models/product.colour.model';\nimport { Category } from '../categories&colours/models/category.model';\nimport { ProductCategories } from '../categories&colours/models/product.categories.model';\nimport { Order } from '../orders/models/order.model';\nimport { Owner } from '../owner/models/owner.model';\nimport { OwnerRefreshToken } from '../owner/models/owner.refresh.token.model';\nimport { Product } from '../product/models/product.model';\nimport { UserRefreshToken } from '../users/models/user.refresh.token.model';\nimport { AuthService } from '../auth/auth.service';\nimport { AdminModule } from '../admin/admin.module';\nimport { AuthModule } from '../auth/auth.module';\nimport { CoreModule } from '../core/core.module';\nimport { MailModule } from '../mail/mail.module';\nimport { OwnerModule } from '../owner/owner.module';\nimport { ProductModule } from '../product/product.module';\nimport { UsersModule } from '../users/users.module';\nimport { UsersService } from '../users/services/users.service';\nimport { TasksService } from '../core/services/scedule.service';\nimport { UserJwtRefreshTokenService } from '../users/services/jwt-refresh.service';\nimport { InitializeUserMiddleware } from '../common/middlewares/initialize-user.middleware';\nimport { CurrencyService } from 'src/owner/services/currency.service';\nimport { Currencies } from 'src/owner/models/currencies.model';\nimport { HttpModule } from '@nestjs/axios';\n@Module({\n  controllers: [RolesController],\n  providers: [\n    RolesService,\n    AuthService,\n    UsersService,\n    TasksService,\n    UserJwtRefreshTokenService,\n    CurrencyService,\n  ],\n  imports: [\n    HttpModule,\n    ConfigModule.forRoot({\n      envFilePath: `.${process.env.NODE_ENV}.env`,\n      expandVariables: true,\n      isGlobal: true,\n    }),\n    ConfigModule.forRoot({\n      envFilePath: `.${process.env.NODE_ENV}.env`,\n      expandVariables: true,\n      isGlobal: true,\n    }),\n    SequelizeModule.forFeature([\n      Product,\n      Order,\n      OrderProduct,\n      Category,\n      ProductCategories,\n      Admin,\n      AdminRefreshToken,\n      Owner,\n      OwnerRefreshToken,\n      User,\n      UserRefreshToken,\n      Role,\n      UserRoles,\n      Cart,\n      CartProduct,\n      Currencies,\n      Colour,\n      ProductColours,\n    ]),\n    forwardRef(() => MailModule),\n    forwardRef(() => ProductModule),\n    forwardRef(() => CoreModule),\n    forwardRef(() => AdminModule),\n    forwardRef(() => RolesModule),\n    forwardRef(() => AuthModule),\n    forwardRef(() => OwnerModule),\n    forwardRef(() => UsersModule),\n  ],\n  exports: [RolesService],\n})\nexport class RolesModule implements NestModule {\n  configure(consumer: MiddlewareConsumer) {\n    consumer\n      .apply(InitializeUserMiddleware)\n      .forRoutes(\n        { path: 'roles/create_role', method: RequestMethod.PUT },\n        { path: 'roles/get', method: RequestMethod.GET },\n      );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RolesService.html":{"url":"injectables/RolesService.html","title":"injectable - RolesService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  RolesService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/roles/roles.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createRole\n                            \n                            \n                                    Async\n                                getRoleByValue\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(roleRepository)\n                    \n                \n                        \n                            \n                                Defined in src/roles/roles.service.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        roleRepository\n                                                  \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        createRole\n                        \n                    \n                \n            \n            \n                \n                    \n                    createRole(dto: CreateRoleDto)\n                \n            \n\n\n            \n                \n                    Defined in src/roles/roles.service.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dto\n                                    \n                                                CreateRoleDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getRoleByValue\n                        \n                    \n                \n            \n            \n                \n                    \n                    getRoleByValue(value: string)\n                \n            \n\n\n            \n                \n                    Defined in src/roles/roles.service.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Scope } from '@nestjs/common';\nimport { InjectModel } from '@nestjs/sequelize';\nimport { CreateRoleDto } from './dto/create.role.dto';\nimport { Role } from './models/roles.model';\n\n@Injectable({ scope: Scope.TRANSIENT })\nexport class RolesService {\n  constructor(@InjectModel(Role) private roleRepository: typeof Role) {}\n  async createRole(dto: CreateRoleDto): Promise {\n    const role = await this.roleRepository.create(dto);\n    return role;\n  }\n  async getRoleByValue(value: string): Promise {\n    const role = await this.roleRepository.findOne({ where: { value: value } });\n    return role;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SignupDto.html":{"url":"classes/SignupDto.html","title":"class - SignupDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SignupDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/dto/signup.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                confirmPassword\n                            \n                            \n                                    Readonly\n                                email\n                            \n                            \n                                    Readonly\n                                name\n                            \n                            \n                                    Readonly\n                                password\n                            \n                            \n                                    Readonly\n                                phoneNumber\n                            \n                            \n                                    Readonly\n                                surname\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        confirmPassword\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'etrhg45ty5yeewt4t4665y', description: 'user`s confirm password'})@IsString()@Matches(/^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{8,}$/, {message: PASSWORD_VALIDATION})@Match('password')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/signup.dto.ts:82\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'user@gmail.com', description: 'user`s email'})@IsString()@IsEmail()@Matches(/^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/, {message: EMAIL_VALIDATION})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/signup.dto.ts:55\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'Alex', description: 'user`s name'})@IsString()@MinLength(2)@MaxLength(30)@IsNotEmpty()@Matches(/[a-zA-Z0-9а-яієїґА_ЯЇЄЇЁёА-я_-]{2,30}/, {message: USERNAME_VALIDATION})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/signup.dto.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'etrhg45ty5yeewt4t4665y', description: 'user`s password'})@IsString()@Matches(/^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{8,}$/, {message: PASSWORD_VALIDATION})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/signup.dto.ts:68\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        phoneNumber\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: '+381056733', description: 'user phone number'})@IsString()@Matches(/^[\\+]?[(]?[0-9]{3}[)]?[-\\s\\.]?[0-9]{3}[-\\s\\.]?[0-9]{4,6}$/, {message: PHONE_NUMRER_VALIDATION})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/signup.dto.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        surname\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'Cusler', description: 'user`s surname'})@IsString()@MinLength(2)@MaxLength(30)@Matches(/[a-zA-Z0-9а-яієїґА_ЯЇЄЇЁёА-я_-]{2,30}/, {message: SURNAME_VALIDATION})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/signup.dto.ts:37\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport {\n  IsEmail,\n  IsNotEmpty,\n  IsString,\n  Matches,\n  MaxLength,\n  MinLength,\n} from 'class-validator';\nimport { Match } from '../../common/decorators/match.decorator';\nimport {\n  EMAIL_VALIDATION,\n  PASSWORD_VALIDATION,\n  PHONE_NUMRER_VALIDATION,\n  SURNAME_VALIDATION,\n  USERNAME_VALIDATION,\n} from '../auth.constants';\n\nexport class SignupDto {\n  @ApiProperty({ example: 'Alex', description: 'user`s name' })\n  @IsString()\n  @MinLength(2)\n  @MaxLength(30)\n  @IsNotEmpty()\n  @Matches(/[a-zA-Z0-9а-яієїґА_ЯЇЄЇЁёА-я_-]{2,30}/, {\n    message: USERNAME_VALIDATION,\n  })\n  readonly name: string;\n\n  @ApiProperty({ example: 'Cusler', description: 'user`s surname' })\n  @IsString()\n  @MinLength(2)\n  @MaxLength(30)\n  @Matches(/[a-zA-Z0-9а-яієїґА_ЯЇЄЇЁёА-я_-]{2,30}/, {\n    message: SURNAME_VALIDATION,\n  })\n  readonly surname: string;\n\n  @ApiProperty({ example: '+381056733', description: 'user phone number' })\n  @IsString()\n  @Matches(/^[\\+]?[(]?[0-9]{3}[)]?[-\\s\\.]?[0-9]{3}[-\\s\\.]?[0-9]{4,6}$/, {\n    message: PHONE_NUMRER_VALIDATION,\n  })\n  readonly phoneNumber: string;\n\n  @ApiProperty({ example: 'user@gmail.com', description: 'user`s email' })\n  @IsString()\n  @IsEmail()\n  @Matches(\n    /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/,\n    {\n      message: EMAIL_VALIDATION,\n    },\n  )\n  readonly email: string;\n\n  @ApiProperty({\n    example: 'etrhg45ty5yeewt4t4665y',\n    description: 'user`s password',\n  })\n  @IsString()\n  @Matches(\n    /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{8,}$/,\n    {\n      message: PASSWORD_VALIDATION,\n    },\n  )\n  readonly password: string;\n\n  @ApiProperty({\n    example: 'etrhg45ty5yeewt4t4665y',\n    description: 'user`s confirm password',\n  })\n  @IsString()\n  @Matches(\n    /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{8,}$/,\n    {\n      message: PASSWORD_VALIDATION,\n    },\n  )\n  @Match('password')\n  readonly confirmPassword: string;\n}\n// {\n//     \"name\": \"Alex\",\n//     \"surname\": \"Cusler\",\n//     \"email\": \"user@gmail.com\",\n//     \"phoneNumber\": \"+2345265646\",\n//     \"password\": \"ALexesg1234!\",\n//     \"confirmPassword\": \"ALexesg1234!\"\n// }\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TasksService.html":{"url":"injectables/TasksService.html","title":"injectable - TasksService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  TasksService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/services/scedule.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addCronJob\n                            \n                            \n                                addInterval\n                            \n                            \n                                addTimeoutForTokens\n                            \n                            \n                                deleteCron\n                            \n                            \n                                deleteInterval\n                            \n                            \n                                deleteTimeout\n                            \n                            \n                                garbageCollector\n                            \n                            \n                                getCrons\n                            \n                            \n                                getIntervals\n                            \n                            \n                                getTimeouts\n                            \n                            \n                                    Async\n                                renewCurrencies\n                            \n                            \n                                    Async\n                                setUp\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(schedulerRegistry: SchedulerRegistry, eventEmitter: EventEmitter2, currencyService: CurrencyService, ownerService: OwnerService)\n                    \n                \n                        \n                            \n                                Defined in src/core/services/scedule.service.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        schedulerRegistry\n                                                  \n                                                        \n                                                                    SchedulerRegistry\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        eventEmitter\n                                                  \n                                                        \n                                                                    EventEmitter2\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        currencyService\n                                                  \n                                                        \n                                                                        CurrencyService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        ownerService\n                                                  \n                                                        \n                                                                        OwnerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addCronJob\n                        \n                    \n                \n            \n            \n                \naddCronJob(name: string, time: string, callback: () => void)\n                \n            \n\n\n            \n                \n                    Defined in src/core/services/scedule.service.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    time\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    callback\n                                    \n                                                function\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     CronJob\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        addInterval\n                        \n                    \n                \n            \n            \n                \naddInterval(name: string, milliseconds: number, cb: (ownerRefreshToken: string,name: string) => void, ownerRefreshToken: string)\n                \n            \n\n\n            \n                \n                    Defined in src/core/services/scedule.service.ts:57\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    milliseconds\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    cb\n                                    \n                                                function\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    ownerRefreshToken\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     NodeJS.Timer\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        addTimeoutForTokens\n                        \n                    \n                \n            \n            \n                \naddTimeoutForTokens(name: string, milliseconds: number, refreshTokenId: number, identifier: string, cb: (refreshTokenId: number,identifier: string) => void)\n                \n            \n\n\n            \n                \n                    Defined in src/core/services/scedule.service.ts:95\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    milliseconds\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    refreshTokenId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    identifier\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    cb\n                                    \n                                                function\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     NodeJS.Timeout\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteCron\n                        \n                    \n                \n            \n            \n                \ndeleteCron(name: string)\n                \n            \n\n\n            \n                \n                    Defined in src/core/services/scedule.service.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteInterval\n                        \n                    \n                \n            \n            \n                \ndeleteInterval(name: string)\n                \n            \n\n\n            \n                \n                    Defined in src/core/services/scedule.service.ts:72\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteTimeout\n                        \n                    \n                \n            \n            \n                \ndeleteTimeout(name: string)\n                \n            \n\n\n            \n                \n                    Defined in src/core/services/scedule.service.ts:124\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        garbageCollector\n                        \n                    \n                \n            \n            \n                \ngarbageCollector(name: string, milliseconds: number)\n                \n            \n\n\n            \n                \n                    Defined in src/core/services/scedule.service.ts:86\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    milliseconds\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getCrons\n                        \n                    \n                \n            \n            \n                \ngetCrons()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Cron(CronExpression.EVERY_HOUR)\n                \n            \n\n            \n                \n                    Defined in src/core/services/scedule.service.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Map\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getIntervals\n                        \n                    \n                \n            \n            \n                \ngetIntervals()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Cron(CronExpression.EVERY_HOUR)\n                \n            \n\n            \n                \n                    Defined in src/core/services/scedule.service.ts:79\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     string[]\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getTimeouts\n                        \n                    \n                \n            \n            \n                \ngetTimeouts()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Cron(CronExpression.EVERY_HOUR)\n                \n            \n\n            \n                \n                    Defined in src/core/services/scedule.service.ts:131\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     string[]\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        renewCurrencies\n                        \n                    \n                \n            \n            \n                \n                    \n                    renewCurrencies()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Cron(CronExpression.EVERY_WEEK)\n                \n            \n\n            \n                \n                    Defined in src/core/services/scedule.service.ts:138\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        setUp\n                        \n                    \n                \n            \n            \n                \n                    \n                    setUp()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Cron(CronExpression.EVERY_30_SECONDS, {name: 'setting-up', unrefTimeout: true, utcOffset: 1})\n                \n            \n\n            \n                \n                    Defined in src/core/services/scedule.service.ts:147\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     unknown\n\n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Logger(TasksService.name)\n                    \n                \n                    \n                        \n                                Defined in src/core/services/scedule.service.ts:13\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Logger, Scope } from '@nestjs/common';\nimport { EventEmitter2 } from '@nestjs/event-emitter';\nimport { Cron, CronExpression, SchedulerRegistry } from '@nestjs/schedule';\nimport { CronJob } from 'cron';\nimport { OwnerService } from '../../owner/services/owner.service';\nimport { Currencies } from '../../owner/models/currencies.model';\nimport { CurrencyService } from '../../owner/services/currency.service';\nimport { JwtRefreshTokenDeletedEvent } from '../events/jwt-refresh-token-deleted.evet';\nimport { CreateOwnerDto } from 'src/owner/dto/create.owner.dto';\n\n@Injectable({ scope: Scope.DEFAULT })\nexport class TasksService {\n  private readonly logger = new Logger(TasksService.name);\n  constructor(\n    private readonly schedulerRegistry: SchedulerRegistry,\n    private readonly eventEmitter: EventEmitter2,\n    private readonly currencyService: CurrencyService,\n    private readonly ownerService: OwnerService,\n  ) {}\n\n  addCronJob(\n    name: string,\n    time: string,\n    callback: () => Promise,\n  ): CronJob {\n    const job = new CronJob(time, async () => {\n      this.logger.warn(`time (${time}) for job ${name} to run!`);\n      return callback();\n    });\n    this.schedulerRegistry.addCronJob(name, job);\n    job.start();\n    this.logger.warn(`job ${name} added for each minute at ${time} seconds!`);\n    return job;\n  }\n\n  @Cron(CronExpression.EVERY_HOUR)\n  getCrons(): Map {\n    const jobs = this.schedulerRegistry.getCronJobs();\n    jobs.forEach((value, key) => {\n      let next: Date | string;\n      try {\n        next = value.nextDates().toJSDate();\n      } catch (e) {\n        next = 'error: next fire date is in the past!';\n      }\n      this.logger.log(`job: ${key} -> next: ${next}`);\n    });\n    return jobs;\n  }\n\n  deleteCron(name: string): void {\n    this.schedulerRegistry.deleteCronJob(name);\n    this.logger.warn(`job ${name} deleted!`);\n    return;\n  }\n\n  addInterval(\n    name: string,\n    milliseconds: number,\n    cb: (ownerRefreshToken: string, name: string) => Promise,\n    ownerRefreshToken: string,\n  ): NodeJS.Timer {\n    const callback = async () => {\n      this.logger.warn(`Interval ${name} executing at time (${milliseconds})!`);\n      return cb(ownerRefreshToken, name);\n    };\n    const interval = setInterval(callback, milliseconds);\n    this.schedulerRegistry.addInterval(name, interval);\n    return interval;\n  }\n\n  deleteInterval(name: string): void {\n    this.schedulerRegistry.deleteInterval(name);\n    this.logger.warn(`Interval ${name} deleted!`);\n    return;\n  }\n\n  @Cron(CronExpression.EVERY_HOUR)\n  getIntervals(): string[] {\n    this.deleteCron('');\n    const intervals = this.schedulerRegistry.getIntervals();\n    intervals.forEach((key) => this.logger.log(`Interval: ${key}`));\n    return intervals;\n  }\n\n  garbageCollector(name: string, milliseconds: number) {\n    const callback = async () => {\n      this.logger.warn(`Interval ${name} executing at time (${milliseconds})!`);\n    };\n    const interval = setInterval(callback, milliseconds);\n    this.schedulerRegistry.addInterval(name, interval);\n    return interval;\n  }\n\n  addTimeoutForTokens(\n    name: string,\n    milliseconds: number,\n    refreshTokenId: number,\n    identifier: string,\n    cb: (refreshTokenId: number, identifier: string) => Promise,\n  ): NodeJS.Timeout {\n    const callback = async (): Promise => {\n      this.logger.log(`Timeout ${name} executing after (${milliseconds})!`);\n      const timeout = await cb(refreshTokenId, identifier);\n      if (!timeout) {\n        return this.deleteTimeout(name);\n      }\n      this.deleteTimeout(name);\n      const jwtRefreshTokenDeletedEvent = new JwtRefreshTokenDeletedEvent();\n      jwtRefreshTokenDeletedEvent.name = name;\n      jwtRefreshTokenDeletedEvent.userId = refreshTokenId;\n      jwtRefreshTokenDeletedEvent.description = `deleted user refresh token: ${refreshTokenId}`;\n      return this.eventEmitter.emit(\n        'refreshtoken.deleted',\n        jwtRefreshTokenDeletedEvent,\n      );\n    };\n    this.logger.warn(`Timeout ${name} executing!`);\n    const timeout = setTimeout(callback, milliseconds);\n    this.schedulerRegistry.addTimeout(name, timeout);\n    return timeout;\n  }\n\n  deleteTimeout(name: string): void {\n    this.schedulerRegistry.deleteTimeout(name);\n    this.logger.log(`Timeout ${name} deleted!`);\n    return;\n  }\n\n  @Cron(CronExpression.EVERY_HOUR)\n  getTimeouts(): string[] {\n    const timeouts = this.schedulerRegistry.getTimeouts();\n    timeouts.forEach((key) => this.logger.log(`Timeout: ${key}`));\n    return timeouts;\n  }\n\n  @Cron(CronExpression.EVERY_WEEK)\n  async renewCurrencies(): Promise {\n    return this.currencyService.renewCurrencies();\n  }\n\n  @Cron(CronExpression.EVERY_30_SECONDS, {\n    name: 'setting-up',\n    unrefTimeout: true,\n    utcOffset: 1,\n  })\n  async setUp() {\n    this.logger.warn(`time (${1}) second for job setting-up to run!`);\n    const owner = await OwnerService.creatingOwner({\n      name: process.env.OWNER.toString().trim().split(',')[0],\n      surname: process.env.OWNER.toString().trim().split(',')[1],\n      phoneNumber: process.env.OWNER.toString().trim().split(',')[2],\n      email: process.env.OWNER.toString().trim().split(',')[3],\n      password: process.env.OWNER.toString().trim().split(',')[4],\n    });\n    if (owner) {\n      return this.currencyService.setCurrencies(owner.id);\n    }\n    return this.deleteCron('setting-up');\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TelegramModule.html":{"url":"modules/TelegramModule.html","title":"module - TelegramModule","body":"\n                   \n\n\n\n\n    Modules\n    TelegramModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/telegram/telegram.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Static\n                        createAsyncOptionsProvider\n                        \n                    \n                \n            \n            \n                \n                    \n                    createAsyncOptionsProvider(options: ITelegramModuleAsyncOptions)\n                \n            \n\n\n            \n                \n                    Defined in src/telegram/telegram.module.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                ITelegramModuleAsyncOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Provider\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        forRootAsync\n                        \n                    \n                \n            \n            \n                \n                    \n                    forRootAsync(options: ITelegramModuleAsyncOptions)\n                \n            \n\n\n            \n                \n                    Defined in src/telegram/telegram.module.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                ITelegramModuleAsyncOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     DynamicModule\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        import { DynamicModule, Global, Module, Provider } from '@nestjs/common';\nimport { TELEGRAM_MODULE_OPTIONS } from './telegram.constants';\nimport { ITelegramModuleAsyncOptions } from './telegram.interface';\nimport { TelegramService } from './telegram.service';\n\n@Global()\n@Module({})\nexport class TelegramModule {\n  static forRootAsync(options: ITelegramModuleAsyncOptions): DynamicModule {\n    const asyncOptions = TelegramModule.createAsyncOptionsProvider(options);\n    return {\n      module: TelegramModule,\n      imports: options.imports,\n      providers: [TelegramService, asyncOptions],\n      exports: [TelegramService],\n    };\n  }\n\n  private static createAsyncOptionsProvider(\n    options: ITelegramModuleAsyncOptions,\n  ): Provider {\n    return {\n      provide: TELEGRAM_MODULE_OPTIONS,\n      useFactory: async (...args: any[]) => {\n        const config = await options.useFactory(...args);\n        return config;\n      },\n      inject: options.inject || [],\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TelegramService.html":{"url":"injectables/TelegramService.html","title":"injectable - TelegramService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  TelegramService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/telegram/telegram.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                bot\n                            \n                            \n                                options\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                sendMessage\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(options: ITelegramOptions)\n                    \n                \n                        \n                            \n                                Defined in src/telegram/telegram.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        options\n                                                  \n                                                        \n                                                                        ITelegramOptions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        sendMessage\n                        \n                    \n                \n            \n            \n                \n                    \n                    sendMessage(message: string, chatId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/telegram/telegram.service.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    chatId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        this.options.chatId\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        bot\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Telegraf\n\n                    \n                \n                    \n                        \n                                Defined in src/telegram/telegram.service.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        options\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ITelegramOptions\n\n                    \n                \n                    \n                        \n                                Defined in src/telegram/telegram.service.ts:9\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Inject, Injectable } from '@nestjs/common';\nimport { Telegraf } from 'telegraf';\nimport { TELEGRAM_MODULE_OPTIONS } from './telegram.constants';\nimport { ITelegramOptions } from './telegram.interface';\n\n@Injectable()\nexport class TelegramService {\n  bot: Telegraf;\n  options: ITelegramOptions;\n\n  constructor(@Inject(TELEGRAM_MODULE_OPTIONS) options: ITelegramOptions) {\n    this.bot = new Telegraf(options.token);\n    this.options = options;\n  }\n\n  async sendMessage(message: string, chatId: string = this.options.chatId) {\n    await this.bot.telegram.sendMessage(chatId, message);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ThrottlerBehindProxyGuard.html":{"url":"injectables/ThrottlerBehindProxyGuard.html","title":"injectable - ThrottlerBehindProxyGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ThrottlerBehindProxyGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/guards/throttler-behind-proxy.guard.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    ThrottlerGuard\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                getTracker\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        getTracker\n                        \n                    \n                \n            \n            \n                \n                    \n                    getTracker(req: Record)\n                \n            \n\n\n            \n                \n                    Defined in src/common/guards/throttler-behind-proxy.guard.ts:6\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            Record\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { ThrottlerGuard } from '@nestjs/throttler';\nimport { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class ThrottlerBehindProxyGuard extends ThrottlerGuard {\n  protected getTracker(req: Record): string {\n    return req.ips.length ? req.ips[0] : req.ip;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Tokens.html":{"url":"interfaces/Tokens.html","title":"interface - Tokens","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Tokens\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/interfaces/auth.interfaces.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            accessToken\n                                        \n                                \n                                \n                                        \n                                            expireDate\n                                        \n                                \n                                \n                                        \n                                            refreshToken\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        accessToken\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        accessToken:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        expireDate\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        expireDate:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        refreshToken\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        refreshToken:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Role } from '../../roles/models/roles.model';\nexport interface Payload {\n  email: string;\n  userId: number;\n  userActivationLink: string;\n  isUserActivated: boolean;\n  roles?: Role[];\n}\n\nexport interface Tokens {\n  refreshToken: string;\n  accessToken: string;\n  expireDate: Date;\n}\n\nexport interface AuthUser {\n  accessToken: string;\n  user: ReturnedUser | ReturnedAdmin | ReturnedOwner;\n}\n\nexport interface ReturnedUser {\n  id: number;\n  name: string;\n  surname: string;\n  phoneNumber: string;\n  email: string;\n  country: string | null;\n  city: string | null;\n  postOffice: string | null;\n  type: 'USER';\n}\n\nexport interface ReturnedOwner {\n  id: number;\n  name: string;\n  surname: string;\n  phoneNumber: string;\n  email: string;\n  type: 'OWNER';\n}\n\nexport interface ReturnedAdmin {\n  id: number;\n  name: string;\n  surname: string;\n  phoneNumber: string;\n  email: string;\n  type: 'ADMIN';\n}\n\nexport interface CodeDto {\n  type: 'OWNER' | 'ADMIN' | null;\n  email: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateCategoryDto.html":{"url":"classes/UpdateCategoryDto.html","title":"class - UpdateCategoryDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateCategoryDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/categories&colours/dto/update.category.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                en\n                            \n                            \n                                rs\n                            \n                            \n                                ru\n                            \n                            \n                                ua\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        en\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@MinLength(2)@MaxLength(30)@Matches(/[a-zA-Z0-9а-яієїґА_ЯЇЄЇЁёА-я_-]{2,30}/)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/categories&colours/dto/update.category.dto.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        rs\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@MinLength(2)@MaxLength(30)@Matches(/[a-zA-Z0-9а-яієїґА_ЯЇЄЇЁёА-я_-]{2,30}/)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/categories&colours/dto/update.category.dto.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ru\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@MinLength(2)@MaxLength(30)@Matches(/[a-zA-Z0-9а-яієїґА_ЯЇЄЇЁёА-я_-]{2,30}/)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/categories&colours/dto/update.category.dto.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ua\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@MinLength(2)@MaxLength(30)@Matches(/[a-zA-Z0-9а-яієїґА_ЯЇЄЇЁёА-я_-]{2,30}/)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/categories&colours/dto/update.category.dto.ts:8\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsString, MinLength, MaxLength, Matches } from 'class-validator';\n\nexport class UpdateCategoryDto {\n  @IsString()\n  @MinLength(2)\n  @MaxLength(30)\n  @Matches(/[a-zA-Z0-9а-яієїґА_ЯЇЄЇЁёА-я_-]{2,30}/)\n  ua: string;\n\n  @IsString()\n  @MinLength(2)\n  @MaxLength(30)\n  @Matches(/[a-zA-Z0-9а-яієїґА_ЯЇЄЇЁёА-я_-]{2,30}/)\n  ru: string;\n\n  @IsString()\n  @MinLength(2)\n  @MaxLength(30)\n  @Matches(/[a-zA-Z0-9а-яієїґА_ЯЇЄЇЁёА-я_-]{2,30}/)\n  rs: string;\n\n  @IsString()\n  @MinLength(2)\n  @MaxLength(30)\n  @Matches(/[a-zA-Z0-9а-яієїґА_ЯЇЄЇЁёА-я_-]{2,30}/)\n  en: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateColourDto.html":{"url":"classes/UpdateColourDto.html","title":"class - UpdateColourDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateColourDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/categories&colours/dto/update.colour.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                en\n                            \n                            \n                                hex\n                            \n                            \n                                rs\n                            \n                            \n                                ru\n                            \n                            \n                                ua\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        en\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@MinLength(2)@MaxLength(30)@Matches(/[a-zA-Z0-9а-яієїґА_ЯЇЄЇЁёА-я_-]{2,30}/)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/categories&colours/dto/update.colour.dto.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hex\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@MinLength(2)@MaxLength(30)@Matches(/[a-zA-Z0-9а-яієїґА_ЯЇЄЇЁёА-я_-]{2,30}/)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/categories&colours/dto/update.colour.dto.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        rs\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@MinLength(2)@MaxLength(30)@Matches(/[a-zA-Z0-9а-яієїґА_ЯЇЄЇЁёА-я_-]{2,30}/)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/categories&colours/dto/update.colour.dto.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ru\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@MinLength(2)@MaxLength(30)@Matches(/[a-zA-Z0-9а-яієїґА_ЯЇЄЇЁёА-я_-]{2,30}/)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/categories&colours/dto/update.colour.dto.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ua\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@MinLength(2)@MaxLength(30)@Matches(/[a-zA-Z0-9а-яієїґА_ЯЇЄЇЁёА-я_-]{2,30}/)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/categories&colours/dto/update.colour.dto.ts:8\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsString, MinLength, MaxLength, Matches } from 'class-validator';\n\nexport class UpdateColourDto {\n  @IsString()\n  @MinLength(2)\n  @MaxLength(30)\n  @Matches(/[a-zA-Z0-9а-яієїґА_ЯЇЄЇЁёА-я_-]{2,30}/)\n  ua: string;\n\n  @IsString()\n  @MinLength(2)\n  @MaxLength(30)\n  @Matches(/[a-zA-Z0-9а-яієїґА_ЯЇЄЇЁёА-я_-]{2,30}/)\n  ru: string;\n\n  @IsString()\n  @MinLength(2)\n  @MaxLength(30)\n  @Matches(/[a-zA-Z0-9а-яієїґА_ЯЇЄЇЁёА-я_-]{2,30}/)\n  rs: string;\n\n  @IsString()\n  @MinLength(2)\n  @MaxLength(30)\n  @Matches(/[a-zA-Z0-9а-яієїґА_ЯЇЄЇЁёА-я_-]{2,30}/)\n  en: string;\n\n  @IsString()\n  @MinLength(2)\n  @MaxLength(30)\n  @Matches(/[a-zA-Z0-9а-яієїґА_ЯЇЄЇЁёА-я_-]{2,30}/)\n  hex: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateProductDto.html":{"url":"classes/UpdateProductDto.html","title":"class - UpdateProductDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateProductDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/product/dto/update.product.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                description\n                            \n                            \n                                    Readonly\n                                price\n                            \n                            \n                                    Readonly\n                                quantity\n                            \n                            \n                                    Readonly\n                                title\n                            \n                            \n                                \n                            \n                            \n                                \n                            \n                            \n                                \n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsDefined()@Type(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/product/dto/update.product.dto.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        price\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsDefined()@Type(undefined)@IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/product/dto/update.product.dto.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        quantity\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsDefined()@Transform(value => )@Type(undefined)@IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/product/dto/update.product.dto.ts:67\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsDefined()@Type(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/product/dto/update.product.dto.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                    \n                \n            \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsDefined()@Type(undefined, readonly, sizes, undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/product/dto/update.product.dto.ts:52\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                    \n                \n            \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsDefined()@Type(undefined, readonly, colours, undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/product/dto/update.product.dto.ts:61\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                    \n                \n            \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsDefined()@Type(undefined, readonly, categories, undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/product/dto/update.product.dto.ts:74\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Transform, Type } from 'class-transformer';\nimport { IsDefined, IsNumber, IsString, Matches } from 'class-validator';\nclass Nested {\n  @IsDefined()\n  @IsString()\n  @Matches(/[a-zA-Z0-9а-яієїґА_ЯЇЄЇЁёА-яzžitisšte_-]/gi)\n  ua: string;\n  @IsDefined()\n  @IsString()\n  @Matches(/[a-zA-Z0-9а-яієїґА_ЯЇЄЇЁёА-яzžitisšte_-]/gi)\n  ru: string;\n  @IsDefined()\n  @IsString()\n  @Matches(/[a-zA-Z0-9а-яієїґА_ЯЇЄЇЁёА-яzžitisšte_-]/gi)\n  rs: string;\n  @IsDefined()\n  @IsString()\n  @Matches(/[a-zA-Z0-9а-яієїґА_ЯЇЄЇЁёА-яzžitisšte_-]/gi)\n  en: string;\n}\nexport class UpdateProductDto {\n  @IsDefined()\n  @Type(() => Nested)\n  readonly title: {\n    ua: string;\n    ru: string;\n    rs: string;\n    en: string;\n  };\n\n  @IsDefined()\n  @Type(() => Nested)\n  readonly description: {\n    ua: string;\n    ru: string;\n    rs: string;\n    en: string;\n  };\n\n  @IsDefined()\n  @Type(() => Number)\n  @IsNumber()\n  readonly price: number;\n\n  @IsDefined()\n  @Type(() => Array)\n  // @Transform((value) => ParseJsonPipe.transform(value.value, value.obj))\n  // @IsArray()\n  // @ArrayNotEmpty()\n  // @IsString({ each: true })\n  // @MaxLength(15, { each: true })\n  readonly sizes: string[];\n\n  @IsDefined()\n  @Type(() => Array)\n  // @Transform((value) => JSON.parse(value.value))\n  // @IsArray()\n  // @ArrayNotEmpty()\n  // @IsString({ each: true })\n  // @MaxLength(15, { each: true })\n  readonly colours: number[];\n\n  @IsDefined()\n  @Transform((value: any) => Number(value.value))\n  @Type(() => Number)\n  @IsNumber()\n  readonly quantity: number;\n\n  @IsDefined()\n  @Type(() => Array)\n  // @Transform((value) => JSON.parse(value.value))\n  // @IsArray()\n  // @ArrayNotEmpty()\n  readonly categories: number[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateUserDto.html":{"url":"classes/UpdateUserDto.html","title":"class - UpdateUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/dto/update-user.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                city\n                            \n                            \n                                    Readonly\n                                country\n                            \n                            \n                                    Readonly\n                                name\n                            \n                            \n                                    Readonly\n                                postOffice\n                            \n                            \n                                    Readonly\n                                surname\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        city\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'Lviv', description: 'city'})@IsString()@MinLength(2)@MaxLength(50)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/update-user.dto.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        country\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'Ukraine', description: 'country'})@IsString()@MinLength(2)@MaxLength(50)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/update-user.dto.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'Alex', description: 'user`s name'})@IsString()@MinLength(2)@MaxLength(30)@Matches(/[a-zA-Z0-9а-яієїґА_ЯЇЄЇЁёА-я_-]{2,30}/, {message: USERNAME_VALIDATION})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/update-user.dto.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        postOffice\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'Lviv', description: 'postOffice'})@IsString()@MinLength(2)@MaxLength(50)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/update-user.dto.ts:52\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        surname\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'Cusler', description: 'user`s surname'})@IsString()@MinLength(2)@MaxLength(30)@Matches(/[a-zA-Z0-9а-яієїґА_ЯЇЄЇЁёА-я_-]{2,30}/, {message: SURNAME_VALIDATION})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/update-user.dto.ts:25\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsString, Matches, MaxLength, MinLength } from 'class-validator';\nimport {\n  USERNAME_VALIDATION,\n  SURNAME_VALIDATION,\n} from '../constants/user.constants';\n\nexport class UpdateUserDto {\n  @ApiProperty({ example: 'Alex', description: 'user`s name' })\n  @IsString()\n  @MinLength(2)\n  @MaxLength(30)\n  @Matches(/[a-zA-Z0-9а-яієїґА_ЯЇЄЇЁёА-я_-]{2,30}/, {\n    message: USERNAME_VALIDATION,\n  })\n  readonly name: string;\n\n  @ApiProperty({ example: 'Cusler', description: 'user`s surname' })\n  @IsString()\n  @MinLength(2)\n  @MaxLength(30)\n  @Matches(/[a-zA-Z0-9а-яієїґА_ЯЇЄЇЁёА-я_-]{2,30}/, {\n    message: SURNAME_VALIDATION,\n  })\n  readonly surname: string;\n\n  @ApiProperty({\n    example: 'Lviv',\n    description: 'city',\n  })\n  @IsString()\n  @MinLength(2)\n  @MaxLength(50)\n  readonly city: string;\n\n  @ApiProperty({\n    example: 'Ukraine',\n    description: 'country',\n  })\n  @IsString()\n  @MinLength(2)\n  @MaxLength(50)\n  readonly country: string;\n\n  @ApiProperty({\n    example: 'Lviv',\n    description: 'postOffice',\n  })\n  @IsString()\n  @MinLength(2)\n  @MaxLength(50)\n  readonly postOffice: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserAdminMiddleware.html":{"url":"injectables/UserAdminMiddleware.html","title":"injectable - UserAdminMiddleware","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UserAdminMiddleware\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/middlewares/user-admin.middleware.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                use\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userService: UsersService)\n                    \n                \n                        \n                            \n                                Defined in src/common/middlewares/user-admin.middleware.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UsersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        use\n                        \n                    \n                \n            \n            \n                \n                    \n                    use(req: Request, res: Response, next: NextFunction)\n                \n            \n\n\n            \n                \n                    Defined in src/common/middlewares/user-admin.middleware.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                            NextFunction\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  HttpStatus,\n  Injectable,\n  NestMiddleware,\n  Next,\n  Req,\n  Res,\n  Scope,\n} from '@nestjs/common';\nimport { Request, Response, NextFunction } from 'express';\nimport { INVALID_PARAMS } from '../../auth/auth.constants';\nimport { USER_NOT_FOUND } from '../../users/constants/user.constants';\nimport { v4 } from 'uuid';\nimport { UsersService } from '../../users/services/users.service';\nimport { ApiException } from '../exceptions/api.exception';\n\n@Injectable({ scope: Scope.REQUEST })\nexport class UserAdminMiddleware implements NestMiddleware {\n  constructor(private readonly userService: UsersService) {}\n  async use(\n    @Req() req: Request,\n    @Res() res: Response,\n    @Next() next: NextFunction,\n  ) {\n    try {\n      const name = req?.body?.name;\n      const surname = req?.body?.surname;\n      const email = req?.body?.email;\n      const phoneNumber = req?.body?.phoneNumber;\n      const isAdmin = req?.body?.isAdmin;\n      const addContent = req?.body?.addContent;\n      const editContent = req?.body?.editContent;\n      const editWebSite = req?.body?.editWebSite;\n      if (\n        !name ||\n        !surname ||\n        !phoneNumber ||\n        !email ||\n        !isAdmin.toString() ||\n        !addContent.toString() ||\n        !editContent.toString() ||\n        !editWebSite.toString()\n      ) {\n        throw new ApiException(\n          HttpStatus.BAD_REQUEST,\n          'Bad request!',\n          INVALID_PARAMS,\n        );\n      }\n      const user = await this.userService.getUserByEmail(email);\n      if (user.phoneNumber === phoneNumber) {\n        req.body.password = user.getPassword();\n        req.body.activationLink = v4();\n        return next();\n      }\n      throw new ApiException(\n        HttpStatus.NOT_FOUND,\n        'Not found!',\n        USER_NOT_FOUND,\n      );\n    } catch (err: unknown) {\n      return next(err);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/UserGuard.html":{"url":"guards/UserGuard.html","title":"guard - UserGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    UserGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/common/guards/user.guard.ts\n            \n\n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(userJwtRefreshTokenService: UserJwtRefreshTokenService, reflector: Reflector)\n                    \n                \n                        \n                            \n                                Defined in src/common/guards/user.guard.ts:21\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userJwtRefreshTokenService\n                                                  \n                                                        \n                                                                        UserJwtRefreshTokenService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        reflector\n                                                  \n                                                        \n                                                                    Reflector\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate(context: ExecutionContext)\n                \n            \n\n\n            \n                \n                    Defined in src/common/guards/user.guard.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                            ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     boolean | Promise | Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import {\n  CanActivate,\n  ExecutionContext,\n  HttpStatus,\n  Injectable,\n  Scope,\n} from '@nestjs/common';\nimport { Observable } from 'rxjs';\nimport { Payload } from '../../core/interfaces/auth.interfaces';\nimport { UserJwtRefreshTokenService } from '../../users/services/jwt-refresh.service';\nimport {\n  REFRESH_TOKEN_NOT_PROVIDED,\n  USER_NOT_AUTHORIZIED,\n} from '../../auth/auth.constants';\nimport { Reflector } from '@nestjs/core';\nimport { ROLES_KEY } from '../decorators/roles-auth.decorator';\nimport { ApiException } from '../exceptions/api.exception';\nimport { ACCESS_DENIED } from '../../admin/constants/admin.constants';\n\n@Injectable({ scope: Scope.REQUEST })\nexport class UserGuard implements CanActivate {\n  constructor(\n    private readonly userJwtRefreshTokenService: UserJwtRefreshTokenService,\n    private reflector: Reflector,\n  ) {}\n\n  canActivate(\n    context: ExecutionContext,\n  ): boolean | Promise | Observable {\n    return (async () => {\n      const requiredRoles: string[] = this.reflector.getAllAndOverride(\n        ROLES_KEY,\n        [context.getHandler(), context.getClass()],\n      );\n      if (!requiredRoles) {\n        return true;\n      }\n      const req = context.switchToHttp().getRequest();\n      const refreshToken = req?.cookies['refreshToken'];\n      if (!refreshToken) {\n        throw new ApiException(\n          HttpStatus.BAD_REQUEST,\n          'Bad request!',\n          REFRESH_TOKEN_NOT_PROVIDED,\n        );\n      }\n      const decodedRefreshToken = Buffer.from(refreshToken, 'base64').toString(\n        'ascii',\n      );\n      const userRefreshToken = await this.userJwtRefreshTokenService.findToken(\n        decodedRefreshToken,\n      );\n      if (!userRefreshToken) {\n        return false;\n      }\n      const payload: Payload = req?.payload;\n      if (!payload) {\n        throw new ApiException(\n          HttpStatus.UNAUTHORIZED,\n          'Unathorized!',\n          USER_NOT_AUTHORIZIED,\n        );\n      }\n      if (payload.userId !== userRefreshToken.userId) {\n        throw new ApiException(\n          HttpStatus.UNAUTHORIZED,\n          'Unathorized!',\n          USER_NOT_AUTHORIZIED,\n        );\n      }\n      const refreshPayload =\n        await this.userJwtRefreshTokenService.validateRefreshToken(\n          decodedRefreshToken.trim(),\n        );\n      if (\n        !refreshPayload.roles.some(\n          (role: { value: string; description: string }) =>\n            requiredRoles.includes(role.value),\n        )\n      ) {\n        throw new ApiException(\n          HttpStatus.UNAUTHORIZED,\n          'Unathorized!',\n          ACCESS_DENIED,\n        );\n      }\n      return true;\n    })();\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UserInterface.html":{"url":"interfaces/UserInterface.html","title":"interface - UserInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  UserInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/interfaces/user.interfaces.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            addContent\n                                        \n                                \n                                \n                                        \n                                            editContent\n                                        \n                                \n                                \n                                        \n                                            editWebsite\n                                        \n                                \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            isAdmin\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            phoneNumber\n                                        \n                                \n                                \n                                        \n                                            surname\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        addContent\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        addContent:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        editContent\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        editContent:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        editWebsite\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        editWebsite:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isAdmin\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        isAdmin:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        phoneNumber\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        phoneNumber:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        surname\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        surname:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface UserRefreshCreationAttrbs {\n  userId: number;\n  userRefreshToken: string;\n  userAgent: string;\n  email: string;\n}\n\nexport interface RolecreationAttrbs {\n  value: string;\n  description: string;\n}\nexport interface UsercreationAttrbs {\n  name: string;\n  surname: string;\n  email: string;\n  phoneNumber: string;\n  password: string;\n  activationLink: string;\n}\n\nexport interface InitializeUser {\n  name: string;\n  surname: string;\n  phoneNumber: string;\n  email: string;\n  password: string;\n  confirmPassword: string;\n}\n\nexport interface ValidateUser {\n  email: string;\n  password: string;\n}\n\nexport interface UserInterface {\n  id: number;\n  name: string;\n  surname: string;\n  email: string;\n  phoneNumber: string;\n  isAdmin: boolean;\n  addContent: boolean;\n  editContent: boolean;\n  editWebsite: boolean;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserJwtRefreshTokenService.html":{"url":"injectables/UserJwtRefreshTokenService.html","title":"injectable - UserJwtRefreshTokenService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UserJwtRefreshTokenService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/services/jwt-refresh.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                findToken\n                            \n                            \n                                    Async\n                                findTokenByToken\n                            \n                            \n                                    Async\n                                generateRefreshToken\n                            \n                            \n                                    Async\n                                insertToken\n                            \n                            \n                                    Async\n                                removeToken\n                            \n                            \n                                    Async\n                                removeTokenInTime\n                            \n                            \n                                    Async\n                                saveToken\n                            \n                            \n                                    Async\n                                validateRefreshToken\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(jwtService: JwtService, userService: UsersService, sheduleService: TasksService, userRefreshTokenRepository)\n                    \n                \n                        \n                            \n                                Defined in src/users/services/jwt-refresh.service.ts:21\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        jwtService\n                                                  \n                                                        \n                                                                    JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UsersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        sheduleService\n                                                  \n                                                        \n                                                                        TasksService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userRefreshTokenRepository\n                                                  \n                                                        \n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findToken\n                        \n                    \n                \n            \n            \n                \n                    \n                    findToken(userRefreshToken: string)\n                \n            \n\n\n            \n                \n                    Defined in src/users/services/jwt-refresh.service.ts:212\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userRefreshToken\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findTokenByToken\n                        \n                    \n                \n            \n            \n                \n                    \n                    findTokenByToken(userRefreshToken: string, identifier: string)\n                \n            \n\n\n            \n                \n                    Defined in src/users/services/jwt-refresh.service.ts:192\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userRefreshToken\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    identifier\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        generateRefreshToken\n                        \n                    \n                \n            \n            \n                \n                    \n                    generateRefreshToken(payload: CreateUserRefreshTokenDto)\n                \n            \n\n\n            \n                \n                    Defined in src/users/services/jwt-refresh.service.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    payload\n                                    \n                                                CreateUserRefreshTokenDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        insertToken\n                        \n                    \n                \n            \n            \n                \n                    \n                    insertToken(userId: number, userRefreshToken: string, email: string, userAgent: string, expireDate: Date)\n                \n            \n\n\n            \n                \n                    Defined in src/users/services/jwt-refresh.service.ts:67\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    userRefreshToken\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    userAgent\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    expireDate\n                                    \n                                                Date\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        removeToken\n                        \n                    \n                \n            \n            \n                \n                    \n                    removeToken(userRefreshToken: string)\n                \n            \n\n\n            \n                \n                    Defined in src/users/services/jwt-refresh.service.ts:166\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userRefreshToken\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        removeTokenInTime\n                        \n                    \n                \n            \n            \n                \n                    \n                    removeTokenInTime(userRefreshTokenId: number, identifier: string)\n                \n            \n\n\n            \n                \n                    Defined in src/users/services/jwt-refresh.service.ts:234\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userRefreshTokenId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    identifier\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        saveToken\n                        \n                    \n                \n            \n            \n                \n                    \n                    saveToken(userId: number, userRefreshToken: string, email: string, userAgent: string, expireDate: Date, identifier: string)\n                \n            \n\n\n            \n                \n                    Defined in src/users/services/jwt-refresh.service.ts:117\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    userRefreshToken\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    userAgent\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    expireDate\n                                    \n                                                Date\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    identifier\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        validateRefreshToken\n                        \n                    \n                \n            \n            \n                \n                    \n                    validateRefreshToken(userRefreshToken: string)\n                \n            \n\n\n            \n                \n                    Defined in src/users/services/jwt-refresh.service.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userRefreshToken\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpStatus, Injectable, Scope } from '@nestjs/common';\nimport { JwtService } from '@nestjs/jwt';\nimport {\n  ERROR_WHILE_REMOVING_TOKEN,\n  ERROR_WHILE_SAVING_TOKEN,\n  ERROR_WHILE_SIGNING_TOKEN,\n  ERROR_WHILE_VALIDATING_TOKEN,\n  TOKEN_INVALID,\n  TOKEN_NOT_FOUND,\n  USER_NOT_FOUND,\n} from '../constants/jwt-refresh.constants';\nimport { UserRefreshToken } from '../models/user.refresh.token.model';\nimport { UsersService } from './users.service';\nimport { CreateUserRefreshTokenDto } from '../dto/create-user-refresh-token.dto';\nimport { InjectModel } from '@nestjs/sequelize';\nimport { TasksService } from '../../core/services/scedule.service';\nimport { ApiException } from '../../common/exceptions/api.exception';\nimport { v4 } from 'uuid';\n\n@Injectable({ scope: Scope.TRANSIENT })\nexport class UserJwtRefreshTokenService {\n  constructor(\n    private jwtService: JwtService,\n    private userService: UsersService,\n    private sheduleService: TasksService,\n    @InjectModel(UserRefreshToken)\n    private readonly userRefreshTokenRepository: typeof UserRefreshToken,\n  ) {}\n\n  async generateRefreshToken(\n    payload: CreateUserRefreshTokenDto,\n  ): Promise {\n    try {\n      const userRefreshToken = this.jwtService.sign(payload);\n      return userRefreshToken;\n    } catch (err: unknown) {\n      throw new ApiException(\n        HttpStatus.INTERNAL_SERVER_ERROR,\n        'Internal Server Error',\n        ERROR_WHILE_SIGNING_TOKEN,\n      );\n    }\n  }\n\n  async validateRefreshToken(\n    userRefreshToken: string,\n  ): Promise {\n    try {\n      const userData = this.jwtService.verify(userRefreshToken);\n      if (!userData) {\n        throw new ApiException(\n          HttpStatus.BAD_REQUEST,\n          'Bad request',\n          TOKEN_INVALID,\n        );\n      }\n      return userData;\n    } catch (err: unknown) {\n      throw new ApiException(\n        HttpStatus.INTERNAL_SERVER_ERROR,\n        'Internal Server Error',\n        ERROR_WHILE_VALIDATING_TOKEN,\n      );\n    }\n  }\n\n  async insertToken(\n    userId: number,\n    userRefreshToken: string,\n    email: string,\n    userAgent: string,\n    expireDate: Date,\n  ) {\n    try {\n      const user = await this.userService.getUserById(userId);\n      if (!user) {\n        throw new ApiException(\n          HttpStatus.NOT_FOUND,\n          'Not found!',\n          USER_NOT_FOUND,\n        );\n      }\n      const token = await this.userRefreshTokenRepository.create({\n        userRefreshToken: userRefreshToken,\n        userId: user.id,\n        email: email,\n        userAgent:\n          userAgent ||\n          'Mozilla/5.0 (Windows NT 7.0; Win32; x32) AppleWebKit/523.34 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/523.34',\n      });\n      token.setIdentifier(v4());\n      await token.save();\n      if (!token.getExpireDate()) {\n        token.setExpireDate(expireDate);\n        await token.save();\n      }\n      if (\n        !user.getUserRefreshTokens() ||\n        user.getUserRefreshTokens().length === 0\n      ) {\n        user.$set('userRefreshTokens', token.id);\n        user.userRefreshTokens = [token];\n      } else {\n        user.$add('userRefreshTokens', token.id);\n      }\n      await user.save();\n      return token;\n    } catch (err: unknown) {\n      throw new ApiException(\n        HttpStatus.INTERNAL_SERVER_ERROR,\n        'Internal Server Error',\n        ERROR_WHILE_SAVING_TOKEN,\n      );\n    }\n  }\n\n  async saveToken(\n    userId: number,\n    userRefreshToken: string,\n    email: string,\n    userAgent: string,\n    expireDate: Date,\n    identifier: string,\n  ): Promise {\n    try {\n      const user = await this.userService.getUserById(userId);\n      if (!user) {\n        throw new ApiException(\n          HttpStatus.NOT_FOUND,\n          'Not found!',\n          USER_NOT_FOUND,\n        );\n      }\n      const tokenData = await this.userRefreshTokenRepository.findOne({\n        where: {\n          userId: userId,\n          identifier: identifier,\n        },\n      });\n      if (tokenData) {\n        tokenData.userRefreshToken = userRefreshToken;\n        return tokenData.save();\n      }\n      const token = await this.userRefreshTokenRepository.create({\n        userRefreshToken: userRefreshToken,\n        userId: userId,\n        email: email,\n        userAgent:\n          userAgent ||\n          'Mozilla/5.0 (Windows NT 7.0; Win32; x32) AppleWebKit/523.34 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/523.34',\n      });\n      if (!token.getExpireDate()) {\n        token.setExpireDate(expireDate);\n        await token.save();\n      }\n      return token;\n    } catch (err: unknown) {\n      throw new ApiException(\n        HttpStatus.INTERNAL_SERVER_ERROR,\n        'Internal Server Error',\n        ERROR_WHILE_SAVING_TOKEN,\n      );\n    }\n  }\n\n  async removeToken(userRefreshToken: string): Promise {\n    try {\n      const token = await this.findToken(userRefreshToken);\n      if (!token) {\n        throw new ApiException(\n          HttpStatus.NOT_FOUND,\n          'Not found!',\n          TOKEN_NOT_FOUND,\n        );\n      }\n      const user = await this.userService.getUserById(token.userId);\n      user.$remove('userRefreshTokens', token.token.id);\n      await user.save();\n      const tokenData = await this.userRefreshTokenRepository.destroy({\n        where: { userRefreshToken: userRefreshToken },\n      });\n      return tokenData;\n    } catch (err: unknown) {\n      throw new ApiException(\n        HttpStatus.INTERNAL_SERVER_ERROR,\n        'Internal Server Error',\n        ERROR_WHILE_REMOVING_TOKEN,\n      );\n    }\n  }\n\n  async findTokenByToken(\n    userRefreshToken: string,\n    identifier: string,\n  ): Promise {\n    const token = await UserRefreshToken.findOne({\n      where: {\n        userRefreshToken: userRefreshToken,\n        identifier: identifier,\n      },\n    });\n    if (!token) {\n      throw new ApiException(\n        HttpStatus.NOT_FOUND,\n        'Not found!',\n        TOKEN_NOT_FOUND,\n      );\n    }\n    return token;\n  }\n\n  async findToken(userRefreshToken: string): Promise {\n    const token = await UserRefreshToken.findOne({\n      where: {\n        userRefreshToken: userRefreshToken,\n      },\n    });\n    if (!token) {\n      throw new ApiException(\n        HttpStatus.NOT_FOUND,\n        'Not found!',\n        TOKEN_NOT_FOUND,\n      );\n    }\n    return {\n      token: token,\n      userId: token.userId,\n    };\n  }\n\n  async removeTokenInTime(\n    userRefreshTokenId: number,\n    identifier: string,\n  ): Promise {\n    const token = await this.userRefreshTokenRepository.findOne({\n      where: {\n        id: userRefreshTokenId,\n        identifier: identifier,\n      },\n    });\n    if (!token) {\n      return false;\n    }\n    const user = await this.userService.getUserById(token.userId);\n    user.$remove('userRefreshTokens', token.id);\n    await user.save();\n    return this.userRefreshTokenRepository.destroy({\n      where: { id: userRefreshTokenId, identifier: identifier },\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserMiddleware.html":{"url":"injectables/UserMiddleware.html","title":"injectable - UserMiddleware","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UserMiddleware\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/middlewares/product.mddleware.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                use\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        use\n                        \n                    \n                \n            \n            \n                \nuse(req: Request, res: Response, next: NextFunction)\n                \n            \n\n\n            \n                \n                    Defined in src/common/middlewares/product.mddleware.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                            NextFunction\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  Injectable,\n  NestMiddleware,\n  Next,\n  Req,\n  Res,\n  Scope,\n} from '@nestjs/common';\nimport { Request, Response, NextFunction } from 'express';\n\n@Injectable({ scope: Scope.REQUEST })\nexport class UserMiddleware implements NestMiddleware {\n  use(@Req() req: Request, @Res() res: Response, @Next() next: NextFunction) {\n    try {\n      const userAgent = req.headers['user-agent'];\n      res.setHeader('Access-Control-Request-Headers', 'Authorization');\n      res.setHeader('Access-Control-Request-Method', 'POST, GET, PUT, PATCH');\n      res.setHeader('Timing-Allow-Origin', `${process.env.CLIENT_URL.trim()}`);\n      res.setHeader('X-Content-Type-Options', 'nosniff');\n      req['userAgent'] = userAgent;\n      return next();\n    } catch (err: unknown) {\n      return next(err);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserMiddleware-1.html":{"url":"injectables/UserMiddleware-1.html","title":"injectable - UserMiddleware-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UserMiddleware\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/middlewares/user.middleware.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                use\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        use\n                        \n                    \n                \n            \n            \n                \nuse(req: Request, res: Response, next: NextFunction)\n                \n            \n\n\n            \n                \n                    Defined in src/common/middlewares/user.middleware.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                            NextFunction\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  Injectable,\n  NestMiddleware,\n  Next,\n  Req,\n  Res,\n  Scope,\n} from '@nestjs/common';\nimport { Request, Response, NextFunction } from 'express';\n\n@Injectable({ scope: Scope.REQUEST })\nexport class UserMiddleware implements NestMiddleware {\n  use(@Req() req: Request, @Res() res: Response, @Next() next: NextFunction) {\n    try {\n      const userAgent = req.headers['user-agent'];\n      res.setHeader('Access-Control-Request-Headers', 'Authorization');\n      res.setHeader('Access-Control-Request-Method', 'POST, GET, PUT, PATCH');\n      res.setHeader('Timing-Allow-Origin', `${process.env.CLIENT_URL.trim()}`);\n      res.setHeader('X-Content-Type-Options', 'nosniff');\n      req['userAgent'] = userAgent;\n      return next();\n    } catch (err: unknown) {\n      return next(err);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UserRefreshCreationAttrbs.html":{"url":"interfaces/UserRefreshCreationAttrbs.html","title":"interface - UserRefreshCreationAttrbs","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  UserRefreshCreationAttrbs\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/interfaces/user.interfaces.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            userAgent\n                                        \n                                \n                                \n                                        \n                                            userId\n                                        \n                                \n                                \n                                        \n                                            userRefreshToken\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        userAgent\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        userAgent:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        userId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        userId:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        userRefreshToken\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        userRefreshToken:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface UserRefreshCreationAttrbs {\n  userId: number;\n  userRefreshToken: string;\n  userAgent: string;\n  email: string;\n}\n\nexport interface RolecreationAttrbs {\n  value: string;\n  description: string;\n}\nexport interface UsercreationAttrbs {\n  name: string;\n  surname: string;\n  email: string;\n  phoneNumber: string;\n  password: string;\n  activationLink: string;\n}\n\nexport interface InitializeUser {\n  name: string;\n  surname: string;\n  phoneNumber: string;\n  email: string;\n  password: string;\n  confirmPassword: string;\n}\n\nexport interface ValidateUser {\n  email: string;\n  password: string;\n}\n\nexport interface UserInterface {\n  id: number;\n  name: string;\n  surname: string;\n  email: string;\n  phoneNumber: string;\n  isAdmin: boolean;\n  addContent: boolean;\n  editContent: boolean;\n  editWebsite: boolean;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserRefreshToken.html":{"url":"classes/UserRefreshToken.html","title":"class - UserRefreshToken","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserRefreshToken\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/models/user.refresh.token.model.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    Model\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                email\n                            \n                            \n                                    Private\n                                expireDate\n                            \n                            \n                                    Public\n                                id\n                            \n                            \n                                    Public\n                                identifier\n                            \n                            \n                                    Private\n                                user\n                            \n                            \n                                    Public\n                                userId\n                            \n                            \n                                    Public\n                                userRefreshToken\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getExpireDate\n                            \n                            \n                                getIdentifier\n                            \n                            \n                                getUser\n                            \n                            \n                                getuserId\n                            \n                            \n                                setExpireDate\n                            \n                            \n                                setIdentifier\n                            \n                            \n                                setuserId\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'user@gmail.com', description: 'user`s email'})@IsEmail()@Column({type: undefined, unique: false, allowNull: false, field: 'email'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/models/user.refresh.token.model.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        expireDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: '86400000', description: 'expireDate'})@Column({type: undefined, field: 'expireDate'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/models/user.refresh.token.model.ts:71\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: '1', description: 'unique identifier'})@Column({type: undefined, unique: true, autoIncrement: true, primaryKey: true, allowNull: false, field: 'id'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/models/user.refresh.token.model.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        identifier\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: '9b1deb4d-3b7d-4bad-9bdd-2b0d7b3dcb6d', description: 'identifier'})@IsUUID(4)@Column({type: undefined, unique: true, allowNull: true, field: 'identifier'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/models/user.refresh.token.model.ts:84\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @BelongsTo(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/models/user.refresh.token.model.ts:87\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        userId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: '1', description: 'userId'})@ForeignKey(undefined)@IsInt()@Column({type: undefined, field: 'userId', unique: false, allowNull: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/models/user.refresh.token.model.ts:64\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        userRefreshToken\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'eyJuilbgghbGciOiJIUzihnuohlI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjEsImlzQWN0aXZhdGVkIjpmYWxzZSwiZW1haWwiOiJ1c2VyQGdtYWlsLmNvbSIsInJvbGVzIjpbeyJpZCI6MSwidmFsdWUiOiJVU0VSIiwiZGVzY3JpcHRpb24iOiJzaW1wbGUgdXNlciIsInJpZ2h0MSI6ZmFsc2UsInJpZ2h0MiI6ZmFsc2UsImNyZWF0ZWRBdCI6IjIwMjMtMDEtMTZUMTA6NDE6MjguOTY5WiIsInVwZGF0ZWRBdCI6IjIwMjMtMDEtMTZUMTA6NDE6MjguOTY5WiIsIlVzZXJSb2xlcyI6eyJpZCI6MSwicm9sZUlkIjoxLCJ1c2VySWQiOjEsImFkbWluSWQiOm51bGx9fV0sImlhdCI6MTY3Mzg2NTcxNiwiZXhwIjoxNjczODY5MzE2fQ.cx0YqrXwrvrL8wNMsnTiitL632ORCOxYUJuNQ-g4lOc', description: 'user`s refresh token'})@Column({type: undefined, unique: true, allowNull: false, field: 'userRefreshToken'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/models/user.refresh.token.model.ts:53\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getExpireDate\n                        \n                    \n                \n            \n            \n                \ngetExpireDate()\n                \n            \n\n\n            \n                \n                    Defined in src/users/models/user.refresh.token.model.ts:89\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Date\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getIdentifier\n                        \n                    \n                \n            \n            \n                \ngetIdentifier()\n                \n            \n\n\n            \n                \n                    Defined in src/users/models/user.refresh.token.model.ts:111\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getUser\n                        \n                    \n                \n            \n            \n                \ngetUser()\n                \n            \n\n\n            \n                \n                    Defined in src/users/models/user.refresh.token.model.ts:107\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         User\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getuserId\n                        \n                    \n                \n            \n            \n                \ngetuserId()\n                \n            \n\n\n            \n                \n                    Defined in src/users/models/user.refresh.token.model.ts:98\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         number\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setExpireDate\n                        \n                    \n                \n            \n            \n                \nsetExpireDate(expireDate: Date)\n                \n            \n\n\n            \n                \n                    Defined in src/users/models/user.refresh.token.model.ts:93\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    expireDate\n                                    \n                                                Date\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Date\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setIdentifier\n                        \n                    \n                \n            \n            \n                \nsetIdentifier(identifier: string)\n                \n            \n\n\n            \n                \n                    Defined in src/users/models/user.refresh.token.model.ts:115\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    identifier\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setuserId\n                        \n                    \n                \n            \n            \n                \nsetuserId(userId: number)\n                \n            \n\n\n            \n                \n                    Defined in src/users/models/user.refresh.token.model.ts:102\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport {\n  Column,\n  DataType,\n  Table,\n  Model,\n  ForeignKey,\n  IsEmail,\n  IsInt,\n  BelongsTo,\n  IsUUID,\n} from 'sequelize-typescript';\nimport { UserRefreshCreationAttrbs } from '../../core/interfaces/user.interfaces';\nimport { User } from './user.model';\n\n@Table({ tableName: 'USER`S_Refresh-tokens' })\nexport class UserRefreshToken extends Model {\n  @ApiProperty({ example: '1', description: 'unique identifier' })\n  @Column({\n    type: DataType.INTEGER,\n    unique: true,\n    autoIncrement: true,\n    primaryKey: true,\n    allowNull: false,\n    field: 'id',\n  })\n  public id: number;\n\n  @ApiProperty({ example: 'user@gmail.com', description: 'user`s email' })\n  @IsEmail\n  @Column({\n    type: DataType.STRING,\n    unique: false,\n    allowNull: false,\n    field: 'email',\n  })\n  public email: string;\n\n  @ApiProperty({\n    example:\n      'eyJuilbgghbGciOiJIUzihnuohlI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjEsImlzQWN0aXZhdGVkIjpmYWxzZSwiZW1haWwiOiJ1c2VyQGdtYWlsLmNvbSIsInJvbGVzIjpbeyJpZCI6MSwidmFsdWUiOiJVU0VSIiwiZGVzY3JpcHRpb24iOiJzaW1wbGUgdXNlciIsInJpZ2h0MSI6ZmFsc2UsInJpZ2h0MiI6ZmFsc2UsImNyZWF0ZWRBdCI6IjIwMjMtMDEtMTZUMTA6NDE6MjguOTY5WiIsInVwZGF0ZWRBdCI6IjIwMjMtMDEtMTZUMTA6NDE6MjguOTY5WiIsIlVzZXJSb2xlcyI6eyJpZCI6MSwicm9sZUlkIjoxLCJ1c2VySWQiOjEsImFkbWluSWQiOm51bGx9fV0sImlhdCI6MTY3Mzg2NTcxNiwiZXhwIjoxNjczODY5MzE2fQ.cx0YqrXwrvrL8wNMsnTiitL632ORCOxYUJuNQ-g4lOc',\n    description: 'user`s refresh token',\n  })\n  @Column({\n    type: DataType.CHAR(2500),\n    unique: true,\n    allowNull: false,\n    field: 'userRefreshToken',\n  })\n  public userRefreshToken: string;\n\n  @ApiProperty({ example: '1', description: 'userId' })\n  @ForeignKey(() => User)\n  @IsInt\n  @Column({\n    type: DataType.INTEGER,\n    field: 'userId',\n    unique: false,\n    allowNull: false,\n  })\n  public userId: number;\n\n  @ApiProperty({ example: '86400000', description: 'expireDate' })\n  @Column({\n    type: DataType.DATE,\n    field: 'expireDate',\n  })\n  private expireDate: Date;\n\n  @ApiProperty({\n    example: '9b1deb4d-3b7d-4bad-9bdd-2b0d7b3dcb6d',\n    description: 'identifier',\n  })\n  @IsUUID(4)\n  @Column({\n    type: DataType.STRING,\n    unique: true,\n    allowNull: true,\n    field: 'identifier',\n  })\n  public identifier: string;\n\n  @BelongsTo(() => User)\n  private user: User;\n\n  getExpireDate(): Date {\n    return this.expireDate;\n  }\n\n  setExpireDate(expireDate: Date): Date {\n    this.expireDate = expireDate;\n    return this.expireDate;\n  }\n\n  getuserId(): number {\n    return this.userId;\n  }\n\n  setuserId(userId: number): number {\n    this.userId = userId;\n    return this.userId;\n  }\n\n  getUser(): User {\n    return this.user;\n  }\n\n  getIdentifier(): string {\n    return this.identifier;\n  }\n\n  setIdentifier(identifier: string): string {\n    this.identifier = identifier;\n    return this.identifier;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserRoles.html":{"url":"classes/UserRoles.html","title":"class - UserRoles","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserRoles\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/roles/models/user.roles.model.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    Model\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                adminId\n                            \n                            \n                                    Public\n                                id\n                            \n                            \n                                    Public\n                                ownerId\n                            \n                            \n                                    Public\n                                roleId\n                            \n                            \n                                    Public\n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        adminId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: '1', description: 'adminId'})@ForeignKey(undefined)@Column({type: undefined, field: 'adminId'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/roles/models/user.roles.model.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: '1', description: 'unique identifier'})@Column({type: undefined, unique: true, autoIncrement: true, primaryKey: true, allowNull: false, field: 'id'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/roles/models/user.roles.model.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        ownerId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: '1', description: 'ownerId'})@ForeignKey(undefined)@Column({type: undefined, field: 'ownerId'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/roles/models/user.roles.model.ts:55\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        roleId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: '1', description: 'roleId'})@ForeignKey(undefined)@Column({type: undefined, field: 'roleId'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/roles/models/user.roles.model.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        userId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: '1', description: 'userId'})@ForeignKey(undefined)@Column({type: undefined, field: 'userId'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/roles/models/user.roles.model.ts:39\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport {\n  Column,\n  DataType,\n  Table,\n  Model,\n  ForeignKey,\n} from 'sequelize-typescript';\nimport { Owner } from '../../owner/models/owner.model';\nimport { Admin } from '../../admin/models/admin.model';\nimport { User } from '../../users/models/user.model';\nimport { Role } from './roles.model';\n\n@Table({ tableName: 'USER`s_Roles', createdAt: false, updatedAt: false })\nexport class UserRoles extends Model {\n  @ApiProperty({ example: '1', description: 'unique identifier' })\n  @Column({\n    type: DataType.INTEGER,\n    unique: true,\n    autoIncrement: true,\n    primaryKey: true,\n    allowNull: false,\n    field: 'id',\n  })\n  public id: number;\n  @ApiProperty({ example: '1', description: 'roleId' })\n  @ForeignKey(() => Role)\n  @Column({\n    type: DataType.INTEGER,\n    field: 'roleId',\n  })\n  public roleId: number;\n  @ApiProperty({ example: '1', description: 'userId' })\n  @ForeignKey(() => User)\n  @Column({\n    type: DataType.INTEGER,\n    field: 'userId',\n  })\n  public userId: number;\n\n  @ApiProperty({ example: '1', description: 'adminId' })\n  @ForeignKey(() => Admin)\n  @Column({\n    type: DataType.INTEGER,\n    field: 'adminId',\n  })\n  public adminId: number;\n\n  @ApiProperty({ example: '1', description: 'ownerId' })\n  @ForeignKey(() => Owner)\n  @Column({\n    type: DataType.INTEGER,\n    field: 'ownerId',\n  })\n  public ownerId: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UsercreationAttrbs.html":{"url":"interfaces/UsercreationAttrbs.html","title":"interface - UsercreationAttrbs","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  UsercreationAttrbs\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/interfaces/user.interfaces.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            activationLink\n                                        \n                                \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            password\n                                        \n                                \n                                \n                                        \n                                            phoneNumber\n                                        \n                                \n                                \n                                        \n                                            surname\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        activationLink\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        activationLink:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        password\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        password:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        phoneNumber\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        phoneNumber:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        surname\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        surname:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface UserRefreshCreationAttrbs {\n  userId: number;\n  userRefreshToken: string;\n  userAgent: string;\n  email: string;\n}\n\nexport interface RolecreationAttrbs {\n  value: string;\n  description: string;\n}\nexport interface UsercreationAttrbs {\n  name: string;\n  surname: string;\n  email: string;\n  phoneNumber: string;\n  password: string;\n  activationLink: string;\n}\n\nexport interface InitializeUser {\n  name: string;\n  surname: string;\n  phoneNumber: string;\n  email: string;\n  password: string;\n  confirmPassword: string;\n}\n\nexport interface ValidateUser {\n  email: string;\n  password: string;\n}\n\nexport interface UserInterface {\n  id: number;\n  name: string;\n  surname: string;\n  email: string;\n  phoneNumber: string;\n  isAdmin: boolean;\n  addContent: boolean;\n  editContent: boolean;\n  editWebsite: boolean;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/UsersController.html":{"url":"controllers/UsersController.html","title":"controller - UsersController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  UsersController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/users.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                user\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                banUser\n                            \n                            \n                                findUser\n                            \n                            \n                                getAllUsers\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        banUser\n                        \n                    \n                \n            \n            \n                \nbanUser(dto: BanUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Throttle(40, 400)@ApiOperation({summary: 'Ban a user'})@ApiResponse({status: 200})@Roles('OWNER')@UseGuards(JwtAuthGuard, RolesGuard, OwnerAdminGuard, AuthFerfershGuard)@Post('/ban')\n                \n            \n\n            \n                \n                    Defined in src/users/users.controller.ts:90\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dto\n                                    \n                                                BanUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findUser\n                        \n                    \n                \n            \n            \n                \nfindUser(v: string[], page: number, pageSize: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Throttle(60, 700)@ApiOperation({summary: 'Getting User'})@ApiResponse({status: 200, type: User})@Roles('OWNER')@UseGuards(JwtAuthGuard, RolesGuard, OwnerAdminGuard, AuthFerfershGuard)@Get('/find_users')\n                \n            \n\n            \n                \n                    Defined in src/users/users.controller.ts:76\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    v\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    page\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    pageSize\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAllUsers\n                        \n                    \n                \n            \n            \n                \ngetAllUsers(page: number, pageSize: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Throttle(40, 400)@ApiOperation({summary: 'Getting Users'})@ApiResponse({status: 200, type: undefined})@Roles('OWNER')@UseGuards(JwtAuthGuard, RolesGuard, OwnerAdminGuard, AuthFerfershGuard)@Get('/get_users')\n                \n            \n\n            \n                \n                    Defined in src/users/users.controller.ts:63\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    page\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    pageSize\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(response: Response, request: Request, next: NextFunction, userId: number, userDto: UpdateUserDto, userAgent: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Throttle(40, 400)@Roles('USER')@UseGuards(JwtAuthGuard, RolesGuard, UserGuard)@HttpCode(201)@Patch('update')\n                \n            \n\n            \n                \n                    Defined in src/users/users.controller.ts:99\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    response\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    request\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                            NextFunction\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    userId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    userDto\n                                    \n                                                UpdateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    userAgent\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Get,\n  Post,\n  Body,\n  UseGuards,\n  HttpCode,\n  Patch,\n  Req,\n  Res,\n  Next,\n  ClassSerializerInterceptor,\n  UseInterceptors,\n  Query,\n  ParseIntPipe,\n  ParseArrayPipe,\n  UseFilters,\n} from '@nestjs/common';\nimport {\n  ApiBearerAuth,\n  ApiOperation,\n  ApiResponse,\n  ApiTags,\n} from '@nestjs/swagger';\nimport { Roles } from '../common/decorators/roles-auth.decorator';\nimport { JwtAuthGuard } from '../common/guards/jwt-auth.guard';\nimport { User } from './models/user.model';\nimport { UsersService } from './services/users.service';\nimport { RolesGuard } from '../common/guards/roles.guard';\nimport { BanUserDto } from './dto/ban-user.dto';\nimport { Throttle } from '@nestjs/throttler';\nimport { ThrottlerBehindProxyGuard } from '../common/guards/throttler-behind-proxy.guard';\nimport { AuthService } from '../auth/auth.service';\nimport { UpdateUserDto } from './dto/update-user.dto';\nimport { NextFunction, Request, Response } from 'express';\nimport { UserAgent } from '../common/decorators/user-agent.decorator';\nimport { UserId } from '../common/decorators/user.id.decorator';\nimport { UserGuard } from '../common/guards/user.guard';\nimport { UserInterface } from '../core/interfaces/user.interfaces';\nimport { OwnerAdminGuard } from '../common/guards/owner-admin.guard';\nimport { AuthFerfershGuard } from '../common/guards/jw-refresh.guard';\nimport { ApiErrorExceptionFilter } from '../common/filters/error-handler.filter';\nimport { ApiExceptionFilter } from '../common/filters/api-exception.filter';\n\n@UseGuards(ThrottlerBehindProxyGuard)\n@UseFilters(ApiErrorExceptionFilter, ApiExceptionFilter)\n@UseInterceptors(ClassSerializerInterceptor)\n@ApiTags('users')\n@ApiBearerAuth('JWT-auth')\n@Controller('user')\nexport class UsersController {\n  constructor(\n    private readonly userService: UsersService,\n    private readonly authService: AuthService,\n  ) {}\n\n  @Throttle(40, 400)\n  @ApiOperation({ summary: 'Getting Users' })\n  @ApiResponse({ status: 200, type: [User] })\n  @Roles('OWNER')\n  @UseGuards(JwtAuthGuard, RolesGuard, OwnerAdminGuard, AuthFerfershGuard)\n  @Get('/get_users')\n  getAllUsers(\n    @Query('page', ParseIntPipe) page: number,\n    @Query('pageSize', ParseIntPipe) pageSize: number,\n  ): Promise {\n    return this.userService.getAllUsers(page, pageSize);\n  }\n\n  @Throttle(60, 700)\n  @ApiOperation({ summary: 'Getting User' })\n  @ApiResponse({ status: 200, type: User })\n  @Roles('OWNER')\n  @UseGuards(JwtAuthGuard, RolesGuard, OwnerAdminGuard, AuthFerfershGuard)\n  @Get('/find_users')\n  findUser(\n    @Query('v', ParseArrayPipe) v: string[],\n    @Query('page', ParseIntPipe) page: number,\n    @Query('pageSize', ParseIntPipe) pageSize: number,\n  ) {\n    return this.userService.findUser(v, page, pageSize);\n  }\n\n  @Throttle(40, 400)\n  @ApiOperation({ summary: 'Ban a user' })\n  @ApiResponse({ status: 200 })\n  @Roles('OWNER')\n  @UseGuards(JwtAuthGuard, RolesGuard, OwnerAdminGuard, AuthFerfershGuard)\n  @Post('/ban')\n  banUser(@Body() dto: BanUserDto) {\n    return this.userService.banUser(dto);\n  }\n\n  @Throttle(40, 400)\n  @Roles('USER')\n  @UseGuards(JwtAuthGuard, RolesGuard, UserGuard)\n  @HttpCode(201)\n  @Patch('update')\n  update(\n    @Res() response: Response,\n    @Req() request: Request,\n    @Next() next: NextFunction,\n    @UserId('USER-ID') userId: number,\n    @Body() userDto: UpdateUserDto,\n    @UserAgent('USER-AGENT') userAgent: string,\n  ) {\n    (async () => {\n      await this.userService.updateUser(userDto, userId);\n      return this.authService.refresh(response, request, next, null, userAgent);\n    })();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UsersModule.html":{"url":"modules/UsersModule.html","title":"module - UsersModule","body":"\n                   \n\n\n\n\n    Modules\n    UsersModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_exports\n\n\n\ncluster_UsersModule_providers\n\n\n\n\nUserJwtRefreshTokenService \n\nUserJwtRefreshTokenService \n\n\n\nUsersService \n\nUsersService \n\n\n\nUsersModule\n\nUsersModule\n\nUserJwtRefreshTokenService  -->\n\nUsersModule->UserJwtRefreshTokenService \n\n\n\nUsersService  -->\n\nUsersModule->UsersService \n\n\n\n\n\nAuthService\n\nAuthService\n\nUsersModule -->\n\nAuthService->UsersModule\n\n\n\n\n\nCurrencyService\n\nCurrencyService\n\nUsersModule -->\n\nCurrencyService->UsersModule\n\n\n\n\n\nTasksService\n\nTasksService\n\nUsersModule -->\n\nTasksService->UsersModule\n\n\n\n\n\nUserJwtRefreshTokenService\n\nUserJwtRefreshTokenService\n\nUsersModule -->\n\nUserJwtRefreshTokenService->UsersModule\n\n\n\n\n\nUsersService\n\nUsersService\n\nUsersModule -->\n\nUsersService->UsersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/users/users.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AuthService\n                        \n                        \n                            CurrencyService\n                        \n                        \n                            TasksService\n                        \n                        \n                            UserJwtRefreshTokenService\n                        \n                        \n                            UsersService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            UsersController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            UserJwtRefreshTokenService\n                        \n                        \n                            UsersService\n                        \n                    \n                \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        configure\n                        \n                    \n                \n            \n            \n                \nconfigure(consumer: MiddlewareConsumer)\n                \n            \n\n\n            \n                \n                    Defined in src/users/users.module.ts:108\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    consumer\n                                    \n                                            MiddlewareConsumer\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        import {\n  forwardRef,\n  MiddlewareConsumer,\n  Module,\n  NestModule,\n  RequestMethod,\n} from '@nestjs/common';\nimport { UsersController } from './users.controller';\nimport { UsersService } from './services/users.service';\nimport { SequelizeModule } from '@nestjs/sequelize';\nimport { User } from './models/user.model';\nimport { Role } from '../roles/models/roles.model';\nimport { UserRoles } from '../roles/models/user.roles.model';\nimport { RolesModule } from '../roles/roles.module';\nimport { AuthModule } from '../auth/auth.module';\nimport { UserRefreshToken } from './models/user.refresh.token.model';\nimport { JwtModule } from '@nestjs/jwt';\nimport { UserJwtRefreshTokenService } from './services/jwt-refresh.service';\nimport { UserMiddleware } from '../common/middlewares/user.middleware';\nimport { InitializeUserMiddleware } from '../common/middlewares/initialize-user.middleware';\nimport { AdminRefreshToken } from '../admin/models/admin.refresh.token.model';\nimport { Admin } from '../admin/models/admin.model';\nimport { AdminModule } from '../admin/admin.module';\nimport { Owner } from '../owner/models/owner.model';\nimport { OwnerRefreshToken } from '../owner/models/owner.refresh.token.model';\nimport { OwnerModule } from '../owner/owner.module';\nimport RequestValidator from '../common/pipes/body-validator.pipe';\nimport { UpdateUserDto } from './dto/update-user.dto';\nimport { ConfigModule } from '@nestjs/config';\nimport { TasksService } from '../core/services/scedule.service';\nimport { CoreModule } from '../core/core.module';\nimport { ProductModule } from '../product/product.module';\nimport { CartProduct } from '../cart/models/cart.product.model';\nimport { Cart } from '../cart/models/cart.model';\nimport { Colour } from '../categories&colours/models/colours.model';\nimport { ProductColours } from '../categories&colours/models/product.colour.model';\nimport { Category } from '../categories&colours/models/category.model';\nimport { ProductCategories } from '../categories&colours/models/product.categories.model';\nimport { Order } from '../orders/models/order.model';\nimport { OrderProduct } from '../orders/models/order.product.model';\nimport { Product } from '../product/models/product.model';\nimport { AuthService } from '../auth/auth.service';\nimport { MailModule } from '../mail/mail.module';\nimport { BookmarksProducts } from '../product/models/bookmark.products';\nimport { WatchedProducts } from '../product/models/watched.products.model';\nimport { Currencies } from '../owner/models/currencies.model';\nimport { HttpModule } from '@nestjs/axios';\nimport { CurrencyService } from '../owner/services/currency.service';\n@Module({\n  controllers: [UsersController],\n  imports: [\n    HttpModule,\n    ConfigModule.forRoot({\n      envFilePath: `.${process.env.NODE_ENV}.env`,\n      expandVariables: true,\n      isGlobal: true,\n    }),\n    SequelizeModule.forFeature([\n      Product,\n      Order,\n      OrderProduct,\n      Category,\n      ProductCategories,\n      Admin,\n      AdminRefreshToken,\n      Owner,\n      OwnerRefreshToken,\n      User,\n      UserRefreshToken,\n      Role,\n      UserRoles,\n      Cart,\n      CartProduct,\n      Currencies,\n      BookmarksProducts,\n      WatchedProducts,\n      Currencies,\n      Colour,\n      ProductColours,\n    ]),\n    JwtModule.register({\n      secret:\n        process.env.JWT_REFRESH_USER_SECRET.toString().trim() ||\n        'knfdgfhRRljhtop6hfdghshfdshfohjlymhnhgnljjukfty6yujhjbjlvcglkidrtujhtrfujuj',\n      signOptions: {\n        expiresIn: 604800000,\n      },\n    }),\n    forwardRef(() => MailModule),\n    forwardRef(() => ProductModule),\n    forwardRef(() => CoreModule),\n    forwardRef(() => AdminModule),\n    forwardRef(() => RolesModule),\n    forwardRef(() => AuthModule),\n    forwardRef(() => OwnerModule),\n    forwardRef(() => UsersModule),\n  ],\n  providers: [\n    UsersService,\n    UserJwtRefreshTokenService,\n    TasksService,\n    AuthService,\n    CurrencyService,\n  ],\n  exports: [UsersService, UserJwtRefreshTokenService],\n})\nexport class UsersModule implements NestModule {\n  configure(consumer: MiddlewareConsumer) {\n    consumer\n      .apply(UserMiddleware)\n      .forRoutes({ path: 'users/update', method: RequestMethod.PATCH });\n    consumer\n      .apply(RequestValidator.validate(UpdateUserDto))\n      .forRoutes({ path: 'users/update', method: RequestMethod.PATCH });\n    consumer\n      .apply(InitializeUserMiddleware)\n      .forRoutes(\n        { path: 'user/get_users', method: RequestMethod.GET },\n        { path: 'user/find_users', method: RequestMethod.GET },\n      );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UsersService.html":{"url":"injectables/UsersService.html","title":"injectable - UsersService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UsersService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/services/users.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                addRole\n                            \n                            \n                                    Async\n                                banUser\n                            \n                            \n                                    Async\n                                changePassword\n                            \n                            \n                                    Async\n                                createUser\n                            \n                            \n                                    Async\n                                findUser\n                            \n                            \n                                    Async\n                                getAllUsers\n                            \n                            \n                                    Async\n                                getUserByEmail\n                            \n                            \n                                    Async\n                                getUserById\n                            \n                            \n                                    Async\n                                getUserByPhoneNumber\n                            \n                            \n                                    Async\n                                initializeUser\n                            \n                            \n                                    Async\n                                resetPassword\n                            \n                            \n                                    Async\n                                rewritePassword\n                            \n                            \n                                    Async\n                                setConfirmCode\n                            \n                            \n                                    Async\n                                updateUser\n                            \n                            \n                                    Async\n                                validateUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userRepository, roleService: RolesService)\n                    \n                \n                        \n                            \n                                Defined in src/users/services/users.service.ts:30\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userRepository\n                                                  \n                                                        \n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        roleService\n                                                  \n                                                        \n                                                                        RolesService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        addRole\n                        \n                    \n                \n            \n            \n                \n                    \n                    addRole(dto: AddRoleDto)\n                \n            \n\n\n            \n                \n                    Defined in src/users/services/users.service.ts:208\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dto\n                                    \n                                                AddRoleDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        banUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    banUser(dto: BanUserDto)\n                \n            \n\n\n            \n                \n                    Defined in src/users/services/users.service.ts:224\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dto\n                                    \n                                                BanUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        changePassword\n                        \n                    \n                \n            \n            \n                \n                    \n                    changePassword(userId: number, password: string)\n                \n            \n\n\n            \n                \n                    Defined in src/users/services/users.service.ts:297\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        createUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    createUser(dto: CreateUserDto)\n                \n            \n\n\n            \n                \n                    Defined in src/users/services/users.service.ts:126\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dto\n                                    \n                                                CreateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    findUser(v: string[], page: number, userPerPage: number)\n                \n            \n\n\n            \n                \n                    Defined in src/users/services/users.service.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    v\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    page\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    userPerPage\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getAllUsers\n                        \n                    \n                \n            \n            \n                \n                    \n                    getAllUsers(page: number, userPerPage: number)\n                \n            \n\n\n            \n                \n                    Defined in src/users/services/users.service.ts:150\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    page\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    userPerPage\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getUserByEmail\n                        \n                    \n                \n            \n            \n                \n                    \n                    getUserByEmail(email: string)\n                \n            \n\n\n            \n                \n                    Defined in src/users/services/users.service.ts:192\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getUserById\n                        \n                    \n                \n            \n            \n                \n                    \n                    getUserById(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/users/services/users.service.ts:178\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getUserByPhoneNumber\n                        \n                    \n                \n            \n            \n                \n                    \n                    getUserByPhoneNumber(phoneNumber: string)\n                \n            \n\n\n            \n                \n                    Defined in src/users/services/users.service.ts:200\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    phoneNumber\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        initializeUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    initializeUser(userDto: InitializeUser)\n                \n            \n\n\n            \n                \n                    Defined in src/users/services/users.service.ts:80\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userDto\n                                    \n                                                InitializeUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        resetPassword\n                        \n                    \n                \n            \n            \n                \n                    \n                    resetPassword(resetDto: ResetDto)\n                \n            \n\n\n            \n                \n                    Defined in src/users/services/users.service.ts:270\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    resetDto\n                                    \n                                                ResetDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        rewritePassword\n                        \n                    \n                \n            \n            \n                \n                    \n                    rewritePassword(userId: number, password: string)\n                \n            \n\n\n            \n                \n                    Defined in src/users/services/users.service.ts:309\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        setConfirmCode\n                        \n                    \n                \n            \n            \n                \n                    \n                    setConfirmCode(codeDto: CodeDto, code: number)\n                \n            \n\n\n            \n                \n                    Defined in src/users/services/users.service.ts:262\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    codeDto\n                                    \n                                                CodeDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    code\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        updateUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateUser(userDto: UpdateUserDto, userId: number)\n                \n            \n\n\n            \n                \n                    Defined in src/users/services/users.service.ts:109\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userDto\n                                    \n                                                UpdateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    userId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        validateUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    validateUser(userDto: ValidateUser)\n                \n            \n\n\n            \n                \n                    Defined in src/users/services/users.service.ts:239\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userDto\n                                    \n                                                ValidateUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpStatus, Injectable, Scope } from '@nestjs/common';\nimport { InjectModel } from '@nestjs/sequelize';\nimport { RolesService } from '../../roles/roles.service';\nimport { AddRoleDto } from '../dto/add-role.dto';\nimport { BanUserDto } from '../dto/ban-user.dto';\nimport { CreateUserDto } from '../dto/create-user.dto';\nimport {\n  INVALID_CODE,\n  INVALID_EMAIL,\n  INVALID_EMAIL_OR_PASSWORD,\n  RESET_TIME_EXPIRED,\n  USER_NOT_FOUND,\n  USER_OR_ROLE_NOT_FOUND,\n  USER_WITH_EMAIL_DOESNT_EXIST,\n  USER_WITH_EMAIL_EXIST,\n  USER_WITH_PHONENUMBER_EXIST,\n} from '../constants/user.constants';\nimport { User } from '../models/user.model';\nimport * as bcrypt from 'bcrypt';\nimport {\n  InitializeUser,\n  UserInterface,\n  ValidateUser,\n} from '../../core/interfaces/user.interfaces';\nimport { ResetDto } from '../../auth/dto/reset.password.dto';\nimport { CodeDto } from '../../core/interfaces/auth.interfaces';\nimport { UpdateUserDto } from '../dto/update-user.dto';\nimport { ApiException } from '../../common/exceptions/api.exception';\n@Injectable({ scope: Scope.TRANSIENT })\nexport class UsersService {\n  constructor(\n    @InjectModel(User) private userRepository: typeof User,\n    private readonly roleService: RolesService,\n  ) {}\n\n  async findUser(\n    v: string[],\n    page: number,\n    userPerPage: number,\n  ): Promise {\n    const params = v.map((param: string) => {\n      return param.toLowerCase();\n    });\n    const dbUsers = await this.userRepository.findAll({\n      include: { all: true },\n      offset: (page - 1) * userPerPage,\n      limit: userPerPage,\n      order: [['updatedAt', 'DESC']],\n      attributes: [\n        'id',\n        'name',\n        'surname',\n        'email',\n        'phoneNumber',\n        'isAdmin',\n        'addContent',\n        'editContent',\n        'editWebsite',\n      ],\n    });\n    if (dbUsers.length === 0) {\n      return [];\n    }\n    const users = [];\n    dbUsers.forEach((user: User) => {\n      const dbArray = [];\n      for (const key in user) {\n        dbArray.push(user[key]);\n      }\n      const isContained = params.some(\n        (param: string) => dbArray.indexOf(param) >= 0,\n      );\n      if (isContained) {\n        users.push(user);\n      }\n    });\n    return users;\n  }\n\n  async initializeUser(userDto: InitializeUser): Promise {\n    const [email, phoneNumber] = await Promise.all([\n      await this.getUserByEmail(userDto.email),\n      await this.getUserByPhoneNumber(userDto.phoneNumber),\n    ]);\n    if (email) {\n      throw new ApiException(\n        HttpStatus.BAD_REQUEST,\n        'Bad request',\n        USER_WITH_EMAIL_EXIST,\n      );\n    }\n    if (phoneNumber) {\n      throw new ApiException(\n        HttpStatus.BAD_REQUEST,\n        'Bad request',\n        USER_WITH_PHONENUMBER_EXIST,\n      );\n    }\n    const SALT_ROUNDS = Number(process.env.SALT_ROUNDS);\n    const salt = await bcrypt.genSalt(SALT_ROUNDS);\n    const hashedPassword = await bcrypt.hash(userDto.password, salt);\n    const user = await this.createUser({\n      ...userDto,\n      password: hashedPassword,\n    });\n    return user.save();\n  }\n\n  async updateUser(userDto: UpdateUserDto, userId: number): Promise {\n    const user = await this.getUserById(userId);\n    if (!user) {\n      throw new ApiException(\n        HttpStatus.NOT_FOUND,\n        'Not found!',\n        USER_NOT_FOUND,\n      );\n    }\n    user.setName(userDto.name);\n    user.setSurname(userDto.surname);\n    user.setCity(userDto.city);\n    user.setCountry(userDto.country);\n    user.setPostOffice(userDto.postOffice);\n    return user.save();\n  }\n\n  async createUser(dto: CreateUserDto): Promise {\n    const user = await this.userRepository.create(dto);\n    user.setIsActivated(false);\n    user.setIsAdmin(false);\n    user.setAddContent(false);\n    user.setEditWebsite(false);\n    user.setEditContent(false);\n    const role = await this.roleService.getRoleByValue('USER');\n    if (!role) {\n      const userRole = await this.roleService.createRole({\n        value: 'USER',\n        description: 'simple user',\n      });\n      await user.$set('roles', userRole.id);\n      user.roles = [role];\n      await user.save();\n      return user;\n    }\n    await user.$set('roles', role.id);\n    user.roles = [role];\n    await user.save();\n    return user;\n  }\n\n  async getAllUsers(\n    page: number,\n    userPerPage: number,\n  ): Promise {\n    const users: User[] = await this.userRepository.findAll({\n      include: { all: true },\n      offset: (page - 1) * userPerPage,\n      limit: userPerPage,\n      order: [['updatedAt', 'DESC']],\n    });\n    if (users.length === 0) {\n      return [];\n    }\n    return users.map((user: User) => {\n      return {\n        id: user.id,\n        name: user.getName(),\n        surname: user.getSurname(),\n        email: user.email,\n        phoneNumber: user.phoneNumber,\n        isAdmin: user.getIsAdmin(),\n        addContent: user.getAddContent(),\n        editContent: user.getEditContent(),\n        editWebsite: user.getEditWebSite(),\n      };\n    });\n  }\n\n  async getUserById(id: number): Promise {\n    const user = await this.userRepository.findByPk(id, {\n      include: { all: true },\n    });\n    if (!user) {\n      throw new ApiException(\n        HttpStatus.NOT_FOUND,\n        'Not found!',\n        USER_NOT_FOUND,\n      );\n    }\n    return user;\n  }\n\n  async getUserByEmail(email: string): Promise {\n    const user = await this.userRepository.findOne({\n      where: { email: email },\n      include: { all: true },\n    });\n    return user;\n  }\n\n  async getUserByPhoneNumber(phoneNumber: string): Promise {\n    const user = await this.userRepository.findOne({\n      where: { phoneNumber: phoneNumber },\n      include: { all: true },\n    });\n    return user;\n  }\n\n  async addRole(dto: AddRoleDto): Promise {\n    const [user, role] = await Promise.all([\n      await this.userRepository.findByPk(dto.userId),\n      await this.roleService.getRoleByValue(dto.value),\n    ]);\n    if (role && user) {\n      await user.$add('role', role.id);\n      return dto;\n    }\n    throw new ApiException(\n      HttpStatus.NOT_FOUND,\n      'Not found!',\n      USER_OR_ROLE_NOT_FOUND,\n    );\n  }\n\n  async banUser(dto: BanUserDto): Promise {\n    const user = await this.userRepository.findByPk(dto.userId);\n    if (!user) {\n      throw new ApiException(\n        HttpStatus.NOT_FOUND,\n        'Not found!',\n        USER_NOT_FOUND,\n      );\n    }\n    user.banned = true;\n    user.banReason = dto.banReason;\n    await user.save();\n    return user;\n  }\n\n  async validateUser(userDto: ValidateUser): Promise {\n    const user = await this.getUserByEmail(userDto.email);\n    if (!user) {\n      throw new ApiException(\n        HttpStatus.BAD_REQUEST,\n        'Bad request',\n        USER_WITH_EMAIL_DOESNT_EXIST,\n      );\n    }\n    const passwordEquals = await bcrypt.compare(\n      userDto.password,\n      user.getPassword(),\n    );\n    if (passwordEquals) {\n      return user;\n    }\n    throw new ApiException(\n      HttpStatus.UNAUTHORIZED,\n      'Unathorized!',\n      INVALID_EMAIL_OR_PASSWORD,\n    );\n  }\n\n  async setConfirmCode(codeDto: CodeDto, code: number): Promise {\n    const user = await this.getUserByEmail(codeDto.email);\n    user.setConfirmCode(code);\n    user.setResetTokenExpiration(Number(Date.now() + 3600000));\n    await user.save();\n    return user.email;\n  }\n\n  async resetPassword(resetDto: ResetDto): Promise {\n    const user = await this.getUserByEmail(resetDto.email);\n    if (resetDto.email !== user.email) {\n      throw new ApiException(\n        HttpStatus.BAD_REQUEST,\n        'Bad request',\n        INVALID_EMAIL,\n      );\n    }\n    if (Number(Date.now()) >= user.getResetTokenExpiration()) {\n      throw new ApiException(\n        HttpStatus.BAD_REQUEST,\n        'Bad request',\n        RESET_TIME_EXPIRED,\n      );\n    }\n    if (Number(resetDto.code) !== user.getConfirmCode()) {\n      throw new ApiException(\n        HttpStatus.BAD_REQUEST,\n        'Bad request',\n        INVALID_CODE,\n      );\n    }\n    await this.rewritePassword(user.id, resetDto.password);\n    return user.email;\n  }\n\n  async changePassword(userId: number, password: string): Promise {\n    const user = await this.getUserById(userId);\n    if (!user) {\n      throw new ApiException(\n        HttpStatus.NOT_FOUND,\n        'Not found!',\n        USER_NOT_FOUND,\n      );\n    }\n    return this.rewritePassword(user.id, password);\n  }\n\n  async rewritePassword(\n    userId: number,\n    password: string,\n  ): Promise {\n    const user = await this.getUserById(userId);\n    if (!user) {\n      throw new ApiException(\n        HttpStatus.NOT_FOUND,\n        'Not found!',\n        USER_NOT_FOUND,\n      );\n    }\n    const SALT_ROUNDS = Number(process.env.SALT_ROUNDS);\n    const salt = await bcrypt.genSalt(SALT_ROUNDS);\n    const hashedPassword = await bcrypt.hash(password, salt);\n    user.setNewPasssword(hashedPassword);\n    return user.save();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ValidateDto.html":{"url":"injectables/ValidateDto.html","title":"injectable - ValidateDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ValidateDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/pipes/validation.pipe.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                transform\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        transform\n                        \n                    \n                \n            \n            \n                \n                    \n                    transform(value: any, metadata: ArgumentMetadata)\n                \n            \n\n\n            \n                \n                    Defined in src/common/pipes/validation.pipe.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    metadata\n                                    \n                                            ArgumentMetadata\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { ArgumentMetadata, Injectable, PipeTransform } from '@nestjs/common';\nimport { plainToClass } from 'class-transformer';\nimport { validate } from 'class-validator';\nimport { ValidationException } from '../exceptions/validation.excetion';\n\n@Injectable()\nexport class ValidateDto implements PipeTransform {\n  async transform(value: any, metadata: ArgumentMetadata): Promise {\n    const obj = plainToClass(metadata.metatype, value);\n    const errors = await validate(obj);\n    if (errors.length) {\n      const messages = errors.map((err) => {\n        return `${err.property} - ${Object.values(err.constraints).join(', ')}`;\n      });\n      throw new ValidationException(messages);\n    }\n    return value;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ValidateUser.html":{"url":"interfaces/ValidateUser.html","title":"interface - ValidateUser","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ValidateUser\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/interfaces/user.interfaces.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            password\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        password\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        password:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface UserRefreshCreationAttrbs {\n  userId: number;\n  userRefreshToken: string;\n  userAgent: string;\n  email: string;\n}\n\nexport interface RolecreationAttrbs {\n  value: string;\n  description: string;\n}\nexport interface UsercreationAttrbs {\n  name: string;\n  surname: string;\n  email: string;\n  phoneNumber: string;\n  password: string;\n  activationLink: string;\n}\n\nexport interface InitializeUser {\n  name: string;\n  surname: string;\n  phoneNumber: string;\n  email: string;\n  password: string;\n  confirmPassword: string;\n}\n\nexport interface ValidateUser {\n  email: string;\n  password: string;\n}\n\nexport interface UserInterface {\n  id: number;\n  name: string;\n  surname: string;\n  email: string;\n  phoneNumber: string;\n  isAdmin: boolean;\n  addContent: boolean;\n  editContent: boolean;\n  editWebsite: boolean;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ValidationException.html":{"url":"classes/ValidationException.html","title":"class - ValidationException","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ValidationException\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/exceptions/validation.excetion.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    HttpException\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                messages\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(response)\n                    \n                \n                        \n                            \n                                Defined in src/common/exceptions/validation.excetion.ts:4\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        response\n                                                  \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        messages\n                        \n                    \n                \n            \n                    \n                        \n                                Defined in src/common/exceptions/validation.excetion.ts:4\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { HttpException, HttpStatus } from '@nestjs/common';\n\nexport class ValidationException extends HttpException {\n  messages;\n\n  constructor(response) {\n    super(response, HttpStatus.BAD_REQUEST);\n    this.messages = response;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/WatchedProducts.html":{"url":"classes/WatchedProducts.html","title":"class - WatchedProducts","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  WatchedProducts\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/product/models/watched.products.model.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    Model\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                id\n                            \n                            \n                                    Public\n                                productId\n                            \n                            \n                                    Public\n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: undefined, unique: true, autoIncrement: true, primaryKey: true, allowNull: false, field: 'id'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/product/models/watched.products.model.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        productId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ForeignKey(undefined)@Column({type: undefined, field: 'productId'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/product/models/watched.products.model.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        userId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ForeignKey(undefined)@Column({type: undefined, field: 'userId'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/product/models/watched.products.model.ts:28\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  Column,\n  DataType,\n  Table,\n  Model,\n  ForeignKey,\n} from 'sequelize-typescript';\nimport { User } from '../../users/models/user.model';\nimport { Product } from '../../product/models/product.model';\n\n@Table({ tableName: 'PRODUCT_Categories', createdAt: false, updatedAt: false })\nexport class WatchedProducts extends Model {\n  @Column({\n    type: DataType.INTEGER,\n    unique: true,\n    autoIncrement: true,\n    primaryKey: true,\n    allowNull: false,\n    field: 'id',\n  })\n  public id: number;\n\n  @ForeignKey(() => User)\n  @Column({\n    type: DataType.INTEGER,\n    field: 'userId',\n  })\n  public userId: number;\n\n  @ForeignKey(() => Product)\n  @Column({\n    type: DataType.INTEGER,\n    field: 'productId',\n  })\n  public productId: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @maxmind/geoip2-node : ^3.5.0\n        \n            @nestjs-modules/mailer : ^1.8.1\n        \n            @nestjs/axios : ^1.0.1\n        \n            @nestjs/bull : ^0.6.2\n        \n            @nestjs/common : ^9.1.6\n        \n            @nestjs/config : ^2.2.0\n        \n            @nestjs/core : ^9.1.6\n        \n            @nestjs/event-emitter : ^1.3.1\n        \n            @nestjs/jwt : ^10.0.1\n        \n            @nestjs/platform-express : ^9.0.0\n        \n            @nestjs/platform-fastify : ^9.2.1\n        \n            @nestjs/platform-socket.io : ^9.2.1\n        \n            @nestjs/schedule : ^2.1.0\n        \n            @nestjs/sequelize : ^9.0.0\n        \n            @nestjs/serve-static : ^3.0.0\n        \n            @nestjs/swagger : ^6.1.4\n        \n            @nestjs/throttler : ^3.1.0\n        \n            @nestjs/websockets : ^9.2.1\n        \n            bcrypt : ^5.1.0\n        \n            body-parser : ^1.20.1\n        \n            bull : ^4.10.2\n        \n            cache-manager : ^5.1.5\n        \n            class-transformer : ^0.5.1\n        \n            class-validator : ^0.14.0\n        \n            compression : ^1.7.4\n        \n            cookie-parser : ^1.4.6\n        \n            cors : ^2.8.5\n        \n            country-to-currency : ^1.0.7\n        \n            cross-env : ^7.0.3\n        \n            currency-symbol-map : ^5.1.0\n        \n            deep-parse-json : ^1.0.2\n        \n            geoip-lite : ^1.4.7\n        \n            helmet : ^6.0.0\n        \n            ioredis : ^5.2.5\n        \n            ip : ^1.1.8\n        \n            liqpay-sdk-nodejs : ^1.0.3\n        \n            nest-commander : ^3.4.0\n        \n            nodemailer : ^6.8.0\n        \n            pg : ^8.8.0\n        \n            pg-hstore : ^2.3.4\n        \n            reflect-metadata : ^0.1.13\n        \n            rimraf : ^3.0.2\n        \n            rxjs : ^7.5.7\n        \n            sequelize : ^6.28.0\n        \n            sequelize-typescript : ^2.1.5\n        \n            serve-favicon : ^2.5.0\n        \n            swagger-ui-express : ^4.5.0\n        \n            telegraf : ^4.11.2\n        \n            uuid : ^9.0.0\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/fileCreated.html":{"url":"interfaces/fileCreated.html","title":"interface - fileCreated","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  fileCreated\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/services/file.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            fileName\n                                        \n                                \n                                \n                                        \n                                            filePath\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        fileName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        fileName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        filePath\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        filePath:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { HttpException, HttpStatus, Injectable, Scope } from '@nestjs/common';\nimport * as fs from 'fs';\nimport * as uuid from 'uuid';\nimport path, { extname } from 'path';\nimport { Request } from 'express';\nimport { mkdirSync, existsSync } from 'fs';\nimport { v4 } from 'uuid';\n\n// tslint:disable-next-line: class-name\ninterface fileCreated {\n  readonly fileName: string;\n  readonly filePath: string;\n}\n\n@Injectable({ scope: Scope.DEFAULT })\nexport class FilesService {\n  async createFile(file: {\n    buffer: string | NodeJS.ArrayBufferView;\n  }): Promise {\n    try {\n      const fileName = uuid.v4() + '.jpg';\n      const filePath = path.resolve(__dirname, '..', 'static');\n      if (!fs.existsSync(filePath)) {\n        fs.mkdirSync(filePath, { recursive: true });\n      }\n      fs.writeFileSync(path.join(filePath, fileName), file.buffer);\n      return { fileName: fileName, filePath: filePath };\n    } catch (e) {\n      throw new HttpException(\n        'Error occured while writing file.',\n        HttpStatus.INTERNAL_SERVER_ERROR,\n      );\n    }\n  }\n\n  async unlinkFile(filePath: string) {\n    filePath = path.join(__dirname, 'static', filePath);\n    fs.unlink(filePath, (err) => {\n      throw new HttpException(err.message, HttpStatus.INTERNAL_SERVER_ERROR);\n    });\n  }\n\n  createfileName(req: Request, file: Express.Multer.File, callback: any) {\n    const name = file.originalname.split('.')[0];\n    const ext = extname(file.originalname);\n    const randomName = v4();\n    callback(null, `${randomName}--${req.body.title}--${name}${ext}`);\n  }\n\n  fileFilter(\n    req: Request,\n    file: Express.Multer.File,\n    callback: (error: Error, acceptFile: boolean) => void,\n  ) {\n    const filetypes = /\\.(jpg|jpeg|png|gif)$/;\n    const extname = filetypes.test(\n      path.extname(file.originalname).toLowerCase(),\n    );\n    const mimetype = filetypes.test(file.mimetype);\n    if (mimetype && extname) {\n      return callback(null, true);\n    }\n    return callback(new Error('Only image files are allowed!'), false);\n  }\n\n  destination(\n    req: Request,\n    file: Express.Multer.File,\n    callback: (error: Error, destination: string) => void,\n  ) {\n    const destination = path.join(\n      __dirname,\n      'static',\n      'products',\n      `${req?.body?.title}`,\n    );\n    const imagesPath = path.join(\n      __dirname,\n      'static',\n      'products',\n      `${req?.body?.title}`,\n      file.fieldname,\n    );\n    if (!existsSync(destination)) {\n      mkdirSync(destination, { recursive: true });\n    }\n    if (!existsSync(imagesPath)) {\n      mkdirSync(imagesPath, { recursive: true });\n    }\n    callback(null, imagesPath);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            commanderStart   (src/.../comander.ts)\n                        \n                        \n                            Match   (src/.../match.decorator.ts)\n                        \n                        \n                            replStart   (src/.../repl.ts)\n                        \n                        \n                            startServer   (src/.../main.ts)\n                        \n                        \n                            ValidateNested   (src/.../nested.validation.decorator.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/comander.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        commanderStart\n                        \n                    \n                \n            \n            \n                \ncommanderStart()\n                \n            \n\n\n\n\n        \n    \n    src/common/decorators/match.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        Match\n                        \n                    \n                \n            \n            \n                \nMatch(property: string, validationOptions?: ValidationOptions)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    property\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    validationOptions\n                                    \n                                            ValidationOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    src/repl.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        replStart\n                        \n                    \n                \n            \n            \n                \nreplStart()\n                \n            \n\n\n\n\n        \n    \n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        startServer\n                        \n                    \n                \n            \n            \n                \nstartServer()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    src/common/decorators/nested.validation.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ValidateNested\n                        \n                    \n                \n            \n            \n                \nValidateNested(schema, validationOptions?: ValidationOptions)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    schema\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    validationOptions\n                                    \n                                            ValidationOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n  A progressive Node.js framework for building efficient and scalable server-side applications.\n    \n\n\n\n\n\n\n\n\n  \n    \n  \n\n  \n\nDescription\nNest framework TypeScript starter repository.\nInstallation\n$ npm installRunning the app\n# development\n$ npm run start\n\n# watch mode\n$ npm run start:dev\n\n# production mode\n$ npm run start:prodTest\n# unit tests\n$ npm run test\n\n# e2e tests\n$ npm run test:e2e\n\n# test coverage\n$ npm run test:covSupport\nNest is an MIT-licensed open source project. It can grow thanks to the sponsors and support by the amazing backers. If you'd like to join them, please read more here.\nStay in touch\n\nAuthor - Kamil Myśliwiec\nWebsite - https://nestjs.com\nTwitter - @nestframework\n\nLicense\nNest is MIT licensed.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AdminModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CartModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CategoriesColoursModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CoreModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        MailModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        OrdersModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        OwnerModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ProductModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ReviewsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        RolesModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TelegramModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UsersModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AdminModule\n\n\n\ncluster_AdminModule_exports\n\n\n\ncluster_AdminModule_providers\n\n\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_exports\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_CartModule\n\n\n\ncluster_CartModule_providers\n\n\n\ncluster_CategoriesColoursModule\n\n\n\ncluster_CategoriesColoursModule_exports\n\n\n\ncluster_CategoriesColoursModule_providers\n\n\n\ncluster_CoreModule\n\n\n\ncluster_CoreModule_providers\n\n\n\ncluster_MailModule\n\n\n\ncluster_MailModule_exports\n\n\n\ncluster_OrdersModule\n\n\n\ncluster_OrdersModule_providers\n\n\n\ncluster_OwnerModule\n\n\n\ncluster_OwnerModule_imports\n\n\n\ncluster_OwnerModule_exports\n\n\n\ncluster_ProductModule\n\n\n\ncluster_ProductModule_providers\n\n\n\ncluster_ReviewsModule\n\n\n\ncluster_ReviewsModule_providers\n\n\n\ncluster_RolesModule\n\n\n\ncluster_RolesModule_exports\n\n\n\ncluster_RolesModule_providers\n\n\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_exports\n\n\n\n\nAdminJwtRefreshService \n\nAdminJwtRefreshService \n\n\n\nAdminService \n\nAdminService \n\n\n\nAdminModule\n\nAdminModule\n\nAdminJwtRefreshService  -->\n\nAdminModule->AdminJwtRefreshService \n\n\n\nAdminService  -->\n\nAdminModule->AdminService \n\n\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAdminModule->AppModule\n\n\n\n\n\nAdminJwtRefreshService\n\nAdminJwtRefreshService\n\nAdminModule -->\n\nAdminJwtRefreshService->AdminModule\n\n\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nAdminJwtRefreshService->AuthModule\n\n\n\n\n\nAdminService\n\nAdminService\n\nAdminModule -->\n\nAdminService->AdminModule\n\n\n\nAdminModule -->\n\nAdminService->AdminModule\n\n\n\n\n\nMailModule\n\nMailModule\n\nMailModule -->\n\nAdminService->MailModule\n\n\n\n\n\nOwnerModule\n\nOwnerModule\n\nOwnerModule -->\n\nAdminService->OwnerModule\n\n\n\n\n\nCurrencyService\n\nCurrencyService\n\nAdminModule -->\n\nCurrencyService->AdminModule\n\n\n\nAuthModule -->\n\nCurrencyService->AuthModule\n\n\n\n\n\nCoreModule\n\nCoreModule\n\nCoreModule -->\n\nCurrencyService->CoreModule\n\n\n\nOwnerModule -->\n\nCurrencyService->OwnerModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nUsersModule -->\n\nCurrencyService->UsersModule\n\n\n\n\n\nRolesModule\n\nRolesModule\n\nRolesModule -->\n\nCurrencyService->RolesModule\n\n\n\n\n\nMailService\n\nMailService\n\nAdminModule -->\n\nMailService->AdminModule\n\n\n\nAuthModule -->\n\nMailService->AuthModule\n\n\n\nMailModule -->\n\nMailService->MailModule\n\n\n\nOwnerModule -->\n\nMailService->OwnerModule\n\n\n\n\n\nOwnerService\n\nOwnerService\n\nAdminModule -->\n\nOwnerService->AdminModule\n\n\n\nMailModule -->\n\nOwnerService->MailModule\n\n\n\nOwnerModule -->\n\nOwnerService->OwnerModule\n\n\n\n\n\nTasksService\n\nTasksService\n\nAdminModule -->\n\nTasksService->AdminModule\n\n\n\nAuthModule -->\n\nTasksService->AuthModule\n\n\n\nCoreModule -->\n\nTasksService->CoreModule\n\n\n\nOwnerModule -->\n\nTasksService->OwnerModule\n\n\n\nUsersModule -->\n\nTasksService->UsersModule\n\n\n\nAppModule -->\n\nTasksService->AppModule\n\n\n\nRolesModule -->\n\nTasksService->RolesModule\n\n\n\n\n\nUsersService\n\nUsersService\n\nAdminModule -->\n\nUsersService->AdminModule\n\n\n\nMailModule -->\n\nUsersService->MailModule\n\n\n\nOwnerModule -->\n\nUsersService->OwnerModule\n\n\n\nUsersModule -->\n\nUsersService->UsersModule\n\n\n\nRolesModule -->\n\nUsersService->RolesModule\n\n\n\nAdminJwtRefreshService  -->\n\nAuthModule->AdminJwtRefreshService \n\n\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nAuthService \n\nAuthService \n\nAuthService  -->\n\nAuthModule->AuthService \n\n\n\n\n\nOwnerJwtRefreshService \n\nOwnerJwtRefreshService \n\nOwnerJwtRefreshService  -->\n\nAuthModule->OwnerJwtRefreshService \n\n\n\n\n\nCartModule\n\nCartModule\n\nAppModule -->\n\nCartModule->AppModule\n\n\n\n\n\nCategoriesColoursModule\n\nCategoriesColoursModule\n\nAppModule -->\n\nCategoriesColoursModule->AppModule\n\n\n\n\n\nCategoriesService \n\nCategoriesService \n\nCategoriesService  -->\n\nCategoriesColoursModule->CategoriesService \n\n\n\n\n\nColoursService \n\nColoursService \n\nColoursService  -->\n\nCategoriesColoursModule->ColoursService \n\n\n\nAppModule -->\n\nCoreModule->AppModule\n\n\n\nAppModule -->\n\nMailModule->AppModule\n\n\n\n\n\nMailService \n\nMailService \n\nMailService  -->\n\nMailModule->MailService \n\n\n\n\n\nOrdersModule\n\nOrdersModule\n\nAppModule -->\n\nOrdersModule->AppModule\n\n\n\nAppModule -->\n\nOwnerModule->AppModule\n\n\n\nOwnerJwtRefreshService  -->\n\nOwnerModule->OwnerJwtRefreshService \n\n\n\n\n\nCurrencyService \n\nCurrencyService \n\nCurrencyService  -->\n\nOwnerModule->CurrencyService \n\n\n\n\n\nOwnerService \n\nOwnerService \n\nOwnerService  -->\n\nOwnerModule->OwnerService \n\n\n\n\n\nProductModule\n\nProductModule\n\nAppModule -->\n\nProductModule->AppModule\n\n\n\n\n\nReviewsModule\n\nReviewsModule\n\nAppModule -->\n\nReviewsModule->AppModule\n\n\n\n\n\nTelegramModule\n\nTelegramModule\n\nAppModule -->\n\nTelegramModule->AppModule\n\n\n\nAppModule -->\n\nUsersModule->AppModule\n\n\n\n\n\nUserJwtRefreshTokenService \n\nUserJwtRefreshTokenService \n\nUserJwtRefreshTokenService  -->\n\nUsersModule->UserJwtRefreshTokenService \n\n\n\n\n\nUsersService \n\nUsersService \n\nUsersService  -->\n\nUsersModule->UsersService \n\n\n\n\n\nAppClusterService\n\nAppClusterService\n\nCoreModule -->\n\nAppClusterService->CoreModule\n\n\n\nAppModule -->\n\nAppClusterService->AppModule\n\n\n\n\n\nAppListener\n\nAppListener\n\nAuthModule -->\n\nAppListener->AuthModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\nUsersModule -->\n\nAuthService->UsersModule\n\n\n\nRolesModule -->\n\nAuthService->RolesModule\n\n\n\n\n\nOwnerJwtRefreshService\n\nOwnerJwtRefreshService\n\nAuthModule -->\n\nOwnerJwtRefreshService->AuthModule\n\n\n\nOwnerModule -->\n\nOwnerJwtRefreshService->OwnerModule\n\n\n\n\n\nCardService\n\nCardService\n\nCartModule -->\n\nCardService->CartModule\n\n\n\n\n\nCategoriesService\n\nCategoriesService\n\nCategoriesColoursModule -->\n\nCategoriesService->CategoriesColoursModule\n\n\n\nProductModule -->\n\nCategoriesService->ProductModule\n\n\n\nReviewsModule -->\n\nCategoriesService->ReviewsModule\n\n\n\n\n\nColoursService\n\nColoursService\n\nCategoriesColoursModule -->\n\nColoursService->CategoriesColoursModule\n\n\n\nProductModule -->\n\nColoursService->ProductModule\n\n\n\n\n\nFilesService\n\nFilesService\n\nCoreModule -->\n\nFilesService->CoreModule\n\n\n\nProductModule -->\n\nFilesService->ProductModule\n\n\n\n\n\nOrdersService\n\nOrdersService\n\nOrdersModule -->\n\nOrdersService->OrdersModule\n\n\n\nOwnerModule -->\n\nRolesModule->OwnerModule\n\n\n\n\n\nRolesService \n\nRolesService \n\nRolesService  -->\n\nRolesModule->RolesService \n\n\n\n\n\nProductService\n\nProductService\n\nProductModule -->\n\nProductService->ProductModule\n\n\n\nReviewsModule -->\n\nProductService->ReviewsModule\n\n\n\n\n\nReviewsService\n\nReviewsService\n\nReviewsModule -->\n\nReviewsService->ReviewsModule\n\n\n\n\n\nRolesService\n\nRolesService\n\nRolesModule -->\n\nRolesService->RolesModule\n\n\n\n\n\nUserJwtRefreshTokenService\n\nUserJwtRefreshTokenService\n\nUsersModule -->\n\nUserJwtRefreshTokenService->UsersModule\n\n\n\nRolesModule -->\n\nUserJwtRefreshTokenService->RolesModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        14 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    11 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    36 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    61 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    10 Guards\n                \n            \n        \n        \n            \n                \n                    \n                    32 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 1.1.1\n        \n            Description : kaze_shop\n        \n            License : UNLICENSED\n        \n            Author : mmmihaeel\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            CallbackFunction   (src/.../cluster.service.ts)\n                        \n                        \n                            TParseFormDataJsonOptions   (src/.../formdata.pipe.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/core/services/cluster.service.ts\n    \n    \n        \n            \n                \n                    \n                    CallbackFunction\n                \n            \n            \n                \n                            function\n\n                \n            \n        \n    \n    src/common/pipes/formdata.pipe.ts\n    \n    \n        \n            \n                \n                    \n                    TParseFormDataJsonOptions\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
