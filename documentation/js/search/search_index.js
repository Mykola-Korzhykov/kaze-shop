var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/injectables/ActivateMiddleware.html",[0,0.727,1,3.86]],["body/injectables/ActivateMiddleware.html",[0,1.103,1,5.855,2,1.834,3,0.057,4,0.049,5,0.057,6,5.493,7,0.18,8,1.044,9,2.376,10,4.482,11,2.137,12,4.892,13,7.086,14,0.517,15,5.493,16,1.064,17,0.007,18,0.517,19,0.97,20,6.372,21,3.094,22,2.864,23,4.247,24,3.617,25,3.223,26,3.989,27,5.493,28,0.168,29,2.985,30,0.802,31,2.472,32,0.357,33,2.821,34,1.907,35,3.902,36,2.137,37,0.759,38,3.201,39,2.203,40,2.203,41,7.155,42,4.495,43,2.742,44,1.79,45,2.669,46,2.385,47,2.599,48,2.111,49,2.669,50,2.252,51,0.057,52,0.133,53,1.64,54,4.892,55,1.954,56,4.17,57,4.892,58,2.203,59,1.957,60,3.581,61,0.54,62,5.493,63,4.03,64,5.493,65,1.766,66,1.527,67,2.599,68,2.599,69,3.963,70,3.319,71,3.094,72,3.963,73,1.8,74,4.892,75,4.892,76,4.892,77,4.199,78,0.005,79,0.005]],["title/guards/AddContentGuard.html",[80,2.749,81,3.403]],["body/guards/AddContentGuard.html",[0,1.089,3,0.056,4,0.048,5,0.056,7,0.176,8,1.032,9,1.61,11,1.61,14,0.511,16,1.051,17,0.007,18,0.511,19,0.958,28,0.217,29,1.909,30,0.787,32,0.349,34,1.871,36,2.111,37,0.745,43,2.691,44,1.973,46,2,48,2.071,49,2.619,50,2.21,51,0.056,52,0.13,53,1.61,59,2.058,65,2.535,66,2.192,73,1.766,78,0.005,79,0.005,81,5.099,82,3.036,83,7.886,84,4.8,85,5.064,86,4.121,87,4.452,88,5.391,89,3.141,90,4.714,91,5.391,92,3.981,93,2.15,94,2.272,95,4.3,96,4.121,97,3.889,98,2.851,99,5.403,100,5.099,101,5.784,102,3.257,103,3.509,104,2.851,105,2.94,106,1.196,107,1.526,108,3.141,109,3.53,110,2.487,111,3.696,112,3.63,113,3.63,114,1.987,115,1.464,116,4.411,117,4.8,118,3.53,119,3.53]],["title/classes/AddRoleDto.html",[52,0.114,120,3.86]],["body/classes/AddRoleDto.html",[3,0.067,4,0.058,5,0.067,7,0.212,14,0.573,17,0.007,28,0.186,32,0.31,51,0.067,52,0.191,61,0.78,78,0.005,79,0.005,106,2.073,120,6.49,121,1.434,122,8.581,123,6.465,124,0.977,125,2.865,126,2.771,127,1.116,128,1.885,129,3.403,130,2.924,131,2.2,132,3.113,133,4.432,134,6.465,135,2.091,136,2.369,137,6.465,138,6.465,139,3.681,140,2.383,141,4.467,142,3.326,143,2.484,144,3.403,145,3.141]],["title/controllers/AdminController.html",[146,2.072,147,3.86]],["body/controllers/AdminController.html",[3,0.039,4,0.034,5,0.039,7,0.124,8,0.808,9,2.148,14,0.52,16,1.069,17,0.007,18,0.52,19,0.975,25,2.651,28,0.211,30,1.05,32,0.366,37,0.524,44,2.116,51,0.039,52,0.091,61,0.643,78,0.004,79,0.004,87,3.265,94,2.888,105,2.067,106,0.841,107,1.391,127,1.264,128,1.709,135,0.999,140,1.397,146,1.665,147,4.53,148,1.627,149,3.791,150,2.209,151,5.824,152,5.824,153,5.352,154,5.824,155,3.791,156,5.951,157,6.404,158,4.53,159,5.536,160,6.106,161,5.536,162,7.192,163,5.417,164,5.417,165,3.791,166,3.791,167,6.404,168,3.376,169,5.762,170,6.92,171,5.188,172,5.536,173,3.791,174,3.791,175,4.232,176,3.102,177,3.791,178,3.791,179,3.791,180,3.791,181,5.536,182,4.93,183,3.791,184,3.791,185,3.791,186,2.209,187,2.291,188,2.483,189,2.599,190,2.483,191,2.381,192,2.735,193,5.244,194,2.135,195,2.291,196,3.376,197,5.518,198,5.518,199,2.735,200,2.291,201,2.483,202,2.483,203,2.599,204,3.102,205,3.102,206,3.376,207,4.718,208,3.102,209,2.599,210,3.102,211,2.209,212,2.381,213,2.291,214,2.381,215,1.706,216,2.599,217,2.209,218,2.599,219,2.599,220,2.599,221,4.622,222,2.483,223,2.483,224,2.483,225,2.135,226,1.665,227,4.53,228,3.791,229,2.135,230,2.291,231,2.291,232,3.118,233,2.291,234,2.209,235,2.483,236,2.291,237,2.898,238,3.791,239,3.376,240,2.898,241,3.791,242,4.051,243,3.922,244,4.191,245,5.188,246,4.345,247,5.824,248,4.71,249,4.93,250,5.188,251,2.483,252,3.791,253,4.53,254,3.791,255,2.599,256,3.102,257,3.791,258,3.791,259,4.53,260,3.791,261,3.376,262,4.53,263,4.53,264,3.791,265,3.791,266,3.791]],["title/guards/AdminGuard.html",[80,2.749,267,4.2]],["body/guards/AdminGuard.html",[0,0.999,3,0.049,4,0.042,5,0.049,7,0.155,8,0.946,9,1.416,11,1.936,14,0.469,16,0.964,17,0.007,18,0.469,19,0.879,22,1.553,28,0.152,29,1.678,30,0.692,32,0.363,34,1.646,36,1.936,37,0.655,43,2.366,48,1.821,49,2.303,50,1.943,51,0.049,52,0.114,53,1.416,55,2.018,59,2.163,61,0.727,65,2.676,66,2.313,67,2.243,68,2.243,73,2.125,78,0.004,79,0.004,82,2.67,85,4.849,89,2.762,90,4.476,92,3.652,93,1.972,94,2.085,95,4.031,98,2.507,103,3.332,104,2.507,106,1.052,107,1.43,108,2.762,109,3.104,112,4.081,113,4.081,115,1.344,126,1.468,131,1.166,136,1.416,217,2.762,267,5.774,268,4.74,269,4.74,270,4.991,271,6.724,272,4.954,273,4.74,274,5.306,275,4.74,276,4.957,277,6.074,278,3.623,279,2.864,280,2.719,281,2.434,282,2.864,283,4.957,284,3.623,285,2.977,286,4.446,287,3.104,288,4.957,289,3.623,290,3.623,291,3.623,292,3.652,293,3.623,294,5.332,295,3.623,296,3.879,297,3.879,298,2.84,299,4.74,300,3.42,301,3.879,302,4.221,303,3.879,304,4.221,305,3.879,306,3.623]],["title/interfaces/AdminInterface.html",[209,3.234,307,0.928]],["body/interfaces/AdminInterface.html",[3,0.061,4,0.053,5,0.061,7,0.194,17,0.007,18,0.647,28,0.223,51,0.086,60,2.67,61,0.977,78,0.005,79,0.005,93,2.886,124,0.927,125,2.898,127,1.307,209,5.155,280,2.488,307,1.625,308,2.06,309,4.856,310,4.456,311,4.456,312,4.456,313,2.635,314,1.925,315,3.114,316,2.674,317,4.281,318,2.808,319,4.068,320,4.536,321,2.329]],["title/injectables/AdminJwtRefreshService.html",[0,0.727,270,2.962]],["body/injectables/AdminJwtRefreshService.html",[0,0.57,2,0.753,3,0.023,4,0.02,5,0.023,7,0.074,8,0.54,9,2.74,11,1.104,14,0.583,16,1.153,17,0.007,18,0.561,19,1.052,22,1.212,28,0.182,30,1.132,31,2.7,32,0.315,34,0.783,36,1.104,37,0.312,38,1.315,39,0.905,44,1.704,46,0.638,48,2.477,51,0.023,52,0.054,55,2.235,56,1.315,58,2.407,59,2.173,61,0.95,63,1.271,65,2.494,66,2.24,67,1.75,68,1.75,73,2.944,78,0.002,79,0.002,87,3.399,94,2.755,103,1.551,106,1.206,107,1.584,110,1.041,124,0.456,126,1.456,127,1.167,145,4.292,203,1.547,270,2.323,280,3.818,313,2.39,314,0.821,315,2.859,318,3.583,319,5.429,322,8.185,323,1.846,324,3.062,325,3.847,326,4.186,327,3.847,328,4.841,329,3.847,330,3.847,331,3.847,332,3.027,333,3.847,334,3.847,335,3.847,336,1.846,337,5.276,338,3.847,339,2.965,340,4.114,341,4.701,342,3.699,343,2.256,344,2.256,345,2.009,346,2.256,347,2.256,348,2.256,349,2.256,350,1.846,351,3.847,352,2.256,353,1.846,354,4.449,355,2.256,356,2.256,357,3.41,358,3.311,359,2.256,360,3.699,361,2.256,362,2.256,363,2.256,364,4.701,365,2.256,366,2.256,367,2.256,368,2.256,369,1.158,370,3.699,371,1.417,372,3.593,373,3.593,374,3.391,375,2.827,376,3.593,377,2.827,378,2.827,379,1.846,380,1.724,381,2.009,382,2.256,383,1.271,384,2.009,385,1.627,386,1.417,387,1.417,388,1.846,389,1.846,390,1.846,391,1.846,392,1.846,393,1.846,394,2.323,395,1.363,396,1.315,397,2.256,398,1.846,399,2.258,400,2.7,401,3.93,402,4.587,403,3.93,404,3.082,405,4.701,406,2.256,407,3.699,408,2.875,409,2.573,410,4.715,411,3.699,412,2.009,413,1.846,414,3.847,415,3.027,416,3.027,417,2.256,418,2.256,419,0.968,420,2.256,421,4.449,422,2.256,423,2.256,424,5.344,425,5.276,426,5.437,427,4.701,428,2.256,429,2.256,430,3.027,431,2.256,432,2.256,433,2.256,434,1.547,435,2.256,436,1.846,437,2.009,438,2.256,439,2.009,440,2.256,441,2.009,442,1.547,443,2.009,444,2.827,445,2.256,446,2.256,447,2.256,448,3.699,449,3.699,450,1.846,451,3.699,452,1.125,453,2.256,454,2.256,455,2.009,456,3.027,457,1.846,458,1.846,459,1.846,460,2.323,461,1.846,462,1.547,463,1.846,464,1.627,465,1.846,466,1.846,467,1.846,468,1.846,469,1.846,470,1.846,471,1.846,472,3.027,473,2.009,474,1.627]],["title/modules/AdminModule.html",[475,1.739,476,2.494]],["body/modules/AdminModule.html",[3,0.039,4,0.034,5,0.039,8,0.553,14,0.274,16,0.563,17,0.007,18,0.274,19,0.513,28,0.089,30,0.553,32,0.383,37,0.523,39,1.519,44,1.384,46,1.565,47,1.792,51,0.039,52,0.091,53,1.131,78,0.004,79,0.004,87,4.598,115,1.146,135,1.458,136,1.652,147,5.348,148,2.373,156,2.732,203,2.596,204,3.099,205,3.099,206,3.372,226,1.663,270,5.64,279,2.288,280,2.319,298,2.125,339,4.354,340,4.824,371,2.378,381,3.372,385,2.732,386,2.378,475,2.039,476,5.017,477,1.792,478,2.687,479,3.372,480,3.372,481,3.372,482,4.653,483,3.986,484,2.841,485,1.89,486,1.89,487,3.787,488,2.841,489,3.623,490,2.378,491,3.474,492,4.514,493,3.787,494,5.015,495,1.519,496,4.644,497,3.474,498,2.378,499,3.787,500,2.002,501,2.761,502,2.133,503,2.895,504,3.099,505,2.925,506,2.288,507,2.288,508,2.48,509,3.623,510,2.732,511,1.486,512,2.617,513,2.002,514,2.925,515,2.288,516,2.319,517,2.002,518,2.841,519,2.207,520,2.065,521,3.099,522,3.787,523,3.787,524,2.596,525,2.895,526,2.895,527,2.002,528,1.944,529,3.099,530,3.787,531,3.223,532,2.596,533,2.552,534,2.133,535,2.617,536,2.065,537,2.489,538,2.002,539,2.617,540,2.002,541,2.489,542,2.065,543,2.687,544,2.065,545,1.959,546,1.588,547,2.288,548,1.944,549,2.002,550,2.002,551,2.002,552,2.002,553,2.002,554,2.065,555,2.895,556,2.895,557,3.787,558,3.787,559,2.895,560,2.895,561,3.787,562,2.48,563,5.007,564,3.713,565,3.787,566,4.341,567,3.99,568,3.787,569,6.536,570,5.348,571,6.536,572,4.715,573,3.787,574,5.532,575,3.787]],["title/classes/AdminRefreshToken.html",[52,0.114,280,1.978]],["body/classes/AdminRefreshToken.html",[3,0.033,4,0.029,5,0.033,7,0.104,8,0.711,14,0.652,16,0.878,17,0.007,18,0.427,19,0.8,25,1.177,28,0.217,30,1.138,32,0.258,44,2.102,51,0.033,52,0.077,55,2.249,61,0.924,78,0.003,79,0.003,107,1.508,114,2.962,115,1.795,121,0.709,124,0.6,127,0.929,128,1.957,129,3.448,130,2.435,131,2.217,132,3.537,139,3.533,140,1.177,144,3.448,145,4.001,210,2.613,242,1.799,243,2.656,280,3.269,313,2.159,314,1.578,315,2.552,317,2.304,318,3.547,319,4.876,357,4.25,358,4.229,383,2.743,410,1.742,452,2.809,576,3.194,577,1.833,578,2.657,579,4.111,580,6.606,581,6.606,582,5.405,583,5.405,584,4.871,585,3.986,586,3.986,587,1.861,588,3.194,589,3.19,590,3.19,591,3.19,592,3.19,593,3.19,594,3.19,595,3.19,596,3.19,597,3.19,598,3.19,599,3.19,600,6.577,601,2.613,602,4.304,603,4.056,604,2.501,605,3.194,606,2.844,607,3.194,608,4.871,609,3.986,610,2.613,611,3.194,612,4.337,613,2.441,614,3.194,615,3.723,616,2.613,617,3.194,618,2.189,619,2.192,620,2.192,621,3.194,622,3.723,623,3.723,624,3.723,625,3.723,626,3.723,627,2.613,628,3.194,629,3.723,630,2.613,631,3.194,632,3.194,633,3.194,634,3.194,635,3.194,636,4.871,637,3.194,638,3.986,639,3.194,640,3.986,641,3.194,642,3.706,643,1.437,644,2.14,645,2.366,646,2.501,647,2.743,648,2.091,649,1.403,650,1.37,651,3.194,652,1.437,653,3.194,654,1.799,655,2.192,656,3.568,657,2.613,658,1.93,659,2.189,660,1.742,661,2.613,662,2.613,663,2.091,664,4.832,665,5.905,666,3.194,667,4.832]],["title/interfaces/AdminRefreshTokenCreationAttrbs.html",[307,0.928,317,3.403]],["body/interfaces/AdminRefreshTokenCreationAttrbs.html",[3,0.065,4,0.056,5,0.065,7,0.205,17,0.007,18,0.562,28,0.214,51,0.088,60,2.817,61,0.981,78,0.005,79,0.005,93,2.572,124,0.958,125,2.091,127,1.28,209,4.292,280,3.71,307,1.665,308,2.173,309,5.123,310,3.215,311,3.215,312,3.215,313,2.671,314,1.389,315,3.157,316,2.322,317,5.61,318,4.186,319,6.065,320,4.786,321,2.457]],["title/injectables/AdminService.html",[0,0.727,87,2.355]],["body/injectables/AdminService.html",[0,0.545,2,0.713,3,0.022,4,0.019,5,0.022,7,0.07,8,0.516,9,2.809,11,1.056,12,1.902,14,0.592,16,1.217,17,0.007,18,0.606,19,1.109,20,3.149,22,2.057,28,0.192,30,1.178,31,0.961,32,0.32,33,1.097,34,0.742,36,1.056,37,0.295,38,1.245,39,0.857,44,2.287,48,0.821,51,0.022,52,0.052,54,1.902,55,1.715,56,1.245,59,2.222,60,3.245,61,0.866,63,2.548,65,2.319,66,2.005,67,2.971,68,2.971,73,3.082,77,1.633,78,0.002,79,0.002,87,1.765,94,2.878,96,1.633,97,1.541,103,2.443,104,1.87,106,0.785,107,1.723,112,1.097,113,1.097,114,1.668,115,1.301,117,1.902,118,1.399,119,1.399,125,1.511,126,0.662,127,1.222,130,1.303,131,0.525,135,1.387,136,1.571,151,3.149,152,4.029,154,3.149,156,4.796,167,1.902,168,1.902,169,4.796,175,2.703,203,1.465,204,1.748,205,1.748,209,1.465,210,1.748,226,0.938,259,3.702,310,1.816,311,1.816,312,1.816,313,2.003,314,1.004,315,2.368,316,1.056,318,1.011,321,2.729,374,2.551,387,1.342,396,1.245,408,1.13,409,1.011,412,1.902,419,1.941,424,5.592,441,1.902,442,1.465,444,4.02,452,1.376,460,1.342,462,2.424,483,2.626,541,1.591,547,1.291,668,2.136,669,2.703,670,3.536,671,3.149,672,3.536,673,3.536,674,3.536,675,4.525,676,2.703,677,3.702,678,2.703,679,3.536,680,2.963,681,3.459,682,3.303,683,2.136,684,3.536,685,2.136,686,3.536,687,2.136,688,3.536,689,2.136,690,2.551,691,7.433,692,2.136,693,3.149,694,2.136,695,3.536,696,2.136,697,3.536,698,2.136,699,3.536,700,2.136,701,2.136,702,2.136,703,2.703,704,3.816,705,2.136,706,2.136,707,2.136,708,2.894,709,3.178,710,2.136,711,3.536,712,2.136,713,3.536,714,3.606,715,2.136,716,1.342,717,2.703,718,3.149,719,3.149,720,3.149,721,2.703,722,2.703,723,2.703,724,3.149,725,2.894,726,1.748,727,1.902,728,1.748,729,1.748,730,1.748,731,1.902,732,1.902,733,2.136,734,3.536,735,4.769,736,3.149,737,2.894,738,1.765,739,2.894,740,1.902,741,2.136,742,2.136,743,1.902,744,2.136,745,3.149,746,1.902,747,1.465,748,1.902,749,2.136,750,3.536,751,3.536,752,5.828,753,6.28,754,6.28,755,6.28,756,5.139,757,2.136,758,1.902,759,4.525,760,3.536,761,2.136,762,3.536,763,5.26,764,3.702,765,2.136,766,3.536,767,2.136,768,2.136,769,1.748,770,1.748,771,1.902,772,3.536,773,5.26,774,4.304,775,3.536,776,1.748,777,3.536,778,1.748,779,2.136,780,3.536,781,2.136,782,2.136,783,2.136,784,4.525,785,2.136,786,2.136,787,2.136,788,2.136,789,1.902,790,1.902,791,1.902,792,2.136,793,2.136,794,2.136,795,1.902,796,2.136,797,2.136,798,2.894,799,1.748,800,2.136,801,1.902,802,2.136,803,2.136,804,2.136,805,1.748,806,2.136,807,1.748,808,2.136,809,3.536,810,2.894,811,3.536,812,2.136,813,1.748,814,1.748,815,1.748,816,1.748,817,1.748,818,2.136]],["title/injectables/AdminUserMiddleware.html",[0,0.727,529,3.86]],["body/injectables/AdminUserMiddleware.html",[0,1.051,2,1.705,3,0.053,4,0.046,5,0.053,7,0.167,8,0.995,9,2.292,10,4.323,11,1.525,14,0.493,16,1.013,17,0.007,18,0.592,19,0.924,21,2.875,22,2.797,23,4.147,24,3.515,25,3.237,26,3.876,28,0.16,29,2.901,30,0.745,31,3.068,32,0.351,33,2.622,34,1.772,35,3.718,36,2.036,37,0.705,40,2.047,42,5.579,43,2.549,44,1.278,48,1.962,49,2.48,50,2.093,51,0.053,52,0.123,53,1.525,58,2.047,59,2.269,65,2.192,66,1.895,67,2.416,68,2.416,73,1.673,78,0.005,79,0.005,86,3.903,87,4.384,102,3.085,105,2.784,106,1.133,107,1.319,287,3.343,310,2.622,311,2.622,312,2.622,313,1.964,315,2.613,316,2.036,374,4.918,399,1.921,400,2.297,408,2.7,409,2.416,529,5.579,716,3.206,789,4.546,795,4.546,801,4.546,819,7.676,820,4.546,821,5.105,822,4.546,823,4.546,824,4.546,825,4.546,826,4.178,827,4.546,828,2.975,829,4.546,830,4.546,831,4.546,832,4.546,833,4.546,834,4.546,835,4.546,836,4.546,837,4.546,838,4.546,839,4.546,840,3.085]],["title/interfaces/AdmincreationAttrbs.html",[307,0.928,320,3.606]],["body/interfaces/AdmincreationAttrbs.html",[3,0.064,4,0.055,5,0.064,7,0.202,17,0.007,18,0.655,28,0.217,51,0.087,60,3.962,61,0.984,78,0.005,79,0.005,93,2.557,124,0.95,125,2.062,127,1.183,209,4.234,280,2.59,307,1.655,308,2.144,309,5.054,310,3.171,311,3.171,312,3.171,313,2.662,314,1.37,315,3.146,316,2.706,317,4.455,318,2.922,319,4.234,320,5.894,321,3.455]],["title/classes/AllExceptionsFilter.html",[52,0.114,841,3.606]],["body/classes/AllExceptionsFilter.html",[3,0.062,4,0.054,5,0.062,7,0.196,8,1.104,11,1.789,14,0.547,16,1.124,17,0.007,18,0.547,19,1.025,28,0.178,30,0.874,32,0.296,34,3.023,37,0.827,51,0.062,52,0.145,53,2.259,59,2.208,66,1.665,78,0.005,79,0.005,105,3.267,106,1.329,121,1.329,282,3.619,300,4.321,399,3.276,401,3.923,495,3.033,564,2.631,841,5.782,842,8.29,843,5.99,844,6.337,845,5.99,846,9.17,847,5.99,848,5.782,849,5.639,850,5.206,851,6.656,852,5.99,853,5.782,854,5.99,855,5.99,856,5.99,857,4.579,858,4.579,859,3.399,860,4.579,861,5.334,862,7.564,863,4.321,864,4.579,865,4.579,866,5.99,867,5.99]],["title/classes/ApiError.html",[52,0.114,868,3.606]],["body/classes/ApiError.html",[3,0.062,4,0.053,5,0.062,7,0.195,11,1.782,14,0.598,16,0.887,17,0.007,18,0.431,19,0.809,28,0.194,32,0.233,34,2.072,37,0.824,51,0.086,52,0.2,61,0.947,78,0.005,79,0.005,121,1.324,124,0.93,126,1.848,127,1.262,369,3.064,404,3.875,409,2.824,564,3.315,577,3.272,859,3.565,863,6.47,868,6.647,869,7.116,870,4.883,871,6.453,872,6.175,873,7.546,874,4.883,875,5.967,876,4.562,877,4.883,878,4.883,879,4.883,880,4.883,881,4.562,882,4.883,883,4.883,884,4.305,885,4.091,886,4.883,887,5.173,888,4.883]],["title/classes/ApiErrorExceptionFilter.html",[52,0.114,229,2.657]],["body/classes/ApiErrorExceptionFilter.html",[3,0.064,4,0.055,5,0.064,7,0.202,8,1.127,14,0.447,16,0.92,17,0.007,18,0.447,19,0.839,22,2.529,24,3.312,28,0.145,30,0.903,32,0.329,37,0.855,40,2.482,51,0.064,52,0.149,53,2.305,59,2.167,66,1.72,78,0.005,79,0.005,121,1.373,130,2.281,229,4.348,246,3.739,399,3.166,419,2.655,452,1.882,495,2.482,564,2.718,844,6.432,848,5.901,850,5.284,851,6.735,853,4.73,857,4.73,858,4.73,859,2.537,860,4.73,864,4.73,865,4.73,871,4.242,885,6.04,889,7.72,890,6.188,891,6.188,892,5.51,893,5.51,894,6.188,895,5.064,896,5.064,897,6.188,898,5.51,899,5.51,900,5.51,901,6.188,902,5.51,903,6.874,904,5.064]],["title/classes/ApiException.html",[48,1.812,52,0.114]],["body/classes/ApiException.html",[3,0.028,4,0.024,5,0.028,7,0.089,8,0.627,11,1.282,14,0.55,16,1.042,17,0.007,18,0.507,19,0.95,22,2.769,28,0.228,30,0.962,32,0.287,34,0.942,37,0.375,48,2.694,51,0.028,52,0.065,61,0.771,65,3.01,66,2.602,67,3.999,68,3.999,78,0.003,79,0.003,96,4.07,112,2.734,113,2.734,118,2.811,119,2.811,121,0.602,124,0.529,127,0.928,246,4.236,286,4.806,287,1.777,372,5.359,373,5.359,374,5.058,375,5.359,376,5.359,377,5.359,378,5.359,380,4.07,401,3.964,402,4.627,403,3.964,404,4.206,408,3.883,409,3.475,495,2.644,577,1.615,719,6.243,720,6.243,721,5.359,722,5.359,723,5.359,724,3.822,725,5.737,859,2.183,876,2.075,887,4.806,905,2.714,906,4.72,907,4.292,908,4.292,909,5.325,910,4.292,911,2.714,912,3.344,913,4.292,914,2.714,915,4.292,916,6.243,917,6.243,918,5.737,919,7.011,920,6.243,921,6.243,922,7.011,923,2.714,924,2.714,925,2.714,926,4.292,927,2.714,928,2.714,929,6.243,930,6.243,931,6.053,932,2.714,933,4.292,934,4.806,935,6.243,936,5.359,937,7.011,938,7.011,939,2.714,940,2.417,941,2.714,942,2.714,943,2.714,944,2.075,945,5.04,946,1.932,947,1.932,948,1.932,949,1.932,950,2.714,951,2.714,952,2.714,953,2.714,954,2.714,955,2.714]],["title/classes/ApiExceptionFilter.html",[52,0.114,232,2.657]],["body/classes/ApiExceptionFilter.html",[3,0.064,4,0.056,5,0.064,7,0.204,8,1.131,14,0.45,16,0.925,17,0.007,18,0.45,19,0.844,22,2.539,24,3.324,28,0.146,30,0.908,32,0.33,37,0.86,40,2.496,48,3.392,49,3.024,51,0.064,52,0.15,53,2.314,59,2.171,66,1.73,78,0.005,79,0.005,121,1.381,130,2.294,232,4.364,246,3.761,399,3.174,419,2.671,452,1.893,495,2.496,564,2.734,844,6.449,848,5.923,850,5.298,851,6.749,853,4.758,857,4.758,858,4.758,859,2.552,860,4.758,864,4.758,865,4.758,871,4.267,895,5.093,896,5.093,898,5.542,899,5.542,900,5.542,902,5.542,903,6.899,904,5.093,956,7.748,957,5.542,958,6.224,959,6.224,960,6.224,961,6.224]],["title/injectables/AppClusterService.html",[0,0.727,962,3.234]],["body/injectables/AppClusterService.html",[0,1.005,2,1.597,3,0.05,4,0.043,5,0.05,7,0.156,8,0.952,9,2.382,14,0.577,16,0.97,17,0.007,18,0.472,19,0.884,28,0.174,30,1.084,32,0.29,36,1.948,37,0.661,51,0.05,52,0.115,55,2.353,59,1.826,61,0.471,63,2.694,66,1.813,73,1.567,78,0.004,79,0.004,94,2.387,106,1.647,124,0.804,126,1.482,127,0.673,130,1.763,244,2.787,307,0.941,314,1.061,324,4.492,369,2.456,403,4.273,419,2.799,495,2.617,906,5.108,962,4.473,963,3.914,964,6.524,965,6.524,966,7.103,967,5.81,968,6.527,969,4.783,970,4.273,971,5.81,972,4.783,973,5.81,974,4.783,975,5.81,976,4.783,977,5.81,978,5.81,979,4.259,980,4.259,981,5.81,982,4.259,983,6.527,984,4.259,985,3.279,986,4.259,987,4.259,988,4.259,989,5.339,990,5.81,991,4.259,992,4.259,993,4.259,994,4.259,995,4.259,996,4.259,997,4.259,998,3.914,999,4.259,1000,7.103,1001,4.259,1002,4.259,1003,4.259,1004,4.259,1005,7.103,1006,4.259,1007,4.259,1008,4.259,1009,4.259,1010,4.259,1011,3.914,1012,4.259,1013,5.81,1014,4.259,1015,4.707,1016,3.914,1017,4.259,1018,4.259,1019,4.259,1020,4.259,1021,4.259,1022,4.259,1023,4.259,1024,4.259,1025,4.259]],["title/controllers/AppController.html",[146,2.072,1026,3.86]],["body/controllers/AppController.html",[3,0.044,4,0.038,5,0.044,7,0.137,8,0.87,9,2.378,14,0.545,16,1.03,17,0.007,18,0.501,19,0.939,22,2.972,23,3.664,24,3.962,25,3.26,26,4.026,28,0.163,29,2.453,30,1.101,31,1.891,32,0.346,37,0.58,40,1.685,51,0.044,52,0.101,55,2.059,58,2.391,59,2.138,61,0.682,66,1.168,73,2.27,78,0.004,79,0.004,94,1.917,95,3.779,98,2.222,106,0.932,107,1.541,115,1.436,126,1.847,127,0.975,128,1.647,140,1.549,146,2.619,148,1.803,150,2.448,191,2.639,199,4.301,324,3.358,329,5.67,350,3.438,351,5.67,388,3.438,389,3.438,390,3.438,391,3.438,392,3.438,393,3.438,399,2.243,400,2.683,436,3.438,452,1.278,456,4.879,457,3.438,458,3.438,459,3.438,460,3.744,461,3.438,462,2.881,463,3.438,464,3.031,465,3.438,466,3.438,467,3.438,468,3.438,469,3.438,470,3.438,471,3.438,495,2.391,564,3.044,840,3.602,1011,3.438,1015,3.031,1026,4.879,1027,4.202,1028,6.929,1029,6.929,1030,7.963,1031,4.202,1032,4.202,1033,4.202,1034,4.202,1035,4.202,1036,4.202,1037,4.202,1038,5.962,1039,4.202,1040,5.309,1041,3.438,1042,3.438,1043,3.741,1044,4.301,1045,4.202,1046,4.202,1047,4.557,1048,5.962,1049,7.963,1050,4.202,1051,4.202,1052,4.202,1053,3.741,1054,4.202,1055,3.741,1056,4.202,1057,3.741,1058,4.202,1059,4.202,1060,3.741,1061,4.202,1062,5.962,1063,5.962,1064,5.962,1065,3.741,1066,3.212,1067,3.212,1068,3.741,1069,3.741,1070,3.741,1071,3.741,1072,4.202,1073,4.202,1074,4.202,1075,3.438,1076,4.202,1077,4.202,1078,4.202]],["title/injectables/AppListener.html",[0,0.727,1079,3.403]],["body/injectables/AppListener.html",[0,1.246,2,2.227,3,0.069,4,0.06,5,0.069,7,0.218,8,1.18,14,0.482,16,0.991,17,0.007,18,0.482,19,0.904,28,0.157,30,0.973,32,0.354,36,2.414,37,0.921,51,0.069,52,0.161,78,0.005,79,0.005,107,1.29,128,1.584,383,3.755,410,3.636,985,4.571,1079,5.831,1080,6.668,1081,8.083,1082,8.083,1083,7.08,1084,8.083,1085,6.668,1086,8.083,1087,5.937,1088,6.668,1089,5.097,1090,5.097,1091,5.937,1092,5.937]],["title/modules/AppModule.html",[475,1.739,1093,3.606]],["body/modules/AppModule.html",[3,0.033,4,0.029,5,0.051,8,0.468,14,0.232,16,0.477,17,0.007,18,0.232,19,0.435,28,0.075,30,0.468,32,0.383,37,0.443,39,1.287,40,1.287,44,1.224,45,1.559,46,1.383,47,1.519,51,0.033,52,0.077,53,0.958,59,1.457,78,0.003,79,0.003,107,0.946,115,1.668,130,1.802,135,1.289,136,1.46,148,2.098,225,1.808,226,1.41,280,2.05,281,1.648,282,1.939,298,1.879,321,1.919,452,0.976,475,1.802,476,3.972,477,1.519,478,2.375,484,2.511,485,1.602,486,1.602,488,2.511,490,2.016,491,3.071,492,4.159,494,2.016,495,1.287,497,3.071,498,2.016,500,1.697,501,3.749,502,1.808,505,3.972,506,1.939,511,1.26,512,2.314,513,1.697,516,2.05,517,1.697,518,3.857,519,1.87,520,1.75,527,1.697,528,1.648,531,4.376,532,2.2,533,2.255,534,1.808,535,2.314,536,1.75,537,2.2,538,1.697,539,2.314,540,1.697,541,2.2,542,1.75,543,2.375,544,1.75,545,1.731,546,1.346,548,2.511,549,1.697,550,1.697,551,1.697,552,1.697,553,2.586,564,2.602,566,1.648,658,2.954,737,2.626,841,3.738,850,3.071,906,3.23,962,5.149,970,2.102,1026,4.847,1093,7.308,1094,2.858,1095,2.858,1096,2.858,1097,4.717,1098,4.538,1099,4.918,1100,4.717,1101,4.538,1102,5.418,1103,5.142,1104,3.21,1105,3.21,1106,3.21,1107,1.939,1108,3.21,1109,3.21,1110,3.21,1111,2.858,1112,4.528,1113,2.626,1114,2.454,1115,3.21,1116,4.001,1117,4.354,1118,3.21,1119,2.858,1120,3.738,1121,3.21,1122,2.315,1123,2.454,1124,2.454,1125,3.21,1126,3.21,1127,4.89,1128,3.21,1129,2.315,1130,3.21,1131,2.626,1132,2.858,1133,2.454,1134,3.21,1135,2.441,1136,2.858,1137,3.202,1138,2.626,1139,3.527,1140,2.858,1141,3.527,1142,2.858,1143,3.738,1144,4.001,1145,3.21,1146,2.454,1147,3.21,1148,4.89,1149,3.21,1150,4.354,1151,3.21,1152,2.858,1153,3.21,1154,3.21,1155,6.623,1156,3.21,1157,3.21,1158,3.21,1159,3.21,1160,3.21,1161,4.354,1162,3.21,1163,3.21,1164,3.21,1165,3.21,1166,3.21,1167,4.89,1168,3.21,1169,3.21,1170,3.21,1171,3.21,1172,3.21,1173,4.89,1174,3.21,1175,3.21,1176,3.21,1177,3.21,1178,2.626,1179,3.21,1180,3.21,1181,3.21,1182,3.21,1183,2.858,1184,2.454,1185,2.626,1186,2.454,1187,3.738,1188,2.454,1189,2.454,1190,2.454,1191,2.454,1192,2.454,1193,2.454,1194,2.454,1195,3.21,1196,3.21,1197,3.21,1198,3.21,1199,3.21,1200,3.21,1201,3.21,1202,3.21,1203,3.21,1204,3.21,1205,3.21,1206,3.21,1207,3.21,1208,3.21,1209,3.21,1210,3.21,1211,3.21,1212,3.21,1213,3.21,1214,3.21,1215,2.858]],["title/controllers/AuthController.html",[146,2.072,1216,3.86]],["body/controllers/AuthController.html",[3,0.025,4,0.022,5,0.025,7,0.079,8,0.573,9,2.097,11,0.725,14,0.529,16,1.087,17,0.007,18,0.529,19,0.991,22,3.127,23,3.412,24,4.057,25,3.436,26,4.15,28,0.213,29,2.487,30,1.067,31,1.767,32,0.35,37,0.335,40,0.974,44,2.023,46,2.288,51,0.025,52,0.059,55,1.072,58,1.575,60,2.225,61,0.831,63,3.513,65,1.263,78,0.003,79,0.003,94,2.005,104,1.284,107,1.415,110,3.484,125,2.083,127,0.939,128,1.737,140,0.895,146,1.067,148,1.042,150,1.415,157,6.511,160,1.856,171,2.833,182,5.058,186,1.415,187,2.373,188,1.59,189,1.665,190,1.59,191,1.525,192,1.752,193,2.692,194,1.368,195,1.467,197,5.449,198,5.449,199,1.752,200,1.467,201,1.59,202,1.59,207,4.097,208,1.987,211,1.415,212,1.525,213,1.467,214,1.525,221,2.373,222,1.59,223,1.59,224,1.59,225,1.368,229,1.368,230,1.467,231,1.467,232,2.212,233,1.467,234,1.415,235,1.59,236,1.467,237,1.856,240,1.856,242,1.368,243,1.324,244,1.415,245,5.275,246,4.418,248,2.572,250,2.833,251,2.572,253,4.046,255,2.692,256,4.648,272,2.785,314,0.539,321,1.541,383,2.785,399,1.478,404,2.917,486,1.96,495,3.182,604,4.428,660,3.097,669,3.779,676,3.779,703,1.856,704,4.37,709,4.483,714,3.894,747,1.665,945,4.342,946,2.225,947,2.225,948,2.225,949,2.225,1047,1.856,1079,3.567,1152,2.162,1216,3.213,1217,2.428,1218,4.403,1219,4.944,1220,4.944,1221,4.944,1222,4.944,1223,2.428,1224,3.927,1225,5.553,1226,2.428,1227,2.428,1228,2.428,1229,2.428,1230,5.589,1231,3.927,1232,3.927,1233,2.428,1234,2.428,1235,2.428,1236,2.428,1237,2.428,1238,2.428,1239,4.944,1240,2.428,1241,2.428,1242,2.428,1243,3.927,1244,2.428,1245,2.428,1246,2.428,1247,5.46,1248,2.428,1249,3.927,1250,2.428,1251,2.428,1252,2.428,1253,3.927,1254,2.428,1255,2.428,1256,3.497,1257,2.428,1258,2.428,1259,2.428,1260,2.428,1261,4.342,1262,3.927,1263,3.927,1264,2.428,1265,2.428,1266,2.428,1267,1.368,1268,1.987,1269,2.162,1270,2.162,1271,2.162,1272,2.162,1273,3.213,1274,2.162,1275,2.162,1276,1.987,1277,2.428,1278,2.162,1279,1.987,1280,2.162,1281,2.428,1282,2.428,1283,4.767,1284,3.497,1285,2.428,1286,2.428,1287,5.058,1288,2.428,1289,2.428,1290,5.058,1291,5.058,1292,2.428,1293,2.428,1294,2.428,1295,2.428,1296,4.403,1297,2.162,1298,2.428,1299,2.428,1300,2.428,1301,3.927,1302,2.428,1303,2.428,1304,2.428,1305,2.428,1306,2.428,1307,2.428,1308,2.428,1309,1.987,1310,2.428,1311,2.428,1312,2.428,1313,2.428,1314,2.428,1315,2.428,1316,2.428,1317,2.428]],["title/guards/AuthFerfershGuard.html",[80,2.749,221,2.85]],["body/guards/AuthFerfershGuard.html",[0,1.017,3,0.05,4,0.044,5,0.05,7,0.159,8,0.963,9,1.452,11,1.971,14,0.477,16,0.981,17,0.007,18,0.477,19,0.894,28,0.212,29,1.722,30,0.71,32,0.357,34,1.688,36,1.971,37,0.672,43,2.428,44,1.651,46,1.867,48,1.869,49,2.363,50,1.994,51,0.05,52,0.117,53,1.452,55,2.045,59,2.129,60,3.896,61,0.649,65,2.7,66,2.334,73,1.593,78,0.004,79,0.004,82,2.739,85,4.893,87,4.421,89,2.834,90,4.524,92,3.717,93,2.007,94,2.122,95,4.084,98,2.572,99,5.044,100,4.76,102,2.938,103,3.368,104,2.572,106,1.662,107,1.554,108,2.834,109,3.185,110,2.243,111,3.334,112,3.389,113,3.389,114,1.793,115,1.008,118,4.321,119,4.321,135,1.74,221,3.987,314,1.464,408,2.572,409,2.301,482,5.046,483,4.01,510,3.508,547,2.938,680,4.905,934,4.524,944,3.718,1318,7.49,1319,4.863,1320,4.331,1321,4.863,1322,4.863,1323,7.49,1324,6.599,1325,4.863,1326,4.863,1327,4.863]],["title/injectables/AuthMiddleware.html",[0,0.727,1328,3.86]],["body/injectables/AuthMiddleware.html",[0,1.187,2,2.058,3,0.064,4,0.055,5,0.064,7,0.202,8,1.124,10,4.337,14,0.446,16,0.916,17,0.007,18,0.446,19,0.836,21,3.472,22,3.026,23,4.4,24,3.775,25,3.405,26,4.163,28,0.145,29,2.974,30,0.9,31,2.774,32,0.301,35,4.2,36,2.3,37,0.851,40,2.472,50,2.527,51,0.064,52,0.149,53,1.841,58,2.472,59,1.516,78,0.005,79,0.005,107,1.49,186,3.592,194,3.472,399,2.319,400,2.774,566,3.165,604,3.955,660,3.361,840,3.724,1267,3.472,1328,6.302,1329,6.164,1330,6.164,1331,4.037,1332,4.712,1333,5.28,1334,5.28,1335,4.226,1336,4.226,1337,4.712,1338,4.226,1339,4.226,1340,6.164,1341,4.712]],["title/modules/AuthModule.html",[475,1.739,501,2.355]],["body/modules/AuthModule.html",[1,2.934,3,0.037,4,0.032,5,0.037,8,0.523,14,0.259,16,0.533,17,0.007,18,0.259,19,0.486,28,0.084,30,0.523,32,0.381,37,0.495,39,1.438,44,1.33,45,1.742,46,1.504,47,1.697,51,0.037,52,0.087,53,1.071,78,0.004,79,0.004,115,1.101,135,1.401,136,1.587,148,2.28,225,2.02,226,1.575,234,2.09,270,5.578,272,5.003,278,2.741,279,3.211,280,2.228,281,1.841,282,2.167,298,2.042,339,4.27,340,4.731,371,2.252,385,2.587,386,2.252,442,2.458,475,1.959,476,2.81,477,1.697,478,2.582,484,2.729,485,1.79,486,1.79,488,2.729,489,3.48,490,2.252,491,3.338,492,4.397,494,5.339,495,1.438,496,4.211,497,3.338,498,2.252,500,1.896,501,4.665,503,4.84,505,2.81,506,2.167,507,2.167,508,3.48,509,2.348,511,1.407,512,2.515,513,1.896,516,2.228,517,1.896,518,2.729,519,2.09,520,1.956,524,2.458,525,2.741,526,2.741,527,1.896,528,1.841,531,3.097,532,2.458,548,1.841,549,1.896,550,1.896,551,1.896,552,1.896,553,1.896,554,1.956,555,2.741,556,2.741,559,2.741,560,2.741,562,2.348,563,5.451,564,3.978,566,4.65,567,2.587,570,6.118,572,5.847,704,2.348,714,2.458,1079,5.649,1107,2.167,1116,4.349,1143,4.062,1144,4.349,1216,5.181,1230,2.741,1261,2.741,1269,3.193,1270,3.193,1271,3.193,1272,3.193,1278,3.193,1280,3.193,1328,2.934,1342,3.193,1343,3.193,1344,3.193,1345,5.817,1346,3.586,1347,3.586,1348,3.586,1349,4.732,1350,4.349,1351,3.586,1352,3.586,1353,4.732,1354,2.934,1355,2.934,1356,3.586,1357,3.586,1358,3.586,1359,3.586,1360,3.586,1361,5.314,1362,5.314,1363,5.314,1364,6.332,1365,3.586,1366,3.586,1367,3.586,1368,5.314,1369,3.586,1370,3.586,1371,3.586,1372,3.586,1373,2.741,1374,3.586,1375,3.586]],["title/interfaces/AuthUser.html",[307,0.928,1376,2.962]],["body/interfaces/AuthUser.html",[3,0.059,4,0.051,5,0.059,7,0.186,17,0.007,18,0.585,28,0.212,32,0.222,44,1.83,46,2.069,51,0.095,61,0.975,78,0.005,79,0.005,93,1.727,103,2.381,110,3.939,124,0.901,125,1.897,127,1.201,135,2.329,136,2.183,215,2.556,292,3.199,307,1.811,308,1.972,313,2.545,314,1.794,315,2.753,316,2.415,357,3.004,358,2.917,511,2.229,654,3.199,709,3.097,1376,4.592,1377,3.72,1378,5.338,1379,5.362,1380,5.362,1381,5.362,1382,3.567,1383,3.567,1384,3.567,1385,3.567,1386,3.567]],["title/classes/BadRequestError.html",[52,0.114,885,3.234]],["body/classes/BadRequestError.html",[3,0.062,4,0.054,5,0.062,7,0.196,11,1.792,14,0.6,16,0.892,17,0.007,18,0.434,19,0.813,28,0.195,32,0.235,34,2.083,37,0.829,51,0.086,52,0.2,61,0.948,78,0.005,79,0.005,121,1.331,124,0.933,126,1.859,127,1.167,369,3.082,404,3.082,409,2.84,564,3.326,577,3.279,859,3.402,863,6.286,868,7.013,869,6.197,870,4.911,871,6.29,872,4.911,876,4.587,877,4.911,878,4.911,879,4.911,880,4.911,881,4.587,882,4.911,883,4.911,884,4.329,885,5.192,886,6.197,887,5.974,888,4.911,1387,6.001,1388,6.743,1389,5.344,1390,5.344]],["title/classes/BanUserDto.html",[52,0.114,1391,3.606]],["body/classes/BanUserDto.html",[3,0.067,4,0.058,5,0.067,7,0.212,14,0.573,17,0.007,28,0.186,32,0.31,51,0.067,52,0.191,61,0.78,78,0.005,79,0.005,106,2.073,121,1.434,124,0.977,125,2.865,127,1.116,128,1.885,129,3.403,130,2.924,131,2.2,132,3.113,133,4.432,135,2.091,139,3.681,140,2.383,141,4.467,142,3.326,143,2.484,144,3.403,145,3.141,1391,6.063,1392,8.581,1393,5.29,1394,8.581,1395,7.931,1396,6.465,1397,6.465,1398,6.465,1399,6.465]],["title/classes/BookmarksProducts.html",[52,0.114,1139,3.403]],["body/classes/BookmarksProducts.html",[3,0.06,4,0.052,5,0.06,7,0.19,14,0.59,17,0.007,28,0.214,32,0.319,51,0.06,52,0.14,78,0.005,79,0.005,114,3.009,115,1.884,121,1.285,124,0.913,125,2.969,127,1.279,128,1.939,132,2.906,135,1.952,226,2.545,314,1.972,452,2.616,545,2.622,546,2.429,577,2.786,578,3.673,579,4.252,602,3.598,603,4.091,619,3.332,620,3.332,642,3.871,643,2.607,644,3.253,645,3.965,649,2.545,650,2.486,652,2.607,655,3.673,738,2.892,1139,5.342,1400,5.793,1401,5.007,1402,3.064,1403,5.793,1404,4.85,1405,5.793,1406,5.793,1407,5.793,1408,3.064]],["title/controllers/CardController.html",[146,2.072,1409,3.86]],["body/controllers/CardController.html",[3,0.075,4,0.064,5,0.075,17,0.007,32,0.351,37,0.994,51,0.075,52,0.174,78,0.006,79,0.006,146,3.161,148,3.087,150,4.193,195,4.348,229,4.053,230,4.348,231,4.348,232,4.764,233,4.348,234,4.193,236,4.348,1409,6.922,1410,7.196,1411,7.196,1412,7.196]],["title/injectables/CardService.html",[0,0.727,1413,3.606]],["body/injectables/CardService.html",[0,1.326,2,2.476,3,0.077,4,0.066,5,0.077,17,0.007,32,0.29,36,2.57,37,1.024,51,0.077,52,0.179,78,0.006,79,0.006,396,4.32,1413,6.58,1414,7.414]],["title/classes/Cart.html",[52,0.114,535,2.232]],["body/classes/Cart.html",[3,0.046,4,0.039,5,0.046,7,0.144,8,0.901,14,0.668,16,0.656,17,0.007,18,0.319,19,0.598,28,0.217,30,1.184,32,0.301,51,0.046,52,0.106,55,2.523,61,0.88,78,0.004,79,0.004,107,1.569,114,2.989,115,1.741,121,0.979,124,0.76,125,2.708,127,1.182,128,2.05,132,3.298,135,2.388,226,1.938,314,1.799,452,2.343,533,3.979,535,2.92,545,2.975,546,1.85,577,2.322,578,3.202,579,4.024,587,2.571,603,3.96,619,2.776,620,2.776,642,3.649,643,1.985,644,2.71,645,2.997,647,3.475,649,1.938,650,1.893,652,1.985,655,3.202,1402,3.763,1404,2.889,1415,4.411,1416,7.115,1417,8.626,1418,3.457,1419,7.221,1420,7.706,1421,7.706,1422,5.89,1423,6.306,1424,6.17,1425,3.61,1426,4.411,1427,4.411,1428,4.411,1429,2.771,1430,4.411,1431,4.411,1432,4.411,1433,4.411,1434,4.411,1435,4.411,1436,4.411,1437,4.411,1438,6.17,1439,4.411,1440,4.716,1441,3.875,1442,4.411,1443,3.61,1444,4.411,1445,4.411,1446,7.115,1447,3.61,1448,4.411,1449,3.61]],["title/modules/CartModule.html",[475,1.739,1097,2.962]],["body/modules/CartModule.html",[3,0.053,4,0.046,5,0.053,17,0.007,32,0.386,37,0.703,39,2.041,44,1.702,45,2.472,46,1.925,47,2.408,51,0.053,52,0.123,78,0.005,79,0.005,115,1.41,135,1.794,136,2.032,148,2.919,226,2.235,280,2.853,281,2.613,298,2.614,475,2.508,477,2.408,478,3.305,484,3.494,485,2.541,486,2.541,488,3.494,496,5.127,500,2.691,501,3.826,502,2.866,511,1.997,512,3.219,513,2.691,514,3.598,515,3.075,516,2.853,517,2.691,518,3.494,519,2.966,520,2.775,527,2.691,528,2.613,533,3.138,535,3.219,537,3.061,538,2.691,539,3.219,540,2.691,541,3.061,542,2.775,543,3.305,544,2.775,545,2.409,546,2.134,548,2.613,549,2.691,550,2.691,551,2.691,552,2.691,553,2.691,554,2.775,1097,5.51,1098,4.111,1100,4.273,1101,4.111,1122,3.671,1123,3.89,1129,3.671,1409,6.272,1413,6.707,1450,4.532,1451,4.532,1452,5.089,1453,5.089,1454,5.089,1455,5.089,1456,5.089]],["title/classes/CartProduct.html",[52,0.114,533,2.176]],["body/classes/CartProduct.html",[3,0.049,4,0.043,5,0.049,7,0.156,8,0.948,14,0.648,17,0.007,28,0.216,30,0.948,32,0.289,51,0.049,52,0.115,55,2.348,78,0.004,79,0.004,107,1.257,114,2.933,115,1.905,121,1.055,124,0.801,127,1.261,128,2.043,132,3.517,314,1.848,452,2.726,533,3.415,535,4.351,545,3.256,577,2.445,578,3.331,579,4.21,587,3.786,602,4.178,603,4.033,619,2.924,620,2.924,642,3.749,643,2.139,644,2.854,645,3.596,647,4.169,649,2.088,650,2.04,652,2.139,655,3.58,1401,4.692,1402,2.514,1457,9.09,1458,4.754,1459,7.418,1460,4.047,1461,7.085,1462,6.511,1463,4.754,1464,4.687,1465,4.754,1466,4.754,1467,4.754,1468,4.754,1469,3.43,1470,4.754,1471,4.754,1472,4.754,1473,5.21,1474,4.754,1475,4.234,1476,3.891,1477,4.234]],["title/classes/CartProduct-1.html",[52,0.095,130,1.448,533,1.811]],["body/classes/CartProduct-1.html",[3,0.05,4,0.043,5,0.05,7,0.158,8,0.957,14,0.65,17,0.007,28,0.217,30,0.957,32,0.291,51,0.05,52,0.116,55,2.358,78,0.004,79,0.004,107,1.269,114,2.949,115,1.91,121,1.069,124,0.808,127,1.265,128,2.052,132,3.529,314,1.857,452,2.734,533,3.025,535,4.362,545,3.264,546,2.021,577,2.468,578,3.354,579,4.22,587,3.822,602,4.195,603,4.046,619,2.951,620,2.951,642,3.766,643,2.169,644,2.881,645,3.621,647,4.199,649,2.117,650,2.068,652,2.169,655,3.601,1401,4.714,1402,2.549,1459,7.453,1460,4.066,1461,7.125,1462,6.548,1464,4.731,1469,3.477,1473,5.24,1475,4.291,1476,3.944,1477,4.291,1478,4.819,1479,4.819,1480,4.819,1481,4.819,1482,4.819,1483,4.819,1484,4.819,1485,4.819,1486,4.819,1487,4.819]],["title/controllers/CategoriesController.html",[146,2.072,1488,3.86]],["body/controllers/CategoriesController.html",[3,0.044,4,0.038,5,0.044,7,0.139,8,0.879,11,1.273,14,0.549,16,1.038,17,0.007,18,0.505,19,0.947,28,0.201,30,1.108,32,0.369,37,0.589,44,1.748,51,0.044,52,0.103,55,1.164,78,0.004,79,0.004,81,5.476,94,2.805,106,0.946,107,1.469,127,1.169,128,1.804,140,1.572,146,1.873,148,1.829,150,2.485,158,6.212,163,5.366,164,5.366,187,4.22,188,4.971,189,2.923,190,2.792,191,2.678,193,4.789,194,2.401,195,2.576,197,5.039,198,5.039,200,4.586,201,2.792,202,2.792,211,2.485,212,2.678,213,2.576,214,2.678,215,1.919,216,2.923,217,2.485,218,2.923,219,2.923,220,2.923,221,5.162,222,2.792,223,2.792,224,2.792,225,2.401,229,2.401,230,2.576,231,2.576,232,3.393,233,2.576,234,2.485,235,2.792,236,2.576,237,3.259,245,4.346,246,3.64,248,4.574,249,4.789,251,3.945,255,5.698,537,3.143,747,2.923,1047,3.259,1267,2.401,1284,6.759,1488,4.929,1489,4.264,1490,3.305,1491,6.22,1492,5.364,1493,5.803,1494,6.22,1495,3.797,1496,6.531,1497,4.929,1498,6.024,1499,6.024,1500,5.34,1501,4.264,1502,4.264,1503,7.401,1504,3.797,1505,4.264,1506,4.264,1507,4.264,1508,6.212,1509,6.024,1510,4.264,1511,4.264,1512,3.797,1513,4.264,1514,4.264,1515,3.259,1516,4.264,1517,4.264,1518,2.923,1519,3.489,1520,3.259,1521,4.574,1522,3.797,1523,3.797,1524,3.489,1525,2.485,1526,2.792,1527,3.259,1528,4.264,1529,4.264,1530,4.264,1531,4.264,1532,4.264,1533,4.264,1534,4.264,1535,4.264,1536,4.264,1537,4.264,1538,4.264,1539,4.264,1540,4.264]],["title/modules/CategoriesModule.html",[475,1.739,1098,2.85]],["body/modules/CategoriesModule.html",[3,0.051,4,0.044,5,0.051,8,0.712,14,0.353,16,0.725,17,0.007,18,0.353,19,0.661,28,0.115,30,0.712,32,0.383,37,0.674,39,1.956,44,1.655,45,2.37,46,1.871,47,2.308,51,0.051,52,0.118,53,1.457,78,0.004,79,0.004,115,1.37,135,1.743,136,1.975,148,2.837,226,2.143,280,2.773,281,2.505,298,2.541,475,2.437,476,3.497,477,2.308,478,3.212,484,3.396,485,2.435,486,2.435,488,3.396,490,3.064,491,4.153,492,5.051,494,4.153,495,1.956,496,4.992,497,4.153,498,3.064,500,2.58,501,3.301,502,2.748,505,3.497,506,2.947,507,2.947,508,3.195,509,3.195,511,1.915,512,3.129,513,2.58,514,3.497,515,2.947,516,2.773,517,2.58,518,3.396,519,2.843,520,2.66,527,2.58,528,2.505,537,2.976,539,3.129,545,2.341,546,2.045,548,2.505,549,2.58,550,2.58,551,2.58,552,2.58,553,2.58,554,2.66,562,3.195,563,3.195,564,3.295,566,3.852,572,3.519,1098,5.236,1101,3.995,1107,2.947,1122,3.519,1373,3.729,1488,6.138,1521,5.675,1522,4.344,1524,3.992,1541,4.344,1542,4.344,1543,4.878,1544,4.878,1545,4.878,1546,4.878,1547,4.878,1548,4.878,1549,3.992]],["title/injectables/CategoriesService.html",[0,0.727,1521,3.089]],["body/injectables/CategoriesService.html",[0,0.82,2,1.199,3,0.037,4,0.032,5,0.037,7,0.117,8,0.776,9,2.815,11,1.588,14,0.602,16,1.205,17,0.007,18,0.586,19,1.099,22,1.176,28,0.184,30,1.183,32,0.332,34,1.246,36,1.588,37,0.496,38,2.092,39,1.44,48,1.379,50,1.472,51,0.037,52,0.087,55,0.98,56,2.092,59,2.128,61,0.623,65,2.519,66,2.177,67,1.699,68,1.699,73,2.876,78,0.004,79,0.004,94,2.912,106,0.797,107,1.611,126,1.648,127,1.25,314,1.738,387,2.255,408,3.956,409,3.54,419,1.54,537,4.039,738,3.163,946,3.648,947,3.525,948,3.525,949,3.525,1087,3.197,1408,3.351,1490,1.699,1491,4.736,1492,4.736,1493,5.355,1494,4.736,1495,4.736,1496,5.355,1503,4.736,1504,4.736,1508,5.185,1512,4.736,1521,3.483,1523,3.197,1524,2.938,1525,2.092,1526,2.351,1550,3.59,1551,5.319,1552,5.319,1553,5.319,1554,3.59,1555,3.59,1556,5.319,1557,3.59,1558,3.59,1559,3.59,1560,5.319,1561,3.59,1562,5.319,1563,5.319,1564,3.59,1565,5.319,1566,3.59,1567,6.336,1568,5.733,1569,3.59,1570,5.319,1571,7.834,1572,3.59,1573,3.59,1574,3.59,1575,6.336,1576,5.319,1577,3.59,1578,6.336,1579,3.59,1580,6.336,1581,6.336,1582,6.336,1583,6.336,1584,6.336,1585,6.336,1586,6.336,1587,7.834,1588,3.59,1589,3.59,1590,3.59,1591,3.59,1592,3.59,1593,4.352,1594,3.59,1595,5.319,1596,6.336,1597,6.336,1598,6.336,1599,6.336,1600,3.59,1601,3.59,1602,3.59,1603,3.59,1604,3.59]],["title/classes/Category.html",[52,0.114,537,2.123]],["body/classes/Category.html",[3,0.049,4,0.043,5,0.049,7,0.156,8,0.951,14,0.637,17,0.007,28,0.218,30,0.697,32,0.312,51,0.049,52,0.115,55,2.026,61,0.883,78,0.004,79,0.004,107,0.924,114,3.174,115,1.784,121,1.06,124,0.803,127,0.917,128,2.046,132,3.612,314,1.851,452,2.911,537,2.933,539,3.084,545,3.049,546,2.002,577,2.452,578,3.339,579,4.288,602,4.359,603,4.141,619,2.933,620,2.933,642,3.875,643,2.149,644,2.863,649,2.098,650,2.049,652,2.149,655,2.149,656,4.816,945,6.858,946,3.754,947,3.754,948,3.754,949,3.754,1402,4.412,1418,3.605,1422,6.093,1429,2.999,1441,4.093,1447,3.908,1490,2.26,1526,3.128,1605,4.776,1606,4.776,1607,4.776,1608,4.776,1609,4.776,1610,4.776,1611,4.776,1612,4.776,1613,2.885,1614,4.776]],["title/interfaces/CategoryCreationAtrb.html",[307,0.928,1613,2.85]],["body/interfaces/CategoryCreationAtrb.html",[3,0.057,4,0.049,5,0.057,7,0.179,17,0.007,18,0.516,28,0.198,51,0.095,61,0.988,78,0.005,79,0.005,124,0.88,127,1.316,131,1.756,307,1.795,308,1.9,314,1.763,316,2.132,318,2.59,738,3.564,946,4.104,947,4.104,948,4.104,949,4.104,1135,3.564,1408,3.776,1418,2.66,1460,2.66,1490,2.59,1525,4.16,1613,4.314,1615,3.585,1616,3.19,1617,3.776,1618,2.66,1619,4.16,1620,3.666,1621,4.16,1622,3.666,1623,3.666,1624,3.308,1625,4.484,1626,4.314,1627,3.19,1628,3.308,1629,3.585]],["title/classes/ChangeDto.html",[52,0.114,1230,3.606]],["body/classes/ChangeDto.html",[3,0.062,4,0.053,5,0.062,7,0.195,14,0.545,17,0.007,28,0.177,32,0.34,51,0.062,52,0.182,61,0.855,78,0.005,79,0.005,106,2.032,121,1.321,124,0.929,128,1.791,129,3.234,131,2.137,139,3.548,140,2.196,142,3.467,143,2.288,144,3.234,321,3.518,859,3.563,1230,5.761,1630,5.956,1631,4.996,1632,5.458,1633,4.894,1634,6.167,1635,5.437,1636,5.958,1637,6.269,1638,4.008,1639,6.269,1640,4.874,1641,5.956,1642,5.958,1643,5.956,1644,3.632,1645,4.297,1646,4.874,1647,4.297,1648,4.874]],["title/interfaces/CodeDto.html",[307,0.928,709,2.572]],["body/interfaces/CodeDto.html",[3,0.059,4,0.051,5,0.059,7,0.186,17,0.007,18,0.585,28,0.221,32,0.222,44,2.137,46,2.416,51,0.095,61,0.975,78,0.005,79,0.005,93,1.727,103,2.381,110,4.172,124,0.901,125,1.897,127,1.201,135,1.928,136,2.183,215,2.556,292,3.199,307,1.811,308,1.972,313,2.684,314,1.794,315,2.753,316,2.415,357,3.004,358,2.917,511,2.229,654,3.199,709,3.987,1376,3.567,1377,3.72,1378,4.418,1379,4.592,1380,4.592,1381,4.592,1382,3.567,1383,3.567,1384,3.567,1385,3.567,1386,3.567]],["title/modules/CoreModule.html",[475,1.739,531,2.749]],["body/modules/CoreModule.html",[3,0.049,4,0.042,5,0.049,17,0.007,18,0.339,32,0.385,37,0.648,39,1.881,44,1.611,45,2.279,46,1.822,47,2.22,51,0.049,52,0.113,78,0.004,79,0.004,115,1.775,135,1.697,136,1.923,211,3.752,212,2.946,213,2.834,214,2.946,226,2.061,280,2.7,281,2.409,282,2.834,298,2.474,339,4.671,452,1.427,474,3.384,475,2.373,477,2.22,478,3.128,484,3.306,485,2.342,486,2.342,488,3.306,500,2.481,511,1.841,512,3.047,513,2.481,516,2.7,517,2.481,520,2.558,527,2.481,528,2.409,531,5.344,533,2.97,534,2.642,535,3.047,536,2.558,537,2.897,538,2.481,539,3.047,540,2.481,541,2.897,542,2.558,543,3.128,544,2.558,545,2.28,546,1.967,548,2.409,549,2.481,550,2.481,551,2.481,552,2.481,553,2.481,554,2.558,841,4.922,962,5.872,1089,3.586,1090,3.586,1116,5.269,1117,5.733,1119,4.177,1120,4.922,1132,4.177,1133,3.586,1143,5.619,1144,6.015,1349,5.733,1649,4.177,1650,4.177,1651,5.872,1652,4.691,1653,4.691,1654,4.691,1655,4.691,1656,4.691,1657,4.691,1658,3.839,1659,4.691,1660,4.691,1661,5.269,1662,4.691,1663,4.691,1664,4.691,1665,4.691,1666,4.691,1667,4.691,1668,4.691,1669,4.691,1670,4.691,1671,4.691,1672,4.691,1673,4.691]],["title/injectables/CorsMiddleware.html",[0,0.727,1114,3.606]],["body/injectables/CorsMiddleware.html",[0,1.015,2,1.619,3,0.05,4,0.043,5,0.05,7,0.159,8,1.091,10,3.709,14,0.541,16,0.979,17,0.007,18,0.476,19,0.893,21,2.731,22,2.748,23,4.075,24,3.442,25,3.189,26,3.796,28,0.176,29,2.648,30,0.961,32,0.314,33,3.382,35,3.591,36,1.966,37,0.67,40,1.944,50,1.988,51,0.05,52,0.117,53,1.448,55,2.042,59,1.973,61,0.825,65,1.559,66,2.078,70,3.979,71,3.709,78,0.004,79,0.004,93,2.003,106,1.659,107,1.552,115,1.005,124,0.811,126,1.502,186,2.825,194,2.731,307,0.954,324,4.518,369,3.382,452,1.475,460,3.045,566,2.49,850,3.045,859,1.988,884,3.498,1044,4.75,1066,3.706,1067,3.706,1114,5.034,1267,2.731,1331,3.175,1333,3.324,1334,5.499,1335,5.127,1336,3.324,1338,5.499,1339,3.324,1518,3.324,1674,4.317,1675,7.143,1676,5.864,1677,6.864,1678,4.849,1679,5.389,1680,4.849,1681,5.864,1682,4.849,1683,5.034,1684,3.706,1685,5.864,1686,4.317,1687,4.317,1688,4.317,1689,4.317,1690,4.317,1691,6.119,1692,6.659,1693,4.317,1694,4.317,1695,4.317,1696,4.317,1697,5.864,1698,4.317,1699,4.317,1700,3.968,1701,4.317,1702,7.703,1703,7.703,1704,3.968,1705,3.968,1706,4.317,1707,3.968,1708,4.317,1709,4.317,1710,4.317,1711,5.864,1712,4.317,1713,4.317,1714,4.317]],["title/classes/CreateAccessTokenDto.html",[52,0.114,1715,4.2]],["body/classes/CreateAccessTokenDto.html",[3,0.052,4,0.045,5,0.052,7,0.164,14,0.614,17,0.007,19,1.185,28,0.199,32,0.318,51,0.052,52,0.163,61,0.801,78,0.005,79,0.005,93,2.051,106,2.128,115,1.398,121,1.115,124,0.831,125,2.543,127,0.949,128,2.017,129,3.643,130,2.487,131,2.285,132,2.647,133,3.445,135,2.146,136,2.274,139,3.751,140,1.852,141,3.799,142,2.828,143,1.931,144,3.643,145,2.441,215,3.663,313,2.344,419,2.894,434,3.445,511,1.972,622,5.157,623,5.157,624,5.157,625,5.157,626,5.157,646,3.464,648,3.291,663,3.291,859,2.766,1382,4.783,1383,4.783,1633,4.924,1638,3.755,1644,2.963,1647,3.625,1715,6.007,1716,5.025,1717,4.076,1718,3.445,1719,5.993,1720,4.625,1721,4.625,1722,4.625,1723,4.625,1724,4.438,1725,5.025,1726,3.841,1727,5.025,1728,5.025,1729,5.025,1730,5.157,1731,4.112,1732,5.025,1733,5.025,1734,4.866,1735,3.931,1736,4.866,1737,3.625,1738,3.445]],["title/classes/CreateAdminDto.html",[52,0.114,156,3.403]],["body/classes/CreateAdminDto.html",[3,0.041,4,0.036,5,0.041,7,0.13,14,0.641,17,0.007,18,0.564,28,0.208,32,0.263,44,0.996,51,0.041,52,0.138,60,3.026,61,0.892,70,3.466,78,0.004,79,0.004,93,2.606,106,2.163,121,0.883,124,0.707,127,0.56,128,2.106,129,3.802,131,2.339,135,1.512,139,3.85,140,1.467,142,3.406,143,1.53,144,3.802,156,4.138,310,3.453,311,3.453,312,3.453,313,2.119,315,2.289,316,2.008,321,2.888,434,2.729,452,2.606,600,7.42,629,4.385,646,2.946,648,2.607,663,2.607,726,3.258,828,3.918,859,3.513,1632,4.621,1638,3.394,1644,1.749,1717,3.466,1724,3.918,1730,4.385,1731,3.258,1734,5.626,1739,7.99,1740,3.981,1741,3.981,1742,7.234,1743,5.736,1744,5.736,1745,3.981,1746,6.552,1747,3.981,1748,3.981,1749,3.981,1750,3.043,1751,4.056,1752,4.385,1753,4.385,1754,4.385,1755,3.981,1756,3.981,1757,3.981,1758,3.932,1759,5.108,1760,6.552,1761,6.552,1762,7.799,1763,3.981,1764,3.981,1765,3.981,1766,4.385,1767,3.258,1768,5.625,1769,5.625,1770,4.385,1771,5.988,1772,3.981,1773,5.108,1774,3.981,1775,3.033,1776,3.043,1777,3.043,1778,3.043]],["title/classes/CreateAdminRefreshTokenDto.html",[52,0.114,354,3.86]],["body/classes/CreateAdminRefreshTokenDto.html",[3,0.051,4,0.044,5,0.051,7,0.161,14,0.609,17,0.007,25,1.812,28,0.198,32,0.315,44,2.316,51,0.051,52,0.16,61,0.794,78,0.004,79,0.004,93,2.021,106,2.122,115,1.377,121,1.091,124,0.819,127,0.935,128,2.002,129,3.616,130,2.45,131,2.276,132,2.609,133,3.37,135,1.985,136,2.249,139,3.727,140,1.812,141,3.744,142,3.158,143,1.889,144,3.616,145,2.388,215,3.792,242,2.769,243,3.625,313,2.324,318,3.564,319,5.163,354,5.439,383,4.892,511,1.929,589,4.353,590,4.353,591,4.353,592,4.353,593,4.353,594,4.353,595,4.353,596,4.353,597,4.353,598,4.353,599,4.353,600,6.602,612,5.919,646,3.413,658,2.97,659,3.37,660,2.681,726,4.023,859,2.725,1644,2.159,1724,4.389,1726,3.758,1734,4.795,1735,3.873,1737,3.546,1739,7.735,1750,3.758,1751,3.318,1752,5.081,1753,5.081,1754,5.081,1777,3.758,1779,4.378,1780,5.757,1781,4.023,1782,4.916,1783,4.378,1784,4.916,1785,4.378,1786,4.023,1787,4.916]],["title/classes/CreateCategoryDto.html",[52,0.114,1496,3.606]],["body/classes/CreateCategoryDto.html",[3,0.061,4,0.052,5,0.061,7,0.191,14,0.624,17,0.007,28,0.203,32,0.229,51,0.061,52,0.18,61,0.922,78,0.005,79,0.005,121,1.297,124,0.918,128,2.051,142,3.738,143,2.246,946,3.689,947,3.689,948,3.689,949,3.689,1496,5.694,1638,4.324,1644,2.568,1751,4.68,1775,4.564,1788,5.847,1789,7.686,1790,5.28,1791,5.343,1792,6.427,1793,5.847,1794,5.847,1795,5.847,1796,5.847,1797,3.829,1798,3.672,1799,5.917,1800,5.917]],["title/classes/CreateOwnerDto.html",[52,0.114,1801,3.86]],["body/classes/CreateOwnerDto.html",[3,0.045,4,0.039,5,0.045,7,0.141,14,0.619,17,0.007,18,0.581,25,1.587,28,0.201,32,0.274,51,0.045,52,0.146,60,3.159,61,0.918,78,0.004,79,0.004,106,2.136,121,0.955,124,0.747,127,0.606,128,2.035,129,3.675,131,2.296,139,3.753,140,1.587,142,3.592,143,1.654,144,3.675,242,2.424,243,3.307,313,2.196,315,2.39,316,2.097,321,2.992,434,2.951,589,3.971,590,3.971,591,3.971,592,3.971,593,3.971,594,3.971,595,3.971,596,3.971,597,3.971,598,3.971,599,3.971,629,4.636,646,3.114,648,2.819,658,2.6,659,2.951,660,2.347,663,2.819,859,3.695,1632,4.787,1636,4.157,1638,3.516,1642,4.813,1644,1.891,1717,3.664,1724,4.091,1730,4.636,1731,3.522,1750,3.29,1751,4.162,1752,4.636,1753,4.636,1754,4.636,1758,4.157,1759,5.4,1760,6.788,1761,6.788,1766,4.636,1767,3.522,1768,5.827,1769,5.827,1770,4.636,1771,6.252,1773,5.4,1775,3.207,1776,3.29,1777,3.29,1781,3.522,1801,4.962,1802,4.304,1803,4.598,1804,7.137,1805,4.304,1806,4.304,1807,8.036,1808,4.304,1809,4.304,1810,4.304,1811,6.064,1812,4.304,1813,4.304,1814,4.304,1815,3.29,1816,4.304]],["title/classes/CreateOwnerRefreshTokenDto.html",[52,0.114,1817,3.86]],["body/classes/CreateOwnerRefreshTokenDto.html",[3,0.052,4,0.045,5,0.052,7,0.165,14,0.615,17,0.007,25,1.864,28,0.2,32,0.319,44,1.695,46,1.917,51,0.052,52,0.163,61,0.803,78,0.005,79,0.005,93,2.06,106,2.13,115,1.404,121,1.122,124,0.835,127,0.953,128,2.022,129,3.651,130,2.497,131,2.288,132,2.659,133,3.467,135,2.014,136,2.281,139,3.758,140,1.864,141,3.816,142,3.203,143,1.943,144,3.651,145,2.457,215,3.829,242,2.848,243,3.694,313,2.35,511,1.985,589,4.436,590,4.436,591,4.436,592,4.436,593,4.436,594,4.436,595,4.436,596,4.436,597,4.436,598,4.436,599,4.436,646,3.479,658,3.055,659,3.467,660,2.758,859,2.777,1618,3.711,1644,2.221,1724,4.452,1726,3.865,1734,4.887,1735,3.948,1737,3.648,1750,3.865,1751,3.382,1752,5.178,1753,5.178,1754,5.178,1777,3.865,1780,5.84,1781,4.138,1786,4.138,1803,5.003,1804,6.238,1815,3.865,1817,5.544,1818,5.057,1819,5.544,1820,5.057,1821,5.057,1822,5.057,1823,5.057,1824,5.057]],["title/classes/CreateProductDto.html",[52,0.114,1825,3.606]],["body/classes/CreateProductDto.html",[3,0.048,4,0.041,5,0.048,7,0.15,14,0.631,17,0.007,28,0.222,32,0.307,51,0.048,52,0.189,61,0.928,78,0.004,79,0.004,106,2.13,114,2.681,115,1.625,121,1.02,124,0.782,127,1.227,128,2.073,131,1.789,141,4.096,142,3.658,143,1.766,912,3.987,946,3.273,947,3.273,948,3.273,949,3.273,1460,3.533,1490,3.004,1617,3.846,1620,3.735,1622,3.26,1623,3.26,1638,3.618,1644,2.019,1735,4.571,1736,5.658,1751,3.916,1775,4.148,1790,4.418,1791,4.277,1798,2.887,1825,4.853,1826,4.093,1827,7.33,1828,4.596,1829,4.093,1830,4.596,1831,4.093,1832,4.093,1833,4.596,1834,4.596,1835,4.596,1836,4.596,1837,4.596,1838,2.887,1839,2.887,1840,6.712,1841,3.316,1842,3.761,1843,3.514,1844,4.093,1845,4.986,1846,5.658,1847,5.658,1848,5.559,1849,5.996,1850,3.514,1851,3.514,1852,5.658,1853,4.853,1854,4.853,1855,3.514]],["title/classes/CreateReviewDto.html",[52,0.114,1856,3.403]],["body/classes/CreateReviewDto.html",[3,0.063,4,0.055,5,0.063,7,0.2,14,0.604,17,0.007,18,0.604,28,0.196,32,0.239,51,0.063,52,0.185,61,0.906,78,0.005,79,0.005,106,2.116,121,1.354,124,0.943,128,1.987,142,3.676,143,2.346,316,2.497,1135,4.175,1638,4.25,1644,2.682,1751,4.6,1775,4.422,1790,5.19,1791,5.025,1840,6.325,1846,6.647,1847,6.033,1856,5.522,1857,6.105,1858,8.362,1859,8.362,1860,6.105,1861,6.105,1862,6.105]],["title/classes/CreateRoleDto.html",[52,0.114,1863,3.606]],["body/classes/CreateRoleDto.html",[3,0.063,4,0.055,5,0.063,7,0.2,14,0.553,17,0.007,28,0.18,32,0.299,44,2.194,51,0.063,52,0.185,61,0.862,78,0.005,79,0.005,106,2.044,121,1.354,124,0.943,126,2.59,128,1.819,129,3.284,131,2.325,136,1.823,139,3.588,140,2.25,142,3.506,143,2.346,144,3.284,1633,4.311,1638,4.044,1644,2.682,1751,4.377,1775,4.048,1790,4.938,1791,5.156,1792,6.011,1797,3.998,1798,3.834,1799,5.248,1800,5.248,1863,5.851,1864,6.105,1865,6.816,1866,6.105,1867,6.105,1868,6.105,1869,6.105]],["title/classes/CreateUserDto.html",[52,0.114,1870,3.86]],["body/classes/CreateUserDto.html",[3,0.047,4,0.041,5,0.047,7,0.15,14,0.594,17,0.007,18,0.566,28,0.193,32,0.283,51,0.047,52,0.153,61,0.898,78,0.004,79,0.004,106,2.102,121,1.014,124,0.779,127,0.643,128,1.952,129,3.524,131,2.244,135,1.667,139,3.645,140,1.685,142,3.563,143,1.756,144,3.524,313,2.254,315,2.468,316,2.336,321,3.071,419,2.713,646,3.723,859,3.74,1393,3.74,1632,3.971,1633,5,1635,3.297,1636,4.335,1637,4.562,1638,4.209,1639,4.562,1642,4.971,1644,3.185,1717,3.82,1718,3.133,1719,5.825,1720,4.335,1721,4.335,1722,4.335,1723,4.335,1724,4.225,1738,3.133,1751,3.906,1758,4.335,1766,4.834,1768,5.981,1769,5.981,1770,4.834,1775,3.344,1776,3.493,1790,4.407,1791,4.842,1792,5.364,1797,2.993,1798,2.87,1799,4.335,1800,4.335,1870,5.174,1871,7.566,1872,4.57,1873,4.069,1874,5.933,1875,4.069,1876,4.57,1877,5.631,1878,4.57,1879,6.456,1880,4.57,1881,4.834,1882,3.74,1883,5.933,1884,4.069,1885,3.493]],["title/classes/CreateUserRefreshTokenDto.html",[52,0.114,1886,3.86]],["body/classes/CreateUserRefreshTokenDto.html",[3,0.055,4,0.047,5,0.055,7,0.172,14,0.599,17,0.007,28,0.195,32,0.324,44,1.742,51,0.055,52,0.168,61,0.685,78,0.005,79,0.005,93,2.117,106,2.11,115,1.442,121,1.168,124,0.858,125,2.603,127,0.979,128,1.971,129,3.558,130,2.565,131,2.256,132,2.731,133,3.61,135,2.471,136,2.328,139,3.7,140,1.941,141,3.92,142,2.918,143,2.023,144,3.558,145,2.558,215,3.881,313,2.389,383,4.857,419,2.986,511,2.067,646,3.574,859,2.853,1633,3.92,1638,3.826,1644,3.057,1717,4.205,1718,3.61,1719,6.074,1720,4.771,1721,4.771,1722,4.771,1723,4.771,1724,4.543,1726,4.025,1734,5.021,1735,4.056,1737,3.799,1738,3.61,1779,4.689,1780,5.959,1783,4.689,1785,4.689,1786,4.309,1871,7.679,1885,4.025,1886,5.695,1887,5.266,1888,5.266]],["title/guards/EditContentGuard.html",[80,2.749,1889,3.606]],["body/guards/EditContentGuard.html",[0,1.092,3,0.056,4,0.048,5,0.056,7,0.177,8,1.034,9,1.615,11,1.615,14,0.512,16,1.053,17,0.007,18,0.512,19,0.96,28,0.217,29,1.915,30,0.789,32,0.349,34,1.878,36,2.115,37,0.747,43,2.7,44,1.976,46,2.004,48,2.078,49,2.628,50,2.218,51,0.056,52,0.131,53,1.615,59,2.061,65,2.54,66,2.195,73,1.772,78,0.005,79,0.005,82,3.047,84,4.817,85,5.069,86,4.135,87,4.456,89,3.152,90,4.72,92,3.99,93,2.154,94,2.278,95,4.308,98,2.861,99,5.415,100,5.11,101,5.797,102,3.268,103,3.514,104,2.861,105,2.95,106,1.2,107,1.528,108,3.152,109,3.542,110,2.495,111,3.708,112,3.638,113,3.638,114,1.994,115,1.468,116,4.426,118,3.542,119,3.542,790,4.817,1889,5.415,1890,7.033,1891,5.409,1892,5.409]],["title/guards/EditWebsiteGuard.html",[80,2.749,1893,4.2]],["body/guards/EditWebsiteGuard.html",[0,1.092,3,0.056,4,0.048,5,0.056,7,0.177,8,1.034,9,1.615,11,1.615,14,0.512,16,1.053,17,0.007,18,0.512,19,0.96,28,0.217,29,1.915,30,0.789,32,0.349,34,1.878,36,2.115,37,0.747,43,2.7,44,1.976,46,2.004,48,2.078,49,2.628,50,2.218,51,0.056,52,0.131,53,1.615,59,2.061,65,2.54,66,2.195,73,1.772,78,0.005,79,0.005,82,3.047,85,5.069,86,4.135,87,4.456,89,3.152,90,4.72,92,3.99,93,2.154,94,2.278,95,4.308,98,2.861,99,5.415,100,5.11,101,5.797,102,3.268,103,3.514,104,2.861,105,2.95,106,1.2,107,1.528,108,3.152,109,3.542,110,2.495,111,3.708,112,3.638,113,3.638,114,1.994,115,1.468,116,4.426,118,3.542,119,3.542,791,4.817,1890,7.033,1893,6.308,1894,5.409,1895,5.409,1896,5.409]],["title/injectables/FilesService.html",[0,0.727,1651,3.234]],["body/injectables/FilesService.html",[0,0.896,2,1.355,3,0.042,4,0.036,5,0.094,7,0.133,8,0.849,9,2.442,14,0.568,16,1.168,17,0.007,18,0.609,19,1.065,22,2.916,25,1.495,28,0.198,29,2.895,30,1.147,32,0.329,34,1.408,36,1.736,37,0.56,40,1.627,51,0.042,52,0.14,58,1.627,59,2.189,61,0.847,65,1.87,66,1.616,78,0.004,79,0.004,93,1.768,94,1.87,106,1.29,107,1.315,115,1.538,242,2.285,243,2.212,244,3.388,307,0.799,394,3.652,395,4.106,399,1.527,400,1.826,401,3.808,404,4.324,452,1.234,464,2.927,495,3.377,564,2.554,849,3.652,906,4.048,912,3.652,970,5.743,985,2.781,1112,5.195,1178,5.561,1183,3.613,1184,3.101,1185,3.32,1186,3.101,1187,3.101,1188,3.101,1189,5.195,1190,3.101,1191,3.101,1192,3.101,1193,3.101,1194,3.101,1418,2.825,1651,3.986,1897,3.613,1898,5.815,1899,6.052,1900,6.43,1901,5.561,1902,5.815,1903,5.178,1904,4.057,1905,4.057,1906,7.176,1907,4.057,1908,4.057,1909,4.057,1910,4.057,1911,4.057,1912,4.057,1913,5.178,1914,4.057,1915,6.891,1916,5.561,1917,3.32,1918,3.32,1919,3.32,1920,6.43,1921,3.613,1922,3.613,1923,3.613,1924,3.613,1925,3.613,1926,3.613,1927,5.561,1928,3.613,1929,3.613,1930,3.101,1931,3.613,1932,3.613,1933,3.613,1934,3.613,1935,3.32,1936,3.32,1937,3.32,1938,4.758,1939,3.613,1940,3.32,1941,3.32,1942,3.613,1943,5.178,1944,4.758,1945,3.32,1946,3.32,1947,3.32,1948,3.32,1949,3.32]],["title/classes/GarbageCollectingProcessor.html",[52,0.114,1661,3.86]],["body/classes/GarbageCollectingProcessor.html",[3,0.067,4,0.058,5,0.067,7,0.212,8,1.161,14,0.575,16,0.965,17,0.007,18,0.469,19,0.88,28,0.152,30,0.947,32,0.336,37,0.896,51,0.067,52,0.157,55,2.347,66,2.21,78,0.005,79,0.005,106,1.907,121,1.44,124,0.98,126,2.011,128,1.542,324,5.046,369,3.333,495,2.603,1133,4.962,1661,6.507,1950,6.491,1951,7.951,1952,7.951,1953,6.491,1954,7.951,1955,8.185,1956,7.951,1957,6.491,1958,6.491,1959,6.491,1960,5.78,1961,6.491,1962,6.491,1963,6.491,1964,6.491,1965,6.491,1966,5.78]],["title/injectables/GlobalInterceptor.html",[0,0.727,1120,3.606]],["body/injectables/GlobalInterceptor.html",[0,1.215,2,2.137,3,0.066,4,0.057,5,0.066,7,0.209,8,1.15,14,0.463,16,0.951,17,0.007,18,0.463,19,0.867,25,3.149,28,0.15,30,0.934,32,0.334,37,0.884,51,0.066,52,0.154,53,1.911,66,1.779,78,0.005,79,0.005,90,5.021,92,3.604,95,4.658,98,3.384,107,1.653,300,4.617,400,3.547,1015,4.617,1120,6.025,1967,6.4,1968,7.882,1969,7.882,1970,8.915,1971,6.4,1972,7.882,1973,7.882,1974,8.542,1975,7.882,1976,6.4,1977,6.4,1978,6.4,1979,6.4,1980,6.4]],["title/classes/HttpExceptionFilter.html",[52,0.114,1350,3.86]],["body/classes/HttpExceptionFilter.html",[3,0.066,4,0.057,5,0.066,7,0.208,8,1.145,14,0.459,16,0.944,17,0.007,18,0.459,19,0.861,22,2.57,24,3.365,28,0.149,30,0.927,32,0.307,37,0.877,40,2.546,51,0.066,52,0.153,53,2.342,59,2.246,66,1.764,78,0.005,79,0.005,121,1.409,246,4.739,399,3.203,495,2.546,564,2.789,844,6.506,848,5.996,849,5.583,850,5.346,851,6.796,853,4.853,857,4.853,858,4.853,859,3.49,860,4.853,861,5.653,863,4.58,864,4.853,865,4.853,895,5.195,896,5.195,904,5.195,957,5.653,1350,6.418,1981,7.843,1982,6.348,1983,6.348,1984,6.348]],["title/interfaces/ITelegramModuleAsyncOptions.html",[307,0.928,1985,3.606]],["body/interfaces/ITelegramModuleAsyncOptions.html",[3,0.071,4,0.062,5,0.071,7,0.225,17,0.007,19,1.117,28,0.194,32,0.269,37,0.951,51,0.085,61,0.811,78,0.006,79,0.006,94,2.213,124,1.015,244,4.801,307,1.622,308,2.39,410,3.754,577,3.1,1146,6.986,1985,6.299,1986,6.13,1987,7.337,1988,6.986,1989,6.13,1990,6.299,1991,5.633,1992,5.262]],["title/interfaces/ITelegramOptions.html",[307,0.928,1990,3.606]],["body/interfaces/ITelegramOptions.html",[3,0.072,4,0.062,5,0.072,7,0.226,17,0.007,28,0.194,32,0.27,37,0.955,51,0.086,61,0.934,78,0.006,79,0.006,94,2.223,124,1.018,307,1.626,308,2.4,410,4.991,577,2.602,1146,5.285,1985,5.285,1986,6.157,1987,6.157,1988,5.285,1989,6.157,1990,6.753,1991,7.49,1992,5.285]],["title/injectables/InitializeEmailMiddleware.html",[0,0.727,1355,3.86]],["body/injectables/InitializeEmailMiddleware.html",[0,1.026,2,1.647,3,0.051,4,0.044,5,0.051,7,0.161,8,0.972,9,2.252,10,4.248,11,1.989,14,0.481,16,0.99,17,0.007,18,0.481,19,0.903,21,2.777,22,2.764,23,4.098,24,3.466,25,3.332,26,3.822,28,0.204,29,2.86,30,0.72,31,2.997,32,0.353,33,2.532,34,1.712,35,3.632,36,1.989,37,0.681,40,1.978,43,2.462,44,1.887,46,2.134,48,1.895,49,2.396,50,2.022,51,0.051,52,0.119,53,1.473,55,2.06,58,1.978,59,1.987,65,2.142,66,1.851,67,2.333,68,2.333,69,3.557,70,2.979,71,2.777,72,3.557,73,2.471,78,0.004,79,0.004,87,4.437,102,2.979,106,1.674,107,1.563,110,2.275,135,1.756,313,2.43,399,1.855,400,2.219,408,2.608,409,2.333,444,3.77,482,5.066,483,4.032,510,3.557,547,2.979,680,4.94,716,3.097,826,4.035,837,4.391,840,2.979,918,4.035,1268,4.035,1320,4.391,1355,5.451,1993,6.717,1994,4.931,1995,4.931,1996,4.931,1997,6.661,1998,6.661,1999,4.931,2000,7.543,2001,3.77,2002,4.391,2003,4.035]],["title/interfaces/InitializeUser.html",[307,0.928,2004,2.962]],["body/interfaces/InitializeUser.html",[3,0.06,4,0.052,5,0.06,7,0.19,17,0.007,18,0.657,28,0.214,51,0.094,60,2.612,61,0.988,78,0.005,79,0.005,93,2.618,124,0.914,125,1.938,126,1.798,127,1.043,131,1.427,298,2.23,307,1.79,308,2.015,310,2.98,311,2.98,312,2.98,313,2.696,314,1.288,315,3.097,316,2.716,321,3.57,604,2.98,828,3.382,1631,5.201,2004,4.656,2005,3.979,2006,3.645,2007,3.645,2008,3.801,2009,3.645,2010,3.507]],["title/injectables/InitializeUserMiddleware.html",[0,0.727,507,2.85]],["body/injectables/InitializeUserMiddleware.html",[0,1.03,2,1.654,3,0.051,4,0.044,5,0.051,7,0.162,8,0.975,9,2.258,10,4.258,11,1.995,14,0.483,16,0.993,17,0.007,18,0.483,19,0.906,21,2.79,22,2.852,23,4.105,24,3.472,25,3.335,26,3.83,28,0.157,29,2.865,30,0.723,31,3.007,32,0.354,33,2.544,34,1.72,35,3.644,36,1.995,37,0.684,40,1.987,43,2.473,44,1.24,46,1.402,48,1.904,49,2.407,50,2.031,51,0.051,52,0.12,53,1.479,55,2.065,58,1.987,59,2.078,65,2.148,66,1.857,67,3.162,68,3.162,73,2.477,78,0.005,79,0.005,106,1.677,107,1.566,110,2.285,111,5.183,270,5.083,274,6.187,276,5.108,278,3.787,279,4.568,280,2.802,292,3.763,293,3.787,294,4.82,295,3.787,298,2.567,399,1.864,400,2.229,507,4.037,516,2.802,658,2.993,820,4.412,822,4.412,840,2.993,1057,4.412,1268,4.054,1345,5.3,1354,4.054,1691,4.054,1700,4.054,1993,6.733,2011,4.412,2012,5.827,2013,4.954,2014,5.95,2015,4.054,2016,6.682,2017,4.054,2018,4.412,2019,4.954,2020,4.954,2021,4.412,2022,4.412,2023,4.412]],["title/guards/JwtAuthGuard.html",[80,2.749,200,2.85]],["body/guards/JwtAuthGuard.html",[0,1.086,3,0.056,4,0.048,5,0.056,7,0.175,8,1.028,9,1.602,11,1.602,14,0.509,16,1.047,17,0.007,18,0.509,19,0.955,28,0.166,29,1.899,30,0.783,32,0.348,34,1.862,36,2.104,37,0.741,43,2.678,48,2.061,49,2.606,50,2.199,51,0.056,52,0.129,53,1.602,58,2.151,59,2.134,65,2.686,66,2.322,73,1.757,78,0.005,79,0.005,82,3.021,85,5.056,89,3.126,90,4.705,92,3.968,93,2.142,94,2.265,95,4.29,98,2.836,103,3.734,104,2.836,105,2.925,107,1.363,108,3.126,112,4.29,113,4.29,115,1.111,130,1.977,200,4.256,272,5.015,277,6.632,285,3.369,294,3.869,399,2.018,400,2.414,419,2.301,1378,4.256,2017,4.389,2024,7.866,2025,5.364,2026,4.389,2027,5.364,2028,5.364,2029,5.765,2030,4.389,2031,6.437,2032,5.765,2033,5.364,2034,4.776,2035,4.776]],["title/classes/JwtRefreshTokenDeletedEvent.html",[52,0.114,1083,3.606]],["body/classes/JwtRefreshTokenDeletedEvent.html",[3,0.065,4,0.056,5,0.065,7,0.205,8,1.135,14,0.64,16,0.931,17,0.007,18,0.67,19,0.849,28,0.208,30,0.914,51,0.065,52,0.151,61,0.949,78,0.005,79,0.005,121,1.389,124,0.958,125,3.14,127,1.28,131,2.312,383,5.124,410,4.961,495,2.511,1083,5.944,2036,9.098,2037,6.261,2038,7.776,2039,6.261,2040,6.261,2041,6.261,2042,7.776,2043,6.261,2044,5.575,2045,5.575,2046,5.575]],["title/injectables/LocationMiddleware.html",[0,0.727,2047,4.2]],["body/injectables/LocationMiddleware.html",[0,1.167,2,2.004,3,0.062,4,0.054,5,0.062,7,0.196,8,1.105,9,1.792,10,4.265,14,0.434,16,0.892,17,0.007,18,0.434,19,0.813,21,3.38,22,2.855,23,4.365,24,3.739,25,3.382,26,4.123,28,0.141,29,2.938,30,0.876,32,0.359,35,4.13,36,2.261,37,0.829,40,2.407,50,2.46,51,0.062,52,0.145,53,1.792,59,2.143,73,1.966,78,0.005,79,0.005,107,1.161,495,2.407,564,3.326,1040,6.743,1041,4.911,1042,4.911,1044,5.463,1066,5.789,1067,4.587,1068,5.344,1069,5.344,1070,5.344,1071,5.344,1075,4.911,1331,3.93,1683,5.789,1684,4.587,2047,6.743,2048,6.001,2049,6.001,2050,6.001,2051,6.001,2052,6.001,2053,7.573,2054,6.001,2055,6.001]],["title/classes/LoginDto.html",[52,0.114,714,3.234]],["body/classes/LoginDto.html",[3,0.061,4,0.053,5,0.061,7,0.192,14,0.54,17,0.007,28,0.175,32,0.321,51,0.061,52,0.18,61,0.85,78,0.005,79,0.005,106,2.024,121,1.302,124,0.92,128,1.774,129,3.203,131,2.126,139,3.523,140,2.163,142,3.443,143,2.255,144,3.203,313,2.489,321,3.392,419,3.203,646,3.834,714,5.118,859,3.543,1632,4.689,1633,4.868,1635,4.233,1636,5.118,1637,5.386,1638,4.208,1639,5.386,1642,5.629,1644,3.607,1647,4.233,1717,4.511,1718,4.023,1719,6.254,1720,5.118,1721,5.118,1722,5.118,1723,5.118,1724,4.785,1738,4.023,2056,5.868,2057,5.868,2058,5.868]],["title/modules/MailModule.html",[475,1.739,1099,3.089]],["body/modules/MailModule.html",[3,0.047,4,0.041,5,0.047,17,0.007,32,0.384,37,0.628,39,1.825,44,1.578,45,2.211,46,1.784,47,2.153,51,0.047,52,0.11,78,0.004,79,0.004,87,4.236,102,2.749,115,1.499,135,1.907,136,1.883,226,1.999,240,3.478,280,2.643,281,2.337,298,2.422,340,5.612,452,1.384,475,2.324,476,3.334,477,2.153,478,3.063,482,4.945,483,4.236,484,3.237,485,2.272,486,2.272,488,3.237,489,4.129,496,4.779,500,2.406,501,3.147,502,2.563,505,3.334,506,2.749,510,3.283,511,1.786,512,2.983,513,2.406,514,3.334,515,2.749,516,2.643,517,2.406,518,3.237,519,2.652,520,2.481,527,2.406,528,2.337,533,2.908,534,2.563,535,2.983,536,2.481,537,2.837,538,2.406,539,2.983,540,2.406,541,2.837,542,2.481,543,3.063,544,2.481,545,2.232,546,1.908,547,2.749,548,2.337,549,2.406,550,2.406,551,2.406,552,2.406,553,2.406,554,2.481,850,2.858,1053,4.052,1099,6.127,1107,2.749,1161,4.052,2018,4.052,2059,4.052,2060,4.55,2061,4.052,2062,4.55,2063,4.55,2064,4.55,2065,3.724,2066,3.724,2067,4.55,2068,4.55,2069,4.55,2070,4.55,2071,4.55,2072,4.55,2073,4.55,2074,4.55,2075,4.55,2076,4.55,2077,4.55,2078,4.55,2079,4.55,2080,4.55,2081,4.55]],["title/injectables/MailService.html",[0,0.727,340,2.85]],["body/injectables/MailService.html",[0,0.347,2,0.423,3,0.038,4,0.011,5,0.013,7,0.041,8,0.329,9,1.712,11,0.673,14,0.306,16,0.549,17,0.007,18,0.267,19,0.501,28,0.087,30,0.444,31,1.014,32,0.234,34,0.439,36,0.673,37,0.175,44,0.762,46,0.861,48,0.486,50,0.519,51,0.013,52,0.031,55,1.39,58,1.221,59,1.155,61,0.685,63,2.081,65,1.51,66,1.51,70,4.978,73,1.539,78,0.002,79,0.002,87,2.541,102,0.764,106,1.129,124,0.278,126,0.392,127,0.428,130,0.83,135,0.594,187,5.57,243,4.011,287,0.829,321,0.497,324,2.081,340,1.361,369,0.65,374,1.625,387,0.795,399,1.146,400,1.37,408,1.61,409,1.441,434,3.219,444,0.967,482,2.966,483,1.844,485,0.632,510,0.913,547,0.764,644,3.231,658,4.206,680,1.994,771,3.29,934,1.544,936,1.722,940,1.127,944,0.967,945,2.328,946,1.37,947,1.37,948,1.37,949,1.37,1075,2.492,1150,2.711,1218,4.182,1256,1.127,1704,7.313,1705,5.272,1707,2.492,1730,1.722,1742,2.711,1746,2.006,1778,2.824,2001,0.967,2003,1.035,2065,1.035,2066,1.035,2082,1.265,2083,2.253,2084,2.253,2085,2.253,2086,1.265,2087,4.696,2088,2.253,2089,2.253,2090,1.265,2091,3.045,2092,2.253,2093,1.265,2094,2.253,2095,1.265,2096,2.253,2097,1.035,2098,1.265,2099,1.265,2100,1.265,2101,1.265,2102,3.045,2103,3.045,2104,3.045,2105,4.696,2106,2.253,2107,8.441,2108,3.045,2109,4.696,2110,2.253,2111,3.045,2112,3.045,2113,3.045,2114,3.045,2115,3.045,2116,3.045,2117,3.045,2118,3.045,2119,3.045,2120,3.045,2121,3.045,2122,3.045,2123,3.045,2124,3.045,2125,3.045,2126,7.466,2127,4.696,2128,3.045,2129,3.045,2130,3.045,2131,3.045,2132,3.045,2133,3.045,2134,3.045,2135,3.045,2136,3.045,2137,3.045,2138,7.915,2139,8.294,2140,3.045,2141,3.045,2142,3.045,2143,3.045,2144,4.696,2145,3.045,2146,4.236,2147,9.907,2148,6.443,2149,3.045,2150,4.236,2151,4.696,2152,4.696,2153,2.253,2154,4.236,2155,3.045,2156,3.045,2157,3.045,2158,6.961,2159,6.961,2160,8.294,2161,6.961,2162,3.045,2163,8.121,2164,8.121,2165,8.121,2166,3.045,2167,4.696,2168,5.732,2169,4.696,2170,5.732,2171,8.121,2172,8.121,2173,5.732,2174,6.443,2175,6.443,2176,6.443,2177,3.045,2178,3.045,2179,3.045,2180,4.696,2181,7.544,2182,8.86,2183,6.961,2184,4.696,2185,7.104,2186,3.045,2187,5.696,2188,3.045,2189,3.045,2190,5.732,2191,3.045,2192,3.045,2193,3.045,2194,5.732,2195,5.732,2196,3.045,2197,3.045,2198,3.045,2199,3.045,2200,3.045,2201,6.443,2202,3.045,2203,5.732,2204,3.045,2205,3.045,2206,3.045,2207,3.045,2208,6.961,2209,3.045,2210,3.045,2211,3.045,2212,3.045,2213,3.045,2214,3.045,2215,3.045,2216,3.045,2217,3.045,2218,3.045,2219,4.696,2220,4.696,2221,6.961,2222,5.732,2223,4.696,2224,3.045,2225,5.732,2226,5.732,2227,4.696,2228,3.045,2229,3.045,2230,3.045,2231,3.045,2232,3.045,2233,4.696,2234,4.696,2235,4.696,2236,2.253,2237,2.253,2238,2.253,2239,2.253,2240,2.006,2241,2.253,2242,2.253,2243,2.006,2244,2.253,2245,2.006,2246,3.045,2247,3.045,2248,3.045,2249,3.045,2250,3.045,2251,1.265,2252,1.265,2253,1.265,2254,1.265,2255,1.265]],["title/classes/MatchConstraint.html",[52,0.114,2256,4.2]],["body/classes/MatchConstraint.html",[3,0.066,4,0.057,5,0.066,7,0.207,8,1.142,14,0.457,16,0.94,17,0.007,18,0.566,19,0.857,28,0.149,30,0.923,32,0.247,51,0.081,52,0.189,53,2.336,59,1.924,61,0.77,71,3.561,78,0.005,79,0.005,93,1.923,107,1.514,121,1.403,126,2.424,143,3.006,244,3.685,1645,4.561,1679,5.174,1992,6.495,2256,7.566,2257,5.631,2258,8.496,2259,6.403,2260,7.824,2261,8.878,2262,6.323,2263,7.824,2264,7.905,2265,7.824,2266,5.631,2267,6.967,2268,6.323,2269,6.323,2270,6.323,2271,5.631,2272,6.323,2273,6.323,2274,7.824,2275,6.323,2276,6.323]],["title/interfaces/Msg.html",[307,0.928,983,3.86]],["body/interfaces/Msg.html",[0,1.069,3,0.054,4,0.047,5,0.054,7,0.171,9,2.072,17,0.007,28,0.163,32,0.304,36,2.072,37,0.724,51,0.054,52,0.126,55,1.894,59,1.913,61,0.765,63,2.951,66,1.456,73,1.717,78,0.005,79,0.005,94,2.23,106,1.163,124,0.855,127,0.737,130,1.932,244,3.053,307,1.031,308,1.819,314,1.163,324,3.907,403,4.543,419,2.976,906,4.514,962,3.592,963,4.288,966,4.666,967,4.666,968,5.677,970,3.432,971,4.666,973,4.666,975,4.666,977,6.177,978,6.177,979,4.666,980,4.666,981,6.177,982,4.666,983,7.046,984,7.371,985,3.592,986,4.666,987,4.666,988,4.666,989,5.677,990,6.177,991,4.666,992,4.666,993,4.666,994,4.666,995,4.666,996,4.666,997,4.666,998,4.288,999,4.666,1000,7.371,1001,4.666,1002,4.666,1003,4.666,1004,4.666,1005,7.371,1006,4.666,1007,4.666,1008,4.666,1009,4.666,1010,4.666,1011,4.288,1012,4.666,1013,6.177,1014,4.666,1015,5.004,1016,4.288,1017,4.666,1018,4.666,1019,4.666,1020,4.666,1021,4.666,1022,4.666,1023,4.666,1024,4.666,1025,4.666]],["title/classes/Nested.html",[52,0.114,1845,3.234]],["body/classes/Nested.html",[3,0.048,4,0.042,5,0.048,7,0.153,14,0.571,17,0.007,28,0.219,32,0.309,51,0.048,52,0.191,61,0.946,78,0.004,79,0.004,106,1.945,115,1.637,121,1.038,124,0.792,127,1.165,128,1.878,131,1.15,141,4.134,142,3.675,143,1.797,946,3.727,947,3.727,948,3.727,949,3.727,1460,2.272,1490,2.213,1617,2.474,1620,2.402,1622,2.402,1623,2.402,1638,4.118,1644,2.055,1735,4.605,1736,5.7,1751,4.457,1775,4.179,1790,5.028,1791,4.869,1798,2.938,1825,3.576,1826,4.165,1838,2.938,1839,2.938,1840,6.732,1841,3.374,1842,3.828,1843,3.576,1844,4.165,1845,5.417,1846,6.44,1847,6.44,1848,5.611,1849,6.04,1850,3.576,1851,3.576,1852,5.7,1853,4.912,1854,4.912,1855,3.576,2277,7.036,2278,4.677,2279,4.677,2280,4.677,2281,4.677]],["title/classes/Nested-1.html",[52,0.095,130,1.448,1845,2.692]],["body/classes/Nested-1.html",[3,0.049,4,0.043,5,0.049,7,0.156,14,0.575,17,0.007,28,0.22,32,0.254,51,0.049,52,0.192,61,0.948,78,0.004,79,0.004,106,1.954,115,1.65,121,1.056,124,0.802,127,1.173,128,1.892,131,1.171,141,4.172,142,3.693,143,1.829,946,3.751,947,3.751,948,3.751,949,3.751,1460,2.313,1490,2.253,1617,2.518,1620,2.445,1622,2.445,1623,2.445,1638,4.136,1644,2.092,1735,4.317,1736,5.344,1751,4.476,1775,4.21,1790,5.05,1791,4.889,1838,2.99,1839,2.99,1840,6.751,1845,5.458,1846,6.468,1847,6.468,1848,5.663,1849,6.086,1850,3.64,1851,3.64,1852,5.743,1853,4.972,1854,4.972,1855,3.64,2277,7.089,2282,4.24,2283,4.761,2284,4.761,2285,4.761,2286,4.761,2287,3.64]],["title/classes/NotFoundError.html",[52,0.114,881,3.606]],["body/classes/NotFoundError.html",[3,0.063,4,0.054,5,0.063,7,0.198,11,1.806,14,0.602,16,0.899,17,0.007,18,0.437,19,0.82,28,0.196,32,0.236,34,2.099,37,0.835,51,0.086,52,0.201,61,0.937,78,0.005,79,0.005,121,1.342,124,0.938,126,1.873,127,1.171,369,3.105,404,3.105,409,2.861,564,3.657,577,3.288,859,3.119,863,6.303,868,7.027,869,6.226,870,4.948,871,6.302,872,4.948,876,4.622,877,4.948,878,4.948,879,4.948,880,4.948,881,5.816,882,6.226,883,4.948,884,4.362,885,4.145,886,4.948,887,5.216,888,4.948,1388,6.775,1389,5.384,1390,5.384,2288,6.047]],["title/classes/Order.html",[52,0.114,541,2.123]],["body/classes/Order.html",[3,0.047,4,0.041,5,0.047,7,0.148,8,0.917,14,0.665,16,0.673,17,0.007,18,0.328,19,0.614,28,0.218,30,1.138,32,0.305,51,0.047,52,0.109,55,2.456,61,0.885,78,0.004,79,0.004,107,1.508,114,3.019,115,1.756,121,1.005,124,0.775,125,2.735,127,1.192,128,2.065,132,3.059,135,2.401,226,1.99,314,1.817,452,1.912,541,2.829,543,4.222,545,2.76,546,1.9,577,2.365,578,3.248,579,4.048,587,2.64,603,3.987,619,2.829,620,2.829,642,3.685,643,2.039,644,2.761,645,3.054,647,3.54,649,1.99,650,1.944,652,2.039,655,3.248,1402,3.817,1404,2.967,1418,3.506,1419,7.292,1423,6.379,1425,3.708,1429,2.846,1440,4.805,1441,3.948,1449,3.708,1966,4.035,2289,4.531,2290,7.218,2291,8.69,2292,7.795,2293,7.795,2294,6.286,2295,4.531,2296,4.531,2297,4.531,2298,4.531,2299,4.531,2300,4.531,2301,4.531,2302,4.531,2303,4.531,2304,4.531,2305,6.286,2306,4.531,2307,4.531,2308,3.463,2309,4.531,2310,4.531,2311,4.531,2312,7.218,2313,4.531]],["title/classes/OrderProduct.html",[52,0.114,543,2.292]],["body/classes/OrderProduct.html",[3,0.048,4,0.042,5,0.048,7,0.152,8,0.934,14,0.654,17,0.007,28,0.219,30,0.934,32,0.286,51,0.048,52,0.112,55,2.333,78,0.004,79,0.004,107,1.238,114,3.047,115,1.897,121,1.032,124,0.789,127,1.288,128,2.079,132,3.499,314,1.834,452,2.711,541,4.12,543,3.109,545,3.242,546,1.95,577,2.408,578,3.293,579,4.273,587,3.729,602,4.15,603,4.12,619,2.88,620,2.88,642,3.844,643,2.092,644,2.811,645,3.555,647,4.121,649,2.043,650,1.995,652,2.092,655,3.719,1401,4.655,1402,3.384,1460,4.015,1462,6.45,1464,4.617,1469,3.355,1473,5.162,1476,3.805,1620,4.244,2314,4.65,2315,8.265,2316,7.882,2317,4.65,2318,4.65,2319,4.65,2320,4.65,2321,4.65,2322,4.65,2323,4.65,2324,4.65,2325,4.65,2326,4.65,2327,4.65,2328,4.65]],["title/controllers/OrdersController.html",[146,2.072,2329,3.86]],["body/controllers/OrdersController.html",[3,0.075,4,0.064,5,0.075,17,0.007,32,0.351,37,0.994,51,0.075,52,0.174,78,0.006,79,0.006,146,3.161,148,3.087,150,4.193,195,4.348,229,4.053,230,4.348,231,4.348,232,4.764,233,4.348,234,4.193,236,4.348,2308,5.501,2329,6.922,2330,7.196,2331,7.196]],["title/modules/OrdersModule.html",[475,1.739,1100,2.962]],["body/modules/OrdersModule.html",[3,0.053,4,0.046,5,0.053,17,0.007,32,0.386,37,0.712,39,2.067,44,1.717,45,2.504,46,1.941,47,2.439,51,0.053,52,0.124,78,0.005,79,0.005,115,1.422,135,1.809,136,2.049,148,2.944,226,2.264,280,2.877,281,2.647,298,2.637,475,2.529,477,2.439,478,3.334,484,3.524,485,2.573,486,2.573,488,3.524,496,5.062,500,2.726,501,3.851,502,2.903,511,2.023,512,3.247,513,2.726,514,3.629,515,3.115,516,2.877,517,2.726,518,3.524,519,3.004,520,2.811,527,2.726,528,2.647,533,3.165,534,2.903,535,3.247,536,2.811,537,3.088,538,2.726,539,3.247,540,2.726,541,3.088,543,3.334,545,2.43,546,2.162,548,2.647,549,2.726,550,2.726,551,2.726,552,2.726,553,2.726,554,2.811,1097,4.31,1098,4.146,1100,5.531,1124,3.941,1129,3.719,2329,6.312,2332,4.59,2333,4.59,2334,6.732,2335,5.155,2336,5.155,2337,5.155,2338,5.155,2339,5.155]],["title/injectables/OrdersService.html",[0,0.727,2334,3.606]],["body/injectables/OrdersService.html",[0,1.326,2,2.476,3,0.077,4,0.066,5,0.077,17,0.007,32,0.29,36,2.57,37,1.024,51,0.077,52,0.179,78,0.006,79,0.006,396,4.32,2334,6.58,2340,7.414]],["title/classes/Owner.html",[46,1.335,52,0.114]],["body/classes/Owner.html",[3,0.021,4,0.018,5,0.021,7,0.066,8,0.494,14,0.672,16,1.085,17,0.007,18,0.605,19,0.989,25,0.747,28,0.218,30,1.273,32,0.266,44,0.847,46,1.233,51,0.021,52,0.082,55,2.435,60,2.753,61,0.94,75,6.06,78,0.002,79,0.002,93,2.15,107,1.687,114,2.932,115,1.886,121,0.45,124,0.417,127,1.266,128,1.944,129,3.354,130,1.248,131,2.182,132,3.517,136,1.52,139,3.412,140,0.747,144,3.354,145,0.985,215,1.962,242,1.142,243,1.846,313,1.762,314,1.256,315,2.083,316,2.032,321,2.548,452,2.699,472,5.007,511,0.796,512,1.602,513,1.072,516,2.566,545,2.714,546,0.85,577,1.274,578,1.962,579,3.869,589,2.217,590,2.217,591,2.217,592,2.217,593,2.217,594,2.217,595,2.217,596,2.217,597,2.217,598,2.217,599,2.217,601,1.659,602,4.311,603,3.993,613,1.55,618,1.39,619,1.523,620,1.523,629,2.588,630,1.659,642,3.579,643,0.912,644,1.487,646,1.739,648,1.328,649,0.891,650,0.87,652,0.912,655,1.962,656,4.112,658,1.225,659,1.39,660,1.106,661,1.659,663,1.328,678,2.588,1418,2.118,1422,3.892,1425,2.77,1429,1.273,1440,3.332,1441,2.126,1447,2.77,1473,2.855,1632,3.843,1737,1.462,1758,2.321,1780,4.963,1803,4.252,1804,5.86,1819,2.77,1839,1.273,1881,2.588,2044,3.882,2341,2.027,2342,6.805,2343,4.359,2344,6.805,2345,3.386,2346,5.091,2347,5.091,2348,5.091,2349,5.091,2350,5.091,2351,4.533,2352,5.091,2353,5.091,2354,5.091,2355,5.091,2356,5.091,2357,5.091,2358,3.386,2359,3.386,2360,3.386,2361,3.386,2362,3.015,2363,3.386,2364,3.386,2365,3.386,2366,5.091,2367,2.027,2368,2.027,2369,3.386,2370,2.027,2371,2.027,2372,2.027,2373,2.027,2374,2.027,2375,2.027,2376,2.027,2377,2.027,2378,2.027,2379,2.027,2380,2.027,2381,2.027,2382,2.027,2383,2.027,2384,2.027,2385,2.027,2386,2.027,2387,2.027,2388,2.027,2389,2.027,2390,2.027,2391,2.027,2392,2.027,2393,2.027,2394,3.386,2395,2.027,2396,2.027,2397,2.027,2398,2.027,2399,2.027,2400,2.027,2401,2.027,2402,2.027,2403,2.027,2404,2.027,2405,2.027,2406,2.027,2407,2.027,2408,2.027,2409,3.386,2410,2.027,2411,3.386,2412,2.027,2413,3.386,2414,3.386,2415,2.027,2416,3.386,2417,2.027,2418,3.386,2419,2.027,2420,3.015,2421,2.027,2422,3.386,2423,2.027,2424,3.386,2425,2.027,2426,3.386,2427,2.027,2428,3.386,2429,1.55,2430,1.805,2431,2.027,2432,2.027,2433,4.359,2434,4.359,2435,2.027,2436,2.027,2437,4.359,2438,4.359,2439,4.359,2440,4.359,2441,3.882,2442,4.359,2443,2.027,2444,2.027]],["title/guards/OwnerAdminGuard.html",[80,2.749,164,2.962]],["body/guards/OwnerAdminGuard.html",[0,0.887,3,0.041,4,0.036,5,0.041,7,0.131,8,0.84,9,1.195,11,1.719,14,0.416,16,0.856,17,0.007,18,0.416,19,0.78,22,1.311,28,0.202,29,1.417,30,0.584,32,0.355,34,1.389,36,1.719,37,0.553,43,1.997,44,1.441,46,1.629,48,1.537,49,1.944,50,1.64,51,0.041,52,0.097,53,1.195,55,1.841,59,2.209,61,0.769,65,2.888,66,2.496,67,1.893,68,1.893,73,2.416,78,0.004,79,0.004,82,2.253,85,4.554,89,2.331,90,4.154,92,3.242,93,1.751,94,1.851,95,3.677,98,2.116,100,4.153,103,3.516,104,2.116,106,1.277,107,1.512,108,2.331,109,3.77,110,1.846,111,2.743,112,4.556,113,4.556,114,1.475,115,1.397,126,1.783,131,1.416,136,1.719,164,3.616,217,2.331,270,4.632,271,6.41,274,5.518,276,4.401,278,3.058,279,3.478,280,2.414,281,2.055,282,2.417,283,4.401,284,3.058,286,5.056,287,2.62,288,4.401,289,3.058,290,3.058,291,3.058,292,3.242,293,3.058,294,4.865,295,3.058,296,3.274,297,3.274,298,3.127,300,4.153,301,4.711,302,3.563,303,5.518,304,3.563,305,4.711,306,4.401,452,1.217,516,2.414,517,2.116,849,2.513,1345,4.83,1354,3.274,2011,3.563,2014,5.126,2021,3.563,2022,3.563,2445,6.743,2446,4.001,2447,4.001,2448,4.001,2449,7.375,2450,7.375,2451,4.001,2452,4.001]],["title/interfaces/OwnerCreationAttrbs.html",[307,0.928,2429,3.606]],["body/interfaces/OwnerCreationAttrbs.html",[3,0.067,4,0.058,5,0.067,7,0.212,17,0.007,18,0.647,28,0.22,51,0.082,60,4.026,61,0.983,78,0.005,79,0.005,124,0.977,127,0.91,307,1.561,308,2.244,313,2.645,315,3.126,316,2.672,321,3.511,516,2.711,1618,3.141,1803,4.234,2429,6.063,2453,5.756,2454,4.942]],["title/injectables/OwnerJwtRefreshService.html",[0,0.727,1345,3.089]],["body/injectables/OwnerJwtRefreshService.html",[0,0.569,2,0.752,3,0.023,4,0.02,5,0.023,7,0.074,8,0.539,9,2.739,11,1.103,14,0.582,16,1.153,17,0.007,18,0.561,19,1.051,22,1.21,28,0.182,30,1.132,31,2.698,32,0.32,33,1.157,34,0.782,36,1.103,37,0.311,38,1.313,39,0.903,46,1.925,48,2.475,51,0.023,52,0.054,55,2.234,56,1.313,58,2.405,59,2.172,61,0.95,63,1.269,65,2.493,66,2.239,67,1.748,68,1.748,73,2.912,78,0.002,79,0.002,94,2.755,103,1.549,106,1.51,107,1.583,124,0.455,126,1.455,127,1.167,145,4.291,313,2.389,314,0.82,315,2.858,323,1.843,324,3.06,325,3.843,326,4.182,327,3.843,328,4.837,329,3.843,330,3.843,331,3.843,332,3.023,333,3.843,334,3.843,335,3.843,336,1.843,337,5.272,338,3.843,339,2.963,340,4.111,345,2.006,350,1.843,351,3.843,353,1.843,357,3.407,358,3.309,369,1.157,371,1.415,372,3.59,373,3.59,375,2.824,376,3.59,377,2.824,378,2.824,379,1.843,380,1.722,385,1.625,386,1.415,387,1.415,388,1.843,389,1.843,390,1.843,391,1.843,392,1.843,393,1.843,394,2.32,395,1.361,396,1.313,398,1.843,399,2.256,400,2.698,401,3.927,402,4.584,403,3.927,404,3.079,408,2.873,409,2.571,410,4.713,413,1.843,414,3.843,415,3.023,416,3.023,419,0.967,421,4.445,425,4.907,430,3.023,434,1.544,436,1.843,437,2.006,439,2.006,442,1.544,443,2.006,450,1.843,452,1.124,455,2.006,456,3.023,457,1.843,458,1.843,459,1.843,460,2.32,461,1.843,462,1.544,463,1.843,464,1.625,465,1.843,466,1.843,467,1.843,468,1.843,469,1.843,470,1.843,471,1.843,472,3.023,473,2.006,474,1.625,482,3.965,516,3.817,716,1.415,936,3.59,1345,2.419,1618,3.677,1803,5.183,1815,1.722,1817,4.445,2001,2.824,2097,1.843,2455,8.182,2456,4.696,2457,3.694,2458,2.253,2459,2.253,2460,2.253,2461,2.253,2462,2.253,2463,2.253,2464,2.253,2465,2.253,2466,2.253,2467,2.253,2468,3.694,2469,2.253,2470,2.253,2471,2.253,2472,4.696,2473,2.253,2474,2.253,2475,2.253,2476,2.253,2477,3.694,2478,2.253,2479,2.006,2480,2.253,2481,2.253,2482,4.696,2483,2.253,2484,3.694,2485,3.694,2486,2.253,2487,2.253,2488,2.253,2489,2.253,2490,2.253,2491,2.253,2492,2.253,2493,5.432,2494,4.696,2495,2.253,2496,2.253,2497,4.837,2498,2.253,2499,2.253,2500,2.006,2501,2.253,2502,2.253,2503,2.253,2504,2.006,2505,2.253,2506,2.253,2507,2.253,2508,3.694,2509,3.694,2510,2.253,2511,2.253,2512,2.253,2513,2.253]],["title/modules/OwnerModule.html",[475,1.739,505,2.494]],["body/modules/OwnerModule.html",[3,0.046,4,0.04,5,0.046,17,0.007,32,0.384,37,0.617,39,1.792,44,1.558,45,2.17,46,1.761,51,0.046,52,0.108,78,0.004,79,0.004,87,4.212,102,2.699,115,1.29,135,1.641,136,2.139,226,1.962,279,2.699,280,2.61,281,2.294,298,2.391,339,4.601,340,5.097,371,2.806,385,3.223,386,2.806,475,2.294,476,3.292,477,2.114,478,3.024,482,5.396,483,4.212,484,3.196,485,2.23,486,2.23,488,3.196,489,4.076,496,4.589,500,2.362,501,3.107,502,2.516,503,3.415,504,3.656,505,5.11,511,1.753,512,3.39,513,2.362,514,4.462,515,2.699,516,3.004,520,2.436,527,2.362,528,2.294,531,3.627,532,3.063,533,2.871,534,2.516,535,2.945,536,2.436,537,2.801,538,2.362,539,2.945,540,2.362,541,2.801,542,2.436,543,3.024,544,2.436,545,2.204,546,1.873,547,2.699,548,3.196,549,2.362,550,2.362,551,2.362,552,2.362,553,2.362,554,2.436,555,3.415,556,3.415,559,3.415,560,3.415,615,3.415,1107,2.699,1345,6.064,2479,3.978,2514,3.978,2515,3.978,2516,4.467,2517,3.978,2518,4.467,2519,4.467,2520,3.978,2521,4.467,2522,4.467,2523,4.467]],["title/classes/OwnerRefreshToken.html",[52,0.114,516,1.978]],["body/classes/OwnerRefreshToken.html",[3,0.032,4,0.028,5,0.032,7,0.101,8,0.694,14,0.657,16,0.966,17,0.007,18,0.47,19,0.881,25,1.141,28,0.217,30,1.191,32,0.254,46,2.357,51,0.032,52,0.075,55,2.228,61,0.92,78,0.003,79,0.003,107,1.579,114,2.933,115,1.782,121,0.686,124,0.586,127,1.192,128,1.939,129,3.414,130,2.395,131,2.204,132,3.455,139,3.501,140,1.141,144,3.414,145,3.964,242,1.743,243,2.593,313,2.132,314,1.556,315,2.52,357,4.208,358,4.19,383,2.678,410,1.687,452,2.726,516,3.232,577,1.789,578,2.605,579,4.09,582,5.317,583,5.317,585,3.891,586,3.891,587,1.803,589,3.114,590,3.114,591,3.114,592,3.114,593,3.114,594,3.114,595,3.114,596,3.114,597,3.114,598,3.114,599,3.114,601,2.532,602,4.178,603,4.033,609,3.891,610,2.532,613,2.365,615,3.634,616,2.532,618,2.121,619,2.139,620,2.139,622,3.634,623,3.634,624,3.634,625,3.634,626,3.634,627,2.532,630,2.532,638,3.891,640,3.891,642,3.672,643,1.392,644,2.088,645,2.31,646,2.441,647,2.678,648,2.026,649,1.359,650,1.328,652,1.392,654,1.743,655,2.139,656,3.498,657,2.532,658,1.869,659,2.121,660,1.687,661,2.532,662,2.532,663,2.026,664,4.738,667,4.738,1618,3.865,1803,5.049,1804,6.082,1819,3.891,2351,5.786,2362,4.234,2420,4.234,2430,2.755,2441,5.156,2454,2.365,2524,3.094,2525,6.498,2526,5.317,2527,3.891,2528,3.094,2529,3.094,2530,3.094,2531,3.094,2532,3.094,2533,3.094,2534,2.755,2535,3.094,2536,4.754,2537,3.094,2538,4.754,2539,3.094,2540,3.094,2541,3.094,2542,3.094,2543,3.094,2544,3.094,2545,3.094,2546,3.094,2547,3.094,2548,3.891,2549,3.094,2550,3.094,2551,3.094,2552,4.738,2553,2.532]],["title/interfaces/OwnerRefreshTokenCreationAttrbs.html",[307,0.928,2454,3.606]],["body/interfaces/OwnerRefreshTokenCreationAttrbs.html",[3,0.068,4,0.059,5,0.068,7,0.215,17,0.007,18,0.474,28,0.217,51,0.083,60,2.951,61,0.979,78,0.005,79,0.005,124,0.986,127,1.215,307,1.575,308,2.277,313,2.655,315,3.139,316,1.958,321,2.574,516,3.77,1618,4.368,1803,5.888,2429,5.013,2453,5.84,2454,6.116]],["title/injectables/OwnerService.html",[0,0.727,482,2.749]],["body/injectables/OwnerService.html",[0,0.602,2,0.806,3,0.025,4,0.022,5,0.025,7,0.079,8,0.57,9,2.828,11,1.167,13,3.48,14,0.602,16,1.238,17,0.007,18,0.61,19,1.129,22,2.18,28,0.196,30,1.198,31,2.216,32,0.326,33,1.239,34,0.838,36,1.167,37,0.333,38,1.406,39,0.968,46,2.694,48,0.927,51,0.025,52,0.058,55,1.992,56,1.406,57,2.149,59,2.269,60,3.484,61,0.874,63,2.773,65,2.546,66,2.201,67,3.149,68,3.149,73,3.083,74,4.384,76,2.149,77,1.845,78,0.003,79,0.003,94,2.837,96,1.845,97,1.741,103,2.607,104,2.066,106,0.867,107,1.681,112,1.239,113,1.239,114,1.815,115,1.173,118,2.559,119,2.559,126,1.525,127,1.06,131,0.961,136,2.092,286,2.679,300,2.819,313,1.917,314,0.535,315,2.265,316,0.721,321,2.958,387,1.516,394,3.092,395,1.458,396,1.406,408,2.066,409,1.849,419,1.035,442,1.655,452,1.188,462,4.562,474,1.741,482,2.277,511,0.947,669,2.987,671,3.48,676,2.987,677,4.029,678,2.987,681,3.764,682,3.554,690,3.552,693,3.48,703,2.987,704,4.071,708,3.198,709,3.39,714,3.88,716,1.516,717,2.987,718,3.48,721,2.987,722,2.987,723,2.987,725,3.198,727,2.149,728,1.975,729,1.975,735,4.029,764,1.975,769,3.198,770,1.975,776,1.975,778,3.198,798,3.198,799,1.975,805,1.975,807,1.975,810,1.975,813,4.029,814,4.029,815,4.029,816,5.087,817,1.975,906,2.685,920,3.48,921,3.48,930,3.48,936,3.764,1618,1.172,1778,2.987,1801,5.733,1815,1.845,2001,3.764,2240,3.48,2497,6.238,2500,3.48,2504,2.149,2520,2.149,2554,2.413,2555,3.908,2556,3.908,2557,3.908,2558,3.908,2559,3.908,2560,3.908,2561,3.908,2562,2.413,2563,2.413,2564,3.908,2565,2.413,2566,3.908,2567,2.413,2568,3.908,2569,2.413,2570,3.908,2571,2.413,2572,3.908,2573,2.413,2574,2.413,2575,3.908,2576,2.413,2577,3.908,2578,2.413,2579,3.908,2580,2.413,2581,2.413,2582,2.413,2583,2.413,2584,2.413,2585,3.908,2586,2.413,2587,3.908,2588,2.413,2589,2.413,2590,2.413,2591,2.413,2592,2.413,2593,2.413,2594,2.413,2595,2.413,2596,2.413,2597,2.413,2598,2.413,2599,2.413,2600,2.413,2601,3.908,2602,2.413,2603,3.908,2604,5.66,2605,2.413,2606,5.66,2607,2.413,2608,2.413,2609,2.413,2610,2.413,2611,2.413,2612,2.413,2613,2.413,2614,2.413,2615,2.413,2616,2.413,2617,2.413,2618,2.413,2619,2.413,2620,2.413,2621,2.413,2622,2.413,2623,2.413,2624,3.908,2625,2.413,2626,2.413]],["title/classes/ParseFormDataJsonPipe.html",[52,0.114,1841,3.403]],["body/classes/ParseFormDataJsonPipe.html",[3,0.063,4,0.055,5,0.063,7,0.2,8,1.117,11,1.823,14,0.553,16,1.138,17,0.007,18,0.553,19,1.038,28,0.196,30,0.891,32,0.327,37,0.843,51,0.063,52,0.147,53,2.286,59,2.156,61,0.601,71,4.311,78,0.005,79,0.005,105,3.329,107,1.181,121,1.354,126,2.371,874,4.996,1791,3.329,1838,4.807,1841,5.522,2627,5.436,2628,6.843,2629,5.436,2630,7.807,2631,6.105,2632,6.264,2633,8.362,2634,7.175,2635,6.105,2636,6.105,2637,5.436,2638,5.436,2639,4.996,2640,6.105,2641,8.362,2642,5.436,2643,6.105,2644,7.655,2645,6.105,2646,6.105,2647,6.105,2648,8.362,2649,6.105,2650,6.105]],["title/injectables/ParseJsonPipe.html",[0,0.727,1843,3.606]],["body/injectables/ParseJsonPipe.html",[0,1.166,2,2,3,0.062,4,0.054,5,0.062,7,0.196,8,1.104,14,0.547,16,1.124,17,0.007,18,0.547,19,1.025,28,0.178,30,1.104,32,0.234,33,3.076,37,0.827,51,0.062,52,0.145,53,1.789,58,3.033,59,1.86,61,0.902,65,2.432,66,2.102,78,0.005,79,0.005,107,1.463,126,2.343,399,2.846,906,4.521,1838,5.469,1843,5.782,1930,5.782,2267,6.735,2628,6.189,2632,7.126,2634,7.62,2639,6.189,2651,5.99,2652,7.504,2653,5.99,2654,7.754,2655,5.99,2656,7.564,2657,7.564,2658,7.564,2659,7.564,2660,7.564]],["title/interfaces/Payload.html",[103,1.978,307,0.928]],["body/interfaces/Payload.html",[3,0.057,4,0.05,5,0.057,7,0.181,17,0.007,18,0.577,19,0.974,28,0.22,32,0.216,44,1.799,46,2.034,51,0.095,61,0.976,78,0.005,79,0.005,93,2.428,103,3.014,110,3.899,124,0.886,125,2.823,127,1.263,135,1.895,136,2.524,215,3.804,292,3.115,307,1.8,308,1.92,313,2.67,314,1.772,315,2.718,316,2.384,357,2.925,358,2.841,511,2.171,654,3.115,709,3.017,1376,3.474,1377,3.622,1378,4.343,1379,4.514,1380,4.514,1381,4.514,1382,5.309,1383,5.309,1384,3.474,1385,3.474,1386,3.474]],["title/classes/Product.html",[52,0.114,545,1.67]],["body/classes/Product.html",[3,0.029,4,0.025,5,0.029,7,0.093,8,0.649,14,0.671,16,0.815,17,0.007,18,0.396,19,0.743,28,0.222,30,1.161,32,0.318,44,1.935,46,2.301,47,1.344,51,0.029,52,0.069,55,2.301,61,0.829,78,0.003,79,0.003,107,1.538,114,3.187,115,1.856,121,0.63,124,0.548,127,1.302,128,2.096,131,1.657,132,3.599,314,1.495,318,3.382,452,2.854,533,2.052,535,3.382,536,1.549,537,3.731,538,1.502,539,2.105,540,1.502,541,3.216,542,1.549,543,2.161,544,1.549,545,1.575,577,1.674,578,2.468,579,4.304,587,2.592,602,4.408,603,4.032,619,2.002,620,2.002,642,3.791,643,1.278,644,1.954,645,2.664,647,3.089,649,1.248,650,1.218,652,1.278,655,3.032,656,3.313,1402,3.951,1418,1.38,1429,3.444,1441,3.898,1443,4.488,1460,3.274,1464,3.209,1469,3.209,1473,4.413,1490,3.189,1493,4.744,1526,1.86,1616,1.655,1617,3.564,1618,3.274,1619,3.927,1620,3.46,1621,3.196,1622,3.46,1623,3.46,1735,1.655,2181,2.324,2187,2.324,2308,4.192,2526,5.079,2527,3.64,2548,3.64,2552,4.488,2553,2.324,2661,2.84,2662,5.526,2663,5.526,2664,5.526,2665,5.526,2666,3.961,2667,3.961,2668,2.84,2669,2.84,2670,2.84,2671,2.84,2672,2.84,2673,2.84,2674,2.84,2675,2.84,2676,2.84,2677,2.84,2678,2.84,2679,2.84,2680,2.84,2681,3.961,2682,2.84,2683,2.84,2684,2.84,2685,2.84,2686,2.84,2687,2.84,2688,2.84,2689,2.84,2690,2.84,2691,3.961,2692,2.84,2693,3.961,2694,2.84,2695,2.84,2696,2.84,2697,2.84,2698,2.84,2699,3.961,2700,2.529,2701,2.529,2702,2.529,2703,2.529,2704,4.883,2705,2.529,2706,3.961,2707,2.529]],["title/classes/Product-1.html",[52,0.095,130,1.448,545,1.39]],["body/classes/Product-1.html",[3,0.026,4,0.022,5,0.026,7,0.082,8,0.587,14,0.672,16,0.941,17,0.007,18,0.458,19,0.859,28,0.223,30,1.209,32,0.319,44,1.85,45,1.216,46,2.216,47,1.184,51,0.026,52,0.06,55,2.226,61,0.915,78,0.003,79,0.003,107,1.603,114,3.134,115,1.74,121,0.555,124,0.496,127,1.278,128,2.062,131,1.664,132,3.529,314,1.405,318,3.201,452,2.845,533,1.856,534,1.41,535,3.201,536,1.365,537,3.602,538,1.323,539,1.904,540,1.323,541,3.044,542,1.365,543,1.955,544,1.365,545,1.425,577,1.514,578,2.271,579,4.277,587,2.345,602,4.315,603,3.938,619,1.811,620,1.811,642,3.669,643,1.126,644,1.767,645,2.451,647,2.842,649,1.099,650,1.074,652,1.126,655,2.85,656,1.512,912,4.249,946,2.601,947,2.601,948,2.601,949,2.601,1135,2.886,1136,2.228,1137,2.635,1138,2.048,1402,3.761,1418,1.216,1429,3.63,1440,1.913,1441,3.978,1443,4.129,1460,3.077,1464,2.903,1469,2.903,1473,4.148,1490,2.997,1493,4.419,1526,1.639,1616,1.458,1617,3.578,1618,3.077,1619,3.691,1620,3.252,1621,2.94,1622,3.252,1623,3.252,1627,2.94,1735,1.458,2046,3.583,2181,2.048,2187,2.048,2308,3.857,2526,4.73,2527,3.293,2548,3.293,2552,4.129,2553,2.048,2662,5.147,2663,5.147,2664,5.147,2665,5.147,2666,3.583,2667,3.583,2681,3.583,2691,3.583,2693,3.583,2699,3.583,2700,2.228,2701,2.228,2702,2.228,2703,2.228,2704,4.493,2705,2.228,2706,3.583,2707,2.228,2708,2.503,2709,5.78,2710,5.78,2711,4.024,2712,4.024,2713,2.503,2714,2.503,2715,2.503,2716,2.503,2717,2.503,2718,2.503,2719,2.503,2720,2.503,2721,2.503,2722,2.503,2723,2.503,2724,2.503,2725,2.503,2726,2.503,2727,2.503,2728,2.503,2729,2.503,2730,2.503,2731,2.503,2732,2.503,2733,2.503,2734,2.503,2735,2.503,2736,2.503,2737,2.503,2738,2.503,2739,2.503,2740,4.024,2741,2.503,2742,2.503,2743,4.024,2744,2.503,2745,4.024,2746,2.503,2747,4.024,2748,2.503,2749,2.503,2750,2.503,2751,2.503]],["title/classes/ProductCategories.html",[52,0.114,539,2.232]],["body/classes/ProductCategories.html",[3,0.06,4,0.052,5,0.06,7,0.19,14,0.59,17,0.007,28,0.214,32,0.319,51,0.06,52,0.14,78,0.005,79,0.005,114,3.009,115,1.884,121,1.285,124,0.913,127,1.279,128,1.939,132,2.906,314,1.972,452,2.616,537,3.332,539,3.504,545,2.622,546,2.429,577,2.786,578,3.673,579,4.252,602,3.598,603,4.091,619,3.332,620,3.332,642,3.871,643,2.607,644,3.253,645,3.965,649,2.545,650,2.486,652,2.607,655,3.673,738,2.892,1401,5.007,1402,3.064,1404,4.85,1408,3.064,1508,7.274,2752,5.793,2753,5.793,2754,5.793,2755,5.793,2756,5.793,2757,5.159]],["title/controllers/ProductController.html",[146,2.072,2758,3.86]],["body/controllers/ProductController.html",[3,0.019,4,0.016,5,0.064,7,0.059,8,0.449,11,0.541,14,0.534,16,1.098,17,0.007,18,0.589,19,1.002,22,1.316,24,0.777,26,0.857,28,0.203,29,2.044,30,1.078,31,3.242,32,0.34,37,0.25,40,1.235,44,1.751,46,1.633,51,0.019,52,0.044,55,0.495,58,2.889,59,1.954,61,0.709,65,2.316,78,0.002,79,0.002,81,2.221,93,0.936,94,2.375,106,0.402,107,1.61,110,3.227,115,1.343,125,2.888,127,1.352,128,1.756,130,1.135,146,0.796,148,0.777,150,1.056,163,5.056,164,4.244,169,5.197,170,6.808,186,1.056,187,1.094,188,1.186,189,2.111,190,2.63,191,1.138,192,1.307,193,5.446,194,1.02,195,1.094,200,1.094,201,1.186,202,1.186,211,1.056,212,1.138,213,1.094,214,1.138,215,0.815,216,1.242,217,1.056,218,1.242,219,1.242,220,1.242,221,4.083,222,1.186,223,1.186,224,1.186,225,1.02,227,4.344,229,1.02,230,1.094,231,1.094,232,1.734,233,1.094,234,1.056,235,1.186,236,1.094,248,4.838,249,3.247,250,4.675,251,1.186,253,2.52,255,5.889,256,2.52,262,4.344,263,4.344,314,1.281,394,2.522,395,1.094,399,2.711,400,3.744,404,3.593,452,0.936,495,1.9,541,2.131,545,0.641,564,1.353,730,3.876,739,3.286,747,1.242,906,2.583,912,2.975,970,3.78,1047,1.385,1065,1.613,1112,4.058,1131,1.482,1184,2.354,1186,2.354,1187,3.621,1188,2.354,1189,4.413,1190,4.413,1191,2.354,1192,2.354,1193,4.954,1194,2.354,1267,1.02,1273,1.482,1274,1.613,1279,1.482,1296,2.742,1309,4.724,1401,4.161,1418,2.301,1422,3.07,1490,2.241,1500,2.354,1515,1.385,1518,1.242,1519,1.482,1520,2.354,1526,1.186,1527,1.385,1619,3.364,1621,3.364,1622,2.432,1623,2.432,1626,1.094,1628,1.094,1825,4.413,1838,1.934,1841,1.307,1842,1.482,1889,3.621,1900,4.724,1901,2.52,1906,5.725,1915,2.52,1916,1.482,1917,1.482,1918,1.482,1920,2.52,1927,3.876,1935,2.52,1936,2.52,1937,2.52,1938,3.876,1940,2.52,1941,2.52,1944,3.876,1945,2.52,1946,2.52,1947,2.52,1948,2.52,1949,2.52,2287,4.707,2758,2.52,2759,1.811,2760,4.016,2761,4.016,2762,4.016,2763,4.016,2764,3.079,2765,4.016,2766,4.016,2767,3.079,2768,4.016,2769,4.016,2770,4.016,2771,1.811,2772,4.737,2773,1.811,2774,1.811,2775,1.811,2776,1.811,2777,1.811,2778,1.811,2779,1.811,2780,3.079,2781,3.079,2782,1.811,2783,1.811,2784,1.811,2785,1.811,2786,1.811,2787,1.811,2788,1.811,2789,1.811,2790,1.811,2791,1.811,2792,1.811,2793,4.016,2794,1.811,2795,1.811,2796,1.811,2797,1.811,2798,1.811,2799,1.811,2800,1.811,2801,1.811,2802,1.811,2803,1.811,2804,1.811,2805,1.811,2806,4.016,2807,1.811,2808,1.811,2809,1.811,2810,1.811,2811,1.811,2812,1.811,2813,1.811,2814,1.811,2815,1.811,2816,4.016,2817,1.811,2818,4.016,2819,4.016,2820,1.811,2821,2.897,2822,1.613,2823,4.016,2824,1.811,2825,1.811,2826,1.613,2827,4.058,2828,1.811,2829,1.811,2830,1.811,2831,1.811,2832,1.811,2833,1.811,2834,1.811,2835,1.811,2836,1.811,2837,1.811,2838,1.811,2839,1.811,2840,1.811,2841,1.811,2842,4.218,2843,1.811,2844,1.811,2845,1.811,2846,1.811,2847,1.811,2848,2.742,2849,1.811,2850,1.811,2851,1.811,2852,1.811,2853,3.079,2854,4.737,2855,3.079,2856,3.079,2857,3.079,2858,4.737,2859,4.737,2860,4.737,2861,4.737,2862,5.773,2863,5.773,2864,3.079,2865,1.811,2866,3.079,2867,3.079,2868,1.811,2869,1.811,2870,1.811,2871,1.811,2872,1.811,2873,1.811,2874,1.811,2875,1.811,2876,1.811]],["title/interfaces/ProductCreationAttrs.html",[307,0.928,1616,2.749]],["body/interfaces/ProductCreationAttrs.html",[3,0.053,4,0.046,5,0.053,7,0.168,17,0.007,18,0.494,19,1.113,28,0.217,51,0.093,61,0.987,78,0.005,79,0.005,124,0.843,127,1.353,131,2.103,307,1.767,308,1.781,314,1.707,316,2.043,318,3.884,738,3.415,946,3.693,947,3.693,948,3.693,949,3.693,1135,3.415,1408,3.617,1418,2.492,1460,2.492,1490,2.428,1525,3.986,1613,3.1,1615,3.36,1616,3.986,1617,4.521,1618,3.987,1619,4.982,1620,4.39,1621,4.982,1622,4.39,1623,4.39,1624,3.1,1625,4.296,1626,4.133,1627,2.989,1628,3.1,1629,3.36]],["title/injectables/ProductMiddleware.html",[0,0.727,2877,3.86]],["body/injectables/ProductMiddleware.html",[0,1.178,2,2.035,3,0.063,4,0.055,5,0.063,7,0.199,8,1.116,10,4.306,14,0.44,16,0.906,17,0.007,18,0.44,19,0.826,21,3.432,22,3.018,23,4.385,24,3.759,25,3.395,26,4.146,28,0.18,29,2.958,30,0.889,31,2.742,32,0.299,35,4.169,36,2.283,37,0.842,40,2.444,50,2.498,51,0.063,52,0.147,53,1.82,58,2.444,59,1.499,69,4.395,70,3.681,71,3.432,72,4.395,78,0.005,79,0.005,107,1.479,186,3.551,194,3.432,399,2.293,400,2.742,566,3.129,604,3.926,660,3.323,840,3.681,1267,3.432,1331,3.99,1332,4.658,1333,5.242,1334,5.242,1335,4.177,1336,4.177,1337,4.658,1338,4.177,1339,4.177,1341,4.658,1518,4.177,2877,6.256,2878,6.093,2879,6.093,2880,4.986]],["title/modules/ProductModule.html",[475,1.739,1101,2.85]],["body/modules/ProductModule.html",[3,0.042,4,0.036,5,0.042,8,0.59,14,0.292,16,0.601,17,0.007,18,0.292,19,0.548,28,0.095,30,0.59,32,0.385,37,0.558,39,1.621,44,1.451,45,1.963,46,1.641,47,1.912,51,0.042,52,0.098,53,1.207,78,0.004,79,0.004,115,1.202,135,1.529,136,1.732,148,2.488,226,1.775,280,2.431,281,2.075,298,2.228,475,2.138,476,3.067,477,1.912,478,2.817,484,2.978,485,2.018,486,2.018,488,2.978,490,2.538,491,3.642,492,4.654,494,4.259,495,1.621,496,4.935,497,3.642,498,2.538,500,2.137,501,2.895,502,2.276,505,3.067,506,2.442,507,3.504,508,2.647,509,2.647,511,1.586,512,2.744,513,2.137,514,3.067,515,2.442,516,2.431,517,2.137,518,2.978,519,2.355,520,2.204,527,2.137,528,2.075,533,2.675,534,2.276,535,2.744,536,2.204,537,2.609,538,2.137,539,2.744,540,2.137,541,2.609,542,2.204,543,2.817,544,2.204,545,2.053,548,2.075,549,2.137,550,2.137,551,2.137,552,2.137,553,2.137,554,2.204,562,2.647,563,3.798,564,3.849,566,4.499,567,4.183,570,4.745,572,2.916,1097,3.642,1098,3.504,1100,3.642,1101,5.372,1107,2.442,1123,3.089,1124,3.089,1129,2.916,1137,3.798,1138,3.307,1139,4.183,1141,4.183,1215,3.599,1373,3.089,1521,5.348,1549,4.745,1651,5.598,2758,5.55,2821,5.891,2822,3.599,2877,3.307,2881,3.599,2882,3.599,2883,4.042,2884,4.042,2885,4.042,2886,4.042,2887,3.599,2888,4.042,2889,4.042,2890,4.042,2891,4.042,2892,2.771,2893,4.042,2894,4.042,2895,3.599,2896,4.042,2897,4.042,2898,4.042,2899,4.042,2900,4.042,2901,4.042]],["title/classes/ProductReviews.html",[52,0.114,1137,3.089]],["body/classes/ProductReviews.html",[3,0.06,4,0.052,5,0.06,7,0.19,14,0.59,17,0.007,28,0.214,32,0.319,51,0.06,52,0.14,78,0.005,79,0.005,114,3.009,115,1.884,121,1.285,124,0.913,127,1.279,128,1.939,132,2.906,314,1.972,452,2.616,545,2.622,546,2.429,577,2.786,578,3.673,579,4.252,602,3.598,603,4.091,619,3.332,620,3.332,642,3.871,643,2.607,644,3.253,645,3.965,649,2.545,650,2.486,652,2.607,655,3.673,738,2.892,1135,3.697,1137,4.85,1401,5.007,1402,3.064,1404,4.85,1408,3.064,2902,5.793,2903,7.274,2904,5.793,2905,5.793,2906,5.793,2907,5.793,2908,5.793]],["title/guards/RefreshAuthGuard.html",[80,2.749,1276,3.86]],["body/guards/RefreshAuthGuard.html",[0,1.145,3,0.06,4,0.052,5,0.06,7,0.191,8,1.085,11,1.74,14,0.537,16,1.105,17,0.007,18,0.537,19,1.007,22,1.909,28,0.175,29,2.063,30,0.85,32,0.348,33,2.991,34,2.022,37,0.805,43,2.908,48,2.238,49,2.83,51,0.06,52,0.141,53,1.74,59,2.12,65,2.389,66,2.065,67,2.756,68,2.756,78,0.005,79,0.005,82,3.281,85,5.189,89,3.395,90,4.855,92,4.185,93,2.26,94,2.389,95,4.463,97,4.202,98,3.081,105,3.177,107,1.127,108,3.395,112,2.991,113,2.991,115,1.207,130,2.147,272,5.128,285,3.659,419,2.499,1276,6.081,1378,4.49,2026,4.767,2029,6.081,2030,4.767,2031,6.696,2032,6.081,2909,5.825,2910,5.825,2911,5.825,2912,7.431,2913,7.431,2914,5.825]],["title/interfaces/RequestHeaders.html",[307,0.928,1677,3.86]],["body/interfaces/RequestHeaders.html",[0,1.037,3,0.052,4,0.045,5,0.052,7,0.164,8,0.731,14,0.362,17,0.007,19,1.184,22,2.491,23,3.694,24,2.888,25,2.997,26,3.185,28,0.191,29,2.383,32,0.318,33,3.457,35,3.671,36,2.01,37,0.692,40,2.009,50,2.054,51,0.052,52,0.121,53,1.496,55,1.368,59,1.999,61,0.934,65,1.61,66,1.871,70,4.067,71,3.791,78,0.005,79,0.005,93,1.523,106,1.111,107,1.573,115,1.038,124,0.829,186,2.919,194,2.821,307,0.986,308,1.739,324,3.791,369,2.572,452,1.523,460,4.228,566,2.572,850,5.105,859,2.054,884,3.613,1044,4.856,1066,3.829,1067,3.829,1114,3.829,1267,2.821,1331,3.28,1333,3.434,1334,5.573,1335,5.212,1336,3.434,1338,5.573,1339,3.434,1518,3.434,1674,4.46,1675,5.994,1676,4.46,1677,6.652,1679,4.099,1681,4.46,1683,5.146,1684,3.829,1685,7.552,1686,7.239,1687,4.46,1688,4.46,1689,4.46,1690,4.46,1691,6.222,1692,6.77,1693,4.46,1694,4.46,1695,4.46,1696,4.46,1697,5.994,1698,4.46,1699,4.46,1700,4.099,1701,4.46,1702,7.777,1703,7.777,1704,4.099,1705,4.099,1706,4.46,1707,4.099,1708,4.46,1709,4.46,1710,4.46,1711,5.994,1712,4.46,1713,4.46,1714,4.46,2915,5.009,2916,5.009]],["title/classes/RequestValidator.html",[52,0.114,524,3.234]],["body/classes/RequestValidator.html",[3,0.062,4,0.054,5,0.062,7,0.196,9,1.785,14,0.432,17,0.007,22,2.714,23,2.904,24,3.241,25,2.785,26,3.575,29,2.117,32,0.34,40,2.398,51,0.062,52,0.2,59,2.037,61,0.588,65,1.922,66,1.662,73,1.959,78,0.005,79,0.005,107,1.157,115,1.239,121,1.326,124,0.931,126,1.852,143,2.297,369,3.879,409,2.829,419,2.565,524,5.179,871,6.153,885,4.099,887,4.099,892,5.324,893,5.324,906,4.517,1839,3.755,2259,7.121,2917,7.555,2918,5.979,2919,5.979,2920,7.555,2921,5.979,2922,5.979,2923,5.979,2924,5.979,2925,5.979,2926,5.979,2927,5.324,2928,5.979,2929,5.979,2930,5.979,2931,5.979,2932,7.555,2933,5.979,2934,5.979,2935,5.979,2936,5.979]],["title/classes/ResetDto.html",[52,0.114,704,3.089]],["body/classes/ResetDto.html",[3,0.053,4,0.046,5,0.053,7,0.167,14,0.592,17,0.007,28,0.192,32,0.32,51,0.053,52,0.165,61,0.896,63,4.614,78,0.005,79,0.005,106,2.1,121,1.133,124,0.84,128,1.947,129,3.515,131,2.241,139,3.662,140,1.882,141,2.875,142,3.579,143,1.962,144,3.515,313,2.36,321,3.35,419,2.925,646,3.501,704,4.465,859,3.6,1631,4.638,1632,5.145,1633,5.131,1634,5.579,1635,4.918,1636,5.616,1637,5.91,1638,4.202,1639,5.91,1640,4.178,1642,5.616,1644,3.598,1645,3.683,1646,4.178,1647,3.683,1648,4.178,1717,4.119,1718,3.5,1719,6.021,1720,4.674,1721,4.674,1722,4.674,1723,4.674,1724,4.473,1738,3.5,1797,3.343,2937,5.105,2938,6.818,2939,5.105,2940,5.105,2941,5.105,2942,5.105,2943,5.105,2944,5.105]],["title/interfaces/ReturnedAdmin.html",[307,0.928,1380,2.962]],["body/interfaces/ReturnedAdmin.html",[3,0.057,4,0.049,5,0.057,7,0.181,17,0.007,18,0.649,28,0.225,32,0.216,44,1.797,46,2.031,51,0.095,61,0.98,78,0.005,79,0.005,93,1.679,103,2.315,110,3.897,124,0.885,125,1.844,127,1.263,135,1.893,136,2.144,215,2.485,292,3.11,307,1.799,308,1.917,313,2.669,314,1.991,315,3.056,316,2.68,357,2.92,358,2.836,511,2.167,654,3.11,709,3.011,1376,3.468,1377,3.616,1378,4.338,1379,4.509,1380,5.01,1381,4.509,1382,3.468,1383,3.468,1384,3.468,1385,3.468,1386,3.468]],["title/interfaces/ReturnedCategory.html",[307,0.928,1525,2.749]],["body/interfaces/ReturnedCategory.html",[3,0.055,4,0.048,5,0.055,7,0.174,17,0.007,18,0.506,28,0.213,51,0.094,61,0.986,78,0.005,79,0.005,124,0.863,127,1.331,131,1.723,307,1.783,308,1.846,314,1.971,316,2.092,318,2.517,738,4.319,946,4.076,947,4.076,948,4.076,949,4.076,1135,3.497,1408,4.576,1418,2.584,1460,2.584,1490,2.517,1525,4.565,1613,3.214,1615,3.483,1616,3.099,1617,3.705,1618,2.584,1619,4.082,1620,3.598,1621,4.082,1622,3.598,1623,3.598,1624,3.214,1625,4.4,1626,4.233,1627,3.099,1628,3.214,1629,3.483]],["title/interfaces/ReturnedOwner.html",[307,0.928,1381,2.962]],["body/interfaces/ReturnedOwner.html",[3,0.057,4,0.049,5,0.057,7,0.181,17,0.007,18,0.649,28,0.225,32,0.216,44,1.797,46,2.031,51,0.095,61,0.98,78,0.005,79,0.005,93,1.679,103,2.315,110,3.897,124,0.885,125,1.844,127,1.263,135,1.893,136,2.144,215,2.485,292,3.11,307,1.799,308,1.917,313,2.669,314,1.991,315,3.056,316,2.68,357,2.92,358,2.836,511,2.167,654,3.11,709,3.011,1376,3.468,1377,3.616,1378,4.338,1379,4.509,1380,4.509,1381,5.01,1382,3.468,1383,3.468,1384,3.468,1385,3.468,1386,3.468]],["title/interfaces/ReturnedProduct.html",[307,0.928,1626,2.85]],["body/interfaces/ReturnedProduct.html",[3,0.052,4,0.045,5,0.052,7,0.164,17,0.007,18,0.486,28,0.225,51,0.092,61,0.983,78,0.005,79,0.005,124,0.829,127,1.349,131,2.085,307,1.756,308,1.736,314,1.937,316,2.008,318,2.366,738,3.357,912,5.102,946,3.656,947,3.656,948,3.656,949,3.656,1135,3.357,1408,3.556,1418,2.43,1460,3.947,1490,3.844,1525,4.734,1613,3.022,1615,3.275,1616,2.914,1617,4.483,1618,2.43,1619,4.94,1620,4.353,1621,4.94,1622,4.353,1623,4.353,1624,3.022,1625,5.102,1626,4.59,1627,4.734,1628,3.022,1629,3.275]],["title/interfaces/ReturnedProducts.html",[307,0.928,1628,2.85]],["body/interfaces/ReturnedProducts.html",[3,0.058,4,0.05,5,0.058,7,0.184,17,0.007,18,0.524,28,0.17,51,0.095,61,0.984,78,0.005,79,0.005,124,0.894,127,1.342,131,1.784,307,1.805,308,1.947,314,1.783,316,2.166,318,2.654,738,3.621,946,3.824,947,3.824,948,3.824,949,3.824,1135,3.621,1408,3.836,1418,4.129,1460,2.725,1490,2.654,1525,4.227,1613,3.389,1615,3.674,1616,3.269,1617,3.836,1618,2.725,1619,4.227,1620,3.725,1621,4.227,1622,3.725,1623,3.725,1624,3.389,1625,4.555,1626,5.135,1627,3.269,1628,4.382,1629,5.565]],["title/interfaces/ReturnedReview.html",[307,0.928,1625,2.962]],["body/interfaces/ReturnedReview.html",[3,0.056,4,0.048,5,0.056,7,0.176,17,0.007,18,0.628,28,0.209,51,0.094,61,0.986,78,0.005,79,0.005,124,0.87,127,1.334,131,1.736,307,1.788,308,1.868,314,1.978,316,2.594,318,2.547,738,4.336,946,3.764,947,3.764,948,3.764,949,3.764,1135,4.336,1408,4.593,1418,2.615,1460,2.615,1490,2.547,1525,4.114,1613,3.252,1615,3.524,1616,3.136,1617,3.734,1618,2.615,1619,4.114,1620,3.625,1621,4.114,1622,3.625,1623,3.625,1624,3.252,1625,4.948,1626,4.266,1627,3.136,1628,3.252,1629,3.524]],["title/interfaces/ReturnedUser.html",[307,0.928,1379,2.962]],["body/interfaces/ReturnedUser.html",[3,0.054,4,0.047,5,0.054,7,0.171,17,0.007,18,0.639,28,0.226,32,0.204,44,1.732,46,1.958,51,0.093,61,0.982,78,0.005,79,0.005,93,1.588,103,2.19,110,4.316,124,0.853,125,1.744,127,1.244,135,1.825,136,2.067,215,2.35,292,2.942,307,1.775,308,1.813,313,2.637,314,1.961,315,3.009,316,2.639,357,2.762,358,2.682,511,2.05,654,2.942,709,2.848,1376,3.28,1377,3.42,1378,4.182,1379,4.876,1380,4.347,1381,4.347,1382,3.28,1383,3.28,1384,5.192,1385,5.192,1386,5.192]],["title/classes/Review.html",[52,0.114,1135,2.355]],["body/classes/Review.html",[3,0.053,4,0.045,5,0.053,7,0.166,14,0.634,17,0.007,18,0.616,28,0.221,32,0.319,51,0.053,52,0.122,61,0.862,78,0.005,79,0.005,114,3.231,115,1.816,121,1.125,124,0.837,127,1.15,128,2.083,132,3.57,314,1.89,316,2.544,452,2.666,545,3.221,546,2.127,577,2.554,578,3.443,579,4.369,603,4.188,619,3.055,620,3.055,642,3.944,643,2.283,644,2.982,645,3.298,647,2.857,649,2.228,650,2.176,652,2.283,655,3.055,656,4.623,1135,4.469,1137,4.446,1401,4.797,1402,4.321,1404,3.322,1429,3.186,1441,4.264,1526,3.322,1624,3.065,1627,2.956,2945,5.073,2946,5.073,2947,5.073,2948,5.073,2949,5.073,2950,5.073,2951,5.073,2952,5.073]],["title/interfaces/ReviewCreationAtrb.html",[307,0.928,1624,2.85]],["body/interfaces/ReviewCreationAtrb.html",[3,0.057,4,0.05,5,0.057,7,0.181,17,0.007,18,0.634,28,0.188,51,0.095,61,0.987,78,0.005,79,0.005,124,0.887,127,1.319,131,1.77,307,1.8,308,1.924,314,1.773,316,2.618,318,2.622,738,3.592,946,3.806,947,3.806,948,3.806,949,3.806,1135,4.376,1408,3.805,1418,2.692,1460,2.692,1490,2.622,1525,4.193,1613,3.348,1615,3.629,1616,3.229,1617,3.805,1618,2.692,1619,4.193,1620,3.695,1621,4.193,1622,3.695,1623,3.695,1624,4.348,1625,4.519,1626,4.348,1627,3.229,1628,3.348,1629,3.629]],["title/controllers/ReviewsController.html",[146,2.072,2953,3.86]],["body/controllers/ReviewsController.html",[3,0.053,4,0.045,5,0.053,7,0.166,8,0.992,11,1.517,14,0.491,16,1.01,17,0.007,18,0.491,19,0.921,28,0.16,30,0.992,32,0.372,37,0.702,44,1.271,51,0.053,52,0.123,55,1.387,58,2.726,65,2.185,78,0.005,79,0.005,106,1.127,107,1.315,127,1.234,128,1.615,146,2.232,148,2.18,150,2.961,163,4.809,164,4.809,187,4.106,188,3.327,189,4.659,190,3.327,191,3.191,192,3.665,193,5.25,195,3.07,200,3.07,201,3.327,202,3.327,211,2.961,212,3.191,213,3.07,214,3.191,215,2.286,216,3.483,217,2.961,218,3.483,219,3.483,220,3.483,221,4.627,222,3.327,223,3.327,224,3.327,225,2.862,229,2.862,230,3.07,231,3.07,232,3.828,233,3.07,234,2.961,235,3.327,236,3.07,248,4.451,249,3.483,250,3.665,251,3.327,255,5.605,399,2.557,404,4.199,1267,2.862,1401,4.605,1500,3.884,1515,3.884,1518,3.483,1520,3.884,1527,3.884,1627,2.961,1856,6.326,1889,5.195,2826,4.524,2848,4.524,2903,5.561,2953,5.561,2954,5.081,2955,6.819,2956,6.819,2957,5.081,2958,5.081,2959,5.081,2960,4.524,2961,5.081,2962,5.081,2963,5.081,2964,4.158,2965,5.524,2966,4.524,2967,5.081,2968,5.081,2969,5.081,2970,5.081,2971,5.081,2972,5.081]],["title/modules/ReviewsModule.html",[475,1.739,1102,3.403]],["body/modules/ReviewsModule.html",[3,0.045,4,0.039,5,0.045,8,0.631,14,0.312,16,0.642,17,0.007,18,0.312,19,0.586,28,0.102,30,0.631,32,0.386,37,0.597,39,1.733,44,1.522,45,2.099,46,1.721,47,2.045,51,0.045,52,0.104,53,1.291,78,0.004,79,0.004,115,1.26,135,1.603,136,1.816,148,2.609,226,1.898,280,2.55,281,2.219,298,2.337,475,2.242,476,3.216,477,2.045,478,2.954,484,3.123,485,2.157,486,2.157,488,3.123,490,2.714,491,3.819,492,4.796,494,4.419,495,1.733,496,5.013,497,3.819,498,2.714,500,2.285,501,3.036,502,2.434,505,3.216,506,2.611,507,2.611,508,2.83,509,2.83,511,1.696,512,2.878,513,2.285,514,3.216,515,2.611,516,2.55,517,2.285,518,3.123,519,2.518,520,2.357,524,2.963,525,3.304,526,3.304,527,2.285,528,2.219,533,2.805,534,2.434,535,2.878,536,2.357,537,2.737,538,2.285,539,2.878,540,2.285,541,2.737,542,2.357,543,2.954,544,2.357,545,2.153,546,1.812,548,2.219,549,2.285,550,2.285,551,2.285,552,2.285,553,2.285,554,2.357,562,2.83,563,3.983,564,2.671,566,3.123,1097,3.819,1098,3.674,1100,3.819,1102,6.507,1107,2.611,1123,3.304,1124,3.304,1129,3.118,1135,3.036,1137,3.983,1521,5.467,1549,4.977,1856,3.118,2821,6.022,2887,3.848,2953,5.758,2964,3.536,2965,6.022,2966,3.848,2973,3.848,2974,3.848,2975,4.322,2976,4.322,2977,3.848,2978,4.322,2979,3.848,2980,4.322,2981,4.322,2982,4.322,2983,4.322]],["title/injectables/ReviewsService.html",[0,0.727,2965,3.403]],["body/injectables/ReviewsService.html",[0,1.052,2,1.708,3,0.053,4,0.046,5,0.053,7,0.167,8,0.996,9,2.624,11,2.038,14,0.593,16,1.142,17,0.007,18,0.593,19,1.041,28,0.18,30,0.996,31,2.301,32,0.334,36,2.038,37,0.706,38,2.98,39,2.051,51,0.053,52,0.123,55,2.332,56,2.98,59,2.1,66,1.897,73,2.986,78,0.005,79,0.005,94,2.194,106,1.895,107,1.32,124,0.841,126,1.584,127,1.236,314,1.135,316,1.527,324,4.617,369,2.626,396,2.98,545,2.417,1135,4.478,1401,4.327,1593,5.585,1856,5.913,2821,6.471,2903,4.184,2955,6.841,2956,6.078,2960,6.078,2964,4.184,2965,4.924,2977,4.553,2979,4.553,2984,5.114,2985,5.114,2986,6.825,2987,6.825,2988,5.114,2989,5.114,2990,6.825,2991,5.114,2992,6.825,2993,5.114,2994,5.114,2995,5.114,2996,6.825,2997,5.114,2998,8.197,2999,5.114,3000,5.114,3001,6.825,3002,5.114,3003,5.114,3004,6.825,3005,5.114,3006,5.114,3007,5.114,3008,5.114,3009,5.114,3010,5.114,3011,5.114]],["title/classes/Role.html",[52,0.114,136,1.409]],["body/classes/Role.html",[3,0.046,4,0.04,5,0.046,7,0.145,8,0.903,14,0.647,17,0.007,28,0.21,30,1.041,32,0.338,44,2.269,45,2.152,46,2.381,47,2.096,51,0.046,52,0.107,55,2.444,61,0.759,78,0.004,79,0.004,107,1.38,114,3.102,115,1.825,121,0.983,124,0.763,126,2.516,127,0.871,128,1.999,129,3.06,130,2.281,131,2.274,132,3.458,135,2.218,136,2.13,139,3.312,140,1.633,144,3.06,145,2.152,215,1.993,226,1.946,259,5.836,314,1.802,452,2.679,512,3.653,577,2.328,578,3.209,579,4.028,602,4.088,603,3.786,618,3.037,619,2.785,620,2.785,642,3.474,643,1.993,644,2.718,649,1.946,650,1.901,652,1.993,655,1.993,656,3.739,1283,5.451,1429,4.479,1441,4.848,1633,3.485,1865,5.51,2007,2.782,3012,4.43,3013,7.131,3014,7.72,3015,7.72,3016,7.72,3017,4.43,3018,4.43,3019,4.43,3020,4.43,3021,4.43,3022,4.43,3023,4.43,3024,4.43,3025,4.43,3026,4.43,3027,4.43,3028,3.386,3029,4.43,3030,4.43,3031,4.43,3032,4.43]],["title/interfaces/RolecreationAttrbs.html",[307,0.928,2007,2.962]],["body/interfaces/RolecreationAttrbs.html",[3,0.063,4,0.055,5,0.063,7,0.2,17,0.007,18,0.605,28,0.18,51,0.096,60,2.752,61,0.985,78,0.005,79,0.005,93,2.668,124,0.944,125,2.043,126,2.718,127,1.078,131,2.158,298,2.35,307,1.814,308,2.123,310,3.141,311,3.141,312,3.141,313,2.602,314,1.357,315,2.849,316,2.499,321,3.285,604,3.141,828,3.564,1631,3.696,2004,3.841,2005,4.193,2006,3.841,2007,4.813,2008,4.006,2009,3.841,2010,3.696]],["title/controllers/RolesController.html",[146,2.072,3033,3.86]],["body/controllers/RolesController.html",[3,0.048,4,0.042,5,0.048,7,0.152,8,0.933,9,1.909,14,0.462,16,0.95,17,0.007,18,0.462,19,0.867,25,2.357,28,0.201,30,0.933,32,0.371,37,0.641,44,1.6,51,0.048,52,0.112,58,2.564,61,0.719,65,2.056,78,0.004,79,0.004,81,5.275,94,2.745,105,2.532,106,1.03,107,1.237,126,1.98,128,1.519,136,2.183,140,1.712,146,2.04,148,1.992,150,2.706,158,5.232,160,6.022,163,5.188,164,5.188,171,4.612,187,2.805,188,4.788,190,3.041,191,2.916,195,2.805,197,5.275,198,5.275,199,3.35,200,4.418,201,3.041,202,3.041,211,2.706,212,2.916,213,2.805,214,2.916,215,3.545,216,3.183,217,2.706,218,3.183,219,3.183,220,3.183,221,4.991,222,3.041,223,3.041,224,3.041,225,2.615,229,2.615,230,2.805,231,2.805,232,3.601,233,2.805,234,2.706,235,3.041,236,2.805,242,3.601,243,3.486,244,3.726,245,4.612,246,3.863,248,4.187,249,4.383,251,3.041,255,5.401,399,2.406,404,4.045,681,3.549,682,4.015,747,3.183,1267,2.615,1497,5.232,1500,3.549,1515,3.549,1519,3.8,1520,3.549,1527,3.549,1863,6.022,3033,5.232,3034,4.643,3035,5.693,3036,5.693,3037,4.643,3038,6.393,3039,6.393,3040,4.643,3041,4.643,3042,4.643,3043,6.393,3044,4.135,3045,4.643,3046,4.643,3047,4.135,3048,3.8,3049,4.135,3050,4.643,3051,4.643,3052,4.643,3053,4.643,3054,4.643,3055,4.643,3056,4.643,3057,4.643]],["title/guards/RolesGuard.html",[80,2.749,163,2.962]],["body/guards/RolesGuard.html",[0,1.02,3,0.051,4,0.044,5,0.051,7,0.16,8,0.966,9,1.459,11,1.459,14,0.478,16,0.984,17,0.007,18,0.478,19,0.897,28,0.156,29,1.73,30,0.713,32,0.357,34,1.696,36,1.977,37,0.675,43,2.439,48,1.877,49,2.374,50,2.003,51,0.051,52,0.118,53,1.459,55,1.334,58,2.655,59,2.132,61,0.738,65,2.704,66,2.337,73,1.601,78,0.004,79,0.004,82,2.752,85,4.901,89,2.847,90,4.532,92,3.728,93,2.013,94,2.128,95,4.094,98,2.584,103,3.635,104,2.584,105,2.664,107,1.452,108,2.847,112,4.319,113,4.319,115,1.372,126,1.513,130,1.801,131,1.202,136,1.459,163,4.157,217,2.847,271,6.778,272,4.883,277,6.151,282,2.952,283,5.06,284,3.735,285,3.068,286,5.147,287,3.2,288,5.06,289,3.735,290,3.735,291,3.735,294,3.525,306,3.735,399,2.491,400,2.979,410,3.61,419,2.096,849,3.068,2017,3.998,2026,3.998,2029,3.998,2030,3.998,2031,6.143,2032,5.417,2034,4.351,2035,4.351,3058,4.886,3059,4.886,3060,4.886,3061,4.886,3062,4.886]],["title/modules/RolesModule.html",[475,1.739,514,2.494]],["body/modules/RolesModule.html",[3,0.044,4,0.038,5,0.044,8,0.617,14,0.306,16,0.629,17,0.007,18,0.306,19,0.573,28,0.099,30,0.617,32,0.384,37,0.584,39,1.696,44,1.499,45,2.055,46,1.695,47,2.001,51,0.044,52,0.102,53,1.263,78,0.004,79,0.004,115,1.567,135,1.579,136,1.789,148,2.57,226,1.858,272,4.669,279,2.556,280,2.512,281,2.172,285,2.656,298,2.301,339,4.521,386,2.656,475,2.208,476,3.168,477,2.001,478,2.91,483,4.138,484,3.076,485,2.112,486,2.112,488,3.076,489,3.923,490,2.656,491,3.762,492,4.75,494,3.762,495,1.696,496,4.904,497,3.762,498,2.656,500,2.237,501,2.99,502,2.382,505,3.168,506,2.556,507,2.556,508,2.77,509,2.77,512,2.834,514,4.982,516,2.512,517,2.237,518,2.172,519,2.465,520,2.307,527,2.237,528,2.172,531,3.49,532,2.9,533,2.763,534,2.382,535,2.834,536,2.307,537,2.695,538,2.237,539,2.834,540,2.237,541,2.695,542,2.307,543,2.91,544,2.307,545,2.121,546,1.774,547,2.556,548,2.172,549,3.168,550,3.168,551,3.168,552,3.168,553,3.168,554,2.307,562,2.77,563,2.77,564,2.631,566,3.076,567,3.051,682,5.759,1099,3.923,1101,3.619,1107,2.556,1113,3.461,1122,3.051,1373,3.233,2012,5.429,2015,3.461,3033,5.691,3048,3.461,3049,3.766,3063,3.766,3064,3.766,3065,3.766,3066,4.23,3067,4.23,3068,4.23,3069,4.23,3070,4.23,3071,4.23]],["title/injectables/RolesService.html",[0,0.727,682,2.962]],["body/injectables/RolesService.html",[0,1.167,2,2.004,3,0.062,4,0.054,5,0.062,7,0.196,8,1.105,9,2.74,11,1.792,14,0.6,16,1.233,17,0.007,18,0.6,19,1.125,28,0.178,30,1.105,32,0.341,36,2.261,37,0.829,38,3.497,39,2.407,51,0.062,52,0.145,55,1.639,56,3.497,59,1.862,61,0.816,73,2.481,78,0.005,79,0.005,94,2.802,107,1.465,126,2.57,136,2.74,396,3.497,682,4.756,690,4.329,1863,6.661,3035,6.743,3036,6.743,3044,6.743,3047,5.344,3048,4.911,3072,6.001,3073,6.001,3074,6.001,3075,7.573,3076,7.573,3077,6.001,3078,6.001,3079,6.001,3080,6.001,3081,6.001]],["title/classes/SignupDto.html",[52,0.114,1261,3.606]],["body/classes/SignupDto.html",[3,0.043,4,0.037,5,0.043,7,0.136,14,0.596,17,0.007,18,0.574,28,0.194,32,0.294,51,0.043,52,0.143,61,0.899,78,0.004,79,0.004,106,2.105,121,0.924,124,0.73,127,0.586,128,1.96,129,3.538,131,2.249,135,1.562,139,3.64,140,1.535,142,3.558,143,1.6,144,3.538,313,2.286,315,2.557,316,2.37,321,3.237,419,2.541,646,3.042,859,3.749,1261,4.528,1631,4.538,1632,4.717,1633,5.04,1634,4.847,1635,4.273,1636,5.149,1637,5.418,1638,4.218,1639,5.418,1640,3.407,1642,5.149,1644,3.299,1645,3.003,1646,3.407,1647,3.003,1648,3.407,1717,4.166,1718,2.854,1719,5.654,1720,4.061,1721,4.061,1722,4.061,1723,4.061,1724,4.018,1738,2.854,1751,3.749,1758,4.727,1766,4.528,1767,3.407,1768,5.741,1769,5.741,1770,4.528,1775,3.132,1776,3.182,1790,4.23,1791,4.729,1792,5.149,1797,2.726,1798,2.615,1799,4.061,1800,4.061,1874,5.642,1877,5.274,1879,6.139,1881,5.27,1882,3.407,1883,5.642,3082,4.163,3083,4.163,3084,4.163,3085,4.163,3086,4.163,3087,4.163,3088,4.163,3089,4.163,3090,5.923,3091,4.163,3092,5.923]],["title/injectables/TasksService.html",[0,0.727,339,2.572]],["body/injectables/TasksService.html",[0,0.75,2,1.065,3,0.033,4,0.029,5,0.033,7,0.104,8,0.71,9,1.972,11,1.453,14,0.626,16,1.194,17,0.007,18,0.692,19,1.089,25,2.762,28,0.189,30,1.226,32,0.278,36,1.453,37,0.441,51,0.033,52,0.077,55,1.941,58,1.279,59,2.13,61,0.956,66,1.835,73,1.045,78,0.003,79,0.003,94,2.123,106,1.309,107,1.714,124,0.6,126,0.988,127,1.233,128,1.402,135,0.841,145,3.454,244,3.439,324,3.719,339,2.654,358,2.499,369,1.638,383,2.741,399,1.2,404,1.638,410,2.654,460,4.146,495,3.302,516,2.981,970,5.103,985,2.187,1015,5.128,1016,3.983,1043,4.334,1083,5.047,1089,2.439,1090,2.439,1091,2.841,1092,2.841,1593,5.403,1658,2.611,1852,2.301,1930,2.439,1955,5.879,3093,3.19,3094,5.901,3095,5.901,3096,5.901,3097,4.867,3098,4.867,3099,4.867,3100,5.901,3101,6.602,3102,6.602,3103,6.602,3104,3.19,3105,7.493,3106,5.901,3107,6.602,3108,4.867,3109,3.19,3110,7.793,3111,3.19,3112,5.901,3113,3.19,3114,8.939,3115,7.493,3116,3.19,3117,3.19,3118,4.867,3119,3.19,3120,7.793,3121,3.19,3122,3.19,3123,4.867,3124,3.19,3125,4.867,3126,3.19,3127,4.867,3128,3.19,3129,3.19,3130,3.19,3131,7.493,3132,3.19,3133,3.19,3134,3.19,3135,4.867,3136,4.867,3137,3.19,3138,3.19,3139,3.19,3140,2.841,3141,3.19,3142,3.19,3143,4.867,3144,3.19,3145,3.19,3146,3.19,3147,4.867,3148,3.19,3149,3.19,3150,3.19,3151,3.19,3152,3.19,3153,3.19,3154,3.19,3155,5.901,3156,6.602,3157,3.19,3158,7.493,3159,4.867,3160,4.867,3161,3.19,3162,4.867,3163,3.19,3164,3.19,3165,3.19,3166,5.901,3167,3.19,3168,4.867,3169,3.19,3170,3.19,3171,3.19,3172,3.19,3173,3.19,3174,3.19,3175,3.19,3176,3.19,3177,3.19,3178,4.867,3179,3.19,3180,3.19]],["title/modules/TelegramModule.html",[475,1.739,1103,3.403]],["body/modules/TelegramModule.html",[3,0.062,4,0.054,5,0.062,8,0.873,9,1.785,14,0.546,16,1.123,17,0.007,18,0.546,19,1.024,28,0.177,30,1.103,32,0.34,37,0.826,51,0.062,52,0.144,55,2.063,59,1.858,71,4.665,73,1.959,78,0.005,79,0.005,107,1.602,475,3.053,477,2.829,488,3.07,489,3.915,548,3.07,906,4.745,1103,5.975,1143,4.57,1146,4.57,1985,7.115,1988,4.57,1992,4.57,3181,5.979,3182,7.555,3183,5.979,3184,5.979,3185,8.283,3186,5.979,3187,7.555,3188,5.979,3189,8.283,3190,7.555,3191,6.727,3192,5.324,3193,5.324,3194,6.778,3195,5.979,3196,7.555,3197,5.979,3198,5.979,3199,7.555,3200,5.979,3201,5.979]],["title/injectables/TelegramService.html",[0,0.727,3194,3.86]],["body/injectables/TelegramService.html",[0,1.174,2,2.023,3,0.063,4,0.054,5,0.063,7,0.198,8,1.112,9,2.488,11,1.809,14,0.632,16,1.132,17,0.007,18,0.551,19,1.033,28,0.205,30,0.884,32,0.342,37,0.837,51,0.063,52,0.146,61,0.905,66,1.684,71,5.18,73,1.985,78,0.005,79,0.005,124,0.939,126,1.877,369,3.111,859,3.123,1988,4.631,1990,7.03,1991,6.819,2629,5.395,2642,5.395,3191,5.395,3192,5.395,3193,5.395,3194,6.234,3202,6.058,3203,8.333,3204,7.618,3205,7.618,3206,7.618,3207,6.058,3208,7.618,3209,7.786,3210,6.058,3211,6.058,3212,6.058,3213,6.058,3214,6.058]],["title/injectables/ThrottlerBehindProxyGuard.html",[0,0.727,211,2.749]],["body/injectables/ThrottlerBehindProxyGuard.html",[0,1.253,2,2.25,3,0.07,4,0.06,5,0.07,7,0.22,8,1.187,14,0.487,16,1.002,17,0.007,18,0.487,19,0.913,28,0.158,29,2.386,30,0.984,32,0.318,37,0.931,51,0.07,52,0.163,61,0.8,78,0.005,79,0.005,107,1.304,211,4.74,213,4.915,225,3.795,577,3.061,1353,7.781,2654,7.781,3215,8.134,3216,6.738,3217,8.738,3218,8.134,3219,8.134,3220,6.738,3221,6.738,3222,6.738,3223,6.738]],["title/interfaces/Tokens.html",[307,0.928,654,2.657]],["body/interfaces/Tokens.html",[3,0.059,4,0.051,5,0.059,7,0.186,17,0.007,18,0.585,28,0.216,32,0.222,44,1.832,46,2.071,51,0.095,61,0.978,78,0.005,79,0.005,93,1.73,103,2.386,110,3.941,124,0.902,125,1.9,127,1.202,135,1.93,136,2.186,215,2.56,292,4.812,307,1.811,308,1.975,313,2.546,314,1.796,315,2.755,316,2.417,357,4.518,358,4.156,511,2.233,654,4.123,709,3.103,1376,3.573,1377,3.726,1378,5.341,1379,4.597,1380,4.597,1381,4.597,1382,3.573,1383,3.573,1384,3.573,1385,3.573,1386,3.573]],["title/classes/UpdateCategoryDto.html",[52,0.114,1568,3.86]],["body/classes/UpdateCategoryDto.html",[3,0.061,4,0.052,5,0.061,7,0.191,14,0.624,17,0.007,28,0.203,32,0.229,51,0.061,52,0.18,61,0.922,78,0.005,79,0.005,121,1.297,124,0.918,128,2.051,142,3.738,143,2.246,946,3.689,947,3.689,948,3.689,949,3.689,1568,6.095,1638,4.324,1644,2.568,1751,4.68,1775,4.564,1789,7.686,1790,5.28,1791,5.343,1792,6.427,1797,3.829,1798,3.672,1799,5.917,1800,5.917,3224,5.847,3225,5.847,3226,5.847,3227,5.847,3228,5.847]],["title/classes/UpdateProductDto.html",[52,0.114,2287,3.606]],["body/classes/UpdateProductDto.html",[3,0.048,4,0.042,5,0.048,7,0.153,14,0.634,17,0.007,28,0.222,32,0.251,51,0.048,52,0.191,61,0.93,78,0.004,79,0.004,106,2.135,114,2.706,115,1.637,121,1.038,124,0.792,127,1.233,128,2.083,131,1.805,141,4.134,142,3.675,143,1.797,912,4.035,946,3.303,947,3.303,948,3.303,949,3.303,1460,3.566,1490,3.04,1617,3.882,1620,3.769,1622,3.3,1623,3.3,1638,3.645,1644,2.055,1735,4.277,1736,5.295,1751,3.945,1775,4.179,1790,4.451,1791,4.309,1827,7.375,1829,4.165,1831,4.165,1832,4.165,1838,2.938,1839,2.938,1840,6.732,1845,5.032,1846,5.7,1847,5.7,1848,5.611,1849,6.04,1850,3.576,1851,3.576,1852,5.7,1853,4.912,1854,4.912,1855,3.576,2282,4.165,2287,4.912,3229,4.677,3230,4.677,3231,4.677,3232,4.677,3233,4.677,3234,4.677,3235,4.677]],["title/classes/UpdateUserDto.html",[52,0.114,3236,3.403]],["body/classes/UpdateUserDto.html",[3,0.053,4,0.045,5,0.053,7,0.166,14,0.616,17,0.007,18,0.591,28,0.2,32,0.299,51,0.053,52,0.164,61,0.916,78,0.005,79,0.005,106,2.131,121,1.127,124,0.837,128,2.025,129,3.657,131,2.29,139,3.763,140,1.873,142,3.677,143,1.952,144,3.657,316,2.442,859,3.352,1384,5.135,1385,5.135,1386,5.135,1393,4.158,1633,4.605,1638,3.771,1644,2.232,1751,4.082,1758,4.659,1775,3.594,1790,4.605,1791,4.963,1792,5.605,1797,3.327,1798,3.191,1799,5.843,1800,4.659,1873,4.524,1874,6.266,1875,4.524,1881,5.195,1882,4.158,1883,6.266,1884,4.524,1885,3.884,3236,4.903,3237,8.77,3238,8.176,3239,5.081,3240,6.796,3241,5.081,3242,5.081,3243,5.081,3244,5.081,3245,5.081,3246,7.658]],["title/injectables/UserAdminMiddleware.html",[0,0.727,521,3.86]],["body/injectables/UserAdminMiddleware.html",[0,1.045,2,1.691,3,0.052,4,0.045,5,0.052,7,0.166,8,0.99,9,2.283,10,4.306,11,1.512,14,0.49,16,1.008,17,0.007,18,0.59,19,0.919,21,2.853,22,2.789,23,4.136,24,3.503,25,3.23,26,3.864,28,0.159,29,2.891,30,0.739,31,3.052,32,0.356,33,2.601,34,1.758,35,3.698,36,2.025,37,0.699,40,2.031,42,5.549,43,2.528,48,1.946,49,2.46,50,2.076,51,0.052,52,0.122,53,1.512,58,2.031,59,2.265,65,2.18,66,1.885,67,2.397,68,2.397,73,1.659,78,0.005,79,0.005,105,2.762,106,1.124,107,1.312,135,1.335,310,2.601,311,2.601,312,2.601,313,1.953,315,2.603,316,2.025,394,4.259,395,3.06,399,1.906,400,2.279,408,2.678,409,2.397,483,4.076,521,5.549,547,3.06,680,4.441,716,3.181,823,4.51,824,4.51,825,4.51,826,4.145,827,4.51,828,2.951,829,4.51,830,4.51,831,4.51,832,4.51,833,4.51,834,4.51,835,4.51,836,4.51,838,4.51,839,4.51,840,3.06,934,4.649,944,3.872,2002,4.51,3247,7.646,3248,5.065,3249,5.065,3250,5.065,3251,5.065,3252,4.51,3253,4.51]],["title/guards/UserGuard.html",[80,2.749,2827,3.606]],["body/guards/UserGuard.html",[0,1.013,3,0.05,4,0.043,5,0.05,7,0.158,8,0.959,9,1.443,11,1.962,14,0.475,16,0.977,17,0.007,18,0.475,19,0.891,22,1.584,28,0.154,29,1.712,30,0.706,32,0.361,34,1.678,36,1.962,37,0.668,43,2.413,48,1.857,49,2.348,50,1.982,51,0.05,52,0.117,53,1.443,55,2.039,59,2.175,61,0.734,65,2.576,66,2.227,67,2.287,68,2.287,73,2.153,78,0.004,79,0.004,82,2.723,85,4.882,89,2.817,90,4.512,92,3.701,93,1.999,94,2.113,95,4.072,98,2.556,103,3.359,104,2.556,106,1.072,107,1.55,108,2.817,109,3.166,112,3.834,113,3.834,115,1.362,126,1.497,131,1.189,136,1.443,217,2.817,271,6.759,272,4.98,276,5.023,277,5.707,279,2.921,282,2.921,283,5.023,284,3.695,285,3.036,286,4.505,287,3.166,288,5.023,289,3.695,290,3.695,291,3.695,292,3.701,293,3.695,295,3.695,296,3.956,297,3.956,298,2.525,301,3.956,303,3.956,305,3.956,306,3.695,452,1.47,2012,5.66,2015,3.956,2023,4.304,2827,5.023,3254,4.834,3255,4.834,3256,4.834,3257,4.834,3258,6.571,3259,4.834,3260,4.834,3261,4.834]],["title/interfaces/UserInterface.html",[307,0.928,2010,2.85]],["body/interfaces/UserInterface.html",[3,0.058,4,0.05,5,0.058,7,0.183,17,0.007,18,0.651,28,0.221,51,0.093,60,2.515,61,0.983,78,0.005,79,0.005,93,2.917,124,0.892,125,1.867,126,1.732,127,1.194,131,1.375,298,2.148,307,1.773,308,1.941,310,4.358,311,4.358,312,4.358,313,2.676,314,1.883,315,3.066,316,2.689,321,3.149,604,2.87,828,4.946,1631,3.377,2004,3.511,2005,3.832,2006,3.511,2007,3.511,2008,3.661,2009,3.511,2010,4.372]],["title/injectables/UserJwtRefreshTokenService.html",[0,0.727,2012,3.089]],["body/injectables/UserJwtRefreshTokenService.html",[0,0.663,2,0.909,3,0.028,4,0.024,5,0.028,7,0.089,8,0.628,9,2.747,11,1.284,14,0.567,16,1.166,17,0.007,18,0.567,19,1.063,22,0.892,28,0.184,30,1.112,31,3.158,32,0.314,33,1.397,34,0.945,36,1.284,37,0.376,38,1.586,39,1.091,48,2.697,51,0.028,52,0.066,55,1.655,56,1.586,58,2.647,59,2.106,61,0.942,65,2.635,66,2.278,67,1.288,68,1.288,73,2.913,78,0.003,79,0.003,94,2.754,103,1.803,106,0.604,107,1.554,125,2.683,127,1.104,135,1.938,145,4.286,203,1.865,298,3.587,313,2.314,314,0.954,323,2.227,325,4.365,327,4.365,330,4.365,331,4.365,332,3.52,333,4.365,334,4.365,335,4.365,336,2.227,337,5.743,338,4.365,339,3.305,353,2.227,357,3.712,358,3.604,371,1.709,372,3.288,373,4.633,375,3.288,376,4.077,377,3.288,378,3.288,379,2.227,380,2.08,383,1.533,384,2.423,386,1.709,387,1.709,394,1.709,395,1.644,396,1.586,398,2.227,399,2.484,400,2.971,401,4.323,402,5.046,403,4.323,404,3.39,408,3.491,409,3.124,410,4.769,413,2.227,414,4.365,415,3.52,416,3.52,419,1.167,421,4.365,425,4.96,430,2.227,450,2.227,452,0.827,483,3.026,589,2.817,590,2.817,591,2.817,592,2.817,593,2.817,594,2.817,595,2.817,596,2.817,597,2.817,598,2.817,599,2.817,604,4.125,680,3.493,716,1.709,756,4.365,774,2.227,934,3.657,1886,4.96,2012,2.817,2097,2.227,3262,8.034,3263,5.334,3264,2.721,3265,2.721,3266,2.721,3267,2.721,3268,2.721,3269,2.721,3270,2.721,3271,2.721,3272,4.301,3273,2.721,3274,2.721,3275,2.721,3276,6.061,3277,2.721,3278,2.721,3279,2.721,3280,2.721,3281,2.423,3282,2.721,3283,2.721,3284,5.334,3285,2.721,3286,4.301,3287,4.301,3288,2.721,3289,2.721,3290,2.721,3291,2.721,3292,2.721,3293,4.301,3294,2.721,3295,2.721,3296,4.301,3297,4.301,3298,4.301,3299,4.301,3300,2.721]],["title/injectables/UserMiddleware.html",[0,0.727,2892,3.234]],["body/injectables/UserMiddleware.html",[0,1.18,2,2.039,3,0.063,4,0.055,5,0.063,7,0.2,8,1.117,10,4.311,14,0.441,16,0.907,17,0.007,18,0.441,19,0.828,21,3.438,22,3.019,23,4.387,24,3.762,25,3.397,26,4.149,28,0.18,29,2.961,30,0.891,31,2.747,32,0.299,35,4.174,36,2.286,37,0.843,40,2.448,50,2.503,51,0.063,52,0.147,53,1.823,58,2.448,59,1.501,69,4.404,70,3.688,71,3.438,72,4.404,78,0.005,79,0.005,107,1.481,186,3.557,194,3.438,399,2.297,400,2.747,566,3.135,604,3.931,660,3.329,840,3.688,1267,3.438,1331,3.998,1332,4.667,1333,5.248,1334,5.248,1335,4.185,1336,4.185,1337,4.667,1338,4.185,1339,4.185,1341,4.667,2880,4.996,2892,5.248,3301,6.105,3302,6.105]],["title/injectables/UserMiddleware-1.html",[0,0.605,130,1.448,2892,2.692]],["body/injectables/UserMiddleware-1.html",[0,1.18,2,2.039,3,0.063,4,0.055,5,0.063,7,0.2,8,1.117,10,4.311,14,0.441,16,0.907,17,0.007,18,0.441,19,0.828,21,3.438,22,3.019,23,4.387,24,3.762,25,3.397,26,4.149,28,0.18,29,2.961,30,0.891,31,2.747,32,0.299,35,4.174,36,2.286,37,0.843,40,2.448,50,2.503,51,0.063,52,0.147,53,1.823,58,2.448,59,1.501,69,4.404,70,3.688,71,3.438,72,4.404,78,0.005,79,0.005,107,1.481,186,3.557,194,3.438,399,2.297,400,2.747,566,3.135,604,3.931,660,3.329,840,3.688,1267,3.438,1331,3.998,1332,4.667,1333,5.248,1334,5.248,1335,4.185,1336,4.185,1337,4.667,1338,4.185,1339,4.185,1341,4.667,2880,4.996,2892,5.248,3303,6.105,3304,6.105]],["title/interfaces/UserRefreshCreationAttrbs.html",[307,0.928,2006,2.962]],["body/interfaces/UserRefreshCreationAttrbs.html",[3,0.062,4,0.053,5,0.062,7,0.195,17,0.007,18,0.598,28,0.204,51,0.095,60,2.68,61,0.985,78,0.005,79,0.005,93,2.643,124,0.929,125,2.902,126,1.845,127,1.223,131,1.465,298,3.339,307,1.802,308,2.068,310,3.059,311,3.059,312,3.059,313,2.71,314,1.321,315,2.815,316,2.469,321,3.245,604,4.462,828,3.471,1631,3.599,2004,3.741,2005,4.083,2006,4.733,2007,3.741,2008,3.901,2009,3.741,2010,3.599]],["title/classes/UserRefreshToken.html",[52,0.114,298,1.812]],["body/classes/UserRefreshToken.html",[3,0.037,4,0.032,5,0.037,7,0.118,8,0.777,14,0.655,16,0.942,17,0.007,18,0.458,19,0.859,28,0.216,30,1.184,32,0.274,51,0.037,52,0.087,55,2.14,61,0.883,78,0.004,79,0.004,107,1.569,114,2.889,115,1.841,121,0.797,124,0.656,125,2.781,127,1.235,128,1.927,129,3.363,130,2.584,131,2.185,132,3.488,135,2.282,139,3.48,140,1.325,144,3.363,145,4.133,298,3.116,313,2.257,314,1.66,357,4.405,358,4.368,383,2.998,410,1.96,452,2.702,577,2.003,578,2.853,579,4.109,582,5.736,583,5.736,585,4.356,586,4.356,587,2.094,602,4.204,603,3.999,609,4.356,610,2.941,613,2.747,615,4.069,616,2.941,618,2.464,619,2.395,620,2.395,622,4.069,623,4.069,624,4.069,625,4.069,626,4.069,627,2.941,638,4.356,640,4.356,642,3.65,643,1.617,644,2.338,645,2.586,646,2.734,647,2.998,648,2.354,649,1.579,650,1.542,652,1.617,654,2.024,655,2.395,656,3.216,657,2.941,662,2.941,663,2.354,664,5.188,667,5.188,1423,5.736,1449,2.941,1473,3.486,1633,3.948,1717,3.216,2006,2.257,2045,5.646,3028,2.747,3305,3.594,3306,7.01,3307,5.323,3308,3.594,3309,3.594,3310,3.594,3311,3.594,3312,3.594,3313,3.594,3314,3.594,3315,5.323,3316,3.594,3317,3.594,3318,3.594,3319,3.594,3320,3.594,3321,3.594,3322,3.594,3323,5.323,3324,3.594,3325,3.594,3326,3.594]],["title/classes/UserRoles.html",[52,0.114,512,2.232]],["body/classes/UserRoles.html",[3,0.05,4,0.043,5,0.05,7,0.156,14,0.603,17,0.007,28,0.216,32,0.337,44,1.633,45,2.324,46,1.846,47,2.263,51,0.05,52,0.115,78,0.004,79,0.004,114,3.077,115,1.785,121,1.061,124,0.804,125,2.877,127,1.295,128,1.984,129,3.582,130,3.393,131,2.264,132,3.13,135,1.72,136,1.948,139,3.696,140,1.763,144,3.582,145,2.324,226,2.101,314,1.852,318,4.077,452,2.426,512,3.087,577,2.455,578,3.341,579,4.289,602,3.17,603,4.142,606,4.259,618,3.279,619,2.936,620,2.936,642,3.877,643,2.152,644,2.866,645,4.055,649,2.101,650,2.052,652,2.152,655,3.756,738,2.388,1408,2.529,1618,4.185,2534,4.259,3327,4.783,3328,8.615,3329,4.783,3330,4.783,3331,4.783,3332,4.783,3333,4.783,3334,4.783,3335,4.783,3336,4.783,3337,4.783]],["title/interfaces/UsercreationAttrbs.html",[307,0.928,2008,3.089]],["body/interfaces/UsercreationAttrbs.html",[3,0.06,4,0.052,5,0.06,7,0.19,17,0.007,18,0.657,28,0.214,51,0.094,60,3.873,61,0.988,78,0.005,79,0.005,93,2.618,124,0.914,125,1.938,126,1.798,127,1.043,131,1.427,298,2.23,307,1.79,308,2.015,310,2.98,311,2.98,312,2.98,313,2.696,314,1.288,315,3.097,316,2.716,321,3.57,604,2.98,828,3.382,1631,3.507,2004,3.645,2005,3.979,2006,3.645,2007,3.645,2008,4.855,2009,3.645,2010,3.507]],["title/controllers/UsersController.html",[146,2.072,3338,3.86]],["body/controllers/UsersController.html",[3,0.038,4,0.033,5,0.038,7,0.121,8,0.792,9,1.102,11,1.102,14,0.513,16,1.055,17,0.007,18,0.513,19,0.962,22,2.75,23,2.637,24,3.395,25,2.916,26,3.359,28,0.197,29,1.922,30,1.036,32,0.371,37,0.51,40,1.48,51,0.038,52,0.089,55,1.482,61,0.778,73,1.209,78,0.004,79,0.004,94,1.745,106,1.204,107,1.374,110,1.702,125,2.527,127,1.29,128,1.687,135,2.086,140,1.36,146,1.621,148,1.583,150,2.15,153,5.269,160,5.783,163,5.379,164,5.137,169,5.708,170,6.867,171,5.122,175,4.149,176,3.02,186,2.15,187,3.279,188,2.416,189,2.53,190,2.416,191,2.317,192,2.662,193,5.187,194,2.078,195,2.229,196,3.286,197,5.122,198,5.122,199,2.662,200,2.229,201,2.416,202,2.416,207,2.662,208,3.02,211,2.15,212,2.317,213,2.229,214,2.317,215,1.66,216,2.53,217,2.15,218,2.53,219,2.53,220,2.53,221,4.289,222,2.416,223,2.416,224,2.416,225,2.078,227,4.442,229,2.078,230,2.229,231,2.229,232,3.057,233,2.229,234,2.15,235,2.416,236,2.229,237,2.821,239,3.286,240,2.821,245,4.645,246,3.89,247,4.833,248,2.416,249,4.414,250,5.122,251,2.416,261,3.286,262,4.442,263,4.442,272,3.626,285,2.317,314,0.819,483,2.71,495,1.48,604,3.885,660,2.012,680,2.416,690,3.916,1225,3.286,1247,5.269,1273,3.02,1275,3.286,1279,3.02,1283,2.821,1287,3.286,1290,7.045,1291,5.733,1297,3.286,1309,3.02,1391,5.427,1497,3.02,2010,2.229,2827,4.149,2842,3.286,3028,2.821,3236,5.122,3338,4.442,3339,3.69,3340,4.833,3341,5.733,3342,6.439,3343,3.286,3344,5.428,3345,5.428,3346,5.428,3347,3.69,3348,3.69,3349,3.69,3350,3.286,3351,3.69,3352,3.69,3353,3.69,3354,3.69,3355,3.69,3356,3.69,3357,3.69,3358,3.69,3359,3.69,3360,3.69,3361,3.02,3362,3.286,3363,3.286,3364,4.442,3365,3.02,3366,3.69,3367,3.69,3368,3.69,3369,3.69,3370,3.69,3371,3.69,3372,3.69,3373,3.69,3374,3.69,3375,3.69,3376,3.69,3377,3.69]],["title/modules/UsersModule.html",[475,1.739,518,2.422]],["body/modules/UsersModule.html",[3,0.041,4,0.036,5,0.041,8,0.58,14,0.287,16,0.59,17,0.007,18,0.287,19,0.538,28,0.093,30,0.58,32,0.385,37,0.548,39,1.593,44,1.433,45,1.929,46,1.62,47,1.879,51,0.041,52,0.096,53,1.186,78,0.004,79,0.004,115,1.186,135,1.51,136,1.71,148,2.457,272,4.572,279,2.399,280,2.401,281,2.039,285,2.494,298,2.2,339,4.427,371,2.494,386,2.494,475,2.111,476,3.028,477,1.879,478,2.782,483,4.525,484,2.94,485,1.982,486,1.982,488,2.94,489,3.75,490,2.494,491,3.596,492,4.616,494,4.616,495,1.593,496,4.914,497,3.596,498,2.494,500,2.1,501,2.858,502,2.237,503,3.035,504,3.249,505,3.028,506,2.399,507,2.399,508,2.6,509,2.6,511,1.558,512,2.709,513,2.1,514,3.028,515,2.399,516,2.401,517,2.1,518,4.765,524,2.722,525,3.035,526,3.035,527,2.1,528,2.039,531,3.337,532,2.722,533,2.641,534,2.237,535,2.709,536,2.166,537,2.577,538,2.1,539,2.709,540,2.1,541,2.577,542,2.166,543,2.782,544,2.166,545,2.027,546,1.665,548,2.039,549,2.1,550,2.1,551,2.1,552,2.1,553,2.1,554,2.166,555,3.035,556,3.035,559,3.035,560,3.035,562,2.6,563,4.397,564,3.228,566,3.774,567,4.13,572,4.13,1099,3.75,1101,3.459,1107,2.399,1113,3.249,1122,2.865,1139,4.13,1140,3.536,1141,4.13,1142,3.536,2012,5.935,2892,2.722,2895,3.536,3236,2.865,3281,3.536,3338,5.495,3361,3.249,3362,3.536,3364,3.249,3365,3.249,3378,3.536,3379,3.536,3380,3.971,3381,3.971,3382,3.971,3383,3.971,3384,3.971,3385,3.971,3386,3.971,3387,3.971,3388,5.726,3389,3.971,3390,3.971,3391,3.971]],["title/injectables/UsersService.html",[0,0.727,483,2.355]],["body/injectables/UsersService.html",[0,0.557,2,0.733,3,0.023,4,0.02,5,0.023,7,0.072,8,0.528,9,2.832,11,1.08,14,0.603,16,1.24,17,0.007,18,0.616,19,1.131,22,2.085,28,0.196,30,1.203,32,0.318,33,1.127,34,0.762,36,1.08,37,0.303,38,1.279,39,0.88,48,0.843,51,0.023,52,0.053,55,0.988,56,1.279,59,2.248,61,0.83,63,2.598,65,2.572,66,2.223,67,3.011,68,3.011,73,3.042,77,1.678,78,0.002,79,0.002,94,2.939,97,1.584,104,1.161,106,0.487,107,1.677,112,1.127,113,1.127,115,1.318,120,4.376,125,1.975,126,0.68,127,1.271,130,1.333,131,0.54,135,2.448,136,1.9,153,3.774,169,4.854,175,2.765,176,1.796,203,1.505,310,1.857,311,1.857,312,1.857,313,1.938,314,1.023,315,2.291,316,1.08,321,2.759,387,1.379,396,1.279,408,3.365,409,3.011,419,1.979,442,1.505,460,1.379,462,3.666,483,1.805,541,1.627,669,2.765,676,2.765,677,2.959,678,2.765,681,3.525,682,3.359,690,3.858,703,2.765,704,3.873,708,2.959,709,3.225,716,1.379,717,2.765,721,2.765,722,2.765,723,2.765,728,1.796,729,1.796,730,1.796,731,1.955,732,1.955,735,4.84,736,3.22,737,2.959,738,1.805,739,2.959,740,1.955,743,1.955,745,3.22,746,1.955,747,1.505,748,1.955,756,5.506,758,1.955,764,2.959,769,1.796,770,1.796,774,1.796,776,1.796,778,2.959,798,2.959,799,1.796,805,1.796,807,1.796,810,1.796,813,2.959,814,2.959,815,2.959,816,3.774,817,1.796,828,2.107,849,1.379,916,3.22,917,3.22,918,2.959,929,3.22,934,4.363,935,3.22,1247,4.376,1283,3.525,1391,4.088,1870,4.376,1885,1.678,2003,4.376,2004,3.996,2009,3.996,2010,1.326,3028,1.678,3236,3.858,3252,1.955,3253,1.955,3340,3.22,3341,4.107,3343,3.22,3350,1.955,3361,1.796,3363,1.955,3364,3.774,3365,1.796,3392,2.195,3393,3.617,3394,3.617,3395,3.617,3396,3.617,3397,3.617,3398,3.617,3399,2.195,3400,2.195,3401,3.617,3402,3.617,3403,2.195,3404,2.195,3405,3.617,3406,2.195,3407,3.617,3408,2.195,3409,7.503,3410,2.195,3411,2.195,3412,3.617,3413,2.195,3414,3.617,3415,2.195,3416,3.617,3417,2.195,3418,3.617,3419,2.195,3420,2.195,3421,3.617,3422,2.195,3423,2.195,3424,3.617,3425,2.195,3426,3.617,3427,2.195,3428,2.195,3429,2.195,3430,2.195,3431,2.195,3432,3.617,3433,2.195,3434,2.195,3435,2.195,3436,2.195,3437,3.617,3438,2.195,3439,2.195,3440,2.195,3441,4.612,3442,2.195,3443,2.195,3444,2.195,3445,2.195,3446,2.195,3447,2.195,3448,2.195,3449,2.195,3450,2.195,3451,2.195,3452,2.195,3453,2.195,3454,2.195,3455,3.617,3456,3.617,3457,2.195,3458,2.195,3459,2.195,3460,2.195,3461,2.195,3462,2.195,3463,2.195,3464,2.195,3465,3.617,3466,3.617,3467,2.195,3468,2.195,3469,2.195,3470,2.195,3471,2.195,3472,2.195,3473,2.195,3474,2.195,3475,2.195,3476,2.195,3477,2.195,3478,2.195,3479,3.617,3480,2.195]],["title/injectables/ValidateDto.html",[0,0.727,207,3.403]],["body/injectables/ValidateDto.html",[0,1.201,2,2.099,3,0.065,4,0.056,5,0.065,7,0.206,8,1.138,9,2.53,14,0.454,16,0.934,17,0.007,18,0.454,19,0.852,28,0.148,30,0.917,32,0.346,37,0.868,51,0.065,52,0.204,53,1.877,59,2.084,65,2.021,66,1.747,73,2.059,78,0.005,79,0.005,94,2.506,107,1.508,126,2.625,143,2.415,207,5.624,887,4.309,1838,4.896,1839,3.948,2259,5.144,2628,6.379,2632,6.379,2634,7.25,2652,6.934,2927,5.597,3481,6.286,3482,6.286,3483,6.286,3484,5.144,3485,6.286,3486,6.286,3487,6.286,3488,6.286,3489,5.597,3490,6.286,3491,6.286,3492,6.286,3493,6.286]],["title/interfaces/ValidateUser.html",[307,0.928,2009,2.962]],["body/interfaces/ValidateUser.html",[3,0.063,4,0.055,5,0.063,7,0.2,17,0.007,18,0.605,28,0.18,51,0.096,60,2.752,61,0.985,78,0.005,79,0.005,93,2.668,124,0.944,125,2.043,126,1.895,127,1.078,131,1.504,298,2.35,307,1.814,308,2.123,310,3.141,311,3.141,312,3.141,313,2.724,314,1.357,315,2.849,316,2.499,321,3.618,604,3.141,828,3.564,1631,3.696,2004,3.841,2005,4.193,2006,3.841,2007,3.841,2008,4.006,2009,4.813,2010,3.696]],["title/classes/ValidationException.html",[52,0.114,3484,3.86]],["body/classes/ValidationException.html",[3,0.072,4,0.063,5,0.072,7,0.229,11,2.087,14,0.601,16,1.039,17,0.007,18,0.505,19,0.948,24,3.568,32,0.273,34,2.427,37,0.965,51,0.072,52,0.169,78,0.006,79,0.006,121,1.551,124,1.025,577,3.129,849,5.574,3484,6.804,3489,7.904,3494,6.99,3495,8.315,3496,8.315,3497,6.99,3498,6.99,3499,6.99]],["title/classes/WatchedProducts.html",[52,0.114,1141,3.403]],["body/classes/WatchedProducts.html",[3,0.06,4,0.052,5,0.06,7,0.19,14,0.59,17,0.007,28,0.214,32,0.319,51,0.06,52,0.14,78,0.005,79,0.005,114,3.009,115,1.884,121,1.285,124,0.913,125,2.969,127,1.279,128,1.939,132,2.906,135,1.952,226,2.545,314,1.972,452,2.616,545,2.622,546,2.429,577,2.786,578,3.673,579,4.252,602,3.598,603,4.091,619,3.332,620,3.332,642,3.871,643,2.607,644,3.253,645,3.965,649,2.545,650,2.486,652,2.607,655,3.673,738,2.892,1141,5.342,1401,5.007,1402,3.064,1404,4.85,1408,3.064,2757,5.159,3500,5.793,3501,5.793,3502,5.793,3503,5.793]],["title/dependencies.html",[478,2.759,3504,3.497]],["body/dependencies.html",[17,0.007,37,0.763,39,2.215,40,2.879,52,0.173,78,0.005,79,0.005,98,2.92,140,2.035,143,2.122,187,3.336,225,3.11,282,3.336,371,3.468,395,3.336,478,2.683,528,2.836,649,3.154,650,2.369,717,4.221,906,3.011,1041,4.519,1042,4.519,1044,3.983,1089,4.221,1090,4.221,1111,4.917,1131,6.528,1133,4.221,1658,4.519,1683,4.221,1684,4.221,1839,3.468,1960,4.917,2065,4.519,2066,4.519,2637,4.917,2638,4.917,2639,4.519,2652,4.519,3209,4.917,3505,5.522,3506,5.522,3507,5.522,3508,5.522,3509,5.522,3510,7.18,3511,5.522,3512,5.522,3513,5.522,3514,7.978,3515,5.522,3516,7.978,3517,5.522,3518,5.522,3519,5.522,3520,5.522,3521,5.522,3522,5.522,3523,5.522,3524,7.18,3525,5.522,3526,5.522,3527,5.522,3528,5.522,3529,5.522,3530,5.522,3531,5.522,3532,5.522,3533,5.522,3534,5.522,3535,5.522,3536,5.522,3537,5.522,3538,5.522,3539,5.522,3540,5.522,3541,5.522,3542,5.522,3543,5.522,3544,5.522,3545,5.522,3546,5.522,3547,5.522,3548,5.522,3549,5.522,3550,5.522,3551,5.522,3552,4.917,3553,5.522,3554,5.522,3555,5.522,3556,5.522,3557,7.18,3558,5.522,3559,5.522,3560,5.522,3561,5.522,3562,5.522,3563,5.522,3564,5.522,3565,5.522,3566,5.522,3567,5.522,3568,5.522,3569,5.522,3570,5.522,3571,5.522,3572,5.522,3573,5.522,3574,5.522]],["title/interfaces/fileCreated.html",[307,0.928,1919,3.86]],["body/interfaces/fileCreated.html",[0,0.987,3,0.048,4,0.042,5,0.086,7,0.152,9,1.913,17,0.007,18,0.463,22,2.584,25,1.717,28,0.151,29,2.593,32,0.342,34,1.617,36,1.913,37,0.643,40,1.868,51,0.048,52,0.155,58,1.868,59,2.252,61,0.89,65,2.06,66,1.78,78,0.004,79,0.004,93,1.416,94,1.497,106,1.421,107,1.417,115,1.634,124,0.789,242,2.623,243,2.54,307,0.917,308,1.617,394,4.023,395,4.424,399,1.752,400,2.096,401,4.195,404,4.247,452,1.416,464,3.359,495,2.569,564,2.814,849,4.023,906,4.301,970,4.796,985,3.193,1112,5.598,1178,5.992,1184,3.56,1185,3.811,1186,3.56,1187,3.56,1188,3.56,1189,5.598,1190,3.56,1191,3.56,1192,3.56,1193,3.56,1194,3.56,1418,3.112,1651,3.193,1897,4.147,1899,4.147,1900,5.992,1901,3.811,1903,4.147,1906,5.992,1913,4.147,1915,7.406,1916,5.992,1917,3.811,1918,3.811,1919,5.242,1920,7.298,1921,4.147,1922,4.147,1923,4.147,1924,4.147,1925,4.147,1926,4.147,1927,5.992,1928,4.147,1929,4.147,1930,3.56,1931,4.147,1932,4.147,1933,4.147,1934,4.147,1935,3.811,1936,3.811,1937,3.811,1938,5.242,1939,4.147,1940,3.811,1941,3.811,1942,4.147,1943,5.704,1944,5.242,1945,3.811,1946,3.811,1947,3.811,1948,3.811,1949,3.811]],["title/miscellaneous/functions.html",[3575,3.002,3576,5.058]],["body/miscellaneous/functions.html",[7,0.224,16,1.222,17,0.006,18,0.594,19,1.114,28,0.193,30,1,61,0.808,78,0.006,79,0.006,94,2.204,874,6.725,1645,5.929,2257,6.104,2264,8.602,2266,6.104,2271,6.104,3575,5.24,3576,6.104,3577,8.802,3578,6.855,3579,6.855,3580,8.802,3581,6.855,3582,8.802,3583,6.855,3584,8.218,3585,6.855,3586,6.855,3587,6.855,3588,6.855,3589,6.855,3590,6.855,3591,6.855]],["title/index.html",[7,0.128,171,2.833,989,3.213]],["body/index.html",[4,0.057,17,0.007,78,0.005,79,0.005,131,1.561,403,4.157,650,2.724,998,5.195,1055,5.653,1778,4.853,2243,5.653,3140,8.285,3552,7.579,3592,6.348,3593,6.348,3594,7.843,3595,6.348,3596,6.348,3597,6.348,3598,6.348,3599,6.348,3600,6.348,3601,6.348,3602,6.348,3603,9.43,3604,6.348,3605,6.348,3606,6.348,3607,6.348,3608,7.843,3609,6.348,3610,6.348,3611,6.348,3612,7.843,3613,7.843,3614,6.348,3615,6.348,3616,6.348,3617,6.348,3618,7.843,3619,7.843,3620,6.348,3621,6.348,3622,6.348,3623,6.348,3624,6.348,3625,5.653,3626,6.348,3627,6.348,3628,6.348,3629,6.348,3630,6.348,3631,6.348,3632,6.348,3633,6.348,3634,6.348,3635,5.653,3636,6.348,3637,6.348,3638,6.348,3639,6.348,3640,6.348,3641,5.653]],["title/modules.html",[477,3.058]],["body/modules.html",[17,0.005,78,0.005,79,0.005,476,3.511,477,3.142,501,3.315,505,3.511,514,3.511,518,3.41,531,3.869,1093,5.076,1097,4.17,1098,4.012,1099,4.348,1100,4.17,1101,4.012,1102,4.79,1103,4.79,3625,8.768,3642,9.847,3643,9.847,3644,9.875,3645,6.64,3646,6.64]],["title/overview.html",[3647,5.755]],["body/overview.html",[2,1.3,17,0.007,78,0.004,79,0.004,82,2.193,87,4.402,121,0.864,148,1.67,270,5.538,272,4.89,308,1.352,339,4.645,340,5.328,474,4.072,476,4.996,477,1.842,478,2.742,479,3.467,480,3.467,481,3.467,482,5.059,483,4.459,484,2.899,485,1.944,486,1.944,501,4.695,505,4.996,514,4.858,518,4.68,531,5.059,682,5.223,962,4.993,1060,3.467,1079,4.79,1093,7.41,1094,3.467,1095,3.467,1096,3.467,1097,4.855,1098,4.671,1099,5.913,1100,4.855,1101,5.246,1102,6.263,1103,4.79,1342,3.467,1343,3.467,1344,3.467,1345,5.775,1413,5.076,1450,3.467,1451,3.467,1521,5.063,1541,3.467,1542,3.467,1649,3.467,1650,3.467,1651,4.993,2012,5.579,2059,3.467,2061,3.467,2332,3.467,2333,3.467,2334,5.076,2514,3.467,2515,3.467,2517,3.467,2821,5.253,2881,3.467,2882,3.467,2965,4.79,2973,3.467,2974,3.467,3063,3.467,3064,3.467,3065,3.467,3378,3.467,3379,3.467,3647,3.467,3648,3.893,3649,3.893,3650,3.893]],["title/properties.html",[124,0.7,3504,3.497]],["body/properties.html",[17,0.007,78,0.006,79,0.006,124,0.929,131,1.854,2245,6.711,3635,6.711,3641,6.711,3651,7.537,3652,7.537,3653,7.537,3654,7.537]],["title/miscellaneous/typealiases.html",[3575,3.002,3655,5.68]],["body/miscellaneous/typealiases.html",[7,0.245,17,0.006,28,0.204,78,0.006,79,0.006,244,4.371,912,4.711,963,6.138,968,7.092,2627,6.679,2630,7.717,3575,5.734,3656,7.501,3657,7.501,3658,7.501]]],"invertedIndex":[["",{"_index":17,"title":{},"body":{"injectables/ActivateMiddleware.html":{},"guards/AddContentGuard.html":{},"classes/AddRoleDto.html":{},"controllers/AdminController.html":{},"guards/AdminGuard.html":{},"interfaces/AdminInterface.html":{},"injectables/AdminJwtRefreshService.html":{},"modules/AdminModule.html":{},"classes/AdminRefreshToken.html":{},"interfaces/AdminRefreshTokenCreationAttrbs.html":{},"injectables/AdminService.html":{},"injectables/AdminUserMiddleware.html":{},"interfaces/AdmincreationAttrbs.html":{},"classes/AllExceptionsFilter.html":{},"classes/ApiError.html":{},"classes/ApiErrorExceptionFilter.html":{},"classes/ApiException.html":{},"classes/ApiExceptionFilter.html":{},"injectables/AppClusterService.html":{},"controllers/AppController.html":{},"injectables/AppListener.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"guards/AuthFerfershGuard.html":{},"injectables/AuthMiddleware.html":{},"modules/AuthModule.html":{},"interfaces/AuthUser.html":{},"classes/BadRequestError.html":{},"classes/BanUserDto.html":{},"classes/BookmarksProducts.html":{},"controllers/CardController.html":{},"injectables/CardService.html":{},"classes/Cart.html":{},"modules/CartModule.html":{},"classes/CartProduct.html":{},"classes/CartProduct-1.html":{},"controllers/CategoriesController.html":{},"modules/CategoriesModule.html":{},"injectables/CategoriesService.html":{},"classes/Category.html":{},"interfaces/CategoryCreationAtrb.html":{},"classes/ChangeDto.html":{},"interfaces/CodeDto.html":{},"modules/CoreModule.html":{},"injectables/CorsMiddleware.html":{},"classes/CreateAccessTokenDto.html":{},"classes/CreateAdminDto.html":{},"classes/CreateAdminRefreshTokenDto.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateOwnerDto.html":{},"classes/CreateOwnerRefreshTokenDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateReviewDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserRefreshTokenDto.html":{},"guards/EditContentGuard.html":{},"guards/EditWebsiteGuard.html":{},"injectables/FilesService.html":{},"classes/GarbageCollectingProcessor.html":{},"injectables/GlobalInterceptor.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/ITelegramModuleAsyncOptions.html":{},"interfaces/ITelegramOptions.html":{},"injectables/InitializeEmailMiddleware.html":{},"interfaces/InitializeUser.html":{},"injectables/InitializeUserMiddleware.html":{},"guards/JwtAuthGuard.html":{},"classes/JwtRefreshTokenDeletedEvent.html":{},"injectables/LocationMiddleware.html":{},"classes/LoginDto.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"classes/MatchConstraint.html":{},"interfaces/Msg.html":{},"classes/Nested.html":{},"classes/Nested-1.html":{},"classes/NotFoundError.html":{},"classes/Order.html":{},"classes/OrderProduct.html":{},"controllers/OrdersController.html":{},"modules/OrdersModule.html":{},"injectables/OrdersService.html":{},"classes/Owner.html":{},"guards/OwnerAdminGuard.html":{},"interfaces/OwnerCreationAttrbs.html":{},"injectables/OwnerJwtRefreshService.html":{},"modules/OwnerModule.html":{},"classes/OwnerRefreshToken.html":{},"interfaces/OwnerRefreshTokenCreationAttrbs.html":{},"injectables/OwnerService.html":{},"classes/ParseFormDataJsonPipe.html":{},"injectables/ParseJsonPipe.html":{},"interfaces/Payload.html":{},"classes/Product.html":{},"classes/Product-1.html":{},"classes/ProductCategories.html":{},"controllers/ProductController.html":{},"interfaces/ProductCreationAttrs.html":{},"injectables/ProductMiddleware.html":{},"modules/ProductModule.html":{},"classes/ProductReviews.html":{},"guards/RefreshAuthGuard.html":{},"interfaces/RequestHeaders.html":{},"classes/RequestValidator.html":{},"classes/ResetDto.html":{},"interfaces/ReturnedAdmin.html":{},"interfaces/ReturnedCategory.html":{},"interfaces/ReturnedOwner.html":{},"interfaces/ReturnedProduct.html":{},"interfaces/ReturnedProducts.html":{},"interfaces/ReturnedReview.html":{},"interfaces/ReturnedUser.html":{},"classes/Review.html":{},"interfaces/ReviewCreationAtrb.html":{},"controllers/ReviewsController.html":{},"modules/ReviewsModule.html":{},"injectables/ReviewsService.html":{},"classes/Role.html":{},"interfaces/RolecreationAttrbs.html":{},"controllers/RolesController.html":{},"guards/RolesGuard.html":{},"modules/RolesModule.html":{},"injectables/RolesService.html":{},"classes/SignupDto.html":{},"injectables/TasksService.html":{},"modules/TelegramModule.html":{},"injectables/TelegramService.html":{},"injectables/ThrottlerBehindProxyGuard.html":{},"interfaces/Tokens.html":{},"classes/UpdateCategoryDto.html":{},"classes/UpdateProductDto.html":{},"classes/UpdateUserDto.html":{},"injectables/UserAdminMiddleware.html":{},"guards/UserGuard.html":{},"interfaces/UserInterface.html":{},"injectables/UserJwtRefreshTokenService.html":{},"injectables/UserMiddleware.html":{},"injectables/UserMiddleware-1.html":{},"interfaces/UserRefreshCreationAttrbs.html":{},"classes/UserRefreshToken.html":{},"classes/UserRoles.html":{},"interfaces/UsercreationAttrbs.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"injectables/ValidateDto.html":{},"interfaces/ValidateUser.html":{},"classes/ValidationException.html":{},"classes/WatchedProducts.html":{},"dependencies.html":{},"interfaces/fileCreated.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{}}}],["0",{"_index":419,"title":{},"body":{"injectables/AdminJwtRefreshService.html":{},"injectables/AdminService.html":{},"classes/ApiErrorExceptionFilter.html":{},"classes/ApiExceptionFilter.html":{},"injectables/AppClusterService.html":{},"injectables/CategoriesService.html":{},"classes/CreateAccessTokenDto.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserRefreshTokenDto.html":{},"guards/JwtAuthGuard.html":{},"classes/LoginDto.html":{},"interfaces/Msg.html":{},"injectables/OwnerJwtRefreshService.html":{},"injectables/OwnerService.html":{},"guards/RefreshAuthGuard.html":{},"classes/RequestValidator.html":{},"classes/ResetDto.html":{},"guards/RolesGuard.html":{},"classes/SignupDto.html":{},"injectables/UserJwtRefreshTokenService.html":{},"injectables/UsersService.html":{}}}],["0.1.13",{"_index":3562,"title":{},"body":{"dependencies.html":{}}}],["0.14.0",{"_index":3531,"title":{},"body":{"dependencies.html":{}}}],["0.5.1",{"_index":3530,"title":{},"body":{"dependencies.html":{}}}],["0.6.2",{"_index":3509,"title":{},"body":{"dependencies.html":{}}}],["06614568945",{"_index":2538,"title":{},"body":{"classes/OwnerRefreshToken.html":{}}}],["0px!important",{"_index":2197,"title":{},"body":{"injectables/MailService.html":{}}}],["1",{"_index":130,"title":{"classes/CartProduct-1.html":{},"classes/Nested-1.html":{},"classes/Product-1.html":{},"injectables/UserMiddleware-1.html":{}},"body":{"classes/AddRoleDto.html":{},"classes/AdminRefreshToken.html":{},"injectables/AdminService.html":{},"classes/ApiErrorExceptionFilter.html":{},"classes/ApiExceptionFilter.html":{},"injectables/AppClusterService.html":{},"modules/AppModule.html":{},"classes/BanUserDto.html":{},"classes/CreateAccessTokenDto.html":{},"classes/CreateAdminRefreshTokenDto.html":{},"classes/CreateOwnerRefreshTokenDto.html":{},"classes/CreateUserRefreshTokenDto.html":{},"guards/JwtAuthGuard.html":{},"injectables/MailService.html":{},"interfaces/Msg.html":{},"classes/Owner.html":{},"classes/OwnerRefreshToken.html":{},"controllers/ProductController.html":{},"guards/RefreshAuthGuard.html":{},"classes/Role.html":{},"guards/RolesGuard.html":{},"classes/UserRefreshToken.html":{},"classes/UserRoles.html":{},"injectables/UsersService.html":{}}}],["1.0.1",{"_index":3508,"title":{},"body":{"dependencies.html":{}}}],["1.0.2",{"_index":3541,"title":{},"body":{"dependencies.html":{}}}],["1.0.3",{"_index":3551,"title":{},"body":{"dependencies.html":{}}}],["1.1.1",{"_index":3652,"title":{},"body":{"properties.html":{}}}],["1.1.8",{"_index":3547,"title":{},"body":{"dependencies.html":{}}}],["1.20.1",{"_index":3525,"title":{},"body":{"dependencies.html":{}}}],["1.3.1",{"_index":3512,"title":{},"body":{"dependencies.html":{}}}],["1.4.6",{"_index":3535,"title":{},"body":{"dependencies.html":{}}}],["1.4.7",{"_index":3542,"title":{},"body":{"dependencies.html":{}}}],["1.7.4",{"_index":3533,"title":{},"body":{"dependencies.html":{}}}],["1.8.1",{"_index":3506,"title":{},"body":{"dependencies.html":{}}}],["10",{"_index":474,"title":{},"body":{"injectables/AdminJwtRefreshService.html":{},"modules/CoreModule.html":{},"injectables/OwnerJwtRefreshService.html":{},"injectables/OwnerService.html":{},"overview.html":{}}}],["10.0.1",{"_index":3513,"title":{},"body":{"dependencies.html":{}}}],["100",{"_index":1150,"title":{},"body":{"modules/AppModule.html":{},"injectables/MailService.html":{}}}],["1000",{"_index":1011,"title":{},"body":{"injectables/AppClusterService.html":{},"controllers/AppController.html":{},"interfaces/Msg.html":{}}}],["10000",{"_index":1157,"title":{},"body":{"modules/AppModule.html":{}}}],["12282810",{"_index":1198,"title":{},"body":{"modules/AppModule.html":{}}}],["14",{"_index":3648,"title":{},"body":{"overview.html":{}}}],["15000",{"_index":1169,"title":{},"body":{"modules/AppModule.html":{}}}],["15px",{"_index":2152,"title":{},"body":{"injectables/MailService.html":{}}}],["16",{"_index":436,"title":{},"body":{"injectables/AdminJwtRefreshService.html":{},"controllers/AppController.html":{},"injectables/OwnerJwtRefreshService.html":{}}}],["172800000",{"_index":561,"title":{},"body":{"modules/AdminModule.html":{}}}],["2",{"_index":2110,"title":{},"body":{"injectables/MailService.html":{}}}],["2,20",{"_index":1761,"title":{},"body":{"classes/CreateAdminDto.html":{},"classes/CreateOwnerDto.html":{}}}],["2,30",{"_index":1792,"title":{},"body":{"classes/CreateCategoryDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUserDto.html":{},"classes/SignupDto.html":{},"classes/UpdateCategoryDto.html":{},"classes/UpdateUserDto.html":{}}}],["2.1.0",{"_index":3518,"title":{},"body":{"dependencies.html":{}}}],["2.1.5",{"_index":3567,"title":{},"body":{"dependencies.html":{}}}],["2.2.0",{"_index":3511,"title":{},"body":{"dependencies.html":{}}}],["2.3.4",{"_index":3560,"title":{},"body":{"dependencies.html":{}}}],["2.5.0",{"_index":3570,"title":{},"body":{"dependencies.html":{}}}],["2.8.5",{"_index":3537,"title":{},"body":{"dependencies.html":{}}}],["20",{"_index":2855,"title":{},"body":{"controllers/ProductController.html":{}}}],["200",{"_index":160,"title":{},"body":{"controllers/AdminController.html":{},"controllers/AuthController.html":{},"controllers/RolesController.html":{},"controllers/UsersController.html":{}}}],["2000",{"_index":1023,"title":{},"body":{"injectables/AppClusterService.html":{},"interfaces/Msg.html":{}}}],["200})@roles('owner')@useguards(jwtauthguard",{"_index":3347,"title":{},"body":{"controllers/UsersController.html":{}}}],["200})@usefilters(apiexceptionfilter)@throttle(40",{"_index":1244,"title":{},"body":{"controllers/AuthController.html":{}}}],["201",{"_index":1284,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CategoriesController.html":{}}}],["201})@throttle(45",{"_index":1257,"title":{},"body":{"controllers/AuthController.html":{}}}],["201})@throttle(50",{"_index":1264,"title":{},"body":{"controllers/AuthController.html":{}}}],["202",{"_index":182,"title":{},"body":{"controllers/AdminController.html":{},"controllers/AuthController.html":{}}}],["202})@throttle(40",{"_index":1239,"title":{},"body":{"controllers/AuthController.html":{}}}],["202})@throttle(70",{"_index":1233,"title":{},"body":{"controllers/AuthController.html":{}}}],["204",{"_index":1311,"title":{},"body":{"controllers/AuthController.html":{}}}],["204})@throttle(70",{"_index":1226,"title":{},"body":{"controllers/AuthController.html":{}}}],["2345265646",{"_index":3091,"title":{},"body":{"classes/SignupDto.html":{}}}],["24",{"_index":1061,"title":{},"body":{"controllers/AppController.html":{}}}],["251912345678",{"_index":629,"title":{},"body":{"classes/AdminRefreshToken.html":{},"classes/CreateAdminDto.html":{},"classes/CreateOwnerDto.html":{},"classes/Owner.html":{}}}],["256",{"_index":467,"title":{},"body":{"injectables/AdminJwtRefreshService.html":{},"controllers/AppController.html":{},"injectables/OwnerJwtRefreshService.html":{}}}],["25px",{"_index":2151,"title":{},"body":{"injectables/MailService.html":{}}}],["25px!important",{"_index":2193,"title":{},"body":{"injectables/MailService.html":{}}}],["25px!important;}@media",{"_index":2155,"title":{},"body":{"injectables/MailService.html":{}}}],["25px!important;}[data",{"_index":2153,"title":{},"body":{"injectables/MailService.html":{}}}],["2b0d7b3dcb6d",{"_index":626,"title":{},"body":{"classes/AdminRefreshToken.html":{},"classes/CreateAccessTokenDto.html":{},"classes/OwnerRefreshToken.html":{},"classes/UserRefreshToken.html":{}}}],["3.0.0",{"_index":3519,"title":{},"body":{"dependencies.html":{}}}],["3.0.2",{"_index":3564,"title":{},"body":{"dependencies.html":{}}}],["3.1.0",{"_index":3521,"title":{},"body":{"dependencies.html":{}}}],["3.4.0",{"_index":3554,"title":{},"body":{"dependencies.html":{}}}],["3.5.0",{"_index":3505,"title":{},"body":{"dependencies.html":{}}}],["30",{"_index":1060,"title":{},"body":{"controllers/AppController.html":{},"overview.html":{}}}],["30000",{"_index":1167,"title":{},"body":{"modules/AppModule.html":{}}}],["32",{"_index":463,"title":{},"body":{"injectables/AdminJwtRefreshService.html":{},"controllers/AppController.html":{},"injectables/OwnerJwtRefreshService.html":{}}}],["34",{"_index":3649,"title":{},"body":{"overview.html":{}}}],["3600000",{"_index":442,"title":{},"body":{"injectables/AdminJwtRefreshService.html":{},"injectables/AdminService.html":{},"modules/AuthModule.html":{},"injectables/OwnerJwtRefreshService.html":{},"injectables/OwnerService.html":{},"injectables/UsersService.html":{}}}],["381056733",{"_index":1877,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/SignupDto.html":{}}}],["3b7d",{"_index":623,"title":{},"body":{"classes/AdminRefreshToken.html":{},"classes/CreateAccessTokenDto.html":{},"classes/OwnerRefreshToken.html":{},"classes/UserRefreshToken.html":{}}}],["4.10.2",{"_index":3526,"title":{},"body":{"dependencies.html":{}}}],["4.11.2",{"_index":3574,"title":{},"body":{"dependencies.html":{}}}],["4.5.0",{"_index":3573,"title":{},"body":{"dependencies.html":{}}}],["400",{"_index":1291,"title":{},"body":{"controllers/AuthController.html":{},"controllers/UsersController.html":{}}}],["400)@apioperation({summary",{"_index":3344,"title":{},"body":{"controllers/UsersController.html":{}}}],["400)@httpcode(200)@post('login",{"_index":1245,"title":{},"body":{"controllers/AuthController.html":{}}}],["400)@post('code')@httpcode(202",{"_index":1240,"title":{},"body":{"controllers/AuthController.html":{}}}],["400)@roles('user')@useguards(jwtauthguard",{"_index":3358,"title":{},"body":{"controllers/UsersController.html":{}}}],["400)@useguards(jwtauthguard)@httpcode(202)@post('logout",{"_index":1250,"title":{},"body":{"controllers/AuthController.html":{}}}],["400)@useguards(refreshauthguard)@httpcode(202)@patch('refresh",{"_index":1254,"title":{},"body":{"controllers/AuthController.html":{}}}],["450",{"_index":1305,"title":{},"body":{"controllers/AuthController.html":{}}}],["450)@patch('reset')@httpcode(201",{"_index":1258,"title":{},"body":{"controllers/AuthController.html":{}}}],["465",{"_index":2071,"title":{},"body":{"modules/MailModule.html":{}}}],["46756868",{"_index":2938,"title":{},"body":{"classes/ResetDto.html":{}}}],["4bad",{"_index":624,"title":{},"body":{"classes/AdminRefreshToken.html":{},"classes/CreateAccessTokenDto.html":{},"classes/OwnerRefreshToken.html":{},"classes/UserRefreshToken.html":{}}}],["5",{"_index":1155,"title":{},"body":{"modules/AppModule.html":{}}}],["5.1.0",{"_index":3523,"title":{},"body":{"dependencies.html":{}}}],["5.1.5",{"_index":3529,"title":{},"body":{"dependencies.html":{}}}],["5.2.5",{"_index":3546,"title":{},"body":{"dependencies.html":{}}}],["500",{"_index":898,"title":{},"body":{"classes/ApiErrorExceptionFilter.html":{},"classes/ApiExceptionFilter.html":{}}}],["5000",{"_index":1173,"title":{},"body":{"modules/AppModule.html":{}}}],["56733423",{"_index":2366,"title":{},"body":{"classes/Owner.html":{}}}],["57",{"_index":3650,"title":{},"body":{"overview.html":{}}}],["6.0.0",{"_index":3544,"title":{},"body":{"dependencies.html":{}}}],["6.1.4",{"_index":3520,"title":{},"body":{"dependencies.html":{}}}],["6.28.0",{"_index":3566,"title":{},"body":{"dependencies.html":{}}}],["6.8.0",{"_index":3556,"title":{},"body":{"dependencies.html":{}}}],["60",{"_index":1062,"title":{},"body":{"controllers/AppController.html":{}}}],["600",{"_index":1152,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{}}}],["600)@post('signup')@httpcode(201",{"_index":1265,"title":{},"body":{"controllers/AuthController.html":{}}}],["6000",{"_index":1149,"title":{},"body":{"modules/AppModule.html":{}}}],["604800000",{"_index":3387,"title":{},"body":{"modules/UsersModule.html":{}}}],["7.0",{"_index":592,"title":{},"body":{"classes/AdminRefreshToken.html":{},"classes/CreateAdminRefreshTokenDto.html":{},"classes/CreateOwnerDto.html":{},"classes/CreateOwnerRefreshTokenDto.html":{},"classes/Owner.html":{},"classes/OwnerRefreshToken.html":{},"injectables/UserJwtRefreshTokenService.html":{}}}],["7.0.3",{"_index":3540,"title":{},"body":{"dependencies.html":{}}}],["7.5.7",{"_index":3565,"title":{},"body":{"dependencies.html":{}}}],["700",{"_index":248,"title":{},"body":{"controllers/AdminController.html":{},"controllers/AuthController.html":{},"controllers/CategoriesController.html":{},"controllers/ProductController.html":{},"controllers/ReviewsController.html":{},"controllers/RolesController.html":{},"controllers/UsersController.html":{}}}],["700)@apioperation({summary",{"_index":1497,"title":{},"body":{"controllers/CategoriesController.html":{},"controllers/RolesController.html":{},"controllers/UsersController.html":{}}}],["700)@delete('delete_image')@roles('owner",{"_index":2785,"title":{},"body":{"controllers/ProductController.html":{}}}],["700)@delete('delete_product/:productid')@roles('owner",{"_index":2789,"title":{},"body":{"controllers/ProductController.html":{}}}],["700)@delete('delete_review')@roles('owner",{"_index":2961,"title":{},"body":{"controllers/ReviewsController.html":{}}}],["700)@get",{"_index":2803,"title":{},"body":{"controllers/ProductController.html":{}}}],["700)@get('/:productid",{"_index":2800,"title":{},"body":{"controllers/ProductController.html":{}}}],["700)@get('activate/:link')@httpcode(204",{"_index":1227,"title":{},"body":{"controllers/AuthController.html":{}}}],["700)@get('filter",{"_index":2794,"title":{},"body":{"controllers/ProductController.html":{}}}],["700)@get('get",{"_index":2807,"title":{},"body":{"controllers/ProductController.html":{}}}],["700)@httpcode(200)@roles('owner",{"_index":1505,"title":{},"body":{"controllers/CategoriesController.html":{}}}],["700)@patch('change')@useguards(jwtauthguard",{"_index":1234,"title":{},"body":{"controllers/AuthController.html":{}}}],["700)@patch('update_product/:productid')@roles('owner",{"_index":2813,"title":{},"body":{"controllers/ProductController.html":{}}}],["700)@put('create_product')@roles('owner",{"_index":2779,"title":{},"body":{"controllers/ProductController.html":{}}}],["700)@put('create_review",{"_index":2958,"title":{},"body":{"controllers/ReviewsController.html":{}}}],["700)@roles('owner')@useguards(jwtauthguard",{"_index":162,"title":{},"body":{"controllers/AdminController.html":{}}}],["700)@roles('user')@useguards(jwtauthguard",{"_index":2772,"title":{},"body":{"controllers/ProductController.html":{}}}],["7000",{"_index":1529,"title":{},"body":{"controllers/CategoriesController.html":{}}}],["7000)@cachettl(200)@get('get_categoties",{"_index":1510,"title":{},"body":{"controllers/CategoriesController.html":{}}}],["8.8.0",{"_index":3558,"title":{},"body":{"dependencies.html":{}}}],["86400000",{"_index":615,"title":{},"body":{"classes/AdminRefreshToken.html":{},"modules/OwnerModule.html":{},"classes/OwnerRefreshToken.html":{},"classes/UserRefreshToken.html":{}}}],["9",{"_index":1790,"title":{},"body":{"classes/CreateCategoryDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateReviewDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUserDto.html":{},"classes/Nested.html":{},"classes/Nested-1.html":{},"classes/SignupDto.html":{},"classes/UpdateCategoryDto.html":{},"classes/UpdateProductDto.html":{},"classes/UpdateUserDto.html":{}}}],["9.0.0",{"_index":3514,"title":{},"body":{"dependencies.html":{}}}],["9.1.6",{"_index":3510,"title":{},"body":{"dependencies.html":{}}}],["9.2.1",{"_index":3516,"title":{},"body":{"dependencies.html":{}}}],["96",{"_index":2116,"title":{},"body":{"injectables/MailService.html":{}}}],["9]+@[a",{"_index":1752,"title":{},"body":{"classes/CreateAdminDto.html":{},"classes/CreateAdminRefreshTokenDto.html":{},"classes/CreateOwnerDto.html":{},"classes/CreateOwnerRefreshTokenDto.html":{}}}],["9]+\\.)+[a",{"_index":1722,"title":{},"body":{"classes/CreateAccessTokenDto.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserRefreshTokenDto.html":{},"classes/LoginDto.html":{},"classes/ResetDto.html":{},"classes/SignupDto.html":{}}}],["9]{1,3}\\.[0",{"_index":1719,"title":{},"body":{"classes/CreateAccessTokenDto.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserRefreshTokenDto.html":{},"classes/LoginDto.html":{},"classes/ResetDto.html":{},"classes/SignupDto.html":{}}}],["9]{1,3}])|(([a",{"_index":1720,"title":{},"body":{"classes/CreateAccessTokenDto.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserRefreshTokenDto.html":{},"classes/LoginDto.html":{},"classes/ResetDto.html":{},"classes/SignupDto.html":{}}}],["9]{3",{"_index":1768,"title":{},"body":{"classes/CreateAdminDto.html":{},"classes/CreateOwnerDto.html":{},"classes/CreateUserDto.html":{},"classes/SignupDto.html":{}}}],["9]{4,6",{"_index":1770,"title":{},"body":{"classes/CreateAdminDto.html":{},"classes/CreateOwnerDto.html":{},"classes/CreateUserDto.html":{},"classes/SignupDto.html":{}}}],["9_",{"_index":1760,"title":{},"body":{"classes/CreateAdminDto.html":{},"classes/CreateOwnerDto.html":{}}}],["9b1deb4d",{"_index":622,"title":{},"body":{"classes/AdminRefreshToken.html":{},"classes/CreateAccessTokenDto.html":{},"classes/OwnerRefreshToken.html":{},"classes/UserRefreshToken.html":{}}}],["9bdd",{"_index":625,"title":{},"body":{"classes/AdminRefreshToken.html":{},"classes/CreateAccessTokenDto.html":{},"classes/OwnerRefreshToken.html":{},"classes/UserRefreshToken.html":{}}}],["_",{"_index":1791,"title":{},"body":{"classes/CreateCategoryDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateReviewDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUserDto.html":{},"classes/Nested.html":{},"classes/Nested-1.html":{},"classes/ParseFormDataJsonPipe.html":{},"classes/SignupDto.html":{},"classes/UpdateCategoryDto.html":{},"classes/UpdateProductDto.html":{},"classes/UpdateUserDto.html":{}}}],["_.merge(originproperties",{"_index":2646,"title":{},"body":{"classes/ParseFormDataJsonPipe.html":{}}}],["_.pick(serializedvalue",{"_index":2647,"title":{},"body":{"classes/ParseFormDataJsonPipe.html":{}}}],["__dirname",{"_index":2861,"title":{},"body":{"controllers/ProductController.html":{}}}],["_id",{"_index":1049,"title":{},"body":{"controllers/AppController.html":{}}}],["_metadata",{"_index":2633,"title":{},"body":{"classes/ParseFormDataJsonPipe.html":{}}}],["a.es",{"_index":2191,"title":{},"body":{"injectables/MailService.html":{}}}],["accept",{"_index":1685,"title":{},"body":{"injectables/CorsMiddleware.html":{},"interfaces/RequestHeaders.html":{}}}],["acceptfile",{"_index":1941,"title":{},"body":{"injectables/FilesService.html":{},"controllers/ProductController.html":{},"interfaces/fileCreated.html":{}}}],["access",{"_index":1692,"title":{},"body":{"injectables/CorsMiddleware.html":{},"interfaces/RequestHeaders.html":{}}}],["access_denied",{"_index":286,"title":{},"body":{"guards/AdminGuard.html":{},"classes/ApiException.html":{},"guards/OwnerAdminGuard.html":{},"injectables/OwnerService.html":{},"guards/RolesGuard.html":{},"guards/UserGuard.html":{}}}],["access_token_not_provided",{"_index":2912,"title":{},"body":{"guards/RefreshAuthGuard.html":{}}}],["accesstoken",{"_index":1378,"title":{},"body":{"interfaces/AuthUser.html":{},"interfaces/CodeDto.html":{},"guards/JwtAuthGuard.html":{},"interfaces/Payload.html":{},"guards/RefreshAuthGuard.html":{},"interfaces/ReturnedAdmin.html":{},"interfaces/ReturnedOwner.html":{},"interfaces/ReturnedUser.html":{},"interfaces/Tokens.html":{}}}],["account",{"_index":2105,"title":{},"body":{"injectables/MailService.html":{}}}],["activate",{"_index":1218,"title":{},"body":{"controllers/AuthController.html":{},"injectables/MailService.html":{}}}],["activate(activationlink",{"_index":1223,"title":{},"body":{"controllers/AuthController.html":{}}}],["activated",{"_index":1737,"title":{},"body":{"classes/CreateAccessTokenDto.html":{},"classes/CreateAdminRefreshTokenDto.html":{},"classes/CreateOwnerRefreshTokenDto.html":{},"classes/CreateUserRefreshTokenDto.html":{},"classes/Owner.html":{}}}],["activated'})@column({type",{"_index":2376,"title":{},"body":{"classes/Owner.html":{}}}],["activated'})@isboolean",{"_index":1726,"title":{},"body":{"classes/CreateAccessTokenDto.html":{},"classes/CreateAdminRefreshTokenDto.html":{},"classes/CreateOwnerRefreshTokenDto.html":{},"classes/CreateUserRefreshTokenDto.html":{}}}],["activatemiddleware",{"_index":1,"title":{"injectables/ActivateMiddleware.html":{}},"body":{"injectables/ActivateMiddleware.html":{},"modules/AuthModule.html":{}}}],["activating",{"_index":1224,"title":{},"body":{"controllers/AuthController.html":{}}}],["activation",{"_index":1730,"title":{},"body":{"classes/CreateAccessTokenDto.html":{},"classes/CreateAdminDto.html":{},"classes/CreateOwnerDto.html":{},"injectables/MailService.html":{}}}],["activationcode",{"_index":2342,"title":{},"body":{"classes/Owner.html":{}}}],["activationcode'})@isint()@column({type",{"_index":2367,"title":{},"body":{"classes/Owner.html":{}}}],["activationlink",{"_index":60,"title":{},"body":{"injectables/ActivateMiddleware.html":{},"interfaces/AdminInterface.html":{},"interfaces/AdminRefreshTokenCreationAttrbs.html":{},"injectables/AdminService.html":{},"interfaces/AdmincreationAttrbs.html":{},"controllers/AuthController.html":{},"guards/AuthFerfershGuard.html":{},"classes/CreateAdminDto.html":{},"classes/CreateOwnerDto.html":{},"interfaces/InitializeUser.html":{},"classes/Owner.html":{},"interfaces/OwnerCreationAttrbs.html":{},"interfaces/OwnerRefreshTokenCreationAttrbs.html":{},"injectables/OwnerService.html":{},"interfaces/RolecreationAttrbs.html":{},"interfaces/UserInterface.html":{},"interfaces/UserRefreshCreationAttrbs.html":{},"interfaces/UsercreationAttrbs.html":{},"interfaces/ValidateUser.html":{}}}],["activationlink'})@isuuid(4)@column({type",{"_index":2370,"title":{},"body":{"classes/Owner.html":{}}}],["activting_params_not_provided",{"_index":41,"title":{},"body":{"injectables/ActivateMiddleware.html":{}}}],["adapt",{"_index":2203,"title":{},"body":{"injectables/MailService.html":{}}}],["adaptive",{"_index":2198,"title":{},"body":{"injectables/MailService.html":{}}}],["add",{"_index":1743,"title":{},"body":{"classes/CreateAdminDto.html":{}}}],["addbookmark",{"_index":2760,"title":{},"body":{"controllers/ProductController.html":{}}}],["addbookmark(productid",{"_index":2771,"title":{},"body":{"controllers/ProductController.html":{}}}],["addcontent",{"_index":310,"title":{},"body":{"interfaces/AdminInterface.html":{},"interfaces/AdminRefreshTokenCreationAttrbs.html":{},"injectables/AdminService.html":{},"injectables/AdminUserMiddleware.html":{},"interfaces/AdmincreationAttrbs.html":{},"classes/CreateAdminDto.html":{},"interfaces/InitializeUser.html":{},"interfaces/RolecreationAttrbs.html":{},"injectables/UserAdminMiddleware.html":{},"interfaces/UserInterface.html":{},"interfaces/UserRefreshCreationAttrbs.html":{},"interfaces/UsercreationAttrbs.html":{},"injectables/UsersService.html":{},"interfaces/ValidateUser.html":{}}}],["addcontent.tostring",{"_index":834,"title":{},"body":{"injectables/AdminUserMiddleware.html":{},"injectables/UserAdminMiddleware.html":{}}}],["addcontentguard",{"_index":81,"title":{"guards/AddContentGuard.html":{}},"body":{"guards/AddContentGuard.html":{},"controllers/CategoriesController.html":{},"controllers/ProductController.html":{},"controllers/RolesController.html":{}}}],["addcontentguard)@delete('delete_category/:categoryid",{"_index":1506,"title":{},"body":{"controllers/CategoriesController.html":{}}}],["addcontentguard)@get('get/:value",{"_index":3045,"title":{},"body":{"controllers/RolesController.html":{}}}],["addcontentguard)@httpcode(201)@useinterceptors(undefined",{"_index":2782,"title":{},"body":{"controllers/ProductController.html":{}}}],["addcontentguard)@patch('update_category/:categoryid",{"_index":1513,"title":{},"body":{"controllers/CategoriesController.html":{}}}],["addcontentguard)@put('/create_role",{"_index":3041,"title":{},"body":{"controllers/RolesController.html":{}}}],["addcontentguard)@put('create_category",{"_index":1501,"title":{},"body":{"controllers/CategoriesController.html":{}}}],["addcronjob",{"_index":3094,"title":{},"body":{"injectables/TasksService.html":{}}}],["addcronjob(name",{"_index":3109,"title":{},"body":{"injectables/TasksService.html":{}}}],["added",{"_index":3144,"title":{},"body":{"injectables/TasksService.html":{}}}],["addinterval",{"_index":3095,"title":{},"body":{"injectables/TasksService.html":{}}}],["addinterval(name",{"_index":3113,"title":{},"body":{"injectables/TasksService.html":{}}}],["addproduct",{"_index":2345,"title":{},"body":{"classes/Owner.html":{}}}],["addproduct(product",{"_index":2394,"title":{},"body":{"classes/Owner.html":{}}}],["address",{"_index":1018,"title":{},"body":{"injectables/AppClusterService.html":{},"interfaces/Msg.html":{}}}],["addrole",{"_index":3393,"title":{},"body":{"injectables/UsersService.html":{}}}],["addrole(dto",{"_index":3402,"title":{},"body":{"injectables/UsersService.html":{}}}],["addroledto",{"_index":120,"title":{"classes/AddRoleDto.html":{}},"body":{"classes/AddRoleDto.html":{},"injectables/UsersService.html":{}}}],["addtimeoutfortokens",{"_index":3096,"title":{},"body":{"injectables/TasksService.html":{}}}],["addtimeoutfortokens(name",{"_index":3119,"title":{},"body":{"injectables/TasksService.html":{}}}],["addwatchedproduct",{"_index":2761,"title":{},"body":{"controllers/ProductController.html":{}}}],["addwatchedproduct(productid",{"_index":2775,"title":{},"body":{"controllers/ProductController.html":{}}}],["admin",{"_index":44,"title":{},"body":{"injectables/ActivateMiddleware.html":{},"guards/AddContentGuard.html":{},"controllers/AdminController.html":{},"injectables/AdminJwtRefreshService.html":{},"modules/AdminModule.html":{},"classes/AdminRefreshToken.html":{},"injectables/AdminService.html":{},"injectables/AdminUserMiddleware.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"guards/AuthFerfershGuard.html":{},"modules/AuthModule.html":{},"interfaces/AuthUser.html":{},"modules/CartModule.html":{},"controllers/CategoriesController.html":{},"modules/CategoriesModule.html":{},"interfaces/CodeDto.html":{},"modules/CoreModule.html":{},"classes/CreateAdminDto.html":{},"classes/CreateAdminRefreshTokenDto.html":{},"classes/CreateOwnerRefreshTokenDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUserRefreshTokenDto.html":{},"guards/EditContentGuard.html":{},"guards/EditWebsiteGuard.html":{},"injectables/InitializeEmailMiddleware.html":{},"injectables/InitializeUserMiddleware.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"modules/OrdersModule.html":{},"classes/Owner.html":{},"guards/OwnerAdminGuard.html":{},"modules/OwnerModule.html":{},"interfaces/Payload.html":{},"classes/Product.html":{},"classes/Product-1.html":{},"controllers/ProductController.html":{},"modules/ProductModule.html":{},"interfaces/ReturnedAdmin.html":{},"interfaces/ReturnedOwner.html":{},"interfaces/ReturnedUser.html":{},"controllers/ReviewsController.html":{},"modules/ReviewsModule.html":{},"classes/Role.html":{},"controllers/RolesController.html":{},"modules/RolesModule.html":{},"interfaces/Tokens.html":{},"classes/UserRoles.html":{},"modules/UsersModule.html":{}}}],["admin')@httpcode(201)@useguards(jwtauthguard",{"_index":3040,"title":{},"body":{"controllers/RolesController.html":{}}}],["admin')@useguards(jwtauthguard",{"_index":1500,"title":{},"body":{"controllers/CategoriesController.html":{},"controllers/ProductController.html":{},"controllers/ReviewsController.html":{},"controllers/RolesController.html":{}}}],["admin')@usepipes(new",{"_index":2780,"title":{},"body":{"controllers/ProductController.html":{}}}],["admin'})@apiresponse({status",{"_index":159,"title":{},"body":{"controllers/AdminController.html":{}}}],["admin'})@isboolean",{"_index":1756,"title":{},"body":{"classes/CreateAdminDto.html":{}}}],["admin.$add('adminrefreshtokens",{"_index":423,"title":{},"body":{"injectables/AdminJwtRefreshService.html":{}}}],["admin.$remove('adminrefreshtokens",{"_index":449,"title":{},"body":{"injectables/AdminJwtRefreshService.html":{}}}],["admin.$set('adminrefreshtokens",{"_index":420,"title":{},"body":{"injectables/AdminJwtRefreshService.html":{}}}],["admin.$set('roles",{"_index":775,"title":{},"body":{"injectables/AdminService.html":{}}}],["admin.activationlink",{"_index":795,"title":{},"body":{"injectables/AdminService.html":{},"injectables/AdminUserMiddleware.html":{}}}],["admin.adminrefreshtokens",{"_index":422,"title":{},"body":{"injectables/AdminJwtRefreshService.html":{}}}],["admin.controller",{"_index":499,"title":{},"body":{"modules/AdminModule.html":{}}}],["admin.dto",{"_index":204,"title":{},"body":{"controllers/AdminController.html":{},"modules/AdminModule.html":{},"injectables/AdminService.html":{}}}],["admin.dto.ts",{"_index":1740,"title":{},"body":{"classes/CreateAdminDto.html":{}}}],["admin.dto.ts:15",{"_index":1763,"title":{},"body":{"classes/CreateAdminDto.html":{}}}],["admin.dto.ts:22",{"_index":1774,"title":{},"body":{"classes/CreateAdminDto.html":{}}}],["admin.dto.ts:32",{"_index":1772,"title":{},"body":{"classes/CreateAdminDto.html":{}}}],["admin.dto.ts:40",{"_index":1755,"title":{},"body":{"classes/CreateAdminDto.html":{}}}],["admin.dto.ts:47",{"_index":1765,"title":{},"body":{"classes/CreateAdminDto.html":{}}}],["admin.dto.ts:54",{"_index":1741,"title":{},"body":{"classes/CreateAdminDto.html":{}}}],["admin.dto.ts:61",{"_index":1749,"title":{},"body":{"classes/CreateAdminDto.html":{}}}],["admin.dto.ts:68",{"_index":1745,"title":{},"body":{"classes/CreateAdminDto.html":{}}}],["admin.dto.ts:75",{"_index":1747,"title":{},"body":{"classes/CreateAdminDto.html":{}}}],["admin.dto.ts:82",{"_index":1757,"title":{},"body":{"classes/CreateAdminDto.html":{}}}],["admin.email",{"_index":444,"title":{},"body":{"injectables/AdminJwtRefreshService.html":{},"injectables/AdminService.html":{},"injectables/InitializeEmailMiddleware.html":{},"injectables/MailService.html":{}}}],["admin.getaddcontent",{"_index":117,"title":{},"body":{"guards/AddContentGuard.html":{},"injectables/AdminService.html":{}}}],["admin.getadminagent",{"_index":427,"title":{},"body":{"injectables/AdminJwtRefreshService.html":{}}}],["admin.getadminagent().trim",{"_index":432,"title":{},"body":{"injectables/AdminJwtRefreshService.html":{}}}],["admin.getadminrefreshtokens",{"_index":417,"title":{},"body":{"injectables/AdminJwtRefreshService.html":{}}}],["admin.getadminrefreshtokens().length",{"_index":418,"title":{},"body":{"injectables/AdminJwtRefreshService.html":{}}}],["admin.getconfirmcode",{"_index":808,"title":{},"body":{"injectables/AdminService.html":{}}}],["admin.geteditcontent",{"_index":790,"title":{},"body":{"injectables/AdminService.html":{},"guards/EditContentGuard.html":{}}}],["admin.geteditwebsite",{"_index":791,"title":{},"body":{"injectables/AdminService.html":{},"guards/EditWebsiteGuard.html":{}}}],["admin.getisactivated",{"_index":794,"title":{},"body":{"injectables/AdminService.html":{}}}],["admin.getname",{"_index":787,"title":{},"body":{"injectables/AdminService.html":{}}}],["admin.getpassword",{"_index":801,"title":{},"body":{"injectables/AdminService.html":{},"injectables/AdminUserMiddleware.html":{}}}],["admin.getresettokenexpiration",{"_index":806,"title":{},"body":{"injectables/AdminService.html":{}}}],["admin.getsurname",{"_index":788,"title":{},"body":{"injectables/AdminService.html":{}}}],["admin.guard",{"_index":220,"title":{},"body":{"controllers/AdminController.html":{},"controllers/CategoriesController.html":{},"controllers/ProductController.html":{},"controllers/ReviewsController.html":{},"controllers/RolesController.html":{},"controllers/UsersController.html":{}}}],["admin.guard.ts",{"_index":2446,"title":{},"body":{"guards/OwnerAdminGuard.html":{}}}],["admin.guard.ts:27",{"_index":2447,"title":{},"body":{"guards/OwnerAdminGuard.html":{}}}],["admin.guard.ts:33",{"_index":2448,"title":{},"body":{"guards/OwnerAdminGuard.html":{}}}],["admin.id",{"_index":412,"title":{},"body":{"injectables/AdminJwtRefreshService.html":{},"injectables/AdminService.html":{}}}],["admin.middleware",{"_index":523,"title":{},"body":{"modules/AdminModule.html":{}}}],["admin.middleware.ts",{"_index":3248,"title":{},"body":{"injectables/UserAdminMiddleware.html":{}}}],["admin.middleware.ts:22",{"_index":3250,"title":{},"body":{"injectables/UserAdminMiddleware.html":{}}}],["admin.middleware.ts:24",{"_index":3251,"title":{},"body":{"injectables/UserAdminMiddleware.html":{}}}],["admin.model",{"_index":651,"title":{},"body":{"classes/AdminRefreshToken.html":{}}}],["admin.phonenumber",{"_index":789,"title":{},"body":{"injectables/AdminService.html":{},"injectables/AdminUserMiddleware.html":{}}}],["admin.roles",{"_index":777,"title":{},"body":{"injectables/AdminService.html":{}}}],["admin.save",{"_index":424,"title":{},"body":{"injectables/AdminJwtRefreshService.html":{},"injectables/AdminService.html":{}}}],["admin.service",{"_index":382,"title":{},"body":{"injectables/AdminJwtRefreshService.html":{}}}],["admin.setactivationcode(code",{"_index":440,"title":{},"body":{"injectables/AdminJwtRefreshService.html":{}}}],["admin.setaddcontent(dto.addcontent",{"_index":760,"title":{},"body":{"injectables/AdminService.html":{}}}],["admin.setadminagent(adminagent",{"_index":428,"title":{},"body":{"injectables/AdminJwtRefreshService.html":{}}}],["admin.setconfirmcode(code",{"_index":803,"title":{},"body":{"injectables/AdminService.html":{}}}],["admin.seteditcontent(dto.editcontent",{"_index":779,"title":{},"body":{"injectables/AdminService.html":{}}}],["admin.seteditcontent(dto.editwebsite",{"_index":761,"title":{},"body":{"injectables/AdminService.html":{}}}],["admin.seteditwebsite(dto.editwebsite",{"_index":762,"title":{},"body":{"injectables/AdminService.html":{}}}],["admin.setisactivated(false",{"_index":433,"title":{},"body":{"injectables/AdminJwtRefreshService.html":{}}}],["admin.setisactivated(user.getisactivated",{"_index":772,"title":{},"body":{"injectables/AdminService.html":{}}}],["admin.setnewpasssword(hashedpassword",{"_index":818,"title":{},"body":{"injectables/AdminService.html":{}}}],["admin.setresettoken(link.replace",{"_index":438,"title":{},"body":{"injectables/AdminJwtRefreshService.html":{}}}],["admin.setresettokenexpiration(number(date.now",{"_index":441,"title":{},"body":{"injectables/AdminJwtRefreshService.html":{},"injectables/AdminService.html":{}}}],["admin.userid",{"_index":773,"title":{},"body":{"injectables/AdminService.html":{}}}],["admin/admin.module",{"_index":1107,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CategoriesModule.html":{},"modules/MailModule.html":{},"modules/OwnerModule.html":{},"modules/ProductModule.html":{},"modules/ReviewsModule.html":{},"modules/RolesModule.html":{},"modules/UsersModule.html":{}}}],["admin/constants/admin.constants",{"_index":287,"title":{},"body":{"guards/AdminGuard.html":{},"injectables/AdminUserMiddleware.html":{},"classes/ApiException.html":{},"injectables/MailService.html":{},"guards/OwnerAdminGuard.html":{},"guards/RolesGuard.html":{},"guards/UserGuard.html":{}}}],["admin/constants/jwt",{"_index":941,"title":{},"body":{"classes/ApiException.html":{}}}],["admin/create_admin",{"_index":569,"title":{},"body":{"modules/AdminModule.html":{}}}],["admin/find_admin",{"_index":568,"title":{},"body":{"modules/AdminModule.html":{}}}],["admin/get_admins",{"_index":565,"title":{},"body":{"modules/AdminModule.html":{}}}],["admin/models/admin.model",{"_index":45,"title":{},"body":{"injectables/ActivateMiddleware.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CartModule.html":{},"modules/CategoriesModule.html":{},"modules/CoreModule.html":{},"modules/MailModule.html":{},"modules/OrdersModule.html":{},"modules/OwnerModule.html":{},"classes/Product-1.html":{},"modules/ProductModule.html":{},"modules/ReviewsModule.html":{},"classes/Role.html":{},"modules/RolesModule.html":{},"classes/UserRoles.html":{},"modules/UsersModule.html":{}}}],["admin/models/admin.refresh.token.model",{"_index":281,"title":{},"body":{"guards/AdminGuard.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CartModule.html":{},"modules/CategoriesModule.html":{},"modules/CoreModule.html":{},"modules/MailModule.html":{},"modules/OrdersModule.html":{},"guards/OwnerAdminGuard.html":{},"modules/OwnerModule.html":{},"modules/ProductModule.html":{},"modules/ReviewsModule.html":{},"modules/RolesModule.html":{},"modules/UsersModule.html":{}}}],["admin/services/admin.service",{"_index":102,"title":{},"body":{"guards/AddContentGuard.html":{},"injectables/AdminUserMiddleware.html":{},"guards/AuthFerfershGuard.html":{},"guards/EditContentGuard.html":{},"guards/EditWebsiteGuard.html":{},"injectables/InitializeEmailMiddleware.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"modules/OwnerModule.html":{}}}],["admin/services/jwt",{"_index":278,"title":{},"body":{"guards/AdminGuard.html":{},"modules/AuthModule.html":{},"injectables/InitializeUserMiddleware.html":{},"guards/OwnerAdminGuard.html":{}}}],["admin/update_admin",{"_index":571,"title":{},"body":{"modules/AdminModule.html":{}}}],["admin@gmail.com",{"_index":612,"title":{},"body":{"classes/AdminRefreshToken.html":{},"classes/CreateAdminRefreshTokenDto.html":{}}}],["admin_id_not_found",{"_index":931,"title":{},"body":{"classes/ApiException.html":{}}}],["admin_id_not_provided",{"_index":724,"title":{},"body":{"injectables/AdminService.html":{},"classes/ApiException.html":{}}}],["admin_not_authorizied",{"_index":2449,"title":{},"body":{"guards/OwnerAdminGuard.html":{}}}],["admin_not_found",{"_index":374,"title":{},"body":{"injectables/AdminJwtRefreshService.html":{},"injectables/AdminService.html":{},"injectables/AdminUserMiddleware.html":{},"classes/ApiException.html":{},"injectables/MailService.html":{}}}],["admin_or_role_not_found",{"_index":938,"title":{},"body":{"classes/ApiException.html":{}}}],["admin_with_email_doesnt_exist",{"_index":919,"title":{},"body":{"classes/ApiException.html":{}}}],["admin_with_email_exist",{"_index":719,"title":{},"body":{"injectables/AdminService.html":{},"classes/ApiException.html":{}}}],["admin_with_phonenumber_exist",{"_index":720,"title":{},"body":{"injectables/AdminService.html":{},"classes/ApiException.html":{}}}],["admin`s",{"_index":600,"title":{},"body":{"classes/AdminRefreshToken.html":{},"classes/CreateAdminDto.html":{},"classes/CreateAdminRefreshTokenDto.html":{}}}],["admin`s_refresh",{"_index":653,"title":{},"body":{"classes/AdminRefreshToken.html":{}}}],["adminagent",{"_index":319,"title":{},"body":{"interfaces/AdminInterface.html":{},"injectables/AdminJwtRefreshService.html":{},"classes/AdminRefreshToken.html":{},"interfaces/AdminRefreshTokenCreationAttrbs.html":{},"interfaces/AdmincreationAttrbs.html":{},"classes/CreateAdminRefreshTokenDto.html":{}}}],["admincontroller",{"_index":147,"title":{"controllers/AdminController.html":{}},"body":{"controllers/AdminController.html":{},"modules/AdminModule.html":{}}}],["admincreationattrbs",{"_index":320,"title":{"interfaces/AdmincreationAttrbs.html":{}},"body":{"interfaces/AdminInterface.html":{},"interfaces/AdminRefreshTokenCreationAttrbs.html":{},"interfaces/AdmincreationAttrbs.html":{}}}],["admindata",{"_index":405,"title":{},"body":{"injectables/AdminJwtRefreshService.html":{}}}],["admindto",{"_index":167,"title":{},"body":{"controllers/AdminController.html":{},"injectables/AdminService.html":{}}}],["admindto.password",{"_index":800,"title":{},"body":{"injectables/AdminService.html":{}}}],["adminguard",{"_index":267,"title":{"guards/AdminGuard.html":{}},"body":{"guards/AdminGuard.html":{}}}],["adminid",{"_index":318,"title":{},"body":{"interfaces/AdminInterface.html":{},"injectables/AdminJwtRefreshService.html":{},"classes/AdminRefreshToken.html":{},"interfaces/AdminRefreshTokenCreationAttrbs.html":{},"injectables/AdminService.html":{},"interfaces/AdmincreationAttrbs.html":{},"interfaces/CategoryCreationAtrb.html":{},"classes/CreateAdminRefreshTokenDto.html":{},"classes/Product.html":{},"classes/Product-1.html":{},"interfaces/ProductCreationAttrs.html":{},"interfaces/ReturnedCategory.html":{},"interfaces/ReturnedProduct.html":{},"interfaces/ReturnedProducts.html":{},"interfaces/ReturnedReview.html":{},"interfaces/ReviewCreationAtrb.html":{},"classes/UserRoles.html":{}}}],["adminid'})@foreignkey(undefined)@column({type",{"_index":606,"title":{},"body":{"classes/AdminRefreshToken.html":{},"classes/UserRoles.html":{}}}],["admininterface",{"_index":209,"title":{"interfaces/AdminInterface.html":{}},"body":{"controllers/AdminController.html":{},"interfaces/AdminInterface.html":{},"interfaces/AdminRefreshTokenCreationAttrbs.html":{},"injectables/AdminService.html":{},"interfaces/AdmincreationAttrbs.html":{}}}],["adminjwtrefreshservice",{"_index":270,"title":{"injectables/AdminJwtRefreshService.html":{}},"body":{"guards/AdminGuard.html":{},"injectables/AdminJwtRefreshService.html":{},"modules/AdminModule.html":{},"modules/AuthModule.html":{},"injectables/InitializeUserMiddleware.html":{},"guards/OwnerAdminGuard.html":{},"overview.html":{}}}],["adminjwtrefreshtokenservice",{"_index":274,"title":{},"body":{"guards/AdminGuard.html":{},"injectables/InitializeUserMiddleware.html":{},"guards/OwnerAdminGuard.html":{}}}],["adminmodule",{"_index":476,"title":{"modules/AdminModule.html":{}},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CategoriesModule.html":{},"modules/MailModule.html":{},"modules/OwnerModule.html":{},"modules/ProductModule.html":{},"modules/ReviewsModule.html":{},"modules/RolesModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["adminname_validation",{"_index":1762,"title":{},"body":{"classes/CreateAdminDto.html":{}}}],["adminperpage",{"_index":691,"title":{},"body":{"injectables/AdminService.html":{}}}],["adminrefreshtoken",{"_index":280,"title":{"classes/AdminRefreshToken.html":{}},"body":{"guards/AdminGuard.html":{},"interfaces/AdminInterface.html":{},"injectables/AdminJwtRefreshService.html":{},"modules/AdminModule.html":{},"classes/AdminRefreshToken.html":{},"interfaces/AdminRefreshTokenCreationAttrbs.html":{},"interfaces/AdmincreationAttrbs.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CartModule.html":{},"modules/CategoriesModule.html":{},"modules/CoreModule.html":{},"injectables/InitializeUserMiddleware.html":{},"modules/MailModule.html":{},"modules/OrdersModule.html":{},"guards/OwnerAdminGuard.html":{},"modules/OwnerModule.html":{},"modules/ProductModule.html":{},"modules/ReviewsModule.html":{},"modules/RolesModule.html":{},"modules/UsersModule.html":{}}}],["adminrefreshtoken.findone",{"_index":454,"title":{},"body":{"injectables/AdminJwtRefreshService.html":{}}}],["adminrefreshtokencreationattrbs",{"_index":317,"title":{"interfaces/AdminRefreshTokenCreationAttrbs.html":{}},"body":{"interfaces/AdminInterface.html":{},"classes/AdminRefreshToken.html":{},"interfaces/AdminRefreshTokenCreationAttrbs.html":{},"interfaces/AdmincreationAttrbs.html":{}}}],["adminrefreshtokenid",{"_index":364,"title":{},"body":{"injectables/AdminJwtRefreshService.html":{}}}],["adminrefreshtokenrepository",{"_index":341,"title":{},"body":{"injectables/AdminJwtRefreshService.html":{}}}],["adminrepository",{"_index":20,"title":{},"body":{"injectables/ActivateMiddleware.html":{},"injectables/AdminService.html":{}}}],["admins",{"_index":259,"title":{},"body":{"controllers/AdminController.html":{},"injectables/AdminService.html":{},"classes/Role.html":{}}}],["admins'})@apiresponse({status",{"_index":172,"title":{},"body":{"controllers/AdminController.html":{}}}],["admins.length",{"_index":785,"title":{},"body":{"injectables/AdminService.html":{}}}],["admins.map((admin",{"_index":786,"title":{},"body":{"injectables/AdminService.html":{}}}],["admins.push(admin",{"_index":749,"title":{},"body":{"injectables/AdminService.html":{}}}],["adminservice",{"_index":87,"title":{"injectables/AdminService.html":{}},"body":{"guards/AddContentGuard.html":{},"controllers/AdminController.html":{},"injectables/AdminJwtRefreshService.html":{},"modules/AdminModule.html":{},"injectables/AdminService.html":{},"injectables/AdminUserMiddleware.html":{},"guards/AuthFerfershGuard.html":{},"guards/EditContentGuard.html":{},"guards/EditWebsiteGuard.html":{},"injectables/InitializeEmailMiddleware.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"modules/OwnerModule.html":{},"overview.html":{}}}],["adminusermiddleware",{"_index":529,"title":{"injectables/AdminUserMiddleware.html":{}},"body":{"modules/AdminModule.html":{},"injectables/AdminUserMiddleware.html":{}}}],["admin})@throttle(60",{"_index":161,"title":{},"body":{"controllers/AdminController.html":{}}}],["admin})@throttle(70",{"_index":183,"title":{},"body":{"controllers/AdminController.html":{}}}],["age=31536000",{"_index":2019,"title":{},"body":{"injectables/InitializeUserMiddleware.html":{}}}],["agent",{"_index":660,"title":{},"body":{"classes/AdminRefreshToken.html":{},"controllers/AuthController.html":{},"injectables/AuthMiddleware.html":{},"classes/CreateAdminRefreshTokenDto.html":{},"classes/CreateOwnerDto.html":{},"classes/CreateOwnerRefreshTokenDto.html":{},"classes/Owner.html":{},"classes/OwnerRefreshToken.html":{},"injectables/ProductMiddleware.html":{},"injectables/UserMiddleware.html":{},"injectables/UserMiddleware-1.html":{},"controllers/UsersController.html":{}}}],["agent'})@column({type",{"_index":601,"title":{},"body":{"classes/AdminRefreshToken.html":{},"classes/Owner.html":{},"classes/OwnerRefreshToken.html":{}}}],["agent'})@isstring",{"_index":1781,"title":{},"body":{"classes/CreateAdminRefreshTokenDto.html":{},"classes/CreateOwnerDto.html":{},"classes/CreateOwnerRefreshTokenDto.html":{}}}],["agent.decorator",{"_index":1275,"title":{},"body":{"controllers/AuthController.html":{},"controllers/UsersController.html":{}}}],["alex",{"_index":1758,"title":{},"body":{"classes/CreateAdminDto.html":{},"classes/CreateOwnerDto.html":{},"classes/CreateUserDto.html":{},"classes/Owner.html":{},"classes/SignupDto.html":{},"classes/UpdateUserDto.html":{}}}],["alexesg1234",{"_index":3092,"title":{},"body":{"classes/SignupDto.html":{}}}],["aliases",{"_index":3656,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["align:center",{"_index":2168,"title":{},"body":{"injectables/MailService.html":{}}}],["align:center!important",{"_index":2184,"title":{},"body":{"injectables/MailService.html":{}}}],["align:left!important",{"_index":2188,"title":{},"body":{"injectables/MailService.html":{}}}],["align:right!important",{"_index":2186,"title":{},"body":{"injectables/MailService.html":{}}}],["allexceptionsfilter",{"_index":841,"title":{"classes/AllExceptionsFilter.html":{}},"body":{"classes/AllExceptionsFilter.html":{},"modules/AppModule.html":{},"modules/CoreModule.html":{}}}],["allow",{"_index":1338,"title":{},"body":{"injectables/AuthMiddleware.html":{},"injectables/CorsMiddleware.html":{},"injectables/ProductMiddleware.html":{},"interfaces/RequestHeaders.html":{},"injectables/UserMiddleware.html":{},"injectables/UserMiddleware-1.html":{}}}],["allowed",{"_index":1194,"title":{},"body":{"modules/AppModule.html":{},"injectables/FilesService.html":{},"controllers/ProductController.html":{},"interfaces/fileCreated.html":{}}}],["allownull",{"_index":602,"title":{},"body":{"classes/AdminRefreshToken.html":{},"classes/BookmarksProducts.html":{},"classes/CartProduct.html":{},"classes/CartProduct-1.html":{},"classes/Category.html":{},"classes/OrderProduct.html":{},"classes/Owner.html":{},"classes/OwnerRefreshToken.html":{},"classes/Product.html":{},"classes/Product-1.html":{},"classes/ProductCategories.html":{},"classes/ProductReviews.html":{},"classes/Role.html":{},"classes/UserRefreshToken.html":{},"classes/UserRoles.html":{},"classes/WatchedProducts.html":{}}}],["already_exist",{"_index":1570,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["amazing",{"_index":3626,"title":{},"body":{"index.html":{}}}],["any)[relatedpropertyname",{"_index":2276,"title":{},"body":{"classes/MatchConstraint.html":{}}}],["api_key",{"_index":458,"title":{},"body":{"injectables/AdminJwtRefreshService.html":{},"controllers/AppController.html":{},"injectables/OwnerJwtRefreshService.html":{}}}],["apibearerauth",{"_index":196,"title":{},"body":{"controllers/AdminController.html":{},"controllers/UsersController.html":{}}}],["apibearerauth('jwt",{"_index":239,"title":{},"body":{"controllers/AdminController.html":{},"controllers/UsersController.html":{}}}],["apierror",{"_index":868,"title":{"classes/ApiError.html":{}},"body":{"classes/ApiError.html":{},"classes/BadRequestError.html":{},"classes/NotFoundError.html":{}}}],["apierror:4",{"_index":1390,"title":{},"body":{"classes/BadRequestError.html":{},"classes/NotFoundError.html":{}}}],["apierror:5",{"_index":1389,"title":{},"body":{"classes/BadRequestError.html":{},"classes/NotFoundError.html":{}}}],["apierrorexceptionfilter",{"_index":229,"title":{"classes/ApiErrorExceptionFilter.html":{}},"body":{"controllers/AdminController.html":{},"classes/ApiErrorExceptionFilter.html":{},"controllers/AuthController.html":{},"controllers/CardController.html":{},"controllers/CategoriesController.html":{},"controllers/OrdersController.html":{},"controllers/ProductController.html":{},"controllers/ReviewsController.html":{},"controllers/RolesController.html":{},"controllers/UsersController.html":{}}}],["apiexception",{"_index":48,"title":{"classes/ApiException.html":{}},"body":{"injectables/ActivateMiddleware.html":{},"guards/AddContentGuard.html":{},"guards/AdminGuard.html":{},"injectables/AdminJwtRefreshService.html":{},"injectables/AdminService.html":{},"injectables/AdminUserMiddleware.html":{},"classes/ApiException.html":{},"classes/ApiExceptionFilter.html":{},"guards/AuthFerfershGuard.html":{},"injectables/CategoriesService.html":{},"guards/EditContentGuard.html":{},"guards/EditWebsiteGuard.html":{},"injectables/InitializeEmailMiddleware.html":{},"injectables/InitializeUserMiddleware.html":{},"guards/JwtAuthGuard.html":{},"injectables/MailService.html":{},"guards/OwnerAdminGuard.html":{},"injectables/OwnerJwtRefreshService.html":{},"injectables/OwnerService.html":{},"guards/RefreshAuthGuard.html":{},"guards/RolesGuard.html":{},"injectables/UserAdminMiddleware.html":{},"guards/UserGuard.html":{},"injectables/UserJwtRefreshTokenService.html":{},"injectables/UsersService.html":{}}}],["apiexception(httpstatus.bad_request",{"_index":67,"title":{},"body":{"injectables/ActivateMiddleware.html":{},"guards/AdminGuard.html":{},"injectables/AdminJwtRefreshService.html":{},"injectables/AdminService.html":{},"injectables/AdminUserMiddleware.html":{},"classes/ApiException.html":{},"injectables/CategoriesService.html":{},"injectables/InitializeEmailMiddleware.html":{},"injectables/InitializeUserMiddleware.html":{},"guards/OwnerAdminGuard.html":{},"injectables/OwnerJwtRefreshService.html":{},"injectables/OwnerService.html":{},"guards/RefreshAuthGuard.html":{},"injectables/UserAdminMiddleware.html":{},"guards/UserGuard.html":{},"injectables/UserJwtRefreshTokenService.html":{},"injectables/UsersService.html":{}}}],["apiexception(httpstatus.forbidden",{"_index":118,"title":{},"body":{"guards/AddContentGuard.html":{},"injectables/AdminService.html":{},"classes/ApiException.html":{},"guards/AuthFerfershGuard.html":{},"guards/EditContentGuard.html":{},"guards/EditWebsiteGuard.html":{},"injectables/OwnerService.html":{}}}],["apiexception(httpstatus.not_found",{"_index":408,"title":{},"body":{"injectables/AdminJwtRefreshService.html":{},"injectables/AdminService.html":{},"injectables/AdminUserMiddleware.html":{},"classes/ApiException.html":{},"guards/AuthFerfershGuard.html":{},"injectables/CategoriesService.html":{},"injectables/InitializeEmailMiddleware.html":{},"injectables/MailService.html":{},"injectables/OwnerJwtRefreshService.html":{},"injectables/OwnerService.html":{},"injectables/UserAdminMiddleware.html":{},"injectables/UserJwtRefreshTokenService.html":{},"injectables/UsersService.html":{}}}],["apiexception(httpstatus.unauthorized",{"_index":112,"title":{},"body":{"guards/AddContentGuard.html":{},"guards/AdminGuard.html":{},"injectables/AdminService.html":{},"classes/ApiException.html":{},"guards/AuthFerfershGuard.html":{},"guards/EditContentGuard.html":{},"guards/EditWebsiteGuard.html":{},"guards/JwtAuthGuard.html":{},"guards/OwnerAdminGuard.html":{},"injectables/OwnerService.html":{},"guards/RefreshAuthGuard.html":{},"guards/RolesGuard.html":{},"guards/UserGuard.html":{},"injectables/UsersService.html":{}}}],["apiexceptionfilter",{"_index":232,"title":{"classes/ApiExceptionFilter.html":{}},"body":{"controllers/AdminController.html":{},"classes/ApiExceptionFilter.html":{},"controllers/AuthController.html":{},"controllers/CardController.html":{},"controllers/CategoriesController.html":{},"controllers/OrdersController.html":{},"controllers/ProductController.html":{},"controllers/ReviewsController.html":{},"controllers/RolesController.html":{},"controllers/UsersController.html":{}}}],["apioperation",{"_index":197,"title":{},"body":{"controllers/AdminController.html":{},"controllers/AuthController.html":{},"controllers/CategoriesController.html":{},"controllers/RolesController.html":{},"controllers/UsersController.html":{}}}],["apioperation({summary",{"_index":157,"title":{},"body":{"controllers/AdminController.html":{},"controllers/AuthController.html":{}}}],["apiproperty",{"_index":139,"title":{},"body":{"classes/AddRoleDto.html":{},"classes/AdminRefreshToken.html":{},"classes/BanUserDto.html":{},"classes/ChangeDto.html":{},"classes/CreateAccessTokenDto.html":{},"classes/CreateAdminDto.html":{},"classes/CreateAdminRefreshTokenDto.html":{},"classes/CreateOwnerDto.html":{},"classes/CreateOwnerRefreshTokenDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserRefreshTokenDto.html":{},"classes/LoginDto.html":{},"classes/Owner.html":{},"classes/OwnerRefreshToken.html":{},"classes/ResetDto.html":{},"classes/Role.html":{},"classes/SignupDto.html":{},"classes/UpdateUserDto.html":{},"classes/UserRefreshToken.html":{},"classes/UserRoles.html":{}}}],["apiproperty({example",{"_index":129,"title":{},"body":{"classes/AddRoleDto.html":{},"classes/AdminRefreshToken.html":{},"classes/BanUserDto.html":{},"classes/ChangeDto.html":{},"classes/CreateAccessTokenDto.html":{},"classes/CreateAdminDto.html":{},"classes/CreateAdminRefreshTokenDto.html":{},"classes/CreateOwnerDto.html":{},"classes/CreateOwnerRefreshTokenDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserRefreshTokenDto.html":{},"classes/LoginDto.html":{},"classes/Owner.html":{},"classes/OwnerRefreshToken.html":{},"classes/ResetDto.html":{},"classes/Role.html":{},"classes/SignupDto.html":{},"classes/UpdateUserDto.html":{},"classes/UserRefreshToken.html":{},"classes/UserRoles.html":{}}}],["apiresponse",{"_index":198,"title":{},"body":{"controllers/AdminController.html":{},"controllers/AuthController.html":{},"controllers/CategoriesController.html":{},"controllers/RolesController.html":{},"controllers/UsersController.html":{}}}],["apitags",{"_index":199,"title":{},"body":{"controllers/AdminController.html":{},"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/RolesController.html":{},"controllers/UsersController.html":{}}}],["apitags('admin",{"_index":238,"title":{},"body":{"controllers/AdminController.html":{}}}],["apitags('auth",{"_index":1281,"title":{},"body":{"controllers/AuthController.html":{}}}],["apitags('roles",{"_index":3050,"title":{},"body":{"controllers/RolesController.html":{}}}],["apitags('users",{"_index":3367,"title":{},"body":{"controllers/UsersController.html":{}}}],["app",{"_index":998,"title":{},"body":{"injectables/AppClusterService.html":{},"interfaces/Msg.html":{},"index.html":{}}}],["app.close",{"_index":1000,"title":{},"body":{"injectables/AppClusterService.html":{},"interfaces/Msg.html":{}}}],["app.controller",{"_index":1125,"title":{},"body":{"modules/AppModule.html":{}}}],["app_filter",{"_index":1116,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CoreModule.html":{}}}],["app_guard",{"_index":1349,"title":{},"body":{"modules/AuthModule.html":{},"modules/CoreModule.html":{}}}],["app_interceptor",{"_index":1117,"title":{},"body":{"modules/AppModule.html":{},"modules/CoreModule.html":{}}}],["appclusterservice",{"_index":962,"title":{"injectables/AppClusterService.html":{}},"body":{"injectables/AppClusterService.html":{},"modules/AppModule.html":{},"modules/CoreModule.html":{},"interfaces/Msg.html":{},"overview.html":{}}}],["appclusterservice.logger.log",{"_index":991,"title":{},"body":{"injectables/AppClusterService.html":{},"interfaces/Msg.html":{}}}],["appclusterservice.logger.log(`cluster",{"_index":997,"title":{},"body":{"injectables/AppClusterService.html":{},"interfaces/Msg.html":{}}}],["appclusterservice.logger.log(`master",{"_index":988,"title":{},"body":{"injectables/AppClusterService.html":{},"interfaces/Msg.html":{}}}],["appclusterservice.logger.log(`number",{"_index":987,"title":{},"body":{"injectables/AppClusterService.html":{},"interfaces/Msg.html":{}}}],["appclusterservice.logger.log(`numreqs",{"_index":1010,"title":{},"body":{"injectables/AppClusterService.html":{},"interfaces/Msg.html":{}}}],["appcontroller",{"_index":1026,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["apple",{"_index":2130,"title":{},"body":{"injectables/MailService.html":{}}}],["applewebkit/523.34",{"_index":595,"title":{},"body":{"classes/AdminRefreshToken.html":{},"classes/CreateAdminRefreshTokenDto.html":{},"classes/CreateOwnerDto.html":{},"classes/CreateOwnerRefreshTokenDto.html":{},"classes/Owner.html":{},"classes/OwnerRefreshToken.html":{},"injectables/UserJwtRefreshTokenService.html":{}}}],["applications",{"_index":3599,"title":{},"body":{"index.html":{}}}],["applistener",{"_index":1079,"title":{"injectables/AppListener.html":{}},"body":{"injectables/AppListener.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"overview.html":{}}}],["apply(activatemiddleware",{"_index":1369,"title":{},"body":{"modules/AuthModule.html":{}}}],["apply(adminusermiddleware",{"_index":575,"title":{},"body":{"modules/AdminModule.html":{}}}],["apply(authmiddleware",{"_index":1360,"title":{},"body":{"modules/AuthModule.html":{}}}],["apply(initializeemailmiddleware",{"_index":1366,"title":{},"body":{"modules/AuthModule.html":{}}}],["apply(initializeusermiddleware",{"_index":562,"title":{},"body":{"modules/AdminModule.html":{},"modules/AuthModule.html":{},"modules/CategoriesModule.html":{},"modules/ProductModule.html":{},"modules/ReviewsModule.html":{},"modules/RolesModule.html":{},"modules/UsersModule.html":{}}}],["apply(requestvalidator.validate(changedto",{"_index":1375,"title":{},"body":{"modules/AuthModule.html":{}}}],["apply(requestvalidator.validate(createadmindto",{"_index":574,"title":{},"body":{"modules/AdminModule.html":{}}}],["apply(requestvalidator.validate(createreviewdto",{"_index":2981,"title":{},"body":{"modules/ReviewsModule.html":{}}}],["apply(requestvalidator.validate(logindto",{"_index":1371,"title":{},"body":{"modules/AuthModule.html":{}}}],["apply(requestvalidator.validate(resetdto",{"_index":1374,"title":{},"body":{"modules/AuthModule.html":{}}}],["apply(requestvalidator.validate(signupdto",{"_index":1372,"title":{},"body":{"modules/AuthModule.html":{}}}],["apply(requestvalidator.validate(updateuserdto",{"_index":3389,"title":{},"body":{"modules/UsersModule.html":{}}}],["apply(useradminmiddleware",{"_index":573,"title":{},"body":{"modules/AdminModule.html":{}}}],["apply(usermiddleware",{"_index":2895,"title":{},"body":{"modules/ProductModule.html":{},"modules/UsersModule.html":{}}}],["appmodule",{"_index":1093,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["args",{"_index":1992,"title":{},"body":{"interfaces/ITelegramModuleAsyncOptions.html":{},"interfaces/ITelegramOptions.html":{},"classes/MatchConstraint.html":{},"modules/TelegramModule.html":{}}}],["args.constraints",{"_index":2273,"title":{},"body":{"classes/MatchConstraint.html":{}}}],["args.object",{"_index":2275,"title":{},"body":{"classes/MatchConstraint.html":{}}}],["argumentmetadata",{"_index":2634,"title":{},"body":{"classes/ParseFormDataJsonPipe.html":{},"injectables/ParseJsonPipe.html":{},"injectables/ValidateDto.html":{}}}],["argumentshost",{"_index":851,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"classes/ApiErrorExceptionFilter.html":{},"classes/ApiExceptionFilter.html":{},"classes/HttpExceptionFilter.html":{}}}],["array",{"_index":1848,"title":{},"body":{"classes/CreateProductDto.html":{},"classes/Nested.html":{},"classes/Nested-1.html":{},"classes/UpdateProductDto.html":{}}}],["arraynotempty",{"_index":1736,"title":{},"body":{"classes/CreateAccessTokenDto.html":{},"classes/CreateProductDto.html":{},"classes/Nested.html":{},"classes/Nested-1.html":{},"classes/UpdateProductDto.html":{}}}],["asc",{"_index":2793,"title":{},"body":{"controllers/ProductController.html":{}}}],["ascii",{"_index":297,"title":{},"body":{"guards/AdminGuard.html":{},"guards/OwnerAdminGuard.html":{},"guards/UserGuard.html":{}}}],["async",{"_index":9,"title":{},"body":{"injectables/ActivateMiddleware.html":{},"guards/AddContentGuard.html":{},"controllers/AdminController.html":{},"guards/AdminGuard.html":{},"injectables/AdminJwtRefreshService.html":{},"injectables/AdminService.html":{},"injectables/AdminUserMiddleware.html":{},"injectables/AppClusterService.html":{},"controllers/AppController.html":{},"controllers/AuthController.html":{},"guards/AuthFerfershGuard.html":{},"injectables/CategoriesService.html":{},"guards/EditContentGuard.html":{},"guards/EditWebsiteGuard.html":{},"injectables/FilesService.html":{},"injectables/InitializeEmailMiddleware.html":{},"injectables/InitializeUserMiddleware.html":{},"guards/JwtAuthGuard.html":{},"injectables/LocationMiddleware.html":{},"injectables/MailService.html":{},"interfaces/Msg.html":{},"guards/OwnerAdminGuard.html":{},"injectables/OwnerJwtRefreshService.html":{},"injectables/OwnerService.html":{},"classes/RequestValidator.html":{},"injectables/ReviewsService.html":{},"controllers/RolesController.html":{},"guards/RolesGuard.html":{},"injectables/RolesService.html":{},"injectables/TasksService.html":{},"modules/TelegramModule.html":{},"injectables/TelegramService.html":{},"injectables/UserAdminMiddleware.html":{},"guards/UserGuard.html":{},"injectables/UserJwtRefreshTokenService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"injectables/ValidateDto.html":{},"interfaces/fileCreated.html":{}}}],["asyncoptions",{"_index":3196,"title":{},"body":{"modules/TelegramModule.html":{}}}],["attributes",{"_index":740,"title":{},"body":{"injectables/AdminService.html":{},"injectables/UsersService.html":{}}}],["auth",{"_index":240,"title":{},"body":{"controllers/AdminController.html":{},"controllers/AuthController.html":{},"modules/MailModule.html":{},"controllers/UsersController.html":{}}}],["auth.constants",{"_index":1647,"title":{},"body":{"classes/ChangeDto.html":{},"classes/CreateAccessTokenDto.html":{},"classes/LoginDto.html":{},"classes/ResetDto.html":{},"classes/SignupDto.html":{}}}],["auth.controller",{"_index":1348,"title":{},"body":{"modules/AuthModule.html":{}}}],["auth.decorator",{"_index":217,"title":{},"body":{"controllers/AdminController.html":{},"guards/AdminGuard.html":{},"controllers/CategoriesController.html":{},"guards/OwnerAdminGuard.html":{},"controllers/ProductController.html":{},"controllers/ReviewsController.html":{},"controllers/RolesController.html":{},"guards/RolesGuard.html":{},"guards/UserGuard.html":{},"controllers/UsersController.html":{}}}],["auth.guard",{"_index":202,"title":{},"body":{"controllers/AdminController.html":{},"controllers/AuthController.html":{},"controllers/CategoriesController.html":{},"controllers/ProductController.html":{},"controllers/ReviewsController.html":{},"controllers/RolesController.html":{},"controllers/UsersController.html":{}}}],["auth.guard.ts",{"_index":2025,"title":{},"body":{"guards/JwtAuthGuard.html":{}}}],["auth.guard.ts:14",{"_index":2027,"title":{},"body":{"guards/JwtAuthGuard.html":{}}}],["auth.guard.ts:17",{"_index":2028,"title":{},"body":{"guards/JwtAuthGuard.html":{}}}],["auth.service",{"_index":1269,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{}}}],["auth/activate/:link",{"_index":1370,"title":{},"body":{"modules/AuthModule.html":{}}}],["auth/auth.constants",{"_index":43,"title":{},"body":{"injectables/ActivateMiddleware.html":{},"guards/AddContentGuard.html":{},"guards/AdminGuard.html":{},"injectables/AdminUserMiddleware.html":{},"guards/AuthFerfershGuard.html":{},"guards/EditContentGuard.html":{},"guards/EditWebsiteGuard.html":{},"injectables/InitializeEmailMiddleware.html":{},"injectables/InitializeUserMiddleware.html":{},"guards/JwtAuthGuard.html":{},"guards/OwnerAdminGuard.html":{},"guards/RefreshAuthGuard.html":{},"guards/RolesGuard.html":{},"injectables/UserAdminMiddleware.html":{},"guards/UserGuard.html":{}}}],["auth/auth.module",{"_index":502,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/CartModule.html":{},"modules/CategoriesModule.html":{},"modules/MailModule.html":{},"modules/OrdersModule.html":{},"modules/OwnerModule.html":{},"modules/ProductModule.html":{},"modules/ReviewsModule.html":{},"modules/RolesModule.html":{},"modules/UsersModule.html":{}}}],["auth/auth.service",{"_index":285,"title":{},"body":{"guards/AdminGuard.html":{},"guards/JwtAuthGuard.html":{},"guards/RefreshAuthGuard.html":{},"guards/RolesGuard.html":{},"modules/RolesModule.html":{},"guards/UserGuard.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{}}}],["auth/change",{"_index":1364,"title":{},"body":{"modules/AuthModule.html":{}}}],["auth/code",{"_index":1367,"title":{},"body":{"modules/AuthModule.html":{}}}],["auth/dto/login.dto",{"_index":727,"title":{},"body":{"injectables/AdminService.html":{},"injectables/OwnerService.html":{}}}],["auth/dto/reset.password.dto",{"_index":728,"title":{},"body":{"injectables/AdminService.html":{},"injectables/OwnerService.html":{},"injectables/UsersService.html":{}}}],["auth/login",{"_index":1361,"title":{},"body":{"modules/AuthModule.html":{}}}],["auth/logout",{"_index":1365,"title":{},"body":{"modules/AuthModule.html":{}}}],["auth/refresh",{"_index":1363,"title":{},"body":{"modules/AuthModule.html":{}}}],["auth/reset",{"_index":1368,"title":{},"body":{"modules/AuthModule.html":{}}}],["auth/signup",{"_index":1362,"title":{},"body":{"modules/AuthModule.html":{}}}],["authcontroller",{"_index":1216,"title":{"controllers/AuthController.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{}}}],["authferfershguard",{"_index":221,"title":{"guards/AuthFerfershGuard.html":{}},"body":{"controllers/AdminController.html":{},"controllers/AuthController.html":{},"guards/AuthFerfershGuard.html":{},"controllers/CategoriesController.html":{},"controllers/ProductController.html":{},"controllers/ReviewsController.html":{},"controllers/RolesController.html":{},"controllers/UsersController.html":{}}}],["authferfershguard)@get('/find_users",{"_index":3352,"title":{},"body":{"controllers/UsersController.html":{}}}],["authferfershguard)@get('/get_users",{"_index":3355,"title":{},"body":{"controllers/UsersController.html":{}}}],["authferfershguard)@get('find_admin",{"_index":173,"title":{},"body":{"controllers/AdminController.html":{}}}],["authferfershguard)@get('get_admins",{"_index":178,"title":{},"body":{"controllers/AdminController.html":{}}}],["authferfershguard)@httpcode(201)@post('create_admin",{"_index":165,"title":{},"body":{"controllers/AdminController.html":{}}}],["authferfershguard)@httpcode(202",{"_index":1235,"title":{},"body":{"controllers/AuthController.html":{}}}],["authferfershguard)@httpcode(202)@patch('update_admin",{"_index":184,"title":{},"body":{"controllers/AdminController.html":{}}}],["authferfershguard)@post('/ban",{"_index":3348,"title":{},"body":{"controllers/UsersController.html":{}}}],["authheader",{"_index":2029,"title":{},"body":{"guards/JwtAuthGuard.html":{},"guards/RefreshAuthGuard.html":{},"guards/RolesGuard.html":{}}}],["authheader.split",{"_index":2032,"title":{},"body":{"guards/JwtAuthGuard.html":{},"guards/RefreshAuthGuard.html":{},"guards/RolesGuard.html":{}}}],["authmiddleware",{"_index":1328,"title":{"injectables/AuthMiddleware.html":{}},"body":{"injectables/AuthMiddleware.html":{},"modules/AuthModule.html":{}}}],["authmodule",{"_index":501,"title":{"modules/AuthModule.html":{}},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CartModule.html":{},"modules/CategoriesModule.html":{},"modules/MailModule.html":{},"modules/OrdersModule.html":{},"modules/OwnerModule.html":{},"modules/ProductModule.html":{},"modules/ReviewsModule.html":{},"modules/RolesModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["author",{"_index":3635,"title":{},"body":{"index.html":{},"properties.html":{}}}],["authorization",{"_index":1336,"title":{},"body":{"injectables/AuthMiddleware.html":{},"injectables/CorsMiddleware.html":{},"injectables/ProductMiddleware.html":{},"interfaces/RequestHeaders.html":{},"injectables/UserMiddleware.html":{},"injectables/UserMiddleware-1.html":{}}}],["authservice",{"_index":272,"title":{},"body":{"guards/AdminGuard.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"guards/JwtAuthGuard.html":{},"guards/RefreshAuthGuard.html":{},"guards/RolesGuard.html":{},"modules/RolesModule.html":{},"guards/UserGuard.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["authuser",{"_index":1376,"title":{"interfaces/AuthUser.html":{}},"body":{"interfaces/AuthUser.html":{},"interfaces/CodeDto.html":{},"interfaces/Payload.html":{},"interfaces/ReturnedAdmin.html":{},"interfaces/ReturnedOwner.html":{},"interfaces/ReturnedUser.html":{},"interfaces/Tokens.html":{}}}],["autoincrement",{"_index":619,"title":{},"body":{"classes/AdminRefreshToken.html":{},"classes/BookmarksProducts.html":{},"classes/Cart.html":{},"classes/CartProduct.html":{},"classes/CartProduct-1.html":{},"classes/Category.html":{},"classes/Order.html":{},"classes/OrderProduct.html":{},"classes/Owner.html":{},"classes/OwnerRefreshToken.html":{},"classes/Product.html":{},"classes/Product-1.html":{},"classes/ProductCategories.html":{},"classes/ProductReviews.html":{},"classes/Review.html":{},"classes/Role.html":{},"classes/UserRefreshToken.html":{},"classes/UserRoles.html":{},"classes/WatchedProducts.html":{}}}],["autoloadmodels",{"_index":1210,"title":{},"body":{"modules/AppModule.html":{}}}],["available",{"_index":3646,"title":{},"body":{"modules.html":{}}}],["await",{"_index":73,"title":{},"body":{"injectables/ActivateMiddleware.html":{},"guards/AddContentGuard.html":{},"guards/AdminGuard.html":{},"injectables/AdminJwtRefreshService.html":{},"injectables/AdminService.html":{},"injectables/AdminUserMiddleware.html":{},"injectables/AppClusterService.html":{},"controllers/AppController.html":{},"guards/AuthFerfershGuard.html":{},"injectables/CategoriesService.html":{},"guards/EditContentGuard.html":{},"guards/EditWebsiteGuard.html":{},"injectables/InitializeEmailMiddleware.html":{},"injectables/InitializeUserMiddleware.html":{},"guards/JwtAuthGuard.html":{},"injectables/LocationMiddleware.html":{},"injectables/MailService.html":{},"interfaces/Msg.html":{},"guards/OwnerAdminGuard.html":{},"injectables/OwnerJwtRefreshService.html":{},"injectables/OwnerService.html":{},"classes/RequestValidator.html":{},"injectables/ReviewsService.html":{},"guards/RolesGuard.html":{},"injectables/RolesService.html":{},"injectables/TasksService.html":{},"modules/TelegramModule.html":{},"injectables/TelegramService.html":{},"injectables/UserAdminMiddleware.html":{},"guards/UserGuard.html":{},"injectables/UserJwtRefreshTokenService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"injectables/ValidateDto.html":{}}}],["backers",{"_index":3627,"title":{},"body":{"index.html":{}}}],["bad",{"_index":68,"title":{},"body":{"injectables/ActivateMiddleware.html":{},"guards/AdminGuard.html":{},"injectables/AdminJwtRefreshService.html":{},"injectables/AdminService.html":{},"injectables/AdminUserMiddleware.html":{},"classes/ApiException.html":{},"injectables/CategoriesService.html":{},"injectables/InitializeEmailMiddleware.html":{},"injectables/InitializeUserMiddleware.html":{},"guards/OwnerAdminGuard.html":{},"injectables/OwnerJwtRefreshService.html":{},"injectables/OwnerService.html":{},"guards/RefreshAuthGuard.html":{},"injectables/UserAdminMiddleware.html":{},"guards/UserGuard.html":{},"injectables/UserJwtRefreshTokenService.html":{},"injectables/UsersService.html":{}}}],["badrequest",{"_index":907,"title":{},"body":{"classes/ApiException.html":{}}}],["badrequest(type",{"_index":915,"title":{},"body":{"classes/ApiException.html":{}}}],["badrequesterror",{"_index":885,"title":{"classes/BadRequestError.html":{}},"body":{"classes/ApiError.html":{},"classes/ApiErrorExceptionFilter.html":{},"classes/BadRequestError.html":{},"classes/NotFoundError.html":{},"classes/RequestValidator.html":{}}}],["badrequesterror(validationerrortext",{"_index":2935,"title":{},"body":{"classes/RequestValidator.html":{}}}],["badrequestexception",{"_index":33,"title":{},"body":{"injectables/ActivateMiddleware.html":{},"injectables/AdminService.html":{},"injectables/AdminUserMiddleware.html":{},"injectables/CorsMiddleware.html":{},"injectables/InitializeEmailMiddleware.html":{},"injectables/InitializeUserMiddleware.html":{},"injectables/OwnerJwtRefreshService.html":{},"injectables/OwnerService.html":{},"injectables/ParseJsonPipe.html":{},"guards/RefreshAuthGuard.html":{},"interfaces/RequestHeaders.html":{},"injectables/UserAdminMiddleware.html":{},"injectables/UserJwtRefreshTokenService.html":{},"injectables/UsersService.html":{}}}],["badrequestexception(`${propertyname",{"_index":2658,"title":{},"body":{"injectables/ParseJsonPipe.html":{}}}],["ban",{"_index":3345,"title":{},"body":{"controllers/UsersController.html":{}}}],["banreason",{"_index":1394,"title":{},"body":{"classes/BanUserDto.html":{}}}],["banuser",{"_index":3340,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["banuser(@body",{"_index":3374,"title":{},"body":{"controllers/UsersController.html":{}}}],["banuser(dto",{"_index":3343,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["banuserdto",{"_index":1391,"title":{"classes/BanUserDto.html":{}},"body":{"classes/BanUserDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["base64",{"_index":471,"title":{},"body":{"injectables/AdminJwtRefreshService.html":{},"controllers/AppController.html":{},"injectables/OwnerJwtRefreshService.html":{}}}],["base64').tostring",{"_index":296,"title":{},"body":{"guards/AdminGuard.html":{},"guards/OwnerAdminGuard.html":{},"guards/UserGuard.html":{}}}],["base64').tostring('ascii",{"_index":2017,"title":{},"body":{"injectables/InitializeUserMiddleware.html":{},"guards/JwtAuthGuard.html":{},"guards/RolesGuard.html":{}}}],["bcrypt",{"_index":717,"title":{},"body":{"injectables/AdminService.html":{},"injectables/OwnerService.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["bcrypt.compare",{"_index":799,"title":{},"body":{"injectables/AdminService.html":{},"injectables/OwnerService.html":{},"injectables/UsersService.html":{}}}],["bcrypt.gensalt(salt_rounds",{"_index":815,"title":{},"body":{"injectables/AdminService.html":{},"injectables/OwnerService.html":{},"injectables/UsersService.html":{}}}],["bcrypt.hash(dto.password",{"_index":2609,"title":{},"body":{"injectables/OwnerService.html":{}}}],["bcrypt.hash(owner[4",{"_index":2594,"title":{},"body":{"injectables/OwnerService.html":{}}}],["bcrypt.hash(password",{"_index":817,"title":{},"body":{"injectables/AdminService.html":{},"injectables/OwnerService.html":{},"injectables/UsersService.html":{}}}],["bcrypt.hash(userdto.password",{"_index":3439,"title":{},"body":{"injectables/UsersService.html":{}}}],["bearer",{"_index":2031,"title":{},"body":{"guards/JwtAuthGuard.html":{},"guards/RefreshAuthGuard.html":{},"guards/RolesGuard.html":{}}}],["behind",{"_index":213,"title":{},"body":{"controllers/AdminController.html":{},"controllers/AuthController.html":{},"controllers/CategoriesController.html":{},"modules/CoreModule.html":{},"controllers/ProductController.html":{},"controllers/ReviewsController.html":{},"controllers/RolesController.html":{},"injectables/ThrottlerBehindProxyGuard.html":{},"controllers/UsersController.html":{}}}],["belongsto",{"_index":647,"title":{},"body":{"classes/AdminRefreshToken.html":{},"classes/Cart.html":{},"classes/CartProduct.html":{},"classes/CartProduct-1.html":{},"classes/Order.html":{},"classes/OrderProduct.html":{},"classes/OwnerRefreshToken.html":{},"classes/Product.html":{},"classes/Product-1.html":{},"classes/Review.html":{},"classes/UserRefreshToken.html":{}}}],["belongsto(undefined",{"_index":587,"title":{},"body":{"classes/AdminRefreshToken.html":{},"classes/Cart.html":{},"classes/CartProduct.html":{},"classes/CartProduct-1.html":{},"classes/Order.html":{},"classes/OrderProduct.html":{},"classes/OwnerRefreshToken.html":{},"classes/Product.html":{},"classes/Product-1.html":{},"classes/UserRefreshToken.html":{}}}],["belongstomany",{"_index":1441,"title":{},"body":{"classes/Cart.html":{},"classes/Category.html":{},"classes/Order.html":{},"classes/Owner.html":{},"classes/Product.html":{},"classes/Product-1.html":{},"classes/Review.html":{},"classes/Role.html":{}}}],["belongstomany(undefined",{"_index":1429,"title":{},"body":{"classes/Cart.html":{},"classes/Category.html":{},"classes/Order.html":{},"classes/Owner.html":{},"classes/Product.html":{},"classes/Product-1.html":{},"classes/Review.html":{},"classes/Role.html":{}}}],["below",{"_index":2237,"title":{},"body":{"injectables/MailService.html":{}}}],["better",{"_index":2239,"title":{},"body":{"injectables/MailService.html":{}}}],["block",{"_index":2232,"title":{},"body":{"injectables/MailService.html":{}}}],["block!important",{"_index":2235,"title":{},"body":{"injectables/MailService.html":{}}}],["body",{"_index":187,"title":{},"body":{"controllers/AdminController.html":{},"controllers/AuthController.html":{},"controllers/CategoriesController.html":{},"injectables/MailService.html":{},"controllers/ProductController.html":{},"controllers/ReviewsController.html":{},"controllers/RolesController.html":{},"controllers/UsersController.html":{},"dependencies.html":{}}}],["body(new",{"_index":253,"title":{},"body":{"controllers/AdminController.html":{},"controllers/AuthController.html":{},"controllers/ProductController.html":{}}}],["bookmarks_products",{"_index":1407,"title":{},"body":{"classes/BookmarksProducts.html":{}}}],["bookmarksproducts",{"_index":1139,"title":{"classes/BookmarksProducts.html":{}},"body":{"modules/AppModule.html":{},"classes/BookmarksProducts.html":{},"modules/ProductModule.html":{},"modules/UsersModule.html":{}}}],["boolean",{"_index":93,"title":{},"body":{"guards/AddContentGuard.html":{},"guards/AdminGuard.html":{},"interfaces/AdminInterface.html":{},"interfaces/AdminRefreshTokenCreationAttrbs.html":{},"interfaces/AdmincreationAttrbs.html":{},"guards/AuthFerfershGuard.html":{},"interfaces/AuthUser.html":{},"interfaces/CodeDto.html":{},"injectables/CorsMiddleware.html":{},"classes/CreateAccessTokenDto.html":{},"classes/CreateAdminDto.html":{},"classes/CreateAdminRefreshTokenDto.html":{},"classes/CreateOwnerRefreshTokenDto.html":{},"classes/CreateUserRefreshTokenDto.html":{},"guards/EditContentGuard.html":{},"guards/EditWebsiteGuard.html":{},"injectables/FilesService.html":{},"interfaces/InitializeUser.html":{},"guards/JwtAuthGuard.html":{},"classes/MatchConstraint.html":{},"classes/Owner.html":{},"guards/OwnerAdminGuard.html":{},"interfaces/Payload.html":{},"controllers/ProductController.html":{},"guards/RefreshAuthGuard.html":{},"interfaces/RequestHeaders.html":{},"interfaces/ReturnedAdmin.html":{},"interfaces/ReturnedOwner.html":{},"interfaces/ReturnedUser.html":{},"interfaces/RolecreationAttrbs.html":{},"guards/RolesGuard.html":{},"interfaces/Tokens.html":{},"guards/UserGuard.html":{},"interfaces/UserInterface.html":{},"interfaces/UserRefreshCreationAttrbs.html":{},"interfaces/UsercreationAttrbs.html":{},"interfaces/ValidateUser.html":{},"interfaces/fileCreated.html":{}}}],["boolean(process.env.mailer_security?.trim",{"_index":2072,"title":{},"body":{"modules/MailModule.html":{}}}],["border",{"_index":2148,"title":{},"body":{"injectables/MailService.html":{}}}],["bot",{"_index":3203,"title":{},"body":{"injectables/TelegramService.html":{}}}],["bottom:0!important",{"_index":2215,"title":{},"body":{"injectables/MailService.html":{}}}],["bottom:20px!important",{"_index":2217,"title":{},"body":{"injectables/MailService.html":{}}}],["bounceback",{"_index":1158,"title":{},"body":{"modules/AppModule.html":{}}}],["brdr",{"_index":2199,"title":{},"body":{"injectables/MailService.html":{}}}],["browse",{"_index":3644,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":3642,"title":{},"body":{"modules.html":{}}}],["btn",{"_index":2194,"title":{},"body":{"injectables/MailService.html":{}}}],["buffer",{"_index":464,"title":{},"body":{"injectables/AdminJwtRefreshService.html":{},"controllers/AppController.html":{},"injectables/FilesService.html":{},"injectables/OwnerJwtRefreshService.html":{},"interfaces/fileCreated.html":{}}}],["buffer.concat([cipher.update(value",{"_index":469,"title":{},"body":{"injectables/AdminJwtRefreshService.html":{},"controllers/AppController.html":{},"injectables/OwnerJwtRefreshService.html":{}}}],["buffer.from(accesstoken",{"_index":2033,"title":{},"body":{"guards/JwtAuthGuard.html":{}}}],["buffer.from(refreshtoken",{"_index":295,"title":{},"body":{"guards/AdminGuard.html":{},"injectables/InitializeUserMiddleware.html":{},"guards/OwnerAdminGuard.html":{},"guards/UserGuard.html":{}}}],["buffer.from(token",{"_index":3061,"title":{},"body":{"guards/RolesGuard.html":{}}}],["building",{"_index":3595,"title":{},"body":{"index.html":{}}}],["bull",{"_index":1960,"title":{},"body":{"classes/GarbageCollectingProcessor.html":{},"dependencies.html":{}}}],["bullmodule",{"_index":1132,"title":{},"body":{"modules/AppModule.html":{},"modules/CoreModule.html":{}}}],["bullmodule.forroot",{"_index":1153,"title":{},"body":{"modules/AppModule.html":{}}}],["bullmodule.registerqueue",{"_index":1663,"title":{},"body":{"modules/CoreModule.html":{}}}],["button",{"_index":2126,"title":{},"body":{"injectables/MailService.html":{}}}],["button.es",{"_index":2154,"title":{},"body":{"injectables/MailService.html":{}}}],["bytes",{"_index":351,"title":{},"body":{"injectables/AdminJwtRefreshService.html":{},"controllers/AppController.html":{},"injectables/OwnerJwtRefreshService.html":{}}}],["c",{"_index":2183,"title":{},"body":{"injectables/MailService.html":{}}}],["cache",{"_index":3527,"title":{},"body":{"dependencies.html":{}}}],["cache_manager",{"_index":1517,"title":{},"body":{"controllers/CategoriesController.html":{}}}],["cacheinterceptor",{"_index":1515,"title":{},"body":{"controllers/CategoriesController.html":{},"controllers/ProductController.html":{},"controllers/ReviewsController.html":{},"controllers/RolesController.html":{}}}],["cachemodule",{"_index":1106,"title":{},"body":{"modules/AppModule.html":{}}}],["cachemodule.register",{"_index":1147,"title":{},"body":{"modules/AppModule.html":{}}}],["cachettl",{"_index":1516,"title":{},"body":{"controllers/CategoriesController.html":{}}}],["cachettl(200",{"_index":1530,"title":{},"body":{"controllers/CategoriesController.html":{}}}],["callback",{"_index":970,"title":{},"body":{"injectables/AppClusterService.html":{},"modules/AppModule.html":{},"injectables/FilesService.html":{},"interfaces/Msg.html":{},"controllers/ProductController.html":{},"injectables/TasksService.html":{},"interfaces/fileCreated.html":{}}}],["callback(new",{"_index":1190,"title":{},"body":{"modules/AppModule.html":{},"injectables/FilesService.html":{},"controllers/ProductController.html":{},"interfaces/fileCreated.html":{}}}],["callback(null",{"_index":1189,"title":{},"body":{"modules/AppModule.html":{},"injectables/FilesService.html":{},"controllers/ProductController.html":{},"interfaces/fileCreated.html":{}}}],["callbackfunction",{"_index":968,"title":{},"body":{"injectables/AppClusterService.html":{},"interfaces/Msg.html":{},"miscellaneous/typealiases.html":{}}}],["callhandler",{"_index":1970,"title":{},"body":{"injectables/GlobalInterceptor.html":{}}}],["canactivate",{"_index":85,"title":{},"body":{"guards/AddContentGuard.html":{},"guards/AdminGuard.html":{},"guards/AuthFerfershGuard.html":{},"guards/EditContentGuard.html":{},"guards/EditWebsiteGuard.html":{},"guards/JwtAuthGuard.html":{},"guards/OwnerAdminGuard.html":{},"guards/RefreshAuthGuard.html":{},"guards/RolesGuard.html":{},"guards/UserGuard.html":{}}}],["canactivate(context",{"_index":89,"title":{},"body":{"guards/AddContentGuard.html":{},"guards/AdminGuard.html":{},"guards/AuthFerfershGuard.html":{},"guards/EditContentGuard.html":{},"guards/EditWebsiteGuard.html":{},"guards/JwtAuthGuard.html":{},"guards/OwnerAdminGuard.html":{},"guards/RefreshAuthGuard.html":{},"guards/RolesGuard.html":{},"guards/UserGuard.html":{}}}],["card",{"_index":1411,"title":{},"body":{"controllers/CardController.html":{}}}],["cardcontroller",{"_index":1409,"title":{"controllers/CardController.html":{}},"body":{"controllers/CardController.html":{},"modules/CartModule.html":{}}}],["cardservice",{"_index":1413,"title":{"injectables/CardService.html":{}},"body":{"injectables/CardService.html":{},"modules/CartModule.html":{},"overview.html":{}}}],["cart",{"_index":535,"title":{"classes/Cart.html":{}},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"classes/Cart.html":{},"modules/CartModule.html":{},"classes/CartProduct.html":{},"classes/CartProduct-1.html":{},"modules/CoreModule.html":{},"modules/MailModule.html":{},"modules/OrdersModule.html":{},"modules/OwnerModule.html":{},"classes/Product.html":{},"classes/Product-1.html":{},"modules/ProductModule.html":{},"modules/ReviewsModule.html":{},"modules/RolesModule.html":{},"modules/UsersModule.html":{}}}],["cart.controller",{"_index":1454,"title":{},"body":{"modules/CartModule.html":{}}}],["cart.model",{"_index":1475,"title":{},"body":{"classes/CartProduct.html":{},"classes/CartProduct-1.html":{}}}],["cart.product.model",{"_index":1442,"title":{},"body":{"classes/Cart.html":{}}}],["cart.service",{"_index":1453,"title":{},"body":{"modules/CartModule.html":{}}}],["cart/cart.module",{"_index":1124,"title":{},"body":{"modules/AppModule.html":{},"modules/OrdersModule.html":{},"modules/ProductModule.html":{},"modules/ReviewsModule.html":{}}}],["cart/models/cart",{"_index":2696,"title":{},"body":{"classes/Product.html":{}}}],["cart/models/cart.model",{"_index":536,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/CoreModule.html":{},"modules/MailModule.html":{},"modules/OrdersModule.html":{},"modules/OwnerModule.html":{},"classes/Product.html":{},"classes/Product-1.html":{},"modules/ProductModule.html":{},"modules/ReviewsModule.html":{},"modules/RolesModule.html":{},"modules/UsersModule.html":{}}}],["cart/models/cart.product.model",{"_index":534,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/CoreModule.html":{},"modules/MailModule.html":{},"modules/OrdersModule.html":{},"modules/OwnerModule.html":{},"classes/Product-1.html":{},"modules/ProductModule.html":{},"modules/ReviewsModule.html":{},"modules/RolesModule.html":{},"modules/UsersModule.html":{}}}],["cart_products",{"_index":1487,"title":{},"body":{"classes/CartProduct-1.html":{}}}],["cartid",{"_index":1459,"title":{},"body":{"classes/CartProduct.html":{},"classes/CartProduct-1.html":{}}}],["cartmodule",{"_index":1097,"title":{"modules/CartModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CartModule.html":{},"modules/OrdersModule.html":{},"modules/ProductModule.html":{},"modules/ReviewsModule.html":{},"modules.html":{},"overview.html":{}}}],["cartproduct",{"_index":533,"title":{"classes/CartProduct.html":{},"classes/CartProduct-1.html":{}},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"classes/Cart.html":{},"modules/CartModule.html":{},"classes/CartProduct.html":{},"classes/CartProduct-1.html":{},"modules/CoreModule.html":{},"modules/MailModule.html":{},"modules/OrdersModule.html":{},"modules/OwnerModule.html":{},"classes/Product.html":{},"classes/Product-1.html":{},"modules/ProductModule.html":{},"modules/ReviewsModule.html":{},"modules/RolesModule.html":{},"modules/UsersModule.html":{}}}],["cartproducts",{"_index":1416,"title":{},"body":{"classes/Cart.html":{}}}],["carts",{"_index":1443,"title":{},"body":{"classes/Cart.html":{},"classes/Product.html":{},"classes/Product-1.html":{}}}],["cartstatus",{"_index":1417,"title":{},"body":{"classes/Cart.html":{}}}],["casler",{"_index":1773,"title":{},"body":{"classes/CreateAdminDto.html":{},"classes/CreateOwnerDto.html":{}}}],["catch",{"_index":399,"title":{},"body":{"injectables/AdminJwtRefreshService.html":{},"injectables/AdminUserMiddleware.html":{},"classes/AllExceptionsFilter.html":{},"classes/ApiErrorExceptionFilter.html":{},"classes/ApiExceptionFilter.html":{},"controllers/AppController.html":{},"controllers/AuthController.html":{},"injectables/AuthMiddleware.html":{},"injectables/FilesService.html":{},"classes/HttpExceptionFilter.html":{},"injectables/InitializeEmailMiddleware.html":{},"injectables/InitializeUserMiddleware.html":{},"guards/JwtAuthGuard.html":{},"injectables/MailService.html":{},"injectables/OwnerJwtRefreshService.html":{},"injectables/ParseJsonPipe.html":{},"controllers/ProductController.html":{},"injectables/ProductMiddleware.html":{},"controllers/ReviewsController.html":{},"controllers/RolesController.html":{},"guards/RolesGuard.html":{},"injectables/TasksService.html":{},"injectables/UserAdminMiddleware.html":{},"injectables/UserJwtRefreshTokenService.html":{},"injectables/UserMiddleware.html":{},"injectables/UserMiddleware-1.html":{},"interfaces/fileCreated.html":{}}}],["catch(apiexception",{"_index":959,"title":{},"body":{"classes/ApiExceptionFilter.html":{}}}],["catch(badrequesterror",{"_index":894,"title":{},"body":{"classes/ApiErrorExceptionFilter.html":{}}}],["catch(exception",{"_index":848,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"classes/ApiErrorExceptionFilter.html":{},"classes/ApiExceptionFilter.html":{},"classes/HttpExceptionFilter.html":{}}}],["catch(httpexception",{"_index":1983,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["catcherror",{"_index":1976,"title":{},"body":{"injectables/GlobalInterceptor.html":{}}}],["catcherror((err",{"_index":1980,"title":{},"body":{"injectables/GlobalInterceptor.html":{}}}],["categories",{"_index":1490,"title":{},"body":{"controllers/CategoriesController.html":{},"injectables/CategoriesService.html":{},"classes/Category.html":{},"interfaces/CategoryCreationAtrb.html":{},"classes/CreateProductDto.html":{},"classes/Nested.html":{},"classes/Nested-1.html":{},"classes/Product.html":{},"classes/Product-1.html":{},"controllers/ProductController.html":{},"interfaces/ProductCreationAttrs.html":{},"interfaces/ReturnedCategory.html":{},"interfaces/ReturnedProduct.html":{},"interfaces/ReturnedProducts.html":{},"interfaces/ReturnedReview.html":{},"interfaces/ReviewCreationAtrb.html":{},"classes/UpdateProductDto.html":{}}}],["categories'})@apiresponse({status",{"_index":1498,"title":{},"body":{"controllers/CategoriesController.html":{}}}],["categories.controller",{"_index":1545,"title":{},"body":{"modules/CategoriesModule.html":{}}}],["categories.map((category",{"_index":1579,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["categories.service",{"_index":1522,"title":{},"body":{"controllers/CategoriesController.html":{},"modules/CategoriesModule.html":{}}}],["categories/categories.module",{"_index":1129,"title":{},"body":{"modules/AppModule.html":{},"modules/CartModule.html":{},"modules/OrdersModule.html":{},"modules/ProductModule.html":{},"modules/ReviewsModule.html":{}}}],["categories/categories.service",{"_index":2887,"title":{},"body":{"modules/ProductModule.html":{},"modules/ReviewsModule.html":{}}}],["categories/create_category",{"_index":1547,"title":{},"body":{"modules/CategoriesModule.html":{}}}],["categories/delete_category",{"_index":1548,"title":{},"body":{"modules/CategoriesModule.html":{}}}],["categories/models/category.model",{"_index":538,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/CartModule.html":{},"modules/CoreModule.html":{},"modules/MailModule.html":{},"modules/OrdersModule.html":{},"modules/OwnerModule.html":{},"classes/Product.html":{},"classes/Product-1.html":{},"modules/ProductModule.html":{},"modules/ReviewsModule.html":{},"modules/RolesModule.html":{},"modules/UsersModule.html":{}}}],["categories/models/product.categories.model",{"_index":540,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/CartModule.html":{},"modules/CoreModule.html":{},"modules/MailModule.html":{},"modules/OrdersModule.html":{},"modules/OwnerModule.html":{},"classes/Product.html":{},"classes/Product-1.html":{},"modules/ProductModule.html":{},"modules/ReviewsModule.html":{},"modules/RolesModule.html":{},"modules/UsersModule.html":{}}}],["categoriescontroller",{"_index":1488,"title":{"controllers/CategoriesController.html":{}},"body":{"controllers/CategoriesController.html":{},"modules/CategoriesModule.html":{}}}],["categoriesmodule",{"_index":1098,"title":{"modules/CategoriesModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CartModule.html":{},"modules/CategoriesModule.html":{},"modules/OrdersModule.html":{},"modules/ProductModule.html":{},"modules/ReviewsModule.html":{},"modules.html":{},"overview.html":{}}}],["categoriesservice",{"_index":1521,"title":{"injectables/CategoriesService.html":{}},"body":{"controllers/CategoriesController.html":{},"modules/CategoriesModule.html":{},"injectables/CategoriesService.html":{},"modules/ProductModule.html":{},"modules/ReviewsModule.html":{},"overview.html":{}}}],["category",{"_index":537,"title":{"classes/Category.html":{}},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/CartModule.html":{},"controllers/CategoriesController.html":{},"modules/CategoriesModule.html":{},"injectables/CategoriesService.html":{},"classes/Category.html":{},"modules/CoreModule.html":{},"modules/MailModule.html":{},"modules/OrdersModule.html":{},"modules/OwnerModule.html":{},"classes/Product.html":{},"classes/Product-1.html":{},"classes/ProductCategories.html":{},"modules/ProductModule.html":{},"modules/ReviewsModule.html":{},"modules/RolesModule.html":{},"modules/UsersModule.html":{}}}],["category.constants",{"_index":1572,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["category.createdat",{"_index":1585,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["category.en",{"_index":1582,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["category.id",{"_index":1580,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["category.length",{"_index":1577,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["category.model",{"_index":2756,"title":{},"body":{"classes/ProductCategories.html":{}}}],["category.rs",{"_index":1583,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["category.ru",{"_index":1584,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["category.ua",{"_index":1581,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["category.updatedat",{"_index":1586,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["categorycreationatrb",{"_index":1613,"title":{"interfaces/CategoryCreationAtrb.html":{}},"body":{"classes/Category.html":{},"interfaces/CategoryCreationAtrb.html":{},"interfaces/ProductCreationAttrs.html":{},"interfaces/ReturnedCategory.html":{},"interfaces/ReturnedProduct.html":{},"interfaces/ReturnedProducts.html":{},"interfaces/ReturnedReview.html":{},"interfaces/ReviewCreationAtrb.html":{}}}],["categorydto",{"_index":1503,"title":{},"body":{"controllers/CategoriesController.html":{},"injectables/CategoriesService.html":{}}}],["categorydto.en",{"_index":1589,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["categorydto.rs",{"_index":1590,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["categorydto.ru",{"_index":1591,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["categorydto.ua",{"_index":1588,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["categoryid",{"_index":1508,"title":{},"body":{"controllers/CategoriesController.html":{},"injectables/CategoriesService.html":{},"classes/ProductCategories.html":{}}}],["categoryids",{"_index":1562,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["categoryrepository",{"_index":1556,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["category})@httpcode(201)@roles('owner",{"_index":1499,"title":{},"body":{"controllers/CategoriesController.html":{}}}],["cb",{"_index":3115,"title":{},"body":{"injectables/TasksService.html":{}}}],["cb(ownerrefreshtoken",{"_index":3157,"title":{},"body":{"injectables/TasksService.html":{}}}],["cb(refreshtokenid",{"_index":3167,"title":{},"body":{"injectables/TasksService.html":{}}}],["cell!important",{"_index":2229,"title":{},"body":{"injectables/MailService.html":{}}}],["changedto",{"_index":1230,"title":{"classes/ChangeDto.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"classes/ChangeDto.html":{}}}],["changepassword",{"_index":669,"title":{},"body":{"injectables/AdminService.html":{},"controllers/AuthController.html":{},"injectables/OwnerService.html":{},"injectables/UsersService.html":{}}}],["changepassword(adminid",{"_index":684,"title":{},"body":{"injectables/AdminService.html":{}}}],["changepassword(ownerid",{"_index":2564,"title":{},"body":{"injectables/OwnerService.html":{}}}],["changepassword(response",{"_index":1229,"title":{},"body":{"controllers/AuthController.html":{}}}],["changepassword(userid",{"_index":3405,"title":{},"body":{"injectables/UsersService.html":{}}}],["changing",{"_index":1231,"title":{},"body":{"controllers/AuthController.html":{}}}],["chatid",{"_index":1991,"title":{},"body":{"interfaces/ITelegramModuleAsyncOptions.html":{},"interfaces/ITelegramOptions.html":{},"injectables/TelegramService.html":{}}}],["checkadmin",{"_index":670,"title":{},"body":{"injectables/AdminService.html":{}}}],["checkadmin(payload",{"_index":686,"title":{},"body":{"injectables/AdminService.html":{}}}],["checkedout",{"_index":1445,"title":{},"body":{"classes/Cart.html":{}}}],["checkowner",{"_index":2555,"title":{},"body":{"injectables/OwnerService.html":{}}}],["checkowner(payload",{"_index":2566,"title":{},"body":{"injectables/OwnerService.html":{}}}],["chrome/105.0.0.0",{"_index":598,"title":{},"body":{"classes/AdminRefreshToken.html":{},"classes/CreateAdminRefreshTokenDto.html":{},"classes/CreateOwnerDto.html":{},"classes/CreateOwnerRefreshTokenDto.html":{},"classes/Owner.html":{},"classes/OwnerRefreshToken.html":{},"injectables/UserJwtRefreshTokenService.html":{}}}],["cipher",{"_index":465,"title":{},"body":{"injectables/AdminJwtRefreshService.html":{},"controllers/AppController.html":{},"injectables/OwnerJwtRefreshService.html":{}}}],["cipher.final()]).tostring",{"_index":470,"title":{},"body":{"injectables/AdminJwtRefreshService.html":{},"controllers/AppController.html":{},"injectables/OwnerJwtRefreshService.html":{}}}],["city",{"_index":1385,"title":{},"body":{"interfaces/AuthUser.html":{},"interfaces/CodeDto.html":{},"interfaces/Payload.html":{},"interfaces/ReturnedAdmin.html":{},"interfaces/ReturnedOwner.html":{},"interfaces/ReturnedUser.html":{},"interfaces/Tokens.html":{},"classes/UpdateUserDto.html":{}}}],["city'})@isstring()@minlength(2)@maxlength(50",{"_index":3239,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["class",{"_index":52,"title":{"classes/AddRoleDto.html":{},"classes/AdminRefreshToken.html":{},"classes/AllExceptionsFilter.html":{},"classes/ApiError.html":{},"classes/ApiErrorExceptionFilter.html":{},"classes/ApiException.html":{},"classes/ApiExceptionFilter.html":{},"classes/BadRequestError.html":{},"classes/BanUserDto.html":{},"classes/BookmarksProducts.html":{},"classes/Cart.html":{},"classes/CartProduct.html":{},"classes/CartProduct-1.html":{},"classes/Category.html":{},"classes/ChangeDto.html":{},"classes/CreateAccessTokenDto.html":{},"classes/CreateAdminDto.html":{},"classes/CreateAdminRefreshTokenDto.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateOwnerDto.html":{},"classes/CreateOwnerRefreshTokenDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateReviewDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserRefreshTokenDto.html":{},"classes/GarbageCollectingProcessor.html":{},"classes/HttpExceptionFilter.html":{},"classes/JwtRefreshTokenDeletedEvent.html":{},"classes/LoginDto.html":{},"classes/MatchConstraint.html":{},"classes/Nested.html":{},"classes/Nested-1.html":{},"classes/NotFoundError.html":{},"classes/Order.html":{},"classes/OrderProduct.html":{},"classes/Owner.html":{},"classes/OwnerRefreshToken.html":{},"classes/ParseFormDataJsonPipe.html":{},"classes/Product.html":{},"classes/Product-1.html":{},"classes/ProductCategories.html":{},"classes/ProductReviews.html":{},"classes/RequestValidator.html":{},"classes/ResetDto.html":{},"classes/Review.html":{},"classes/Role.html":{},"classes/SignupDto.html":{},"classes/UpdateCategoryDto.html":{},"classes/UpdateProductDto.html":{},"classes/UpdateUserDto.html":{},"classes/UserRefreshToken.html":{},"classes/UserRoles.html":{},"classes/ValidationException.html":{},"classes/WatchedProducts.html":{}},"body":{"injectables/ActivateMiddleware.html":{},"guards/AddContentGuard.html":{},"classes/AddRoleDto.html":{},"controllers/AdminController.html":{},"guards/AdminGuard.html":{},"injectables/AdminJwtRefreshService.html":{},"modules/AdminModule.html":{},"classes/AdminRefreshToken.html":{},"injectables/AdminService.html":{},"injectables/AdminUserMiddleware.html":{},"classes/AllExceptionsFilter.html":{},"classes/ApiError.html":{},"classes/ApiErrorExceptionFilter.html":{},"classes/ApiException.html":{},"classes/ApiExceptionFilter.html":{},"injectables/AppClusterService.html":{},"controllers/AppController.html":{},"injectables/AppListener.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"guards/AuthFerfershGuard.html":{},"injectables/AuthMiddleware.html":{},"modules/AuthModule.html":{},"classes/BadRequestError.html":{},"classes/BanUserDto.html":{},"classes/BookmarksProducts.html":{},"controllers/CardController.html":{},"injectables/CardService.html":{},"classes/Cart.html":{},"modules/CartModule.html":{},"classes/CartProduct.html":{},"classes/CartProduct-1.html":{},"controllers/CategoriesController.html":{},"modules/CategoriesModule.html":{},"injectables/CategoriesService.html":{},"classes/Category.html":{},"classes/ChangeDto.html":{},"modules/CoreModule.html":{},"injectables/CorsMiddleware.html":{},"classes/CreateAccessTokenDto.html":{},"classes/CreateAdminDto.html":{},"classes/CreateAdminRefreshTokenDto.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateOwnerDto.html":{},"classes/CreateOwnerRefreshTokenDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateReviewDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserRefreshTokenDto.html":{},"guards/EditContentGuard.html":{},"guards/EditWebsiteGuard.html":{},"injectables/FilesService.html":{},"classes/GarbageCollectingProcessor.html":{},"injectables/GlobalInterceptor.html":{},"classes/HttpExceptionFilter.html":{},"injectables/InitializeEmailMiddleware.html":{},"injectables/InitializeUserMiddleware.html":{},"guards/JwtAuthGuard.html":{},"classes/JwtRefreshTokenDeletedEvent.html":{},"injectables/LocationMiddleware.html":{},"classes/LoginDto.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"classes/MatchConstraint.html":{},"interfaces/Msg.html":{},"classes/Nested.html":{},"classes/Nested-1.html":{},"classes/NotFoundError.html":{},"classes/Order.html":{},"classes/OrderProduct.html":{},"controllers/OrdersController.html":{},"modules/OrdersModule.html":{},"injectables/OrdersService.html":{},"classes/Owner.html":{},"guards/OwnerAdminGuard.html":{},"injectables/OwnerJwtRefreshService.html":{},"modules/OwnerModule.html":{},"classes/OwnerRefreshToken.html":{},"injectables/OwnerService.html":{},"classes/ParseFormDataJsonPipe.html":{},"injectables/ParseJsonPipe.html":{},"classes/Product.html":{},"classes/Product-1.html":{},"classes/ProductCategories.html":{},"controllers/ProductController.html":{},"injectables/ProductMiddleware.html":{},"modules/ProductModule.html":{},"classes/ProductReviews.html":{},"guards/RefreshAuthGuard.html":{},"interfaces/RequestHeaders.html":{},"classes/RequestValidator.html":{},"classes/ResetDto.html":{},"classes/Review.html":{},"controllers/ReviewsController.html":{},"modules/ReviewsModule.html":{},"injectables/ReviewsService.html":{},"classes/Role.html":{},"controllers/RolesController.html":{},"guards/RolesGuard.html":{},"modules/RolesModule.html":{},"injectables/RolesService.html":{},"classes/SignupDto.html":{},"injectables/TasksService.html":{},"modules/TelegramModule.html":{},"injectables/TelegramService.html":{},"injectables/ThrottlerBehindProxyGuard.html":{},"classes/UpdateCategoryDto.html":{},"classes/UpdateProductDto.html":{},"classes/UpdateUserDto.html":{},"injectables/UserAdminMiddleware.html":{},"guards/UserGuard.html":{},"injectables/UserJwtRefreshTokenService.html":{},"injectables/UserMiddleware.html":{},"injectables/UserMiddleware-1.html":{},"classes/UserRefreshToken.html":{},"classes/UserRoles.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"injectables/ValidateDto.html":{},"classes/ValidationException.html":{},"classes/WatchedProducts.html":{},"dependencies.html":{},"interfaces/fileCreated.html":{}}}],["class=\"gmail",{"_index":2178,"title":{},"body":{"injectables/MailService.html":{}}}],["classconstructor",{"_index":2920,"title":{},"body":{"classes/RequestValidator.html":{}}}],["classes",{"_index":121,"title":{},"body":{"classes/AddRoleDto.html":{},"classes/AdminRefreshToken.html":{},"classes/AllExceptionsFilter.html":{},"classes/ApiError.html":{},"classes/ApiErrorExceptionFilter.html":{},"classes/ApiException.html":{},"classes/ApiExceptionFilter.html":{},"classes/BadRequestError.html":{},"classes/BanUserDto.html":{},"classes/BookmarksProducts.html":{},"classes/Cart.html":{},"classes/CartProduct.html":{},"classes/CartProduct-1.html":{},"classes/Category.html":{},"classes/ChangeDto.html":{},"classes/CreateAccessTokenDto.html":{},"classes/CreateAdminDto.html":{},"classes/CreateAdminRefreshTokenDto.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateOwnerDto.html":{},"classes/CreateOwnerRefreshTokenDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateReviewDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserRefreshTokenDto.html":{},"classes/GarbageCollectingProcessor.html":{},"classes/HttpExceptionFilter.html":{},"classes/JwtRefreshTokenDeletedEvent.html":{},"classes/LoginDto.html":{},"classes/MatchConstraint.html":{},"classes/Nested.html":{},"classes/Nested-1.html":{},"classes/NotFoundError.html":{},"classes/Order.html":{},"classes/OrderProduct.html":{},"classes/Owner.html":{},"classes/OwnerRefreshToken.html":{},"classes/ParseFormDataJsonPipe.html":{},"classes/Product.html":{},"classes/Product-1.html":{},"classes/ProductCategories.html":{},"classes/ProductReviews.html":{},"classes/RequestValidator.html":{},"classes/ResetDto.html":{},"classes/Review.html":{},"classes/Role.html":{},"classes/SignupDto.html":{},"classes/UpdateCategoryDto.html":{},"classes/UpdateProductDto.html":{},"classes/UpdateUserDto.html":{},"classes/UserRefreshToken.html":{},"classes/UserRoles.html":{},"classes/ValidationException.html":{},"classes/WatchedProducts.html":{},"overview.html":{}}}],["classinstance",{"_index":2922,"title":{},"body":{"classes/RequestValidator.html":{}}}],["classserializerinterceptor",{"_index":189,"title":{},"body":{"controllers/AdminController.html":{},"controllers/AuthController.html":{},"controllers/CategoriesController.html":{},"controllers/ProductController.html":{},"controllers/ReviewsController.html":{},"controllers/UsersController.html":{}}}],["cleartimeout(timeout",{"_index":1025,"title":{},"body":{"injectables/AppClusterService.html":{},"interfaces/Msg.html":{}}}],["click",{"_index":2236,"title":{},"body":{"injectables/MailService.html":{}}}],["cluster",{"_index":977,"title":{},"body":{"injectables/AppClusterService.html":{},"interfaces/Msg.html":{}}}],["cluster.fork",{"_index":996,"title":{},"body":{"injectables/AppClusterService.html":{},"interfaces/Msg.html":{}}}],["cluster.isprimary",{"_index":986,"title":{},"body":{"injectables/AppClusterService.html":{},"interfaces/Msg.html":{}}}],["cluster.workers",{"_index":1006,"title":{},"body":{"injectables/AppClusterService.html":{},"interfaces/Msg.html":{}}}],["cluster.workers[id].on('message",{"_index":1007,"title":{},"body":{"injectables/AppClusterService.html":{},"interfaces/Msg.html":{}}}],["cluster_adminmodule",{"_index":479,"title":{},"body":{"modules/AdminModule.html":{},"overview.html":{}}}],["cluster_adminmodule_exports",{"_index":480,"title":{},"body":{"modules/AdminModule.html":{},"overview.html":{}}}],["cluster_adminmodule_providers",{"_index":481,"title":{},"body":{"modules/AdminModule.html":{},"overview.html":{}}}],["cluster_appmodule",{"_index":1094,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":1095,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":1096,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_authmodule",{"_index":1342,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_exports",{"_index":1343,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_providers",{"_index":1344,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_cartmodule",{"_index":1450,"title":{},"body":{"modules/CartModule.html":{},"overview.html":{}}}],["cluster_cartmodule_providers",{"_index":1451,"title":{},"body":{"modules/CartModule.html":{},"overview.html":{}}}],["cluster_categoriesmodule",{"_index":1541,"title":{},"body":{"modules/CategoriesModule.html":{},"overview.html":{}}}],["cluster_categoriesmodule_providers",{"_index":1542,"title":{},"body":{"modules/CategoriesModule.html":{},"overview.html":{}}}],["cluster_coremodule",{"_index":1649,"title":{},"body":{"modules/CoreModule.html":{},"overview.html":{}}}],["cluster_coremodule_providers",{"_index":1650,"title":{},"body":{"modules/CoreModule.html":{},"overview.html":{}}}],["cluster_mailmodule",{"_index":2059,"title":{},"body":{"modules/MailModule.html":{},"overview.html":{}}}],["cluster_mailmodule_exports",{"_index":2061,"title":{},"body":{"modules/MailModule.html":{},"overview.html":{}}}],["cluster_mailmodule_providers",{"_index":2060,"title":{},"body":{"modules/MailModule.html":{}}}],["cluster_ordersmodule",{"_index":2332,"title":{},"body":{"modules/OrdersModule.html":{},"overview.html":{}}}],["cluster_ordersmodule_providers",{"_index":2333,"title":{},"body":{"modules/OrdersModule.html":{},"overview.html":{}}}],["cluster_ownermodule",{"_index":2514,"title":{},"body":{"modules/OwnerModule.html":{},"overview.html":{}}}],["cluster_ownermodule_exports",{"_index":2515,"title":{},"body":{"modules/OwnerModule.html":{},"overview.html":{}}}],["cluster_ownermodule_imports",{"_index":2517,"title":{},"body":{"modules/OwnerModule.html":{},"overview.html":{}}}],["cluster_ownermodule_providers",{"_index":2516,"title":{},"body":{"modules/OwnerModule.html":{}}}],["cluster_productmodule",{"_index":2881,"title":{},"body":{"modules/ProductModule.html":{},"overview.html":{}}}],["cluster_productmodule_providers",{"_index":2882,"title":{},"body":{"modules/ProductModule.html":{},"overview.html":{}}}],["cluster_reviewsmodule",{"_index":2973,"title":{},"body":{"modules/ReviewsModule.html":{},"overview.html":{}}}],["cluster_reviewsmodule_providers",{"_index":2974,"title":{},"body":{"modules/ReviewsModule.html":{},"overview.html":{}}}],["cluster_rolesmodule",{"_index":3063,"title":{},"body":{"modules/RolesModule.html":{},"overview.html":{}}}],["cluster_rolesmodule_exports",{"_index":3065,"title":{},"body":{"modules/RolesModule.html":{},"overview.html":{}}}],["cluster_rolesmodule_providers",{"_index":3064,"title":{},"body":{"modules/RolesModule.html":{},"overview.html":{}}}],["cluster_usersmodule",{"_index":3378,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["cluster_usersmodule_exports",{"_index":3379,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["cluster_usersmodule_providers",{"_index":3380,"title":{},"body":{"modules/UsersModule.html":{}}}],["clusterize",{"_index":964,"title":{},"body":{"injectables/AppClusterService.html":{}}}],["clusterize(callback",{"_index":967,"title":{},"body":{"injectables/AppClusterService.html":{},"interfaces/Msg.html":{}}}],["cmd",{"_index":984,"title":{},"body":{"injectables/AppClusterService.html":{},"interfaces/Msg.html":{}}}],["code",{"_index":63,"title":{},"body":{"injectables/ActivateMiddleware.html":{},"injectables/AdminJwtRefreshService.html":{},"injectables/AdminService.html":{},"injectables/AppClusterService.html":{},"controllers/AuthController.html":{},"injectables/MailService.html":{},"interfaces/Msg.html":{},"injectables/OwnerJwtRefreshService.html":{},"injectables/OwnerService.html":{},"classes/ResetDto.html":{},"injectables/UsersService.html":{}}}],["code'})@apiresponse({status",{"_index":1238,"title":{},"body":{"controllers/AuthController.html":{}}}],["code'})@minlength(8)@isstring",{"_index":2939,"title":{},"body":{"classes/ResetDto.html":{}}}],["codedto",{"_index":709,"title":{"interfaces/CodeDto.html":{}},"body":{"injectables/AdminService.html":{},"controllers/AuthController.html":{},"interfaces/AuthUser.html":{},"interfaces/CodeDto.html":{},"injectables/OwnerService.html":{},"interfaces/Payload.html":{},"interfaces/ReturnedAdmin.html":{},"interfaces/ReturnedOwner.html":{},"interfaces/ReturnedUser.html":{},"interfaces/Tokens.html":{},"injectables/UsersService.html":{}}}],["color:inherit!important",{"_index":2132,"title":{},"body":{"injectables/MailService.html":{}}}],["colours",{"_index":1623,"title":{},"body":{"interfaces/CategoryCreationAtrb.html":{},"classes/CreateProductDto.html":{},"classes/Nested.html":{},"classes/Nested-1.html":{},"classes/Product.html":{},"classes/Product-1.html":{},"controllers/ProductController.html":{},"interfaces/ProductCreationAttrs.html":{},"interfaces/ReturnedCategory.html":{},"interfaces/ReturnedProduct.html":{},"interfaces/ReturnedProducts.html":{},"interfaces/ReturnedReview.html":{},"interfaces/ReviewCreationAtrb.html":{},"classes/UpdateProductDto.html":{}}}],["column",{"_index":642,"title":{},"body":{"classes/AdminRefreshToken.html":{},"classes/BookmarksProducts.html":{},"classes/Cart.html":{},"classes/CartProduct.html":{},"classes/CartProduct-1.html":{},"classes/Category.html":{},"classes/Order.html":{},"classes/OrderProduct.html":{},"classes/Owner.html":{},"classes/OwnerRefreshToken.html":{},"classes/Product.html":{},"classes/Product-1.html":{},"classes/ProductCategories.html":{},"classes/ProductReviews.html":{},"classes/Review.html":{},"classes/Role.html":{},"classes/UserRefreshToken.html":{},"classes/UserRoles.html":{},"classes/WatchedProducts.html":{}}}],["column({type",{"_index":1402,"title":{},"body":{"classes/BookmarksProducts.html":{},"classes/Cart.html":{},"classes/CartProduct.html":{},"classes/CartProduct-1.html":{},"classes/Category.html":{},"classes/Order.html":{},"classes/OrderProduct.html":{},"classes/Product.html":{},"classes/Product-1.html":{},"classes/ProductCategories.html":{},"classes/ProductReviews.html":{},"classes/Review.html":{},"classes/WatchedProducts.html":{}}}],["commander",{"_index":3553,"title":{},"body":{"dependencies.html":{}}}],["commanderstart",{"_index":3577,"title":{},"body":{"miscellaneous/functions.html":{}}}],["common/decorators/match.decorator",{"_index":1646,"title":{},"body":{"classes/ChangeDto.html":{},"classes/ResetDto.html":{},"classes/SignupDto.html":{}}}],["common/decorators/roles",{"_index":216,"title":{},"body":{"controllers/AdminController.html":{},"controllers/CategoriesController.html":{},"controllers/ProductController.html":{},"controllers/ReviewsController.html":{},"controllers/RolesController.html":{},"controllers/UsersController.html":{}}}],["common/decorators/user",{"_index":1273,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ProductController.html":{},"controllers/UsersController.html":{}}}],["common/decorators/user.id.decorator",{"_index":1279,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ProductController.html":{},"controllers/UsersController.html":{}}}],["common/exceptions/api.exception",{"_index":387,"title":{},"body":{"injectables/AdminJwtRefreshService.html":{},"injectables/AdminService.html":{},"injectables/CategoriesService.html":{},"injectables/MailService.html":{},"injectables/OwnerJwtRefreshService.html":{},"injectables/OwnerService.html":{},"injectables/UserJwtRefreshTokenService.html":{},"injectables/UsersService.html":{}}}],["common/filters/api",{"_index":233,"title":{},"body":{"controllers/AdminController.html":{},"controllers/AuthController.html":{},"controllers/CardController.html":{},"controllers/CategoriesController.html":{},"controllers/OrdersController.html":{},"controllers/ProductController.html":{},"controllers/ReviewsController.html":{},"controllers/RolesController.html":{},"controllers/UsersController.html":{}}}],["common/filters/error",{"_index":230,"title":{},"body":{"controllers/AdminController.html":{},"controllers/AuthController.html":{},"controllers/CardController.html":{},"controllers/CategoriesController.html":{},"controllers/OrdersController.html":{},"controllers/ProductController.html":{},"controllers/ReviewsController.html":{},"controllers/RolesController.html":{},"controllers/UsersController.html":{}}}],["common/filters/http",{"_index":1351,"title":{},"body":{"modules/AuthModule.html":{}}}],["common/guards/add",{"_index":1519,"title":{},"body":{"controllers/CategoriesController.html":{},"controllers/ProductController.html":{},"controllers/RolesController.html":{}}}],["common/guards/edit",{"_index":2826,"title":{},"body":{"controllers/ProductController.html":{},"controllers/ReviewsController.html":{}}}],["common/guards/jw",{"_index":222,"title":{},"body":{"controllers/AdminController.html":{},"controllers/AuthController.html":{},"controllers/CategoriesController.html":{},"controllers/ProductController.html":{},"controllers/ReviewsController.html":{},"controllers/RolesController.html":{},"controllers/UsersController.html":{}}}],["common/guards/jwt",{"_index":201,"title":{},"body":{"controllers/AdminController.html":{},"controllers/AuthController.html":{},"controllers/CategoriesController.html":{},"controllers/ProductController.html":{},"controllers/ReviewsController.html":{},"controllers/RolesController.html":{},"controllers/UsersController.html":{}}}],["common/guards/owner",{"_index":219,"title":{},"body":{"controllers/AdminController.html":{},"controllers/CategoriesController.html":{},"controllers/ProductController.html":{},"controllers/ReviewsController.html":{},"controllers/RolesController.html":{},"controllers/UsersController.html":{}}}],["common/guards/refresh.guard",{"_index":1277,"title":{},"body":{"controllers/AuthController.html":{}}}],["common/guards/roles.guard",{"_index":218,"title":{},"body":{"controllers/AdminController.html":{},"controllers/CategoriesController.html":{},"controllers/ProductController.html":{},"controllers/ReviewsController.html":{},"controllers/RolesController.html":{},"controllers/UsersController.html":{}}}],["common/guards/throttler",{"_index":212,"title":{},"body":{"controllers/AdminController.html":{},"controllers/AuthController.html":{},"controllers/CategoriesController.html":{},"modules/CoreModule.html":{},"controllers/ProductController.html":{},"controllers/ReviewsController.html":{},"controllers/RolesController.html":{},"controllers/UsersController.html":{}}}],["common/guards/user.guard",{"_index":3366,"title":{},"body":{"controllers/UsersController.html":{}}}],["common/middlewares/activate.middleware",{"_index":1357,"title":{},"body":{"modules/AuthModule.html":{}}}],["common/middlewares/admin",{"_index":530,"title":{},"body":{"modules/AdminModule.html":{}}}],["common/middlewares/auth.middleware",{"_index":1352,"title":{},"body":{"modules/AuthModule.html":{}}}],["common/middlewares/initialize",{"_index":508,"title":{},"body":{"modules/AdminModule.html":{},"modules/AuthModule.html":{},"modules/CategoriesModule.html":{},"modules/ProductModule.html":{},"modules/ReviewsModule.html":{},"modules/RolesModule.html":{},"modules/UsersModule.html":{}}}],["common/middlewares/product.middleware",{"_index":2889,"title":{},"body":{"modules/ProductModule.html":{}}}],["common/middlewares/user",{"_index":522,"title":{},"body":{"modules/AdminModule.html":{}}}],["common/middlewares/user.middleware",{"_index":3384,"title":{},"body":{"modules/UsersModule.html":{}}}],["common/pipes/body",{"_index":525,"title":{},"body":{"modules/AdminModule.html":{},"modules/AuthModule.html":{},"modules/ReviewsModule.html":{},"modules/UsersModule.html":{}}}],["common/pipes/formdata.pipe",{"_index":1842,"title":{},"body":{"classes/CreateProductDto.html":{},"classes/Nested.html":{},"controllers/ProductController.html":{}}}],["common/pipes/parse.json.pipe",{"_index":1844,"title":{},"body":{"classes/CreateProductDto.html":{},"classes/Nested.html":{}}}],["common/pipes/validation.pipe",{"_index":208,"title":{},"body":{"controllers/AdminController.html":{},"controllers/AuthController.html":{},"controllers/UsersController.html":{}}}],["completed",{"_index":1966,"title":{},"body":{"classes/GarbageCollectingProcessor.html":{},"classes/Order.html":{}}}],["compression",{"_index":3532,"title":{},"body":{"dependencies.html":{}}}],["config",{"_index":3199,"title":{},"body":{"modules/TelegramModule.html":{}}}],["configmodule",{"_index":527,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CartModule.html":{},"modules/CategoriesModule.html":{},"modules/CoreModule.html":{},"modules/MailModule.html":{},"modules/OrdersModule.html":{},"modules/OwnerModule.html":{},"modules/ProductModule.html":{},"modules/ReviewsModule.html":{},"modules/RolesModule.html":{},"modules/UsersModule.html":{}}}],["configmodule.forroot",{"_index":549,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CartModule.html":{},"modules/CategoriesModule.html":{},"modules/CoreModule.html":{},"modules/MailModule.html":{},"modules/OrdersModule.html":{},"modules/OwnerModule.html":{},"modules/ProductModule.html":{},"modules/ReviewsModule.html":{},"modules/RolesModule.html":{},"modules/UsersModule.html":{}}}],["configure",{"_index":490,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CategoriesModule.html":{},"modules/ProductModule.html":{},"modules/ReviewsModule.html":{},"modules/RolesModule.html":{},"modules/UsersModule.html":{}}}],["configure(consumer",{"_index":491,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CategoriesModule.html":{},"modules/ProductModule.html":{},"modules/ReviewsModule.html":{},"modules/RolesModule.html":{},"modules/UsersModule.html":{}}}],["confirm",{"_index":1634,"title":{},"body":{"classes/ChangeDto.html":{},"classes/ResetDto.html":{},"classes/SignupDto.html":{}}}],["confirmcode",{"_index":472,"title":{},"body":{"injectables/AdminJwtRefreshService.html":{},"classes/Owner.html":{},"injectables/OwnerJwtRefreshService.html":{}}}],["confirmcode'})@isint()@column({type",{"_index":2372,"title":{},"body":{"classes/Owner.html":{}}}],["confirmpassword",{"_index":1631,"title":{},"body":{"classes/ChangeDto.html":{},"interfaces/InitializeUser.html":{},"classes/ResetDto.html":{},"interfaces/RolecreationAttrbs.html":{},"classes/SignupDto.html":{},"interfaces/UserInterface.html":{},"interfaces/UserRefreshCreationAttrbs.html":{},"interfaces/UsercreationAttrbs.html":{},"interfaces/ValidateUser.html":{}}}],["confirncode",{"_index":2413,"title":{},"body":{"classes/Owner.html":{}}}],["connection",{"_index":1686,"title":{},"body":{"injectables/CorsMiddleware.html":{},"interfaces/RequestHeaders.html":{}}}],["console.log('creating",{"_index":2593,"title":{},"body":{"injectables/OwnerService.html":{}}}],["console.log('error",{"_index":2934,"title":{},"body":{"classes/RequestValidator.html":{}}}],["console.log(`deserializedvalue",{"_index":2650,"title":{},"body":{"classes/ParseFormDataJsonPipe.html":{}}}],["console.log(err",{"_index":2492,"title":{},"body":{"injectables/OwnerJwtRefreshService.html":{}}}],["console.log(exception",{"_index":854,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["console.log(existingowners",{"_index":2591,"title":{},"body":{"injectables/OwnerService.html":{}}}],["console.log(geo",{"_index":2052,"title":{},"body":{"injectables/LocationMiddleware.html":{}}}],["const",{"_index":59,"title":{},"body":{"injectables/ActivateMiddleware.html":{},"guards/AddContentGuard.html":{},"guards/AdminGuard.html":{},"injectables/AdminJwtRefreshService.html":{},"injectables/AdminService.html":{},"injectables/AdminUserMiddleware.html":{},"classes/AllExceptionsFilter.html":{},"classes/ApiErrorExceptionFilter.html":{},"classes/ApiExceptionFilter.html":{},"injectables/AppClusterService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"guards/AuthFerfershGuard.html":{},"injectables/AuthMiddleware.html":{},"injectables/CategoriesService.html":{},"injectables/CorsMiddleware.html":{},"guards/EditContentGuard.html":{},"guards/EditWebsiteGuard.html":{},"injectables/FilesService.html":{},"classes/HttpExceptionFilter.html":{},"injectables/InitializeEmailMiddleware.html":{},"injectables/InitializeUserMiddleware.html":{},"guards/JwtAuthGuard.html":{},"injectables/LocationMiddleware.html":{},"injectables/MailService.html":{},"classes/MatchConstraint.html":{},"interfaces/Msg.html":{},"guards/OwnerAdminGuard.html":{},"injectables/OwnerJwtRefreshService.html":{},"injectables/OwnerService.html":{},"classes/ParseFormDataJsonPipe.html":{},"injectables/ParseJsonPipe.html":{},"controllers/ProductController.html":{},"injectables/ProductMiddleware.html":{},"guards/RefreshAuthGuard.html":{},"interfaces/RequestHeaders.html":{},"classes/RequestValidator.html":{},"injectables/ReviewsService.html":{},"guards/RolesGuard.html":{},"injectables/RolesService.html":{},"injectables/TasksService.html":{},"modules/TelegramModule.html":{},"injectables/UserAdminMiddleware.html":{},"guards/UserGuard.html":{},"injectables/UserJwtRefreshTokenService.html":{},"injectables/UserMiddleware.html":{},"injectables/UserMiddleware-1.html":{},"injectables/UsersService.html":{},"injectables/ValidateDto.html":{},"interfaces/fileCreated.html":{}}}],["constants/admin.constants",{"_index":726,"title":{},"body":{"injectables/AdminService.html":{},"classes/CreateAdminDto.html":{},"classes/CreateAdminRefreshTokenDto.html":{}}}],["constants/jwt",{"_index":379,"title":{},"body":{"injectables/AdminJwtRefreshService.html":{},"injectables/OwnerJwtRefreshService.html":{},"injectables/UserJwtRefreshTokenService.html":{}}}],["constants/owner.constants",{"_index":1815,"title":{},"body":{"classes/CreateOwnerDto.html":{},"classes/CreateOwnerRefreshTokenDto.html":{},"injectables/OwnerJwtRefreshService.html":{},"injectables/OwnerService.html":{}}}],["constants/user.constants",{"_index":1885,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/CreateUserRefreshTokenDto.html":{},"classes/UpdateUserDto.html":{},"injectables/UsersService.html":{}}}],["constraints",{"_index":2270,"title":{},"body":{"classes/MatchConstraint.html":{}}}],["constructor",{"_index":11,"title":{},"body":{"injectables/ActivateMiddleware.html":{},"guards/AddContentGuard.html":{},"guards/AdminGuard.html":{},"injectables/AdminJwtRefreshService.html":{},"injectables/AdminService.html":{},"injectables/AdminUserMiddleware.html":{},"classes/AllExceptionsFilter.html":{},"classes/ApiError.html":{},"classes/ApiException.html":{},"controllers/AuthController.html":{},"guards/AuthFerfershGuard.html":{},"classes/BadRequestError.html":{},"controllers/CategoriesController.html":{},"injectables/CategoriesService.html":{},"guards/EditContentGuard.html":{},"guards/EditWebsiteGuard.html":{},"injectables/InitializeEmailMiddleware.html":{},"injectables/InitializeUserMiddleware.html":{},"guards/JwtAuthGuard.html":{},"injectables/MailService.html":{},"classes/NotFoundError.html":{},"guards/OwnerAdminGuard.html":{},"injectables/OwnerJwtRefreshService.html":{},"injectables/OwnerService.html":{},"classes/ParseFormDataJsonPipe.html":{},"controllers/ProductController.html":{},"guards/RefreshAuthGuard.html":{},"controllers/ReviewsController.html":{},"injectables/ReviewsService.html":{},"guards/RolesGuard.html":{},"injectables/RolesService.html":{},"injectables/TasksService.html":{},"injectables/TelegramService.html":{},"injectables/UserAdminMiddleware.html":{},"guards/UserGuard.html":{},"injectables/UserJwtRefreshTokenService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"classes/ValidationException.html":{}}}],["constructor(@inject(telegram_module_options",{"_index":3211,"title":{},"body":{"injectables/TelegramService.html":{}}}],["constructor(@injectmodel(role",{"_index":3079,"title":{},"body":{"injectables/RolesService.html":{}}}],["constructor(adminjwtrefreshtokenservice",{"_index":269,"title":{},"body":{"guards/AdminGuard.html":{}}}],["constructor(adminrepository",{"_index":12,"title":{},"body":{"injectables/ActivateMiddleware.html":{},"injectables/AdminService.html":{}}}],["constructor(adminservice",{"_index":86,"title":{},"body":{"guards/AddContentGuard.html":{},"injectables/AdminUserMiddleware.html":{},"guards/EditContentGuard.html":{},"guards/EditWebsiteGuard.html":{}}}],["constructor(authservice",{"_index":2026,"title":{},"body":{"guards/JwtAuthGuard.html":{},"guards/RefreshAuthGuard.html":{},"guards/RolesGuard.html":{}}}],["constructor(categoryrepository",{"_index":1554,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["constructor(httpadapterhost",{"_index":845,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["constructor(jwtservice",{"_index":336,"title":{},"body":{"injectables/AdminJwtRefreshService.html":{},"injectables/OwnerJwtRefreshService.html":{},"injectables/UserJwtRefreshTokenService.html":{}}}],["constructor(mailerservice",{"_index":2086,"title":{},"body":{"injectables/MailService.html":{}}}],["constructor(message",{"_index":886,"title":{},"body":{"classes/ApiError.html":{},"classes/BadRequestError.html":{},"classes/NotFoundError.html":{}}}],["constructor(options",{"_index":2629,"title":{},"body":{"classes/ParseFormDataJsonPipe.html":{},"injectables/TelegramService.html":{}}}],["constructor(ownerjwtrefreshtokenservice",{"_index":2011,"title":{},"body":{"injectables/InitializeUserMiddleware.html":{},"guards/OwnerAdminGuard.html":{}}}],["constructor(ownerrepository",{"_index":2562,"title":{},"body":{"injectables/OwnerService.html":{}}}],["constructor(ownerservice",{"_index":1320,"title":{},"body":{"guards/AuthFerfershGuard.html":{},"injectables/InitializeEmailMiddleware.html":{}}}],["constructor(path",{"_index":882,"title":{},"body":{"classes/ApiError.html":{},"classes/BadRequestError.html":{},"classes/NotFoundError.html":{}}}],["constructor(private",{"_index":105,"title":{},"body":{"guards/AddContentGuard.html":{},"controllers/AdminController.html":{},"injectables/AdminUserMiddleware.html":{},"classes/AllExceptionsFilter.html":{},"guards/EditContentGuard.html":{},"guards/EditWebsiteGuard.html":{},"guards/JwtAuthGuard.html":{},"classes/ParseFormDataJsonPipe.html":{},"guards/RefreshAuthGuard.html":{},"controllers/RolesController.html":{},"guards/RolesGuard.html":{},"injectables/UserAdminMiddleware.html":{}}}],["constructor(response",{"_index":3495,"title":{},"body":{"classes/ValidationException.html":{}}}],["constructor(reviewrepository",{"_index":2985,"title":{},"body":{"injectables/ReviewsService.html":{}}}],["constructor(rolerepository",{"_index":3073,"title":{},"body":{"injectables/RolesService.html":{}}}],["constructor(schedulerregistry",{"_index":3104,"title":{},"body":{"injectables/TasksService.html":{}}}],["constructor(status",{"_index":911,"title":{},"body":{"classes/ApiException.html":{}}}],["constructor(statuscode",{"_index":872,"title":{},"body":{"classes/ApiError.html":{},"classes/BadRequestError.html":{},"classes/NotFoundError.html":{}}}],["constructor(userjwtrefreshtokenservice",{"_index":3255,"title":{},"body":{"guards/UserGuard.html":{}}}],["constructor(userrepository",{"_index":3399,"title":{},"body":{"injectables/UsersService.html":{}}}],["constructor(userservice",{"_index":3249,"title":{},"body":{"injectables/UserAdminMiddleware.html":{}}}],["consumer",{"_index":494,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CategoriesModule.html":{},"modules/ProductModule.html":{},"modules/ReviewsModule.html":{},"modules/RolesModule.html":{},"modules/UsersModule.html":{}}}],["consumer.apply(corsmiddleware).forroutes",{"_index":1214,"title":{},"body":{"modules/AppModule.html":{}}}],["consumer.apply(productmiddleware).forroutes",{"_index":2894,"title":{},"body":{"modules/ProductModule.html":{}}}],["contains",{"_index":2659,"title":{},"body":{"injectables/ParseJsonPipe.html":{}}}],["content",{"_index":70,"title":{},"body":{"injectables/ActivateMiddleware.html":{},"injectables/CorsMiddleware.html":{},"classes/CreateAdminDto.html":{},"injectables/InitializeEmailMiddleware.html":{},"injectables/MailService.html":{},"injectables/ProductMiddleware.html":{},"interfaces/RequestHeaders.html":{},"injectables/UserMiddleware.html":{},"injectables/UserMiddleware-1.html":{}}}],["content'})@isboolean",{"_index":1744,"title":{},"body":{"classes/CreateAdminDto.html":{}}}],["content.guard",{"_index":1520,"title":{},"body":{"controllers/CategoriesController.html":{},"controllers/ProductController.html":{},"controllers/ReviewsController.html":{},"controllers/RolesController.html":{}}}],["content.guard.ts",{"_index":84,"title":{},"body":{"guards/AddContentGuard.html":{},"guards/EditContentGuard.html":{}}}],["content.guard.ts:15",{"_index":1891,"title":{},"body":{"guards/EditContentGuard.html":{}}}],["content.guard.ts:17",{"_index":88,"title":{},"body":{"guards/AddContentGuard.html":{}}}],["content.guard.ts:18",{"_index":1892,"title":{},"body":{"guards/EditContentGuard.html":{}}}],["content.guard.ts:20",{"_index":91,"title":{},"body":{"guards/AddContentGuard.html":{}}}],["context",{"_index":92,"title":{},"body":{"guards/AddContentGuard.html":{},"guards/AdminGuard.html":{},"guards/AuthFerfershGuard.html":{},"guards/EditContentGuard.html":{},"guards/EditWebsiteGuard.html":{},"injectables/GlobalInterceptor.html":{},"guards/JwtAuthGuard.html":{},"guards/OwnerAdminGuard.html":{},"guards/RefreshAuthGuard.html":{},"guards/RolesGuard.html":{},"guards/UserGuard.html":{}}}],["context.getclass",{"_index":291,"title":{},"body":{"guards/AdminGuard.html":{},"guards/OwnerAdminGuard.html":{},"guards/RolesGuard.html":{},"guards/UserGuard.html":{}}}],["context.gethandler",{"_index":290,"title":{},"body":{"guards/AdminGuard.html":{},"guards/OwnerAdminGuard.html":{},"guards/RolesGuard.html":{},"guards/UserGuard.html":{}}}],["context.switchtohttp().getrequest",{"_index":108,"title":{},"body":{"guards/AddContentGuard.html":{},"guards/AdminGuard.html":{},"guards/AuthFerfershGuard.html":{},"guards/EditContentGuard.html":{},"guards/EditWebsiteGuard.html":{},"guards/JwtAuthGuard.html":{},"guards/OwnerAdminGuard.html":{},"guards/RefreshAuthGuard.html":{},"guards/RolesGuard.html":{},"guards/UserGuard.html":{}}}],["control",{"_index":1334,"title":{},"body":{"injectables/AuthMiddleware.html":{},"injectables/CorsMiddleware.html":{},"injectables/ProductMiddleware.html":{},"interfaces/RequestHeaders.html":{},"injectables/UserMiddleware.html":{},"injectables/UserMiddleware-1.html":{}}}],["controller",{"_index":146,"title":{"controllers/AdminController.html":{},"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/CardController.html":{},"controllers/CategoriesController.html":{},"controllers/OrdersController.html":{},"controllers/ProductController.html":{},"controllers/ReviewsController.html":{},"controllers/RolesController.html":{},"controllers/UsersController.html":{}},"body":{"controllers/AdminController.html":{},"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/CardController.html":{},"controllers/CategoriesController.html":{},"controllers/OrdersController.html":{},"controllers/ProductController.html":{},"controllers/ReviewsController.html":{},"controllers/RolesController.html":{},"controllers/UsersController.html":{}}}],["controller('/roles",{"_index":3051,"title":{},"body":{"controllers/RolesController.html":{}}}],["controller('admin",{"_index":241,"title":{},"body":{"controllers/AdminController.html":{}}}],["controller('auth",{"_index":1282,"title":{},"body":{"controllers/AuthController.html":{}}}],["controller('card",{"_index":1412,"title":{},"body":{"controllers/CardController.html":{}}}],["controller('categories",{"_index":1528,"title":{},"body":{"controllers/CategoriesController.html":{}}}],["controller('orders",{"_index":2331,"title":{},"body":{"controllers/OrdersController.html":{}}}],["controller('product",{"_index":2829,"title":{},"body":{"controllers/ProductController.html":{}}}],["controller('reviews",{"_index":2967,"title":{},"body":{"controllers/ReviewsController.html":{}}}],["controller('user",{"_index":3368,"title":{},"body":{"controllers/UsersController.html":{}}}],["controllers",{"_index":148,"title":{},"body":{"controllers/AdminController.html":{},"modules/AdminModule.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"controllers/CardController.html":{},"modules/CartModule.html":{},"controllers/CategoriesController.html":{},"modules/CategoriesModule.html":{},"controllers/OrdersController.html":{},"modules/OrdersModule.html":{},"controllers/ProductController.html":{},"modules/ProductModule.html":{},"controllers/ReviewsController.html":{},"modules/ReviewsModule.html":{},"controllers/RolesController.html":{},"modules/RolesModule.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["contructor",{"_index":2038,"title":{},"body":{"classes/JwtRefreshTokenDeletedEvent.html":{}}}],["contructor(name",{"_index":2042,"title":{},"body":{"classes/JwtRefreshTokenDeletedEvent.html":{}}}],["convertedobject",{"_index":2923,"title":{},"body":{"classes/RequestValidator.html":{}}}],["cookie",{"_index":3534,"title":{},"body":{"dependencies.html":{}}}],["core/core.module",{"_index":532,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/OwnerModule.html":{},"modules/RolesModule.html":{},"modules/UsersModule.html":{}}}],["core/filters/all",{"_index":1118,"title":{},"body":{"modules/AppModule.html":{}}}],["core/interceptors/global.interceptor",{"_index":1121,"title":{},"body":{"modules/AppModule.html":{}}}],["core/interfaces/admin.interfaces",{"_index":210,"title":{},"body":{"controllers/AdminController.html":{},"classes/AdminRefreshToken.html":{},"injectables/AdminService.html":{}}}],["core/interfaces/auth.interfaces",{"_index":104,"title":{},"body":{"guards/AddContentGuard.html":{},"guards/AdminGuard.html":{},"injectables/AdminService.html":{},"controllers/AuthController.html":{},"guards/AuthFerfershGuard.html":{},"guards/EditContentGuard.html":{},"guards/EditWebsiteGuard.html":{},"guards/JwtAuthGuard.html":{},"guards/OwnerAdminGuard.html":{},"injectables/OwnerService.html":{},"guards/RolesGuard.html":{},"guards/UserGuard.html":{},"injectables/UsersService.html":{}}}],["core/interfaces/owner.interfaces",{"_index":2430,"title":{},"body":{"classes/Owner.html":{},"classes/OwnerRefreshToken.html":{}}}],["core/interfaces/product.interfaces",{"_index":1526,"title":{},"body":{"controllers/CategoriesController.html":{},"injectables/CategoriesService.html":{},"classes/Category.html":{},"classes/Product.html":{},"classes/Product-1.html":{},"controllers/ProductController.html":{},"classes/Review.html":{}}}],["core/interfaces/user.interfaces",{"_index":3028,"title":{},"body":{"classes/Role.html":{},"classes/UserRefreshToken.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["core/middlewares/cors.middleware",{"_index":1115,"title":{},"body":{"modules/AppModule.html":{}}}],["core/services/cluster.service",{"_index":1108,"title":{},"body":{"modules/AppModule.html":{}}}],["core/services/events.service",{"_index":1280,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{}}}],["core/services/file.service",{"_index":2888,"title":{},"body":{"modules/ProductModule.html":{}}}],["core/services/scedule.service",{"_index":386,"title":{},"body":{"injectables/AdminJwtRefreshService.html":{},"modules/AdminModule.html":{},"modules/AuthModule.html":{},"injectables/OwnerJwtRefreshService.html":{},"modules/OwnerModule.html":{},"modules/RolesModule.html":{},"injectables/UserJwtRefreshTokenService.html":{},"modules/UsersModule.html":{}}}],["coremodule",{"_index":531,"title":{"modules/CoreModule.html":{}},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CoreModule.html":{},"modules/OwnerModule.html":{},"modules/RolesModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["cors",{"_index":3536,"title":{},"body":{"dependencies.html":{}}}],["corsmiddleware",{"_index":1114,"title":{"injectables/CorsMiddleware.html":{}},"body":{"modules/AppModule.html":{},"injectables/CorsMiddleware.html":{},"interfaces/RequestHeaders.html":{}}}],["country",{"_index":1384,"title":{},"body":{"interfaces/AuthUser.html":{},"interfaces/CodeDto.html":{},"interfaces/Payload.html":{},"interfaces/ReturnedAdmin.html":{},"interfaces/ReturnedOwner.html":{},"interfaces/ReturnedUser.html":{},"interfaces/Tokens.html":{},"classes/UpdateUserDto.html":{}}}],["country'})@isstring()@minlength(2)@maxlength(50",{"_index":3241,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["country.mmdb",{"_index":1070,"title":{},"body":{"controllers/AppController.html":{},"injectables/LocationMiddleware.html":{}}}],["coverage",{"_index":3616,"title":{},"body":{"index.html":{}}}],["cpus",{"_index":978,"title":{},"body":{"injectables/AppClusterService.html":{},"interfaces/Msg.html":{}}}],["cpus().length",{"_index":982,"title":{},"body":{"injectables/AppClusterService.html":{},"interfaces/Msg.html":{}}}],["create",{"_index":2240,"title":{},"body":{"injectables/MailService.html":{},"injectables/OwnerService.html":{}}}],["create(dto",{"_index":2568,"title":{},"body":{"injectables/OwnerService.html":{}}}],["create.review.dto",{"_index":2964,"title":{},"body":{"controllers/ReviewsController.html":{},"modules/ReviewsModule.html":{},"injectables/ReviewsService.html":{}}}],["createaccesstokendto",{"_index":1715,"title":{"classes/CreateAccessTokenDto.html":{}},"body":{"classes/CreateAccessTokenDto.html":{}}}],["createadmin",{"_index":151,"title":{},"body":{"controllers/AdminController.html":{},"injectables/AdminService.html":{}}}],["createadmin(admindto",{"_index":155,"title":{},"body":{"controllers/AdminController.html":{}}}],["createadmin(dto",{"_index":688,"title":{},"body":{"injectables/AdminService.html":{}}}],["createadmindto",{"_index":156,"title":{"classes/CreateAdminDto.html":{}},"body":{"controllers/AdminController.html":{},"modules/AdminModule.html":{},"injectables/AdminService.html":{},"classes/CreateAdminDto.html":{}}}],["createadminrefreshtokendto",{"_index":354,"title":{"classes/CreateAdminRefreshTokenDto.html":{}},"body":{"injectables/AdminJwtRefreshService.html":{},"classes/CreateAdminRefreshTokenDto.html":{}}}],["createasyncoptionsprovider",{"_index":3182,"title":{},"body":{"modules/TelegramModule.html":{}}}],["createasyncoptionsprovider(options",{"_index":3183,"title":{},"body":{"modules/TelegramModule.html":{}}}],["createcategory",{"_index":1491,"title":{},"body":{"controllers/CategoriesController.html":{},"injectables/CategoriesService.html":{}}}],["createcategory(categorydto",{"_index":1495,"title":{},"body":{"controllers/CategoriesController.html":{},"injectables/CategoriesService.html":{}}}],["createcategorydto",{"_index":1496,"title":{"classes/CreateCategoryDto.html":{}},"body":{"controllers/CategoriesController.html":{},"injectables/CategoriesService.html":{},"classes/CreateCategoryDto.html":{}}}],["createcipheriv",{"_index":390,"title":{},"body":{"injectables/AdminJwtRefreshService.html":{},"controllers/AppController.html":{},"injectables/OwnerJwtRefreshService.html":{}}}],["createcipheriv('aes",{"_index":466,"title":{},"body":{"injectables/AdminJwtRefreshService.html":{},"controllers/AppController.html":{},"injectables/OwnerJwtRefreshService.html":{}}}],["createdat",{"_index":1408,"title":{},"body":{"classes/BookmarksProducts.html":{},"injectables/CategoriesService.html":{},"interfaces/CategoryCreationAtrb.html":{},"classes/ProductCategories.html":{},"interfaces/ProductCreationAttrs.html":{},"classes/ProductReviews.html":{},"interfaces/ReturnedCategory.html":{},"interfaces/ReturnedProduct.html":{},"interfaces/ReturnedProducts.html":{},"interfaces/ReturnedReview.html":{},"interfaces/ReviewCreationAtrb.html":{},"classes/UserRoles.html":{},"classes/WatchedProducts.html":{}}}],["createdreviewdto",{"_index":2990,"title":{},"body":{"injectables/ReviewsService.html":{}}}],["createfile",{"_index":1898,"title":{},"body":{"injectables/FilesService.html":{}}}],["createfile(file",{"_index":1903,"title":{},"body":{"injectables/FilesService.html":{},"interfaces/fileCreated.html":{}}}],["createfilename",{"_index":1899,"title":{},"body":{"injectables/FilesService.html":{},"interfaces/fileCreated.html":{}}}],["createfilename(req",{"_index":1905,"title":{},"body":{"injectables/FilesService.html":{}}}],["createowner",{"_index":2556,"title":{},"body":{"injectables/OwnerService.html":{}}}],["createowner(dto",{"_index":2570,"title":{},"body":{"injectables/OwnerService.html":{}}}],["createownerdto",{"_index":1801,"title":{"classes/CreateOwnerDto.html":{}},"body":{"classes/CreateOwnerDto.html":{},"injectables/OwnerService.html":{}}}],["createownerrefreshtokendto",{"_index":1817,"title":{"classes/CreateOwnerRefreshTokenDto.html":{}},"body":{"classes/CreateOwnerRefreshTokenDto.html":{},"injectables/OwnerJwtRefreshService.html":{}}}],["createproduct",{"_index":2762,"title":{},"body":{"controllers/ProductController.html":{}}}],["createproduct(createproductdto",{"_index":2778,"title":{},"body":{"controllers/ProductController.html":{}}}],["createproductdto",{"_index":1825,"title":{"classes/CreateProductDto.html":{}},"body":{"classes/CreateProductDto.html":{},"classes/Nested.html":{},"controllers/ProductController.html":{}}}],["createreview",{"_index":2955,"title":{},"body":{"controllers/ReviewsController.html":{},"injectables/ReviewsService.html":{}}}],["createreview(createdreviewdto",{"_index":2988,"title":{},"body":{"injectables/ReviewsService.html":{}}}],["createreview(createreviewdto",{"_index":2957,"title":{},"body":{"controllers/ReviewsController.html":{}}}],["createreviewdto",{"_index":1856,"title":{"classes/CreateReviewDto.html":{}},"body":{"classes/CreateReviewDto.html":{},"controllers/ReviewsController.html":{},"modules/ReviewsModule.html":{},"injectables/ReviewsService.html":{}}}],["createrole",{"_index":3035,"title":{},"body":{"controllers/RolesController.html":{},"injectables/RolesService.html":{}}}],["createrole(@body",{"_index":3053,"title":{},"body":{"controllers/RolesController.html":{}}}],["createrole(dto",{"_index":3076,"title":{},"body":{"injectables/RolesService.html":{}}}],["createrole(roledto",{"_index":3037,"title":{},"body":{"controllers/RolesController.html":{}}}],["createroledto",{"_index":1863,"title":{"classes/CreateRoleDto.html":{}},"body":{"classes/CreateRoleDto.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{}}}],["createuser",{"_index":3394,"title":{},"body":{"injectables/UsersService.html":{}}}],["createuser(dto",{"_index":3407,"title":{},"body":{"injectables/UsersService.html":{}}}],["createuserdto",{"_index":1870,"title":{"classes/CreateUserDto.html":{}},"body":{"classes/CreateUserDto.html":{},"injectables/UsersService.html":{}}}],["createuserrefreshtokendto",{"_index":1886,"title":{"classes/CreateUserRefreshTokenDto.html":{}},"body":{"classes/CreateUserRefreshTokenDto.html":{},"injectables/UserJwtRefreshTokenService.html":{}}}],["creating",{"_index":158,"title":{},"body":{"controllers/AdminController.html":{},"controllers/CategoriesController.html":{},"controllers/RolesController.html":{}}}],["creatingowner",{"_index":2557,"title":{},"body":{"injectables/OwnerService.html":{}}}],["creatingowner(owner",{"_index":2572,"title":{},"body":{"injectables/OwnerService.html":{}}}],["credentials",{"_index":1694,"title":{},"body":{"injectables/CorsMiddleware.html":{},"interfaces/RequestHeaders.html":{}}}],["cron",{"_index":3136,"title":{},"body":{"injectables/TasksService.html":{}}}],["cron(cronexpression.every_hour",{"_index":3131,"title":{},"body":{"injectables/TasksService.html":{}}}],["cronexpression",{"_index":3137,"title":{},"body":{"injectables/TasksService.html":{}}}],["cronjob",{"_index":3112,"title":{},"body":{"injectables/TasksService.html":{}}}],["cronjob(time",{"_index":3138,"title":{},"body":{"injectables/TasksService.html":{}}}],["cross",{"_index":3538,"title":{},"body":{"dependencies.html":{}}}],["crypto",{"_index":391,"title":{},"body":{"injectables/AdminJwtRefreshService.html":{},"controllers/AppController.html":{},"injectables/OwnerJwtRefreshService.html":{}}}],["ctr",{"_index":468,"title":{},"body":{"injectables/AdminJwtRefreshService.html":{},"controllers/AppController.html":{},"injectables/OwnerJwtRefreshService.html":{}}}],["ctx",{"_index":857,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"classes/ApiErrorExceptionFilter.html":{},"classes/ApiExceptionFilter.html":{},"classes/HttpExceptionFilter.html":{}}}],["ctx.getrequest",{"_index":896,"title":{},"body":{"classes/ApiErrorExceptionFilter.html":{},"classes/ApiExceptionFilter.html":{},"classes/HttpExceptionFilter.html":{}}}],["ctx.getresponse",{"_index":895,"title":{},"body":{"classes/ApiErrorExceptionFilter.html":{},"classes/ApiExceptionFilter.html":{},"classes/HttpExceptionFilter.html":{}}}],["cusler",{"_index":1881,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/Owner.html":{},"classes/SignupDto.html":{},"classes/UpdateUserDto.html":{}}}],["data",{"_index":1075,"title":{},"body":{"controllers/AppController.html":{},"injectables/LocationMiddleware.html":{},"injectables/MailService.html":{}}}],["data.country.isocode",{"_index":2054,"title":{},"body":{"injectables/LocationMiddleware.html":{}}}],["database",{"_index":1207,"title":{},"body":{"modules/AppModule.html":{}}}],["datatype",{"_index":643,"title":{},"body":{"classes/AdminRefreshToken.html":{},"classes/BookmarksProducts.html":{},"classes/Cart.html":{},"classes/CartProduct.html":{},"classes/CartProduct-1.html":{},"classes/Category.html":{},"classes/Order.html":{},"classes/OrderProduct.html":{},"classes/Owner.html":{},"classes/OwnerRefreshToken.html":{},"classes/Product.html":{},"classes/Product-1.html":{},"classes/ProductCategories.html":{},"classes/ProductReviews.html":{},"classes/Review.html":{},"classes/Role.html":{},"classes/UserRefreshToken.html":{},"classes/UserRoles.html":{},"classes/WatchedProducts.html":{}}}],["datatype.array(datatype.enum('s",{"_index":2700,"title":{},"body":{"classes/Product.html":{},"classes/Product-1.html":{}}}],["datatype.array(datatype.string",{"_index":2699,"title":{},"body":{"classes/Product.html":{},"classes/Product-1.html":{}}}],["datatype.boolean",{"_index":2432,"title":{},"body":{"classes/Owner.html":{}}}],["datatype.char(2500",{"_index":657,"title":{},"body":{"classes/AdminRefreshToken.html":{},"classes/OwnerRefreshToken.html":{},"classes/UserRefreshToken.html":{}}}],["datatype.char(350",{"_index":661,"title":{},"body":{"classes/AdminRefreshToken.html":{},"classes/Owner.html":{},"classes/OwnerRefreshToken.html":{}}}],["datatype.date",{"_index":662,"title":{},"body":{"classes/AdminRefreshToken.html":{},"classes/OwnerRefreshToken.html":{},"classes/UserRefreshToken.html":{}}}],["datatype.enum('canceled",{"_index":2309,"title":{},"body":{"classes/Order.html":{}}}],["datatype.enum('open",{"_index":1444,"title":{},"body":{"classes/Cart.html":{}}}],["datatype.integer",{"_index":655,"title":{},"body":{"classes/AdminRefreshToken.html":{},"classes/BookmarksProducts.html":{},"classes/Cart.html":{},"classes/CartProduct.html":{},"classes/CartProduct-1.html":{},"classes/Category.html":{},"classes/Order.html":{},"classes/OrderProduct.html":{},"classes/Owner.html":{},"classes/OwnerRefreshToken.html":{},"classes/Product.html":{},"classes/Product-1.html":{},"classes/ProductCategories.html":{},"classes/ProductReviews.html":{},"classes/Review.html":{},"classes/Role.html":{},"classes/UserRefreshToken.html":{},"classes/UserRoles.html":{},"classes/WatchedProducts.html":{}}}],["datatype.jsonb",{"_index":2745,"title":{},"body":{"classes/Product-1.html":{}}}],["datatype.string",{"_index":656,"title":{},"body":{"classes/AdminRefreshToken.html":{},"classes/Category.html":{},"classes/Owner.html":{},"classes/OwnerRefreshToken.html":{},"classes/Product.html":{},"classes/Product-1.html":{},"classes/Review.html":{},"classes/Role.html":{},"classes/UserRefreshToken.html":{}}}],["date",{"_index":358,"title":{},"body":{"injectables/AdminJwtRefreshService.html":{},"classes/AdminRefreshToken.html":{},"interfaces/AuthUser.html":{},"interfaces/CodeDto.html":{},"injectables/OwnerJwtRefreshService.html":{},"classes/OwnerRefreshToken.html":{},"interfaces/Payload.html":{},"interfaces/ReturnedAdmin.html":{},"interfaces/ReturnedOwner.html":{},"interfaces/ReturnedUser.html":{},"injectables/TasksService.html":{},"interfaces/Tokens.html":{},"injectables/UserJwtRefreshTokenService.html":{},"classes/UserRefreshToken.html":{}}}],["date().toisostring",{"_index":865,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"classes/ApiErrorExceptionFilter.html":{},"classes/ApiExceptionFilter.html":{},"classes/HttpExceptionFilter.html":{}}}],["db",{"_index":1163,"title":{},"body":{"modules/AppModule.html":{}}}],["dbadmins",{"_index":733,"title":{},"body":{"injectables/AdminService.html":{}}}],["dbadmins.foreach((admin",{"_index":742,"title":{},"body":{"injectables/AdminService.html":{}}}],["dbadmins.length",{"_index":741,"title":{},"body":{"injectables/AdminService.html":{}}}],["dbarray",{"_index":743,"title":{},"body":{"injectables/AdminService.html":{},"injectables/UsersService.html":{}}}],["dbarray.indexof(param",{"_index":748,"title":{},"body":{"injectables/AdminService.html":{},"injectables/UsersService.html":{}}}],["dbarray.push(admin[key",{"_index":744,"title":{},"body":{"injectables/AdminService.html":{}}}],["dbarray.push(user[key",{"_index":3435,"title":{},"body":{"injectables/UsersService.html":{}}}],["dbusers",{"_index":3431,"title":{},"body":{"injectables/UsersService.html":{}}}],["dbusers.foreach((user",{"_index":3434,"title":{},"body":{"injectables/UsersService.html":{}}}],["dbusers.length",{"_index":3433,"title":{},"body":{"injectables/UsersService.html":{}}}],["decodedrefreshtoken",{"_index":3258,"title":{},"body":{"guards/UserGuard.html":{}}}],["decodedrefreshtoken.trim",{"_index":3261,"title":{},"body":{"guards/UserGuard.html":{}}}],["decodedtoken",{"_index":294,"title":{},"body":{"guards/AdminGuard.html":{},"injectables/InitializeUserMiddleware.html":{},"guards/JwtAuthGuard.html":{},"guards/OwnerAdminGuard.html":{},"guards/RolesGuard.html":{}}}],["decoration",{"_index":2111,"title":{},"body":{"injectables/MailService.html":{}}}],["decoration:none!important",{"_index":2133,"title":{},"body":{"injectables/MailService.html":{}}}],["decoration:none!important;}a[x",{"_index":2129,"title":{},"body":{"injectables/MailService.html":{}}}],["decorators",{"_index":128,"title":{},"body":{"classes/AddRoleDto.html":{},"controllers/AdminController.html":{},"classes/AdminRefreshToken.html":{},"controllers/AppController.html":{},"injectables/AppListener.html":{},"controllers/AuthController.html":{},"classes/BanUserDto.html":{},"classes/BookmarksProducts.html":{},"classes/Cart.html":{},"classes/CartProduct.html":{},"classes/CartProduct-1.html":{},"controllers/CategoriesController.html":{},"classes/Category.html":{},"classes/ChangeDto.html":{},"classes/CreateAccessTokenDto.html":{},"classes/CreateAdminDto.html":{},"classes/CreateAdminRefreshTokenDto.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateOwnerDto.html":{},"classes/CreateOwnerRefreshTokenDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateReviewDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserRefreshTokenDto.html":{},"classes/GarbageCollectingProcessor.html":{},"classes/LoginDto.html":{},"classes/Nested.html":{},"classes/Nested-1.html":{},"classes/Order.html":{},"classes/OrderProduct.html":{},"classes/Owner.html":{},"classes/OwnerRefreshToken.html":{},"classes/Product.html":{},"classes/Product-1.html":{},"classes/ProductCategories.html":{},"controllers/ProductController.html":{},"classes/ProductReviews.html":{},"classes/ResetDto.html":{},"classes/Review.html":{},"controllers/ReviewsController.html":{},"classes/Role.html":{},"controllers/RolesController.html":{},"classes/SignupDto.html":{},"injectables/TasksService.html":{},"classes/UpdateCategoryDto.html":{},"classes/UpdateProductDto.html":{},"classes/UpdateUserDto.html":{},"classes/UserRefreshToken.html":{},"classes/UserRoles.html":{},"controllers/UsersController.html":{},"classes/WatchedProducts.html":{}}}],["decorators/roles",{"_index":284,"title":{},"body":{"guards/AdminGuard.html":{},"guards/OwnerAdminGuard.html":{},"guards/RolesGuard.html":{},"guards/UserGuard.html":{}}}],["deep",{"_index":2637,"title":{},"body":{"classes/ParseFormDataJsonPipe.html":{},"dependencies.html":{}}}],["deepparsejson",{"_index":2636,"title":{},"body":{"classes/ParseFormDataJsonPipe.html":{}}}],["deepparsejson(value",{"_index":2649,"title":{},"body":{"classes/ParseFormDataJsonPipe.html":{}}}],["default",{"_index":369,"title":{},"body":{"injectables/AdminJwtRefreshService.html":{},"classes/ApiError.html":{},"injectables/AppClusterService.html":{},"classes/BadRequestError.html":{},"injectables/CorsMiddleware.html":{},"classes/GarbageCollectingProcessor.html":{},"injectables/MailService.html":{},"classes/NotFoundError.html":{},"injectables/OwnerJwtRefreshService.html":{},"interfaces/RequestHeaders.html":{},"classes/RequestValidator.html":{},"injectables/ReviewsService.html":{},"injectables/TasksService.html":{},"injectables/TelegramService.html":{}}}],["defaults",{"_index":2080,"title":{},"body":{"modules/MailModule.html":{}}}],["defined",{"_index":14,"title":{},"body":{"injectables/ActivateMiddleware.html":{},"guards/AddContentGuard.html":{},"classes/AddRoleDto.html":{},"controllers/AdminController.html":{},"guards/AdminGuard.html":{},"injectables/AdminJwtRefreshService.html":{},"modules/AdminModule.html":{},"classes/AdminRefreshToken.html":{},"injectables/AdminService.html":{},"injectables/AdminUserMiddleware.html":{},"classes/AllExceptionsFilter.html":{},"classes/ApiError.html":{},"classes/ApiErrorExceptionFilter.html":{},"classes/ApiException.html":{},"classes/ApiExceptionFilter.html":{},"injectables/AppClusterService.html":{},"controllers/AppController.html":{},"injectables/AppListener.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"guards/AuthFerfershGuard.html":{},"injectables/AuthMiddleware.html":{},"modules/AuthModule.html":{},"classes/BadRequestError.html":{},"classes/BanUserDto.html":{},"classes/BookmarksProducts.html":{},"classes/Cart.html":{},"classes/CartProduct.html":{},"classes/CartProduct-1.html":{},"controllers/CategoriesController.html":{},"modules/CategoriesModule.html":{},"injectables/CategoriesService.html":{},"classes/Category.html":{},"classes/ChangeDto.html":{},"injectables/CorsMiddleware.html":{},"classes/CreateAccessTokenDto.html":{},"classes/CreateAdminDto.html":{},"classes/CreateAdminRefreshTokenDto.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateOwnerDto.html":{},"classes/CreateOwnerRefreshTokenDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateReviewDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserRefreshTokenDto.html":{},"guards/EditContentGuard.html":{},"guards/EditWebsiteGuard.html":{},"injectables/FilesService.html":{},"classes/GarbageCollectingProcessor.html":{},"injectables/GlobalInterceptor.html":{},"classes/HttpExceptionFilter.html":{},"injectables/InitializeEmailMiddleware.html":{},"injectables/InitializeUserMiddleware.html":{},"guards/JwtAuthGuard.html":{},"classes/JwtRefreshTokenDeletedEvent.html":{},"injectables/LocationMiddleware.html":{},"classes/LoginDto.html":{},"injectables/MailService.html":{},"classes/MatchConstraint.html":{},"classes/Nested.html":{},"classes/Nested-1.html":{},"classes/NotFoundError.html":{},"classes/Order.html":{},"classes/OrderProduct.html":{},"classes/Owner.html":{},"guards/OwnerAdminGuard.html":{},"injectables/OwnerJwtRefreshService.html":{},"classes/OwnerRefreshToken.html":{},"injectables/OwnerService.html":{},"classes/ParseFormDataJsonPipe.html":{},"injectables/ParseJsonPipe.html":{},"classes/Product.html":{},"classes/Product-1.html":{},"classes/ProductCategories.html":{},"controllers/ProductController.html":{},"injectables/ProductMiddleware.html":{},"modules/ProductModule.html":{},"classes/ProductReviews.html":{},"guards/RefreshAuthGuard.html":{},"interfaces/RequestHeaders.html":{},"classes/RequestValidator.html":{},"classes/ResetDto.html":{},"classes/Review.html":{},"controllers/ReviewsController.html":{},"modules/ReviewsModule.html":{},"injectables/ReviewsService.html":{},"classes/Role.html":{},"controllers/RolesController.html":{},"guards/RolesGuard.html":{},"modules/RolesModule.html":{},"injectables/RolesService.html":{},"classes/SignupDto.html":{},"injectables/TasksService.html":{},"modules/TelegramModule.html":{},"injectables/TelegramService.html":{},"injectables/ThrottlerBehindProxyGuard.html":{},"classes/UpdateCategoryDto.html":{},"classes/UpdateProductDto.html":{},"classes/UpdateUserDto.html":{},"injectables/UserAdminMiddleware.html":{},"guards/UserGuard.html":{},"injectables/UserJwtRefreshTokenService.html":{},"injectables/UserMiddleware.html":{},"injectables/UserMiddleware-1.html":{},"classes/UserRefreshToken.html":{},"classes/UserRoles.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"injectables/ValidateDto.html":{},"classes/ValidationException.html":{},"classes/WatchedProducts.html":{}}}],["delete",{"_index":1518,"title":{},"body":{"controllers/CategoriesController.html":{},"injectables/CorsMiddleware.html":{},"controllers/ProductController.html":{},"injectables/ProductMiddleware.html":{},"interfaces/RequestHeaders.html":{},"controllers/ReviewsController.html":{}}}],["delete('delete_category/:categoryid",{"_index":1538,"title":{},"body":{"controllers/CategoriesController.html":{}}}],["delete('delete_image",{"_index":2874,"title":{},"body":{"controllers/ProductController.html":{}}}],["delete('delete_product/:productid",{"_index":2871,"title":{},"body":{"controllers/ProductController.html":{}}}],["delete('delete_review",{"_index":2970,"title":{},"body":{"controllers/ReviewsController.html":{}}}],["deletecategory",{"_index":1492,"title":{},"body":{"controllers/CategoriesController.html":{},"injectables/CategoriesService.html":{}}}],["deletecategory(@param('categoryid",{"_index":1539,"title":{},"body":{"controllers/CategoriesController.html":{}}}],["deletecategory(categoryid",{"_index":1504,"title":{},"body":{"controllers/CategoriesController.html":{},"injectables/CategoriesService.html":{}}}],["deletecron",{"_index":3097,"title":{},"body":{"injectables/TasksService.html":{}}}],["deletecron(name",{"_index":3123,"title":{},"body":{"injectables/TasksService.html":{}}}],["deleted",{"_index":1593,"title":{},"body":{"injectables/CategoriesService.html":{},"injectables/ReviewsService.html":{},"injectables/TasksService.html":{}}}],["deleted.evet",{"_index":1092,"title":{},"body":{"injectables/AppListener.html":{},"injectables/TasksService.html":{}}}],["deleted.evet.ts",{"_index":2037,"title":{},"body":{"classes/JwtRefreshTokenDeletedEvent.html":{}}}],["deleted.evet.ts:2",{"_index":2040,"title":{},"body":{"classes/JwtRefreshTokenDeletedEvent.html":{}}}],["deleted.evet.ts:3",{"_index":2041,"title":{},"body":{"classes/JwtRefreshTokenDeletedEvent.html":{}}}],["deleted.evet.ts:4",{"_index":2039,"title":{},"body":{"classes/JwtRefreshTokenDeletedEvent.html":{}}}],["deleted.evet.ts:5",{"_index":2043,"title":{},"body":{"classes/JwtRefreshTokenDeletedEvent.html":{}}}],["deletedadmin",{"_index":780,"title":{},"body":{"injectables/AdminService.html":{}}}],["deletefile",{"_index":2763,"title":{},"body":{"controllers/ProductController.html":{}}}],["deletefile(filepath",{"_index":2784,"title":{},"body":{"controllers/ProductController.html":{}}}],["deleteinterval",{"_index":3098,"title":{},"body":{"injectables/TasksService.html":{}}}],["deleteinterval(name",{"_index":3125,"title":{},"body":{"injectables/TasksService.html":{}}}],["deleteproduct",{"_index":2764,"title":{},"body":{"controllers/ProductController.html":{}}}],["deleteproduct(@param('productid",{"_index":2872,"title":{},"body":{"controllers/ProductController.html":{}}}],["deleteproduct(productid",{"_index":2788,"title":{},"body":{"controllers/ProductController.html":{}}}],["deletereview",{"_index":2956,"title":{},"body":{"controllers/ReviewsController.html":{},"injectables/ReviewsService.html":{}}}],["deletereview(reviewid",{"_index":2960,"title":{},"body":{"controllers/ReviewsController.html":{},"injectables/ReviewsService.html":{}}}],["deletetimeout",{"_index":3099,"title":{},"body":{"injectables/TasksService.html":{}}}],["deletetimeout(name",{"_index":3127,"title":{},"body":{"injectables/TasksService.html":{}}}],["delimiter",{"_index":1667,"title":{},"body":{"modules/CoreModule.html":{}}}],["dependencies",{"_index":478,"title":{"dependencies.html":{}},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CartModule.html":{},"modules/CategoriesModule.html":{},"modules/CoreModule.html":{},"modules/MailModule.html":{},"modules/OrdersModule.html":{},"modules/OwnerModule.html":{},"modules/ProductModule.html":{},"modules/ReviewsModule.html":{},"modules/RolesModule.html":{},"modules/UsersModule.html":{},"dependencies.html":{},"overview.html":{}}}],["desc",{"_index":739,"title":{},"body":{"injectables/AdminService.html":{},"controllers/ProductController.html":{},"injectables/UsersService.html":{}}}],["description",{"_index":131,"title":{},"body":{"classes/AddRoleDto.html":{},"guards/AdminGuard.html":{},"classes/AdminRefreshToken.html":{},"injectables/AdminService.html":{},"classes/BanUserDto.html":{},"interfaces/CategoryCreationAtrb.html":{},"classes/ChangeDto.html":{},"classes/CreateAccessTokenDto.html":{},"classes/CreateAdminDto.html":{},"classes/CreateAdminRefreshTokenDto.html":{},"classes/CreateOwnerDto.html":{},"classes/CreateOwnerRefreshTokenDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserRefreshTokenDto.html":{},"interfaces/InitializeUser.html":{},"classes/JwtRefreshTokenDeletedEvent.html":{},"classes/LoginDto.html":{},"classes/Nested.html":{},"classes/Nested-1.html":{},"classes/Owner.html":{},"guards/OwnerAdminGuard.html":{},"classes/OwnerRefreshToken.html":{},"injectables/OwnerService.html":{},"classes/Product.html":{},"classes/Product-1.html":{},"interfaces/ProductCreationAttrs.html":{},"classes/ResetDto.html":{},"interfaces/ReturnedCategory.html":{},"interfaces/ReturnedProduct.html":{},"interfaces/ReturnedProducts.html":{},"interfaces/ReturnedReview.html":{},"interfaces/ReviewCreationAtrb.html":{},"classes/Role.html":{},"interfaces/RolecreationAttrbs.html":{},"guards/RolesGuard.html":{},"classes/SignupDto.html":{},"classes/UpdateProductDto.html":{},"classes/UpdateUserDto.html":{},"guards/UserGuard.html":{},"interfaces/UserInterface.html":{},"interfaces/UserRefreshCreationAttrbs.html":{},"classes/UserRefreshToken.html":{},"classes/UserRoles.html":{},"interfaces/UsercreationAttrbs.html":{},"injectables/UsersService.html":{},"interfaces/ValidateUser.html":{},"index.html":{},"properties.html":{}}}],["description'})@column({type",{"_index":3018,"title":{},"body":{"classes/Role.html":{}}}],["description'})@isstring()@minlength(2)@maxlength(30)@matches(/[a",{"_index":1866,"title":{},"body":{"classes/CreateRoleDto.html":{}}}],["deserializedvalue",{"_index":2648,"title":{},"body":{"classes/ParseFormDataJsonPipe.html":{}}}],["desk",{"_index":2138,"title":{},"body":{"injectables/MailService.html":{}}}],["dest",{"_index":1182,"title":{},"body":{"modules/AppModule.html":{}}}],["destination",{"_index":1900,"title":{},"body":{"injectables/FilesService.html":{},"controllers/ProductController.html":{},"interfaces/fileCreated.html":{}}}],["destination(req",{"_index":1908,"title":{},"body":{"injectables/FilesService.html":{}}}],["detectors",{"_index":2131,"title":{},"body":{"injectables/MailService.html":{}}}],["development",{"_index":3605,"title":{},"body":{"index.html":{}}}],["dialect",{"_index":1200,"title":{},"body":{"modules/AppModule.html":{}}}],["died",{"_index":993,"title":{},"body":{"injectables/AppClusterService.html":{},"interfaces/Msg.html":{}}}],["diskstorage",{"_index":2823,"title":{},"body":{"controllers/ProductController.html":{}}}],["display:block!important",{"_index":2190,"title":{},"body":{"injectables/MailService.html":{}}}],["display:inline",{"_index":2234,"title":{},"body":{"injectables/MailService.html":{}}}],["display:inline!important",{"_index":2189,"title":{},"body":{"injectables/MailService.html":{}}}],["display:none",{"_index":2140,"title":{},"body":{"injectables/MailService.html":{}}}],["display:none!important",{"_index":2180,"title":{},"body":{"injectables/MailService.html":{}}}],["display:table",{"_index":2226,"title":{},"body":{"injectables/MailService.html":{}}}],["display:table!important",{"_index":2228,"title":{},"body":{"injectables/MailService.html":{}}}],["div",{"_index":2124,"title":{},"body":{"injectables/MailService.html":{}}}],["draindelay",{"_index":1175,"title":{},"body":{"modules/AppModule.html":{}}}],["dto",{"_index":690,"title":{},"body":{"injectables/AdminService.html":{},"injectables/OwnerService.html":{},"injectables/RolesService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["dto.banreason",{"_index":3471,"title":{},"body":{"injectables/UsersService.html":{}}}],["dto.email",{"_index":782,"title":{},"body":{"injectables/AdminService.html":{}}}],["dto.exception.error",{"_index":893,"title":{},"body":{"classes/ApiErrorExceptionFilter.html":{},"classes/RequestValidator.html":{}}}],["dto.exception.error.ts",{"_index":870,"title":{},"body":{"classes/ApiError.html":{},"classes/BadRequestError.html":{},"classes/NotFoundError.html":{}}}],["dto.exception.error.ts:17",{"_index":2288,"title":{},"body":{"classes/NotFoundError.html":{}}}],["dto.exception.error.ts:23",{"_index":1387,"title":{},"body":{"classes/BadRequestError.html":{}}}],["dto.exception.error.ts:4",{"_index":875,"title":{},"body":{"classes/ApiError.html":{}}}],["dto.exception.error.ts:5",{"_index":873,"title":{},"body":{"classes/ApiError.html":{}}}],["dto.isadmin",{"_index":751,"title":{},"body":{"injectables/AdminService.html":{}}}],["dto.phonenumber",{"_index":783,"title":{},"body":{"injectables/AdminService.html":{}}}],["dto/add",{"_index":3428,"title":{},"body":{"injectables/UsersService.html":{}}}],["dto/ban",{"_index":3363,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["dto/change.password.dto",{"_index":1278,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{}}}],["dto/create",{"_index":203,"title":{},"body":{"controllers/AdminController.html":{},"injectables/AdminJwtRefreshService.html":{},"modules/AdminModule.html":{},"injectables/AdminService.html":{},"injectables/UserJwtRefreshTokenService.html":{},"injectables/UsersService.html":{}}}],["dto/create.category.dto",{"_index":1523,"title":{},"body":{"controllers/CategoriesController.html":{},"injectables/CategoriesService.html":{}}}],["dto/create.owner.dto",{"_index":2588,"title":{},"body":{"injectables/OwnerService.html":{}}}],["dto/create.owner.refresh.token.dto",{"_index":2478,"title":{},"body":{"injectables/OwnerJwtRefreshService.html":{}}}],["dto/create.product.dto",{"_index":2820,"title":{},"body":{"controllers/ProductController.html":{}}}],["dto/create.role.dto",{"_index":3047,"title":{},"body":{"controllers/RolesController.html":{},"injectables/RolesService.html":{}}}],["dto/login.dto",{"_index":1270,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{}}}],["dto/reset.password.dto",{"_index":1271,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{}}}],["dto/signup.dto",{"_index":1272,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{}}}],["dto/update",{"_index":3365,"title":{},"body":{"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["dto/update.category.dto",{"_index":1573,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["dto/update.product.dto",{"_index":2825,"title":{},"body":{"controllers/ProductController.html":{}}}],["duration",{"_index":1156,"title":{},"body":{"modules/AppModule.html":{}}}],["dynamicmodule",{"_index":3189,"title":{},"body":{"modules/TelegramModule.html":{}}}],["e",{"_index":1930,"title":{},"body":{"injectables/FilesService.html":{},"injectables/ParseJsonPipe.html":{},"injectables/TasksService.html":{},"interfaces/fileCreated.html":{}}}],["e2e",{"_index":3614,"title":{},"body":{"index.html":{}}}],["each",{"_index":1852,"title":{},"body":{"classes/CreateProductDto.html":{},"classes/Nested.html":{},"classes/Nested-1.html":{},"injectables/TasksService.html":{},"classes/UpdateProductDto.html":{}}}],["edit",{"_index":1746,"title":{},"body":{"classes/CreateAdminDto.html":{},"injectables/MailService.html":{}}}],["editcontent",{"_index":311,"title":{},"body":{"interfaces/AdminInterface.html":{},"interfaces/AdminRefreshTokenCreationAttrbs.html":{},"injectables/AdminService.html":{},"injectables/AdminUserMiddleware.html":{},"interfaces/AdmincreationAttrbs.html":{},"classes/CreateAdminDto.html":{},"interfaces/InitializeUser.html":{},"interfaces/RolecreationAttrbs.html":{},"injectables/UserAdminMiddleware.html":{},"interfaces/UserInterface.html":{},"interfaces/UserRefreshCreationAttrbs.html":{},"interfaces/UsercreationAttrbs.html":{},"injectables/UsersService.html":{},"interfaces/ValidateUser.html":{}}}],["editcontent.tostring",{"_index":835,"title":{},"body":{"injectables/AdminUserMiddleware.html":{},"injectables/UserAdminMiddleware.html":{}}}],["editcontentguard",{"_index":1889,"title":{"guards/EditContentGuard.html":{}},"body":{"guards/EditContentGuard.html":{},"controllers/ProductController.html":{},"controllers/ReviewsController.html":{}}}],["editcontentguard)@httpcode(200",{"_index":2786,"title":{},"body":{"controllers/ProductController.html":{}}}],["editcontentguard)@httpcode(201",{"_index":2962,"title":{},"body":{"controllers/ReviewsController.html":{}}}],["editcontentguard)@httpcode(202",{"_index":2790,"title":{},"body":{"controllers/ProductController.html":{}}}],["editcontentguard)@httpcode(202)@useinterceptors(undefined",{"_index":2814,"title":{},"body":{"controllers/ProductController.html":{}}}],["editwebsite",{"_index":312,"title":{},"body":{"interfaces/AdminInterface.html":{},"interfaces/AdminRefreshTokenCreationAttrbs.html":{},"injectables/AdminService.html":{},"injectables/AdminUserMiddleware.html":{},"interfaces/AdmincreationAttrbs.html":{},"classes/CreateAdminDto.html":{},"interfaces/InitializeUser.html":{},"interfaces/RolecreationAttrbs.html":{},"injectables/UserAdminMiddleware.html":{},"interfaces/UserInterface.html":{},"interfaces/UserRefreshCreationAttrbs.html":{},"interfaces/UsercreationAttrbs.html":{},"injectables/UsersService.html":{},"interfaces/ValidateUser.html":{}}}],["editwebsite.tostring",{"_index":836,"title":{},"body":{"injectables/AdminUserMiddleware.html":{},"injectables/UserAdminMiddleware.html":{}}}],["editwebsiteguard",{"_index":1893,"title":{"guards/EditWebsiteGuard.html":{}},"body":{"guards/EditWebsiteGuard.html":{}}}],["efficient",{"_index":3596,"title":{},"body":{"index.html":{}}}],["email",{"_index":313,"title":{},"body":{"interfaces/AdminInterface.html":{},"injectables/AdminJwtRefreshService.html":{},"classes/AdminRefreshToken.html":{},"interfaces/AdminRefreshTokenCreationAttrbs.html":{},"injectables/AdminService.html":{},"injectables/AdminUserMiddleware.html":{},"interfaces/AdmincreationAttrbs.html":{},"interfaces/AuthUser.html":{},"interfaces/CodeDto.html":{},"classes/CreateAccessTokenDto.html":{},"classes/CreateAdminDto.html":{},"classes/CreateAdminRefreshTokenDto.html":{},"classes/CreateOwnerDto.html":{},"classes/CreateOwnerRefreshTokenDto.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserRefreshTokenDto.html":{},"injectables/InitializeEmailMiddleware.html":{},"interfaces/InitializeUser.html":{},"classes/LoginDto.html":{},"classes/Owner.html":{},"interfaces/OwnerCreationAttrbs.html":{},"injectables/OwnerJwtRefreshService.html":{},"classes/OwnerRefreshToken.html":{},"interfaces/OwnerRefreshTokenCreationAttrbs.html":{},"injectables/OwnerService.html":{},"interfaces/Payload.html":{},"classes/ResetDto.html":{},"interfaces/ReturnedAdmin.html":{},"interfaces/ReturnedOwner.html":{},"interfaces/ReturnedUser.html":{},"interfaces/RolecreationAttrbs.html":{},"classes/SignupDto.html":{},"interfaces/Tokens.html":{},"injectables/UserAdminMiddleware.html":{},"interfaces/UserInterface.html":{},"injectables/UserJwtRefreshTokenService.html":{},"interfaces/UserRefreshCreationAttrbs.html":{},"classes/UserRefreshToken.html":{},"interfaces/UsercreationAttrbs.html":{},"injectables/UsersService.html":{},"interfaces/ValidateUser.html":{}}}],["email'})@isemail()@column({type",{"_index":613,"title":{},"body":{"classes/AdminRefreshToken.html":{},"classes/Owner.html":{},"classes/OwnerRefreshToken.html":{},"classes/UserRefreshToken.html":{}}}],["email'})@isstring()@isemail()@matches(/^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0",{"_index":1718,"title":{},"body":{"classes/CreateAccessTokenDto.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserRefreshTokenDto.html":{},"classes/LoginDto.html":{},"classes/ResetDto.html":{},"classes/SignupDto.html":{}}}],["email'})@isstring()@isemail()@matches(/^[a",{"_index":1750,"title":{},"body":{"classes/CreateAdminDto.html":{},"classes/CreateAdminRefreshTokenDto.html":{},"classes/CreateOwnerDto.html":{},"classes/CreateOwnerRefreshTokenDto.html":{}}}],["email.middleware",{"_index":1356,"title":{},"body":{"modules/AuthModule.html":{}}}],["email.middleware.ts",{"_index":1994,"title":{},"body":{"injectables/InitializeEmailMiddleware.html":{}}}],["email.middleware.ts:18",{"_index":1995,"title":{},"body":{"injectables/InitializeEmailMiddleware.html":{}}}],["email.middleware.ts:24",{"_index":1996,"title":{},"body":{"injectables/InitializeEmailMiddleware.html":{}}}],["email_not_provided",{"_index":1997,"title":{},"body":{"injectables/InitializeEmailMiddleware.html":{}}}],["email_validation",{"_index":1724,"title":{},"body":{"classes/CreateAccessTokenDto.html":{},"classes/CreateAdminDto.html":{},"classes/CreateAdminRefreshTokenDto.html":{},"classes/CreateOwnerDto.html":{},"classes/CreateOwnerRefreshTokenDto.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserRefreshTokenDto.html":{},"classes/LoginDto.html":{},"classes/ResetDto.html":{},"classes/SignupDto.html":{}}}],["emitter",{"_index":1090,"title":{},"body":{"injectables/AppListener.html":{},"modules/CoreModule.html":{},"injectables/TasksService.html":{},"dependencies.html":{}}}],["en",{"_index":948,"title":{},"body":{"classes/ApiException.html":{},"controllers/AuthController.html":{},"injectables/CategoriesService.html":{},"classes/Category.html":{},"interfaces/CategoryCreationAtrb.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateProductDto.html":{},"injectables/MailService.html":{},"classes/Nested.html":{},"classes/Nested-1.html":{},"classes/Product-1.html":{},"interfaces/ProductCreationAttrs.html":{},"interfaces/ReturnedCategory.html":{},"interfaces/ReturnedProduct.html":{},"interfaces/ReturnedProducts.html":{},"interfaces/ReturnedReview.html":{},"interfaces/ReviewCreationAtrb.html":{},"classes/UpdateCategoryDto.html":{},"classes/UpdateProductDto.html":{}}}],["env",{"_index":3539,"title":{},"body":{"dependencies.html":{}}}],["envfilepath",{"_index":550,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CartModule.html":{},"modules/CategoriesModule.html":{},"modules/CoreModule.html":{},"modules/MailModule.html":{},"modules/OrdersModule.html":{},"modules/OwnerModule.html":{},"modules/ProductModule.html":{},"modules/ReviewsModule.html":{},"modules/RolesModule.html":{},"modules/UsersModule.html":{}}}],["erorr_while_sending_email",{"_index":2098,"title":{},"body":{"injectables/MailService.html":{}}}],["err",{"_index":400,"title":{},"body":{"injectables/AdminJwtRefreshService.html":{},"injectables/AdminUserMiddleware.html":{},"controllers/AppController.html":{},"injectables/AuthMiddleware.html":{},"injectables/FilesService.html":{},"injectables/GlobalInterceptor.html":{},"injectables/InitializeEmailMiddleware.html":{},"injectables/InitializeUserMiddleware.html":{},"guards/JwtAuthGuard.html":{},"injectables/MailService.html":{},"injectables/OwnerJwtRefreshService.html":{},"controllers/ProductController.html":{},"injectables/ProductMiddleware.html":{},"guards/RolesGuard.html":{},"injectables/UserAdminMiddleware.html":{},"injectables/UserJwtRefreshTokenService.html":{},"injectables/UserMiddleware.html":{},"injectables/UserMiddleware-1.html":{},"interfaces/fileCreated.html":{}}}],["err.property",{"_index":3491,"title":{},"body":{"injectables/ValidateDto.html":{}}}],["error",{"_index":404,"title":{},"body":{"injectables/AdminJwtRefreshService.html":{},"classes/ApiError.html":{},"classes/ApiException.html":{},"controllers/AuthController.html":{},"classes/BadRequestError.html":{},"injectables/FilesService.html":{},"classes/NotFoundError.html":{},"injectables/OwnerJwtRefreshService.html":{},"controllers/ProductController.html":{},"controllers/ReviewsController.html":{},"controllers/RolesController.html":{},"injectables/TasksService.html":{},"injectables/UserJwtRefreshTokenService.html":{},"interfaces/fileCreated.html":{}}}],["error('invalid",{"_index":2859,"title":{},"body":{"controllers/ProductController.html":{}}}],["error('only",{"_index":1191,"title":{},"body":{"modules/AppModule.html":{},"injectables/FilesService.html":{},"controllers/ProductController.html":{},"interfaces/fileCreated.html":{}}}],["error,acceptfile",{"_index":1911,"title":{},"body":{"injectables/FilesService.html":{}}}],["error,destination",{"_index":1909,"title":{},"body":{"injectables/FilesService.html":{}}}],["error.capturestacktrace(this",{"_index":879,"title":{},"body":{"classes/ApiError.html":{},"classes/BadRequestError.html":{},"classes/NotFoundError.html":{}}}],["error_while_removing_token",{"_index":375,"title":{},"body":{"injectables/AdminJwtRefreshService.html":{},"classes/ApiException.html":{},"injectables/OwnerJwtRefreshService.html":{},"injectables/UserJwtRefreshTokenService.html":{}}}],["error_while_saving_token",{"_index":376,"title":{},"body":{"injectables/AdminJwtRefreshService.html":{},"classes/ApiException.html":{},"injectables/OwnerJwtRefreshService.html":{},"injectables/UserJwtRefreshTokenService.html":{}}}],["error_while_signing_token",{"_index":378,"title":{},"body":{"injectables/AdminJwtRefreshService.html":{},"classes/ApiException.html":{},"injectables/OwnerJwtRefreshService.html":{},"injectables/UserJwtRefreshTokenService.html":{}}}],["error_while_validating_token",{"_index":377,"title":{},"body":{"injectables/AdminJwtRefreshService.html":{},"classes/ApiException.html":{},"injectables/OwnerJwtRefreshService.html":{},"injectables/UserJwtRefreshTokenService.html":{}}}],["erroritem",{"_index":2928,"title":{},"body":{"classes/RequestValidator.html":{}}}],["errors",{"_index":887,"title":{},"body":{"classes/ApiError.html":{},"classes/ApiException.html":{},"classes/BadRequestError.html":{},"classes/NotFoundError.html":{},"classes/RequestValidator.html":{},"injectables/ValidateDto.html":{}}}],["errors.en",{"_index":954,"title":{},"body":{"classes/ApiException.html":{}}}],["errors.length",{"_index":2927,"title":{},"body":{"classes/RequestValidator.html":{},"injectables/ValidateDto.html":{}}}],["errors.map((err",{"_index":3490,"title":{},"body":{"injectables/ValidateDto.html":{}}}],["errors.rs",{"_index":955,"title":{},"body":{"classes/ApiException.html":{}}}],["errors.ru",{"_index":953,"title":{},"body":{"classes/ApiException.html":{}}}],["errors.ua",{"_index":952,"title":{},"body":{"classes/ApiException.html":{}}}],["es",{"_index":2147,"title":{},"body":{"injectables/MailService.html":{}}}],["esd",{"_index":2231,"title":{},"body":{"injectables/MailService.html":{}}}],["etrhg45ty5yeewt4t4665y",{"_index":1632,"title":{},"body":{"classes/ChangeDto.html":{},"classes/CreateAdminDto.html":{},"classes/CreateOwnerDto.html":{},"classes/CreateUserDto.html":{},"classes/LoginDto.html":{},"classes/Owner.html":{},"classes/ResetDto.html":{},"classes/SignupDto.html":{}}}],["event",{"_index":1086,"title":{},"body":{"injectables/AppListener.html":{}}}],["eventemitter",{"_index":3106,"title":{},"body":{"injectables/TasksService.html":{}}}],["eventemitter2",{"_index":3107,"title":{},"body":{"injectables/TasksService.html":{}}}],["eventemittermodule",{"_index":1660,"title":{},"body":{"modules/CoreModule.html":{}}}],["eventemittermodule.forroot",{"_index":1665,"title":{},"body":{"modules/CoreModule.html":{}}}],["events/jwt",{"_index":1091,"title":{},"body":{"injectables/AppListener.html":{},"injectables/TasksService.html":{}}}],["example",{"_index":144,"title":{},"body":{"classes/AddRoleDto.html":{},"classes/AdminRefreshToken.html":{},"classes/BanUserDto.html":{},"classes/ChangeDto.html":{},"classes/CreateAccessTokenDto.html":{},"classes/CreateAdminDto.html":{},"classes/CreateAdminRefreshTokenDto.html":{},"classes/CreateOwnerDto.html":{},"classes/CreateOwnerRefreshTokenDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserRefreshTokenDto.html":{},"classes/LoginDto.html":{},"classes/Owner.html":{},"classes/OwnerRefreshToken.html":{},"classes/ResetDto.html":{},"classes/Role.html":{},"classes/SignupDto.html":{},"classes/UpdateUserDto.html":{},"classes/UserRefreshToken.html":{},"classes/UserRoles.html":{}}}],["except",{"_index":2641,"title":{},"body":{"classes/ParseFormDataJsonPipe.html":{}}}],["except?.length",{"_index":2645,"title":{},"body":{"classes/ParseFormDataJsonPipe.html":{}}}],["exception",{"_index":853,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"classes/ApiErrorExceptionFilter.html":{},"classes/ApiExceptionFilter.html":{},"classes/HttpExceptionFilter.html":{}}}],["exception.errors",{"_index":961,"title":{},"body":{"classes/ApiExceptionFilter.html":{}}}],["exception.filter",{"_index":234,"title":{},"body":{"controllers/AdminController.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"controllers/CardController.html":{},"controllers/CategoriesController.html":{},"controllers/OrdersController.html":{},"controllers/ProductController.html":{},"controllers/ReviewsController.html":{},"controllers/RolesController.html":{},"controllers/UsersController.html":{}}}],["exception.filter.ts",{"_index":957,"title":{},"body":{"classes/ApiExceptionFilter.html":{},"classes/HttpExceptionFilter.html":{}}}],["exception.filter.ts:11",{"_index":1982,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["exception.filter.ts:8",{"_index":958,"title":{},"body":{"classes/ApiExceptionFilter.html":{}}}],["exception.getstatus",{"_index":861,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"classes/HttpExceptionFilter.html":{}}}],["exception.message",{"_index":860,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"classes/ApiErrorExceptionFilter.html":{},"classes/ApiExceptionFilter.html":{},"classes/HttpExceptionFilter.html":{}}}],["exception.rawerrors",{"_index":901,"title":{},"body":{"classes/ApiErrorExceptionFilter.html":{}}}],["exception.stack.tostring().split",{"_index":903,"title":{},"body":{"classes/ApiErrorExceptionFilter.html":{},"classes/ApiExceptionFilter.html":{}}}],["exception.status",{"_index":960,"title":{},"body":{"classes/ApiExceptionFilter.html":{}}}],["exception.statuscode",{"_index":897,"title":{},"body":{"classes/ApiErrorExceptionFilter.html":{}}}],["exceptionfilter",{"_index":844,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"classes/ApiErrorExceptionFilter.html":{},"classes/ApiExceptionFilter.html":{},"classes/HttpExceptionFilter.html":{}}}],["exceptions.filter",{"_index":1119,"title":{},"body":{"modules/AppModule.html":{},"modules/CoreModule.html":{}}}],["exceptions.filter.ts",{"_index":843,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["exceptions.filter.ts:11",{"_index":847,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["exceptions.filter.ts:13",{"_index":852,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["exceptions/api.exception",{"_index":49,"title":{},"body":{"injectables/ActivateMiddleware.html":{},"guards/AddContentGuard.html":{},"guards/AdminGuard.html":{},"injectables/AdminUserMiddleware.html":{},"classes/ApiExceptionFilter.html":{},"guards/AuthFerfershGuard.html":{},"guards/EditContentGuard.html":{},"guards/EditWebsiteGuard.html":{},"injectables/InitializeEmailMiddleware.html":{},"injectables/InitializeUserMiddleware.html":{},"guards/JwtAuthGuard.html":{},"guards/OwnerAdminGuard.html":{},"guards/RefreshAuthGuard.html":{},"guards/RolesGuard.html":{},"injectables/UserAdminMiddleware.html":{},"guards/UserGuard.html":{}}}],["exceptions/validate",{"_index":892,"title":{},"body":{"classes/ApiErrorExceptionFilter.html":{},"classes/RequestValidator.html":{}}}],["exceptions/validation.excetion",{"_index":3485,"title":{},"body":{"injectables/ValidateDto.html":{}}}],["exclude",{"_index":2428,"title":{},"body":{"classes/Owner.html":{}}}],["executing",{"_index":3156,"title":{},"body":{"injectables/TasksService.html":{}}}],["executioncontext",{"_index":90,"title":{},"body":{"guards/AddContentGuard.html":{},"guards/AdminGuard.html":{},"guards/AuthFerfershGuard.html":{},"guards/EditContentGuard.html":{},"guards/EditWebsiteGuard.html":{},"injectables/GlobalInterceptor.html":{},"guards/JwtAuthGuard.html":{},"guards/OwnerAdminGuard.html":{},"guards/RefreshAuthGuard.html":{},"guards/RolesGuard.html":{},"guards/UserGuard.html":{}}}],["existingowners",{"_index":2589,"title":{},"body":{"injectables/OwnerService.html":{}}}],["existingowners.length",{"_index":2592,"title":{},"body":{"injectables/OwnerService.html":{}}}],["existssync",{"_index":1918,"title":{},"body":{"injectables/FilesService.html":{},"controllers/ProductController.html":{},"interfaces/fileCreated.html":{}}}],["existssync(destination",{"_index":1946,"title":{},"body":{"injectables/FilesService.html":{},"controllers/ProductController.html":{},"interfaces/fileCreated.html":{}}}],["existssync(imagespath",{"_index":1948,"title":{},"body":{"injectables/FilesService.html":{},"controllers/ProductController.html":{},"interfaces/fileCreated.html":{}}}],["expandvariables",{"_index":552,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CartModule.html":{},"modules/CategoriesModule.html":{},"modules/CoreModule.html":{},"modules/MailModule.html":{},"modules/OrdersModule.html":{},"modules/OwnerModule.html":{},"modules/ProductModule.html":{},"modules/ReviewsModule.html":{},"modules/RolesModule.html":{},"modules/UsersModule.html":{}}}],["expiredate",{"_index":357,"title":{},"body":{"injectables/AdminJwtRefreshService.html":{},"classes/AdminRefreshToken.html":{},"interfaces/AuthUser.html":{},"interfaces/CodeDto.html":{},"injectables/OwnerJwtRefreshService.html":{},"classes/OwnerRefreshToken.html":{},"interfaces/Payload.html":{},"interfaces/ReturnedAdmin.html":{},"interfaces/ReturnedOwner.html":{},"interfaces/ReturnedUser.html":{},"interfaces/Tokens.html":{},"injectables/UserJwtRefreshTokenService.html":{},"classes/UserRefreshToken.html":{}}}],["expiredate'})@column({type",{"_index":616,"title":{},"body":{"classes/AdminRefreshToken.html":{},"classes/OwnerRefreshToken.html":{},"classes/UserRefreshToken.html":{}}}],["expiresin",{"_index":560,"title":{},"body":{"modules/AdminModule.html":{},"modules/AuthModule.html":{},"modules/OwnerModule.html":{},"modules/UsersModule.html":{}}}],["export",{"_index":51,"title":{},"body":{"injectables/ActivateMiddleware.html":{},"guards/AddContentGuard.html":{},"classes/AddRoleDto.html":{},"controllers/AdminController.html":{},"guards/AdminGuard.html":{},"interfaces/AdminInterface.html":{},"injectables/AdminJwtRefreshService.html":{},"modules/AdminModule.html":{},"classes/AdminRefreshToken.html":{},"interfaces/AdminRefreshTokenCreationAttrbs.html":{},"injectables/AdminService.html":{},"injectables/AdminUserMiddleware.html":{},"interfaces/AdmincreationAttrbs.html":{},"classes/AllExceptionsFilter.html":{},"classes/ApiError.html":{},"classes/ApiErrorExceptionFilter.html":{},"classes/ApiException.html":{},"classes/ApiExceptionFilter.html":{},"injectables/AppClusterService.html":{},"controllers/AppController.html":{},"injectables/AppListener.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"guards/AuthFerfershGuard.html":{},"injectables/AuthMiddleware.html":{},"modules/AuthModule.html":{},"interfaces/AuthUser.html":{},"classes/BadRequestError.html":{},"classes/BanUserDto.html":{},"classes/BookmarksProducts.html":{},"controllers/CardController.html":{},"injectables/CardService.html":{},"classes/Cart.html":{},"modules/CartModule.html":{},"classes/CartProduct.html":{},"classes/CartProduct-1.html":{},"controllers/CategoriesController.html":{},"modules/CategoriesModule.html":{},"injectables/CategoriesService.html":{},"classes/Category.html":{},"interfaces/CategoryCreationAtrb.html":{},"classes/ChangeDto.html":{},"interfaces/CodeDto.html":{},"modules/CoreModule.html":{},"injectables/CorsMiddleware.html":{},"classes/CreateAccessTokenDto.html":{},"classes/CreateAdminDto.html":{},"classes/CreateAdminRefreshTokenDto.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateOwnerDto.html":{},"classes/CreateOwnerRefreshTokenDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateReviewDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserRefreshTokenDto.html":{},"guards/EditContentGuard.html":{},"guards/EditWebsiteGuard.html":{},"injectables/FilesService.html":{},"classes/GarbageCollectingProcessor.html":{},"injectables/GlobalInterceptor.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/ITelegramModuleAsyncOptions.html":{},"interfaces/ITelegramOptions.html":{},"injectables/InitializeEmailMiddleware.html":{},"interfaces/InitializeUser.html":{},"injectables/InitializeUserMiddleware.html":{},"guards/JwtAuthGuard.html":{},"classes/JwtRefreshTokenDeletedEvent.html":{},"injectables/LocationMiddleware.html":{},"classes/LoginDto.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"classes/MatchConstraint.html":{},"interfaces/Msg.html":{},"classes/Nested.html":{},"classes/Nested-1.html":{},"classes/NotFoundError.html":{},"classes/Order.html":{},"classes/OrderProduct.html":{},"controllers/OrdersController.html":{},"modules/OrdersModule.html":{},"injectables/OrdersService.html":{},"classes/Owner.html":{},"guards/OwnerAdminGuard.html":{},"interfaces/OwnerCreationAttrbs.html":{},"injectables/OwnerJwtRefreshService.html":{},"modules/OwnerModule.html":{},"classes/OwnerRefreshToken.html":{},"interfaces/OwnerRefreshTokenCreationAttrbs.html":{},"injectables/OwnerService.html":{},"classes/ParseFormDataJsonPipe.html":{},"injectables/ParseJsonPipe.html":{},"interfaces/Payload.html":{},"classes/Product.html":{},"classes/Product-1.html":{},"classes/ProductCategories.html":{},"controllers/ProductController.html":{},"interfaces/ProductCreationAttrs.html":{},"injectables/ProductMiddleware.html":{},"modules/ProductModule.html":{},"classes/ProductReviews.html":{},"guards/RefreshAuthGuard.html":{},"interfaces/RequestHeaders.html":{},"classes/RequestValidator.html":{},"classes/ResetDto.html":{},"interfaces/ReturnedAdmin.html":{},"interfaces/ReturnedCategory.html":{},"interfaces/ReturnedOwner.html":{},"interfaces/ReturnedProduct.html":{},"interfaces/ReturnedProducts.html":{},"interfaces/ReturnedReview.html":{},"interfaces/ReturnedUser.html":{},"classes/Review.html":{},"interfaces/ReviewCreationAtrb.html":{},"controllers/ReviewsController.html":{},"modules/ReviewsModule.html":{},"injectables/ReviewsService.html":{},"classes/Role.html":{},"interfaces/RolecreationAttrbs.html":{},"controllers/RolesController.html":{},"guards/RolesGuard.html":{},"modules/RolesModule.html":{},"injectables/RolesService.html":{},"classes/SignupDto.html":{},"injectables/TasksService.html":{},"modules/TelegramModule.html":{},"injectables/TelegramService.html":{},"injectables/ThrottlerBehindProxyGuard.html":{},"interfaces/Tokens.html":{},"classes/UpdateCategoryDto.html":{},"classes/UpdateProductDto.html":{},"classes/UpdateUserDto.html":{},"injectables/UserAdminMiddleware.html":{},"guards/UserGuard.html":{},"interfaces/UserInterface.html":{},"injectables/UserJwtRefreshTokenService.html":{},"injectables/UserMiddleware.html":{},"injectables/UserMiddleware-1.html":{},"interfaces/UserRefreshCreationAttrbs.html":{},"classes/UserRefreshToken.html":{},"classes/UserRoles.html":{},"interfaces/UsercreationAttrbs.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"injectables/ValidateDto.html":{},"interfaces/ValidateUser.html":{},"classes/ValidationException.html":{},"classes/WatchedProducts.html":{},"interfaces/fileCreated.html":{}}}],["exports",{"_index":489,"title":{},"body":{"modules/AdminModule.html":{},"modules/AuthModule.html":{},"modules/MailModule.html":{},"modules/OwnerModule.html":{},"modules/RolesModule.html":{},"modules/TelegramModule.html":{},"modules/UsersModule.html":{}}}],["express",{"_index":40,"title":{},"body":{"injectables/ActivateMiddleware.html":{},"injectables/AdminUserMiddleware.html":{},"classes/ApiErrorExceptionFilter.html":{},"classes/ApiExceptionFilter.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"injectables/AuthMiddleware.html":{},"injectables/CorsMiddleware.html":{},"injectables/FilesService.html":{},"classes/HttpExceptionFilter.html":{},"injectables/InitializeEmailMiddleware.html":{},"injectables/InitializeUserMiddleware.html":{},"injectables/LocationMiddleware.html":{},"controllers/ProductController.html":{},"injectables/ProductMiddleware.html":{},"interfaces/RequestHeaders.html":{},"classes/RequestValidator.html":{},"injectables/UserAdminMiddleware.html":{},"injectables/UserMiddleware.html":{},"injectables/UserMiddleware-1.html":{},"controllers/UsersController.html":{},"dependencies.html":{},"interfaces/fileCreated.html":{}}}],["express.multer.file",{"_index":1906,"title":{},"body":{"injectables/FilesService.html":{},"controllers/ProductController.html":{},"interfaces/fileCreated.html":{}}}],["ext",{"_index":1936,"title":{},"body":{"injectables/FilesService.html":{},"controllers/ProductController.html":{},"interfaces/fileCreated.html":{}}}],["extends",{"_index":577,"title":{},"body":{"classes/AdminRefreshToken.html":{},"classes/ApiError.html":{},"classes/ApiException.html":{},"classes/BadRequestError.html":{},"classes/BookmarksProducts.html":{},"classes/Cart.html":{},"classes/CartProduct.html":{},"classes/CartProduct-1.html":{},"classes/Category.html":{},"interfaces/ITelegramModuleAsyncOptions.html":{},"interfaces/ITelegramOptions.html":{},"classes/NotFoundError.html":{},"classes/Order.html":{},"classes/OrderProduct.html":{},"classes/Owner.html":{},"classes/OwnerRefreshToken.html":{},"classes/Product.html":{},"classes/Product-1.html":{},"classes/ProductCategories.html":{},"classes/ProductReviews.html":{},"classes/Review.html":{},"classes/Role.html":{},"injectables/ThrottlerBehindProxyGuard.html":{},"classes/UserRefreshToken.html":{},"classes/UserRoles.html":{},"classes/ValidationException.html":{},"classes/WatchedProducts.html":{}}}],["extname",{"_index":1112,"title":{},"body":{"modules/AppModule.html":{},"injectables/FilesService.html":{},"controllers/ProductController.html":{},"interfaces/fileCreated.html":{}}}],["extname(file.originalname",{"_index":1937,"title":{},"body":{"injectables/FilesService.html":{},"controllers/ProductController.html":{},"interfaces/fileCreated.html":{}}}],["eyjhbgcioijiujpzi1niisinr5cci6idfuthojpkpxvcj9.eyj1c2vyswqiojesimlzqwn0axzhdgvkijpmywxzzswizw1hawwioij1c2vyqgdtywlslmnvbsisinjvbgvzijpbeyjpzci6mswidmfsdwuioijvu0vsiiwizgvzy3jpchrpb24ioijzaw1wbgugdxnlciisinjpz2h0msi6zmfsc2usinjpz2h0mii6zmfsc2usimnyzwf0zwrbdci6ijiwmjmtmdetmtzumta6nde6mjguoty5wiisinvwzgf0zwrbdci6ijiwmjmtmdetmtzumta6nde6mjguoty5wiisilvzzxjsb2xlcyi6eyjpzci6mswicm9szulkijoxlcj1c2vyswqiojesimfkbwluswqiom51bgx9fv0simlhdci6mty3mzg2ntcxniwizxhwijoxnjczody5mze2fq.cx0yqrxwrvrl8wnmsntiitl632orcoxyujunq",{"_index":2536,"title":{},"body":{"classes/OwnerRefreshToken.html":{}}}],["eyjhbgcioijrdyiuzi1niisinr5cci6ikpxvcj9.eyj1c2vyswqiojesimlzqwn0axzhdgvkijpmywxzzswizw1hawwioij1c2vyqgdtywlslmnvbsisinjvbgvzijpbeyjpzci6mswidmfsdwuioijvu0vsiiwizgvzy3jpchrpb24ioijzaw1wbgugdxnlciisinjpz2h0msi6zmfsc2usinjpz2h0mii6zmfsc2usimnyzwf0zwrbdci6ijiwmjmtmdetmtzumta6nde6mjguoty5wiisinvwzgf0zwrbdci6ijiwmjmtmdetmtzumta6nde6mjguoty5wiisilvzzxjsb2xlcyi6eyjpzci6mswicm9szulkijoxlcj1c2vyswqiojesimfkbwluswqiom51bgx9fv0simlhdci6mty3mzg2ntcxniwizxhwijoxnjczody5mze2fq.cx0yqrxwrvrl8wnmsntiitl632orcoxyujunq",{"_index":608,"title":{},"body":{"classes/AdminRefreshToken.html":{}}}],["eyjuilbgghbgcioijiuzihnuohli1niisinr5cci6ikpxvcj9.eyj1c2vyswqiojesimlzqwn0axzhdgvkijpmywxzzswizw1hawwioij1c2vyqgdtywlslmnvbsisinjvbgvzijpbeyjpzci6mswidmfsdwuioijvu0vsiiwizgvzy3jpchrpb24ioijzaw1wbgugdxnlciisinjpz2h0msi6zmfsc2usinjpz2h0mii6zmfsc2usimnyzwf0zwrbdci6ijiwmjmtmdetmtzumta6nde6mjguoty5wiisinvwzgf0zwrbdci6ijiwmjmtmdetmtzumta6nde6mjguoty5wiisilvzzxjsb2xlcyi6eyjpzci6mswicm9szulkijoxlcj1c2vyswqiojesimfkbwluswqiom51bgx9fv0simlhdci6mty3mzg2ntcxniwizxhwijoxnjczody5mze2fq.cx0yqrxwrvrl8wnmsntiitl632orcoxyujunq",{"_index":3315,"title":{},"body":{"classes/UserRefreshToken.html":{}}}],["failed",{"_index":2933,"title":{},"body":{"classes/RequestValidator.html":{}}}],["false",{"_index":452,"title":{},"body":{"injectables/AdminJwtRefreshService.html":{},"classes/AdminRefreshToken.html":{},"injectables/AdminService.html":{},"classes/ApiErrorExceptionFilter.html":{},"classes/ApiExceptionFilter.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"classes/BookmarksProducts.html":{},"classes/Cart.html":{},"classes/CartProduct.html":{},"classes/CartProduct-1.html":{},"classes/Category.html":{},"modules/CoreModule.html":{},"injectables/CorsMiddleware.html":{},"classes/CreateAdminDto.html":{},"injectables/FilesService.html":{},"modules/MailModule.html":{},"classes/Order.html":{},"classes/OrderProduct.html":{},"classes/Owner.html":{},"guards/OwnerAdminGuard.html":{},"injectables/OwnerJwtRefreshService.html":{},"classes/OwnerRefreshToken.html":{},"injectables/OwnerService.html":{},"classes/Product.html":{},"classes/Product-1.html":{},"classes/ProductCategories.html":{},"controllers/ProductController.html":{},"classes/ProductReviews.html":{},"interfaces/RequestHeaders.html":{},"classes/Review.html":{},"classes/Role.html":{},"guards/UserGuard.html":{},"injectables/UserJwtRefreshTokenService.html":{},"classes/UserRefreshToken.html":{},"classes/UserRoles.html":{},"classes/WatchedProducts.html":{},"interfaces/fileCreated.html":{}}}],["family:inherit!important",{"_index":2135,"title":{},"body":{"injectables/MailService.html":{}}}],["fastify",{"_index":3515,"title":{},"body":{"dependencies.html":{}}}],["favicon",{"_index":3569,"title":{},"body":{"dependencies.html":{}}}],["fetchrenewalcode",{"_index":1219,"title":{},"body":{"controllers/AuthController.html":{}}}],["fetchrenewalcode(codedto",{"_index":1237,"title":{},"body":{"controllers/AuthController.html":{}}}],["field",{"_index":603,"title":{},"body":{"classes/AdminRefreshToken.html":{},"classes/BookmarksProducts.html":{},"classes/Cart.html":{},"classes/CartProduct.html":{},"classes/CartProduct-1.html":{},"classes/Category.html":{},"classes/Order.html":{},"classes/OrderProduct.html":{},"classes/Owner.html":{},"classes/OwnerRefreshToken.html":{},"classes/Product.html":{},"classes/Product-1.html":{},"classes/ProductCategories.html":{},"classes/ProductReviews.html":{},"classes/Review.html":{},"classes/Role.html":{},"classes/UserRefreshToken.html":{},"classes/UserRoles.html":{},"classes/WatchedProducts.html":{}}}],["file",{"_index":5,"title":{},"body":{"injectables/ActivateMiddleware.html":{},"guards/AddContentGuard.html":{},"classes/AddRoleDto.html":{},"controllers/AdminController.html":{},"guards/AdminGuard.html":{},"interfaces/AdminInterface.html":{},"injectables/AdminJwtRefreshService.html":{},"modules/AdminModule.html":{},"classes/AdminRefreshToken.html":{},"interfaces/AdminRefreshTokenCreationAttrbs.html":{},"injectables/AdminService.html":{},"injectables/AdminUserMiddleware.html":{},"interfaces/AdmincreationAttrbs.html":{},"classes/AllExceptionsFilter.html":{},"classes/ApiError.html":{},"classes/ApiErrorExceptionFilter.html":{},"classes/ApiException.html":{},"classes/ApiExceptionFilter.html":{},"injectables/AppClusterService.html":{},"controllers/AppController.html":{},"injectables/AppListener.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"guards/AuthFerfershGuard.html":{},"injectables/AuthMiddleware.html":{},"modules/AuthModule.html":{},"interfaces/AuthUser.html":{},"classes/BadRequestError.html":{},"classes/BanUserDto.html":{},"classes/BookmarksProducts.html":{},"controllers/CardController.html":{},"injectables/CardService.html":{},"classes/Cart.html":{},"modules/CartModule.html":{},"classes/CartProduct.html":{},"classes/CartProduct-1.html":{},"controllers/CategoriesController.html":{},"modules/CategoriesModule.html":{},"injectables/CategoriesService.html":{},"classes/Category.html":{},"interfaces/CategoryCreationAtrb.html":{},"classes/ChangeDto.html":{},"interfaces/CodeDto.html":{},"modules/CoreModule.html":{},"injectables/CorsMiddleware.html":{},"classes/CreateAccessTokenDto.html":{},"classes/CreateAdminDto.html":{},"classes/CreateAdminRefreshTokenDto.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateOwnerDto.html":{},"classes/CreateOwnerRefreshTokenDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateReviewDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserRefreshTokenDto.html":{},"guards/EditContentGuard.html":{},"guards/EditWebsiteGuard.html":{},"injectables/FilesService.html":{},"classes/GarbageCollectingProcessor.html":{},"injectables/GlobalInterceptor.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/ITelegramModuleAsyncOptions.html":{},"interfaces/ITelegramOptions.html":{},"injectables/InitializeEmailMiddleware.html":{},"interfaces/InitializeUser.html":{},"injectables/InitializeUserMiddleware.html":{},"guards/JwtAuthGuard.html":{},"classes/JwtRefreshTokenDeletedEvent.html":{},"injectables/LocationMiddleware.html":{},"classes/LoginDto.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"classes/MatchConstraint.html":{},"interfaces/Msg.html":{},"classes/Nested.html":{},"classes/Nested-1.html":{},"classes/NotFoundError.html":{},"classes/Order.html":{},"classes/OrderProduct.html":{},"controllers/OrdersController.html":{},"modules/OrdersModule.html":{},"injectables/OrdersService.html":{},"classes/Owner.html":{},"guards/OwnerAdminGuard.html":{},"interfaces/OwnerCreationAttrbs.html":{},"injectables/OwnerJwtRefreshService.html":{},"modules/OwnerModule.html":{},"classes/OwnerRefreshToken.html":{},"interfaces/OwnerRefreshTokenCreationAttrbs.html":{},"injectables/OwnerService.html":{},"classes/ParseFormDataJsonPipe.html":{},"injectables/ParseJsonPipe.html":{},"interfaces/Payload.html":{},"classes/Product.html":{},"classes/Product-1.html":{},"classes/ProductCategories.html":{},"controllers/ProductController.html":{},"interfaces/ProductCreationAttrs.html":{},"injectables/ProductMiddleware.html":{},"modules/ProductModule.html":{},"classes/ProductReviews.html":{},"guards/RefreshAuthGuard.html":{},"interfaces/RequestHeaders.html":{},"classes/RequestValidator.html":{},"classes/ResetDto.html":{},"interfaces/ReturnedAdmin.html":{},"interfaces/ReturnedCategory.html":{},"interfaces/ReturnedOwner.html":{},"interfaces/ReturnedProduct.html":{},"interfaces/ReturnedProducts.html":{},"interfaces/ReturnedReview.html":{},"interfaces/ReturnedUser.html":{},"classes/Review.html":{},"interfaces/ReviewCreationAtrb.html":{},"controllers/ReviewsController.html":{},"modules/ReviewsModule.html":{},"injectables/ReviewsService.html":{},"classes/Role.html":{},"interfaces/RolecreationAttrbs.html":{},"controllers/RolesController.html":{},"guards/RolesGuard.html":{},"modules/RolesModule.html":{},"injectables/RolesService.html":{},"classes/SignupDto.html":{},"injectables/TasksService.html":{},"modules/TelegramModule.html":{},"injectables/TelegramService.html":{},"injectables/ThrottlerBehindProxyGuard.html":{},"interfaces/Tokens.html":{},"classes/UpdateCategoryDto.html":{},"classes/UpdateProductDto.html":{},"classes/UpdateUserDto.html":{},"injectables/UserAdminMiddleware.html":{},"guards/UserGuard.html":{},"interfaces/UserInterface.html":{},"injectables/UserJwtRefreshTokenService.html":{},"injectables/UserMiddleware.html":{},"injectables/UserMiddleware-1.html":{},"interfaces/UserRefreshCreationAttrbs.html":{},"classes/UserRefreshToken.html":{},"classes/UserRoles.html":{},"interfaces/UsercreationAttrbs.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"injectables/ValidateDto.html":{},"interfaces/ValidateUser.html":{},"classes/ValidationException.html":{},"classes/WatchedProducts.html":{},"interfaces/fileCreated.html":{}}}],["file.buffer",{"_index":1929,"title":{},"body":{"injectables/FilesService.html":{},"interfaces/fileCreated.html":{}}}],["file.fieldname",{"_index":1945,"title":{},"body":{"injectables/FilesService.html":{},"controllers/ProductController.html":{},"interfaces/fileCreated.html":{}}}],["file.originalname.split('.')[0",{"_index":1935,"title":{},"body":{"injectables/FilesService.html":{},"controllers/ProductController.html":{},"interfaces/fileCreated.html":{}}}],["filecreated",{"_index":1919,"title":{"interfaces/fileCreated.html":{}},"body":{"injectables/FilesService.html":{},"interfaces/fileCreated.html":{}}}],["filefieldsinterceptor",{"_index":2819,"title":{},"body":{"controllers/ProductController.html":{}}}],["filefilter",{"_index":1901,"title":{},"body":{"injectables/FilesService.html":{},"controllers/ProductController.html":{},"interfaces/fileCreated.html":{}}}],["filefilter(req",{"_index":1183,"title":{},"body":{"modules/AppModule.html":{},"injectables/FilesService.html":{}}}],["filename",{"_index":1920,"title":{},"body":{"injectables/FilesService.html":{},"controllers/ProductController.html":{},"interfaces/fileCreated.html":{}}}],["filepath",{"_index":1915,"title":{},"body":{"injectables/FilesService.html":{},"controllers/ProductController.html":{},"interfaces/fileCreated.html":{}}}],["files",{"_index":1193,"title":{},"body":{"modules/AppModule.html":{},"injectables/FilesService.html":{},"controllers/ProductController.html":{},"interfaces/fileCreated.html":{}}}],["files.images",{"_index":2866,"title":{},"body":{"controllers/ProductController.html":{}}}],["files.sizechartimage",{"_index":2867,"title":{},"body":{"controllers/ProductController.html":{}}}],["filesize",{"_index":1197,"title":{},"body":{"modules/AppModule.html":{}}}],["filesservice",{"_index":1651,"title":{"injectables/FilesService.html":{}},"body":{"modules/CoreModule.html":{},"injectables/FilesService.html":{},"modules/ProductModule.html":{},"interfaces/fileCreated.html":{},"overview.html":{}}}],["filetypes",{"_index":1184,"title":{},"body":{"modules/AppModule.html":{},"injectables/FilesService.html":{},"controllers/ProductController.html":{},"interfaces/fileCreated.html":{}}}],["filetypes.test(file.mimetype",{"_index":1188,"title":{},"body":{"modules/AppModule.html":{},"injectables/FilesService.html":{},"controllers/ProductController.html":{},"interfaces/fileCreated.html":{}}}],["filetypes.test(path.extname(file.originalname).tolowercase",{"_index":1186,"title":{},"body":{"modules/AppModule.html":{},"injectables/FilesService.html":{},"controllers/ProductController.html":{},"interfaces/fileCreated.html":{}}}],["filterproducts",{"_index":2765,"title":{},"body":{"controllers/ProductController.html":{}}}],["filterproducts(page",{"_index":2792,"title":{},"body":{"controllers/ProductController.html":{}}}],["filters/all",{"_index":1653,"title":{},"body":{"modules/CoreModule.html":{}}}],["findadmin",{"_index":152,"title":{},"body":{"controllers/AdminController.html":{},"injectables/AdminService.html":{}}}],["findadmin(v",{"_index":168,"title":{},"body":{"controllers/AdminController.html":{},"injectables/AdminService.html":{}}}],["findbyactivationlink",{"_index":671,"title":{},"body":{"injectables/AdminService.html":{},"injectables/OwnerService.html":{}}}],["findbyactivationlink(activationlink",{"_index":693,"title":{},"body":{"injectables/AdminService.html":{},"injectables/OwnerService.html":{}}}],["findtoken",{"_index":325,"title":{},"body":{"injectables/AdminJwtRefreshService.html":{},"injectables/OwnerJwtRefreshService.html":{},"injectables/UserJwtRefreshTokenService.html":{}}}],["findtoken(adminrefreshtoken",{"_index":343,"title":{},"body":{"injectables/AdminJwtRefreshService.html":{}}}],["findtoken(ownerrefreshtoken",{"_index":2458,"title":{},"body":{"injectables/OwnerJwtRefreshService.html":{}}}],["findtoken(userrefreshtoken",{"_index":3265,"title":{},"body":{"injectables/UserJwtRefreshTokenService.html":{}}}],["findtokenbyparams",{"_index":326,"title":{},"body":{"injectables/AdminJwtRefreshService.html":{},"injectables/OwnerJwtRefreshService.html":{}}}],["findtokenbyparams(email",{"_index":345,"title":{},"body":{"injectables/AdminJwtRefreshService.html":{},"injectables/OwnerJwtRefreshService.html":{}}}],["findtokenbytoken",{"_index":327,"title":{},"body":{"injectables/AdminJwtRefreshService.html":{},"injectables/OwnerJwtRefreshService.html":{},"injectables/UserJwtRefreshTokenService.html":{}}}],["findtokenbytoken(adminrefreshtoken",{"_index":347,"title":{},"body":{"injectables/AdminJwtRefreshService.html":{}}}],["findtokenbytoken(ownerrefreshtoken",{"_index":2461,"title":{},"body":{"injectables/OwnerJwtRefreshService.html":{}}}],["findtokenbytoken(userrefreshtoken",{"_index":3267,"title":{},"body":{"injectables/UserJwtRefreshTokenService.html":{}}}],["finduser",{"_index":3341,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["finduser(v",{"_index":3350,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["fire",{"_index":3151,"title":{},"body":{"injectables/TasksService.html":{}}}],["fix",{"_index":2179,"title":{},"body":{"injectables/MailService.html":{}}}],["flbwyzikawirfudk",{"_index":2077,"title":{},"body":{"modules/MailModule.html":{}}}],["float:left",{"_index":2141,"title":{},"body":{"injectables/MailService.html":{}}}],["float:none!important",{"_index":2224,"title":{},"body":{"injectables/MailService.html":{}}}],["font",{"_index":1704,"title":{},"body":{"injectables/CorsMiddleware.html":{},"injectables/MailService.html":{},"interfaces/RequestHeaders.html":{}}}],["font,.externalclass",{"_index":2122,"title":{},"body":{"injectables/MailService.html":{}}}],["footer",{"_index":2172,"title":{},"body":{"injectables/MailService.html":{}}}],["forbidden",{"_index":119,"title":{},"body":{"guards/AddContentGuard.html":{},"injectables/AdminService.html":{},"classes/ApiException.html":{},"guards/AuthFerfershGuard.html":{},"guards/EditContentGuard.html":{},"guards/EditWebsiteGuard.html":{},"injectables/OwnerService.html":{}}}],["forbiddenexception",{"_index":96,"title":{},"body":{"guards/AddContentGuard.html":{},"injectables/AdminService.html":{},"classes/ApiException.html":{},"injectables/OwnerService.html":{}}}],["forbiddenexception(type",{"_index":924,"title":{},"body":{"classes/ApiException.html":{}}}],["foreignkey",{"_index":645,"title":{},"body":{"classes/AdminRefreshToken.html":{},"classes/BookmarksProducts.html":{},"classes/Cart.html":{},"classes/CartProduct.html":{},"classes/CartProduct-1.html":{},"classes/Order.html":{},"classes/OrderProduct.html":{},"classes/OwnerRefreshToken.html":{},"classes/Product.html":{},"classes/Product-1.html":{},"classes/ProductCategories.html":{},"classes/ProductReviews.html":{},"classes/Review.html":{},"classes/UserRefreshToken.html":{},"classes/UserRoles.html":{},"classes/WatchedProducts.html":{}}}],["foreignkey(undefined)@column({type",{"_index":1404,"title":{},"body":{"classes/BookmarksProducts.html":{},"classes/Cart.html":{},"classes/Order.html":{},"classes/ProductCategories.html":{},"classes/ProductReviews.html":{},"classes/Review.html":{},"classes/WatchedProducts.html":{}}}],["forrootasync",{"_index":3186,"title":{},"body":{"modules/TelegramModule.html":{}}}],["forrootasync(options",{"_index":3187,"title":{},"body":{"modules/TelegramModule.html":{}}}],["forroutes",{"_index":563,"title":{},"body":{"modules/AdminModule.html":{},"modules/AuthModule.html":{},"modules/CategoriesModule.html":{},"modules/ProductModule.html":{},"modules/ReviewsModule.html":{},"modules/RolesModule.html":{},"modules/UsersModule.html":{}}}],["forwardref",{"_index":496,"title":{},"body":{"modules/AdminModule.html":{},"modules/AuthModule.html":{},"modules/CartModule.html":{},"modules/CategoriesModule.html":{},"modules/MailModule.html":{},"modules/OrdersModule.html":{},"modules/OwnerModule.html":{},"modules/ProductModule.html":{},"modules/ReviewsModule.html":{},"modules/RolesModule.html":{},"modules/UsersModule.html":{}}}],["found",{"_index":409,"title":{},"body":{"injectables/AdminJwtRefreshService.html":{},"injectables/AdminService.html":{},"injectables/AdminUserMiddleware.html":{},"classes/ApiError.html":{},"classes/ApiException.html":{},"guards/AuthFerfershGuard.html":{},"classes/BadRequestError.html":{},"injectables/CategoriesService.html":{},"injectables/InitializeEmailMiddleware.html":{},"injectables/MailService.html":{},"classes/NotFoundError.html":{},"injectables/OwnerJwtRefreshService.html":{},"injectables/OwnerService.html":{},"classes/RequestValidator.html":{},"injectables/UserAdminMiddleware.html":{},"injectables/UserJwtRefreshTokenService.html":{},"injectables/UsersService.html":{}}}],["frame",{"_index":1708,"title":{},"body":{"injectables/CorsMiddleware.html":{},"interfaces/RequestHeaders.html":{}}}],["framework",{"_index":3594,"title":{},"body":{"index.html":{}}}],["fs",{"_index":1916,"title":{},"body":{"injectables/FilesService.html":{},"controllers/ProductController.html":{},"interfaces/fileCreated.html":{}}}],["fs.existssync(filepath",{"_index":1925,"title":{},"body":{"injectables/FilesService.html":{},"interfaces/fileCreated.html":{}}}],["fs.mkdirsync(filepath",{"_index":1926,"title":{},"body":{"injectables/FilesService.html":{},"interfaces/fileCreated.html":{}}}],["fs.unlink(filepath",{"_index":1933,"title":{},"body":{"injectables/FilesService.html":{},"interfaces/fileCreated.html":{}}}],["fs.writefilesync(path.join(filepath",{"_index":1928,"title":{},"body":{"injectables/FilesService.html":{},"interfaces/fileCreated.html":{}}}],["function",{"_index":244,"title":{},"body":{"controllers/AdminController.html":{},"injectables/AppClusterService.html":{},"controllers/AuthController.html":{},"injectables/FilesService.html":{},"interfaces/ITelegramModuleAsyncOptions.html":{},"classes/MatchConstraint.html":{},"interfaces/Msg.html":{},"controllers/RolesController.html":{},"injectables/TasksService.html":{},"miscellaneous/typealiases.html":{}}}],["functions",{"_index":3576,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["fw",{"_index":2195,"title":{},"body":{"injectables/MailService.html":{}}}],["g4loc",{"_index":609,"title":{},"body":{"classes/AdminRefreshToken.html":{},"classes/OwnerRefreshToken.html":{},"classes/UserRefreshToken.html":{}}}],["garbagecollecting",{"_index":1664,"title":{},"body":{"modules/CoreModule.html":{}}}],["garbagecollectingprocessor",{"_index":1661,"title":{"classes/GarbageCollectingProcessor.html":{}},"body":{"modules/CoreModule.html":{},"classes/GarbageCollectingProcessor.html":{}}}],["garbagecollector",{"_index":3100,"title":{},"body":{"injectables/TasksService.html":{}}}],["garbagecollector(name",{"_index":3129,"title":{},"body":{"injectables/TasksService.html":{}}}],["gecko",{"_index":597,"title":{},"body":{"classes/AdminRefreshToken.html":{},"classes/CreateAdminRefreshTokenDto.html":{},"classes/CreateOwnerDto.html":{},"classes/CreateOwnerRefreshTokenDto.html":{},"classes/Owner.html":{},"classes/OwnerRefreshToken.html":{},"injectables/UserJwtRefreshTokenService.html":{}}}],["generateactivationcode",{"_index":328,"title":{},"body":{"injectables/AdminJwtRefreshService.html":{},"injectables/OwnerJwtRefreshService.html":{}}}],["generateencryptedvalue",{"_index":329,"title":{},"body":{"injectables/AdminJwtRefreshService.html":{},"controllers/AppController.html":{},"injectables/OwnerJwtRefreshService.html":{}}}],["generateencryptedvalue(value",{"_index":350,"title":{},"body":{"injectables/AdminJwtRefreshService.html":{},"controllers/AppController.html":{},"injectables/OwnerJwtRefreshService.html":{}}}],["generaterefreshtoken",{"_index":330,"title":{},"body":{"injectables/AdminJwtRefreshService.html":{},"injectables/OwnerJwtRefreshService.html":{},"injectables/UserJwtRefreshTokenService.html":{}}}],["generaterefreshtoken(payload",{"_index":353,"title":{},"body":{"injectables/AdminJwtRefreshService.html":{},"injectables/OwnerJwtRefreshService.html":{},"injectables/UserJwtRefreshTokenService.html":{}}}],["geo",{"_index":2050,"title":{},"body":{"injectables/LocationMiddleware.html":{}}}],["geoip",{"_index":1683,"title":{},"body":{"injectables/CorsMiddleware.html":{},"injectables/LocationMiddleware.html":{},"interfaces/RequestHeaders.html":{},"dependencies.html":{}}}],["geoip.lookup(ipaddress",{"_index":2051,"title":{},"body":{"injectables/LocationMiddleware.html":{}}}],["geolite2",{"_index":1069,"title":{},"body":{"controllers/AppController.html":{},"injectables/LocationMiddleware.html":{}}}],["get('/:productid",{"_index":2839,"title":{},"body":{"controllers/ProductController.html":{}}}],["get('/find_users",{"_index":3371,"title":{},"body":{"controllers/UsersController.html":{}}}],["get('/get_users",{"_index":3369,"title":{},"body":{"controllers/UsersController.html":{}}}],["get('activate/:link",{"_index":1312,"title":{},"body":{"controllers/AuthController.html":{}}}],["get('bookmarkproducts",{"_index":2843,"title":{},"body":{"controllers/ProductController.html":{}}}],["get('filter",{"_index":2833,"title":{},"body":{"controllers/ProductController.html":{}}}],["get('find_admin",{"_index":260,"title":{},"body":{"controllers/AdminController.html":{}}}],["get('get",{"_index":1065,"title":{},"body":{"controllers/AppController.html":{},"controllers/ProductController.html":{}}}],["get('get')@httpcode(200",{"_index":1033,"title":{},"body":{"controllers/AppController.html":{}}}],["get('get/:value",{"_index":3055,"title":{},"body":{"controllers/RolesController.html":{}}}],["get('get_admins",{"_index":265,"title":{},"body":{"controllers/AdminController.html":{}}}],["get('get_categoties",{"_index":1531,"title":{},"body":{"controllers/CategoriesController.html":{}}}],["get('set",{"_index":1046,"title":{},"body":{"controllers/AppController.html":{}}}],["get('set')@httpcode(200",{"_index":1036,"title":{},"body":{"controllers/AppController.html":{}}}],["get('watchedproducts",{"_index":2845,"title":{},"body":{"controllers/ProductController.html":{}}}],["getactivationcode",{"_index":2346,"title":{},"body":{"classes/Owner.html":{}}}],["getadmin",{"_index":580,"title":{},"body":{"classes/AdminRefreshToken.html":{}}}],["getadminagent",{"_index":581,"title":{},"body":{"classes/AdminRefreshToken.html":{}}}],["getadminbyemail",{"_index":672,"title":{},"body":{"injectables/AdminService.html":{}}}],["getadminbyemail(email",{"_index":695,"title":{},"body":{"injectables/AdminService.html":{}}}],["getadminbyid",{"_index":673,"title":{},"body":{"injectables/AdminService.html":{}}}],["getadminbyid(id",{"_index":697,"title":{},"body":{"injectables/AdminService.html":{}}}],["getadminbyphonenumber",{"_index":674,"title":{},"body":{"injectables/AdminService.html":{}}}],["getadminbyphonenumber(phonenumber",{"_index":699,"title":{},"body":{"injectables/AdminService.html":{}}}],["getadminid",{"_index":2662,"title":{},"body":{"classes/Product.html":{},"classes/Product-1.html":{}}}],["getadmins",{"_index":3014,"title":{},"body":{"classes/Role.html":{}}}],["getalladmins",{"_index":675,"title":{},"body":{"injectables/AdminService.html":{}}}],["getalladmins(page",{"_index":701,"title":{},"body":{"injectables/AdminService.html":{}}}],["getallusers",{"_index":153,"title":{},"body":{"controllers/AdminController.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["getallusers(page",{"_index":176,"title":{},"body":{"controllers/AdminController.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["getauthor",{"_index":2663,"title":{},"body":{"classes/Product.html":{},"classes/Product-1.html":{}}}],["getbookmarkproducts",{"_index":2766,"title":{},"body":{"controllers/ProductController.html":{}}}],["getbookmarkproducts(page",{"_index":2796,"title":{},"body":{"controllers/ProductController.html":{}}}],["getbyid",{"_index":2767,"title":{},"body":{"controllers/ProductController.html":{}}}],["getbyid(@param('productid",{"_index":2840,"title":{},"body":{"controllers/ProductController.html":{}}}],["getbyid(productid",{"_index":2799,"title":{},"body":{"controllers/ProductController.html":{}}}],["getcart",{"_index":1461,"title":{},"body":{"classes/CartProduct.html":{},"classes/CartProduct-1.html":{}}}],["getcartproducts",{"_index":1420,"title":{},"body":{"classes/Cart.html":{}}}],["getcarts",{"_index":2664,"title":{},"body":{"classes/Product.html":{},"classes/Product-1.html":{}}}],["getcartstatus",{"_index":1421,"title":{},"body":{"classes/Cart.html":{}}}],["getcategories",{"_index":1493,"title":{},"body":{"controllers/CategoriesController.html":{},"injectables/CategoriesService.html":{},"classes/Product.html":{},"classes/Product-1.html":{}}}],["getcategoriesbyids",{"_index":1551,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["getcategoriesbyids(categoryids",{"_index":1560,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["getcategorybyid",{"_index":1552,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["getcategorybyid(categoryid",{"_index":1563,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["getcategorybyvalue",{"_index":1553,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["getcategorybyvalue(value",{"_index":1565,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["getconfirmcode",{"_index":2347,"title":{},"body":{"classes/Owner.html":{}}}],["getcrons",{"_index":3101,"title":{},"body":{"injectables/TasksService.html":{}}}],["getdescription",{"_index":2709,"title":{},"body":{"classes/Product-1.html":{}}}],["getemail",{"_index":2348,"title":{},"body":{"classes/Owner.html":{}}}],["getexpiredate",{"_index":582,"title":{},"body":{"classes/AdminRefreshToken.html":{},"classes/OwnerRefreshToken.html":{},"classes/UserRefreshToken.html":{}}}],["getidentifier",{"_index":583,"title":{},"body":{"classes/AdminRefreshToken.html":{},"classes/OwnerRefreshToken.html":{},"classes/UserRefreshToken.html":{}}}],["getintervals",{"_index":3102,"title":{},"body":{"injectables/TasksService.html":{}}}],["getisactivated",{"_index":2349,"title":{},"body":{"classes/Owner.html":{}}}],["getlocation",{"_index":1028,"title":{},"body":{"controllers/AppController.html":{}}}],["getlocation(request",{"_index":1032,"title":{},"body":{"controllers/AppController.html":{}}}],["getname",{"_index":2350,"title":{},"body":{"classes/Owner.html":{}}}],["getorder",{"_index":2316,"title":{},"body":{"classes/OrderProduct.html":{}}}],["getorderproducts",{"_index":2292,"title":{},"body":{"classes/Order.html":{}}}],["getorders",{"_index":2665,"title":{},"body":{"classes/Product.html":{},"classes/Product-1.html":{}}}],["getorderstatus",{"_index":2293,"title":{},"body":{"classes/Order.html":{}}}],["getowner",{"_index":2525,"title":{},"body":{"classes/OwnerRefreshToken.html":{}}}],["getowneragent",{"_index":2351,"title":{},"body":{"classes/Owner.html":{},"classes/OwnerRefreshToken.html":{}}}],["getownerbyemail",{"_index":2558,"title":{},"body":{"injectables/OwnerService.html":{}}}],["getownerbyemail(email",{"_index":2575,"title":{},"body":{"injectables/OwnerService.html":{}}}],["getownerbyid",{"_index":2559,"title":{},"body":{"injectables/OwnerService.html":{}}}],["getownerbyid(id",{"_index":2577,"title":{},"body":{"injectables/OwnerService.html":{}}}],["getownerbyphonenumber",{"_index":2560,"title":{},"body":{"injectables/OwnerService.html":{}}}],["getownerbyphonenumber(phonenumber",{"_index":2579,"title":{},"body":{"injectables/OwnerService.html":{}}}],["getownerid",{"_index":2526,"title":{},"body":{"classes/OwnerRefreshToken.html":{},"classes/Product.html":{},"classes/Product-1.html":{}}}],["getownerrefreshtokens",{"_index":2352,"title":{},"body":{"classes/Owner.html":{}}}],["getowners",{"_index":3015,"title":{},"body":{"classes/Role.html":{}}}],["getpassword",{"_index":2353,"title":{},"body":{"classes/Owner.html":{}}}],["getphonenumber",{"_index":2354,"title":{},"body":{"classes/Owner.html":{}}}],["getproduct",{"_index":1462,"title":{},"body":{"classes/CartProduct.html":{},"classes/CartProduct-1.html":{},"classes/OrderProduct.html":{}}}],["getproducts",{"_index":1422,"title":{},"body":{"classes/Cart.html":{},"classes/Category.html":{},"classes/Owner.html":{},"controllers/ProductController.html":{}}}],["getproducts(page",{"_index":2802,"title":{},"body":{"controllers/ProductController.html":{}}}],["getproductsbyids",{"_index":2768,"title":{},"body":{"controllers/ProductController.html":{}}}],["getproductsbyids(page",{"_index":2805,"title":{},"body":{"controllers/ProductController.html":{}}}],["getresettoken",{"_index":2355,"title":{},"body":{"classes/Owner.html":{}}}],["getresettokenexpiration",{"_index":2356,"title":{},"body":{"classes/Owner.html":{}}}],["getrolebyvalue",{"_index":3036,"title":{},"body":{"controllers/RolesController.html":{},"injectables/RolesService.html":{}}}],["getrolebyvalue(@param('value",{"_index":3056,"title":{},"body":{"controllers/RolesController.html":{}}}],["getrolebyvalue(value",{"_index":3044,"title":{},"body":{"controllers/RolesController.html":{},"injectables/RolesService.html":{}}}],["getsurname",{"_index":2357,"title":{},"body":{"classes/Owner.html":{}}}],["gettelegramconfig",{"_index":1127,"title":{},"body":{"modules/AppModule.html":{}}}],["gettimeouts",{"_index":3103,"title":{},"body":{"injectables/TasksService.html":{}}}],["getting",{"_index":171,"title":{"index.html":{}},"body":{"controllers/AdminController.html":{},"controllers/AuthController.html":{},"controllers/RolesController.html":{},"controllers/UsersController.html":{}}}],["gettitle",{"_index":2710,"title":{},"body":{"classes/Product-1.html":{}}}],["gettracker",{"_index":3218,"title":{},"body":{"injectables/ThrottlerBehindProxyGuard.html":{}}}],["gettracker(req",{"_index":3219,"title":{},"body":{"injectables/ThrottlerBehindProxyGuard.html":{}}}],["getuser",{"_index":1423,"title":{},"body":{"classes/Cart.html":{},"classes/Order.html":{},"classes/UserRefreshToken.html":{}}}],["getuserbyemail",{"_index":3395,"title":{},"body":{"injectables/UsersService.html":{}}}],["getuserbyemail(email",{"_index":3412,"title":{},"body":{"injectables/UsersService.html":{}}}],["getuserbyid",{"_index":3396,"title":{},"body":{"injectables/UsersService.html":{}}}],["getuserbyid(id",{"_index":3414,"title":{},"body":{"injectables/UsersService.html":{}}}],["getuserbyphonenumber",{"_index":3397,"title":{},"body":{"injectables/UsersService.html":{}}}],["getuserbyphonenumber(phonenumber",{"_index":3416,"title":{},"body":{"injectables/UsersService.html":{}}}],["getuserid",{"_index":3306,"title":{},"body":{"classes/UserRefreshToken.html":{}}}],["getusers",{"_index":3016,"title":{},"body":{"classes/Role.html":{}}}],["getwatchedproducts",{"_index":2769,"title":{},"body":{"controllers/ProductController.html":{}}}],["getwatchedproducts(page",{"_index":2809,"title":{},"body":{"controllers/ProductController.html":{}}}],["gi",{"_index":1847,"title":{},"body":{"classes/CreateProductDto.html":{},"classes/CreateReviewDto.html":{},"classes/Nested.html":{},"classes/Nested-1.html":{},"classes/UpdateProductDto.html":{}}}],["gi)@isstring",{"_index":1859,"title":{},"body":{"classes/CreateReviewDto.html":{}}}],["global",{"_index":3190,"title":{},"body":{"modules/TelegramModule.html":{}}}],["globalinterceptor",{"_index":1120,"title":{"injectables/GlobalInterceptor.html":{}},"body":{"modules/AppModule.html":{},"modules/CoreModule.html":{},"injectables/GlobalInterceptor.html":{}}}],["graph",{"_index":3645,"title":{},"body":{"modules.html":{}}}],["grow",{"_index":3622,"title":{},"body":{"index.html":{}}}],["guard",{"_index":80,"title":{"guards/AddContentGuard.html":{},"guards/AdminGuard.html":{},"guards/AuthFerfershGuard.html":{},"guards/EditContentGuard.html":{},"guards/EditWebsiteGuard.html":{},"guards/JwtAuthGuard.html":{},"guards/OwnerAdminGuard.html":{},"guards/RefreshAuthGuard.html":{},"guards/RolesGuard.html":{},"guards/UserGuard.html":{}},"body":{}}],["guardinterval",{"_index":1172,"title":{},"body":{"modules/AppModule.html":{}}}],["guards",{"_index":82,"title":{},"body":{"guards/AddContentGuard.html":{},"guards/AdminGuard.html":{},"guards/AuthFerfershGuard.html":{},"guards/EditContentGuard.html":{},"guards/EditWebsiteGuard.html":{},"guards/JwtAuthGuard.html":{},"guards/OwnerAdminGuard.html":{},"guards/RefreshAuthGuard.html":{},"guards/RolesGuard.html":{},"guards/UserGuard.html":{},"overview.html":{}}}],["h1",{"_index":2163,"title":{},"body":{"injectables/MailService.html":{}}}],["h2",{"_index":2164,"title":{},"body":{"injectables/MailService.html":{}}}],["h3",{"_index":2165,"title":{},"body":{"injectables/MailService.html":{}}}],["handler.filter",{"_index":231,"title":{},"body":{"controllers/AdminController.html":{},"controllers/AuthController.html":{},"controllers/CardController.html":{},"controllers/CategoriesController.html":{},"controllers/OrdersController.html":{},"controllers/ProductController.html":{},"controllers/ReviewsController.html":{},"controllers/RolesController.html":{},"controllers/UsersController.html":{}}}],["handler.filter.ts",{"_index":890,"title":{},"body":{"classes/ApiErrorExceptionFilter.html":{}}}],["handler.filter.ts:7",{"_index":891,"title":{},"body":{"classes/ApiErrorExceptionFilter.html":{}}}],["handletokendeletedevent",{"_index":1081,"title":{},"body":{"injectables/AppListener.html":{}}}],["handletokendeletedevent(event",{"_index":1082,"title":{},"body":{"injectables/AppListener.html":{}}}],["handletranscode",{"_index":1951,"title":{},"body":{"classes/GarbageCollectingProcessor.html":{}}}],["handletranscode(job",{"_index":1954,"title":{},"body":{"classes/GarbageCollectingProcessor.html":{}}}],["hashedpassword",{"_index":816,"title":{},"body":{"injectables/AdminService.html":{},"injectables/OwnerService.html":{},"injectables/UsersService.html":{}}}],["hasmany",{"_index":1440,"title":{},"body":{"classes/Cart.html":{},"classes/Order.html":{},"classes/Owner.html":{},"classes/Product-1.html":{}}}],["hasmany(undefined",{"_index":1425,"title":{},"body":{"classes/Cart.html":{},"classes/Order.html":{},"classes/Owner.html":{}}}],["header",{"_index":2171,"title":{},"body":{"injectables/MailService.html":{}}}],["headers",{"_index":1335,"title":{},"body":{"injectables/AuthMiddleware.html":{},"injectables/CorsMiddleware.html":{},"injectables/ProductMiddleware.html":{},"interfaces/RequestHeaders.html":{},"injectables/UserMiddleware.html":{},"injectables/UserMiddleware-1.html":{}}}],["height:0",{"_index":2144,"title":{},"body":{"injectables/MailService.html":{}}}],["height:100%;}.es",{"_index":2125,"title":{},"body":{"injectables/MailService.html":{}}}],["height:120%!important",{"_index":2166,"title":{},"body":{"injectables/MailService.html":{}}}],["height:150%!important",{"_index":2162,"title":{},"body":{"injectables/MailService.html":{}}}],["height:auto!important",{"_index":2204,"title":{},"body":{"injectables/MailService.html":{}}}],["height:inherit!important",{"_index":2225,"title":{},"body":{"injectables/MailService.html":{}}}],["height:inherit!important;}.es",{"_index":2137,"title":{},"body":{"injectables/MailService.html":{}}}],["hello",{"_index":1076,"title":{},"body":{"controllers/AppController.html":{}}}],["helmet",{"_index":3543,"title":{},"body":{"dependencies.html":{}}}],["help",{"_index":2244,"title":{},"body":{"injectables/MailService.html":{}}}],["here",{"_index":3632,"title":{},"body":{"index.html":{}}}],["hidden",{"_index":2139,"title":{},"body":{"injectables/MailService.html":{}}}],["hide:all;}[data",{"_index":2145,"title":{},"body":{"injectables/MailService.html":{}}}],["host",{"_index":850,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"classes/ApiErrorExceptionFilter.html":{},"classes/ApiExceptionFilter.html":{},"modules/AppModule.html":{},"injectables/CorsMiddleware.html":{},"classes/HttpExceptionFilter.html":{},"modules/MailModule.html":{},"interfaces/RequestHeaders.html":{}}}],["host.switchtohttp",{"_index":858,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"classes/ApiErrorExceptionFilter.html":{},"classes/ApiExceptionFilter.html":{},"classes/HttpExceptionFilter.html":{}}}],["hstore",{"_index":3559,"title":{},"body":{"dependencies.html":{}}}],["html",{"_index":2109,"title":{},"body":{"injectables/MailService.html":{}}}],["http",{"_index":1698,"title":{},"body":{"injectables/CorsMiddleware.html":{},"interfaces/RequestHeaders.html":{}}}],["http://sdgdgsgsfhd_rh;eh",{"_index":2369,"title":{},"body":{"classes/Owner.html":{}}}],["httpadapter",{"_index":855,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["httpadapter.getrequesturl(ctx.getrequest",{"_index":866,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["httpadapter.reply(ctx.getresponse",{"_index":867,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["httpadapterhost",{"_index":846,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["httpcode",{"_index":191,"title":{},"body":{"controllers/AdminController.html":{},"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/CategoriesController.html":{},"controllers/ProductController.html":{},"controllers/ReviewsController.html":{},"controllers/RolesController.html":{},"controllers/UsersController.html":{}}}],["httpcode(200",{"_index":1047,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/CategoriesController.html":{},"controllers/ProductController.html":{}}}],["httpcode(201",{"_index":251,"title":{},"body":{"controllers/AdminController.html":{},"controllers/AuthController.html":{},"controllers/CategoriesController.html":{},"controllers/ProductController.html":{},"controllers/ReviewsController.html":{},"controllers/RolesController.html":{},"controllers/UsersController.html":{}}}],["httpcode(202",{"_index":256,"title":{},"body":{"controllers/AdminController.html":{},"controllers/AuthController.html":{},"controllers/ProductController.html":{}}}],["httpcode(204",{"_index":1313,"title":{},"body":{"controllers/AuthController.html":{}}}],["httpexception",{"_index":849,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"injectables/FilesService.html":{},"classes/HttpExceptionFilter.html":{},"guards/OwnerAdminGuard.html":{},"guards/RolesGuard.html":{},"injectables/UsersService.html":{},"classes/ValidationException.html":{},"interfaces/fileCreated.html":{}}}],["httpexception(err.message",{"_index":1934,"title":{},"body":{"injectables/FilesService.html":{},"interfaces/fileCreated.html":{}}}],["httpexceptionfilter",{"_index":1350,"title":{"classes/HttpExceptionFilter.html":{}},"body":{"modules/AuthModule.html":{},"classes/HttpExceptionFilter.html":{}}}],["httponly",{"_index":1052,"title":{},"body":{"controllers/AppController.html":{}}}],["https://nestjs.com",{"_index":3638,"title":{},"body":{"index.html":{}}}],["httpstatus",{"_index":34,"title":{},"body":{"injectables/ActivateMiddleware.html":{},"guards/AddContentGuard.html":{},"guards/AdminGuard.html":{},"injectables/AdminJwtRefreshService.html":{},"injectables/AdminService.html":{},"injectables/AdminUserMiddleware.html":{},"classes/AllExceptionsFilter.html":{},"classes/ApiError.html":{},"classes/ApiException.html":{},"guards/AuthFerfershGuard.html":{},"classes/BadRequestError.html":{},"injectables/CategoriesService.html":{},"guards/EditContentGuard.html":{},"guards/EditWebsiteGuard.html":{},"injectables/FilesService.html":{},"injectables/InitializeEmailMiddleware.html":{},"injectables/InitializeUserMiddleware.html":{},"guards/JwtAuthGuard.html":{},"injectables/MailService.html":{},"classes/NotFoundError.html":{},"guards/OwnerAdminGuard.html":{},"injectables/OwnerJwtRefreshService.html":{},"injectables/OwnerService.html":{},"guards/RefreshAuthGuard.html":{},"guards/RolesGuard.html":{},"injectables/UserAdminMiddleware.html":{},"guards/UserGuard.html":{},"injectables/UserJwtRefreshTokenService.html":{},"injectables/UsersService.html":{},"classes/ValidationException.html":{},"interfaces/fileCreated.html":{}}}],["httpstatus.bad_request",{"_index":3498,"title":{},"body":{"classes/ValidationException.html":{}}}],["httpstatus.internal_server_error",{"_index":401,"title":{},"body":{"injectables/AdminJwtRefreshService.html":{},"classes/AllExceptionsFilter.html":{},"classes/ApiException.html":{},"injectables/FilesService.html":{},"injectables/OwnerJwtRefreshService.html":{},"injectables/UserJwtRefreshTokenService.html":{},"interfaces/fileCreated.html":{}}}],["id",{"_index":314,"title":{},"body":{"interfaces/AdminInterface.html":{},"injectables/AdminJwtRefreshService.html":{},"classes/AdminRefreshToken.html":{},"interfaces/AdminRefreshTokenCreationAttrbs.html":{},"injectables/AdminService.html":{},"interfaces/AdmincreationAttrbs.html":{},"injectables/AppClusterService.html":{},"controllers/AuthController.html":{},"guards/AuthFerfershGuard.html":{},"interfaces/AuthUser.html":{},"classes/BookmarksProducts.html":{},"classes/Cart.html":{},"classes/CartProduct.html":{},"classes/CartProduct-1.html":{},"injectables/CategoriesService.html":{},"classes/Category.html":{},"interfaces/CategoryCreationAtrb.html":{},"interfaces/CodeDto.html":{},"interfaces/InitializeUser.html":{},"interfaces/Msg.html":{},"classes/Order.html":{},"classes/OrderProduct.html":{},"classes/Owner.html":{},"injectables/OwnerJwtRefreshService.html":{},"classes/OwnerRefreshToken.html":{},"injectables/OwnerService.html":{},"interfaces/Payload.html":{},"classes/Product.html":{},"classes/Product-1.html":{},"classes/ProductCategories.html":{},"controllers/ProductController.html":{},"interfaces/ProductCreationAttrs.html":{},"classes/ProductReviews.html":{},"interfaces/ReturnedAdmin.html":{},"interfaces/ReturnedCategory.html":{},"interfaces/ReturnedOwner.html":{},"interfaces/ReturnedProduct.html":{},"interfaces/ReturnedProducts.html":{},"interfaces/ReturnedReview.html":{},"interfaces/ReturnedUser.html":{},"classes/Review.html":{},"interfaces/ReviewCreationAtrb.html":{},"injectables/ReviewsService.html":{},"classes/Role.html":{},"interfaces/RolecreationAttrbs.html":{},"interfaces/Tokens.html":{},"interfaces/UserInterface.html":{},"injectables/UserJwtRefreshTokenService.html":{},"interfaces/UserRefreshCreationAttrbs.html":{},"classes/UserRefreshToken.html":{},"classes/UserRoles.html":{},"interfaces/UsercreationAttrbs.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"interfaces/ValidateUser.html":{},"classes/WatchedProducts.html":{}}}],["identifier",{"_index":145,"title":{},"body":{"classes/AddRoleDto.html":{},"injectables/AdminJwtRefreshService.html":{},"classes/AdminRefreshToken.html":{},"classes/BanUserDto.html":{},"classes/CreateAccessTokenDto.html":{},"classes/CreateAdminRefreshTokenDto.html":{},"classes/CreateOwnerRefreshTokenDto.html":{},"classes/CreateUserRefreshTokenDto.html":{},"classes/Owner.html":{},"injectables/OwnerJwtRefreshService.html":{},"classes/OwnerRefreshToken.html":{},"classes/Role.html":{},"injectables/TasksService.html":{},"injectables/UserJwtRefreshTokenService.html":{},"classes/UserRefreshToken.html":{},"classes/UserRoles.html":{}}}],["identifier'})@column({type",{"_index":618,"title":{},"body":{"classes/AdminRefreshToken.html":{},"classes/Owner.html":{},"classes/OwnerRefreshToken.html":{},"classes/Role.html":{},"classes/UserRefreshToken.html":{},"classes/UserRoles.html":{}}}],["identifier'})@isnumber",{"_index":133,"title":{},"body":{"classes/AddRoleDto.html":{},"classes/BanUserDto.html":{},"classes/CreateAccessTokenDto.html":{},"classes/CreateAdminRefreshTokenDto.html":{},"classes/CreateOwnerRefreshTokenDto.html":{},"classes/CreateUserRefreshTokenDto.html":{}}}],["identifier'})@isuuid(4)@column({type",{"_index":627,"title":{},"body":{"classes/AdminRefreshToken.html":{},"classes/OwnerRefreshToken.html":{},"classes/UserRefreshToken.html":{}}}],["if(mimetype",{"_index":1942,"title":{},"body":{"injectables/FilesService.html":{},"interfaces/fileCreated.html":{}}}],["ignoreerrors",{"_index":1672,"title":{},"body":{"modules/CoreModule.html":{}}}],["image",{"_index":1192,"title":{},"body":{"modules/AppModule.html":{},"injectables/FilesService.html":{},"controllers/ProductController.html":{},"interfaces/fileCreated.html":{}}}],["images",{"_index":1619,"title":{},"body":{"interfaces/CategoryCreationAtrb.html":{},"classes/Product.html":{},"classes/Product-1.html":{},"controllers/ProductController.html":{},"interfaces/ProductCreationAttrs.html":{},"interfaces/ReturnedCategory.html":{},"interfaces/ReturnedProduct.html":{},"interfaces/ReturnedProducts.html":{},"interfaces/ReturnedReview.html":{},"interfaces/ReviewCreationAtrb.html":{}}}],["imagespath",{"_index":1944,"title":{},"body":{"injectables/FilesService.html":{},"controllers/ProductController.html":{},"interfaces/fileCreated.html":{}}}],["imagetype",{"_index":1696,"title":{},"body":{"injectables/CorsMiddleware.html":{},"interfaces/RequestHeaders.html":{}}}],["img",{"_index":1705,"title":{},"body":{"injectables/CorsMiddleware.html":{},"injectables/MailService.html":{},"interfaces/RequestHeaders.html":{}}}],["implements",{"_index":53,"title":{},"body":{"injectables/ActivateMiddleware.html":{},"guards/AddContentGuard.html":{},"guards/AdminGuard.html":{},"modules/AdminModule.html":{},"injectables/AdminUserMiddleware.html":{},"classes/AllExceptionsFilter.html":{},"classes/ApiErrorExceptionFilter.html":{},"classes/ApiExceptionFilter.html":{},"modules/AppModule.html":{},"guards/AuthFerfershGuard.html":{},"injectables/AuthMiddleware.html":{},"modules/AuthModule.html":{},"modules/CategoriesModule.html":{},"injectables/CorsMiddleware.html":{},"guards/EditContentGuard.html":{},"guards/EditWebsiteGuard.html":{},"injectables/GlobalInterceptor.html":{},"classes/HttpExceptionFilter.html":{},"injectables/InitializeEmailMiddleware.html":{},"injectables/InitializeUserMiddleware.html":{},"guards/JwtAuthGuard.html":{},"injectables/LocationMiddleware.html":{},"classes/MatchConstraint.html":{},"guards/OwnerAdminGuard.html":{},"classes/ParseFormDataJsonPipe.html":{},"injectables/ParseJsonPipe.html":{},"injectables/ProductMiddleware.html":{},"modules/ProductModule.html":{},"guards/RefreshAuthGuard.html":{},"interfaces/RequestHeaders.html":{},"modules/ReviewsModule.html":{},"guards/RolesGuard.html":{},"modules/RolesModule.html":{},"injectables/UserAdminMiddleware.html":{},"guards/UserGuard.html":{},"injectables/UserMiddleware.html":{},"injectables/UserMiddleware-1.html":{},"modules/UsersModule.html":{},"injectables/ValidateDto.html":{}}}],["import",{"_index":32,"title":{},"body":{"injectables/ActivateMiddleware.html":{},"guards/AddContentGuard.html":{},"classes/AddRoleDto.html":{},"controllers/AdminController.html":{},"guards/AdminGuard.html":{},"injectables/AdminJwtRefreshService.html":{},"modules/AdminModule.html":{},"classes/AdminRefreshToken.html":{},"injectables/AdminService.html":{},"injectables/AdminUserMiddleware.html":{},"classes/AllExceptionsFilter.html":{},"classes/ApiError.html":{},"classes/ApiErrorExceptionFilter.html":{},"classes/ApiException.html":{},"classes/ApiExceptionFilter.html":{},"injectables/AppClusterService.html":{},"controllers/AppController.html":{},"injectables/AppListener.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"guards/AuthFerfershGuard.html":{},"injectables/AuthMiddleware.html":{},"modules/AuthModule.html":{},"interfaces/AuthUser.html":{},"classes/BadRequestError.html":{},"classes/BanUserDto.html":{},"classes/BookmarksProducts.html":{},"controllers/CardController.html":{},"injectables/CardService.html":{},"classes/Cart.html":{},"modules/CartModule.html":{},"classes/CartProduct.html":{},"classes/CartProduct-1.html":{},"controllers/CategoriesController.html":{},"modules/CategoriesModule.html":{},"injectables/CategoriesService.html":{},"classes/Category.html":{},"classes/ChangeDto.html":{},"interfaces/CodeDto.html":{},"modules/CoreModule.html":{},"injectables/CorsMiddleware.html":{},"classes/CreateAccessTokenDto.html":{},"classes/CreateAdminDto.html":{},"classes/CreateAdminRefreshTokenDto.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateOwnerDto.html":{},"classes/CreateOwnerRefreshTokenDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateReviewDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserRefreshTokenDto.html":{},"guards/EditContentGuard.html":{},"guards/EditWebsiteGuard.html":{},"injectables/FilesService.html":{},"classes/GarbageCollectingProcessor.html":{},"injectables/GlobalInterceptor.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/ITelegramModuleAsyncOptions.html":{},"interfaces/ITelegramOptions.html":{},"injectables/InitializeEmailMiddleware.html":{},"injectables/InitializeUserMiddleware.html":{},"guards/JwtAuthGuard.html":{},"injectables/LocationMiddleware.html":{},"classes/LoginDto.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"classes/MatchConstraint.html":{},"interfaces/Msg.html":{},"classes/Nested.html":{},"classes/Nested-1.html":{},"classes/NotFoundError.html":{},"classes/Order.html":{},"classes/OrderProduct.html":{},"controllers/OrdersController.html":{},"modules/OrdersModule.html":{},"injectables/OrdersService.html":{},"classes/Owner.html":{},"guards/OwnerAdminGuard.html":{},"injectables/OwnerJwtRefreshService.html":{},"modules/OwnerModule.html":{},"classes/OwnerRefreshToken.html":{},"injectables/OwnerService.html":{},"classes/ParseFormDataJsonPipe.html":{},"injectables/ParseJsonPipe.html":{},"interfaces/Payload.html":{},"classes/Product.html":{},"classes/Product-1.html":{},"classes/ProductCategories.html":{},"controllers/ProductController.html":{},"injectables/ProductMiddleware.html":{},"modules/ProductModule.html":{},"classes/ProductReviews.html":{},"guards/RefreshAuthGuard.html":{},"interfaces/RequestHeaders.html":{},"classes/RequestValidator.html":{},"classes/ResetDto.html":{},"interfaces/ReturnedAdmin.html":{},"interfaces/ReturnedOwner.html":{},"interfaces/ReturnedUser.html":{},"classes/Review.html":{},"controllers/ReviewsController.html":{},"modules/ReviewsModule.html":{},"injectables/ReviewsService.html":{},"classes/Role.html":{},"controllers/RolesController.html":{},"guards/RolesGuard.html":{},"modules/RolesModule.html":{},"injectables/RolesService.html":{},"classes/SignupDto.html":{},"injectables/TasksService.html":{},"modules/TelegramModule.html":{},"injectables/TelegramService.html":{},"injectables/ThrottlerBehindProxyGuard.html":{},"interfaces/Tokens.html":{},"classes/UpdateCategoryDto.html":{},"classes/UpdateProductDto.html":{},"classes/UpdateUserDto.html":{},"injectables/UserAdminMiddleware.html":{},"guards/UserGuard.html":{},"injectables/UserJwtRefreshTokenService.html":{},"injectables/UserMiddleware.html":{},"injectables/UserMiddleware-1.html":{},"classes/UserRefreshToken.html":{},"classes/UserRoles.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"injectables/ValidateDto.html":{},"classes/ValidationException.html":{},"classes/WatchedProducts.html":{},"interfaces/fileCreated.html":{}}}],["important",{"_index":2115,"title":{},"body":{"injectables/MailService.html":{}}}],["imports",{"_index":548,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CartModule.html":{},"modules/CategoriesModule.html":{},"modules/CoreModule.html":{},"modules/MailModule.html":{},"modules/OrdersModule.html":{},"modules/OwnerModule.html":{},"modules/ProductModule.html":{},"modules/ReviewsModule.html":{},"modules/RolesModule.html":{},"modules/TelegramModule.html":{},"modules/UsersModule.html":{}}}],["include",{"_index":735,"title":{},"body":{"injectables/AdminService.html":{},"injectables/OwnerService.html":{},"injectables/UsersService.html":{}}}],["includesubdomains",{"_index":2020,"title":{},"body":{"injectables/InitializeUserMiddleware.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"injectables/ActivateMiddleware.html":{},"guards/AddContentGuard.html":{},"classes/AddRoleDto.html":{},"controllers/AdminController.html":{},"guards/AdminGuard.html":{},"interfaces/AdminInterface.html":{},"injectables/AdminJwtRefreshService.html":{},"classes/AdminRefreshToken.html":{},"interfaces/AdminRefreshTokenCreationAttrbs.html":{},"injectables/AdminService.html":{},"injectables/AdminUserMiddleware.html":{},"interfaces/AdmincreationAttrbs.html":{},"classes/AllExceptionsFilter.html":{},"classes/ApiError.html":{},"classes/ApiErrorExceptionFilter.html":{},"classes/ApiException.html":{},"classes/ApiExceptionFilter.html":{},"injectables/AppClusterService.html":{},"controllers/AppController.html":{},"injectables/AppListener.html":{},"controllers/AuthController.html":{},"guards/AuthFerfershGuard.html":{},"injectables/AuthMiddleware.html":{},"interfaces/AuthUser.html":{},"classes/BadRequestError.html":{},"classes/BanUserDto.html":{},"classes/BookmarksProducts.html":{},"classes/Cart.html":{},"classes/CartProduct.html":{},"classes/CartProduct-1.html":{},"controllers/CategoriesController.html":{},"injectables/CategoriesService.html":{},"classes/Category.html":{},"interfaces/CategoryCreationAtrb.html":{},"classes/ChangeDto.html":{},"interfaces/CodeDto.html":{},"injectables/CorsMiddleware.html":{},"classes/CreateAccessTokenDto.html":{},"classes/CreateAdminDto.html":{},"classes/CreateAdminRefreshTokenDto.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateOwnerDto.html":{},"classes/CreateOwnerRefreshTokenDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateReviewDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserRefreshTokenDto.html":{},"guards/EditContentGuard.html":{},"guards/EditWebsiteGuard.html":{},"injectables/FilesService.html":{},"classes/GarbageCollectingProcessor.html":{},"injectables/GlobalInterceptor.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/ITelegramModuleAsyncOptions.html":{},"interfaces/ITelegramOptions.html":{},"injectables/InitializeEmailMiddleware.html":{},"interfaces/InitializeUser.html":{},"injectables/InitializeUserMiddleware.html":{},"guards/JwtAuthGuard.html":{},"classes/JwtRefreshTokenDeletedEvent.html":{},"injectables/LocationMiddleware.html":{},"classes/LoginDto.html":{},"injectables/MailService.html":{},"classes/MatchConstraint.html":{},"interfaces/Msg.html":{},"classes/Nested.html":{},"classes/Nested-1.html":{},"classes/NotFoundError.html":{},"classes/Order.html":{},"classes/OrderProduct.html":{},"classes/Owner.html":{},"guards/OwnerAdminGuard.html":{},"interfaces/OwnerCreationAttrbs.html":{},"injectables/OwnerJwtRefreshService.html":{},"classes/OwnerRefreshToken.html":{},"interfaces/OwnerRefreshTokenCreationAttrbs.html":{},"injectables/OwnerService.html":{},"classes/ParseFormDataJsonPipe.html":{},"injectables/ParseJsonPipe.html":{},"interfaces/Payload.html":{},"classes/Product.html":{},"classes/Product-1.html":{},"classes/ProductCategories.html":{},"controllers/ProductController.html":{},"interfaces/ProductCreationAttrs.html":{},"injectables/ProductMiddleware.html":{},"classes/ProductReviews.html":{},"guards/RefreshAuthGuard.html":{},"interfaces/RequestHeaders.html":{},"classes/RequestValidator.html":{},"classes/ResetDto.html":{},"interfaces/ReturnedAdmin.html":{},"interfaces/ReturnedCategory.html":{},"interfaces/ReturnedOwner.html":{},"interfaces/ReturnedProduct.html":{},"interfaces/ReturnedProducts.html":{},"interfaces/ReturnedReview.html":{},"interfaces/ReturnedUser.html":{},"classes/Review.html":{},"interfaces/ReviewCreationAtrb.html":{},"controllers/ReviewsController.html":{},"injectables/ReviewsService.html":{},"classes/Role.html":{},"interfaces/RolecreationAttrbs.html":{},"controllers/RolesController.html":{},"guards/RolesGuard.html":{},"injectables/RolesService.html":{},"classes/SignupDto.html":{},"injectables/TasksService.html":{},"injectables/TelegramService.html":{},"injectables/ThrottlerBehindProxyGuard.html":{},"interfaces/Tokens.html":{},"classes/UpdateCategoryDto.html":{},"classes/UpdateProductDto.html":{},"classes/UpdateUserDto.html":{},"injectables/UserAdminMiddleware.html":{},"guards/UserGuard.html":{},"interfaces/UserInterface.html":{},"injectables/UserJwtRefreshTokenService.html":{},"injectables/UserMiddleware.html":{},"injectables/UserMiddleware-1.html":{},"interfaces/UserRefreshCreationAttrbs.html":{},"classes/UserRefreshToken.html":{},"classes/UserRoles.html":{},"interfaces/UsercreationAttrbs.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"injectables/ValidateDto.html":{},"interfaces/ValidateUser.html":{},"classes/ValidationException.html":{},"classes/WatchedProducts.html":{},"interfaces/fileCreated.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["indexable",{"_index":2915,"title":{},"body":{"interfaces/RequestHeaders.html":{}}}],["inestapplication",{"_index":980,"title":{},"body":{"injectables/AppClusterService.html":{},"interfaces/Msg.html":{}}}],["info",{"_index":3,"title":{},"body":{"injectables/ActivateMiddleware.html":{},"guards/AddContentGuard.html":{},"classes/AddRoleDto.html":{},"controllers/AdminController.html":{},"guards/AdminGuard.html":{},"interfaces/AdminInterface.html":{},"injectables/AdminJwtRefreshService.html":{},"modules/AdminModule.html":{},"classes/AdminRefreshToken.html":{},"interfaces/AdminRefreshTokenCreationAttrbs.html":{},"injectables/AdminService.html":{},"injectables/AdminUserMiddleware.html":{},"interfaces/AdmincreationAttrbs.html":{},"classes/AllExceptionsFilter.html":{},"classes/ApiError.html":{},"classes/ApiErrorExceptionFilter.html":{},"classes/ApiException.html":{},"classes/ApiExceptionFilter.html":{},"injectables/AppClusterService.html":{},"controllers/AppController.html":{},"injectables/AppListener.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"guards/AuthFerfershGuard.html":{},"injectables/AuthMiddleware.html":{},"modules/AuthModule.html":{},"interfaces/AuthUser.html":{},"classes/BadRequestError.html":{},"classes/BanUserDto.html":{},"classes/BookmarksProducts.html":{},"controllers/CardController.html":{},"injectables/CardService.html":{},"classes/Cart.html":{},"modules/CartModule.html":{},"classes/CartProduct.html":{},"classes/CartProduct-1.html":{},"controllers/CategoriesController.html":{},"modules/CategoriesModule.html":{},"injectables/CategoriesService.html":{},"classes/Category.html":{},"interfaces/CategoryCreationAtrb.html":{},"classes/ChangeDto.html":{},"interfaces/CodeDto.html":{},"modules/CoreModule.html":{},"injectables/CorsMiddleware.html":{},"classes/CreateAccessTokenDto.html":{},"classes/CreateAdminDto.html":{},"classes/CreateAdminRefreshTokenDto.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateOwnerDto.html":{},"classes/CreateOwnerRefreshTokenDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateReviewDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserRefreshTokenDto.html":{},"guards/EditContentGuard.html":{},"guards/EditWebsiteGuard.html":{},"injectables/FilesService.html":{},"classes/GarbageCollectingProcessor.html":{},"injectables/GlobalInterceptor.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/ITelegramModuleAsyncOptions.html":{},"interfaces/ITelegramOptions.html":{},"injectables/InitializeEmailMiddleware.html":{},"interfaces/InitializeUser.html":{},"injectables/InitializeUserMiddleware.html":{},"guards/JwtAuthGuard.html":{},"classes/JwtRefreshTokenDeletedEvent.html":{},"injectables/LocationMiddleware.html":{},"classes/LoginDto.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"classes/MatchConstraint.html":{},"interfaces/Msg.html":{},"classes/Nested.html":{},"classes/Nested-1.html":{},"classes/NotFoundError.html":{},"classes/Order.html":{},"classes/OrderProduct.html":{},"controllers/OrdersController.html":{},"modules/OrdersModule.html":{},"injectables/OrdersService.html":{},"classes/Owner.html":{},"guards/OwnerAdminGuard.html":{},"interfaces/OwnerCreationAttrbs.html":{},"injectables/OwnerJwtRefreshService.html":{},"modules/OwnerModule.html":{},"classes/OwnerRefreshToken.html":{},"interfaces/OwnerRefreshTokenCreationAttrbs.html":{},"injectables/OwnerService.html":{},"classes/ParseFormDataJsonPipe.html":{},"injectables/ParseJsonPipe.html":{},"interfaces/Payload.html":{},"classes/Product.html":{},"classes/Product-1.html":{},"classes/ProductCategories.html":{},"controllers/ProductController.html":{},"interfaces/ProductCreationAttrs.html":{},"injectables/ProductMiddleware.html":{},"modules/ProductModule.html":{},"classes/ProductReviews.html":{},"guards/RefreshAuthGuard.html":{},"interfaces/RequestHeaders.html":{},"classes/RequestValidator.html":{},"classes/ResetDto.html":{},"interfaces/ReturnedAdmin.html":{},"interfaces/ReturnedCategory.html":{},"interfaces/ReturnedOwner.html":{},"interfaces/ReturnedProduct.html":{},"interfaces/ReturnedProducts.html":{},"interfaces/ReturnedReview.html":{},"interfaces/ReturnedUser.html":{},"classes/Review.html":{},"interfaces/ReviewCreationAtrb.html":{},"controllers/ReviewsController.html":{},"modules/ReviewsModule.html":{},"injectables/ReviewsService.html":{},"classes/Role.html":{},"interfaces/RolecreationAttrbs.html":{},"controllers/RolesController.html":{},"guards/RolesGuard.html":{},"modules/RolesModule.html":{},"injectables/RolesService.html":{},"classes/SignupDto.html":{},"injectables/TasksService.html":{},"modules/TelegramModule.html":{},"injectables/TelegramService.html":{},"injectables/ThrottlerBehindProxyGuard.html":{},"interfaces/Tokens.html":{},"classes/UpdateCategoryDto.html":{},"classes/UpdateProductDto.html":{},"classes/UpdateUserDto.html":{},"injectables/UserAdminMiddleware.html":{},"guards/UserGuard.html":{},"interfaces/UserInterface.html":{},"injectables/UserJwtRefreshTokenService.html":{},"injectables/UserMiddleware.html":{},"injectables/UserMiddleware-1.html":{},"interfaces/UserRefreshCreationAttrbs.html":{},"classes/UserRefreshToken.html":{},"classes/UserRoles.html":{},"interfaces/UsercreationAttrbs.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"injectables/ValidateDto.html":{},"interfaces/ValidateUser.html":{},"classes/ValidationException.html":{},"classes/WatchedProducts.html":{},"interfaces/fileCreated.html":{}}}],["info.messageid",{"_index":2249,"title":{},"body":{"injectables/MailService.html":{}}}],["infoblock",{"_index":2176,"title":{},"body":{"injectables/MailService.html":{}}}],["inherited",{"_index":1388,"title":{},"body":{"classes/BadRequestError.html":{},"classes/NotFoundError.html":{}}}],["initializeemailmiddleware",{"_index":1355,"title":{"injectables/InitializeEmailMiddleware.html":{}},"body":{"modules/AuthModule.html":{},"injectables/InitializeEmailMiddleware.html":{}}}],["initializeuser",{"_index":2004,"title":{"interfaces/InitializeUser.html":{}},"body":{"interfaces/InitializeUser.html":{},"interfaces/RolecreationAttrbs.html":{},"interfaces/UserInterface.html":{},"interfaces/UserRefreshCreationAttrbs.html":{},"interfaces/UsercreationAttrbs.html":{},"injectables/UsersService.html":{},"interfaces/ValidateUser.html":{}}}],["initializeuser(userdto",{"_index":3418,"title":{},"body":{"injectables/UsersService.html":{}}}],["initializeusermiddleware",{"_index":507,"title":{"injectables/InitializeUserMiddleware.html":{}},"body":{"modules/AdminModule.html":{},"modules/AuthModule.html":{},"modules/CategoriesModule.html":{},"injectables/InitializeUserMiddleware.html":{},"modules/ProductModule.html":{},"modules/ReviewsModule.html":{},"modules/RolesModule.html":{},"modules/UsersModule.html":{}}}],["inject",{"_index":1988,"title":{},"body":{"interfaces/ITelegramModuleAsyncOptions.html":{},"interfaces/ITelegramOptions.html":{},"modules/TelegramModule.html":{},"injectables/TelegramService.html":{}}}],["injectable",{"_index":0,"title":{"injectables/ActivateMiddleware.html":{},"injectables/AdminJwtRefreshService.html":{},"injectables/AdminService.html":{},"injectables/AdminUserMiddleware.html":{},"injectables/AppClusterService.html":{},"injectables/AppListener.html":{},"injectables/AuthMiddleware.html":{},"injectables/CardService.html":{},"injectables/CategoriesService.html":{},"injectables/CorsMiddleware.html":{},"injectables/FilesService.html":{},"injectables/GlobalInterceptor.html":{},"injectables/InitializeEmailMiddleware.html":{},"injectables/InitializeUserMiddleware.html":{},"injectables/LocationMiddleware.html":{},"injectables/MailService.html":{},"injectables/OrdersService.html":{},"injectables/OwnerJwtRefreshService.html":{},"injectables/OwnerService.html":{},"injectables/ParseJsonPipe.html":{},"injectables/ProductMiddleware.html":{},"injectables/ReviewsService.html":{},"injectables/RolesService.html":{},"injectables/TasksService.html":{},"injectables/TelegramService.html":{},"injectables/ThrottlerBehindProxyGuard.html":{},"injectables/UserAdminMiddleware.html":{},"injectables/UserJwtRefreshTokenService.html":{},"injectables/UserMiddleware.html":{},"injectables/UserMiddleware-1.html":{},"injectables/UsersService.html":{},"injectables/ValidateDto.html":{}},"body":{"injectables/ActivateMiddleware.html":{},"guards/AddContentGuard.html":{},"guards/AdminGuard.html":{},"injectables/AdminJwtRefreshService.html":{},"injectables/AdminService.html":{},"injectables/AdminUserMiddleware.html":{},"injectables/AppClusterService.html":{},"injectables/AppListener.html":{},"guards/AuthFerfershGuard.html":{},"injectables/AuthMiddleware.html":{},"injectables/CardService.html":{},"injectables/CategoriesService.html":{},"injectables/CorsMiddleware.html":{},"guards/EditContentGuard.html":{},"guards/EditWebsiteGuard.html":{},"injectables/FilesService.html":{},"injectables/GlobalInterceptor.html":{},"injectables/InitializeEmailMiddleware.html":{},"injectables/InitializeUserMiddleware.html":{},"guards/JwtAuthGuard.html":{},"injectables/LocationMiddleware.html":{},"injectables/MailService.html":{},"interfaces/Msg.html":{},"injectables/OrdersService.html":{},"guards/OwnerAdminGuard.html":{},"injectables/OwnerJwtRefreshService.html":{},"injectables/OwnerService.html":{},"injectables/ParseJsonPipe.html":{},"injectables/ProductMiddleware.html":{},"guards/RefreshAuthGuard.html":{},"interfaces/RequestHeaders.html":{},"injectables/ReviewsService.html":{},"guards/RolesGuard.html":{},"injectables/RolesService.html":{},"injectables/TasksService.html":{},"injectables/TelegramService.html":{},"injectables/ThrottlerBehindProxyGuard.html":{},"injectables/UserAdminMiddleware.html":{},"guards/UserGuard.html":{},"injectables/UserJwtRefreshTokenService.html":{},"injectables/UserMiddleware.html":{},"injectables/UserMiddleware-1.html":{},"injectables/UsersService.html":{},"injectables/ValidateDto.html":{},"interfaces/fileCreated.html":{}}}],["injectables",{"_index":2,"title":{},"body":{"injectables/ActivateMiddleware.html":{},"injectables/AdminJwtRefreshService.html":{},"injectables/AdminService.html":{},"injectables/AdminUserMiddleware.html":{},"injectables/AppClusterService.html":{},"injectables/AppListener.html":{},"injectables/AuthMiddleware.html":{},"injectables/CardService.html":{},"injectables/CategoriesService.html":{},"injectables/CorsMiddleware.html":{},"injectables/FilesService.html":{},"injectables/GlobalInterceptor.html":{},"injectables/InitializeEmailMiddleware.html":{},"injectables/InitializeUserMiddleware.html":{},"injectables/LocationMiddleware.html":{},"injectables/MailService.html":{},"injectables/OrdersService.html":{},"injectables/OwnerJwtRefreshService.html":{},"injectables/OwnerService.html":{},"injectables/ParseJsonPipe.html":{},"injectables/ProductMiddleware.html":{},"injectables/ReviewsService.html":{},"injectables/RolesService.html":{},"injectables/TasksService.html":{},"injectables/TelegramService.html":{},"injectables/ThrottlerBehindProxyGuard.html":{},"injectables/UserAdminMiddleware.html":{},"injectables/UserJwtRefreshTokenService.html":{},"injectables/UserMiddleware.html":{},"injectables/UserMiddleware-1.html":{},"injectables/UsersService.html":{},"injectables/ValidateDto.html":{},"overview.html":{}}}],["injectmodel",{"_index":38,"title":{},"body":{"injectables/ActivateMiddleware.html":{},"injectables/AdminJwtRefreshService.html":{},"injectables/AdminService.html":{},"injectables/CategoriesService.html":{},"injectables/OwnerJwtRefreshService.html":{},"injectables/OwnerService.html":{},"injectables/ReviewsService.html":{},"injectables/RolesService.html":{},"injectables/UserJwtRefreshTokenService.html":{},"injectables/UsersService.html":{}}}],["injectmodel(admin",{"_index":54,"title":{},"body":{"injectables/ActivateMiddleware.html":{},"injectables/AdminService.html":{}}}],["injectmodel(adminrefreshtoken",{"_index":397,"title":{},"body":{"injectables/AdminJwtRefreshService.html":{}}}],["injectmodel(category",{"_index":1574,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["injectmodel(owner",{"_index":57,"title":{},"body":{"injectables/ActivateMiddleware.html":{},"injectables/OwnerService.html":{}}}],["injectmodel(ownerrefreshtoken",{"_index":2481,"title":{},"body":{"injectables/OwnerJwtRefreshService.html":{}}}],["injectmodel(review",{"_index":2993,"title":{},"body":{"injectables/ReviewsService.html":{}}}],["injectmodel(user",{"_index":3430,"title":{},"body":{"injectables/UsersService.html":{}}}],["injectmodel(userrefreshtoken",{"_index":3283,"title":{},"body":{"injectables/UserJwtRefreshTokenService.html":{}}}],["inserttoken",{"_index":331,"title":{},"body":{"injectables/AdminJwtRefreshService.html":{},"injectables/OwnerJwtRefreshService.html":{},"injectables/UserJwtRefreshTokenService.html":{}}}],["inserttoken(adminid",{"_index":356,"title":{},"body":{"injectables/AdminJwtRefreshService.html":{}}}],["inserttoken(ownerid",{"_index":2466,"title":{},"body":{"injectables/OwnerJwtRefreshService.html":{}}}],["inserttoken(userid",{"_index":3270,"title":{},"body":{"injectables/UserJwtRefreshTokenService.html":{}}}],["installation",{"_index":3602,"title":{},"body":{"index.html":{}}}],["installrunning",{"_index":3604,"title":{},"body":{"index.html":{}}}],["instanceof",{"_index":300,"title":{},"body":{"guards/AdminGuard.html":{},"classes/AllExceptionsFilter.html":{},"injectables/GlobalInterceptor.html":{},"guards/OwnerAdminGuard.html":{},"injectables/OwnerService.html":{}}}],["intercept",{"_index":1968,"title":{},"body":{"injectables/GlobalInterceptor.html":{}}}],["intercept(context",{"_index":1969,"title":{},"body":{"injectables/GlobalInterceptor.html":{}}}],["interceptors/global.interceptor",{"_index":1654,"title":{},"body":{"modules/CoreModule.html":{}}}],["interface",{"_index":307,"title":{"interfaces/AdminInterface.html":{},"interfaces/AdminRefreshTokenCreationAttrbs.html":{},"interfaces/AdmincreationAttrbs.html":{},"interfaces/AuthUser.html":{},"interfaces/CategoryCreationAtrb.html":{},"interfaces/CodeDto.html":{},"interfaces/ITelegramModuleAsyncOptions.html":{},"interfaces/ITelegramOptions.html":{},"interfaces/InitializeUser.html":{},"interfaces/Msg.html":{},"interfaces/OwnerCreationAttrbs.html":{},"interfaces/OwnerRefreshTokenCreationAttrbs.html":{},"interfaces/Payload.html":{},"interfaces/ProductCreationAttrs.html":{},"interfaces/RequestHeaders.html":{},"interfaces/ReturnedAdmin.html":{},"interfaces/ReturnedCategory.html":{},"interfaces/ReturnedOwner.html":{},"interfaces/ReturnedProduct.html":{},"interfaces/ReturnedProducts.html":{},"interfaces/ReturnedReview.html":{},"interfaces/ReturnedUser.html":{},"interfaces/ReviewCreationAtrb.html":{},"interfaces/RolecreationAttrbs.html":{},"interfaces/Tokens.html":{},"interfaces/UserInterface.html":{},"interfaces/UserRefreshCreationAttrbs.html":{},"interfaces/UsercreationAttrbs.html":{},"interfaces/ValidateUser.html":{},"interfaces/fileCreated.html":{}},"body":{"interfaces/AdminInterface.html":{},"interfaces/AdminRefreshTokenCreationAttrbs.html":{},"interfaces/AdmincreationAttrbs.html":{},"injectables/AppClusterService.html":{},"interfaces/AuthUser.html":{},"interfaces/CategoryCreationAtrb.html":{},"interfaces/CodeDto.html":{},"injectables/CorsMiddleware.html":{},"injectables/FilesService.html":{},"interfaces/ITelegramModuleAsyncOptions.html":{},"interfaces/ITelegramOptions.html":{},"interfaces/InitializeUser.html":{},"interfaces/Msg.html":{},"interfaces/OwnerCreationAttrbs.html":{},"interfaces/OwnerRefreshTokenCreationAttrbs.html":{},"interfaces/Payload.html":{},"interfaces/ProductCreationAttrs.html":{},"interfaces/RequestHeaders.html":{},"interfaces/ReturnedAdmin.html":{},"interfaces/ReturnedCategory.html":{},"interfaces/ReturnedOwner.html":{},"interfaces/ReturnedProduct.html":{},"interfaces/ReturnedProducts.html":{},"interfaces/ReturnedReview.html":{},"interfaces/ReturnedUser.html":{},"interfaces/ReviewCreationAtrb.html":{},"interfaces/RolecreationAttrbs.html":{},"interfaces/Tokens.html":{},"interfaces/UserInterface.html":{},"interfaces/UserRefreshCreationAttrbs.html":{},"interfaces/UsercreationAttrbs.html":{},"interfaces/ValidateUser.html":{},"interfaces/fileCreated.html":{}}}],["interfaces",{"_index":308,"title":{},"body":{"interfaces/AdminInterface.html":{},"interfaces/AdminRefreshTokenCreationAttrbs.html":{},"interfaces/AdmincreationAttrbs.html":{},"interfaces/AuthUser.html":{},"interfaces/CategoryCreationAtrb.html":{},"interfaces/CodeDto.html":{},"interfaces/ITelegramModuleAsyncOptions.html":{},"interfaces/ITelegramOptions.html":{},"interfaces/InitializeUser.html":{},"interfaces/Msg.html":{},"interfaces/OwnerCreationAttrbs.html":{},"interfaces/OwnerRefreshTokenCreationAttrbs.html":{},"interfaces/Payload.html":{},"interfaces/ProductCreationAttrs.html":{},"interfaces/RequestHeaders.html":{},"interfaces/ReturnedAdmin.html":{},"interfaces/ReturnedCategory.html":{},"interfaces/ReturnedOwner.html":{},"interfaces/ReturnedProduct.html":{},"interfaces/ReturnedProducts.html":{},"interfaces/ReturnedReview.html":{},"interfaces/ReturnedUser.html":{},"interfaces/ReviewCreationAtrb.html":{},"interfaces/RolecreationAttrbs.html":{},"interfaces/Tokens.html":{},"interfaces/UserInterface.html":{},"interfaces/UserRefreshCreationAttrbs.html":{},"interfaces/UsercreationAttrbs.html":{},"interfaces/ValidateUser.html":{},"interfaces/fileCreated.html":{},"overview.html":{}}}],["internal",{"_index":402,"title":{},"body":{"injectables/AdminJwtRefreshService.html":{},"classes/ApiException.html":{},"injectables/OwnerJwtRefreshService.html":{},"injectables/UserJwtRefreshTokenService.html":{}}}],["internalservererror",{"_index":908,"title":{},"body":{"classes/ApiException.html":{}}}],["internalservererror(type",{"_index":926,"title":{},"body":{"classes/ApiException.html":{}}}],["internalservererrorexception",{"_index":2097,"title":{},"body":{"injectables/MailService.html":{},"injectables/OwnerJwtRefreshService.html":{},"injectables/UserJwtRefreshTokenService.html":{}}}],["internalservererrorexception(erorr_while_sending_email",{"_index":2250,"title":{},"body":{"injectables/MailService.html":{}}}],["interval",{"_index":3158,"title":{},"body":{"injectables/TasksService.html":{}}}],["intervals",{"_index":3162,"title":{},"body":{"injectables/TasksService.html":{}}}],["intervals.foreach((key",{"_index":3164,"title":{},"body":{"injectables/TasksService.html":{}}}],["invalid",{"_index":2660,"title":{},"body":{"injectables/ParseJsonPipe.html":{}}}],["invalid_code",{"_index":723,"title":{},"body":{"injectables/AdminService.html":{},"classes/ApiException.html":{},"injectables/OwnerService.html":{},"injectables/UsersService.html":{}}}],["invalid_email",{"_index":721,"title":{},"body":{"injectables/AdminService.html":{},"classes/ApiException.html":{},"injectables/OwnerService.html":{},"injectables/UsersService.html":{}}}],["invalid_email_or_password",{"_index":929,"title":{},"body":{"classes/ApiException.html":{},"injectables/UsersService.html":{}}}],["invalid_header",{"_index":2913,"title":{},"body":{"guards/RefreshAuthGuard.html":{}}}],["invalid_link",{"_index":718,"title":{},"body":{"injectables/AdminService.html":{},"injectables/OwnerService.html":{}}}],["invalid_params",{"_index":42,"title":{},"body":{"injectables/ActivateMiddleware.html":{},"injectables/AdminUserMiddleware.html":{},"injectables/UserAdminMiddleware.html":{}}}],["invalid_refresh_token",{"_index":2016,"title":{},"body":{"injectables/InitializeUserMiddleware.html":{}}}],["invalid_request",{"_index":99,"title":{},"body":{"guards/AddContentGuard.html":{},"guards/AuthFerfershGuard.html":{},"guards/EditContentGuard.html":{},"guards/EditWebsiteGuard.html":{}}}],["ioredis",{"_index":3545,"title":{},"body":{"dependencies.html":{}}}],["ip",{"_index":1044,"title":{},"body":{"controllers/AppController.html":{},"injectables/CorsMiddleware.html":{},"injectables/LocationMiddleware.html":{},"interfaces/RequestHeaders.html":{},"dependencies.html":{}}}],["ip.address",{"_index":1067,"title":{},"body":{"controllers/AppController.html":{},"injectables/CorsMiddleware.html":{},"injectables/LocationMiddleware.html":{},"interfaces/RequestHeaders.html":{}}}],["ipaddress",{"_index":1066,"title":{},"body":{"controllers/AppController.html":{},"injectables/CorsMiddleware.html":{},"injectables/LocationMiddleware.html":{},"interfaces/RequestHeaders.html":{}}}],["isactivated",{"_index":1780,"title":{},"body":{"classes/CreateAdminRefreshTokenDto.html":{},"classes/CreateOwnerRefreshTokenDto.html":{},"classes/CreateUserRefreshTokenDto.html":{},"classes/Owner.html":{}}}],["isadmin",{"_index":828,"title":{},"body":{"injectables/AdminUserMiddleware.html":{},"classes/CreateAdminDto.html":{},"interfaces/InitializeUser.html":{},"interfaces/RolecreationAttrbs.html":{},"injectables/UserAdminMiddleware.html":{},"interfaces/UserInterface.html":{},"interfaces/UserRefreshCreationAttrbs.html":{},"interfaces/UsercreationAttrbs.html":{},"injectables/UsersService.html":{},"interfaces/ValidateUser.html":{}}}],["isadmin.tostring",{"_index":833,"title":{},"body":{"injectables/AdminUserMiddleware.html":{},"injectables/UserAdminMiddleware.html":{}}}],["isarray",{"_index":1735,"title":{},"body":{"classes/CreateAccessTokenDto.html":{},"classes/CreateAdminRefreshTokenDto.html":{},"classes/CreateOwnerRefreshTokenDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateUserRefreshTokenDto.html":{},"classes/Nested.html":{},"classes/Nested-1.html":{},"classes/Product.html":{},"classes/Product-1.html":{},"classes/UpdateProductDto.html":{}}}],["isboolean",{"_index":1734,"title":{},"body":{"classes/CreateAccessTokenDto.html":{},"classes/CreateAdminDto.html":{},"classes/CreateAdminRefreshTokenDto.html":{},"classes/CreateOwnerRefreshTokenDto.html":{},"classes/CreateUserRefreshTokenDto.html":{}}}],["iscontained",{"_index":745,"title":{},"body":{"injectables/AdminService.html":{},"injectables/UsersService.html":{}}}],["isdefined",{"_index":1840,"title":{},"body":{"classes/CreateProductDto.html":{},"classes/CreateReviewDto.html":{},"classes/Nested.html":{},"classes/Nested-1.html":{},"classes/UpdateProductDto.html":{}}}],["isdefined()@isstring()@matches(/[a",{"_index":2277,"title":{},"body":{"classes/Nested.html":{},"classes/Nested-1.html":{}}}],["isdefined()@matches(/[a",{"_index":1858,"title":{},"body":{"classes/CreateReviewDto.html":{}}}],["isdefined()@transform(value",{"_index":1831,"title":{},"body":{"classes/CreateProductDto.html":{},"classes/UpdateProductDto.html":{}}}],["isdefined()@type(undefined",{"_index":1827,"title":{},"body":{"classes/CreateProductDto.html":{},"classes/UpdateProductDto.html":{}}}],["isdefined()@type(undefined)@isnumber",{"_index":1829,"title":{},"body":{"classes/CreateProductDto.html":{},"classes/UpdateProductDto.html":{}}}],["isemail",{"_index":646,"title":{},"body":{"classes/AdminRefreshToken.html":{},"classes/CreateAccessTokenDto.html":{},"classes/CreateAdminDto.html":{},"classes/CreateAdminRefreshTokenDto.html":{},"classes/CreateOwnerDto.html":{},"classes/CreateOwnerRefreshTokenDto.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserRefreshTokenDto.html":{},"classes/LoginDto.html":{},"classes/Owner.html":{},"classes/OwnerRefreshToken.html":{},"classes/ResetDto.html":{},"classes/SignupDto.html":{},"classes/UserRefreshToken.html":{}}}],["isempty",{"_index":1675,"title":{},"body":{"injectables/CorsMiddleware.html":{},"interfaces/RequestHeaders.html":{}}}],["isempty(object",{"_index":1676,"title":{},"body":{"injectables/CorsMiddleware.html":{},"interfaces/RequestHeaders.html":{}}}],["isexist",{"_index":1587,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["isexist.en",{"_index":1597,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["isexist.id",{"_index":1595,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["isexist.rs",{"_index":1598,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["isexist.ru",{"_index":1599,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["isexist.save",{"_index":1604,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["isexist.ua",{"_index":1596,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["isglobal",{"_index":553,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CartModule.html":{},"modules/CategoriesModule.html":{},"modules/CoreModule.html":{},"modules/MailModule.html":{},"modules/OrdersModule.html":{},"modules/OwnerModule.html":{},"modules/ProductModule.html":{},"modules/ReviewsModule.html":{},"modules/RolesModule.html":{},"modules/UsersModule.html":{}}}],["isint",{"_index":1473,"title":{},"body":{"classes/CartProduct.html":{},"classes/CartProduct-1.html":{},"classes/OrderProduct.html":{},"classes/Owner.html":{},"classes/Product.html":{},"classes/Product-1.html":{},"classes/UserRefreshToken.html":{}}}],["isint()@column({type",{"_index":1469,"title":{},"body":{"classes/CartProduct.html":{},"classes/CartProduct-1.html":{},"classes/OrderProduct.html":{},"classes/Product.html":{},"classes/Product-1.html":{}}}],["isint()@foreignkey(undefined)@column({type",{"_index":1464,"title":{},"body":{"classes/CartProduct.html":{},"classes/CartProduct-1.html":{},"classes/OrderProduct.html":{},"classes/Product.html":{},"classes/Product-1.html":{}}}],["isnotempty",{"_index":3090,"title":{},"body":{"classes/SignupDto.html":{}}}],["isnumber",{"_index":141,"title":{},"body":{"classes/AddRoleDto.html":{},"classes/BanUserDto.html":{},"classes/CreateAccessTokenDto.html":{},"classes/CreateAdminRefreshTokenDto.html":{},"classes/CreateOwnerRefreshTokenDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateUserRefreshTokenDto.html":{},"classes/Nested.html":{},"classes/Nested-1.html":{},"classes/ResetDto.html":{},"classes/UpdateProductDto.html":{}}}],["isstring",{"_index":142,"title":{},"body":{"classes/AddRoleDto.html":{},"classes/BanUserDto.html":{},"classes/ChangeDto.html":{},"classes/CreateAccessTokenDto.html":{},"classes/CreateAdminDto.html":{},"classes/CreateAdminRefreshTokenDto.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateOwnerDto.html":{},"classes/CreateOwnerRefreshTokenDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateReviewDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserRefreshTokenDto.html":{},"classes/LoginDto.html":{},"classes/Nested.html":{},"classes/Nested-1.html":{},"classes/ResetDto.html":{},"classes/SignupDto.html":{},"classes/UpdateCategoryDto.html":{},"classes/UpdateProductDto.html":{},"classes/UpdateUserDto.html":{}}}],["isstring()@minlength(2)@maxlength(30)@matches(/[a",{"_index":1789,"title":{},"body":{"classes/CreateCategoryDto.html":{},"classes/UpdateCategoryDto.html":{}}}],["isuseractivated",{"_index":1383,"title":{},"body":{"interfaces/AuthUser.html":{},"interfaces/CodeDto.html":{},"classes/CreateAccessTokenDto.html":{},"interfaces/Payload.html":{},"interfaces/ReturnedAdmin.html":{},"interfaces/ReturnedOwner.html":{},"interfaces/ReturnedUser.html":{},"interfaces/Tokens.html":{}}}],["isuuid",{"_index":648,"title":{},"body":{"classes/AdminRefreshToken.html":{},"classes/CreateAccessTokenDto.html":{},"classes/CreateAdminDto.html":{},"classes/CreateOwnerDto.html":{},"classes/Owner.html":{},"classes/OwnerRefreshToken.html":{},"classes/UserRefreshToken.html":{}}}],["isuuid(4",{"_index":663,"title":{},"body":{"classes/AdminRefreshToken.html":{},"classes/CreateAccessTokenDto.html":{},"classes/CreateAdminDto.html":{},"classes/CreateOwnerDto.html":{},"classes/Owner.html":{},"classes/OwnerRefreshToken.html":{},"classes/UserRefreshToken.html":{}}}],["itelegrammoduleasyncoptions",{"_index":1985,"title":{"interfaces/ITelegramModuleAsyncOptions.html":{}},"body":{"interfaces/ITelegramModuleAsyncOptions.html":{},"interfaces/ITelegramOptions.html":{},"modules/TelegramModule.html":{}}}],["itelegramoptions",{"_index":1990,"title":{"interfaces/ITelegramOptions.html":{}},"body":{"interfaces/ITelegramModuleAsyncOptions.html":{},"interfaces/ITelegramOptions.html":{},"injectables/TelegramService.html":{}}}],["item.model",{"_index":2697,"title":{},"body":{"classes/Product.html":{}}}],["item.model.ts",{"_index":1458,"title":{},"body":{"classes/CartProduct.html":{}}}],["item.model.ts:22",{"_index":1466,"title":{},"body":{"classes/CartProduct.html":{}}}],["item.model.ts:32",{"_index":1468,"title":{},"body":{"classes/CartProduct.html":{}}}],["item.model.ts:42",{"_index":1465,"title":{},"body":{"classes/CartProduct.html":{}}}],["item.model.ts:51",{"_index":1470,"title":{},"body":{"classes/CartProduct.html":{}}}],["item.model.ts:54",{"_index":1463,"title":{},"body":{"classes/CartProduct.html":{}}}],["item.model.ts:57",{"_index":1467,"title":{},"body":{"classes/CartProduct.html":{}}}],["item.model.ts:59",{"_index":1472,"title":{},"body":{"classes/CartProduct.html":{}}}],["item.model.ts:63",{"_index":1471,"title":{},"body":{"classes/CartProduct.html":{}}}],["iv",{"_index":456,"title":{},"body":{"injectables/AdminJwtRefreshService.html":{},"controllers/AppController.html":{},"injectables/OwnerJwtRefreshService.html":{}}}],["job",{"_index":1955,"title":{},"body":{"classes/GarbageCollectingProcessor.html":{},"injectables/TasksService.html":{}}}],["job.start",{"_index":3142,"title":{},"body":{"injectables/TasksService.html":{}}}],["jobs",{"_index":3147,"title":{},"body":{"injectables/TasksService.html":{}}}],["jobs.foreach((value",{"_index":3149,"title":{},"body":{"injectables/TasksService.html":{}}}],["join",{"_index":3629,"title":{},"body":{"index.html":{}}}],["join('_",{"_index":2863,"title":{},"body":{"controllers/ProductController.html":{}}}],["jpeg|jpg|png|gif|svg",{"_index":2856,"title":{},"body":{"controllers/ProductController.html":{}}}],["jpg",{"_index":1923,"title":{},"body":{"injectables/FilesService.html":{},"interfaces/fileCreated.html":{}}}],["jpg|jpeg|png|gif",{"_index":1185,"title":{},"body":{"modules/AppModule.html":{},"injectables/FilesService.html":{},"interfaces/fileCreated.html":{}}}],["json",{"_index":2639,"title":{},"body":{"classes/ParseFormDataJsonPipe.html":{},"injectables/ParseJsonPipe.html":{},"dependencies.html":{}}}],["json.parse(json.stringify(admin",{"_index":763,"title":{},"body":{"injectables/AdminService.html":{}}}],["json.parse(json.stringify(req.headers",{"_index":1687,"title":{},"body":{"injectables/CorsMiddleware.html":{},"interfaces/RequestHeaders.html":{}}}],["json.parse(json.stringify(user",{"_index":757,"title":{},"body":{"injectables/AdminService.html":{}}}],["json.parse(req.body.title)?.en",{"_index":2858,"title":{},"body":{"controllers/ProductController.html":{}}}],["json.parse(req.body.title)?.en.split",{"_index":2862,"title":{},"body":{"controllers/ProductController.html":{}}}],["json.parse(this.description",{"_index":2749,"title":{},"body":{"classes/Product-1.html":{}}}],["json.parse(this.title",{"_index":2746,"title":{},"body":{"classes/Product-1.html":{}}}],["json.parse(value",{"_index":2657,"title":{},"body":{"injectables/ParseJsonPipe.html":{}}}],["json.parse(value.value",{"_index":1854,"title":{},"body":{"classes/CreateProductDto.html":{},"classes/Nested.html":{},"classes/Nested-1.html":{},"classes/UpdateProductDto.html":{}}}],["json.stringify",{"_index":1714,"title":{},"body":{"injectables/CorsMiddleware.html":{},"interfaces/RequestHeaders.html":{}}}],["json.stringify(description",{"_index":2750,"title":{},"body":{"classes/Product-1.html":{}}}],["json.stringify(object",{"_index":1713,"title":{},"body":{"injectables/CorsMiddleware.html":{},"interfaces/RequestHeaders.html":{}}}],["json.stringify(title",{"_index":2748,"title":{},"body":{"classes/Product-1.html":{}}}],["jwtauthguard",{"_index":200,"title":{"guards/JwtAuthGuard.html":{}},"body":{"controllers/AdminController.html":{},"controllers/AuthController.html":{},"controllers/CategoriesController.html":{},"guards/JwtAuthGuard.html":{},"controllers/ProductController.html":{},"controllers/ReviewsController.html":{},"controllers/RolesController.html":{},"controllers/UsersController.html":{}}}],["jwtmodule",{"_index":503,"title":{},"body":{"modules/AdminModule.html":{},"modules/AuthModule.html":{},"modules/OwnerModule.html":{},"modules/UsersModule.html":{}}}],["jwtmodule.register",{"_index":555,"title":{},"body":{"modules/AdminModule.html":{},"modules/AuthModule.html":{},"modules/OwnerModule.html":{},"modules/UsersModule.html":{}}}],["jwtrefreshtokendeletedevent",{"_index":1083,"title":{"classes/JwtRefreshTokenDeletedEvent.html":{}},"body":{"injectables/AppListener.html":{},"classes/JwtRefreshTokenDeletedEvent.html":{},"injectables/TasksService.html":{}}}],["jwtrefreshtokendeletedevent.description",{"_index":3171,"title":{},"body":{"injectables/TasksService.html":{}}}],["jwtrefreshtokendeletedevent.name",{"_index":3169,"title":{},"body":{"injectables/TasksService.html":{}}}],["jwtrefreshtokendeletedevent.userid",{"_index":3170,"title":{},"body":{"injectables/TasksService.html":{}}}],["jwtservice",{"_index":337,"title":{},"body":{"injectables/AdminJwtRefreshService.html":{},"injectables/OwnerJwtRefreshService.html":{},"injectables/UserJwtRefreshTokenService.html":{}}}],["kamil",{"_index":3636,"title":{},"body":{"index.html":{}}}],["kaze_shop",{"_index":2245,"title":{},"body":{"injectables/MailService.html":{},"properties.html":{}}}],["kaze_sport",{"_index":2108,"title":{},"body":{"injectables/MailService.html":{}}}],["kazesport2022@gmail.com",{"_index":2074,"title":{},"body":{"modules/MailModule.html":{}}}],["key",{"_index":460,"title":{},"body":{"injectables/AdminJwtRefreshService.html":{},"injectables/AdminService.html":{},"controllers/AppController.html":{},"injectables/CorsMiddleware.html":{},"injectables/OwnerJwtRefreshService.html":{},"interfaces/RequestHeaders.html":{},"injectables/TasksService.html":{},"injectables/UsersService.html":{}}}],["khtml",{"_index":596,"title":{},"body":{"classes/AdminRefreshToken.html":{},"classes/CreateAdminRefreshTokenDto.html":{},"classes/CreateOwnerDto.html":{},"classes/CreateOwnerRefreshTokenDto.html":{},"classes/Owner.html":{},"classes/OwnerRefreshToken.html":{},"injectables/UserJwtRefreshTokenService.html":{}}}],["knfdgfhrrljhtop6hfdghshfdshfohjlymhnhgnljjukfty6yujhjbjlvcglkidrtujhtrfujuj",{"_index":3386,"title":{},"body":{"modules/UsersModule.html":{}}}],["knfdljhtop6hohjlyjgfhmhnhgnljjukfty6yujhjbjlvcglkidrtujhdgsgdsagdfsdhqqqtrfujuj",{"_index":2523,"title":{},"body":{"modules/OwnerModule.html":{}}}],["knfdljhtop6hohjlymhnhgnljjukfty6yujhjbjlvcglki",{"_index":1359,"title":{},"body":{"modules/AuthModule.html":{}}}],["knfdljhtop6hohjlymhnhgnljjukfty6yujhjbjlvcglkidrtujhtrfujuj",{"_index":558,"title":{},"body":{"modules/AdminModule.html":{}}}],["l",{"_index":2187,"title":{},"body":{"injectables/MailService.html":{},"classes/Product.html":{},"classes/Product-1.html":{}}}],["left",{"_index":2200,"title":{},"body":{"injectables/MailService.html":{}}}],["left:0px!important",{"_index":2211,"title":{},"body":{"injectables/MailService.html":{}}}],["length",{"_index":659,"title":{},"body":{"classes/AdminRefreshToken.html":{},"classes/CreateAdminRefreshTokenDto.html":{},"classes/CreateOwnerDto.html":{},"classes/CreateOwnerRefreshTokenDto.html":{},"classes/Owner.html":{},"classes/OwnerRefreshToken.html":{}}}],["li",{"_index":2160,"title":{},"body":{"injectables/MailService.html":{}}}],["license",{"_index":3641,"title":{},"body":{"index.html":{},"properties.html":{}}}],["licensed",{"_index":3619,"title":{},"body":{"index.html":{}}}],["limit",{"_index":737,"title":{},"body":{"injectables/AdminService.html":{},"modules/AppModule.html":{},"injectables/UsersService.html":{}}}],["limiter",{"_index":1154,"title":{},"body":{"modules/AppModule.html":{}}}],["limits",{"_index":1196,"title":{},"body":{"modules/AppModule.html":{}}}],["line",{"_index":243,"title":{},"body":{"controllers/AdminController.html":{},"classes/AdminRefreshToken.html":{},"controllers/AuthController.html":{},"classes/CreateAdminRefreshTokenDto.html":{},"classes/CreateOwnerDto.html":{},"classes/CreateOwnerRefreshTokenDto.html":{},"injectables/FilesService.html":{},"injectables/MailService.html":{},"classes/Owner.html":{},"classes/OwnerRefreshToken.html":{},"controllers/RolesController.html":{},"interfaces/fileCreated.html":{}}}],["link",{"_index":434,"title":{},"body":{"injectables/AdminJwtRefreshService.html":{},"classes/CreateAccessTokenDto.html":{},"classes/CreateAdminDto.html":{},"classes/CreateOwnerDto.html":{},"injectables/MailService.html":{},"injectables/OwnerJwtRefreshService.html":{}}}],["link'})@isuuid(4",{"_index":1731,"title":{},"body":{"classes/CreateAccessTokenDto.html":{},"classes/CreateAdminDto.html":{},"classes/CreateOwnerDto.html":{}}}],["liqpay",{"_index":3548,"title":{},"body":{"dependencies.html":{}}}],["lite",{"_index":1684,"title":{},"body":{"injectables/CorsMiddleware.html":{},"injectables/LocationMiddleware.html":{},"interfaces/RequestHeaders.html":{},"dependencies.html":{}}}],["literal",{"_index":912,"title":{},"body":{"classes/ApiException.html":{},"classes/CreateProductDto.html":{},"injectables/FilesService.html":{},"classes/Product-1.html":{},"controllers/ProductController.html":{},"interfaces/ReturnedProduct.html":{},"classes/UpdateProductDto.html":{},"miscellaneous/typealiases.html":{}}}],["locale",{"_index":945,"title":{},"body":{"classes/ApiException.html":{},"controllers/AuthController.html":{},"classes/Category.html":{},"injectables/MailService.html":{}}}],["locationmiddleware",{"_index":2047,"title":{"injectables/LocationMiddleware.html":{}},"body":{"injectables/LocationMiddleware.html":{}}}],["lockduration",{"_index":1166,"title":{},"body":{"modules/AppModule.html":{}}}],["lockrenewtime",{"_index":1168,"title":{},"body":{"modules/AppModule.html":{}}}],["lodash",{"_index":2640,"title":{},"body":{"classes/ParseFormDataJsonPipe.html":{}}}],["logger",{"_index":324,"title":{},"body":{"injectables/AdminJwtRefreshService.html":{},"injectables/AppClusterService.html":{},"controllers/AppController.html":{},"injectables/CorsMiddleware.html":{},"classes/GarbageCollectingProcessor.html":{},"injectables/MailService.html":{},"interfaces/Msg.html":{},"injectables/OwnerJwtRefreshService.html":{},"interfaces/RequestHeaders.html":{},"injectables/ReviewsService.html":{},"injectables/TasksService.html":{}}}],["logger(adminjwtrefreshservice.name",{"_index":370,"title":{},"body":{"injectables/AdminJwtRefreshService.html":{}}}],["logger(appclusterservice.name",{"_index":975,"title":{},"body":{"injectables/AppClusterService.html":{},"interfaces/Msg.html":{}}}],["logger(appcontroller.name",{"_index":1045,"title":{},"body":{"controllers/AppController.html":{}}}],["logger(corsmiddleware.name",{"_index":1681,"title":{},"body":{"injectables/CorsMiddleware.html":{},"interfaces/RequestHeaders.html":{}}}],["logger(garbagecollectingprocessor.name",{"_index":1952,"title":{},"body":{"classes/GarbageCollectingProcessor.html":{}}}],["logger(mailservice.name",{"_index":2096,"title":{},"body":{"injectables/MailService.html":{}}}],["logger(ownerjwtrefreshservice.name",{"_index":2477,"title":{},"body":{"injectables/OwnerJwtRefreshService.html":{}}}],["logger(productservice.name",{"_index":2992,"title":{},"body":{"injectables/ReviewsService.html":{}}}],["logger(tasksservice.name",{"_index":3135,"title":{},"body":{"injectables/TasksService.html":{}}}],["loggigng",{"_index":1249,"title":{},"body":{"controllers/AuthController.html":{}}}],["logging",{"_index":1243,"title":{},"body":{"controllers/AuthController.html":{}}}],["login",{"_index":1220,"title":{},"body":{"controllers/AuthController.html":{}}}],["login(userdto",{"_index":1242,"title":{},"body":{"controllers/AuthController.html":{}}}],["logindto",{"_index":714,"title":{"classes/LoginDto.html":{}},"body":{"injectables/AdminService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"classes/LoginDto.html":{},"injectables/OwnerService.html":{}}}],["logout",{"_index":1221,"title":{},"body":{"controllers/AuthController.html":{}}}],["logout(response",{"_index":1248,"title":{},"body":{"controllers/AuthController.html":{}}}],["lviv",{"_index":3238,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["m",{"_index":2181,"title":{},"body":{"injectables/MailService.html":{},"classes/Product.html":{},"classes/Product-1.html":{}}}],["mail.constants",{"_index":2100,"title":{},"body":{"injectables/MailService.html":{}}}],["mail.service",{"_index":2063,"title":{},"body":{"modules/MailModule.html":{}}}],["mail/mail.module",{"_index":1113,"title":{},"body":{"modules/AppModule.html":{},"modules/RolesModule.html":{},"modules/UsersModule.html":{}}}],["mail/mail.service",{"_index":385,"title":{},"body":{"injectables/AdminJwtRefreshService.html":{},"modules/AdminModule.html":{},"modules/AuthModule.html":{},"injectables/OwnerJwtRefreshService.html":{},"modules/OwnerModule.html":{}}}],["mailermodule",{"_index":2064,"title":{},"body":{"modules/MailModule.html":{}}}],["mailermodule.forroot",{"_index":2067,"title":{},"body":{"modules/MailModule.html":{}}}],["mailerservice",{"_index":2087,"title":{},"body":{"injectables/MailService.html":{}}}],["mailmodule",{"_index":1099,"title":{"modules/MailModule.html":{}},"body":{"modules/AppModule.html":{},"modules/MailModule.html":{},"modules/RolesModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["mailservice",{"_index":340,"title":{"injectables/MailService.html":{}},"body":{"injectables/AdminJwtRefreshService.html":{},"modules/AdminModule.html":{},"modules/AuthModule.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"injectables/OwnerJwtRefreshService.html":{},"modules/OwnerModule.html":{},"overview.html":{}}}],["make",{"_index":2238,"title":{},"body":{"injectables/MailService.html":{}}}],["manager",{"_index":3528,"title":{},"body":{"dependencies.html":{}}}],["map",{"_index":1043,"title":{},"body":{"controllers/AppController.html":{},"injectables/TasksService.html":{}}}],["map((_",{"_index":1074,"title":{},"body":{"controllers/AppController.html":{}}}],["match",{"_index":1645,"title":{},"body":{"classes/ChangeDto.html":{},"classes/MatchConstraint.html":{},"classes/ResetDto.html":{},"classes/SignupDto.html":{},"miscellaneous/functions.html":{}}}],["match('password",{"_index":1648,"title":{},"body":{"classes/ChangeDto.html":{},"classes/ResetDto.html":{},"classes/SignupDto.html":{}}}],["match(property",{"_index":2266,"title":{},"body":{"classes/MatchConstraint.html":{},"miscellaneous/functions.html":{}}}],["matchconstraint",{"_index":2256,"title":{"classes/MatchConstraint.html":{}},"body":{"classes/MatchConstraint.html":{}}}],["matches",{"_index":1644,"title":{},"body":{"classes/ChangeDto.html":{},"classes/CreateAccessTokenDto.html":{},"classes/CreateAdminDto.html":{},"classes/CreateAdminRefreshTokenDto.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateOwnerDto.html":{},"classes/CreateOwnerRefreshTokenDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateReviewDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserRefreshTokenDto.html":{},"classes/LoginDto.html":{},"classes/Nested.html":{},"classes/Nested-1.html":{},"classes/ResetDto.html":{},"classes/SignupDto.html":{},"classes/UpdateCategoryDto.html":{},"classes/UpdateProductDto.html":{},"classes/UpdateUserDto.html":{}}}],["matches(/[a",{"_index":1775,"title":{},"body":{"classes/CreateAdminDto.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateOwnerDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateReviewDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUserDto.html":{},"classes/Nested.html":{},"classes/Nested-1.html":{},"classes/SignupDto.html":{},"classes/UpdateCategoryDto.html":{},"classes/UpdateProductDto.html":{},"classes/UpdateUserDto.html":{}}}],["matches(/^(?=.*\\d)(?=.*[a",{"_index":1816,"title":{},"body":{"classes/CreateOwnerDto.html":{}}}],["matches(/^[\\+]?[(]?[0",{"_index":1776,"title":{},"body":{"classes/CreateAdminDto.html":{},"classes/CreateOwnerDto.html":{},"classes/CreateUserDto.html":{},"classes/SignupDto.html":{}}}],["matches(/^[a",{"_index":1777,"title":{},"body":{"classes/CreateAdminDto.html":{},"classes/CreateAdminRefreshTokenDto.html":{},"classes/CreateOwnerDto.html":{},"classes/CreateOwnerRefreshTokenDto.html":{}}}],["matching",{"_index":79,"title":{},"body":{"injectables/ActivateMiddleware.html":{},"guards/AddContentGuard.html":{},"classes/AddRoleDto.html":{},"controllers/AdminController.html":{},"guards/AdminGuard.html":{},"interfaces/AdminInterface.html":{},"injectables/AdminJwtRefreshService.html":{},"modules/AdminModule.html":{},"classes/AdminRefreshToken.html":{},"interfaces/AdminRefreshTokenCreationAttrbs.html":{},"injectables/AdminService.html":{},"injectables/AdminUserMiddleware.html":{},"interfaces/AdmincreationAttrbs.html":{},"classes/AllExceptionsFilter.html":{},"classes/ApiError.html":{},"classes/ApiErrorExceptionFilter.html":{},"classes/ApiException.html":{},"classes/ApiExceptionFilter.html":{},"injectables/AppClusterService.html":{},"controllers/AppController.html":{},"injectables/AppListener.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"guards/AuthFerfershGuard.html":{},"injectables/AuthMiddleware.html":{},"modules/AuthModule.html":{},"interfaces/AuthUser.html":{},"classes/BadRequestError.html":{},"classes/BanUserDto.html":{},"classes/BookmarksProducts.html":{},"controllers/CardController.html":{},"injectables/CardService.html":{},"classes/Cart.html":{},"modules/CartModule.html":{},"classes/CartProduct.html":{},"classes/CartProduct-1.html":{},"controllers/CategoriesController.html":{},"modules/CategoriesModule.html":{},"injectables/CategoriesService.html":{},"classes/Category.html":{},"interfaces/CategoryCreationAtrb.html":{},"classes/ChangeDto.html":{},"interfaces/CodeDto.html":{},"modules/CoreModule.html":{},"injectables/CorsMiddleware.html":{},"classes/CreateAccessTokenDto.html":{},"classes/CreateAdminDto.html":{},"classes/CreateAdminRefreshTokenDto.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateOwnerDto.html":{},"classes/CreateOwnerRefreshTokenDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateReviewDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserRefreshTokenDto.html":{},"guards/EditContentGuard.html":{},"guards/EditWebsiteGuard.html":{},"injectables/FilesService.html":{},"classes/GarbageCollectingProcessor.html":{},"injectables/GlobalInterceptor.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/ITelegramModuleAsyncOptions.html":{},"interfaces/ITelegramOptions.html":{},"injectables/InitializeEmailMiddleware.html":{},"interfaces/InitializeUser.html":{},"injectables/InitializeUserMiddleware.html":{},"guards/JwtAuthGuard.html":{},"classes/JwtRefreshTokenDeletedEvent.html":{},"injectables/LocationMiddleware.html":{},"classes/LoginDto.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"classes/MatchConstraint.html":{},"interfaces/Msg.html":{},"classes/Nested.html":{},"classes/Nested-1.html":{},"classes/NotFoundError.html":{},"classes/Order.html":{},"classes/OrderProduct.html":{},"controllers/OrdersController.html":{},"modules/OrdersModule.html":{},"injectables/OrdersService.html":{},"classes/Owner.html":{},"guards/OwnerAdminGuard.html":{},"interfaces/OwnerCreationAttrbs.html":{},"injectables/OwnerJwtRefreshService.html":{},"modules/OwnerModule.html":{},"classes/OwnerRefreshToken.html":{},"interfaces/OwnerRefreshTokenCreationAttrbs.html":{},"injectables/OwnerService.html":{},"classes/ParseFormDataJsonPipe.html":{},"injectables/ParseJsonPipe.html":{},"interfaces/Payload.html":{},"classes/Product.html":{},"classes/Product-1.html":{},"classes/ProductCategories.html":{},"controllers/ProductController.html":{},"interfaces/ProductCreationAttrs.html":{},"injectables/ProductMiddleware.html":{},"modules/ProductModule.html":{},"classes/ProductReviews.html":{},"guards/RefreshAuthGuard.html":{},"interfaces/RequestHeaders.html":{},"classes/RequestValidator.html":{},"classes/ResetDto.html":{},"interfaces/ReturnedAdmin.html":{},"interfaces/ReturnedCategory.html":{},"interfaces/ReturnedOwner.html":{},"interfaces/ReturnedProduct.html":{},"interfaces/ReturnedProducts.html":{},"interfaces/ReturnedReview.html":{},"interfaces/ReturnedUser.html":{},"classes/Review.html":{},"interfaces/ReviewCreationAtrb.html":{},"controllers/ReviewsController.html":{},"modules/ReviewsModule.html":{},"injectables/ReviewsService.html":{},"classes/Role.html":{},"interfaces/RolecreationAttrbs.html":{},"controllers/RolesController.html":{},"guards/RolesGuard.html":{},"modules/RolesModule.html":{},"injectables/RolesService.html":{},"classes/SignupDto.html":{},"injectables/TasksService.html":{},"modules/TelegramModule.html":{},"injectables/TelegramService.html":{},"injectables/ThrottlerBehindProxyGuard.html":{},"interfaces/Tokens.html":{},"classes/UpdateCategoryDto.html":{},"classes/UpdateProductDto.html":{},"classes/UpdateUserDto.html":{},"injectables/UserAdminMiddleware.html":{},"guards/UserGuard.html":{},"interfaces/UserInterface.html":{},"injectables/UserJwtRefreshTokenService.html":{},"injectables/UserMiddleware.html":{},"injectables/UserMiddleware-1.html":{},"interfaces/UserRefreshCreationAttrbs.html":{},"classes/UserRefreshToken.html":{},"classes/UserRoles.html":{},"interfaces/UsercreationAttrbs.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"injectables/ValidateDto.html":{},"interfaces/ValidateUser.html":{},"classes/ValidationException.html":{},"classes/WatchedProducts.html":{},"dependencies.html":{},"interfaces/fileCreated.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{}}}],["math.random()).substring(2",{"_index":473,"title":{},"body":{"injectables/AdminJwtRefreshService.html":{},"injectables/OwnerJwtRefreshService.html":{}}}],["max",{"_index":658,"title":{},"body":{"classes/AdminRefreshToken.html":{},"modules/AppModule.html":{},"classes/CreateAdminRefreshTokenDto.html":{},"classes/CreateOwnerDto.html":{},"classes/CreateOwnerRefreshTokenDto.html":{},"injectables/InitializeUserMiddleware.html":{},"injectables/MailService.html":{},"classes/Owner.html":{},"classes/OwnerRefreshToken.html":{}}}],["maxage",{"_index":1059,"title":{},"body":{"controllers/AppController.html":{}}}],["maxcount",{"_index":2854,"title":{},"body":{"controllers/ProductController.html":{}}}],["maxlength",{"_index":1798,"title":{},"body":{"classes/CreateCategoryDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUserDto.html":{},"classes/Nested.html":{},"classes/SignupDto.html":{},"classes/UpdateCategoryDto.html":{},"classes/UpdateUserDto.html":{}}}],["maxlength(15",{"_index":1853,"title":{},"body":{"classes/CreateProductDto.html":{},"classes/Nested.html":{},"classes/Nested-1.html":{},"classes/UpdateProductDto.html":{}}}],["maxlength(30",{"_index":1800,"title":{},"body":{"classes/CreateCategoryDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUserDto.html":{},"classes/SignupDto.html":{},"classes/UpdateCategoryDto.html":{},"classes/UpdateUserDto.html":{}}}],["maxlength(50",{"_index":3246,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["maxlisteners",{"_index":1670,"title":{},"body":{"modules/CoreModule.html":{}}}],["maxmind/geoip2",{"_index":1041,"title":{},"body":{"controllers/AppController.html":{},"injectables/LocationMiddleware.html":{},"dependencies.html":{}}}],["maxstalledcount",{"_index":1171,"title":{},"body":{"modules/AppModule.html":{}}}],["menu",{"_index":2173,"title":{},"body":{"injectables/MailService.html":{}}}],["message",{"_index":859,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"classes/ApiError.html":{},"classes/ApiErrorExceptionFilter.html":{},"classes/ApiException.html":{},"classes/ApiExceptionFilter.html":{},"classes/BadRequestError.html":{},"classes/ChangeDto.html":{},"injectables/CorsMiddleware.html":{},"classes/CreateAccessTokenDto.html":{},"classes/CreateAdminDto.html":{},"classes/CreateAdminRefreshTokenDto.html":{},"classes/CreateOwnerDto.html":{},"classes/CreateOwnerRefreshTokenDto.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserRefreshTokenDto.html":{},"classes/HttpExceptionFilter.html":{},"classes/LoginDto.html":{},"classes/NotFoundError.html":{},"interfaces/RequestHeaders.html":{},"classes/ResetDto.html":{},"classes/SignupDto.html":{},"injectables/TelegramService.html":{},"classes/UpdateUserDto.html":{}}}],["messageevent",{"_index":1078,"title":{},"body":{"controllers/AppController.html":{}}}],["messagehandler",{"_index":1008,"title":{},"body":{"injectables/AppClusterService.html":{},"interfaces/Msg.html":{}}}],["messagehandler(msg",{"_index":1012,"title":{},"body":{"injectables/AppClusterService.html":{},"interfaces/Msg.html":{}}}],["messages",{"_index":3489,"title":{},"body":{"injectables/ValidateDto.html":{},"classes/ValidationException.html":{}}}],["metadata",{"_index":2652,"title":{},"body":{"injectables/ParseJsonPipe.html":{},"injectables/ValidateDto.html":{},"dependencies.html":{}}}],["metadata.data",{"_index":2656,"title":{},"body":{"injectables/ParseJsonPipe.html":{}}}],["method",{"_index":566,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"injectables/AuthMiddleware.html":{},"modules/AuthModule.html":{},"modules/CategoriesModule.html":{},"injectables/CorsMiddleware.html":{},"injectables/ProductMiddleware.html":{},"modules/ProductModule.html":{},"interfaces/RequestHeaders.html":{},"modules/ReviewsModule.html":{},"modules/RolesModule.html":{},"injectables/UserMiddleware.html":{},"injectables/UserMiddleware-1.html":{},"modules/UsersModule.html":{}}}],["methods",{"_index":8,"title":{},"body":{"injectables/ActivateMiddleware.html":{},"guards/AddContentGuard.html":{},"controllers/AdminController.html":{},"guards/AdminGuard.html":{},"injectables/AdminJwtRefreshService.html":{},"modules/AdminModule.html":{},"classes/AdminRefreshToken.html":{},"injectables/AdminService.html":{},"injectables/AdminUserMiddleware.html":{},"classes/AllExceptionsFilter.html":{},"classes/ApiErrorExceptionFilter.html":{},"classes/ApiException.html":{},"classes/ApiExceptionFilter.html":{},"injectables/AppClusterService.html":{},"controllers/AppController.html":{},"injectables/AppListener.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"guards/AuthFerfershGuard.html":{},"injectables/AuthMiddleware.html":{},"modules/AuthModule.html":{},"classes/Cart.html":{},"classes/CartProduct.html":{},"classes/CartProduct-1.html":{},"controllers/CategoriesController.html":{},"modules/CategoriesModule.html":{},"injectables/CategoriesService.html":{},"classes/Category.html":{},"injectables/CorsMiddleware.html":{},"guards/EditContentGuard.html":{},"guards/EditWebsiteGuard.html":{},"injectables/FilesService.html":{},"classes/GarbageCollectingProcessor.html":{},"injectables/GlobalInterceptor.html":{},"classes/HttpExceptionFilter.html":{},"injectables/InitializeEmailMiddleware.html":{},"injectables/InitializeUserMiddleware.html":{},"guards/JwtAuthGuard.html":{},"classes/JwtRefreshTokenDeletedEvent.html":{},"injectables/LocationMiddleware.html":{},"injectables/MailService.html":{},"classes/MatchConstraint.html":{},"classes/Order.html":{},"classes/OrderProduct.html":{},"classes/Owner.html":{},"guards/OwnerAdminGuard.html":{},"injectables/OwnerJwtRefreshService.html":{},"classes/OwnerRefreshToken.html":{},"injectables/OwnerService.html":{},"classes/ParseFormDataJsonPipe.html":{},"injectables/ParseJsonPipe.html":{},"classes/Product.html":{},"classes/Product-1.html":{},"controllers/ProductController.html":{},"injectables/ProductMiddleware.html":{},"modules/ProductModule.html":{},"guards/RefreshAuthGuard.html":{},"interfaces/RequestHeaders.html":{},"controllers/ReviewsController.html":{},"modules/ReviewsModule.html":{},"injectables/ReviewsService.html":{},"classes/Role.html":{},"controllers/RolesController.html":{},"guards/RolesGuard.html":{},"modules/RolesModule.html":{},"injectables/RolesService.html":{},"injectables/TasksService.html":{},"modules/TelegramModule.html":{},"injectables/TelegramService.html":{},"injectables/ThrottlerBehindProxyGuard.html":{},"injectables/UserAdminMiddleware.html":{},"guards/UserGuard.html":{},"injectables/UserJwtRefreshTokenService.html":{},"injectables/UserMiddleware.html":{},"injectables/UserMiddleware-1.html":{},"classes/UserRefreshToken.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"injectables/ValidateDto.html":{}}}],["middlewareconsumer",{"_index":492,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CategoriesModule.html":{},"modules/ProductModule.html":{},"modules/ReviewsModule.html":{},"modules/RolesModule.html":{},"modules/UsersModule.html":{}}}],["milliseconds",{"_index":3114,"title":{},"body":{"injectables/TasksService.html":{}}}],["mimetype",{"_index":1187,"title":{},"body":{"modules/AppModule.html":{},"injectables/FilesService.html":{},"controllers/ProductController.html":{},"interfaces/fileCreated.html":{}}}],["minlength",{"_index":1797,"title":{},"body":{"classes/CreateCategoryDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUserDto.html":{},"classes/ResetDto.html":{},"classes/SignupDto.html":{},"classes/UpdateCategoryDto.html":{},"classes/UpdateUserDto.html":{}}}],["minlength(2",{"_index":1799,"title":{},"body":{"classes/CreateCategoryDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUserDto.html":{},"classes/SignupDto.html":{},"classes/UpdateCategoryDto.html":{},"classes/UpdateUserDto.html":{}}}],["minlength(8",{"_index":2944,"title":{},"body":{"classes/ResetDto.html":{}}}],["minute",{"_index":3145,"title":{},"body":{"injectables/TasksService.html":{}}}],["miscellaneous",{"_index":3575,"title":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["mit",{"_index":3618,"title":{},"body":{"index.html":{}}}],["mkdirsync",{"_index":1917,"title":{},"body":{"injectables/FilesService.html":{},"controllers/ProductController.html":{},"interfaces/fileCreated.html":{}}}],["mkdirsync(destination",{"_index":1947,"title":{},"body":{"injectables/FilesService.html":{},"controllers/ProductController.html":{},"interfaces/fileCreated.html":{}}}],["mkdirsync(imagespath",{"_index":1949,"title":{},"body":{"injectables/FilesService.html":{},"controllers/ProductController.html":{},"interfaces/fileCreated.html":{}}}],["mmmihaeel",{"_index":3654,"title":{},"body":{"properties.html":{}}}],["mobile",{"_index":2218,"title":{},"body":{"injectables/MailService.html":{}}}],["mode",{"_index":3608,"title":{},"body":{"index.html":{}}}],["model",{"_index":578,"title":{},"body":{"classes/AdminRefreshToken.html":{},"classes/BookmarksProducts.html":{},"classes/Cart.html":{},"classes/CartProduct.html":{},"classes/CartProduct-1.html":{},"classes/Category.html":{},"classes/Order.html":{},"classes/OrderProduct.html":{},"classes/Owner.html":{},"classes/OwnerRefreshToken.html":{},"classes/Product.html":{},"classes/Product-1.html":{},"classes/ProductCategories.html":{},"classes/ProductReviews.html":{},"classes/Review.html":{},"classes/Role.html":{},"classes/UserRefreshToken.html":{},"classes/UserRoles.html":{},"classes/WatchedProducts.html":{}}}],["models",{"_index":1209,"title":{},"body":{"modules/AppModule.html":{}}}],["models/admin.model",{"_index":205,"title":{},"body":{"controllers/AdminController.html":{},"modules/AdminModule.html":{},"injectables/AdminService.html":{}}}],["models/admin.refresh.token.model",{"_index":381,"title":{},"body":{"injectables/AdminJwtRefreshService.html":{},"modules/AdminModule.html":{}}}],["models/bookmark.products",{"_index":2890,"title":{},"body":{"modules/ProductModule.html":{}}}],["models/cart.model",{"_index":1455,"title":{},"body":{"modules/CartModule.html":{}}}],["models/cart.product.model",{"_index":1456,"title":{},"body":{"modules/CartModule.html":{}}}],["models/category.model",{"_index":1524,"title":{},"body":{"controllers/CategoriesController.html":{},"modules/CategoriesModule.html":{},"injectables/CategoriesService.html":{}}}],["models/order.model",{"_index":2338,"title":{},"body":{"modules/OrdersModule.html":{}}}],["models/order.product.model",{"_index":2339,"title":{},"body":{"modules/OrdersModule.html":{}}}],["models/owner.model",{"_index":2520,"title":{},"body":{"modules/OwnerModule.html":{},"injectables/OwnerService.html":{}}}],["models/owner.refresh.token.model",{"_index":2479,"title":{},"body":{"injectables/OwnerJwtRefreshService.html":{},"modules/OwnerModule.html":{}}}],["models/product.categories.model",{"_index":1546,"title":{},"body":{"modules/CategoriesModule.html":{}}}],["models/product.model",{"_index":2886,"title":{},"body":{"modules/ProductModule.html":{}}}],["models/product.reviews.model",{"_index":2978,"title":{},"body":{"modules/ReviewsModule.html":{}}}],["models/review.model",{"_index":2979,"title":{},"body":{"modules/ReviewsModule.html":{},"injectables/ReviewsService.html":{}}}],["models/roles.model",{"_index":3048,"title":{},"body":{"controllers/RolesController.html":{},"modules/RolesModule.html":{},"injectables/RolesService.html":{}}}],["models/user.model",{"_index":3361,"title":{},"body":{"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["models/user.refresh.token.model",{"_index":3281,"title":{},"body":{"injectables/UserJwtRefreshTokenService.html":{},"modules/UsersModule.html":{}}}],["models/user.roles.model",{"_index":3069,"title":{},"body":{"modules/RolesModule.html":{}}}],["models/watched.products.model",{"_index":2891,"title":{},"body":{"modules/ProductModule.html":{}}}],["module",{"_index":475,"title":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CartModule.html":{},"modules/CategoriesModule.html":{},"modules/CoreModule.html":{},"modules/MailModule.html":{},"modules/OrdersModule.html":{},"modules/OwnerModule.html":{},"modules/ProductModule.html":{},"modules/ReviewsModule.html":{},"modules/RolesModule.html":{},"modules/TelegramModule.html":{},"modules/UsersModule.html":{}},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CartModule.html":{},"modules/CategoriesModule.html":{},"modules/CoreModule.html":{},"modules/MailModule.html":{},"modules/OrdersModule.html":{},"modules/OwnerModule.html":{},"modules/ProductModule.html":{},"modules/ReviewsModule.html":{},"modules/RolesModule.html":{},"modules/TelegramModule.html":{},"modules/UsersModule.html":{}}}],["modulemetadata",{"_index":1989,"title":{},"body":{"interfaces/ITelegramModuleAsyncOptions.html":{},"interfaces/ITelegramOptions.html":{}}}],["modules",{"_index":477,"title":{"modules.html":{}},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CartModule.html":{},"modules/CategoriesModule.html":{},"modules/CoreModule.html":{},"modules/MailModule.html":{},"modules/OrdersModule.html":{},"modules/OwnerModule.html":{},"modules/ProductModule.html":{},"modules/ReviewsModule.html":{},"modules/RolesModule.html":{},"modules/TelegramModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["modules/mailer",{"_index":2066,"title":{},"body":{"modules/MailModule.html":{},"injectables/MailService.html":{},"dependencies.html":{}}}],["more",{"_index":2243,"title":{},"body":{"injectables/MailService.html":{},"index.html":{}}}],["mozilla/5.0",{"_index":589,"title":{},"body":{"classes/AdminRefreshToken.html":{},"classes/CreateAdminRefreshTokenDto.html":{},"classes/CreateOwnerDto.html":{},"classes/CreateOwnerRefreshTokenDto.html":{},"classes/Owner.html":{},"classes/OwnerRefreshToken.html":{},"injectables/UserJwtRefreshTokenService.html":{}}}],["msg",{"_index":983,"title":{"interfaces/Msg.html":{}},"body":{"injectables/AppClusterService.html":{},"interfaces/Msg.html":{}}}],["msg.cmd",{"_index":1013,"title":{},"body":{"injectables/AppClusterService.html":{},"interfaces/Msg.html":{}}}],["mso",{"_index":2127,"title":{},"body":{"injectables/MailService.html":{}}}],["multer",{"_index":2824,"title":{},"body":{"controllers/ProductController.html":{}}}],["multermodule",{"_index":1130,"title":{},"body":{"modules/AppModule.html":{}}}],["multermodule.register",{"_index":1181,"title":{},"body":{"modules/AppModule.html":{}}}],["myśliwiec",{"_index":3637,"title":{},"body":{"index.html":{}}}],["name",{"_index":18,"title":{},"body":{"injectables/ActivateMiddleware.html":{},"guards/AddContentGuard.html":{},"controllers/AdminController.html":{},"guards/AdminGuard.html":{},"interfaces/AdminInterface.html":{},"injectables/AdminJwtRefreshService.html":{},"modules/AdminModule.html":{},"classes/AdminRefreshToken.html":{},"interfaces/AdminRefreshTokenCreationAttrbs.html":{},"injectables/AdminService.html":{},"injectables/AdminUserMiddleware.html":{},"interfaces/AdmincreationAttrbs.html":{},"classes/AllExceptionsFilter.html":{},"classes/ApiError.html":{},"classes/ApiErrorExceptionFilter.html":{},"classes/ApiException.html":{},"classes/ApiExceptionFilter.html":{},"injectables/AppClusterService.html":{},"controllers/AppController.html":{},"injectables/AppListener.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"guards/AuthFerfershGuard.html":{},"injectables/AuthMiddleware.html":{},"modules/AuthModule.html":{},"interfaces/AuthUser.html":{},"classes/BadRequestError.html":{},"classes/Cart.html":{},"controllers/CategoriesController.html":{},"modules/CategoriesModule.html":{},"injectables/CategoriesService.html":{},"interfaces/CategoryCreationAtrb.html":{},"interfaces/CodeDto.html":{},"modules/CoreModule.html":{},"injectables/CorsMiddleware.html":{},"classes/CreateAdminDto.html":{},"classes/CreateOwnerDto.html":{},"classes/CreateReviewDto.html":{},"classes/CreateUserDto.html":{},"guards/EditContentGuard.html":{},"guards/EditWebsiteGuard.html":{},"injectables/FilesService.html":{},"classes/GarbageCollectingProcessor.html":{},"injectables/GlobalInterceptor.html":{},"classes/HttpExceptionFilter.html":{},"injectables/InitializeEmailMiddleware.html":{},"interfaces/InitializeUser.html":{},"injectables/InitializeUserMiddleware.html":{},"guards/JwtAuthGuard.html":{},"classes/JwtRefreshTokenDeletedEvent.html":{},"injectables/LocationMiddleware.html":{},"injectables/MailService.html":{},"classes/MatchConstraint.html":{},"classes/NotFoundError.html":{},"classes/Order.html":{},"classes/Owner.html":{},"guards/OwnerAdminGuard.html":{},"interfaces/OwnerCreationAttrbs.html":{},"injectables/OwnerJwtRefreshService.html":{},"classes/OwnerRefreshToken.html":{},"interfaces/OwnerRefreshTokenCreationAttrbs.html":{},"injectables/OwnerService.html":{},"classes/ParseFormDataJsonPipe.html":{},"injectables/ParseJsonPipe.html":{},"interfaces/Payload.html":{},"classes/Product.html":{},"classes/Product-1.html":{},"controllers/ProductController.html":{},"interfaces/ProductCreationAttrs.html":{},"injectables/ProductMiddleware.html":{},"modules/ProductModule.html":{},"guards/RefreshAuthGuard.html":{},"interfaces/ReturnedAdmin.html":{},"interfaces/ReturnedCategory.html":{},"interfaces/ReturnedOwner.html":{},"interfaces/ReturnedProduct.html":{},"interfaces/ReturnedProducts.html":{},"interfaces/ReturnedReview.html":{},"interfaces/ReturnedUser.html":{},"classes/Review.html":{},"interfaces/ReviewCreationAtrb.html":{},"controllers/ReviewsController.html":{},"modules/ReviewsModule.html":{},"injectables/ReviewsService.html":{},"interfaces/RolecreationAttrbs.html":{},"controllers/RolesController.html":{},"guards/RolesGuard.html":{},"modules/RolesModule.html":{},"injectables/RolesService.html":{},"classes/SignupDto.html":{},"injectables/TasksService.html":{},"modules/TelegramModule.html":{},"injectables/TelegramService.html":{},"injectables/ThrottlerBehindProxyGuard.html":{},"interfaces/Tokens.html":{},"classes/UpdateUserDto.html":{},"injectables/UserAdminMiddleware.html":{},"guards/UserGuard.html":{},"interfaces/UserInterface.html":{},"injectables/UserJwtRefreshTokenService.html":{},"injectables/UserMiddleware.html":{},"injectables/UserMiddleware-1.html":{},"interfaces/UserRefreshCreationAttrbs.html":{},"classes/UserRefreshToken.html":{},"interfaces/UsercreationAttrbs.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"injectables/ValidateDto.html":{},"interfaces/ValidateUser.html":{},"classes/ValidationException.html":{},"interfaces/fileCreated.html":{},"miscellaneous/functions.html":{}}}],["name'})@column({type",{"_index":2378,"title":{},"body":{"classes/Owner.html":{}}}],["name'})@isstring()@matches(/[a",{"_index":1759,"title":{},"body":{"classes/CreateAdminDto.html":{},"classes/CreateOwnerDto.html":{}}}],["name'})@isstring()@minlength(2)@maxlength(30)@isnotempty()@matches(/[a",{"_index":3085,"title":{},"body":{"classes/SignupDto.html":{}}}],["name'})@isstring()@minlength(2)@maxlength(30)@matches(/[a",{"_index":1873,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{}}}],["name}${ext",{"_index":1940,"title":{},"body":{"injectables/FilesService.html":{},"controllers/ProductController.html":{},"interfaces/fileCreated.html":{}}}],["need",{"_index":2242,"title":{},"body":{"injectables/MailService.html":{}}}],["nest",{"_index":3552,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["nested",{"_index":1845,"title":{"classes/Nested.html":{},"classes/Nested-1.html":{}},"body":{"classes/CreateProductDto.html":{},"classes/Nested.html":{},"classes/Nested-1.html":{},"classes/UpdateProductDto.html":{}}}],["nestframework",{"_index":3640,"title":{},"body":{"index.html":{}}}],["nestinterceptor",{"_index":1972,"title":{},"body":{"injectables/GlobalInterceptor.html":{}}}],["nestjs",{"_index":2065,"title":{},"body":{"modules/MailModule.html":{},"injectables/MailService.html":{},"dependencies.html":{}}}],["nestjs/axios",{"_index":3507,"title":{},"body":{"dependencies.html":{}}}],["nestjs/bull",{"_index":1133,"title":{},"body":{"modules/AppModule.html":{},"modules/CoreModule.html":{},"classes/GarbageCollectingProcessor.html":{},"dependencies.html":{}}}],["nestjs/common",{"_index":37,"title":{},"body":{"injectables/ActivateMiddleware.html":{},"guards/AddContentGuard.html":{},"controllers/AdminController.html":{},"guards/AdminGuard.html":{},"injectables/AdminJwtRefreshService.html":{},"modules/AdminModule.html":{},"injectables/AdminService.html":{},"injectables/AdminUserMiddleware.html":{},"classes/AllExceptionsFilter.html":{},"classes/ApiError.html":{},"classes/ApiErrorExceptionFilter.html":{},"classes/ApiException.html":{},"classes/ApiExceptionFilter.html":{},"injectables/AppClusterService.html":{},"controllers/AppController.html":{},"injectables/AppListener.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"guards/AuthFerfershGuard.html":{},"injectables/AuthMiddleware.html":{},"modules/AuthModule.html":{},"classes/BadRequestError.html":{},"controllers/CardController.html":{},"injectables/CardService.html":{},"modules/CartModule.html":{},"controllers/CategoriesController.html":{},"modules/CategoriesModule.html":{},"injectables/CategoriesService.html":{},"modules/CoreModule.html":{},"injectables/CorsMiddleware.html":{},"guards/EditContentGuard.html":{},"guards/EditWebsiteGuard.html":{},"injectables/FilesService.html":{},"classes/GarbageCollectingProcessor.html":{},"injectables/GlobalInterceptor.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/ITelegramModuleAsyncOptions.html":{},"interfaces/ITelegramOptions.html":{},"injectables/InitializeEmailMiddleware.html":{},"injectables/InitializeUserMiddleware.html":{},"guards/JwtAuthGuard.html":{},"injectables/LocationMiddleware.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"interfaces/Msg.html":{},"classes/NotFoundError.html":{},"controllers/OrdersController.html":{},"modules/OrdersModule.html":{},"injectables/OrdersService.html":{},"guards/OwnerAdminGuard.html":{},"injectables/OwnerJwtRefreshService.html":{},"modules/OwnerModule.html":{},"injectables/OwnerService.html":{},"classes/ParseFormDataJsonPipe.html":{},"injectables/ParseJsonPipe.html":{},"controllers/ProductController.html":{},"injectables/ProductMiddleware.html":{},"modules/ProductModule.html":{},"guards/RefreshAuthGuard.html":{},"interfaces/RequestHeaders.html":{},"controllers/ReviewsController.html":{},"modules/ReviewsModule.html":{},"injectables/ReviewsService.html":{},"controllers/RolesController.html":{},"guards/RolesGuard.html":{},"modules/RolesModule.html":{},"injectables/RolesService.html":{},"injectables/TasksService.html":{},"modules/TelegramModule.html":{},"injectables/TelegramService.html":{},"injectables/ThrottlerBehindProxyGuard.html":{},"injectables/UserAdminMiddleware.html":{},"guards/UserGuard.html":{},"injectables/UserJwtRefreshTokenService.html":{},"injectables/UserMiddleware.html":{},"injectables/UserMiddleware-1.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"injectables/ValidateDto.html":{},"classes/ValidationException.html":{},"dependencies.html":{},"interfaces/fileCreated.html":{}}}],["nestjs/common/decorators",{"_index":1268,"title":{},"body":{"controllers/AuthController.html":{},"injectables/InitializeEmailMiddleware.html":{},"injectables/InitializeUserMiddleware.html":{}}}],["nestjs/common/exceptions",{"_index":823,"title":{},"body":{"injectables/AdminUserMiddleware.html":{},"injectables/UserAdminMiddleware.html":{}}}],["nestjs/common/interfaces",{"_index":1087,"title":{},"body":{"injectables/AppListener.html":{},"injectables/CategoriesService.html":{}}}],["nestjs/common/pipes",{"_index":228,"title":{},"body":{"controllers/AdminController.html":{}}}],["nestjs/config",{"_index":528,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CartModule.html":{},"modules/CategoriesModule.html":{},"modules/CoreModule.html":{},"modules/MailModule.html":{},"modules/OrdersModule.html":{},"modules/OwnerModule.html":{},"modules/ProductModule.html":{},"modules/ReviewsModule.html":{},"modules/RolesModule.html":{},"modules/UsersModule.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":282,"title":{},"body":{"guards/AdminGuard.html":{},"classes/AllExceptionsFilter.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CoreModule.html":{},"guards/OwnerAdminGuard.html":{},"guards/RolesGuard.html":{},"guards/UserGuard.html":{},"dependencies.html":{}}}],["nestjs/event",{"_index":1089,"title":{},"body":{"injectables/AppListener.html":{},"modules/CoreModule.html":{},"injectables/TasksService.html":{},"dependencies.html":{}}}],["nestjs/jwt",{"_index":371,"title":{},"body":{"injectables/AdminJwtRefreshService.html":{},"modules/AdminModule.html":{},"modules/AuthModule.html":{},"injectables/OwnerJwtRefreshService.html":{},"modules/OwnerModule.html":{},"injectables/UserJwtRefreshTokenService.html":{},"modules/UsersModule.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":1131,"title":{},"body":{"modules/AppModule.html":{},"controllers/ProductController.html":{},"dependencies.html":{}}}],["nestjs/schedule",{"_index":1658,"title":{},"body":{"modules/CoreModule.html":{},"injectables/TasksService.html":{},"dependencies.html":{}}}],["nestjs/sequelize",{"_index":39,"title":{},"body":{"injectables/ActivateMiddleware.html":{},"injectables/AdminJwtRefreshService.html":{},"modules/AdminModule.html":{},"injectables/AdminService.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CartModule.html":{},"modules/CategoriesModule.html":{},"injectables/CategoriesService.html":{},"modules/CoreModule.html":{},"modules/MailModule.html":{},"modules/OrdersModule.html":{},"injectables/OwnerJwtRefreshService.html":{},"modules/OwnerModule.html":{},"injectables/OwnerService.html":{},"modules/ProductModule.html":{},"modules/ReviewsModule.html":{},"injectables/ReviewsService.html":{},"modules/RolesModule.html":{},"injectables/RolesService.html":{},"injectables/UserJwtRefreshTokenService.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["nestjs/serve",{"_index":1111,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["nestjs/swagger",{"_index":140,"title":{},"body":{"classes/AddRoleDto.html":{},"controllers/AdminController.html":{},"classes/AdminRefreshToken.html":{},"controllers/AppController.html":{},"controllers/AuthController.html":{},"classes/BanUserDto.html":{},"controllers/CategoriesController.html":{},"classes/ChangeDto.html":{},"classes/CreateAccessTokenDto.html":{},"classes/CreateAdminDto.html":{},"classes/CreateAdminRefreshTokenDto.html":{},"classes/CreateOwnerDto.html":{},"classes/CreateOwnerRefreshTokenDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserRefreshTokenDto.html":{},"classes/LoginDto.html":{},"classes/Owner.html":{},"classes/OwnerRefreshToken.html":{},"classes/ResetDto.html":{},"classes/Role.html":{},"controllers/RolesController.html":{},"classes/SignupDto.html":{},"classes/UpdateUserDto.html":{},"classes/UserRefreshToken.html":{},"classes/UserRoles.html":{},"controllers/UsersController.html":{},"dependencies.html":{}}}],["nestjs/throttler",{"_index":225,"title":{},"body":{"controllers/AdminController.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"controllers/CategoriesController.html":{},"controllers/ProductController.html":{},"controllers/ReviewsController.html":{},"controllers/RolesController.html":{},"injectables/ThrottlerBehindProxyGuard.html":{},"controllers/UsersController.html":{},"dependencies.html":{}}}],["nestjs/websockets",{"_index":3522,"title":{},"body":{"dependencies.html":{}}}],["nestmiddleware",{"_index":35,"title":{},"body":{"injectables/ActivateMiddleware.html":{},"injectables/AdminUserMiddleware.html":{},"injectables/AuthMiddleware.html":{},"injectables/CorsMiddleware.html":{},"injectables/InitializeEmailMiddleware.html":{},"injectables/InitializeUserMiddleware.html":{},"injectables/LocationMiddleware.html":{},"injectables/ProductMiddleware.html":{},"interfaces/RequestHeaders.html":{},"injectables/UserAdminMiddleware.html":{},"injectables/UserMiddleware.html":{},"injectables/UserMiddleware-1.html":{}}}],["nestmodule",{"_index":497,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CategoriesModule.html":{},"modules/ProductModule.html":{},"modules/ReviewsModule.html":{},"modules/RolesModule.html":{},"modules/UsersModule.html":{}}}],["new",{"_index":66,"title":{},"body":{"injectables/ActivateMiddleware.html":{},"guards/AddContentGuard.html":{},"guards/AdminGuard.html":{},"injectables/AdminJwtRefreshService.html":{},"injectables/AdminService.html":{},"injectables/AdminUserMiddleware.html":{},"classes/AllExceptionsFilter.html":{},"classes/ApiErrorExceptionFilter.html":{},"classes/ApiException.html":{},"classes/ApiExceptionFilter.html":{},"injectables/AppClusterService.html":{},"controllers/AppController.html":{},"guards/AuthFerfershGuard.html":{},"injectables/CategoriesService.html":{},"injectables/CorsMiddleware.html":{},"guards/EditContentGuard.html":{},"guards/EditWebsiteGuard.html":{},"injectables/FilesService.html":{},"classes/GarbageCollectingProcessor.html":{},"injectables/GlobalInterceptor.html":{},"classes/HttpExceptionFilter.html":{},"injectables/InitializeEmailMiddleware.html":{},"injectables/InitializeUserMiddleware.html":{},"guards/JwtAuthGuard.html":{},"injectables/MailService.html":{},"interfaces/Msg.html":{},"guards/OwnerAdminGuard.html":{},"injectables/OwnerJwtRefreshService.html":{},"injectables/OwnerService.html":{},"injectables/ParseJsonPipe.html":{},"guards/RefreshAuthGuard.html":{},"interfaces/RequestHeaders.html":{},"classes/RequestValidator.html":{},"injectables/ReviewsService.html":{},"guards/RolesGuard.html":{},"injectables/TasksService.html":{},"injectables/TelegramService.html":{},"injectables/UserAdminMiddleware.html":{},"guards/UserGuard.html":{},"injectables/UserJwtRefreshTokenService.html":{},"injectables/UsersService.html":{},"injectables/ValidateDto.html":{},"interfaces/fileCreated.html":{}}}],["newlistener",{"_index":1668,"title":{},"body":{"modules/CoreModule.html":{}}}],["next",{"_index":25,"title":{},"body":{"injectables/ActivateMiddleware.html":{},"controllers/AdminController.html":{},"classes/AdminRefreshToken.html":{},"injectables/AdminUserMiddleware.html":{},"controllers/AppController.html":{},"controllers/AuthController.html":{},"injectables/AuthMiddleware.html":{},"injectables/CorsMiddleware.html":{},"classes/CreateAdminRefreshTokenDto.html":{},"classes/CreateOwnerDto.html":{},"classes/CreateOwnerRefreshTokenDto.html":{},"injectables/FilesService.html":{},"injectables/GlobalInterceptor.html":{},"injectables/InitializeEmailMiddleware.html":{},"injectables/InitializeUserMiddleware.html":{},"injectables/LocationMiddleware.html":{},"classes/Owner.html":{},"classes/OwnerRefreshToken.html":{},"injectables/ProductMiddleware.html":{},"interfaces/RequestHeaders.html":{},"classes/RequestValidator.html":{},"controllers/RolesController.html":{},"injectables/TasksService.html":{},"injectables/UserAdminMiddleware.html":{},"injectables/UserMiddleware.html":{},"injectables/UserMiddleware-1.html":{},"controllers/UsersController.html":{},"interfaces/fileCreated.html":{}}}],["next(err",{"_index":840,"title":{},"body":{"injectables/AdminUserMiddleware.html":{},"controllers/AppController.html":{},"injectables/AuthMiddleware.html":{},"injectables/InitializeEmailMiddleware.html":{},"injectables/InitializeUserMiddleware.html":{},"injectables/ProductMiddleware.html":{},"injectables/UserAdminMiddleware.html":{},"injectables/UserMiddleware.html":{},"injectables/UserMiddleware-1.html":{}}}],["next.handle().pipe",{"_index":1978,"title":{},"body":{"injectables/GlobalInterceptor.html":{}}}],["nextfunction",{"_index":26,"title":{},"body":{"injectables/ActivateMiddleware.html":{},"injectables/AdminUserMiddleware.html":{},"controllers/AppController.html":{},"controllers/AuthController.html":{},"injectables/AuthMiddleware.html":{},"injectables/CorsMiddleware.html":{},"injectables/InitializeEmailMiddleware.html":{},"injectables/InitializeUserMiddleware.html":{},"injectables/LocationMiddleware.html":{},"controllers/ProductController.html":{},"injectables/ProductMiddleware.html":{},"interfaces/RequestHeaders.html":{},"classes/RequestValidator.html":{},"injectables/UserAdminMiddleware.html":{},"injectables/UserMiddleware.html":{},"injectables/UserMiddleware-1.html":{},"controllers/UsersController.html":{}}}],["no_link_provided",{"_index":1323,"title":{},"body":{"guards/AuthFerfershGuard.html":{}}}],["no_right",{"_index":101,"title":{},"body":{"guards/AddContentGuard.html":{},"guards/EditContentGuard.html":{},"guards/EditWebsiteGuard.html":{}}}],["no_token_provided",{"_index":2914,"title":{},"body":{"guards/RefreshAuthGuard.html":{}}}],["node",{"_index":1042,"title":{},"body":{"controllers/AppController.html":{},"injectables/LocationMiddleware.html":{},"dependencies.html":{}}}],["node.js",{"_index":3593,"title":{},"body":{"index.html":{}}}],["nodejs",{"_index":3550,"title":{},"body":{"dependencies.html":{}}}],["nodejs.arraybufferview",{"_index":1921,"title":{},"body":{"injectables/FilesService.html":{},"interfaces/fileCreated.html":{}}}],["nodejs.timeout",{"_index":1016,"title":{},"body":{"injectables/AppClusterService.html":{},"interfaces/Msg.html":{},"injectables/TasksService.html":{}}}],["nodejs.timer",{"_index":3118,"title":{},"body":{"injectables/TasksService.html":{}}}],["nodemailer",{"_index":3555,"title":{},"body":{"dependencies.html":{}}}],["none",{"_index":2112,"title":{},"body":{"injectables/MailService.html":{}}}],["nosniff",{"_index":72,"title":{},"body":{"injectables/ActivateMiddleware.html":{},"injectables/InitializeEmailMiddleware.html":{},"injectables/ProductMiddleware.html":{},"injectables/UserMiddleware.html":{},"injectables/UserMiddleware-1.html":{}}}],["not_activated",{"_index":725,"title":{},"body":{"injectables/AdminService.html":{},"classes/ApiException.html":{},"injectables/OwnerService.html":{}}}],["not_found",{"_index":1571,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["notfounderror",{"_index":881,"title":{"classes/NotFoundError.html":{}},"body":{"classes/ApiError.html":{},"classes/BadRequestError.html":{},"classes/NotFoundError.html":{}}}],["notfoundexception",{"_index":716,"title":{},"body":{"injectables/AdminService.html":{},"injectables/AdminUserMiddleware.html":{},"injectables/InitializeEmailMiddleware.html":{},"injectables/OwnerJwtRefreshService.html":{},"injectables/OwnerService.html":{},"injectables/UserAdminMiddleware.html":{},"injectables/UserJwtRefreshTokenService.html":{},"injectables/UsersService.html":{}}}],["notifyrequest",{"_index":1014,"title":{},"body":{"injectables/AppClusterService.html":{},"interfaces/Msg.html":{}}}],["npm",{"_index":3603,"title":{},"body":{"index.html":{}}}],["nt",{"_index":591,"title":{},"body":{"classes/AdminRefreshToken.html":{},"classes/CreateAdminRefreshTokenDto.html":{},"classes/CreateOwnerDto.html":{},"classes/CreateOwnerRefreshTokenDto.html":{},"classes/Owner.html":{},"classes/OwnerRefreshToken.html":{},"injectables/UserJwtRefreshTokenService.html":{}}}],["null",{"_index":110,"title":{},"body":{"guards/AddContentGuard.html":{},"injectables/AdminJwtRefreshService.html":{},"controllers/AuthController.html":{},"guards/AuthFerfershGuard.html":{},"interfaces/AuthUser.html":{},"interfaces/CodeDto.html":{},"guards/EditContentGuard.html":{},"guards/EditWebsiteGuard.html":{},"injectables/InitializeEmailMiddleware.html":{},"injectables/InitializeUserMiddleware.html":{},"guards/OwnerAdminGuard.html":{},"interfaces/Payload.html":{},"controllers/ProductController.html":{},"interfaces/ReturnedAdmin.html":{},"interfaces/ReturnedOwner.html":{},"interfaces/ReturnedUser.html":{},"interfaces/Tokens.html":{},"controllers/UsersController.html":{}}}],["number",{"_index":127,"title":{},"body":{"classes/AddRoleDto.html":{},"controllers/AdminController.html":{},"interfaces/AdminInterface.html":{},"injectables/AdminJwtRefreshService.html":{},"classes/AdminRefreshToken.html":{},"interfaces/AdminRefreshTokenCreationAttrbs.html":{},"injectables/AdminService.html":{},"interfaces/AdmincreationAttrbs.html":{},"classes/ApiError.html":{},"classes/ApiException.html":{},"injectables/AppClusterService.html":{},"controllers/AppController.html":{},"controllers/AuthController.html":{},"interfaces/AuthUser.html":{},"classes/BadRequestError.html":{},"classes/BanUserDto.html":{},"classes/BookmarksProducts.html":{},"classes/Cart.html":{},"classes/CartProduct.html":{},"classes/CartProduct-1.html":{},"controllers/CategoriesController.html":{},"injectables/CategoriesService.html":{},"classes/Category.html":{},"interfaces/CategoryCreationAtrb.html":{},"interfaces/CodeDto.html":{},"classes/CreateAccessTokenDto.html":{},"classes/CreateAdminDto.html":{},"classes/CreateAdminRefreshTokenDto.html":{},"classes/CreateOwnerDto.html":{},"classes/CreateOwnerRefreshTokenDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserRefreshTokenDto.html":{},"interfaces/InitializeUser.html":{},"classes/JwtRefreshTokenDeletedEvent.html":{},"injectables/MailService.html":{},"interfaces/Msg.html":{},"classes/Nested.html":{},"classes/Nested-1.html":{},"classes/NotFoundError.html":{},"classes/Order.html":{},"classes/OrderProduct.html":{},"classes/Owner.html":{},"interfaces/OwnerCreationAttrbs.html":{},"injectables/OwnerJwtRefreshService.html":{},"classes/OwnerRefreshToken.html":{},"interfaces/OwnerRefreshTokenCreationAttrbs.html":{},"injectables/OwnerService.html":{},"interfaces/Payload.html":{},"classes/Product.html":{},"classes/Product-1.html":{},"classes/ProductCategories.html":{},"controllers/ProductController.html":{},"interfaces/ProductCreationAttrs.html":{},"classes/ProductReviews.html":{},"interfaces/ReturnedAdmin.html":{},"interfaces/ReturnedCategory.html":{},"interfaces/ReturnedOwner.html":{},"interfaces/ReturnedProduct.html":{},"interfaces/ReturnedProducts.html":{},"interfaces/ReturnedReview.html":{},"interfaces/ReturnedUser.html":{},"classes/Review.html":{},"interfaces/ReviewCreationAtrb.html":{},"controllers/ReviewsController.html":{},"injectables/ReviewsService.html":{},"classes/Role.html":{},"interfaces/RolecreationAttrbs.html":{},"classes/SignupDto.html":{},"injectables/TasksService.html":{},"interfaces/Tokens.html":{},"classes/UpdateProductDto.html":{},"interfaces/UserInterface.html":{},"injectables/UserJwtRefreshTokenService.html":{},"interfaces/UserRefreshCreationAttrbs.html":{},"classes/UserRefreshToken.html":{},"classes/UserRoles.html":{},"interfaces/UsercreationAttrbs.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"interfaces/ValidateUser.html":{},"classes/WatchedProducts.html":{}}}],["number'})@isstring()@isemail()@matches(/^[\\+]?[(]?[0",{"_index":1878,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["number'})@isstring()@matches(/^[\\+]?[(]?[0",{"_index":1767,"title":{},"body":{"classes/CreateAdminDto.html":{},"classes/CreateOwnerDto.html":{},"classes/SignupDto.html":{}}}],["number(date.now",{"_index":77,"title":{},"body":{"injectables/ActivateMiddleware.html":{},"injectables/AdminService.html":{},"injectables/OwnerService.html":{},"injectables/UsersService.html":{}}}],["number(process.env.mailer_port?.trim",{"_index":2070,"title":{},"body":{"modules/MailModule.html":{}}}],["number(process.env.pgport",{"_index":1203,"title":{},"body":{"modules/AppModule.html":{}}}],["number(process.env.redis_port",{"_index":1162,"title":{},"body":{"modules/AppModule.html":{}}}],["number(process.env.salt_rounds",{"_index":814,"title":{},"body":{"injectables/AdminService.html":{},"injectables/OwnerService.html":{},"injectables/UsersService.html":{}}}],["number(req.query?.code",{"_index":64,"title":{},"body":{"injectables/ActivateMiddleware.html":{}}}],["number(resetdto.code",{"_index":807,"title":{},"body":{"injectables/AdminService.html":{},"injectables/OwnerService.html":{},"injectables/UsersService.html":{}}}],["number(value.value",{"_index":1855,"title":{},"body":{"classes/CreateProductDto.html":{},"classes/Nested.html":{},"classes/Nested-1.html":{},"classes/UpdateProductDto.html":{}}}],["number,identifier",{"_index":3121,"title":{},"body":{"injectables/TasksService.html":{}}}],["numcpus",{"_index":981,"title":{},"body":{"injectables/AppClusterService.html":{},"interfaces/Msg.html":{}}}],["numreqs",{"_index":1005,"title":{},"body":{"injectables/AppClusterService.html":{},"interfaces/Msg.html":{}}}],["obj",{"_index":3486,"title":{},"body":{"injectables/ValidateDto.html":{}}}],["object",{"_index":1679,"title":{},"body":{"injectables/CorsMiddleware.html":{},"classes/MatchConstraint.html":{},"interfaces/RequestHeaders.html":{}}}],["object.constructor",{"_index":2269,"title":{},"body":{"classes/MatchConstraint.html":{}}}],["object.prototype.hasownproperty.call(object",{"_index":1712,"title":{},"body":{"injectables/CorsMiddleware.html":{},"interfaces/RequestHeaders.html":{}}}],["object.values(err.constraints).join",{"_index":3492,"title":{},"body":{"injectables/ValidateDto.html":{}}}],["object.values(erroritem.constraints",{"_index":2930,"title":{},"body":{"classes/RequestValidator.html":{}}}],["observable",{"_index":95,"title":{},"body":{"guards/AddContentGuard.html":{},"guards/AdminGuard.html":{},"controllers/AppController.html":{},"guards/AuthFerfershGuard.html":{},"guards/EditContentGuard.html":{},"guards/EditWebsiteGuard.html":{},"injectables/GlobalInterceptor.html":{},"guards/JwtAuthGuard.html":{},"guards/OwnerAdminGuard.html":{},"guards/RefreshAuthGuard.html":{},"guards/RolesGuard.html":{},"guards/UserGuard.html":{}}}],["occured",{"_index":1931,"title":{},"body":{"injectables/FilesService.html":{},"interfaces/fileCreated.html":{}}}],["offset",{"_index":736,"title":{},"body":{"injectables/AdminService.html":{},"injectables/UsersService.html":{}}}],["ogsb",{"_index":2146,"title":{},"body":{"injectables/MailService.html":{}}}],["ol",{"_index":2161,"title":{},"body":{"injectables/MailService.html":{}}}],["onevent",{"_index":1088,"title":{},"body":{"injectables/AppListener.html":{}}}],["onevent('refreshtoken.deleted",{"_index":1084,"title":{},"body":{"injectables/AppListener.html":{}}}],["open",{"_index":3620,"title":{},"body":{"index.html":{}}}],["optional",{"_index":19,"title":{},"body":{"injectables/ActivateMiddleware.html":{},"guards/AddContentGuard.html":{},"controllers/AdminController.html":{},"guards/AdminGuard.html":{},"injectables/AdminJwtRefreshService.html":{},"modules/AdminModule.html":{},"classes/AdminRefreshToken.html":{},"injectables/AdminService.html":{},"injectables/AdminUserMiddleware.html":{},"classes/AllExceptionsFilter.html":{},"classes/ApiError.html":{},"classes/ApiErrorExceptionFilter.html":{},"classes/ApiException.html":{},"classes/ApiExceptionFilter.html":{},"injectables/AppClusterService.html":{},"controllers/AppController.html":{},"injectables/AppListener.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"guards/AuthFerfershGuard.html":{},"injectables/AuthMiddleware.html":{},"modules/AuthModule.html":{},"classes/BadRequestError.html":{},"classes/Cart.html":{},"controllers/CategoriesController.html":{},"modules/CategoriesModule.html":{},"injectables/CategoriesService.html":{},"injectables/CorsMiddleware.html":{},"classes/CreateAccessTokenDto.html":{},"guards/EditContentGuard.html":{},"guards/EditWebsiteGuard.html":{},"injectables/FilesService.html":{},"classes/GarbageCollectingProcessor.html":{},"injectables/GlobalInterceptor.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/ITelegramModuleAsyncOptions.html":{},"injectables/InitializeEmailMiddleware.html":{},"injectables/InitializeUserMiddleware.html":{},"guards/JwtAuthGuard.html":{},"classes/JwtRefreshTokenDeletedEvent.html":{},"injectables/LocationMiddleware.html":{},"injectables/MailService.html":{},"classes/MatchConstraint.html":{},"classes/NotFoundError.html":{},"classes/Order.html":{},"classes/Owner.html":{},"guards/OwnerAdminGuard.html":{},"injectables/OwnerJwtRefreshService.html":{},"classes/OwnerRefreshToken.html":{},"injectables/OwnerService.html":{},"classes/ParseFormDataJsonPipe.html":{},"injectables/ParseJsonPipe.html":{},"interfaces/Payload.html":{},"classes/Product.html":{},"classes/Product-1.html":{},"controllers/ProductController.html":{},"interfaces/ProductCreationAttrs.html":{},"injectables/ProductMiddleware.html":{},"modules/ProductModule.html":{},"guards/RefreshAuthGuard.html":{},"interfaces/RequestHeaders.html":{},"controllers/ReviewsController.html":{},"modules/ReviewsModule.html":{},"injectables/ReviewsService.html":{},"controllers/RolesController.html":{},"guards/RolesGuard.html":{},"modules/RolesModule.html":{},"injectables/RolesService.html":{},"injectables/TasksService.html":{},"modules/TelegramModule.html":{},"injectables/TelegramService.html":{},"injectables/ThrottlerBehindProxyGuard.html":{},"injectables/UserAdminMiddleware.html":{},"guards/UserGuard.html":{},"injectables/UserJwtRefreshTokenService.html":{},"injectables/UserMiddleware.html":{},"injectables/UserMiddleware-1.html":{},"classes/UserRefreshToken.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"injectables/ValidateDto.html":{},"classes/ValidationException.html":{},"miscellaneous/functions.html":{}}}],["options",{"_index":71,"title":{},"body":{"injectables/ActivateMiddleware.html":{},"injectables/CorsMiddleware.html":{},"injectables/InitializeEmailMiddleware.html":{},"classes/MatchConstraint.html":{},"classes/ParseFormDataJsonPipe.html":{},"injectables/ProductMiddleware.html":{},"interfaces/RequestHeaders.html":{},"modules/TelegramModule.html":{},"injectables/TelegramService.html":{},"injectables/UserMiddleware.html":{},"injectables/UserMiddleware-1.html":{}}}],["options.imports",{"_index":3198,"title":{},"body":{"modules/TelegramModule.html":{}}}],["options.inject",{"_index":3201,"title":{},"body":{"modules/TelegramModule.html":{}}}],["options.usefactory(...args",{"_index":3200,"title":{},"body":{"modules/TelegramModule.html":{}}}],["order",{"_index":541,"title":{"classes/Order.html":{}},"body":{"modules/AdminModule.html":{},"injectables/AdminService.html":{},"modules/AppModule.html":{},"modules/CartModule.html":{},"modules/CoreModule.html":{},"modules/MailModule.html":{},"classes/Order.html":{},"classes/OrderProduct.html":{},"modules/OrdersModule.html":{},"modules/OwnerModule.html":{},"classes/Product.html":{},"classes/Product-1.html":{},"controllers/ProductController.html":{},"modules/ProductModule.html":{},"modules/ReviewsModule.html":{},"modules/RolesModule.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["order.model",{"_index":2326,"title":{},"body":{"classes/OrderProduct.html":{}}}],["order.product.model",{"_index":2307,"title":{},"body":{"classes/Order.html":{}}}],["orderid",{"_index":2315,"title":{},"body":{"classes/OrderProduct.html":{}}}],["orderproduct",{"_index":543,"title":{"classes/OrderProduct.html":{}},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/CartModule.html":{},"modules/CoreModule.html":{},"modules/MailModule.html":{},"classes/Order.html":{},"classes/OrderProduct.html":{},"modules/OrdersModule.html":{},"modules/OwnerModule.html":{},"classes/Product.html":{},"classes/Product-1.html":{},"modules/ProductModule.html":{},"modules/ReviewsModule.html":{},"modules/RolesModule.html":{},"modules/UsersModule.html":{}}}],["orderproducts",{"_index":2290,"title":{},"body":{"classes/Order.html":{}}}],["orders",{"_index":2308,"title":{},"body":{"classes/Order.html":{},"controllers/OrdersController.html":{},"classes/Product.html":{},"classes/Product-1.html":{}}}],["orders.controller",{"_index":2337,"title":{},"body":{"modules/OrdersModule.html":{}}}],["orders.service",{"_index":2336,"title":{},"body":{"modules/OrdersModule.html":{}}}],["orders/models/order.model",{"_index":542,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/CartModule.html":{},"modules/CoreModule.html":{},"modules/MailModule.html":{},"modules/OwnerModule.html":{},"classes/Product.html":{},"classes/Product-1.html":{},"modules/ProductModule.html":{},"modules/ReviewsModule.html":{},"modules/RolesModule.html":{},"modules/UsersModule.html":{}}}],["orders/models/order.product.model",{"_index":544,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/CartModule.html":{},"modules/CoreModule.html":{},"modules/MailModule.html":{},"modules/OwnerModule.html":{},"classes/Product.html":{},"classes/Product-1.html":{},"modules/ProductModule.html":{},"modules/ReviewsModule.html":{},"modules/RolesModule.html":{},"modules/UsersModule.html":{}}}],["orders/orders.module",{"_index":1123,"title":{},"body":{"modules/AppModule.html":{},"modules/CartModule.html":{},"modules/ProductModule.html":{},"modules/ReviewsModule.html":{}}}],["orderscontroller",{"_index":2329,"title":{"controllers/OrdersController.html":{}},"body":{"controllers/OrdersController.html":{},"modules/OrdersModule.html":{}}}],["ordersmodule",{"_index":1100,"title":{"modules/OrdersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CartModule.html":{},"modules/OrdersModule.html":{},"modules/ProductModule.html":{},"modules/ReviewsModule.html":{},"modules.html":{},"overview.html":{}}}],["ordersservice",{"_index":2334,"title":{"injectables/OrdersService.html":{}},"body":{"modules/OrdersModule.html":{},"injectables/OrdersService.html":{},"overview.html":{}}}],["orderstatus",{"_index":2291,"title":{},"body":{"classes/Order.html":{}}}],["origin",{"_index":1339,"title":{},"body":{"injectables/AuthMiddleware.html":{},"injectables/CorsMiddleware.html":{},"injectables/ProductMiddleware.html":{},"interfaces/RequestHeaders.html":{},"injectables/UserMiddleware.html":{},"injectables/UserMiddleware-1.html":{}}}],["originproperties",{"_index":2644,"title":{},"body":{"classes/ParseFormDataJsonPipe.html":{}}}],["os",{"_index":979,"title":{},"body":{"injectables/AppClusterService.html":{},"interfaces/Msg.html":{}}}],["out",{"_index":486,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"modules/CartModule.html":{},"modules/CategoriesModule.html":{},"modules/CoreModule.html":{},"modules/MailModule.html":{},"modules/OrdersModule.html":{},"modules/OwnerModule.html":{},"modules/ProductModule.html":{},"modules/ReviewsModule.html":{},"modules/RolesModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["outlook",{"_index":2117,"title":{},"body":{"injectables/MailService.html":{}}}],["overflow:hidden",{"_index":2142,"title":{},"body":{"injectables/MailService.html":{}}}],["overflow:visible!important",{"_index":2223,"title":{},"body":{"injectables/MailService.html":{}}}],["override",{"_index":1699,"title":{},"body":{"injectables/CorsMiddleware.html":{},"interfaces/RequestHeaders.html":{}}}],["overview",{"_index":3647,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["owner",{"_index":46,"title":{"classes/Owner.html":{}},"body":{"injectables/ActivateMiddleware.html":{},"guards/AddContentGuard.html":{},"injectables/AdminJwtRefreshService.html":{},"modules/AdminModule.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"guards/AuthFerfershGuard.html":{},"modules/AuthModule.html":{},"interfaces/AuthUser.html":{},"modules/CartModule.html":{},"modules/CategoriesModule.html":{},"interfaces/CodeDto.html":{},"modules/CoreModule.html":{},"classes/CreateOwnerRefreshTokenDto.html":{},"guards/EditContentGuard.html":{},"guards/EditWebsiteGuard.html":{},"injectables/InitializeEmailMiddleware.html":{},"injectables/InitializeUserMiddleware.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"modules/OrdersModule.html":{},"classes/Owner.html":{},"guards/OwnerAdminGuard.html":{},"injectables/OwnerJwtRefreshService.html":{},"modules/OwnerModule.html":{},"classes/OwnerRefreshToken.html":{},"injectables/OwnerService.html":{},"interfaces/Payload.html":{},"classes/Product.html":{},"classes/Product-1.html":{},"controllers/ProductController.html":{},"modules/ProductModule.html":{},"interfaces/ReturnedAdmin.html":{},"interfaces/ReturnedOwner.html":{},"interfaces/ReturnedUser.html":{},"modules/ReviewsModule.html":{},"classes/Role.html":{},"modules/RolesModule.html":{},"interfaces/Tokens.html":{},"classes/UserRoles.html":{},"modules/UsersModule.html":{}}}],["owner.$add('ownerrefreshtokens",{"_index":2491,"title":{},"body":{"injectables/OwnerJwtRefreshService.html":{}}}],["owner.$remove('ownerrefreshtokens",{"_index":2509,"title":{},"body":{"injectables/OwnerJwtRefreshService.html":{}}}],["owner.$set('ownerrefreshtokens",{"_index":2489,"title":{},"body":{"injectables/OwnerJwtRefreshService.html":{}}}],["owner.$set('roles",{"_index":2604,"title":{},"body":{"injectables/OwnerService.html":{}}}],["owner.activationlink",{"_index":2618,"title":{},"body":{"injectables/OwnerService.html":{}}}],["owner.create(ownerdto",{"_index":2599,"title":{},"body":{"injectables/OwnerService.html":{}}}],["owner.email",{"_index":2001,"title":{},"body":{"injectables/InitializeEmailMiddleware.html":{},"injectables/MailService.html":{},"injectables/OwnerJwtRefreshService.html":{},"injectables/OwnerService.html":{}}}],["owner.findall",{"_index":2590,"title":{},"body":{"injectables/OwnerService.html":{}}}],["owner.getconfirmcode",{"_index":2623,"title":{},"body":{"injectables/OwnerService.html":{}}}],["owner.getisactivated",{"_index":76,"title":{},"body":{"injectables/ActivateMiddleware.html":{},"injectables/OwnerService.html":{}}}],["owner.getowneragent",{"_index":2494,"title":{},"body":{"injectables/OwnerJwtRefreshService.html":{}}}],["owner.getowneragent().trim",{"_index":2499,"title":{},"body":{"injectables/OwnerJwtRefreshService.html":{}}}],["owner.getownerrefreshtokens",{"_index":2487,"title":{},"body":{"injectables/OwnerJwtRefreshService.html":{}}}],["owner.getownerrefreshtokens().length",{"_index":2488,"title":{},"body":{"injectables/OwnerJwtRefreshService.html":{}}}],["owner.getpassword",{"_index":2616,"title":{},"body":{"injectables/OwnerService.html":{}}}],["owner.getresettokenexpiration",{"_index":2622,"title":{},"body":{"injectables/OwnerService.html":{}}}],["owner.id",{"_index":2486,"title":{},"body":{"injectables/OwnerJwtRefreshService.html":{}}}],["owner.model",{"_index":2550,"title":{},"body":{"classes/OwnerRefreshToken.html":{}}}],["owner.ownerrefreshtokens",{"_index":2490,"title":{},"body":{"injectables/OwnerJwtRefreshService.html":{}}}],["owner.refresh.token.model",{"_index":2431,"title":{},"body":{"classes/Owner.html":{}}}],["owner.roles",{"_index":2606,"title":{},"body":{"injectables/OwnerService.html":{}}}],["owner.save",{"_index":2497,"title":{},"body":{"injectables/OwnerJwtRefreshService.html":{},"injectables/OwnerService.html":{}}}],["owner.service",{"_index":2480,"title":{},"body":{"injectables/OwnerJwtRefreshService.html":{}}}],["owner.setactivationcode(code",{"_index":2503,"title":{},"body":{"injectables/OwnerJwtRefreshService.html":{}}}],["owner.setconfirmcode(code",{"_index":2620,"title":{},"body":{"injectables/OwnerService.html":{}}}],["owner.setisactivated(false",{"_index":2500,"title":{},"body":{"injectables/OwnerJwtRefreshService.html":{},"injectables/OwnerService.html":{}}}],["owner.setnewpasssword(hashedpassword",{"_index":2626,"title":{},"body":{"injectables/OwnerService.html":{}}}],["owner.setowneragent(owneragent",{"_index":2495,"title":{},"body":{"injectables/OwnerJwtRefreshService.html":{}}}],["owner.setresettoken(link.replace",{"_index":2502,"title":{},"body":{"injectables/OwnerJwtRefreshService.html":{}}}],["owner.setresettokenexpiration(number(date.now",{"_index":2504,"title":{},"body":{"injectables/OwnerJwtRefreshService.html":{},"injectables/OwnerService.html":{}}}],["owner/constants/jwt",{"_index":942,"title":{},"body":{"classes/ApiException.html":{}}}],["owner/constants/owner.constants",{"_index":940,"title":{},"body":{"classes/ApiException.html":{},"injectables/MailService.html":{}}}],["owner/models/owner.model",{"_index":47,"title":{},"body":{"injectables/ActivateMiddleware.html":{},"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CartModule.html":{},"modules/CategoriesModule.html":{},"modules/CoreModule.html":{},"modules/MailModule.html":{},"modules/OrdersModule.html":{},"classes/Product.html":{},"classes/Product-1.html":{},"modules/ProductModule.html":{},"modules/ReviewsModule.html":{},"classes/Role.html":{},"modules/RolesModule.html":{},"classes/UserRoles.html":{},"modules/UsersModule.html":{}}}],["owner/models/owner.refresh.token.model",{"_index":517,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CartModule.html":{},"modules/CategoriesModule.html":{},"modules/CoreModule.html":{},"modules/MailModule.html":{},"modules/OrdersModule.html":{},"guards/OwnerAdminGuard.html":{},"modules/ProductModule.html":{},"modules/ReviewsModule.html":{},"modules/RolesModule.html":{},"modules/UsersModule.html":{}}}],["owner/owner.module",{"_index":506,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CategoriesModule.html":{},"modules/MailModule.html":{},"modules/ProductModule.html":{},"modules/ReviewsModule.html":{},"modules/RolesModule.html":{},"modules/UsersModule.html":{}}}],["owner/services/jwt",{"_index":1354,"title":{},"body":{"modules/AuthModule.html":{},"injectables/InitializeUserMiddleware.html":{},"guards/OwnerAdminGuard.html":{}}}],["owner/services/owner.service",{"_index":510,"title":{},"body":{"modules/AdminModule.html":{},"guards/AuthFerfershGuard.html":{},"injectables/InitializeEmailMiddleware.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{}}}],["owner@gmail.com",{"_index":1819,"title":{},"body":{"classes/CreateOwnerRefreshTokenDto.html":{},"classes/Owner.html":{},"classes/OwnerRefreshToken.html":{}}}],["owner[0",{"_index":2595,"title":{},"body":{"injectables/OwnerService.html":{}}}],["owner[1",{"_index":2596,"title":{},"body":{"injectables/OwnerService.html":{}}}],["owner[2",{"_index":2597,"title":{},"body":{"injectables/OwnerService.html":{}}}],["owner[3",{"_index":2598,"title":{},"body":{"injectables/OwnerService.html":{}}}],["owner_id_not_provided",{"_index":930,"title":{},"body":{"classes/ApiException.html":{},"injectables/OwnerService.html":{}}}],["owner_not_authorizied",{"_index":2450,"title":{},"body":{"guards/OwnerAdminGuard.html":{}}}],["owner_not_found",{"_index":936,"title":{},"body":{"classes/ApiException.html":{},"injectables/MailService.html":{},"injectables/OwnerJwtRefreshService.html":{},"injectables/OwnerService.html":{}}}],["owner_or_role_not_found",{"_index":937,"title":{},"body":{"classes/ApiException.html":{}}}],["owner_with_email_doesnt_exist",{"_index":922,"title":{},"body":{"classes/ApiException.html":{}}}],["owner_with_email_exist",{"_index":920,"title":{},"body":{"classes/ApiException.html":{},"injectables/OwnerService.html":{}}}],["owner_with_phonenumber_exist",{"_index":921,"title":{},"body":{"classes/ApiException.html":{},"injectables/OwnerService.html":{}}}],["owner`s",{"_index":1804,"title":{},"body":{"classes/CreateOwnerDto.html":{},"classes/CreateOwnerRefreshTokenDto.html":{},"classes/Owner.html":{},"classes/OwnerRefreshToken.html":{}}}],["owner`s_refresh",{"_index":2551,"title":{},"body":{"classes/OwnerRefreshToken.html":{}}}],["owneradminguard",{"_index":164,"title":{"guards/OwnerAdminGuard.html":{}},"body":{"controllers/AdminController.html":{},"controllers/CategoriesController.html":{},"guards/OwnerAdminGuard.html":{},"controllers/ProductController.html":{},"controllers/ReviewsController.html":{},"controllers/RolesController.html":{},"controllers/UsersController.html":{}}}],["owneragent",{"_index":1803,"title":{},"body":{"classes/CreateOwnerDto.html":{},"classes/CreateOwnerRefreshTokenDto.html":{},"classes/Owner.html":{},"interfaces/OwnerCreationAttrbs.html":{},"injectables/OwnerJwtRefreshService.html":{},"classes/OwnerRefreshToken.html":{},"interfaces/OwnerRefreshTokenCreationAttrbs.html":{}}}],["ownercreationattrbs",{"_index":2429,"title":{"interfaces/OwnerCreationAttrbs.html":{}},"body":{"classes/Owner.html":{},"interfaces/OwnerCreationAttrbs.html":{},"interfaces/OwnerRefreshTokenCreationAttrbs.html":{}}}],["ownerdata",{"_index":2482,"title":{},"body":{"injectables/OwnerJwtRefreshService.html":{}}}],["ownerdto",{"_index":2587,"title":{},"body":{"injectables/OwnerService.html":{}}}],["ownerdto.password",{"_index":2615,"title":{},"body":{"injectables/OwnerService.html":{}}}],["ownerid",{"_index":1618,"title":{},"body":{"interfaces/CategoryCreationAtrb.html":{},"classes/CreateOwnerRefreshTokenDto.html":{},"interfaces/OwnerCreationAttrbs.html":{},"injectables/OwnerJwtRefreshService.html":{},"classes/OwnerRefreshToken.html":{},"interfaces/OwnerRefreshTokenCreationAttrbs.html":{},"injectables/OwnerService.html":{},"classes/Product.html":{},"classes/Product-1.html":{},"interfaces/ProductCreationAttrs.html":{},"interfaces/ReturnedCategory.html":{},"interfaces/ReturnedProduct.html":{},"interfaces/ReturnedProducts.html":{},"interfaces/ReturnedReview.html":{},"interfaces/ReviewCreationAtrb.html":{},"classes/UserRoles.html":{}}}],["ownerid'})@foreignkey(undefined)@column({type",{"_index":2534,"title":{},"body":{"classes/OwnerRefreshToken.html":{},"classes/UserRoles.html":{}}}],["ownerjwtrefreshservice",{"_index":1345,"title":{"injectables/OwnerJwtRefreshService.html":{}},"body":{"modules/AuthModule.html":{},"injectables/InitializeUserMiddleware.html":{},"guards/OwnerAdminGuard.html":{},"injectables/OwnerJwtRefreshService.html":{},"modules/OwnerModule.html":{},"overview.html":{}}}],["ownerjwtrefreshtokenservice",{"_index":2014,"title":{},"body":{"injectables/InitializeUserMiddleware.html":{},"guards/OwnerAdminGuard.html":{}}}],["ownermodule",{"_index":505,"title":{"modules/OwnerModule.html":{}},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CategoriesModule.html":{},"modules/MailModule.html":{},"modules/OwnerModule.html":{},"modules/ProductModule.html":{},"modules/ReviewsModule.html":{},"modules/RolesModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["ownername_validation",{"_index":1807,"title":{},"body":{"classes/CreateOwnerDto.html":{}}}],["ownerrefreshtoken",{"_index":516,"title":{"classes/OwnerRefreshToken.html":{}},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CartModule.html":{},"modules/CategoriesModule.html":{},"modules/CoreModule.html":{},"injectables/InitializeUserMiddleware.html":{},"modules/MailModule.html":{},"modules/OrdersModule.html":{},"classes/Owner.html":{},"guards/OwnerAdminGuard.html":{},"interfaces/OwnerCreationAttrbs.html":{},"injectables/OwnerJwtRefreshService.html":{},"modules/OwnerModule.html":{},"classes/OwnerRefreshToken.html":{},"interfaces/OwnerRefreshTokenCreationAttrbs.html":{},"modules/ProductModule.html":{},"modules/ReviewsModule.html":{},"modules/RolesModule.html":{},"injectables/TasksService.html":{},"modules/UsersModule.html":{}}}],["ownerrefreshtoken.destroy",{"_index":2513,"title":{},"body":{"injectables/OwnerJwtRefreshService.html":{}}}],["ownerrefreshtoken.findone",{"_index":2512,"title":{},"body":{"injectables/OwnerJwtRefreshService.html":{}}}],["ownerrefreshtokencreationattrbs",{"_index":2454,"title":{"interfaces/OwnerRefreshTokenCreationAttrbs.html":{}},"body":{"interfaces/OwnerCreationAttrbs.html":{},"classes/OwnerRefreshToken.html":{},"interfaces/OwnerRefreshTokenCreationAttrbs.html":{}}}],["ownerrefreshtokenid",{"_index":2472,"title":{},"body":{"injectables/OwnerJwtRefreshService.html":{}}}],["ownerrefreshtokenrepository",{"_index":2456,"title":{},"body":{"injectables/OwnerJwtRefreshService.html":{}}}],["ownerrefreshtokens",{"_index":2343,"title":{},"body":{"classes/Owner.html":{}}}],["ownerrepository",{"_index":13,"title":{},"body":{"injectables/ActivateMiddleware.html":{},"injectables/OwnerService.html":{}}}],["ownerrole",{"_index":2601,"title":{},"body":{"injectables/OwnerService.html":{}}}],["ownerrole.id",{"_index":2605,"title":{},"body":{"injectables/OwnerService.html":{}}}],["owners",{"_index":3013,"title":{},"body":{"classes/Role.html":{}}}],["ownerservice",{"_index":482,"title":{"injectables/OwnerService.html":{}},"body":{"modules/AdminModule.html":{},"guards/AuthFerfershGuard.html":{},"injectables/InitializeEmailMiddleware.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"injectables/OwnerJwtRefreshService.html":{},"modules/OwnerModule.html":{},"injectables/OwnerService.html":{},"overview.html":{}}}],["owns",{"_index":2603,"title":{},"body":{"injectables/OwnerService.html":{}}}],["p",{"_index":2158,"title":{},"body":{"injectables/MailService.html":{}}}],["p,.externalclass",{"_index":2120,"title":{},"body":{"injectables/MailService.html":{}}}],["p0",{"_index":2205,"title":{},"body":{"injectables/MailService.html":{}}}],["p0b",{"_index":2214,"title":{},"body":{"injectables/MailService.html":{}}}],["p0l",{"_index":2210,"title":{},"body":{"injectables/MailService.html":{}}}],["p0r",{"_index":2207,"title":{},"body":{"injectables/MailService.html":{}}}],["p0t",{"_index":2212,"title":{},"body":{"injectables/MailService.html":{}}}],["p20b",{"_index":2216,"title":{},"body":{"injectables/MailService.html":{}}}],["package",{"_index":3504,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["padding",{"_index":2208,"title":{},"body":{"injectables/MailService.html":{}}}],["padding:0;}.externalclass",{"_index":2118,"title":{},"body":{"injectables/MailService.html":{}}}],["padding:0px!important",{"_index":2206,"title":{},"body":{"injectables/MailService.html":{}}}],["padding:15px",{"_index":2150,"title":{},"body":{"injectables/MailService.html":{}}}],["page",{"_index":169,"title":{},"body":{"controllers/AdminController.html":{},"injectables/AdminService.html":{},"controllers/ProductController.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["pagesize",{"_index":170,"title":{},"body":{"controllers/AdminController.html":{},"controllers/ProductController.html":{},"controllers/UsersController.html":{}}}],["param",{"_index":747,"title":{},"body":{"injectables/AdminService.html":{},"controllers/AuthController.html":{},"controllers/CategoriesController.html":{},"controllers/ProductController.html":{},"controllers/RolesController.html":{},"injectables/UsersService.html":{}}}],["param('categoryid",{"_index":1536,"title":{},"body":{"controllers/CategoriesController.html":{}}}],["param('link",{"_index":1314,"title":{},"body":{"controllers/AuthController.html":{}}}],["param('productid",{"_index":2869,"title":{},"body":{"controllers/ProductController.html":{}}}],["param.tolowercase",{"_index":732,"title":{},"body":{"injectables/AdminService.html":{},"injectables/UsersService.html":{}}}],["parameters",{"_index":16,"title":{},"body":{"injectables/ActivateMiddleware.html":{},"guards/AddContentGuard.html":{},"controllers/AdminController.html":{},"guards/AdminGuard.html":{},"injectables/AdminJwtRefreshService.html":{},"modules/AdminModule.html":{},"classes/AdminRefreshToken.html":{},"injectables/AdminService.html":{},"injectables/AdminUserMiddleware.html":{},"classes/AllExceptionsFilter.html":{},"classes/ApiError.html":{},"classes/ApiErrorExceptionFilter.html":{},"classes/ApiException.html":{},"classes/ApiExceptionFilter.html":{},"injectables/AppClusterService.html":{},"controllers/AppController.html":{},"injectables/AppListener.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"guards/AuthFerfershGuard.html":{},"injectables/AuthMiddleware.html":{},"modules/AuthModule.html":{},"classes/BadRequestError.html":{},"classes/Cart.html":{},"controllers/CategoriesController.html":{},"modules/CategoriesModule.html":{},"injectables/CategoriesService.html":{},"injectables/CorsMiddleware.html":{},"guards/EditContentGuard.html":{},"guards/EditWebsiteGuard.html":{},"injectables/FilesService.html":{},"classes/GarbageCollectingProcessor.html":{},"injectables/GlobalInterceptor.html":{},"classes/HttpExceptionFilter.html":{},"injectables/InitializeEmailMiddleware.html":{},"injectables/InitializeUserMiddleware.html":{},"guards/JwtAuthGuard.html":{},"classes/JwtRefreshTokenDeletedEvent.html":{},"injectables/LocationMiddleware.html":{},"injectables/MailService.html":{},"classes/MatchConstraint.html":{},"classes/NotFoundError.html":{},"classes/Order.html":{},"classes/Owner.html":{},"guards/OwnerAdminGuard.html":{},"injectables/OwnerJwtRefreshService.html":{},"classes/OwnerRefreshToken.html":{},"injectables/OwnerService.html":{},"classes/ParseFormDataJsonPipe.html":{},"injectables/ParseJsonPipe.html":{},"classes/Product.html":{},"classes/Product-1.html":{},"controllers/ProductController.html":{},"injectables/ProductMiddleware.html":{},"modules/ProductModule.html":{},"guards/RefreshAuthGuard.html":{},"controllers/ReviewsController.html":{},"modules/ReviewsModule.html":{},"injectables/ReviewsService.html":{},"controllers/RolesController.html":{},"guards/RolesGuard.html":{},"modules/RolesModule.html":{},"injectables/RolesService.html":{},"injectables/TasksService.html":{},"modules/TelegramModule.html":{},"injectables/TelegramService.html":{},"injectables/ThrottlerBehindProxyGuard.html":{},"injectables/UserAdminMiddleware.html":{},"guards/UserGuard.html":{},"injectables/UserJwtRefreshTokenService.html":{},"injectables/UserMiddleware.html":{},"injectables/UserMiddleware-1.html":{},"classes/UserRefreshToken.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"injectables/ValidateDto.html":{},"classes/ValidationException.html":{},"miscellaneous/functions.html":{}}}],["params",{"_index":730,"title":{},"body":{"injectables/AdminService.html":{},"controllers/ProductController.html":{},"injectables/UsersService.html":{}}}],["params.some",{"_index":746,"title":{},"body":{"injectables/AdminService.html":{},"injectables/UsersService.html":{}}}],["parse",{"_index":2638,"title":{},"body":{"classes/ParseFormDataJsonPipe.html":{},"dependencies.html":{}}}],["parsearraypipe",{"_index":227,"title":{},"body":{"controllers/AdminController.html":{},"controllers/ProductController.html":{},"controllers/UsersController.html":{}}}],["parseformdatajsonpipe",{"_index":1841,"title":{"classes/ParseFormDataJsonPipe.html":{}},"body":{"classes/CreateProductDto.html":{},"classes/Nested.html":{},"classes/ParseFormDataJsonPipe.html":{},"controllers/ProductController.html":{}}}],["parseformdatajsonpipe({except",{"_index":2864,"title":{},"body":{"controllers/ProductController.html":{}}}],["parseintpipe",{"_index":193,"title":{},"body":{"controllers/AdminController.html":{},"controllers/AuthController.html":{},"controllers/CategoriesController.html":{},"controllers/ProductController.html":{},"controllers/ReviewsController.html":{},"controllers/UsersController.html":{}}}],["parsejsonpipe",{"_index":1843,"title":{"injectables/ParseJsonPipe.html":{}},"body":{"classes/CreateProductDto.html":{},"classes/Nested.html":{},"injectables/ParseJsonPipe.html":{}}}],["parsejsonpipe.transform(value.value",{"_index":1850,"title":{},"body":{"classes/CreateProductDto.html":{},"classes/Nested.html":{},"classes/Nested-1.html":{},"classes/UpdateProductDto.html":{}}}],["parser",{"_index":3524,"title":{},"body":{"dependencies.html":{}}}],["pass",{"_index":2075,"title":{},"body":{"modules/MailModule.html":{}}}],["password",{"_index":321,"title":{},"body":{"interfaces/AdminInterface.html":{},"interfaces/AdminRefreshTokenCreationAttrbs.html":{},"injectables/AdminService.html":{},"interfaces/AdmincreationAttrbs.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"classes/ChangeDto.html":{},"classes/CreateAdminDto.html":{},"classes/CreateOwnerDto.html":{},"classes/CreateUserDto.html":{},"interfaces/InitializeUser.html":{},"classes/LoginDto.html":{},"injectables/MailService.html":{},"classes/Owner.html":{},"interfaces/OwnerCreationAttrbs.html":{},"interfaces/OwnerRefreshTokenCreationAttrbs.html":{},"injectables/OwnerService.html":{},"classes/ResetDto.html":{},"interfaces/RolecreationAttrbs.html":{},"classes/SignupDto.html":{},"interfaces/UserInterface.html":{},"interfaces/UserRefreshCreationAttrbs.html":{},"interfaces/UsercreationAttrbs.html":{},"injectables/UsersService.html":{},"interfaces/ValidateUser.html":{}}}],["password'})@apiresponse({status",{"_index":1232,"title":{},"body":{"controllers/AuthController.html":{}}}],["password'})@column({type",{"_index":2382,"title":{},"body":{"classes/Owner.html":{}}}],["password'})@exclude",{"_index":2383,"title":{},"body":{"classes/Owner.html":{}}}],["password'})@isstring",{"_index":1764,"title":{},"body":{"classes/CreateAdminDto.html":{}}}],["password'})@isstring()@matches(/^(?=.*[a",{"_index":1635,"title":{},"body":{"classes/ChangeDto.html":{},"classes/CreateUserDto.html":{},"classes/LoginDto.html":{},"classes/ResetDto.html":{},"classes/SignupDto.html":{}}}],["password'})@isstring()@matches(/^(?=.*\\d)(?=.*[a",{"_index":1810,"title":{},"body":{"classes/CreateOwnerDto.html":{}}}],["password_validation",{"_index":1642,"title":{},"body":{"classes/ChangeDto.html":{},"classes/CreateOwnerDto.html":{},"classes/CreateUserDto.html":{},"classes/LoginDto.html":{},"classes/ResetDto.html":{},"classes/SignupDto.html":{}}}],["password_validation})@match('password",{"_index":1640,"title":{},"body":{"classes/ChangeDto.html":{},"classes/ResetDto.html":{},"classes/SignupDto.html":{}}}],["passwordequals",{"_index":798,"title":{},"body":{"injectables/AdminService.html":{},"injectables/OwnerService.html":{},"injectables/UsersService.html":{}}}],["past",{"_index":3152,"title":{},"body":{"injectables/TasksService.html":{}}}],["patch",{"_index":194,"title":{},"body":{"controllers/AdminController.html":{},"controllers/AuthController.html":{},"injectables/AuthMiddleware.html":{},"controllers/CategoriesController.html":{},"injectables/CorsMiddleware.html":{},"controllers/ProductController.html":{},"injectables/ProductMiddleware.html":{},"interfaces/RequestHeaders.html":{},"injectables/UserMiddleware.html":{},"injectables/UserMiddleware-1.html":{},"controllers/UsersController.html":{}}}],["patch('change",{"_index":1308,"title":{},"body":{"controllers/AuthController.html":{}}}],["patch('refresh",{"_index":1295,"title":{},"body":{"controllers/AuthController.html":{}}}],["patch('reset",{"_index":1306,"title":{},"body":{"controllers/AuthController.html":{}}}],["patch('update",{"_index":3376,"title":{},"body":{"controllers/UsersController.html":{}}}],["patch('update_admin",{"_index":257,"title":{},"body":{"controllers/AdminController.html":{}}}],["patch('update_category/:categoryid",{"_index":1535,"title":{},"body":{"controllers/CategoriesController.html":{}}}],["patch('update_product/:productid",{"_index":2868,"title":{},"body":{"controllers/ProductController.html":{}}}],["path",{"_index":564,"title":{},"body":{"modules/AdminModule.html":{},"classes/AllExceptionsFilter.html":{},"classes/ApiError.html":{},"classes/ApiErrorExceptionFilter.html":{},"classes/ApiExceptionFilter.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"classes/BadRequestError.html":{},"modules/CategoriesModule.html":{},"injectables/FilesService.html":{},"classes/HttpExceptionFilter.html":{},"injectables/LocationMiddleware.html":{},"classes/NotFoundError.html":{},"controllers/ProductController.html":{},"modules/ProductModule.html":{},"modules/ReviewsModule.html":{},"modules/RolesModule.html":{},"modules/UsersModule.html":{},"interfaces/fileCreated.html":{}}}],["path.join",{"_index":2860,"title":{},"body":{"controllers/ProductController.html":{}}}],["path.join(__dirname",{"_index":1178,"title":{},"body":{"modules/AppModule.html":{},"injectables/FilesService.html":{},"interfaces/fileCreated.html":{}}}],["path.resolve(__dirname",{"_index":1924,"title":{},"body":{"injectables/FilesService.html":{},"interfaces/fileCreated.html":{}}}],["payload",{"_index":103,"title":{"interfaces/Payload.html":{}},"body":{"guards/AddContentGuard.html":{},"guards/AdminGuard.html":{},"injectables/AdminJwtRefreshService.html":{},"injectables/AdminService.html":{},"guards/AuthFerfershGuard.html":{},"interfaces/AuthUser.html":{},"interfaces/CodeDto.html":{},"guards/EditContentGuard.html":{},"guards/EditWebsiteGuard.html":{},"guards/JwtAuthGuard.html":{},"guards/OwnerAdminGuard.html":{},"injectables/OwnerJwtRefreshService.html":{},"injectables/OwnerService.html":{},"interfaces/Payload.html":{},"interfaces/ReturnedAdmin.html":{},"interfaces/ReturnedOwner.html":{},"interfaces/ReturnedUser.html":{},"guards/RolesGuard.html":{},"interfaces/Tokens.html":{},"guards/UserGuard.html":{},"injectables/UserJwtRefreshTokenService.html":{}}}],["payload.roles.some",{"_index":3062,"title":{},"body":{"guards/RolesGuard.html":{}}}],["payload.useractivationlink",{"_index":796,"title":{},"body":{"injectables/AdminService.html":{}}}],["payload.userid",{"_index":301,"title":{},"body":{"guards/AdminGuard.html":{},"guards/OwnerAdminGuard.html":{},"guards/UserGuard.html":{}}}],["pg",{"_index":3557,"title":{},"body":{"dependencies.html":{}}}],["phone",{"_index":1766,"title":{},"body":{"classes/CreateAdminDto.html":{},"classes/CreateOwnerDto.html":{},"classes/CreateUserDto.html":{},"classes/SignupDto.html":{}}}],["phone_numrer_validation",{"_index":1879,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/SignupDto.html":{}}}],["phonenumber",{"_index":315,"title":{},"body":{"interfaces/AdminInterface.html":{},"injectables/AdminJwtRefreshService.html":{},"classes/AdminRefreshToken.html":{},"interfaces/AdminRefreshTokenCreationAttrbs.html":{},"injectables/AdminService.html":{},"injectables/AdminUserMiddleware.html":{},"interfaces/AdmincreationAttrbs.html":{},"interfaces/AuthUser.html":{},"interfaces/CodeDto.html":{},"classes/CreateAdminDto.html":{},"classes/CreateOwnerDto.html":{},"classes/CreateUserDto.html":{},"interfaces/InitializeUser.html":{},"classes/Owner.html":{},"interfaces/OwnerCreationAttrbs.html":{},"injectables/OwnerJwtRefreshService.html":{},"classes/OwnerRefreshToken.html":{},"interfaces/OwnerRefreshTokenCreationAttrbs.html":{},"injectables/OwnerService.html":{},"interfaces/Payload.html":{},"interfaces/ReturnedAdmin.html":{},"interfaces/ReturnedOwner.html":{},"interfaces/ReturnedUser.html":{},"interfaces/RolecreationAttrbs.html":{},"classes/SignupDto.html":{},"interfaces/Tokens.html":{},"injectables/UserAdminMiddleware.html":{},"interfaces/UserInterface.html":{},"interfaces/UserRefreshCreationAttrbs.html":{},"interfaces/UsercreationAttrbs.html":{},"injectables/UsersService.html":{},"interfaces/ValidateUser.html":{}}}],["phonenumber'})@column({type",{"_index":630,"title":{},"body":{"classes/AdminRefreshToken.html":{},"classes/Owner.html":{},"classes/OwnerRefreshToken.html":{}}}],["phonenumber_validation",{"_index":1771,"title":{},"body":{"classes/CreateAdminDto.html":{},"classes/CreateOwnerDto.html":{}}}],["pick",{"_index":1987,"title":{},"body":{"interfaces/ITelegramModuleAsyncOptions.html":{},"interfaces/ITelegramOptions.html":{}}}],["pipetransform",{"_index":2628,"title":{},"body":{"classes/ParseFormDataJsonPipe.html":{},"injectables/ParseJsonPipe.html":{},"injectables/ValidateDto.html":{}}}],["plaintoclass",{"_index":3483,"title":{},"body":{"injectables/ValidateDto.html":{}}}],["plaintoclass(metadata.metatype",{"_index":3487,"title":{},"body":{"injectables/ValidateDto.html":{}}}],["plaintoinstance",{"_index":2921,"title":{},"body":{"classes/RequestValidator.html":{}}}],["plaintoinstance(classinstance",{"_index":2924,"title":{},"body":{"classes/RequestValidator.html":{}}}],["please",{"_index":3630,"title":{},"body":{"index.html":{}}}],["policy",{"_index":1701,"title":{},"body":{"injectables/CorsMiddleware.html":{},"interfaces/RequestHeaders.html":{}}}],["port",{"_index":1161,"title":{},"body":{"modules/AppModule.html":{},"modules/MailModule.html":{}}}],["post",{"_index":186,"title":{},"body":{"controllers/AdminController.html":{},"controllers/AuthController.html":{},"injectables/AuthMiddleware.html":{},"injectables/CorsMiddleware.html":{},"controllers/ProductController.html":{},"injectables/ProductMiddleware.html":{},"interfaces/RequestHeaders.html":{},"injectables/UserMiddleware.html":{},"injectables/UserMiddleware-1.html":{},"controllers/UsersController.html":{}}}],["post('/ban",{"_index":3373,"title":{},"body":{"controllers/UsersController.html":{}}}],["post('addbookmarkproduct",{"_index":2850,"title":{},"body":{"controllers/ProductController.html":{}}}],["post('addwatchedproduct",{"_index":2847,"title":{},"body":{"controllers/ProductController.html":{}}}],["post('code",{"_index":1300,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('create_admin",{"_index":252,"title":{},"body":{"controllers/AdminController.html":{}}}],["post('login",{"_index":1292,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('logout",{"_index":1298,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('signup",{"_index":1286,"title":{},"body":{"controllers/AuthController.html":{}}}],["postgres",{"_index":1201,"title":{},"body":{"modules/AppModule.html":{}}}],["postoffice",{"_index":1386,"title":{},"body":{"interfaces/AuthUser.html":{},"interfaces/CodeDto.html":{},"interfaces/Payload.html":{},"interfaces/ReturnedAdmin.html":{},"interfaces/ReturnedOwner.html":{},"interfaces/ReturnedUser.html":{},"interfaces/Tokens.html":{},"classes/UpdateUserDto.html":{}}}],["postoffice'})@isstring()@minlength(2)@maxlength(50",{"_index":3244,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["prefix",{"_index":150,"title":{},"body":{"controllers/AdminController.html":{},"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/CardController.html":{},"controllers/CategoriesController.html":{},"controllers/OrdersController.html":{},"controllers/ProductController.html":{},"controllers/ReviewsController.html":{},"controllers/RolesController.html":{},"controllers/UsersController.html":{}}}],["preservepath",{"_index":1195,"title":{},"body":{"modules/AppModule.html":{}}}],["price",{"_index":1620,"title":{},"body":{"interfaces/CategoryCreationAtrb.html":{},"classes/CreateProductDto.html":{},"classes/Nested.html":{},"classes/Nested-1.html":{},"classes/OrderProduct.html":{},"classes/Product.html":{},"classes/Product-1.html":{},"interfaces/ProductCreationAttrs.html":{},"interfaces/ReturnedCategory.html":{},"interfaces/ReturnedProduct.html":{},"interfaces/ReturnedProducts.html":{},"interfaces/ReturnedReview.html":{},"interfaces/ReviewCreationAtrb.html":{},"classes/UpdateProductDto.html":{}}}],["primarykey",{"_index":620,"title":{},"body":{"classes/AdminRefreshToken.html":{},"classes/BookmarksProducts.html":{},"classes/Cart.html":{},"classes/CartProduct.html":{},"classes/CartProduct-1.html":{},"classes/Category.html":{},"classes/Order.html":{},"classes/OrderProduct.html":{},"classes/Owner.html":{},"classes/OwnerRefreshToken.html":{},"classes/Product.html":{},"classes/Product-1.html":{},"classes/ProductCategories.html":{},"classes/ProductReviews.html":{},"classes/Review.html":{},"classes/Role.html":{},"classes/UserRefreshToken.html":{},"classes/UserRoles.html":{},"classes/WatchedProducts.html":{}}}],["priority:100!important",{"_index":2128,"title":{},"body":{"injectables/MailService.html":{}}}],["private",{"_index":55,"title":{},"body":{"injectables/ActivateMiddleware.html":{},"guards/AdminGuard.html":{},"injectables/AdminJwtRefreshService.html":{},"classes/AdminRefreshToken.html":{},"injectables/AdminService.html":{},"injectables/AppClusterService.html":{},"controllers/AppController.html":{},"controllers/AuthController.html":{},"guards/AuthFerfershGuard.html":{},"classes/Cart.html":{},"classes/CartProduct.html":{},"classes/CartProduct-1.html":{},"controllers/CategoriesController.html":{},"injectables/CategoriesService.html":{},"classes/Category.html":{},"injectables/CorsMiddleware.html":{},"classes/GarbageCollectingProcessor.html":{},"injectables/InitializeEmailMiddleware.html":{},"injectables/InitializeUserMiddleware.html":{},"injectables/MailService.html":{},"interfaces/Msg.html":{},"classes/Order.html":{},"classes/OrderProduct.html":{},"classes/Owner.html":{},"guards/OwnerAdminGuard.html":{},"injectables/OwnerJwtRefreshService.html":{},"classes/OwnerRefreshToken.html":{},"injectables/OwnerService.html":{},"classes/Product.html":{},"classes/Product-1.html":{},"controllers/ProductController.html":{},"interfaces/RequestHeaders.html":{},"controllers/ReviewsController.html":{},"injectables/ReviewsService.html":{},"classes/Role.html":{},"guards/RolesGuard.html":{},"injectables/RolesService.html":{},"injectables/TasksService.html":{},"modules/TelegramModule.html":{},"guards/UserGuard.html":{},"injectables/UserJwtRefreshTokenService.html":{},"classes/UserRefreshToken.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["process",{"_index":1958,"title":{},"body":{"classes/GarbageCollectingProcessor.html":{}}}],["process('transcode",{"_index":1956,"title":{},"body":{"classes/GarbageCollectingProcessor.html":{}}}],["process.env.access_allow",{"_index":1340,"title":{},"body":{"injectables/AuthMiddleware.html":{}}}],["process.env.api_key.tostring",{"_index":459,"title":{},"body":{"injectables/AdminJwtRefreshService.html":{},"controllers/AppController.html":{},"injectables/OwnerJwtRefreshService.html":{}}}],["process.env.api_url",{"_index":2106,"title":{},"body":{"injectables/MailService.html":{}}}],["process.env.api_url}/auth/activate/${admin.getresettoken().trim()}?code=${code",{"_index":446,"title":{},"body":{"injectables/AdminJwtRefreshService.html":{}}}],["process.env.api_url}/auth/activate/${owner.getresettoken().trim()}?code=${code",{"_index":2506,"title":{},"body":{"injectables/OwnerJwtRefreshService.html":{}}}],["process.env.client_url",{"_index":2253,"title":{},"body":{"injectables/MailService.html":{}}}],["process.env.client_url.tostring().trim",{"_index":1693,"title":{},"body":{"injectables/CorsMiddleware.html":{},"interfaces/RequestHeaders.html":{}}}],["process.env.client_url.trim",{"_index":2880,"title":{},"body":{"injectables/ProductMiddleware.html":{},"injectables/UserMiddleware.html":{},"injectables/UserMiddleware-1.html":{}}}],["process.env.jwt_access_secret.tostring().trim",{"_index":1358,"title":{},"body":{"modules/AuthModule.html":{}}}],["process.env.jwt_refresh_admin_secret.tostring().trim",{"_index":557,"title":{},"body":{"modules/AdminModule.html":{}}}],["process.env.jwt_refresh_owner_secret.tostring().trim",{"_index":2522,"title":{},"body":{"modules/OwnerModule.html":{}}}],["process.env.jwt_refresh_user_secret.tostring().trim",{"_index":3385,"title":{},"body":{"modules/UsersModule.html":{}}}],["process.env.mailer_host?.tostring().trim",{"_index":2068,"title":{},"body":{"modules/MailModule.html":{}}}],["process.env.mailer_pass?.tostring().trim",{"_index":2076,"title":{},"body":{"modules/MailModule.html":{}}}],["process.env.mailer_user",{"_index":2103,"title":{},"body":{"injectables/MailService.html":{}}}],["process.env.mailer_user?.tostring().trim",{"_index":2073,"title":{},"body":{"modules/MailModule.html":{}}}],["process.env.node_env",{"_index":1054,"title":{},"body":{"controllers/AppController.html":{}}}],["process.env.node_env}.env",{"_index":551,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CartModule.html":{},"modules/CategoriesModule.html":{},"modules/CoreModule.html":{},"modules/MailModule.html":{},"modules/OrdersModule.html":{},"modules/OwnerModule.html":{},"modules/ProductModule.html":{},"modules/ReviewsModule.html":{},"modules/RolesModule.html":{},"modules/UsersModule.html":{}}}],["process.env.pgdatabase.tostring",{"_index":1208,"title":{},"body":{"modules/AppModule.html":{}}}],["process.env.pghost.tostring",{"_index":1202,"title":{},"body":{"modules/AppModule.html":{}}}],["process.env.pgpassword.tostring",{"_index":1206,"title":{},"body":{"modules/AppModule.html":{}}}],["process.env.pguser.tostring",{"_index":1205,"title":{},"body":{"modules/AppModule.html":{}}}],["process.env.redis_host.tostring",{"_index":1160,"title":{},"body":{"modules/AppModule.html":{}}}],["process.env.redis_password.tostring",{"_index":1164,"title":{},"body":{"modules/AppModule.html":{}}}],["process.on('message",{"_index":1003,"title":{},"body":{"injectables/AppClusterService.html":{},"interfaces/Msg.html":{}}}],["process.on('sigint",{"_index":999,"title":{},"body":{"injectables/AppClusterService.html":{},"interfaces/Msg.html":{}}}],["process.on('sigterm",{"_index":1001,"title":{},"body":{"injectables/AppClusterService.html":{},"interfaces/Msg.html":{}}}],["process.on('sigusr2",{"_index":1002,"title":{},"body":{"injectables/AppClusterService.html":{},"interfaces/Msg.html":{}}}],["process.pid",{"_index":990,"title":{},"body":{"injectables/AppClusterService.html":{},"interfaces/Msg.html":{}}}],["processing",{"_index":2311,"title":{},"body":{"classes/Order.html":{}}}],["processor",{"_index":1959,"title":{},"body":{"classes/GarbageCollectingProcessor.html":{}}}],["processor('garbagecollecting",{"_index":1961,"title":{},"body":{"classes/GarbageCollectingProcessor.html":{}}}],["processors/garbage.processor",{"_index":1662,"title":{},"body":{"modules/CoreModule.html":{}}}],["product",{"_index":545,"title":{"classes/Product.html":{},"classes/Product-1.html":{}},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"classes/BookmarksProducts.html":{},"classes/Cart.html":{},"modules/CartModule.html":{},"classes/CartProduct.html":{},"classes/CartProduct-1.html":{},"modules/CategoriesModule.html":{},"classes/Category.html":{},"modules/CoreModule.html":{},"modules/MailModule.html":{},"classes/Order.html":{},"classes/OrderProduct.html":{},"modules/OrdersModule.html":{},"classes/Owner.html":{},"modules/OwnerModule.html":{},"classes/Product.html":{},"classes/Product-1.html":{},"classes/ProductCategories.html":{},"controllers/ProductController.html":{},"modules/ProductModule.html":{},"classes/ProductReviews.html":{},"classes/Review.html":{},"modules/ReviewsModule.html":{},"injectables/ReviewsService.html":{},"modules/RolesModule.html":{},"modules/UsersModule.html":{},"classes/WatchedProducts.html":{}}}],["product.$add('categories",{"_index":2999,"title":{},"body":{"injectables/ReviewsService.html":{}}}],["product.$remove('reviews",{"_index":3007,"title":{},"body":{"injectables/ReviewsService.html":{}}}],["product.$set('reviews",{"_index":2997,"title":{},"body":{"injectables/ReviewsService.html":{}}}],["product.categories.model",{"_index":1614,"title":{},"body":{"classes/Category.html":{}}}],["product.controller",{"_index":2885,"title":{},"body":{"modules/ProductModule.html":{}}}],["product.id",{"_index":3001,"title":{},"body":{"injectables/ReviewsService.html":{}}}],["product.reviews",{"_index":2996,"title":{},"body":{"injectables/ReviewsService.html":{}}}],["product.reviews.model",{"_index":2952,"title":{},"body":{"classes/Review.html":{}}}],["product.save",{"_index":3004,"title":{},"body":{"injectables/ReviewsService.html":{}}}],["product.service",{"_index":2822,"title":{},"body":{"controllers/ProductController.html":{},"modules/ProductModule.html":{}}}],["product/addbookmark",{"_index":2896,"title":{},"body":{"modules/ProductModule.html":{}}}],["product/addwatchedproduct",{"_index":2897,"title":{},"body":{"modules/ProductModule.html":{}}}],["product/bookmarkproducts",{"_index":2899,"title":{},"body":{"modules/ProductModule.html":{}}}],["product/create_product",{"_index":2900,"title":{},"body":{"modules/ProductModule.html":{}}}],["product/delete_image",{"_index":2901,"title":{},"body":{"modules/ProductModule.html":{}}}],["product/models/bookmark.products",{"_index":1140,"title":{},"body":{"modules/AppModule.html":{},"modules/UsersModule.html":{}}}],["product/models/product.model",{"_index":546,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"classes/BookmarksProducts.html":{},"classes/Cart.html":{},"modules/CartModule.html":{},"classes/CartProduct-1.html":{},"modules/CategoriesModule.html":{},"classes/Category.html":{},"modules/CoreModule.html":{},"modules/MailModule.html":{},"classes/Order.html":{},"classes/OrderProduct.html":{},"modules/OrdersModule.html":{},"classes/Owner.html":{},"modules/OwnerModule.html":{},"classes/ProductCategories.html":{},"classes/ProductReviews.html":{},"classes/Review.html":{},"modules/ReviewsModule.html":{},"modules/RolesModule.html":{},"modules/UsersModule.html":{},"classes/WatchedProducts.html":{}}}],["product/models/watched.products.model",{"_index":1142,"title":{},"body":{"modules/AppModule.html":{},"modules/UsersModule.html":{}}}],["product/product.model",{"_index":1474,"title":{},"body":{"classes/CartProduct.html":{}}}],["product/product.module",{"_index":1122,"title":{},"body":{"modules/AppModule.html":{},"modules/CartModule.html":{},"modules/CategoriesModule.html":{},"modules/RolesModule.html":{},"modules/UsersModule.html":{}}}],["product/product.service",{"_index":2977,"title":{},"body":{"modules/ReviewsModule.html":{},"injectables/ReviewsService.html":{}}}],["product/watchedproducts",{"_index":2898,"title":{},"body":{"modules/ProductModule.html":{}}}],["product_categories",{"_index":2757,"title":{},"body":{"classes/ProductCategories.html":{},"classes/WatchedProducts.html":{}}}],["product_orders",{"_index":2327,"title":{},"body":{"classes/OrderProduct.html":{}}}],["product_reviews",{"_index":2908,"title":{},"body":{"classes/ProductReviews.html":{}}}],["productcategories",{"_index":539,"title":{"classes/ProductCategories.html":{}},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/CartModule.html":{},"modules/CategoriesModule.html":{},"classes/Category.html":{},"modules/CoreModule.html":{},"modules/MailModule.html":{},"modules/OrdersModule.html":{},"modules/OwnerModule.html":{},"classes/Product.html":{},"classes/Product-1.html":{},"classes/ProductCategories.html":{},"modules/ProductModule.html":{},"modules/ReviewsModule.html":{},"modules/RolesModule.html":{},"modules/UsersModule.html":{}}}],["productcontroller",{"_index":2758,"title":{"controllers/ProductController.html":{}},"body":{"controllers/ProductController.html":{},"modules/ProductModule.html":{}}}],["productcreationattrs",{"_index":1616,"title":{"interfaces/ProductCreationAttrs.html":{}},"body":{"interfaces/CategoryCreationAtrb.html":{},"classes/Product.html":{},"classes/Product-1.html":{},"interfaces/ProductCreationAttrs.html":{},"interfaces/ReturnedCategory.html":{},"interfaces/ReturnedProduct.html":{},"interfaces/ReturnedProducts.html":{},"interfaces/ReturnedReview.html":{},"interfaces/ReviewCreationAtrb.html":{}}}],["productid",{"_index":1401,"title":{},"body":{"classes/BookmarksProducts.html":{},"classes/CartProduct.html":{},"classes/CartProduct-1.html":{},"classes/OrderProduct.html":{},"classes/ProductCategories.html":{},"controllers/ProductController.html":{},"classes/ProductReviews.html":{},"classes/Review.html":{},"controllers/ReviewsController.html":{},"injectables/ReviewsService.html":{},"classes/WatchedProducts.html":{}}}],["productids",{"_index":2806,"title":{},"body":{"controllers/ProductController.html":{}}}],["production",{"_index":1055,"title":{},"body":{"controllers/AppController.html":{},"index.html":{}}}],["productmiddleware",{"_index":2877,"title":{"injectables/ProductMiddleware.html":{}},"body":{"injectables/ProductMiddleware.html":{},"modules/ProductModule.html":{}}}],["productmodule",{"_index":1101,"title":{"modules/ProductModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CartModule.html":{},"modules/CategoriesModule.html":{},"modules/ProductModule.html":{},"modules/RolesModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["productreviews",{"_index":1137,"title":{"classes/ProductReviews.html":{}},"body":{"modules/AppModule.html":{},"classes/Product-1.html":{},"modules/ProductModule.html":{},"classes/ProductReviews.html":{},"classes/Review.html":{},"modules/ReviewsModule.html":{}}}],["products",{"_index":1418,"title":{},"body":{"classes/Cart.html":{},"classes/Category.html":{},"interfaces/CategoryCreationAtrb.html":{},"injectables/FilesService.html":{},"classes/Order.html":{},"classes/Owner.html":{},"classes/Product.html":{},"classes/Product-1.html":{},"controllers/ProductController.html":{},"interfaces/ProductCreationAttrs.html":{},"interfaces/ReturnedCategory.html":{},"interfaces/ReturnedProduct.html":{},"interfaces/ReturnedProducts.html":{},"interfaces/ReturnedReview.html":{},"interfaces/ReviewCreationAtrb.html":{},"interfaces/fileCreated.html":{}}}],["productservice",{"_index":2821,"title":{},"body":{"controllers/ProductController.html":{},"modules/ProductModule.html":{},"modules/ReviewsModule.html":{},"injectables/ReviewsService.html":{},"overview.html":{}}}],["progressive",{"_index":3592,"title":{},"body":{"index.html":{}}}],["project",{"_index":3621,"title":{},"body":{"index.html":{}}}],["promise",{"_index":94,"title":{},"body":{"guards/AddContentGuard.html":{},"controllers/AdminController.html":{},"guards/AdminGuard.html":{},"injectables/AdminJwtRefreshService.html":{},"injectables/AdminService.html":{},"injectables/AppClusterService.html":{},"controllers/AppController.html":{},"controllers/AuthController.html":{},"guards/AuthFerfershGuard.html":{},"controllers/CategoriesController.html":{},"injectables/CategoriesService.html":{},"guards/EditContentGuard.html":{},"guards/EditWebsiteGuard.html":{},"injectables/FilesService.html":{},"interfaces/ITelegramModuleAsyncOptions.html":{},"interfaces/ITelegramOptions.html":{},"guards/JwtAuthGuard.html":{},"interfaces/Msg.html":{},"guards/OwnerAdminGuard.html":{},"injectables/OwnerJwtRefreshService.html":{},"injectables/OwnerService.html":{},"controllers/ProductController.html":{},"guards/RefreshAuthGuard.html":{},"injectables/ReviewsService.html":{},"controllers/RolesController.html":{},"guards/RolesGuard.html":{},"injectables/RolesService.html":{},"injectables/TasksService.html":{},"guards/UserGuard.html":{},"injectables/UserJwtRefreshTokenService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"injectables/ValidateDto.html":{},"interfaces/fileCreated.html":{},"miscellaneous/functions.html":{}}}],["promise.all",{"_index":764,"title":{},"body":{"injectables/AdminService.html":{},"injectables/OwnerService.html":{},"injectables/UsersService.html":{}}}],["promise.all([await",{"_index":766,"title":{},"body":{"injectables/AdminService.html":{}}}],["promisify",{"_index":392,"title":{},"body":{"injectables/AdminJwtRefreshService.html":{},"controllers/AppController.html":{},"injectables/OwnerJwtRefreshService.html":{}}}],["promisify(scrypt)(api_key",{"_index":461,"title":{},"body":{"injectables/AdminJwtRefreshService.html":{},"controllers/AppController.html":{},"injectables/OwnerJwtRefreshService.html":{}}}],["prop",{"_index":1711,"title":{},"body":{"injectables/CorsMiddleware.html":{},"interfaces/RequestHeaders.html":{}}}],["properties",{"_index":124,"title":{"properties.html":{}},"body":{"classes/AddRoleDto.html":{},"interfaces/AdminInterface.html":{},"injectables/AdminJwtRefreshService.html":{},"classes/AdminRefreshToken.html":{},"interfaces/AdminRefreshTokenCreationAttrbs.html":{},"interfaces/AdmincreationAttrbs.html":{},"classes/ApiError.html":{},"classes/ApiException.html":{},"injectables/AppClusterService.html":{},"interfaces/AuthUser.html":{},"classes/BadRequestError.html":{},"classes/BanUserDto.html":{},"classes/BookmarksProducts.html":{},"classes/Cart.html":{},"classes/CartProduct.html":{},"classes/CartProduct-1.html":{},"classes/Category.html":{},"interfaces/CategoryCreationAtrb.html":{},"classes/ChangeDto.html":{},"interfaces/CodeDto.html":{},"injectables/CorsMiddleware.html":{},"classes/CreateAccessTokenDto.html":{},"classes/CreateAdminDto.html":{},"classes/CreateAdminRefreshTokenDto.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateOwnerDto.html":{},"classes/CreateOwnerRefreshTokenDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateReviewDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserRefreshTokenDto.html":{},"classes/GarbageCollectingProcessor.html":{},"interfaces/ITelegramModuleAsyncOptions.html":{},"interfaces/ITelegramOptions.html":{},"interfaces/InitializeUser.html":{},"classes/JwtRefreshTokenDeletedEvent.html":{},"classes/LoginDto.html":{},"injectables/MailService.html":{},"interfaces/Msg.html":{},"classes/Nested.html":{},"classes/Nested-1.html":{},"classes/NotFoundError.html":{},"classes/Order.html":{},"classes/OrderProduct.html":{},"classes/Owner.html":{},"interfaces/OwnerCreationAttrbs.html":{},"injectables/OwnerJwtRefreshService.html":{},"classes/OwnerRefreshToken.html":{},"interfaces/OwnerRefreshTokenCreationAttrbs.html":{},"interfaces/Payload.html":{},"classes/Product.html":{},"classes/Product-1.html":{},"classes/ProductCategories.html":{},"interfaces/ProductCreationAttrs.html":{},"classes/ProductReviews.html":{},"interfaces/RequestHeaders.html":{},"classes/RequestValidator.html":{},"classes/ResetDto.html":{},"interfaces/ReturnedAdmin.html":{},"interfaces/ReturnedCategory.html":{},"interfaces/ReturnedOwner.html":{},"interfaces/ReturnedProduct.html":{},"interfaces/ReturnedProducts.html":{},"interfaces/ReturnedReview.html":{},"interfaces/ReturnedUser.html":{},"classes/Review.html":{},"interfaces/ReviewCreationAtrb.html":{},"injectables/ReviewsService.html":{},"classes/Role.html":{},"interfaces/RolecreationAttrbs.html":{},"classes/SignupDto.html":{},"injectables/TasksService.html":{},"injectables/TelegramService.html":{},"interfaces/Tokens.html":{},"classes/UpdateCategoryDto.html":{},"classes/UpdateProductDto.html":{},"classes/UpdateUserDto.html":{},"interfaces/UserInterface.html":{},"interfaces/UserRefreshCreationAttrbs.html":{},"classes/UserRefreshToken.html":{},"classes/UserRoles.html":{},"interfaces/UsercreationAttrbs.html":{},"interfaces/ValidateUser.html":{},"classes/ValidationException.html":{},"classes/WatchedProducts.html":{},"interfaces/fileCreated.html":{},"properties.html":{}}}],["property",{"_index":2271,"title":{},"body":{"classes/MatchConstraint.html":{},"miscellaneous/functions.html":{}}}],["propertyname",{"_index":2267,"title":{},"body":{"classes/MatchConstraint.html":{},"injectables/ParseJsonPipe.html":{}}}],["protected",{"_index":3217,"title":{},"body":{"injectables/ThrottlerBehindProxyGuard.html":{}}}],["provide",{"_index":1143,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CoreModule.html":{},"modules/TelegramModule.html":{}}}],["provided",{"_index":1690,"title":{},"body":{"injectables/CorsMiddleware.html":{},"interfaces/RequestHeaders.html":{}}}],["provider",{"_index":3185,"title":{},"body":{"modules/TelegramModule.html":{}}}],["providers",{"_index":488,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CartModule.html":{},"modules/CategoriesModule.html":{},"modules/CoreModule.html":{},"modules/MailModule.html":{},"modules/OrdersModule.html":{},"modules/OwnerModule.html":{},"modules/ProductModule.html":{},"modules/ReviewsModule.html":{},"modules/RolesModule.html":{},"modules/TelegramModule.html":{},"modules/UsersModule.html":{}}}],["proxy.guard",{"_index":214,"title":{},"body":{"controllers/AdminController.html":{},"controllers/AuthController.html":{},"controllers/CategoriesController.html":{},"modules/CoreModule.html":{},"controllers/ProductController.html":{},"controllers/ReviewsController.html":{},"controllers/RolesController.html":{},"controllers/UsersController.html":{}}}],["proxy.guard.ts",{"_index":3216,"title":{},"body":{"injectables/ThrottlerBehindProxyGuard.html":{}}}],["proxy.guard.ts:6",{"_index":3220,"title":{},"body":{"injectables/ThrottlerBehindProxyGuard.html":{}}}],["public",{"_index":579,"title":{},"body":{"classes/AdminRefreshToken.html":{},"classes/BookmarksProducts.html":{},"classes/Cart.html":{},"classes/CartProduct.html":{},"classes/CartProduct-1.html":{},"classes/Category.html":{},"classes/Order.html":{},"classes/OrderProduct.html":{},"classes/Owner.html":{},"classes/OwnerRefreshToken.html":{},"classes/Product.html":{},"classes/Product-1.html":{},"classes/ProductCategories.html":{},"classes/ProductReviews.html":{},"classes/Review.html":{},"classes/Role.html":{},"classes/UserRefreshToken.html":{},"classes/UserRoles.html":{},"classes/WatchedProducts.html":{}}}],["put",{"_index":1267,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthMiddleware.html":{},"controllers/CategoriesController.html":{},"injectables/CorsMiddleware.html":{},"controllers/ProductController.html":{},"injectables/ProductMiddleware.html":{},"interfaces/RequestHeaders.html":{},"controllers/ReviewsController.html":{},"controllers/RolesController.html":{},"injectables/UserMiddleware.html":{},"injectables/UserMiddleware-1.html":{}}}],["put('/create_role",{"_index":3052,"title":{},"body":{"controllers/RolesController.html":{}}}],["put('create_category",{"_index":1533,"title":{},"body":{"controllers/CategoriesController.html":{}}}],["put('create_product",{"_index":2852,"title":{},"body":{"controllers/ProductController.html":{}}}],["put('create_review",{"_index":2968,"title":{},"body":{"controllers/ReviewsController.html":{}}}],["quantity",{"_index":1460,"title":{},"body":{"classes/CartProduct.html":{},"classes/CartProduct-1.html":{},"interfaces/CategoryCreationAtrb.html":{},"classes/CreateProductDto.html":{},"classes/Nested.html":{},"classes/Nested-1.html":{},"classes/OrderProduct.html":{},"classes/Product.html":{},"classes/Product-1.html":{},"interfaces/ProductCreationAttrs.html":{},"interfaces/ReturnedCategory.html":{},"interfaces/ReturnedProduct.html":{},"interfaces/ReturnedProducts.html":{},"interfaces/ReturnedReview.html":{},"interfaces/ReviewCreationAtrb.html":{},"classes/UpdateProductDto.html":{}}}],["query",{"_index":192,"title":{},"body":{"controllers/AdminController.html":{},"controllers/AuthController.html":{},"controllers/ProductController.html":{},"controllers/ReviewsController.html":{},"controllers/UsersController.html":{}}}],["query('categories",{"_index":2837,"title":{},"body":{"controllers/ProductController.html":{}}}],["query('code",{"_index":1315,"title":{},"body":{"controllers/AuthController.html":{}}}],["query('colours",{"_index":2836,"title":{},"body":{"controllers/ProductController.html":{}}}],["query('filepath",{"_index":2875,"title":{},"body":{"controllers/ProductController.html":{}}}],["query('locale",{"_index":1302,"title":{},"body":{"controllers/AuthController.html":{}}}],["query('order",{"_index":2834,"title":{},"body":{"controllers/ProductController.html":{}}}],["query('page",{"_index":262,"title":{},"body":{"controllers/AdminController.html":{},"controllers/ProductController.html":{},"controllers/UsersController.html":{}}}],["query('pagesize",{"_index":263,"title":{},"body":{"controllers/AdminController.html":{},"controllers/ProductController.html":{},"controllers/UsersController.html":{}}}],["query('productid",{"_index":2848,"title":{},"body":{"controllers/ProductController.html":{},"controllers/ReviewsController.html":{}}}],["query('productids",{"_index":2831,"title":{},"body":{"controllers/ProductController.html":{}}}],["query('reviewid",{"_index":2971,"title":{},"body":{"controllers/ReviewsController.html":{}}}],["query('sizes",{"_index":2835,"title":{},"body":{"controllers/ProductController.html":{}}}],["query('v",{"_index":261,"title":{},"body":{"controllers/AdminController.html":{},"controllers/UsersController.html":{}}}],["r",{"_index":2185,"title":{},"body":{"injectables/MailService.html":{}}}],["randombytes",{"_index":388,"title":{},"body":{"injectables/AdminJwtRefreshService.html":{},"controllers/AppController.html":{},"injectables/OwnerJwtRefreshService.html":{}}}],["randombytes(bytes",{"_index":457,"title":{},"body":{"injectables/AdminJwtRefreshService.html":{},"controllers/AppController.html":{},"injectables/OwnerJwtRefreshService.html":{}}}],["randomname",{"_index":1938,"title":{},"body":{"injectables/FilesService.html":{},"controllers/ProductController.html":{},"interfaces/fileCreated.html":{}}}],["rawerrors",{"_index":871,"title":{},"body":{"classes/ApiError.html":{},"classes/ApiErrorExceptionFilter.html":{},"classes/ApiExceptionFilter.html":{},"classes/BadRequestError.html":{},"classes/NotFoundError.html":{},"classes/RequestValidator.html":{}}}],["rawerrors.concat",{"_index":2929,"title":{},"body":{"classes/RequestValidator.html":{}}}],["read",{"_index":3631,"title":{},"body":{"index.html":{}}}],["reader",{"_index":1040,"title":{},"body":{"controllers/AppController.html":{},"injectables/LocationMiddleware.html":{}}}],["reader.country(ipaddress",{"_index":1071,"title":{},"body":{"controllers/AppController.html":{},"injectables/LocationMiddleware.html":{}}}],["reader.open(path.join(__dirname",{"_index":1068,"title":{},"body":{"controllers/AppController.html":{},"injectables/LocationMiddleware.html":{}}}],["readonly",{"_index":106,"title":{},"body":{"guards/AddContentGuard.html":{},"classes/AddRoleDto.html":{},"controllers/AdminController.html":{},"guards/AdminGuard.html":{},"injectables/AdminJwtRefreshService.html":{},"injectables/AdminService.html":{},"injectables/AdminUserMiddleware.html":{},"classes/AllExceptionsFilter.html":{},"injectables/AppClusterService.html":{},"controllers/AppController.html":{},"guards/AuthFerfershGuard.html":{},"classes/BanUserDto.html":{},"controllers/CategoriesController.html":{},"injectables/CategoriesService.html":{},"classes/ChangeDto.html":{},"injectables/CorsMiddleware.html":{},"classes/CreateAccessTokenDto.html":{},"classes/CreateAdminDto.html":{},"classes/CreateAdminRefreshTokenDto.html":{},"classes/CreateOwnerDto.html":{},"classes/CreateOwnerRefreshTokenDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateReviewDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserRefreshTokenDto.html":{},"guards/EditContentGuard.html":{},"guards/EditWebsiteGuard.html":{},"injectables/FilesService.html":{},"classes/GarbageCollectingProcessor.html":{},"injectables/InitializeEmailMiddleware.html":{},"injectables/InitializeUserMiddleware.html":{},"classes/LoginDto.html":{},"injectables/MailService.html":{},"interfaces/Msg.html":{},"classes/Nested.html":{},"classes/Nested-1.html":{},"guards/OwnerAdminGuard.html":{},"injectables/OwnerJwtRefreshService.html":{},"injectables/OwnerService.html":{},"controllers/ProductController.html":{},"interfaces/RequestHeaders.html":{},"classes/ResetDto.html":{},"controllers/ReviewsController.html":{},"injectables/ReviewsService.html":{},"controllers/RolesController.html":{},"classes/SignupDto.html":{},"injectables/TasksService.html":{},"classes/UpdateProductDto.html":{},"classes/UpdateUserDto.html":{},"injectables/UserAdminMiddleware.html":{},"guards/UserGuard.html":{},"injectables/UserJwtRefreshTokenService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"interfaces/fileCreated.html":{}}}],["reason",{"_index":1399,"title":{},"body":{"classes/BanUserDto.html":{}}}],["reason'})@isstring",{"_index":1396,"title":{},"body":{"classes/BanUserDto.html":{}}}],["record",{"_index":2654,"title":{},"body":{"injectables/ParseJsonPipe.html":{},"injectables/ThrottlerBehindProxyGuard.html":{}}}],["recursive",{"_index":1927,"title":{},"body":{"injectables/FilesService.html":{},"controllers/ProductController.html":{},"interfaces/fileCreated.html":{}}}],["redis",{"_index":1159,"title":{},"body":{"modules/AppModule.html":{}}}],["reflect",{"_index":3561,"title":{},"body":{"dependencies.html":{}}}],["reflector",{"_index":271,"title":{},"body":{"guards/AdminGuard.html":{},"guards/OwnerAdminGuard.html":{},"guards/RolesGuard.html":{},"guards/UserGuard.html":{}}}],["refresh",{"_index":383,"title":{},"body":{"injectables/AdminJwtRefreshService.html":{},"classes/AdminRefreshToken.html":{},"injectables/AppListener.html":{},"controllers/AuthController.html":{},"classes/CreateAdminRefreshTokenDto.html":{},"classes/CreateUserRefreshTokenDto.html":{},"classes/JwtRefreshTokenDeletedEvent.html":{},"classes/OwnerRefreshToken.html":{},"injectables/TasksService.html":{},"injectables/UserJwtRefreshTokenService.html":{},"classes/UserRefreshToken.html":{}}}],["refresh(response",{"_index":1252,"title":{},"body":{"controllers/AuthController.html":{}}}],["refresh.constants",{"_index":380,"title":{},"body":{"injectables/AdminJwtRefreshService.html":{},"classes/ApiException.html":{},"injectables/OwnerJwtRefreshService.html":{},"injectables/UserJwtRefreshTokenService.html":{}}}],["refresh.guard",{"_index":223,"title":{},"body":{"controllers/AdminController.html":{},"controllers/AuthController.html":{},"controllers/CategoriesController.html":{},"controllers/ProductController.html":{},"controllers/ReviewsController.html":{},"controllers/RolesController.html":{},"controllers/UsersController.html":{}}}],["refresh.guard.ts",{"_index":1319,"title":{},"body":{"guards/AuthFerfershGuard.html":{}}}],["refresh.guard.ts:18",{"_index":1321,"title":{},"body":{"guards/AuthFerfershGuard.html":{}}}],["refresh.guard.ts:25",{"_index":1322,"title":{},"body":{"guards/AuthFerfershGuard.html":{}}}],["refresh.service",{"_index":279,"title":{},"body":{"guards/AdminGuard.html":{},"modules/AdminModule.html":{},"modules/AuthModule.html":{},"injectables/InitializeUserMiddleware.html":{},"guards/OwnerAdminGuard.html":{},"modules/OwnerModule.html":{},"modules/RolesModule.html":{},"guards/UserGuard.html":{},"modules/UsersModule.html":{}}}],["refresh.service.ts",{"_index":323,"title":{},"body":{"injectables/AdminJwtRefreshService.html":{},"injectables/OwnerJwtRefreshService.html":{},"injectables/UserJwtRefreshTokenService.html":{}}}],["refresh.service.ts:113",{"_index":3278,"title":{},"body":{"injectables/UserJwtRefreshTokenService.html":{}}}],["refresh.service.ts:116",{"_index":366,"title":{},"body":{"injectables/AdminJwtRefreshService.html":{}}}],["refresh.service.ts:119",{"_index":2474,"title":{},"body":{"injectables/OwnerJwtRefreshService.html":{}}}],["refresh.service.ts:158",{"_index":3273,"title":{},"body":{"injectables/UserJwtRefreshTokenService.html":{}}}],["refresh.service.ts:180",{"_index":3268,"title":{},"body":{"injectables/UserJwtRefreshTokenService.html":{}}}],["refresh.service.ts:182",{"_index":361,"title":{},"body":{"injectables/AdminJwtRefreshService.html":{}}}],["refresh.service.ts:184",{"_index":2469,"title":{},"body":{"injectables/OwnerJwtRefreshService.html":{}}}],["refresh.service.ts:196",{"_index":3266,"title":{},"body":{"injectables/UserJwtRefreshTokenService.html":{}}}],["refresh.service.ts:204",{"_index":344,"title":{},"body":{"injectables/AdminJwtRefreshService.html":{}}}],["refresh.service.ts:206",{"_index":2462,"title":{},"body":{"injectables/OwnerJwtRefreshService.html":{}}}],["refresh.service.ts:216",{"_index":3275,"title":{},"body":{"injectables/UserJwtRefreshTokenService.html":{}}}],["refresh.service.ts:219",{"_index":348,"title":{},"body":{"injectables/AdminJwtRefreshService.html":{}}}],["refresh.service.ts:222",{"_index":2459,"title":{},"body":{"injectables/OwnerJwtRefreshService.html":{}}}],["refresh.service.ts:232",{"_index":346,"title":{},"body":{"injectables/AdminJwtRefreshService.html":{}}}],["refresh.service.ts:237",{"_index":2460,"title":{},"body":{"injectables/OwnerJwtRefreshService.html":{}}}],["refresh.service.ts:246",{"_index":363,"title":{},"body":{"injectables/AdminJwtRefreshService.html":{}}}],["refresh.service.ts:251",{"_index":2471,"title":{},"body":{"injectables/OwnerJwtRefreshService.html":{}}}],["refresh.service.ts:271",{"_index":352,"title":{},"body":{"injectables/AdminJwtRefreshService.html":{}}}],["refresh.service.ts:276",{"_index":2464,"title":{},"body":{"injectables/OwnerJwtRefreshService.html":{}}}],["refresh.service.ts:28",{"_index":3264,"title":{},"body":{"injectables/UserJwtRefreshTokenService.html":{}}}],["refresh.service.ts:284",{"_index":349,"title":{},"body":{"injectables/AdminJwtRefreshService.html":{}}}],["refresh.service.ts:289",{"_index":2463,"title":{},"body":{"injectables/OwnerJwtRefreshService.html":{}}}],["refresh.service.ts:30",{"_index":342,"title":{},"body":{"injectables/AdminJwtRefreshService.html":{}}}],["refresh.service.ts:33",{"_index":2457,"title":{},"body":{"injectables/OwnerJwtRefreshService.html":{}}}],["refresh.service.ts:37",{"_index":3269,"title":{},"body":{"injectables/UserJwtRefreshTokenService.html":{}}}],["refresh.service.ts:40",{"_index":355,"title":{},"body":{"injectables/AdminJwtRefreshService.html":{}}}],["refresh.service.ts:43",{"_index":2465,"title":{},"body":{"injectables/OwnerJwtRefreshService.html":{}}}],["refresh.service.ts:52",{"_index":3280,"title":{},"body":{"injectables/UserJwtRefreshTokenService.html":{}}}],["refresh.service.ts:55",{"_index":368,"title":{},"body":{"injectables/AdminJwtRefreshService.html":{}}}],["refresh.service.ts:58",{"_index":2476,"title":{},"body":{"injectables/OwnerJwtRefreshService.html":{}}}],["refresh.service.ts:70",{"_index":3271,"title":{},"body":{"injectables/UserJwtRefreshTokenService.html":{}}}],["refresh.service.ts:73",{"_index":359,"title":{},"body":{"injectables/AdminJwtRefreshService.html":{}}}],["refresh.service.ts:76",{"_index":2467,"title":{},"body":{"injectables/OwnerJwtRefreshService.html":{}}}],["refresh_token_not_provided",{"_index":276,"title":{},"body":{"guards/AdminGuard.html":{},"injectables/InitializeUserMiddleware.html":{},"guards/OwnerAdminGuard.html":{},"guards/UserGuard.html":{}}}],["refreshauthguard",{"_index":1276,"title":{"guards/RefreshAuthGuard.html":{}},"body":{"controllers/AuthController.html":{},"guards/RefreshAuthGuard.html":{}}}],["refreshing",{"_index":1253,"title":{},"body":{"controllers/AuthController.html":{}}}],["refreshpayload",{"_index":303,"title":{},"body":{"guards/AdminGuard.html":{},"guards/OwnerAdminGuard.html":{},"guards/UserGuard.html":{}}}],["refreshpayload.roles.some",{"_index":305,"title":{},"body":{"guards/AdminGuard.html":{},"guards/OwnerAdminGuard.html":{},"guards/UserGuard.html":{}}}],["refreshtoken",{"_index":292,"title":{},"body":{"guards/AdminGuard.html":{},"interfaces/AuthUser.html":{},"interfaces/CodeDto.html":{},"injectables/InitializeUserMiddleware.html":{},"guards/OwnerAdminGuard.html":{},"interfaces/Payload.html":{},"interfaces/ReturnedAdmin.html":{},"interfaces/ReturnedOwner.html":{},"interfaces/ReturnedUser.html":{},"interfaces/Tokens.html":{},"guards/UserGuard.html":{}}}],["refreshtoken.deleted",{"_index":3173,"title":{},"body":{"injectables/TasksService.html":{}}}],["refreshtokenid",{"_index":3120,"title":{},"body":{"injectables/TasksService.html":{}}}],["registerdecorator",{"_index":2263,"title":{},"body":{"classes/MatchConstraint.html":{}}}],["rejectunauthorized",{"_index":2079,"title":{},"body":{"modules/MailModule.html":{}}}],["relatedpropertyname",{"_index":2272,"title":{},"body":{"classes/MatchConstraint.html":{}}}],["relatedvalue",{"_index":2274,"title":{},"body":{"classes/MatchConstraint.html":{}}}],["removelistener",{"_index":1669,"title":{},"body":{"modules/CoreModule.html":{}}}],["removetoken",{"_index":332,"title":{},"body":{"injectables/AdminJwtRefreshService.html":{},"injectables/OwnerJwtRefreshService.html":{},"injectables/UserJwtRefreshTokenService.html":{}}}],["removetoken(adminrefreshtoken",{"_index":360,"title":{},"body":{"injectables/AdminJwtRefreshService.html":{}}}],["removetoken(ownerrefreshtoken",{"_index":2468,"title":{},"body":{"injectables/OwnerJwtRefreshService.html":{}}}],["removetoken(userrefreshtoken",{"_index":3272,"title":{},"body":{"injectables/UserJwtRefreshTokenService.html":{}}}],["removetokenintime",{"_index":333,"title":{},"body":{"injectables/AdminJwtRefreshService.html":{},"injectables/OwnerJwtRefreshService.html":{},"injectables/UserJwtRefreshTokenService.html":{}}}],["removetokenintime(adminrefreshtokenid",{"_index":362,"title":{},"body":{"injectables/AdminJwtRefreshService.html":{}}}],["removetokenintime(ownerrefreshtokenid",{"_index":2470,"title":{},"body":{"injectables/OwnerJwtRefreshService.html":{}}}],["removetokenintime(userrefreshtokenid",{"_index":3274,"title":{},"body":{"injectables/UserJwtRefreshTokenService.html":{}}}],["renderpath",{"_index":1179,"title":{},"body":{"modules/AppModule.html":{}}}],["replstart",{"_index":3580,"title":{},"body":{"miscellaneous/functions.html":{}}}],["reply",{"_index":2081,"title":{},"body":{"modules/MailModule.html":{}}}],["repository",{"_index":3601,"title":{},"body":{"index.html":{}}}],["req",{"_index":29,"title":{},"body":{"injectables/ActivateMiddleware.html":{},"guards/AddContentGuard.html":{},"guards/AdminGuard.html":{},"injectables/AdminUserMiddleware.html":{},"controllers/AppController.html":{},"controllers/AuthController.html":{},"guards/AuthFerfershGuard.html":{},"injectables/AuthMiddleware.html":{},"injectables/CorsMiddleware.html":{},"guards/EditContentGuard.html":{},"guards/EditWebsiteGuard.html":{},"injectables/FilesService.html":{},"injectables/InitializeEmailMiddleware.html":{},"injectables/InitializeUserMiddleware.html":{},"guards/JwtAuthGuard.html":{},"injectables/LocationMiddleware.html":{},"guards/OwnerAdminGuard.html":{},"controllers/ProductController.html":{},"injectables/ProductMiddleware.html":{},"guards/RefreshAuthGuard.html":{},"interfaces/RequestHeaders.html":{},"classes/RequestValidator.html":{},"guards/RolesGuard.html":{},"injectables/ThrottlerBehindProxyGuard.html":{},"injectables/UserAdminMiddleware.html":{},"guards/UserGuard.html":{},"injectables/UserMiddleware.html":{},"injectables/UserMiddleware-1.html":{},"controllers/UsersController.html":{},"interfaces/fileCreated.html":{}}}],["req.body",{"_index":2925,"title":{},"body":{"classes/RequestValidator.html":{}}}],["req.body.activationlink",{"_index":839,"title":{},"body":{"injectables/AdminUserMiddleware.html":{},"injectables/UserAdminMiddleware.html":{}}}],["req.body.password",{"_index":838,"title":{},"body":{"injectables/AdminUserMiddleware.html":{},"injectables/UserAdminMiddleware.html":{}}}],["req.body.title",{"_index":1939,"title":{},"body":{"injectables/FilesService.html":{},"interfaces/fileCreated.html":{}}}],["req.headers.authorization",{"_index":2030,"title":{},"body":{"guards/JwtAuthGuard.html":{},"guards/RefreshAuthGuard.html":{},"guards/RolesGuard.html":{}}}],["req.headers['user",{"_index":1332,"title":{},"body":{"injectables/AuthMiddleware.html":{},"injectables/ProductMiddleware.html":{},"injectables/UserMiddleware.html":{},"injectables/UserMiddleware-1.html":{}}}],["req.ip",{"_index":3223,"title":{},"body":{"injectables/ThrottlerBehindProxyGuard.html":{}}}],["req.ips.length",{"_index":3221,"title":{},"body":{"injectables/ThrottlerBehindProxyGuard.html":{}}}],["req.ips[0",{"_index":3222,"title":{},"body":{"injectables/ThrottlerBehindProxyGuard.html":{}}}],["req.method",{"_index":1709,"title":{},"body":{"injectables/CorsMiddleware.html":{},"interfaces/RequestHeaders.html":{}}}],["req.params?.link",{"_index":62,"title":{},"body":{"injectables/ActivateMiddleware.html":{}}}],["req.payload",{"_index":2035,"title":{},"body":{"guards/JwtAuthGuard.html":{},"guards/RolesGuard.html":{}}}],["req?.body?.addcontent",{"_index":830,"title":{},"body":{"injectables/AdminUserMiddleware.html":{},"injectables/UserAdminMiddleware.html":{}}}],["req?.body?.editcontent",{"_index":831,"title":{},"body":{"injectables/AdminUserMiddleware.html":{},"injectables/UserAdminMiddleware.html":{}}}],["req?.body?.editwebsite",{"_index":832,"title":{},"body":{"injectables/AdminUserMiddleware.html":{},"injectables/UserAdminMiddleware.html":{}}}],["req?.body?.email",{"_index":826,"title":{},"body":{"injectables/AdminUserMiddleware.html":{},"injectables/InitializeEmailMiddleware.html":{},"injectables/UserAdminMiddleware.html":{}}}],["req?.body?.isadmin",{"_index":829,"title":{},"body":{"injectables/AdminUserMiddleware.html":{},"injectables/UserAdminMiddleware.html":{}}}],["req?.body?.name",{"_index":824,"title":{},"body":{"injectables/AdminUserMiddleware.html":{},"injectables/UserAdminMiddleware.html":{}}}],["req?.body?.phonenumber",{"_index":827,"title":{},"body":{"injectables/AdminUserMiddleware.html":{},"injectables/UserAdminMiddleware.html":{}}}],["req?.body?.surname",{"_index":825,"title":{},"body":{"injectables/AdminUserMiddleware.html":{},"injectables/UserAdminMiddleware.html":{}}}],["req?.body?.title",{"_index":1943,"title":{},"body":{"injectables/FilesService.html":{},"interfaces/fileCreated.html":{}}}],["req?.cookies['refreshtoken",{"_index":293,"title":{},"body":{"guards/AdminGuard.html":{},"injectables/InitializeUserMiddleware.html":{},"guards/OwnerAdminGuard.html":{},"guards/UserGuard.html":{}}}],["req?.payload",{"_index":109,"title":{},"body":{"guards/AddContentGuard.html":{},"guards/AdminGuard.html":{},"guards/AuthFerfershGuard.html":{},"guards/EditContentGuard.html":{},"guards/EditWebsiteGuard.html":{},"guards/OwnerAdminGuard.html":{},"guards/UserGuard.html":{}}}],["req?.signedcookies['user",{"_index":1324,"title":{},"body":{"guards/AuthFerfershGuard.html":{}}}],["req['codedto",{"_index":2000,"title":{},"body":{"injectables/InitializeEmailMiddleware.html":{}}}],["req['location",{"_index":2053,"title":{},"body":{"injectables/LocationMiddleware.html":{}}}],["req['type",{"_index":111,"title":{},"body":{"guards/AddContentGuard.html":{},"guards/AuthFerfershGuard.html":{},"guards/EditContentGuard.html":{},"guards/EditWebsiteGuard.html":{},"injectables/InitializeUserMiddleware.html":{},"guards/OwnerAdminGuard.html":{}}}],["req['useragent",{"_index":1341,"title":{},"body":{"injectables/AuthMiddleware.html":{},"injectables/ProductMiddleware.html":{},"injectables/UserMiddleware.html":{},"injectables/UserMiddleware-1.html":{}}}],["request",{"_index":22,"title":{},"body":{"injectables/ActivateMiddleware.html":{},"guards/AdminGuard.html":{},"injectables/AdminJwtRefreshService.html":{},"injectables/AdminService.html":{},"injectables/AdminUserMiddleware.html":{},"classes/ApiErrorExceptionFilter.html":{},"classes/ApiException.html":{},"classes/ApiExceptionFilter.html":{},"controllers/AppController.html":{},"controllers/AuthController.html":{},"injectables/AuthMiddleware.html":{},"injectables/CategoriesService.html":{},"injectables/CorsMiddleware.html":{},"injectables/FilesService.html":{},"classes/HttpExceptionFilter.html":{},"injectables/InitializeEmailMiddleware.html":{},"injectables/InitializeUserMiddleware.html":{},"injectables/LocationMiddleware.html":{},"guards/OwnerAdminGuard.html":{},"injectables/OwnerJwtRefreshService.html":{},"injectables/OwnerService.html":{},"controllers/ProductController.html":{},"injectables/ProductMiddleware.html":{},"guards/RefreshAuthGuard.html":{},"interfaces/RequestHeaders.html":{},"classes/RequestValidator.html":{},"injectables/UserAdminMiddleware.html":{},"guards/UserGuard.html":{},"injectables/UserJwtRefreshTokenService.html":{},"injectables/UserMiddleware.html":{},"injectables/UserMiddleware-1.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"interfaces/fileCreated.html":{}}}],["request.signedcookies['_id",{"_index":1048,"title":{},"body":{"controllers/AppController.html":{}}}],["request.url",{"_index":904,"title":{},"body":{"classes/ApiErrorExceptionFilter.html":{},"classes/ApiExceptionFilter.html":{},"classes/HttpExceptionFilter.html":{}}}],["requested",{"_index":884,"title":{},"body":{"classes/ApiError.html":{},"classes/BadRequestError.html":{},"injectables/CorsMiddleware.html":{},"classes/NotFoundError.html":{},"interfaces/RequestHeaders.html":{}}}],["requestheaders",{"_index":1677,"title":{"interfaces/RequestHeaders.html":{}},"body":{"injectables/CorsMiddleware.html":{},"interfaces/RequestHeaders.html":{}}}],["requestmethod",{"_index":498,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CategoriesModule.html":{},"modules/ProductModule.html":{},"modules/ReviewsModule.html":{},"modules/RolesModule.html":{},"modules/UsersModule.html":{}}}],["requestmethod.all",{"_index":1215,"title":{},"body":{"modules/AppModule.html":{},"modules/ProductModule.html":{}}}],["requestmethod.delete",{"_index":1549,"title":{},"body":{"modules/CategoriesModule.html":{},"modules/ProductModule.html":{},"modules/ReviewsModule.html":{}}}],["requestmethod.get",{"_index":567,"title":{},"body":{"modules/AdminModule.html":{},"modules/AuthModule.html":{},"modules/ProductModule.html":{},"modules/RolesModule.html":{},"modules/UsersModule.html":{}}}],["requestmethod.patch",{"_index":572,"title":{},"body":{"modules/AdminModule.html":{},"modules/AuthModule.html":{},"modules/CategoriesModule.html":{},"modules/ProductModule.html":{},"modules/UsersModule.html":{}}}],["requestmethod.post",{"_index":570,"title":{},"body":{"modules/AdminModule.html":{},"modules/AuthModule.html":{},"modules/ProductModule.html":{}}}],["requestmethod.put",{"_index":1373,"title":{},"body":{"modules/AuthModule.html":{},"modules/CategoriesModule.html":{},"modules/ProductModule.html":{},"modules/RolesModule.html":{}}}],["requesttimeoutexception",{"_index":1973,"title":{},"body":{"injectables/GlobalInterceptor.html":{}}}],["requestvalidator",{"_index":524,"title":{"classes/RequestValidator.html":{}},"body":{"modules/AdminModule.html":{},"modules/AuthModule.html":{},"classes/RequestValidator.html":{},"modules/ReviewsModule.html":{},"modules/UsersModule.html":{}}}],["requiredroles",{"_index":288,"title":{},"body":{"guards/AdminGuard.html":{},"guards/OwnerAdminGuard.html":{},"guards/RolesGuard.html":{},"guards/UserGuard.html":{}}}],["requiredroles.includes(role.value",{"_index":306,"title":{},"body":{"guards/AdminGuard.html":{},"guards/OwnerAdminGuard.html":{},"guards/RolesGuard.html":{},"guards/UserGuard.html":{}}}],["res",{"_index":23,"title":{},"body":{"injectables/ActivateMiddleware.html":{},"injectables/AdminUserMiddleware.html":{},"controllers/AppController.html":{},"controllers/AuthController.html":{},"injectables/AuthMiddleware.html":{},"injectables/CorsMiddleware.html":{},"injectables/InitializeEmailMiddleware.html":{},"injectables/InitializeUserMiddleware.html":{},"injectables/LocationMiddleware.html":{},"injectables/ProductMiddleware.html":{},"interfaces/RequestHeaders.html":{},"classes/RequestValidator.html":{},"injectables/UserAdminMiddleware.html":{},"injectables/UserMiddleware.html":{},"injectables/UserMiddleware-1.html":{},"controllers/UsersController.html":{}}}],["res.header",{"_index":1695,"title":{},"body":{"injectables/CorsMiddleware.html":{},"interfaces/RequestHeaders.html":{}}}],["res.setheader",{"_index":1691,"title":{},"body":{"injectables/CorsMiddleware.html":{},"injectables/InitializeUserMiddleware.html":{},"interfaces/RequestHeaders.html":{}}}],["res.setheader('access",{"_index":1333,"title":{},"body":{"injectables/AuthMiddleware.html":{},"injectables/CorsMiddleware.html":{},"injectables/ProductMiddleware.html":{},"interfaces/RequestHeaders.html":{},"injectables/UserMiddleware.html":{},"injectables/UserMiddleware-1.html":{}}}],["res.setheader('location",{"_index":2055,"title":{},"body":{"injectables/LocationMiddleware.html":{}}}],["res.setheader('passed",{"_index":2936,"title":{},"body":{"classes/RequestValidator.html":{}}}],["res.setheader('timing",{"_index":1337,"title":{},"body":{"injectables/AuthMiddleware.html":{},"injectables/ProductMiddleware.html":{},"injectables/UserMiddleware.html":{},"injectables/UserMiddleware-1.html":{}}}],["res.setheader('x",{"_index":69,"title":{},"body":{"injectables/ActivateMiddleware.html":{},"injectables/InitializeEmailMiddleware.html":{},"injectables/ProductMiddleware.html":{},"injectables/UserMiddleware.html":{},"injectables/UserMiddleware-1.html":{}}}],["res.status(204).end",{"_index":1710,"title":{},"body":{"injectables/CorsMiddleware.html":{},"interfaces/RequestHeaders.html":{}}}],["reset",{"_index":485,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CartModule.html":{},"modules/CategoriesModule.html":{},"modules/CoreModule.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"modules/OrdersModule.html":{},"modules/OwnerModule.html":{},"modules/ProductModule.html":{},"modules/ReviewsModule.html":{},"modules/RolesModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["reset_time_expired",{"_index":722,"title":{},"body":{"injectables/AdminService.html":{},"classes/ApiException.html":{},"injectables/OwnerService.html":{},"injectables/UsersService.html":{}}}],["resetdto",{"_index":704,"title":{"classes/ResetDto.html":{}},"body":{"injectables/AdminService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/OwnerService.html":{},"classes/ResetDto.html":{},"injectables/UsersService.html":{}}}],["resetdto.email",{"_index":805,"title":{},"body":{"injectables/AdminService.html":{},"injectables/OwnerService.html":{},"injectables/UsersService.html":{}}}],["resetdto.password",{"_index":810,"title":{},"body":{"injectables/AdminService.html":{},"injectables/OwnerService.html":{},"injectables/UsersService.html":{}}}],["resetpassword",{"_index":676,"title":{},"body":{"injectables/AdminService.html":{},"controllers/AuthController.html":{},"injectables/OwnerService.html":{},"injectables/UsersService.html":{}}}],["resetpassword(resetdto",{"_index":703,"title":{},"body":{"injectables/AdminService.html":{},"controllers/AuthController.html":{},"injectables/OwnerService.html":{},"injectables/UsersService.html":{}}}],["resetting",{"_index":1256,"title":{},"body":{"controllers/AuthController.html":{},"injectables/MailService.html":{}}}],["resetting[locale",{"_index":2255,"title":{},"body":{"injectables/MailService.html":{}}}],["resettoken",{"_index":75,"title":{},"body":{"injectables/ActivateMiddleware.html":{},"classes/Owner.html":{}}}],["resettoken'})@column({type",{"_index":2387,"title":{},"body":{"classes/Owner.html":{}}}],["resettokenexpiration",{"_index":2344,"title":{},"body":{"classes/Owner.html":{}}}],["resettokenexpiration'})@column({type",{"_index":2389,"title":{},"body":{"classes/Owner.html":{}}}],["response",{"_index":24,"title":{},"body":{"injectables/ActivateMiddleware.html":{},"injectables/AdminUserMiddleware.html":{},"classes/ApiErrorExceptionFilter.html":{},"classes/ApiExceptionFilter.html":{},"controllers/AppController.html":{},"controllers/AuthController.html":{},"injectables/AuthMiddleware.html":{},"injectables/CorsMiddleware.html":{},"classes/HttpExceptionFilter.html":{},"injectables/InitializeEmailMiddleware.html":{},"injectables/InitializeUserMiddleware.html":{},"injectables/LocationMiddleware.html":{},"controllers/ProductController.html":{},"injectables/ProductMiddleware.html":{},"interfaces/RequestHeaders.html":{},"classes/RequestValidator.html":{},"injectables/UserAdminMiddleware.html":{},"injectables/UserMiddleware.html":{},"injectables/UserMiddleware-1.html":{},"controllers/UsersController.html":{},"classes/ValidationException.html":{}}}],["response.cookie('_id",{"_index":1051,"title":{},"body":{"controllers/AppController.html":{}}}],["response.json",{"_index":1063,"title":{},"body":{"controllers/AppController.html":{}}}],["response.json(res.country.isocode",{"_index":1072,"title":{},"body":{"controllers/AppController.html":{}}}],["response.status(status).json",{"_index":1984,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["response.status(status).send",{"_index":899,"title":{},"body":{"classes/ApiErrorExceptionFilter.html":{},"classes/ApiExceptionFilter.html":{}}}],["responsebody",{"_index":862,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["restarting",{"_index":994,"title":{},"body":{"injectables/AppClusterService.html":{},"interfaces/Msg.html":{}}}],["results",{"_index":78,"title":{},"body":{"injectables/ActivateMiddleware.html":{},"guards/AddContentGuard.html":{},"classes/AddRoleDto.html":{},"controllers/AdminController.html":{},"guards/AdminGuard.html":{},"interfaces/AdminInterface.html":{},"injectables/AdminJwtRefreshService.html":{},"modules/AdminModule.html":{},"classes/AdminRefreshToken.html":{},"interfaces/AdminRefreshTokenCreationAttrbs.html":{},"injectables/AdminService.html":{},"injectables/AdminUserMiddleware.html":{},"interfaces/AdmincreationAttrbs.html":{},"classes/AllExceptionsFilter.html":{},"classes/ApiError.html":{},"classes/ApiErrorExceptionFilter.html":{},"classes/ApiException.html":{},"classes/ApiExceptionFilter.html":{},"injectables/AppClusterService.html":{},"controllers/AppController.html":{},"injectables/AppListener.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"guards/AuthFerfershGuard.html":{},"injectables/AuthMiddleware.html":{},"modules/AuthModule.html":{},"interfaces/AuthUser.html":{},"classes/BadRequestError.html":{},"classes/BanUserDto.html":{},"classes/BookmarksProducts.html":{},"controllers/CardController.html":{},"injectables/CardService.html":{},"classes/Cart.html":{},"modules/CartModule.html":{},"classes/CartProduct.html":{},"classes/CartProduct-1.html":{},"controllers/CategoriesController.html":{},"modules/CategoriesModule.html":{},"injectables/CategoriesService.html":{},"classes/Category.html":{},"interfaces/CategoryCreationAtrb.html":{},"classes/ChangeDto.html":{},"interfaces/CodeDto.html":{},"modules/CoreModule.html":{},"injectables/CorsMiddleware.html":{},"classes/CreateAccessTokenDto.html":{},"classes/CreateAdminDto.html":{},"classes/CreateAdminRefreshTokenDto.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateOwnerDto.html":{},"classes/CreateOwnerRefreshTokenDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateReviewDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserRefreshTokenDto.html":{},"guards/EditContentGuard.html":{},"guards/EditWebsiteGuard.html":{},"injectables/FilesService.html":{},"classes/GarbageCollectingProcessor.html":{},"injectables/GlobalInterceptor.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/ITelegramModuleAsyncOptions.html":{},"interfaces/ITelegramOptions.html":{},"injectables/InitializeEmailMiddleware.html":{},"interfaces/InitializeUser.html":{},"injectables/InitializeUserMiddleware.html":{},"guards/JwtAuthGuard.html":{},"classes/JwtRefreshTokenDeletedEvent.html":{},"injectables/LocationMiddleware.html":{},"classes/LoginDto.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"classes/MatchConstraint.html":{},"interfaces/Msg.html":{},"classes/Nested.html":{},"classes/Nested-1.html":{},"classes/NotFoundError.html":{},"classes/Order.html":{},"classes/OrderProduct.html":{},"controllers/OrdersController.html":{},"modules/OrdersModule.html":{},"injectables/OrdersService.html":{},"classes/Owner.html":{},"guards/OwnerAdminGuard.html":{},"interfaces/OwnerCreationAttrbs.html":{},"injectables/OwnerJwtRefreshService.html":{},"modules/OwnerModule.html":{},"classes/OwnerRefreshToken.html":{},"interfaces/OwnerRefreshTokenCreationAttrbs.html":{},"injectables/OwnerService.html":{},"classes/ParseFormDataJsonPipe.html":{},"injectables/ParseJsonPipe.html":{},"interfaces/Payload.html":{},"classes/Product.html":{},"classes/Product-1.html":{},"classes/ProductCategories.html":{},"controllers/ProductController.html":{},"interfaces/ProductCreationAttrs.html":{},"injectables/ProductMiddleware.html":{},"modules/ProductModule.html":{},"classes/ProductReviews.html":{},"guards/RefreshAuthGuard.html":{},"interfaces/RequestHeaders.html":{},"classes/RequestValidator.html":{},"classes/ResetDto.html":{},"interfaces/ReturnedAdmin.html":{},"interfaces/ReturnedCategory.html":{},"interfaces/ReturnedOwner.html":{},"interfaces/ReturnedProduct.html":{},"interfaces/ReturnedProducts.html":{},"interfaces/ReturnedReview.html":{},"interfaces/ReturnedUser.html":{},"classes/Review.html":{},"interfaces/ReviewCreationAtrb.html":{},"controllers/ReviewsController.html":{},"modules/ReviewsModule.html":{},"injectables/ReviewsService.html":{},"classes/Role.html":{},"interfaces/RolecreationAttrbs.html":{},"controllers/RolesController.html":{},"guards/RolesGuard.html":{},"modules/RolesModule.html":{},"injectables/RolesService.html":{},"classes/SignupDto.html":{},"injectables/TasksService.html":{},"modules/TelegramModule.html":{},"injectables/TelegramService.html":{},"injectables/ThrottlerBehindProxyGuard.html":{},"interfaces/Tokens.html":{},"classes/UpdateCategoryDto.html":{},"classes/UpdateProductDto.html":{},"classes/UpdateUserDto.html":{},"injectables/UserAdminMiddleware.html":{},"guards/UserGuard.html":{},"interfaces/UserInterface.html":{},"injectables/UserJwtRefreshTokenService.html":{},"injectables/UserMiddleware.html":{},"injectables/UserMiddleware-1.html":{},"interfaces/UserRefreshCreationAttrbs.html":{},"classes/UserRefreshToken.html":{},"classes/UserRoles.html":{},"interfaces/UsercreationAttrbs.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"injectables/ValidateDto.html":{},"interfaces/ValidateUser.html":{},"classes/ValidationException.html":{},"classes/WatchedProducts.html":{},"dependencies.html":{},"interfaces/fileCreated.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{}}}],["retryattempts",{"_index":1213,"title":{},"body":{"modules/AppModule.html":{}}}],["retrydelay",{"_index":1212,"title":{},"body":{"modules/AppModule.html":{}}}],["retryprocessdelay",{"_index":1174,"title":{},"body":{"modules/AppModule.html":{}}}],["return",{"_index":107,"title":{},"body":{"guards/AddContentGuard.html":{},"controllers/AdminController.html":{},"guards/AdminGuard.html":{},"injectables/AdminJwtRefreshService.html":{},"classes/AdminRefreshToken.html":{},"injectables/AdminService.html":{},"injectables/AdminUserMiddleware.html":{},"controllers/AppController.html":{},"injectables/AppListener.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"guards/AuthFerfershGuard.html":{},"injectables/AuthMiddleware.html":{},"classes/Cart.html":{},"classes/CartProduct.html":{},"classes/CartProduct-1.html":{},"controllers/CategoriesController.html":{},"injectables/CategoriesService.html":{},"classes/Category.html":{},"injectables/CorsMiddleware.html":{},"guards/EditContentGuard.html":{},"guards/EditWebsiteGuard.html":{},"injectables/FilesService.html":{},"injectables/GlobalInterceptor.html":{},"injectables/InitializeEmailMiddleware.html":{},"injectables/InitializeUserMiddleware.html":{},"guards/JwtAuthGuard.html":{},"injectables/LocationMiddleware.html":{},"classes/MatchConstraint.html":{},"classes/Order.html":{},"classes/OrderProduct.html":{},"classes/Owner.html":{},"guards/OwnerAdminGuard.html":{},"injectables/OwnerJwtRefreshService.html":{},"classes/OwnerRefreshToken.html":{},"injectables/OwnerService.html":{},"classes/ParseFormDataJsonPipe.html":{},"injectables/ParseJsonPipe.html":{},"classes/Product.html":{},"classes/Product-1.html":{},"controllers/ProductController.html":{},"injectables/ProductMiddleware.html":{},"guards/RefreshAuthGuard.html":{},"interfaces/RequestHeaders.html":{},"classes/RequestValidator.html":{},"controllers/ReviewsController.html":{},"injectables/ReviewsService.html":{},"classes/Role.html":{},"controllers/RolesController.html":{},"guards/RolesGuard.html":{},"injectables/RolesService.html":{},"injectables/TasksService.html":{},"modules/TelegramModule.html":{},"injectables/ThrottlerBehindProxyGuard.html":{},"injectables/UserAdminMiddleware.html":{},"guards/UserGuard.html":{},"injectables/UserJwtRefreshTokenService.html":{},"injectables/UserMiddleware.html":{},"injectables/UserMiddleware-1.html":{},"classes/UserRefreshToken.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"injectables/ValidateDto.html":{},"interfaces/fileCreated.html":{}}}],["returnedadmin",{"_index":1380,"title":{"interfaces/ReturnedAdmin.html":{}},"body":{"interfaces/AuthUser.html":{},"interfaces/CodeDto.html":{},"interfaces/Payload.html":{},"interfaces/ReturnedAdmin.html":{},"interfaces/ReturnedOwner.html":{},"interfaces/ReturnedUser.html":{},"interfaces/Tokens.html":{}}}],["returnedcategory",{"_index":1525,"title":{"interfaces/ReturnedCategory.html":{}},"body":{"controllers/CategoriesController.html":{},"injectables/CategoriesService.html":{},"interfaces/CategoryCreationAtrb.html":{},"interfaces/ProductCreationAttrs.html":{},"interfaces/ReturnedCategory.html":{},"interfaces/ReturnedProduct.html":{},"interfaces/ReturnedProducts.html":{},"interfaces/ReturnedReview.html":{},"interfaces/ReviewCreationAtrb.html":{}}}],["returnedowner",{"_index":1381,"title":{"interfaces/ReturnedOwner.html":{}},"body":{"interfaces/AuthUser.html":{},"interfaces/CodeDto.html":{},"interfaces/Payload.html":{},"interfaces/ReturnedAdmin.html":{},"interfaces/ReturnedOwner.html":{},"interfaces/ReturnedUser.html":{},"interfaces/Tokens.html":{}}}],["returnedproduct",{"_index":1626,"title":{"interfaces/ReturnedProduct.html":{}},"body":{"interfaces/CategoryCreationAtrb.html":{},"controllers/ProductController.html":{},"interfaces/ProductCreationAttrs.html":{},"interfaces/ReturnedCategory.html":{},"interfaces/ReturnedProduct.html":{},"interfaces/ReturnedProducts.html":{},"interfaces/ReturnedReview.html":{},"interfaces/ReviewCreationAtrb.html":{}}}],["returnedproducts",{"_index":1628,"title":{"interfaces/ReturnedProducts.html":{}},"body":{"interfaces/CategoryCreationAtrb.html":{},"controllers/ProductController.html":{},"interfaces/ProductCreationAttrs.html":{},"interfaces/ReturnedCategory.html":{},"interfaces/ReturnedProduct.html":{},"interfaces/ReturnedProducts.html":{},"interfaces/ReturnedReview.html":{},"interfaces/ReviewCreationAtrb.html":{}}}],["returnedreview",{"_index":1625,"title":{"interfaces/ReturnedReview.html":{}},"body":{"interfaces/CategoryCreationAtrb.html":{},"interfaces/ProductCreationAttrs.html":{},"interfaces/ReturnedCategory.html":{},"interfaces/ReturnedProduct.html":{},"interfaces/ReturnedProducts.html":{},"interfaces/ReturnedReview.html":{},"interfaces/ReviewCreationAtrb.html":{}}}],["returneduser",{"_index":1379,"title":{"interfaces/ReturnedUser.html":{}},"body":{"interfaces/AuthUser.html":{},"interfaces/CodeDto.html":{},"interfaces/Payload.html":{},"interfaces/ReturnedAdmin.html":{},"interfaces/ReturnedOwner.html":{},"interfaces/ReturnedUser.html":{},"interfaces/Tokens.html":{}}}],["returns",{"_index":30,"title":{},"body":{"injectables/ActivateMiddleware.html":{},"guards/AddContentGuard.html":{},"controllers/AdminController.html":{},"guards/AdminGuard.html":{},"injectables/AdminJwtRefreshService.html":{},"modules/AdminModule.html":{},"classes/AdminRefreshToken.html":{},"injectables/AdminService.html":{},"injectables/AdminUserMiddleware.html":{},"classes/AllExceptionsFilter.html":{},"classes/ApiErrorExceptionFilter.html":{},"classes/ApiException.html":{},"classes/ApiExceptionFilter.html":{},"injectables/AppClusterService.html":{},"controllers/AppController.html":{},"injectables/AppListener.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"guards/AuthFerfershGuard.html":{},"injectables/AuthMiddleware.html":{},"modules/AuthModule.html":{},"classes/Cart.html":{},"classes/CartProduct.html":{},"classes/CartProduct-1.html":{},"controllers/CategoriesController.html":{},"modules/CategoriesModule.html":{},"injectables/CategoriesService.html":{},"classes/Category.html":{},"injectables/CorsMiddleware.html":{},"guards/EditContentGuard.html":{},"guards/EditWebsiteGuard.html":{},"injectables/FilesService.html":{},"classes/GarbageCollectingProcessor.html":{},"injectables/GlobalInterceptor.html":{},"classes/HttpExceptionFilter.html":{},"injectables/InitializeEmailMiddleware.html":{},"injectables/InitializeUserMiddleware.html":{},"guards/JwtAuthGuard.html":{},"classes/JwtRefreshTokenDeletedEvent.html":{},"injectables/LocationMiddleware.html":{},"injectables/MailService.html":{},"classes/MatchConstraint.html":{},"classes/Order.html":{},"classes/OrderProduct.html":{},"classes/Owner.html":{},"guards/OwnerAdminGuard.html":{},"injectables/OwnerJwtRefreshService.html":{},"classes/OwnerRefreshToken.html":{},"injectables/OwnerService.html":{},"classes/ParseFormDataJsonPipe.html":{},"injectables/ParseJsonPipe.html":{},"classes/Product.html":{},"classes/Product-1.html":{},"controllers/ProductController.html":{},"injectables/ProductMiddleware.html":{},"modules/ProductModule.html":{},"guards/RefreshAuthGuard.html":{},"controllers/ReviewsController.html":{},"modules/ReviewsModule.html":{},"injectables/ReviewsService.html":{},"classes/Role.html":{},"controllers/RolesController.html":{},"guards/RolesGuard.html":{},"modules/RolesModule.html":{},"injectables/RolesService.html":{},"injectables/TasksService.html":{},"modules/TelegramModule.html":{},"injectables/TelegramService.html":{},"injectables/ThrottlerBehindProxyGuard.html":{},"injectables/UserAdminMiddleware.html":{},"guards/UserGuard.html":{},"injectables/UserJwtRefreshTokenService.html":{},"injectables/UserMiddleware.html":{},"injectables/UserMiddleware-1.html":{},"classes/UserRefreshToken.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"injectables/ValidateDto.html":{},"miscellaneous/functions.html":{}}}],["review",{"_index":1135,"title":{"classes/Review.html":{}},"body":{"modules/AppModule.html":{},"interfaces/CategoryCreationAtrb.html":{},"classes/CreateReviewDto.html":{},"classes/Product-1.html":{},"interfaces/ProductCreationAttrs.html":{},"classes/ProductReviews.html":{},"interfaces/ReturnedCategory.html":{},"interfaces/ReturnedProduct.html":{},"interfaces/ReturnedProducts.html":{},"interfaces/ReturnedReview.html":{},"classes/Review.html":{},"interfaces/ReviewCreationAtrb.html":{},"modules/ReviewsModule.html":{},"injectables/ReviewsService.html":{}}}],["review.$add('product",{"_index":3002,"title":{},"body":{"injectables/ReviewsService.html":{}}}],["review.id",{"_index":2998,"title":{},"body":{"injectables/ReviewsService.html":{}}}],["review.model",{"_index":2907,"title":{},"body":{"classes/ProductReviews.html":{}}}],["review.name",{"_index":3009,"title":{},"body":{"injectables/ReviewsService.html":{}}}],["review.productid",{"_index":3000,"title":{},"body":{"injectables/ReviewsService.html":{}}}],["review.review",{"_index":3011,"title":{},"body":{"injectables/ReviewsService.html":{}}}],["review.save",{"_index":3003,"title":{},"body":{"injectables/ReviewsService.html":{}}}],["review.surname",{"_index":3010,"title":{},"body":{"injectables/ReviewsService.html":{}}}],["reviewcreationatrb",{"_index":1624,"title":{"interfaces/ReviewCreationAtrb.html":{}},"body":{"interfaces/CategoryCreationAtrb.html":{},"interfaces/ProductCreationAttrs.html":{},"interfaces/ReturnedCategory.html":{},"interfaces/ReturnedProduct.html":{},"interfaces/ReturnedProducts.html":{},"interfaces/ReturnedReview.html":{},"classes/Review.html":{},"interfaces/ReviewCreationAtrb.html":{}}}],["reviewid",{"_index":2903,"title":{},"body":{"classes/ProductReviews.html":{},"controllers/ReviewsController.html":{},"injectables/ReviewsService.html":{}}}],["reviewrepository",{"_index":2987,"title":{},"body":{"injectables/ReviewsService.html":{}}}],["reviews",{"_index":1627,"title":{},"body":{"interfaces/CategoryCreationAtrb.html":{},"classes/Product-1.html":{},"interfaces/ProductCreationAttrs.html":{},"interfaces/ReturnedCategory.html":{},"interfaces/ReturnedProduct.html":{},"interfaces/ReturnedProducts.html":{},"interfaces/ReturnedReview.html":{},"classes/Review.html":{},"interfaces/ReviewCreationAtrb.html":{},"controllers/ReviewsController.html":{}}}],["reviews.controller",{"_index":2980,"title":{},"body":{"modules/ReviewsModule.html":{}}}],["reviews.service",{"_index":2966,"title":{},"body":{"controllers/ReviewsController.html":{},"modules/ReviewsModule.html":{}}}],["reviews/create_review",{"_index":2982,"title":{},"body":{"modules/ReviewsModule.html":{}}}],["reviews/delete_review",{"_index":2983,"title":{},"body":{"modules/ReviewsModule.html":{}}}],["reviews/models/product.reviews.model",{"_index":1138,"title":{},"body":{"modules/AppModule.html":{},"classes/Product-1.html":{},"modules/ProductModule.html":{}}}],["reviews/models/review.model",{"_index":1136,"title":{},"body":{"modules/AppModule.html":{},"classes/Product-1.html":{}}}],["reviews/reviews.module",{"_index":1134,"title":{},"body":{"modules/AppModule.html":{}}}],["reviewscontroller",{"_index":2953,"title":{"controllers/ReviewsController.html":{}},"body":{"controllers/ReviewsController.html":{},"modules/ReviewsModule.html":{}}}],["reviewsmodule",{"_index":1102,"title":{"modules/ReviewsModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ReviewsModule.html":{},"modules.html":{},"overview.html":{}}}],["reviewsservice",{"_index":2965,"title":{"injectables/ReviewsService.html":{}},"body":{"controllers/ReviewsController.html":{},"modules/ReviewsModule.html":{},"injectables/ReviewsService.html":{},"overview.html":{}}}],["rewritepassword",{"_index":677,"title":{},"body":{"injectables/AdminService.html":{},"injectables/OwnerService.html":{},"injectables/UsersService.html":{}}}],["rewritepassword(admin",{"_index":706,"title":{},"body":{"injectables/AdminService.html":{}}}],["rewritepassword(owner",{"_index":2582,"title":{},"body":{"injectables/OwnerService.html":{}}}],["rewritepassword(userid",{"_index":3421,"title":{},"body":{"injectables/UsersService.html":{}}}],["right",{"_index":1742,"title":{},"body":{"classes/CreateAdminDto.html":{},"injectables/MailService.html":{}}}],["right:0px!important",{"_index":2209,"title":{},"body":{"injectables/MailService.html":{}}}],["rights",{"_index":771,"title":{},"body":{"injectables/AdminService.html":{},"injectables/MailService.html":{}}}],["rimraf",{"_index":3563,"title":{},"body":{"dependencies.html":{}}}],["role",{"_index":136,"title":{"classes/Role.html":{}},"body":{"classes/AddRoleDto.html":{},"guards/AdminGuard.html":{},"modules/AdminModule.html":{},"injectables/AdminService.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"interfaces/AuthUser.html":{},"modules/CartModule.html":{},"modules/CategoriesModule.html":{},"interfaces/CodeDto.html":{},"modules/CoreModule.html":{},"classes/CreateAccessTokenDto.html":{},"classes/CreateAdminRefreshTokenDto.html":{},"classes/CreateOwnerRefreshTokenDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUserRefreshTokenDto.html":{},"modules/MailModule.html":{},"modules/OrdersModule.html":{},"classes/Owner.html":{},"guards/OwnerAdminGuard.html":{},"modules/OwnerModule.html":{},"injectables/OwnerService.html":{},"interfaces/Payload.html":{},"modules/ProductModule.html":{},"interfaces/ReturnedAdmin.html":{},"interfaces/ReturnedOwner.html":{},"interfaces/ReturnedUser.html":{},"modules/ReviewsModule.html":{},"classes/Role.html":{},"controllers/RolesController.html":{},"guards/RolesGuard.html":{},"modules/RolesModule.html":{},"injectables/RolesService.html":{},"interfaces/Tokens.html":{},"guards/UserGuard.html":{},"classes/UserRoles.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["role'})@column({type",{"_index":3023,"title":{},"body":{"classes/Role.html":{}}}],["role'})@isstring()@minlength(2)@maxlength(30)@matches(/[a",{"_index":1868,"title":{},"body":{"classes/CreateRoleDto.html":{}}}],["role.create",{"_index":2602,"title":{},"body":{"injectables/OwnerService.html":{}}}],["role.dto",{"_index":3429,"title":{},"body":{"injectables/UsersService.html":{}}}],["role.dto.ts",{"_index":123,"title":{},"body":{"classes/AddRoleDto.html":{}}}],["role.dto.ts:11",{"_index":134,"title":{},"body":{"classes/AddRoleDto.html":{}}}],["role.dto.ts:7",{"_index":138,"title":{},"body":{"classes/AddRoleDto.html":{}}}],["role.findone",{"_index":2600,"title":{},"body":{"injectables/OwnerService.html":{}}}],["role.id",{"_index":778,"title":{},"body":{"injectables/AdminService.html":{},"injectables/OwnerService.html":{},"injectables/UsersService.html":{}}}],["role`s",{"_index":1865,"title":{},"body":{"classes/CreateRoleDto.html":{},"classes/Role.html":{}}}],["rolecreationattrbs",{"_index":2007,"title":{"interfaces/RolecreationAttrbs.html":{}},"body":{"interfaces/InitializeUser.html":{},"classes/Role.html":{},"interfaces/RolecreationAttrbs.html":{},"interfaces/UserInterface.html":{},"interfaces/UserRefreshCreationAttrbs.html":{},"interfaces/UsercreationAttrbs.html":{},"interfaces/ValidateUser.html":{}}}],["roledto",{"_index":3043,"title":{},"body":{"controllers/RolesController.html":{}}}],["roleid",{"_index":3328,"title":{},"body":{"classes/UserRoles.html":{}}}],["roleid'})@foreignkey(undefined)@column({type",{"_index":3332,"title":{},"body":{"classes/UserRoles.html":{}}}],["rolerepository",{"_index":3075,"title":{},"body":{"injectables/RolesService.html":{}}}],["roles",{"_index":215,"title":{},"body":{"controllers/AdminController.html":{},"interfaces/AuthUser.html":{},"controllers/CategoriesController.html":{},"interfaces/CodeDto.html":{},"classes/CreateAccessTokenDto.html":{},"classes/CreateAdminRefreshTokenDto.html":{},"classes/CreateOwnerRefreshTokenDto.html":{},"classes/CreateUserRefreshTokenDto.html":{},"classes/Owner.html":{},"interfaces/Payload.html":{},"controllers/ProductController.html":{},"interfaces/ReturnedAdmin.html":{},"interfaces/ReturnedOwner.html":{},"interfaces/ReturnedUser.html":{},"controllers/ReviewsController.html":{},"classes/Role.html":{},"controllers/RolesController.html":{},"interfaces/Tokens.html":{},"controllers/UsersController.html":{}}}],["roles'})@apiresponse({status",{"_index":3038,"title":{},"body":{"controllers/RolesController.html":{}}}],["roles'})@isarray()@arraynotempty",{"_index":1728,"title":{},"body":{"classes/CreateAccessTokenDto.html":{}}}],["roles('owner",{"_index":249,"title":{},"body":{"controllers/AdminController.html":{},"controllers/CategoriesController.html":{},"controllers/ProductController.html":{},"controllers/ReviewsController.html":{},"controllers/RolesController.html":{},"controllers/UsersController.html":{}}}],["roles('user",{"_index":2842,"title":{},"body":{"controllers/ProductController.html":{},"controllers/UsersController.html":{}}}],["roles.controller",{"_index":3068,"title":{},"body":{"modules/RolesModule.html":{}}}],["roles.model",{"_index":3336,"title":{},"body":{"classes/UserRoles.html":{}}}],["roles.service",{"_index":3049,"title":{},"body":{"controllers/RolesController.html":{},"modules/RolesModule.html":{}}}],["roles/create_role",{"_index":3070,"title":{},"body":{"modules/RolesModule.html":{}}}],["roles/get",{"_index":3071,"title":{},"body":{"modules/RolesModule.html":{}}}],["roles/models/roles.model",{"_index":511,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"interfaces/AuthUser.html":{},"modules/CartModule.html":{},"modules/CategoriesModule.html":{},"interfaces/CodeDto.html":{},"modules/CoreModule.html":{},"classes/CreateAccessTokenDto.html":{},"classes/CreateAdminRefreshTokenDto.html":{},"classes/CreateOwnerRefreshTokenDto.html":{},"classes/CreateUserRefreshTokenDto.html":{},"modules/MailModule.html":{},"modules/OrdersModule.html":{},"classes/Owner.html":{},"modules/OwnerModule.html":{},"injectables/OwnerService.html":{},"interfaces/Payload.html":{},"modules/ProductModule.html":{},"interfaces/ReturnedAdmin.html":{},"interfaces/ReturnedOwner.html":{},"interfaces/ReturnedUser.html":{},"modules/ReviewsModule.html":{},"interfaces/Tokens.html":{},"modules/UsersModule.html":{}}}],["roles/models/user.roles.model",{"_index":513,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CartModule.html":{},"modules/CategoriesModule.html":{},"modules/CoreModule.html":{},"modules/MailModule.html":{},"modules/OrdersModule.html":{},"classes/Owner.html":{},"modules/OwnerModule.html":{},"modules/ProductModule.html":{},"modules/ReviewsModule.html":{},"modules/UsersModule.html":{}}}],["roles/roles.module",{"_index":515,"title":{},"body":{"modules/AdminModule.html":{},"modules/CartModule.html":{},"modules/CategoriesModule.html":{},"modules/MailModule.html":{},"modules/OrdersModule.html":{},"modules/OwnerModule.html":{},"modules/ProductModule.html":{},"modules/ReviewsModule.html":{},"modules/UsersModule.html":{}}}],["roles/roles.service",{"_index":729,"title":{},"body":{"injectables/AdminService.html":{},"injectables/OwnerService.html":{},"injectables/UsersService.html":{}}}],["roles_key",{"_index":283,"title":{},"body":{"guards/AdminGuard.html":{},"guards/OwnerAdminGuard.html":{},"guards/RolesGuard.html":{},"guards/UserGuard.html":{}}}],["rolescontroller",{"_index":3033,"title":{"controllers/RolesController.html":{}},"body":{"controllers/RolesController.html":{},"modules/RolesModule.html":{}}}],["roleservice",{"_index":681,"title":{},"body":{"injectables/AdminService.html":{},"injectables/OwnerService.html":{},"controllers/RolesController.html":{},"injectables/UsersService.html":{}}}],["rolesguard",{"_index":163,"title":{"guards/RolesGuard.html":{}},"body":{"controllers/AdminController.html":{},"controllers/CategoriesController.html":{},"controllers/ProductController.html":{},"controllers/ReviewsController.html":{},"controllers/RolesController.html":{},"guards/RolesGuard.html":{},"controllers/UsersController.html":{}}}],["rolesmodule",{"_index":514,"title":{"modules/RolesModule.html":{}},"body":{"modules/AdminModule.html":{},"modules/CartModule.html":{},"modules/CategoriesModule.html":{},"modules/MailModule.html":{},"modules/OrdersModule.html":{},"modules/OwnerModule.html":{},"modules/ProductModule.html":{},"modules/ReviewsModule.html":{},"modules/RolesModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["rolesservice",{"_index":682,"title":{"injectables/RolesService.html":{}},"body":{"injectables/AdminService.html":{},"injectables/OwnerService.html":{},"controllers/RolesController.html":{},"modules/RolesModule.html":{},"injectables/RolesService.html":{},"injectables/UsersService.html":{},"overview.html":{}}}],["role})@roles('owner",{"_index":3039,"title":{},"body":{"controllers/RolesController.html":{}}}],["rootpath",{"_index":1177,"title":{},"body":{"modules/AppModule.html":{}}}],["row!important",{"_index":2227,"title":{},"body":{"injectables/MailService.html":{}}}],["rs",{"_index":949,"title":{},"body":{"classes/ApiException.html":{},"controllers/AuthController.html":{},"injectables/CategoriesService.html":{},"classes/Category.html":{},"interfaces/CategoryCreationAtrb.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateProductDto.html":{},"injectables/MailService.html":{},"classes/Nested.html":{},"classes/Nested-1.html":{},"classes/Product-1.html":{},"interfaces/ProductCreationAttrs.html":{},"interfaces/ReturnedCategory.html":{},"interfaces/ReturnedProduct.html":{},"interfaces/ReturnedProducts.html":{},"interfaces/ReturnedReview.html":{},"interfaces/ReviewCreationAtrb.html":{},"classes/UpdateCategoryDto.html":{},"classes/UpdateProductDto.html":{}}}],["ru",{"_index":947,"title":{},"body":{"classes/ApiException.html":{},"controllers/AuthController.html":{},"injectables/CategoriesService.html":{},"classes/Category.html":{},"interfaces/CategoryCreationAtrb.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateProductDto.html":{},"injectables/MailService.html":{},"classes/Nested.html":{},"classes/Nested-1.html":{},"classes/Product-1.html":{},"interfaces/ProductCreationAttrs.html":{},"interfaces/ReturnedCategory.html":{},"interfaces/ReturnedProduct.html":{},"interfaces/ReturnedProducts.html":{},"interfaces/ReturnedReview.html":{},"interfaces/ReviewCreationAtrb.html":{},"classes/UpdateCategoryDto.html":{},"classes/UpdateProductDto.html":{}}}],["run",{"_index":3140,"title":{},"body":{"injectables/TasksService.html":{},"index.html":{}}}],["rxjs",{"_index":98,"title":{},"body":{"guards/AddContentGuard.html":{},"guards/AdminGuard.html":{},"controllers/AppController.html":{},"guards/AuthFerfershGuard.html":{},"guards/EditContentGuard.html":{},"guards/EditWebsiteGuard.html":{},"injectables/GlobalInterceptor.html":{},"guards/JwtAuthGuard.html":{},"guards/OwnerAdminGuard.html":{},"guards/RefreshAuthGuard.html":{},"guards/RolesGuard.html":{},"guards/UserGuard.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":1977,"title":{},"body":{"injectables/GlobalInterceptor.html":{}}}],["s",{"_index":2248,"title":{},"body":{"injectables/MailService.html":{}}}],["s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0",{"_index":1738,"title":{},"body":{"classes/CreateAccessTokenDto.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserRefreshTokenDto.html":{},"classes/LoginDto.html":{},"classes/ResetDto.html":{},"classes/SignupDto.html":{}}}],["s\\.]?[0",{"_index":1769,"title":{},"body":{"classes/CreateAdminDto.html":{},"classes/CreateOwnerDto.html":{},"classes/CreateUserDto.html":{},"classes/SignupDto.html":{}}}],["safari/523.34",{"_index":599,"title":{},"body":{"classes/AdminRefreshToken.html":{},"classes/CreateAdminRefreshTokenDto.html":{},"classes/CreateOwnerDto.html":{},"classes/CreateOwnerRefreshTokenDto.html":{},"classes/Owner.html":{},"classes/OwnerRefreshToken.html":{},"injectables/UserJwtRefreshTokenService.html":{}}}],["salt",{"_index":462,"title":{},"body":{"injectables/AdminJwtRefreshService.html":{},"injectables/AdminService.html":{},"controllers/AppController.html":{},"injectables/OwnerJwtRefreshService.html":{},"injectables/OwnerService.html":{},"injectables/UsersService.html":{}}}],["salt_rounds",{"_index":813,"title":{},"body":{"injectables/AdminService.html":{},"injectables/OwnerService.html":{},"injectables/UsersService.html":{}}}],["samesite",{"_index":1056,"title":{},"body":{"controllers/AppController.html":{}}}],["savetoken",{"_index":334,"title":{},"body":{"injectables/AdminJwtRefreshService.html":{},"injectables/OwnerJwtRefreshService.html":{},"injectables/UserJwtRefreshTokenService.html":{}}}],["savetoken(adminid",{"_index":365,"title":{},"body":{"injectables/AdminJwtRefreshService.html":{}}}],["savetoken(ownerid",{"_index":2473,"title":{},"body":{"injectables/OwnerJwtRefreshService.html":{}}}],["savetoken(userid",{"_index":3277,"title":{},"body":{"injectables/UserJwtRefreshTokenService.html":{}}}],["scalable",{"_index":3597,"title":{},"body":{"index.html":{}}}],["schedulemodule",{"_index":1657,"title":{},"body":{"modules/CoreModule.html":{}}}],["schedulemodule.forroot",{"_index":1673,"title":{},"body":{"modules/CoreModule.html":{}}}],["schedulerregistry",{"_index":3105,"title":{},"body":{"injectables/TasksService.html":{}}}],["schema",{"_index":3591,"title":{},"body":{"miscellaneous/functions.html":{}}}],["scope",{"_index":36,"title":{},"body":{"injectables/ActivateMiddleware.html":{},"guards/AddContentGuard.html":{},"guards/AdminGuard.html":{},"injectables/AdminJwtRefreshService.html":{},"injectables/AdminService.html":{},"injectables/AdminUserMiddleware.html":{},"injectables/AppClusterService.html":{},"injectables/AppListener.html":{},"guards/AuthFerfershGuard.html":{},"injectables/AuthMiddleware.html":{},"injectables/CardService.html":{},"injectables/CategoriesService.html":{},"injectables/CorsMiddleware.html":{},"guards/EditContentGuard.html":{},"guards/EditWebsiteGuard.html":{},"injectables/FilesService.html":{},"injectables/InitializeEmailMiddleware.html":{},"injectables/InitializeUserMiddleware.html":{},"guards/JwtAuthGuard.html":{},"injectables/LocationMiddleware.html":{},"injectables/MailService.html":{},"interfaces/Msg.html":{},"injectables/OrdersService.html":{},"guards/OwnerAdminGuard.html":{},"injectables/OwnerJwtRefreshService.html":{},"injectables/OwnerService.html":{},"injectables/ProductMiddleware.html":{},"interfaces/RequestHeaders.html":{},"injectables/ReviewsService.html":{},"guards/RolesGuard.html":{},"injectables/RolesService.html":{},"injectables/TasksService.html":{},"injectables/UserAdminMiddleware.html":{},"guards/UserGuard.html":{},"injectables/UserJwtRefreshTokenService.html":{},"injectables/UserMiddleware.html":{},"injectables/UserMiddleware-1.html":{},"injectables/UsersService.html":{},"interfaces/fileCreated.html":{}}}],["scope.default",{"_index":985,"title":{},"body":{"injectables/AppClusterService.html":{},"injectables/AppListener.html":{},"injectables/FilesService.html":{},"interfaces/Msg.html":{},"injectables/TasksService.html":{},"interfaces/fileCreated.html":{}}}],["scope.request",{"_index":50,"title":{},"body":{"injectables/ActivateMiddleware.html":{},"guards/AddContentGuard.html":{},"guards/AdminGuard.html":{},"injectables/AdminUserMiddleware.html":{},"guards/AuthFerfershGuard.html":{},"injectables/AuthMiddleware.html":{},"injectables/CategoriesService.html":{},"injectables/CorsMiddleware.html":{},"guards/EditContentGuard.html":{},"guards/EditWebsiteGuard.html":{},"injectables/InitializeEmailMiddleware.html":{},"injectables/InitializeUserMiddleware.html":{},"guards/JwtAuthGuard.html":{},"injectables/LocationMiddleware.html":{},"injectables/MailService.html":{},"guards/OwnerAdminGuard.html":{},"injectables/ProductMiddleware.html":{},"interfaces/RequestHeaders.html":{},"guards/RolesGuard.html":{},"injectables/UserAdminMiddleware.html":{},"guards/UserGuard.html":{},"injectables/UserMiddleware.html":{},"injectables/UserMiddleware-1.html":{}}}],["scope.transient",{"_index":396,"title":{},"body":{"injectables/AdminJwtRefreshService.html":{},"injectables/AdminService.html":{},"injectables/CardService.html":{},"injectables/OrdersService.html":{},"injectables/OwnerJwtRefreshService.html":{},"injectables/OwnerService.html":{},"injectables/ReviewsService.html":{},"injectables/RolesService.html":{},"injectables/UserJwtRefreshTokenService.html":{},"injectables/UsersService.html":{}}}],["screen",{"_index":2156,"title":{},"body":{"injectables/MailService.html":{}}}],["script",{"_index":1706,"title":{},"body":{"injectables/CorsMiddleware.html":{},"interfaces/RequestHeaders.html":{}}}],["scrypt",{"_index":389,"title":{},"body":{"injectables/AdminJwtRefreshService.html":{},"controllers/AppController.html":{},"injectables/OwnerJwtRefreshService.html":{}}}],["sdk",{"_index":3549,"title":{},"body":{"dependencies.html":{}}}],["seconds",{"_index":3146,"title":{},"body":{"injectables/TasksService.html":{}}}],["secret",{"_index":556,"title":{},"body":{"modules/AdminModule.html":{},"modules/AuthModule.html":{},"modules/OwnerModule.html":{},"modules/UsersModule.html":{}}}],["secure",{"_index":1053,"title":{},"body":{"controllers/AppController.html":{},"modules/MailModule.html":{}}}],["security",{"_index":1700,"title":{},"body":{"injectables/CorsMiddleware.html":{},"injectables/InitializeUserMiddleware.html":{},"interfaces/RequestHeaders.html":{}}}],["self",{"_index":1703,"title":{},"body":{"injectables/CorsMiddleware.html":{},"interfaces/RequestHeaders.html":{}}}],["sendactivationmailtoadmin",{"_index":2083,"title":{},"body":{"injectables/MailService.html":{}}}],["sendactivationmailtoadmin(tomail",{"_index":2089,"title":{},"body":{"injectables/MailService.html":{}}}],["sendactivationmailtoowner",{"_index":2084,"title":{},"body":{"injectables/MailService.html":{}}}],["sendactivationmailtoowner(tomail",{"_index":2092,"title":{},"body":{"injectables/MailService.html":{}}}],["sendcode",{"_index":2085,"title":{},"body":{"injectables/MailService.html":{}}}],["sendcode(tomail",{"_index":2094,"title":{},"body":{"injectables/MailService.html":{}}}],["sendmessage",{"_index":3204,"title":{},"body":{"injectables/TelegramService.html":{}}}],["sendmessage(message",{"_index":3206,"title":{},"body":{"injectables/TelegramService.html":{}}}],["sent",{"_index":2247,"title":{},"body":{"injectables/MailService.html":{}}}],["sequelize",{"_index":649,"title":{},"body":{"classes/AdminRefreshToken.html":{},"classes/BookmarksProducts.html":{},"classes/Cart.html":{},"classes/CartProduct.html":{},"classes/CartProduct-1.html":{},"classes/Category.html":{},"classes/Order.html":{},"classes/OrderProduct.html":{},"classes/Owner.html":{},"classes/OwnerRefreshToken.html":{},"classes/Product.html":{},"classes/Product-1.html":{},"classes/ProductCategories.html":{},"classes/ProductReviews.html":{},"classes/Review.html":{},"classes/Role.html":{},"classes/UserRefreshToken.html":{},"classes/UserRoles.html":{},"classes/WatchedProducts.html":{},"dependencies.html":{}}}],["sequelizemodule",{"_index":500,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CartModule.html":{},"modules/CategoriesModule.html":{},"modules/CoreModule.html":{},"modules/MailModule.html":{},"modules/OrdersModule.html":{},"modules/OwnerModule.html":{},"modules/ProductModule.html":{},"modules/ReviewsModule.html":{},"modules/RolesModule.html":{},"modules/UsersModule.html":{}}}],["sequelizemodule.forfeature",{"_index":554,"title":{},"body":{"modules/AdminModule.html":{},"modules/AuthModule.html":{},"modules/CartModule.html":{},"modules/CategoriesModule.html":{},"modules/CoreModule.html":{},"modules/MailModule.html":{},"modules/OrdersModule.html":{},"modules/OwnerModule.html":{},"modules/ProductModule.html":{},"modules/ReviewsModule.html":{},"modules/RolesModule.html":{},"modules/UsersModule.html":{}}}],["sequelizemodule.forfeature([owner",{"_index":2521,"title":{},"body":{"modules/OwnerModule.html":{}}}],["sequelizemodule.forroot",{"_index":1199,"title":{},"body":{"modules/AppModule.html":{}}}],["serializedvalue",{"_index":2643,"title":{},"body":{"classes/ParseFormDataJsonPipe.html":{}}}],["serve",{"_index":3568,"title":{},"body":{"dependencies.html":{}}}],["server",{"_index":403,"title":{},"body":{"injectables/AdminJwtRefreshService.html":{},"classes/ApiException.html":{},"injectables/AppClusterService.html":{},"interfaces/Msg.html":{},"injectables/OwnerJwtRefreshService.html":{},"injectables/UserJwtRefreshTokenService.html":{},"index.html":{}}}],["servestaticmodule",{"_index":1110,"title":{},"body":{"modules/AppModule.html":{}}}],["servestaticmodule.forroot",{"_index":1176,"title":{},"body":{"modules/AppModule.html":{}}}],["services/admin.service",{"_index":206,"title":{},"body":{"controllers/AdminController.html":{},"modules/AdminModule.html":{}}}],["services/cluster.service",{"_index":1655,"title":{},"body":{"modules/CoreModule.html":{}}}],["services/file.service",{"_index":1656,"title":{},"body":{"modules/CoreModule.html":{}}}],["services/jwt",{"_index":504,"title":{},"body":{"modules/AdminModule.html":{},"modules/OwnerModule.html":{},"modules/UsersModule.html":{}}}],["services/owner.service",{"_index":2519,"title":{},"body":{"modules/OwnerModule.html":{}}}],["services/scedule.service",{"_index":1659,"title":{},"body":{"modules/CoreModule.html":{}}}],["services/users.service",{"_index":3362,"title":{},"body":{"controllers/UsersController.html":{},"modules/UsersModule.html":{}}}],["set",{"_index":1029,"title":{},"body":{"controllers/AppController.html":{}}}],["set(request",{"_index":1035,"title":{},"body":{"controllers/AppController.html":{}}}],["setactivationcode",{"_index":2358,"title":{},"body":{"classes/Owner.html":{}}}],["setactivationcode(activationcode",{"_index":2409,"title":{},"body":{"classes/Owner.html":{}}}],["setadminagent",{"_index":584,"title":{},"body":{"classes/AdminRefreshToken.html":{}}}],["setadminagent(adminagent",{"_index":636,"title":{},"body":{"classes/AdminRefreshToken.html":{}}}],["setadminid",{"_index":2666,"title":{},"body":{"classes/Product.html":{},"classes/Product-1.html":{}}}],["setadminid(adminid",{"_index":2691,"title":{},"body":{"classes/Product.html":{},"classes/Product-1.html":{}}}],["setcartstatus",{"_index":1424,"title":{},"body":{"classes/Cart.html":{}}}],["setcartstatus(cartstatus",{"_index":1438,"title":{},"body":{"classes/Cart.html":{}}}],["setcategories",{"_index":2667,"title":{},"body":{"classes/Product.html":{},"classes/Product-1.html":{}}}],["setcategories(categories",{"_index":2693,"title":{},"body":{"classes/Product.html":{},"classes/Product-1.html":{}}}],["setconfirmcode",{"_index":678,"title":{},"body":{"injectables/AdminService.html":{},"classes/Owner.html":{},"injectables/OwnerService.html":{},"injectables/UsersService.html":{}}}],["setconfirmcode(codedto",{"_index":708,"title":{},"body":{"injectables/AdminService.html":{},"injectables/OwnerService.html":{},"injectables/UsersService.html":{}}}],["setconfirmcode(confirncode",{"_index":2411,"title":{},"body":{"classes/Owner.html":{}}}],["setdescription",{"_index":2711,"title":{},"body":{"classes/Product-1.html":{}}}],["setdescription(description",{"_index":2740,"title":{},"body":{"classes/Product-1.html":{}}}],["setexpiredate",{"_index":585,"title":{},"body":{"classes/AdminRefreshToken.html":{},"classes/OwnerRefreshToken.html":{},"classes/UserRefreshToken.html":{}}}],["setexpiredate(expiredate",{"_index":638,"title":{},"body":{"classes/AdminRefreshToken.html":{},"classes/OwnerRefreshToken.html":{},"classes/UserRefreshToken.html":{}}}],["setidentifier",{"_index":586,"title":{},"body":{"classes/AdminRefreshToken.html":{},"classes/OwnerRefreshToken.html":{},"classes/UserRefreshToken.html":{}}}],["setidentifier(identifier",{"_index":640,"title":{},"body":{"classes/AdminRefreshToken.html":{},"classes/OwnerRefreshToken.html":{},"classes/UserRefreshToken.html":{}}}],["setinterval",{"_index":1009,"title":{},"body":{"injectables/AppClusterService.html":{},"interfaces/Msg.html":{}}}],["setinterval(callback",{"_index":3159,"title":{},"body":{"injectables/TasksService.html":{}}}],["setisactivated",{"_index":2359,"title":{},"body":{"classes/Owner.html":{}}}],["setisactivated(isactivated",{"_index":2414,"title":{},"body":{"classes/Owner.html":{}}}],["setname",{"_index":2360,"title":{},"body":{"classes/Owner.html":{}}}],["setname(name",{"_index":2416,"title":{},"body":{"classes/Owner.html":{}}}],["setnewpasssword",{"_index":2361,"title":{},"body":{"classes/Owner.html":{}}}],["setnewpasssword(password",{"_index":2418,"title":{},"body":{"classes/Owner.html":{}}}],["setorderstatus",{"_index":2294,"title":{},"body":{"classes/Order.html":{}}}],["setorderstatus(orderstatus",{"_index":2305,"title":{},"body":{"classes/Order.html":{}}}],["setowneragent",{"_index":2362,"title":{},"body":{"classes/Owner.html":{},"classes/OwnerRefreshToken.html":{}}}],["setowneragent(owneragent",{"_index":2420,"title":{},"body":{"classes/Owner.html":{},"classes/OwnerRefreshToken.html":{}}}],["setownerid",{"_index":2527,"title":{},"body":{"classes/OwnerRefreshToken.html":{},"classes/Product.html":{},"classes/Product-1.html":{}}}],["setownerid(ownerid",{"_index":2548,"title":{},"body":{"classes/OwnerRefreshToken.html":{},"classes/Product.html":{},"classes/Product-1.html":{}}}],["setresettoken",{"_index":2363,"title":{},"body":{"classes/Owner.html":{}}}],["setresettoken(resettoken",{"_index":2422,"title":{},"body":{"classes/Owner.html":{}}}],["setresettokenexpiration",{"_index":2364,"title":{},"body":{"classes/Owner.html":{}}}],["setresettokenexpiration(resettokenexpiration",{"_index":2424,"title":{},"body":{"classes/Owner.html":{}}}],["setsurname",{"_index":2365,"title":{},"body":{"classes/Owner.html":{}}}],["setsurname(surname",{"_index":2426,"title":{},"body":{"classes/Owner.html":{}}}],["settimeout",{"_index":1021,"title":{},"body":{"injectables/AppClusterService.html":{},"interfaces/Msg.html":{}}}],["settimeout(callback",{"_index":3175,"title":{},"body":{"injectables/TasksService.html":{}}}],["settimeouts",{"_index":965,"title":{},"body":{"injectables/AppClusterService.html":{}}}],["settimeouts(worker",{"_index":971,"title":{},"body":{"injectables/AppClusterService.html":{},"interfaces/Msg.html":{}}}],["settings",{"_index":1165,"title":{},"body":{"modules/AppModule.html":{}}}],["settitle",{"_index":2712,"title":{},"body":{"classes/Product-1.html":{}}}],["settitle(title",{"_index":2743,"title":{},"body":{"classes/Product-1.html":{}}}],["setuserid",{"_index":3307,"title":{},"body":{"classes/UserRefreshToken.html":{}}}],["setuserid(userid",{"_index":3323,"title":{},"body":{"classes/UserRefreshToken.html":{}}}],["sheduleservice",{"_index":338,"title":{},"body":{"injectables/AdminJwtRefreshService.html":{},"injectables/OwnerJwtRefreshService.html":{},"injectables/UserJwtRefreshTokenService.html":{}}}],["shutdown",{"_index":1004,"title":{},"body":{"injectables/AppClusterService.html":{},"interfaces/Msg.html":{}}}],["side",{"_index":3598,"title":{},"body":{"index.html":{}}}],["signal",{"_index":995,"title":{},"body":{"injectables/AppClusterService.html":{},"interfaces/Msg.html":{}}}],["signed",{"_index":1058,"title":{},"body":{"controllers/AppController.html":{}}}],["signing",{"_index":1262,"title":{},"body":{"controllers/AuthController.html":{}}}],["signoptions",{"_index":559,"title":{},"body":{"modules/AdminModule.html":{},"modules/AuthModule.html":{},"modules/OwnerModule.html":{},"modules/UsersModule.html":{}}}],["signup",{"_index":1222,"title":{},"body":{"controllers/AuthController.html":{}}}],["signup(userdto",{"_index":1260,"title":{},"body":{"controllers/AuthController.html":{}}}],["signupdto",{"_index":1261,"title":{"classes/SignupDto.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"classes/SignupDto.html":{}}}],["simple",{"_index":3454,"title":{},"body":{"injectables/UsersService.html":{}}}],["size",{"_index":2114,"title":{},"body":{"injectables/MailService.html":{}}}],["size:12px!important",{"_index":2177,"title":{},"body":{"injectables/MailService.html":{}}}],["size:16px!important",{"_index":2175,"title":{},"body":{"injectables/MailService.html":{}}}],["size:20px!important",{"_index":2170,"title":{},"body":{"injectables/MailService.html":{}}}],["size:26px!important",{"_index":2169,"title":{},"body":{"injectables/MailService.html":{}}}],["size:30px!important",{"_index":2167,"title":{},"body":{"injectables/MailService.html":{}}}],["size:inherit!important",{"_index":2134,"title":{},"body":{"injectables/MailService.html":{}}}],["sizechart",{"_index":2681,"title":{},"body":{"classes/Product.html":{},"classes/Product-1.html":{}}}],["sizechartimage",{"_index":1621,"title":{},"body":{"interfaces/CategoryCreationAtrb.html":{},"classes/Product.html":{},"classes/Product-1.html":{},"controllers/ProductController.html":{},"interfaces/ProductCreationAttrs.html":{},"interfaces/ReturnedCategory.html":{},"interfaces/ReturnedProduct.html":{},"interfaces/ReturnedProducts.html":{},"interfaces/ReturnedReview.html":{},"interfaces/ReviewCreationAtrb.html":{}}}],["sizes",{"_index":1622,"title":{},"body":{"interfaces/CategoryCreationAtrb.html":{},"classes/CreateProductDto.html":{},"classes/Nested.html":{},"classes/Nested-1.html":{},"classes/Product.html":{},"classes/Product-1.html":{},"controllers/ProductController.html":{},"interfaces/ProductCreationAttrs.html":{},"interfaces/ReturnedCategory.html":{},"interfaces/ReturnedProduct.html":{},"interfaces/ReturnedProducts.html":{},"interfaces/ReturnedReview.html":{},"interfaces/ReviewCreationAtrb.html":{},"classes/UpdateProductDto.html":{}}}],["smtp.gmail.com",{"_index":2069,"title":{},"body":{"modules/MailModule.html":{}}}],["social",{"_index":2233,"title":{},"body":{"injectables/MailService.html":{}}}],["socket.io",{"_index":3517,"title":{},"body":{"dependencies.html":{}}}],["source",{"_index":4,"title":{},"body":{"injectables/ActivateMiddleware.html":{},"guards/AddContentGuard.html":{},"classes/AddRoleDto.html":{},"controllers/AdminController.html":{},"guards/AdminGuard.html":{},"interfaces/AdminInterface.html":{},"injectables/AdminJwtRefreshService.html":{},"modules/AdminModule.html":{},"classes/AdminRefreshToken.html":{},"interfaces/AdminRefreshTokenCreationAttrbs.html":{},"injectables/AdminService.html":{},"injectables/AdminUserMiddleware.html":{},"interfaces/AdmincreationAttrbs.html":{},"classes/AllExceptionsFilter.html":{},"classes/ApiError.html":{},"classes/ApiErrorExceptionFilter.html":{},"classes/ApiException.html":{},"classes/ApiExceptionFilter.html":{},"injectables/AppClusterService.html":{},"controllers/AppController.html":{},"injectables/AppListener.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"guards/AuthFerfershGuard.html":{},"injectables/AuthMiddleware.html":{},"modules/AuthModule.html":{},"interfaces/AuthUser.html":{},"classes/BadRequestError.html":{},"classes/BanUserDto.html":{},"classes/BookmarksProducts.html":{},"controllers/CardController.html":{},"injectables/CardService.html":{},"classes/Cart.html":{},"modules/CartModule.html":{},"classes/CartProduct.html":{},"classes/CartProduct-1.html":{},"controllers/CategoriesController.html":{},"modules/CategoriesModule.html":{},"injectables/CategoriesService.html":{},"classes/Category.html":{},"interfaces/CategoryCreationAtrb.html":{},"classes/ChangeDto.html":{},"interfaces/CodeDto.html":{},"modules/CoreModule.html":{},"injectables/CorsMiddleware.html":{},"classes/CreateAccessTokenDto.html":{},"classes/CreateAdminDto.html":{},"classes/CreateAdminRefreshTokenDto.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateOwnerDto.html":{},"classes/CreateOwnerRefreshTokenDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateReviewDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserRefreshTokenDto.html":{},"guards/EditContentGuard.html":{},"guards/EditWebsiteGuard.html":{},"injectables/FilesService.html":{},"classes/GarbageCollectingProcessor.html":{},"injectables/GlobalInterceptor.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/ITelegramModuleAsyncOptions.html":{},"interfaces/ITelegramOptions.html":{},"injectables/InitializeEmailMiddleware.html":{},"interfaces/InitializeUser.html":{},"injectables/InitializeUserMiddleware.html":{},"guards/JwtAuthGuard.html":{},"classes/JwtRefreshTokenDeletedEvent.html":{},"injectables/LocationMiddleware.html":{},"classes/LoginDto.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"classes/MatchConstraint.html":{},"interfaces/Msg.html":{},"classes/Nested.html":{},"classes/Nested-1.html":{},"classes/NotFoundError.html":{},"classes/Order.html":{},"classes/OrderProduct.html":{},"controllers/OrdersController.html":{},"modules/OrdersModule.html":{},"injectables/OrdersService.html":{},"classes/Owner.html":{},"guards/OwnerAdminGuard.html":{},"interfaces/OwnerCreationAttrbs.html":{},"injectables/OwnerJwtRefreshService.html":{},"modules/OwnerModule.html":{},"classes/OwnerRefreshToken.html":{},"interfaces/OwnerRefreshTokenCreationAttrbs.html":{},"injectables/OwnerService.html":{},"classes/ParseFormDataJsonPipe.html":{},"injectables/ParseJsonPipe.html":{},"interfaces/Payload.html":{},"classes/Product.html":{},"classes/Product-1.html":{},"classes/ProductCategories.html":{},"controllers/ProductController.html":{},"interfaces/ProductCreationAttrs.html":{},"injectables/ProductMiddleware.html":{},"modules/ProductModule.html":{},"classes/ProductReviews.html":{},"guards/RefreshAuthGuard.html":{},"interfaces/RequestHeaders.html":{},"classes/RequestValidator.html":{},"classes/ResetDto.html":{},"interfaces/ReturnedAdmin.html":{},"interfaces/ReturnedCategory.html":{},"interfaces/ReturnedOwner.html":{},"interfaces/ReturnedProduct.html":{},"interfaces/ReturnedProducts.html":{},"interfaces/ReturnedReview.html":{},"interfaces/ReturnedUser.html":{},"classes/Review.html":{},"interfaces/ReviewCreationAtrb.html":{},"controllers/ReviewsController.html":{},"modules/ReviewsModule.html":{},"injectables/ReviewsService.html":{},"classes/Role.html":{},"interfaces/RolecreationAttrbs.html":{},"controllers/RolesController.html":{},"guards/RolesGuard.html":{},"modules/RolesModule.html":{},"injectables/RolesService.html":{},"classes/SignupDto.html":{},"injectables/TasksService.html":{},"modules/TelegramModule.html":{},"injectables/TelegramService.html":{},"injectables/ThrottlerBehindProxyGuard.html":{},"interfaces/Tokens.html":{},"classes/UpdateCategoryDto.html":{},"classes/UpdateProductDto.html":{},"classes/UpdateUserDto.html":{},"injectables/UserAdminMiddleware.html":{},"guards/UserGuard.html":{},"interfaces/UserInterface.html":{},"injectables/UserJwtRefreshTokenService.html":{},"injectables/UserMiddleware.html":{},"injectables/UserMiddleware-1.html":{},"interfaces/UserRefreshCreationAttrbs.html":{},"classes/UserRefreshToken.html":{},"classes/UserRoles.html":{},"interfaces/UsercreationAttrbs.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"injectables/ValidateDto.html":{},"interfaces/ValidateUser.html":{},"classes/ValidationException.html":{},"classes/WatchedProducts.html":{},"interfaces/fileCreated.html":{},"index.html":{}}}],["span,.externalclass",{"_index":2121,"title":{},"body":{"injectables/MailService.html":{}}}],["sponsors",{"_index":3624,"title":{},"body":{"index.html":{}}}],["src",{"_index":1702,"title":{},"body":{"injectables/CorsMiddleware.html":{},"interfaces/RequestHeaders.html":{}}}],["src/.../cluster.service.ts",{"_index":3657,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../comander.ts",{"_index":3578,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../formdata.pipe.ts",{"_index":3658,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../main.ts",{"_index":3583,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../match.decorator.ts",{"_index":3579,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../nested.validation.decorator.ts",{"_index":3585,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../repl.ts",{"_index":3581,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/admin/admin.controller.ts",{"_index":149,"title":{},"body":{"controllers/AdminController.html":{}}}],["src/admin/admin.controller.ts:55",{"_index":166,"title":{},"body":{"controllers/AdminController.html":{}}}],["src/admin/admin.controller.ts:69",{"_index":185,"title":{},"body":{"controllers/AdminController.html":{}}}],["src/admin/admin.controller.ts:82",{"_index":174,"title":{},"body":{"controllers/AdminController.html":{}}}],["src/admin/admin.controller.ts:97",{"_index":179,"title":{},"body":{"controllers/AdminController.html":{}}}],["src/admin/admin.module.ts",{"_index":487,"title":{},"body":{"modules/AdminModule.html":{}}}],["src/admin/admin.module.ts:95",{"_index":493,"title":{},"body":{"modules/AdminModule.html":{}}}],["src/admin/dto/create",{"_index":1739,"title":{},"body":{"classes/CreateAdminDto.html":{},"classes/CreateAdminRefreshTokenDto.html":{}}}],["src/admin/models/admin.model",{"_index":2698,"title":{},"body":{"classes/Product.html":{}}}],["src/admin/models/admin.refresh.token.model.ts",{"_index":576,"title":{},"body":{"classes/AdminRefreshToken.html":{}}}],["src/admin/models/admin.refresh.token.model.ts:104",{"_index":628,"title":{},"body":{"classes/AdminRefreshToken.html":{}}}],["src/admin/models/admin.refresh.token.model.ts:107",{"_index":588,"title":{},"body":{"classes/AdminRefreshToken.html":{}}}],["src/admin/models/admin.refresh.token.model.ts:109",{"_index":634,"title":{},"body":{"classes/AdminRefreshToken.html":{}}}],["src/admin/models/admin.refresh.token.model.ts:113",{"_index":639,"title":{},"body":{"classes/AdminRefreshToken.html":{}}}],["src/admin/models/admin.refresh.token.model.ts:118",{"_index":633,"title":{},"body":{"classes/AdminRefreshToken.html":{}}}],["src/admin/models/admin.refresh.token.model.ts:122",{"_index":637,"title":{},"body":{"classes/AdminRefreshToken.html":{}}}],["src/admin/models/admin.refresh.token.model.ts:127",{"_index":632,"title":{},"body":{"classes/AdminRefreshToken.html":{}}}],["src/admin/models/admin.refresh.token.model.ts:131",{"_index":635,"title":{},"body":{"classes/AdminRefreshToken.html":{}}}],["src/admin/models/admin.refresh.token.model.ts:135",{"_index":641,"title":{},"body":{"classes/AdminRefreshToken.html":{}}}],["src/admin/models/admin.refresh.token.model.ts:28",{"_index":621,"title":{},"body":{"classes/AdminRefreshToken.html":{}}}],["src/admin/models/admin.refresh.token.model.ts:38",{"_index":614,"title":{},"body":{"classes/AdminRefreshToken.html":{}}}],["src/admin/models/admin.refresh.token.model.ts:47",{"_index":631,"title":{},"body":{"classes/AdminRefreshToken.html":{}}}],["src/admin/models/admin.refresh.token.model.ts:60",{"_index":611,"title":{},"body":{"classes/AdminRefreshToken.html":{}}}],["src/admin/models/admin.refresh.token.model.ts:70",{"_index":607,"title":{},"body":{"classes/AdminRefreshToken.html":{}}}],["src/admin/models/admin.refresh.token.model.ts:84",{"_index":605,"title":{},"body":{"classes/AdminRefreshToken.html":{}}}],["src/admin/models/admin.refresh.token.model.ts:91",{"_index":617,"title":{},"body":{"classes/AdminRefreshToken.html":{}}}],["src/admin/services/admin.service.ts",{"_index":668,"title":{},"body":{"injectables/AdminService.html":{}}}],["src/admin/services/admin.service.ts:151",{"_index":712,"title":{},"body":{"injectables/AdminService.html":{}}}],["src/admin/services/admin.service.ts:185",{"_index":694,"title":{},"body":{"injectables/AdminService.html":{}}}],["src/admin/services/admin.service.ts:195",{"_index":702,"title":{},"body":{"injectables/AdminService.html":{}}}],["src/admin/services/admin.service.ts:223",{"_index":698,"title":{},"body":{"injectables/AdminService.html":{}}}],["src/admin/services/admin.service.ts:233",{"_index":696,"title":{},"body":{"injectables/AdminService.html":{}}}],["src/admin/services/admin.service.ts:241",{"_index":687,"title":{},"body":{"injectables/AdminService.html":{}}}],["src/admin/services/admin.service.ts:258",{"_index":700,"title":{},"body":{"injectables/AdminService.html":{}}}],["src/admin/services/admin.service.ts:266",{"_index":715,"title":{},"body":{"injectables/AdminService.html":{}}}],["src/admin/services/admin.service.ts:281",{"_index":710,"title":{},"body":{"injectables/AdminService.html":{}}}],["src/admin/services/admin.service.ts:289",{"_index":705,"title":{},"body":{"injectables/AdminService.html":{}}}],["src/admin/services/admin.service.ts:305",{"_index":685,"title":{},"body":{"injectables/AdminService.html":{}}}],["src/admin/services/admin.service.ts:311",{"_index":707,"title":{},"body":{"injectables/AdminService.html":{}}}],["src/admin/services/admin.service.ts:36",{"_index":683,"title":{},"body":{"injectables/AdminService.html":{}}}],["src/admin/services/admin.service.ts:43",{"_index":692,"title":{},"body":{"injectables/AdminService.html":{}}}],["src/admin/services/admin.service.ts:87",{"_index":689,"title":{},"body":{"injectables/AdminService.html":{}}}],["src/admin/services/jwt",{"_index":322,"title":{},"body":{"injectables/AdminJwtRefreshService.html":{}}}],["src/app.controller.ts",{"_index":1027,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.controller.ts:25",{"_index":1037,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.controller.ts:54",{"_index":1034,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.controller.ts:74",{"_index":1039,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.controller.ts:80",{"_index":1031,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.module.ts",{"_index":1104,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.module.ts:173",{"_index":1105,"title":{},"body":{"modules/AppModule.html":{}}}],["src/auth/auth.controller.ts",{"_index":1217,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:106",{"_index":1255,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:124",{"_index":1251,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:140",{"_index":1241,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:157",{"_index":1259,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:174",{"_index":1236,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:199",{"_index":1228,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:58",{"_index":1266,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:82",{"_index":1246,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.module.ts",{"_index":1346,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/auth/auth.module.ts:98",{"_index":1347,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/auth/dto/change.password.dto.ts",{"_index":1630,"title":{},"body":{"classes/ChangeDto.html":{}}}],["src/auth/dto/change.password.dto.ts:18",{"_index":1643,"title":{},"body":{"classes/ChangeDto.html":{}}}],["src/auth/dto/change.password.dto.ts:32",{"_index":1641,"title":{},"body":{"classes/ChangeDto.html":{}}}],["src/auth/dto/create.access.token.dto.ts",{"_index":1716,"title":{},"body":{"classes/CreateAccessTokenDto.html":{}}}],["src/auth/dto/create.access.token.dto.ts:18",{"_index":1733,"title":{},"body":{"classes/CreateAccessTokenDto.html":{}}}],["src/auth/dto/create.access.token.dto.ts:25",{"_index":1727,"title":{},"body":{"classes/CreateAccessTokenDto.html":{}}}],["src/auth/dto/create.access.token.dto.ts:32",{"_index":1732,"title":{},"body":{"classes/CreateAccessTokenDto.html":{}}}],["src/auth/dto/create.access.token.dto.ts:43",{"_index":1725,"title":{},"body":{"classes/CreateAccessTokenDto.html":{}}}],["src/auth/dto/create.access.token.dto.ts:48",{"_index":1729,"title":{},"body":{"classes/CreateAccessTokenDto.html":{}}}],["src/auth/dto/login.dto.ts",{"_index":2056,"title":{},"body":{"classes/LoginDto.html":{}}}],["src/auth/dto/login.dto.ts:15",{"_index":2057,"title":{},"body":{"classes/LoginDto.html":{}}}],["src/auth/dto/login.dto.ts:28",{"_index":2058,"title":{},"body":{"classes/LoginDto.html":{}}}],["src/auth/dto/reset.password.dto.ts",{"_index":2937,"title":{},"body":{"classes/ResetDto.html":{}}}],["src/auth/dto/reset.password.dto.ts:22",{"_index":2942,"title":{},"body":{"classes/ResetDto.html":{}}}],["src/auth/dto/reset.password.dto.ts:27",{"_index":2940,"title":{},"body":{"classes/ResetDto.html":{}}}],["src/auth/dto/reset.password.dto.ts:40",{"_index":2943,"title":{},"body":{"classes/ResetDto.html":{}}}],["src/auth/dto/reset.password.dto.ts:54",{"_index":2941,"title":{},"body":{"classes/ResetDto.html":{}}}],["src/auth/dto/signup.dto.ts",{"_index":3082,"title":{},"body":{"classes/SignupDto.html":{}}}],["src/auth/dto/signup.dto.ts:28",{"_index":3086,"title":{},"body":{"classes/SignupDto.html":{}}}],["src/auth/dto/signup.dto.ts:37",{"_index":3089,"title":{},"body":{"classes/SignupDto.html":{}}}],["src/auth/dto/signup.dto.ts:44",{"_index":3088,"title":{},"body":{"classes/SignupDto.html":{}}}],["src/auth/dto/signup.dto.ts:55",{"_index":3084,"title":{},"body":{"classes/SignupDto.html":{}}}],["src/auth/dto/signup.dto.ts:68",{"_index":3087,"title":{},"body":{"classes/SignupDto.html":{}}}],["src/auth/dto/signup.dto.ts:82",{"_index":3083,"title":{},"body":{"classes/SignupDto.html":{}}}],["src/cart/cart.controller.ts",{"_index":1410,"title":{},"body":{"controllers/CardController.html":{}}}],["src/cart/cart.module.ts",{"_index":1452,"title":{},"body":{"modules/CartModule.html":{}}}],["src/cart/cart.service.ts",{"_index":1414,"title":{},"body":{"injectables/CardService.html":{}}}],["src/cart/models/cart",{"_index":1457,"title":{},"body":{"classes/CartProduct.html":{}}}],["src/cart/models/cart.model.ts",{"_index":1415,"title":{},"body":{"classes/Cart.html":{}}}],["src/cart/models/cart.model.ts:24",{"_index":1428,"title":{},"body":{"classes/Cart.html":{}}}],["src/cart/models/cart.model.ts:31",{"_index":1427,"title":{},"body":{"classes/Cart.html":{}}}],["src/cart/models/cart.model.ts:38",{"_index":1431,"title":{},"body":{"classes/Cart.html":{}}}],["src/cart/models/cart.model.ts:45",{"_index":1433,"title":{},"body":{"classes/Cart.html":{}}}],["src/cart/models/cart.model.ts:48",{"_index":1432,"title":{},"body":{"classes/Cart.html":{}}}],["src/cart/models/cart.model.ts:51",{"_index":1430,"title":{},"body":{"classes/Cart.html":{}}}],["src/cart/models/cart.model.ts:54",{"_index":1426,"title":{},"body":{"classes/Cart.html":{}}}],["src/cart/models/cart.model.ts:56",{"_index":1435,"title":{},"body":{"classes/Cart.html":{}}}],["src/cart/models/cart.model.ts:60",{"_index":1439,"title":{},"body":{"classes/Cart.html":{}}}],["src/cart/models/cart.model.ts:65",{"_index":1436,"title":{},"body":{"classes/Cart.html":{}}}],["src/cart/models/cart.model.ts:69",{"_index":1434,"title":{},"body":{"classes/Cart.html":{}}}],["src/cart/models/cart.model.ts:73",{"_index":1437,"title":{},"body":{"classes/Cart.html":{}}}],["src/cart/models/cart.product.model.ts",{"_index":1478,"title":{},"body":{"classes/CartProduct-1.html":{}}}],["src/cart/models/cart.product.model.ts:22",{"_index":1481,"title":{},"body":{"classes/CartProduct-1.html":{}}}],["src/cart/models/cart.product.model.ts:32",{"_index":1483,"title":{},"body":{"classes/CartProduct-1.html":{}}}],["src/cart/models/cart.product.model.ts:42",{"_index":1480,"title":{},"body":{"classes/CartProduct-1.html":{}}}],["src/cart/models/cart.product.model.ts:51",{"_index":1484,"title":{},"body":{"classes/CartProduct-1.html":{}}}],["src/cart/models/cart.product.model.ts:54",{"_index":1479,"title":{},"body":{"classes/CartProduct-1.html":{}}}],["src/cart/models/cart.product.model.ts:57",{"_index":1482,"title":{},"body":{"classes/CartProduct-1.html":{}}}],["src/cart/models/cart.product.model.ts:59",{"_index":1486,"title":{},"body":{"classes/CartProduct-1.html":{}}}],["src/cart/models/cart.product.model.ts:63",{"_index":1485,"title":{},"body":{"classes/CartProduct-1.html":{}}}],["src/categories/categories.controller.ts",{"_index":1489,"title":{},"body":{"controllers/CategoriesController.html":{}}}],["src/categories/categories.controller.ts:103",{"_index":1507,"title":{},"body":{"controllers/CategoriesController.html":{}}}],["src/categories/categories.controller.ts:47",{"_index":1511,"title":{},"body":{"controllers/CategoriesController.html":{}}}],["src/categories/categories.controller.ts:64",{"_index":1502,"title":{},"body":{"controllers/CategoriesController.html":{}}}],["src/categories/categories.controller.ts:84",{"_index":1514,"title":{},"body":{"controllers/CategoriesController.html":{}}}],["src/categories/categories.module.ts",{"_index":1543,"title":{},"body":{"modules/CategoriesModule.html":{}}}],["src/categories/categories.module.ts:62",{"_index":1544,"title":{},"body":{"modules/CategoriesModule.html":{}}}],["src/categories/categories.service.ts",{"_index":1550,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["src/categories/categories.service.ts:102",{"_index":1569,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["src/categories/categories.service.ts:15",{"_index":1555,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["src/categories/categories.service.ts:20",{"_index":1566,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["src/categories/categories.service.ts:28",{"_index":1561,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["src/categories/categories.service.ts:38",{"_index":1564,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["src/categories/categories.service.ts:46",{"_index":1559,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["src/categories/categories.service.ts:61",{"_index":1557,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["src/categories/categories.service.ts:85",{"_index":1558,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["src/categories/dto/create.category.dto.ts",{"_index":1788,"title":{},"body":{"classes/CreateCategoryDto.html":{}}}],["src/categories/dto/create.category.dto.ts:14",{"_index":1795,"title":{},"body":{"classes/CreateCategoryDto.html":{}}}],["src/categories/dto/create.category.dto.ts:20",{"_index":1794,"title":{},"body":{"classes/CreateCategoryDto.html":{}}}],["src/categories/dto/create.category.dto.ts:26",{"_index":1793,"title":{},"body":{"classes/CreateCategoryDto.html":{}}}],["src/categories/dto/create.category.dto.ts:8",{"_index":1796,"title":{},"body":{"classes/CreateCategoryDto.html":{}}}],["src/categories/dto/update.category.dto.ts",{"_index":3224,"title":{},"body":{"classes/UpdateCategoryDto.html":{}}}],["src/categories/dto/update.category.dto.ts:14",{"_index":3227,"title":{},"body":{"classes/UpdateCategoryDto.html":{}}}],["src/categories/dto/update.category.dto.ts:20",{"_index":3226,"title":{},"body":{"classes/UpdateCategoryDto.html":{}}}],["src/categories/dto/update.category.dto.ts:26",{"_index":3225,"title":{},"body":{"classes/UpdateCategoryDto.html":{}}}],["src/categories/dto/update.category.dto.ts:8",{"_index":3228,"title":{},"body":{"classes/UpdateCategoryDto.html":{}}}],["src/categories/models/category.model.ts",{"_index":1605,"title":{},"body":{"classes/Category.html":{}}}],["src/categories/models/category.model.ts:21",{"_index":1607,"title":{},"body":{"classes/Category.html":{}}}],["src/categories/models/category.model.ts:29",{"_index":1611,"title":{},"body":{"classes/Category.html":{}}}],["src/categories/models/category.model.ts:37",{"_index":1610,"title":{},"body":{"classes/Category.html":{}}}],["src/categories/models/category.model.ts:45",{"_index":1606,"title":{},"body":{"classes/Category.html":{}}}],["src/categories/models/category.model.ts:53",{"_index":1609,"title":{},"body":{"classes/Category.html":{}}}],["src/categories/models/category.model.ts:56",{"_index":1608,"title":{},"body":{"classes/Category.html":{}}}],["src/categories/models/category.model.ts:58",{"_index":1612,"title":{},"body":{"classes/Category.html":{}}}],["src/categories/models/product.categories.model.ts",{"_index":2752,"title":{},"body":{"classes/ProductCategories.html":{}}}],["src/categories/models/product.categories.model.ts:21",{"_index":2754,"title":{},"body":{"classes/ProductCategories.html":{}}}],["src/categories/models/product.categories.model.ts:28",{"_index":2753,"title":{},"body":{"classes/ProductCategories.html":{}}}],["src/categories/models/product.categories.model.ts:35",{"_index":2755,"title":{},"body":{"classes/ProductCategories.html":{}}}],["src/comander.ts",{"_index":3586,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/common/decorators/match.decorator.ts",{"_index":2257,"title":{},"body":{"classes/MatchConstraint.html":{},"miscellaneous/functions.html":{}}}],["src/common/decorators/match.decorator.ts:23",{"_index":2262,"title":{},"body":{"classes/MatchConstraint.html":{}}}],["src/common/decorators/nested.validation.decorator.ts",{"_index":3589,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/common/exceptions/api.exception.ts",{"_index":905,"title":{},"body":{"classes/ApiException.html":{}}}],["src/common/exceptions/api.exception.ts:119",{"_index":939,"title":{},"body":{"classes/ApiException.html":{}}}],["src/common/exceptions/api.exception.ts:151",{"_index":932,"title":{},"body":{"classes/ApiException.html":{}}}],["src/common/exceptions/api.exception.ts:167",{"_index":927,"title":{},"body":{"classes/ApiException.html":{}}}],["src/common/exceptions/api.exception.ts:203",{"_index":925,"title":{},"body":{"classes/ApiException.html":{}}}],["src/common/exceptions/api.exception.ts:40",{"_index":914,"title":{},"body":{"classes/ApiException.html":{}}}],["src/common/exceptions/api.exception.ts:41",{"_index":913,"title":{},"body":{"classes/ApiException.html":{}}}],["src/common/exceptions/api.exception.ts:63",{"_index":923,"title":{},"body":{"classes/ApiException.html":{}}}],["src/common/exceptions/validate",{"_index":869,"title":{},"body":{"classes/ApiError.html":{},"classes/BadRequestError.html":{},"classes/NotFoundError.html":{}}}],["src/common/exceptions/validation.excetion.ts",{"_index":3494,"title":{},"body":{"classes/ValidationException.html":{}}}],["src/common/exceptions/validation.excetion.ts:4",{"_index":3496,"title":{},"body":{"classes/ValidationException.html":{}}}],["src/common/filters/api",{"_index":956,"title":{},"body":{"classes/ApiExceptionFilter.html":{}}}],["src/common/filters/error",{"_index":889,"title":{},"body":{"classes/ApiErrorExceptionFilter.html":{}}}],["src/common/filters/http",{"_index":1981,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["src/common/guards/add",{"_index":83,"title":{},"body":{"guards/AddContentGuard.html":{}}}],["src/common/guards/admin.guard.ts",{"_index":268,"title":{},"body":{"guards/AdminGuard.html":{}}}],["src/common/guards/admin.guard.ts:20",{"_index":273,"title":{},"body":{"guards/AdminGuard.html":{}}}],["src/common/guards/admin.guard.ts:27",{"_index":275,"title":{},"body":{"guards/AdminGuard.html":{}}}],["src/common/guards/edit",{"_index":1890,"title":{},"body":{"guards/EditContentGuard.html":{},"guards/EditWebsiteGuard.html":{}}}],["src/common/guards/jw",{"_index":1318,"title":{},"body":{"guards/AuthFerfershGuard.html":{}}}],["src/common/guards/jwt",{"_index":2024,"title":{},"body":{"guards/JwtAuthGuard.html":{}}}],["src/common/guards/owner",{"_index":2445,"title":{},"body":{"guards/OwnerAdminGuard.html":{}}}],["src/common/guards/refresh.guard.ts",{"_index":2909,"title":{},"body":{"guards/RefreshAuthGuard.html":{}}}],["src/common/guards/refresh.guard.ts:15",{"_index":2910,"title":{},"body":{"guards/RefreshAuthGuard.html":{}}}],["src/common/guards/refresh.guard.ts:18",{"_index":2911,"title":{},"body":{"guards/RefreshAuthGuard.html":{}}}],["src/common/guards/roles.guard.ts",{"_index":3058,"title":{},"body":{"guards/RolesGuard.html":{}}}],["src/common/guards/roles.guard.ts:18",{"_index":3059,"title":{},"body":{"guards/RolesGuard.html":{}}}],["src/common/guards/roles.guard.ts:21",{"_index":3060,"title":{},"body":{"guards/RolesGuard.html":{}}}],["src/common/guards/throttler",{"_index":3215,"title":{},"body":{"injectables/ThrottlerBehindProxyGuard.html":{}}}],["src/common/guards/user.guard",{"_index":2828,"title":{},"body":{"controllers/ProductController.html":{}}}],["src/common/guards/user.guard.ts",{"_index":3254,"title":{},"body":{"guards/UserGuard.html":{}}}],["src/common/guards/user.guard.ts:19",{"_index":3256,"title":{},"body":{"guards/UserGuard.html":{}}}],["src/common/guards/user.guard.ts:26",{"_index":3257,"title":{},"body":{"guards/UserGuard.html":{}}}],["src/common/middlewares/activate.middleware.ts",{"_index":6,"title":{},"body":{"injectables/ActivateMiddleware.html":{}}}],["src/common/middlewares/activate.middleware.ts:19",{"_index":15,"title":{},"body":{"injectables/ActivateMiddleware.html":{}}}],["src/common/middlewares/activate.middleware.ts:24",{"_index":27,"title":{},"body":{"injectables/ActivateMiddleware.html":{}}}],["src/common/middlewares/admin",{"_index":819,"title":{},"body":{"injectables/AdminUserMiddleware.html":{}}}],["src/common/middlewares/auth.middleware.ts",{"_index":1329,"title":{},"body":{"injectables/AuthMiddleware.html":{}}}],["src/common/middlewares/auth.middleware.ts:13",{"_index":1330,"title":{},"body":{"injectables/AuthMiddleware.html":{}}}],["src/common/middlewares/initialize",{"_index":1993,"title":{},"body":{"injectables/InitializeEmailMiddleware.html":{},"injectables/InitializeUserMiddleware.html":{}}}],["src/common/middlewares/product.mddleware.ts",{"_index":3301,"title":{},"body":{"injectables/UserMiddleware.html":{}}}],["src/common/middlewares/product.mddleware.ts:13",{"_index":3302,"title":{},"body":{"injectables/UserMiddleware.html":{}}}],["src/common/middlewares/product.middleware.ts",{"_index":2878,"title":{},"body":{"injectables/ProductMiddleware.html":{}}}],["src/common/middlewares/product.middleware.ts:13",{"_index":2879,"title":{},"body":{"injectables/ProductMiddleware.html":{}}}],["src/common/middlewares/user",{"_index":3247,"title":{},"body":{"injectables/UserAdminMiddleware.html":{}}}],["src/common/middlewares/user.middleware",{"_index":2893,"title":{},"body":{"modules/ProductModule.html":{}}}],["src/common/middlewares/user.middleware.ts",{"_index":3303,"title":{},"body":{"injectables/UserMiddleware-1.html":{}}}],["src/common/middlewares/user.middleware.ts:13",{"_index":3304,"title":{},"body":{"injectables/UserMiddleware-1.html":{}}}],["src/common/pipes/body",{"_index":2917,"title":{},"body":{"classes/RequestValidator.html":{}}}],["src/common/pipes/formdata.pipe.ts",{"_index":2627,"title":{},"body":{"classes/ParseFormDataJsonPipe.html":{},"miscellaneous/typealiases.html":{}}}],["src/common/pipes/formdata.pipe.ts:12",{"_index":2635,"title":{},"body":{"classes/ParseFormDataJsonPipe.html":{}}}],["src/common/pipes/formdata.pipe.ts:9",{"_index":2631,"title":{},"body":{"classes/ParseFormDataJsonPipe.html":{}}}],["src/common/pipes/parse.json.pipe.ts",{"_index":2651,"title":{},"body":{"injectables/ParseJsonPipe.html":{}}}],["src/common/pipes/parse.json.pipe.ts:13",{"_index":2655,"title":{},"body":{"injectables/ParseJsonPipe.html":{}}}],["src/common/pipes/parse.json.pipe.ts:5",{"_index":2653,"title":{},"body":{"injectables/ParseJsonPipe.html":{}}}],["src/common/pipes/validation.pipe.ts",{"_index":3481,"title":{},"body":{"injectables/ValidateDto.html":{}}}],["src/common/pipes/validation.pipe.ts:8",{"_index":3482,"title":{},"body":{"injectables/ValidateDto.html":{}}}],["src/core/core.module.ts",{"_index":1652,"title":{},"body":{"modules/CoreModule.html":{}}}],["src/core/events/jwt",{"_index":2036,"title":{},"body":{"classes/JwtRefreshTokenDeletedEvent.html":{}}}],["src/core/filters/all",{"_index":842,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["src/core/interceptors/global.interceptor.ts",{"_index":1967,"title":{},"body":{"injectables/GlobalInterceptor.html":{}}}],["src/core/interceptors/global.interceptor.ts:13",{"_index":1971,"title":{},"body":{"injectables/GlobalInterceptor.html":{}}}],["src/core/interfaces/admin.interfaces.ts",{"_index":309,"title":{},"body":{"interfaces/AdminInterface.html":{},"interfaces/AdminRefreshTokenCreationAttrbs.html":{},"interfaces/AdmincreationAttrbs.html":{}}}],["src/core/interfaces/auth.interfaces.ts",{"_index":1377,"title":{},"body":{"interfaces/AuthUser.html":{},"interfaces/CodeDto.html":{},"interfaces/Payload.html":{},"interfaces/ReturnedAdmin.html":{},"interfaces/ReturnedOwner.html":{},"interfaces/ReturnedUser.html":{},"interfaces/Tokens.html":{}}}],["src/core/interfaces/owner.interfaces.ts",{"_index":2453,"title":{},"body":{"interfaces/OwnerCreationAttrbs.html":{},"interfaces/OwnerRefreshTokenCreationAttrbs.html":{}}}],["src/core/interfaces/product.interfaces.ts",{"_index":1615,"title":{},"body":{"interfaces/CategoryCreationAtrb.html":{},"interfaces/ProductCreationAttrs.html":{},"interfaces/ReturnedCategory.html":{},"interfaces/ReturnedProduct.html":{},"interfaces/ReturnedProducts.html":{},"interfaces/ReturnedReview.html":{},"interfaces/ReviewCreationAtrb.html":{}}}],["src/core/interfaces/user.interfaces.ts",{"_index":2005,"title":{},"body":{"interfaces/InitializeUser.html":{},"interfaces/RolecreationAttrbs.html":{},"interfaces/UserInterface.html":{},"interfaces/UserRefreshCreationAttrbs.html":{},"interfaces/UsercreationAttrbs.html":{},"interfaces/ValidateUser.html":{}}}],["src/core/middlewares/cors.middleware.ts",{"_index":1674,"title":{},"body":{"injectables/CorsMiddleware.html":{},"interfaces/RequestHeaders.html":{}}}],["src/core/middlewares/cors.middleware.ts:17",{"_index":2916,"title":{},"body":{"interfaces/RequestHeaders.html":{}}}],["src/core/middlewares/cors.middleware.ts:23",{"_index":1682,"title":{},"body":{"injectables/CorsMiddleware.html":{}}}],["src/core/middlewares/cors.middleware.ts:24",{"_index":1680,"title":{},"body":{"injectables/CorsMiddleware.html":{}}}],["src/core/middlewares/cors.middleware.ts:57",{"_index":1678,"title":{},"body":{"injectables/CorsMiddleware.html":{}}}],["src/core/middlewares/location.middleware.ts",{"_index":2048,"title":{},"body":{"injectables/LocationMiddleware.html":{}}}],["src/core/middlewares/location.middleware.ts:16",{"_index":2049,"title":{},"body":{"injectables/LocationMiddleware.html":{}}}],["src/core/processors/garbage.processor.ts",{"_index":1950,"title":{},"body":{"classes/GarbageCollectingProcessor.html":{}}}],["src/core/processors/garbage.processor.ts:10",{"_index":1957,"title":{},"body":{"classes/GarbageCollectingProcessor.html":{}}}],["src/core/processors/garbage.processor.ts:7",{"_index":1953,"title":{},"body":{"classes/GarbageCollectingProcessor.html":{}}}],["src/core/services/cluster.service.ts",{"_index":963,"title":{},"body":{"injectables/AppClusterService.html":{},"interfaces/Msg.html":{},"miscellaneous/typealiases.html":{}}}],["src/core/services/cluster.service.ts:11",{"_index":976,"title":{},"body":{"injectables/AppClusterService.html":{}}}],["src/core/services/cluster.service.ts:12",{"_index":969,"title":{},"body":{"injectables/AppClusterService.html":{}}}],["src/core/services/cluster.service.ts:40",{"_index":974,"title":{},"body":{"injectables/AppClusterService.html":{}}}],["src/core/services/cluster.service.ts:55",{"_index":972,"title":{},"body":{"injectables/AppClusterService.html":{}}}],["src/core/services/events.service.ts",{"_index":1080,"title":{},"body":{"injectables/AppListener.html":{}}}],["src/core/services/events.service.ts:9",{"_index":1085,"title":{},"body":{"injectables/AppListener.html":{}}}],["src/core/services/file.service.ts",{"_index":1897,"title":{},"body":{"injectables/FilesService.html":{},"interfaces/fileCreated.html":{}}}],["src/core/services/file.service.ts:17",{"_index":1904,"title":{},"body":{"injectables/FilesService.html":{}}}],["src/core/services/file.service.ts:36",{"_index":1914,"title":{},"body":{"injectables/FilesService.html":{}}}],["src/core/services/file.service.ts:44",{"_index":1907,"title":{},"body":{"injectables/FilesService.html":{}}}],["src/core/services/file.service.ts:55",{"_index":1912,"title":{},"body":{"injectables/FilesService.html":{}}}],["src/core/services/file.service.ts:69",{"_index":1910,"title":{},"body":{"injectables/FilesService.html":{}}}],["src/core/services/scedule.service.ts",{"_index":3093,"title":{},"body":{"injectables/TasksService.html":{}}}],["src/core/services/scedule.service.ts:120",{"_index":3128,"title":{},"body":{"injectables/TasksService.html":{}}}],["src/core/services/scedule.service.ts:127",{"_index":3134,"title":{},"body":{"injectables/TasksService.html":{}}}],["src/core/services/scedule.service.ts:15",{"_index":3111,"title":{},"body":{"injectables/TasksService.html":{}}}],["src/core/services/scedule.service.ts:31",{"_index":3132,"title":{},"body":{"injectables/TasksService.html":{}}}],["src/core/services/scedule.service.ts:45",{"_index":3124,"title":{},"body":{"injectables/TasksService.html":{}}}],["src/core/services/scedule.service.ts:51",{"_index":3117,"title":{},"body":{"injectables/TasksService.html":{}}}],["src/core/services/scedule.service.ts:66",{"_index":3126,"title":{},"body":{"injectables/TasksService.html":{}}}],["src/core/services/scedule.service.ts:73",{"_index":3133,"title":{},"body":{"injectables/TasksService.html":{}}}],["src/core/services/scedule.service.ts:79",{"_index":3130,"title":{},"body":{"injectables/TasksService.html":{}}}],["src/core/services/scedule.service.ts:9",{"_index":3108,"title":{},"body":{"injectables/TasksService.html":{}}}],["src/core/services/scedule.service.ts:91",{"_index":3122,"title":{},"body":{"injectables/TasksService.html":{}}}],["src/mail/mail.module.ts",{"_index":2062,"title":{},"body":{"modules/MailModule.html":{}}}],["src/mail/mail.service.ts",{"_index":2082,"title":{},"body":{"injectables/MailService.html":{}}}],["src/mail/mail.service.ts:19",{"_index":2088,"title":{},"body":{"injectables/MailService.html":{}}}],["src/mail/mail.service.ts:27",{"_index":2093,"title":{},"body":{"injectables/MailService.html":{}}}],["src/mail/mail.service.ts:62",{"_index":2090,"title":{},"body":{"injectables/MailService.html":{}}}],["src/mail/mail.service.ts:97",{"_index":2095,"title":{},"body":{"injectables/MailService.html":{}}}],["src/main.ts",{"_index":3588,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/orders/models/order.model.ts",{"_index":2289,"title":{},"body":{"classes/Order.html":{}}}],["src/orders/models/order.model.ts:24",{"_index":2295,"title":{},"body":{"classes/Order.html":{}}}],["src/orders/models/order.model.ts:31",{"_index":2297,"title":{},"body":{"classes/Order.html":{}}}],["src/orders/models/order.model.ts:38",{"_index":2301,"title":{},"body":{"classes/Order.html":{}}}],["src/orders/models/order.model.ts:44",{"_index":2299,"title":{},"body":{"classes/Order.html":{}}}],["src/orders/models/order.model.ts:47",{"_index":2300,"title":{},"body":{"classes/Order.html":{}}}],["src/orders/models/order.model.ts:50",{"_index":2296,"title":{},"body":{"classes/Order.html":{}}}],["src/orders/models/order.model.ts:53",{"_index":2298,"title":{},"body":{"classes/Order.html":{}}}],["src/orders/models/order.model.ts:55",{"_index":2304,"title":{},"body":{"classes/Order.html":{}}}],["src/orders/models/order.model.ts:59",{"_index":2303,"title":{},"body":{"classes/Order.html":{}}}],["src/orders/models/order.model.ts:63",{"_index":2306,"title":{},"body":{"classes/Order.html":{}}}],["src/orders/models/order.model.ts:68",{"_index":2302,"title":{},"body":{"classes/Order.html":{}}}],["src/orders/models/order.product.model.ts",{"_index":2314,"title":{},"body":{"classes/OrderProduct.html":{}}}],["src/orders/models/order.product.model.ts:22",{"_index":2317,"title":{},"body":{"classes/OrderProduct.html":{}}}],["src/orders/models/order.product.model.ts:32",{"_index":2322,"title":{},"body":{"classes/OrderProduct.html":{}}}],["src/orders/models/order.product.model.ts:38",{"_index":2320,"title":{},"body":{"classes/OrderProduct.html":{}}}],["src/orders/models/order.product.model.ts:48",{"_index":2319,"title":{},"body":{"classes/OrderProduct.html":{}}}],["src/orders/models/order.product.model.ts:57",{"_index":2323,"title":{},"body":{"classes/OrderProduct.html":{}}}],["src/orders/models/order.product.model.ts:60",{"_index":2318,"title":{},"body":{"classes/OrderProduct.html":{}}}],["src/orders/models/order.product.model.ts:63",{"_index":2321,"title":{},"body":{"classes/OrderProduct.html":{}}}],["src/orders/models/order.product.model.ts:65",{"_index":2325,"title":{},"body":{"classes/OrderProduct.html":{}}}],["src/orders/models/order.product.model.ts:69",{"_index":2324,"title":{},"body":{"classes/OrderProduct.html":{}}}],["src/orders/orders.controller.ts",{"_index":2330,"title":{},"body":{"controllers/OrdersController.html":{}}}],["src/orders/orders.module.ts",{"_index":2335,"title":{},"body":{"modules/OrdersModule.html":{}}}],["src/orders/orders.service.ts",{"_index":2340,"title":{},"body":{"injectables/OrdersService.html":{}}}],["src/owner/dto/create.owner.dto.ts",{"_index":1802,"title":{},"body":{"classes/CreateOwnerDto.html":{}}}],["src/owner/dto/create.owner.dto.ts:16",{"_index":1808,"title":{},"body":{"classes/CreateOwnerDto.html":{}}}],["src/owner/dto/create.owner.dto.ts:23",{"_index":1814,"title":{},"body":{"classes/CreateOwnerDto.html":{}}}],["src/owner/dto/create.owner.dto.ts:33",{"_index":1813,"title":{},"body":{"classes/CreateOwnerDto.html":{}}}],["src/owner/dto/create.owner.dto.ts:41",{"_index":1806,"title":{},"body":{"classes/CreateOwnerDto.html":{}}}],["src/owner/dto/create.owner.dto.ts:51",{"_index":1812,"title":{},"body":{"classes/CreateOwnerDto.html":{}}}],["src/owner/dto/create.owner.dto.ts:58",{"_index":1805,"title":{},"body":{"classes/CreateOwnerDto.html":{}}}],["src/owner/dto/create.owner.dto.ts:67",{"_index":1809,"title":{},"body":{"classes/CreateOwnerDto.html":{}}}],["src/owner/dto/create.owner.refresh.token.dto.ts",{"_index":1818,"title":{},"body":{"classes/CreateOwnerRefreshTokenDto.html":{}}}],["src/owner/dto/create.owner.refresh.token.dto.ts:16",{"_index":1823,"title":{},"body":{"classes/CreateOwnerRefreshTokenDto.html":{}}}],["src/owner/dto/create.owner.refresh.token.dto.ts:23",{"_index":1821,"title":{},"body":{"classes/CreateOwnerRefreshTokenDto.html":{}}}],["src/owner/dto/create.owner.refresh.token.dto.ts:31",{"_index":1820,"title":{},"body":{"classes/CreateOwnerRefreshTokenDto.html":{}}}],["src/owner/dto/create.owner.refresh.token.dto.ts:40",{"_index":1822,"title":{},"body":{"classes/CreateOwnerRefreshTokenDto.html":{}}}],["src/owner/dto/create.owner.refresh.token.dto.ts:47",{"_index":1824,"title":{},"body":{"classes/CreateOwnerRefreshTokenDto.html":{}}}],["src/owner/models/owner.model.ts",{"_index":2341,"title":{},"body":{"classes/Owner.html":{}}}],["src/owner/models/owner.model.ts:102",{"_index":2384,"title":{},"body":{"classes/Owner.html":{}}}],["src/owner/models/owner.model.ts:114",{"_index":2377,"title":{},"body":{"classes/Owner.html":{}}}],["src/owner/models/owner.model.ts:127",{"_index":2371,"title":{},"body":{"classes/Owner.html":{}}}],["src/owner/models/owner.model.ts:140",{"_index":2373,"title":{},"body":{"classes/Owner.html":{}}}],["src/owner/models/owner.model.ts:154",{"_index":2380,"title":{},"body":{"classes/Owner.html":{}}}],["src/owner/models/owner.model.ts:167",{"_index":2368,"title":{},"body":{"classes/Owner.html":{}}}],["src/owner/models/owner.model.ts:170",{"_index":2386,"title":{},"body":{"classes/Owner.html":{}}}],["src/owner/models/owner.model.ts:173",{"_index":2391,"title":{},"body":{"classes/Owner.html":{}}}],["src/owner/models/owner.model.ts:176",{"_index":2381,"title":{},"body":{"classes/Owner.html":{}}}],["src/owner/models/owner.model.ts:178",{"_index":2400,"title":{},"body":{"classes/Owner.html":{}}}],["src/owner/models/owner.model.ts:182",{"_index":2417,"title":{},"body":{"classes/Owner.html":{}}}],["src/owner/models/owner.model.ts:187",{"_index":2408,"title":{},"body":{"classes/Owner.html":{}}}],["src/owner/models/owner.model.ts:191",{"_index":2427,"title":{},"body":{"classes/Owner.html":{}}}],["src/owner/models/owner.model.ts:196",{"_index":2403,"title":{},"body":{"classes/Owner.html":{}}}],["src/owner/models/owner.model.ts:200",{"_index":2419,"title":{},"body":{"classes/Owner.html":{}}}],["src/owner/models/owner.model.ts:205",{"_index":2398,"title":{},"body":{"classes/Owner.html":{}}}],["src/owner/models/owner.model.ts:209",{"_index":2404,"title":{},"body":{"classes/Owner.html":{}}}],["src/owner/models/owner.model.ts:213",{"_index":2399,"title":{},"body":{"classes/Owner.html":{}}}],["src/owner/models/owner.model.ts:217",{"_index":2415,"title":{},"body":{"classes/Owner.html":{}}}],["src/owner/models/owner.model.ts:222",{"_index":2397,"title":{},"body":{"classes/Owner.html":{}}}],["src/owner/models/owner.model.ts:226",{"_index":2412,"title":{},"body":{"classes/Owner.html":{}}}],["src/owner/models/owner.model.ts:231",{"_index":2406,"title":{},"body":{"classes/Owner.html":{}}}],["src/owner/models/owner.model.ts:235",{"_index":2423,"title":{},"body":{"classes/Owner.html":{}}}],["src/owner/models/owner.model.ts:240",{"_index":2407,"title":{},"body":{"classes/Owner.html":{}}}],["src/owner/models/owner.model.ts:244",{"_index":2425,"title":{},"body":{"classes/Owner.html":{}}}],["src/owner/models/owner.model.ts:249",{"_index":2401,"title":{},"body":{"classes/Owner.html":{}}}],["src/owner/models/owner.model.ts:253",{"_index":2421,"title":{},"body":{"classes/Owner.html":{}}}],["src/owner/models/owner.model.ts:258",{"_index":2396,"title":{},"body":{"classes/Owner.html":{}}}],["src/owner/models/owner.model.ts:262",{"_index":2410,"title":{},"body":{"classes/Owner.html":{}}}],["src/owner/models/owner.model.ts:267",{"_index":2405,"title":{},"body":{"classes/Owner.html":{}}}],["src/owner/models/owner.model.ts:271",{"_index":2402,"title":{},"body":{"classes/Owner.html":{}}}],["src/owner/models/owner.model.ts:275",{"_index":2395,"title":{},"body":{"classes/Owner.html":{}}}],["src/owner/models/owner.model.ts:31",{"_index":2375,"title":{},"body":{"classes/Owner.html":{}}}],["src/owner/models/owner.model.ts:41",{"_index":2374,"title":{},"body":{"classes/Owner.html":{}}}],["src/owner/models/owner.model.ts:50",{"_index":2379,"title":{},"body":{"classes/Owner.html":{}}}],["src/owner/models/owner.model.ts:59",{"_index":2393,"title":{},"body":{"classes/Owner.html":{}}}],["src/owner/models/owner.model.ts:68",{"_index":2385,"title":{},"body":{"classes/Owner.html":{}}}],["src/owner/models/owner.model.ts:77",{"_index":2388,"title":{},"body":{"classes/Owner.html":{}}}],["src/owner/models/owner.model.ts:89",{"_index":2390,"title":{},"body":{"classes/Owner.html":{}}}],["src/owner/models/owner.refresh.token.model.ts",{"_index":2524,"title":{},"body":{"classes/OwnerRefreshToken.html":{}}}],["src/owner/models/owner.refresh.token.model.ts:103",{"_index":2531,"title":{},"body":{"classes/OwnerRefreshToken.html":{}}}],["src/owner/models/owner.refresh.token.model.ts:106",{"_index":2532,"title":{},"body":{"classes/OwnerRefreshToken.html":{}}}],["src/owner/models/owner.refresh.token.model.ts:108",{"_index":2540,"title":{},"body":{"classes/OwnerRefreshToken.html":{}}}],["src/owner/models/owner.refresh.token.model.ts:112",{"_index":2545,"title":{},"body":{"classes/OwnerRefreshToken.html":{}}}],["src/owner/models/owner.refresh.token.model.ts:117",{"_index":2544,"title":{},"body":{"classes/OwnerRefreshToken.html":{}}}],["src/owner/models/owner.refresh.token.model.ts:121",{"_index":2549,"title":{},"body":{"classes/OwnerRefreshToken.html":{}}}],["src/owner/models/owner.refresh.token.model.ts:126",{"_index":2543,"title":{},"body":{"classes/OwnerRefreshToken.html":{}}}],["src/owner/models/owner.refresh.token.model.ts:130",{"_index":2547,"title":{},"body":{"classes/OwnerRefreshToken.html":{}}}],["src/owner/models/owner.refresh.token.model.ts:135",{"_index":2542,"title":{},"body":{"classes/OwnerRefreshToken.html":{}}}],["src/owner/models/owner.refresh.token.model.ts:139",{"_index":2541,"title":{},"body":{"classes/OwnerRefreshToken.html":{}}}],["src/owner/models/owner.refresh.token.model.ts:143",{"_index":2546,"title":{},"body":{"classes/OwnerRefreshToken.html":{}}}],["src/owner/models/owner.refresh.token.model.ts:29",{"_index":2530,"title":{},"body":{"classes/OwnerRefreshToken.html":{}}}],["src/owner/models/owner.refresh.token.model.ts:38",{"_index":2539,"title":{},"body":{"classes/OwnerRefreshToken.html":{}}}],["src/owner/models/owner.refresh.token.model.ts:48",{"_index":2528,"title":{},"body":{"classes/OwnerRefreshToken.html":{}}}],["src/owner/models/owner.refresh.token.model.ts:61",{"_index":2537,"title":{},"body":{"classes/OwnerRefreshToken.html":{}}}],["src/owner/models/owner.refresh.token.model.ts:69",{"_index":2535,"title":{},"body":{"classes/OwnerRefreshToken.html":{}}}],["src/owner/models/owner.refresh.token.model.ts:83",{"_index":2533,"title":{},"body":{"classes/OwnerRefreshToken.html":{}}}],["src/owner/models/owner.refresh.token.model.ts:90",{"_index":2529,"title":{},"body":{"classes/OwnerRefreshToken.html":{}}}],["src/owner/owner.module.ts",{"_index":2518,"title":{},"body":{"modules/OwnerModule.html":{}}}],["src/owner/services/jwt",{"_index":2455,"title":{},"body":{"injectables/OwnerJwtRefreshService.html":{}}}],["src/owner/services/owner.service.ts",{"_index":2554,"title":{},"body":{"injectables/OwnerService.html":{}}}],["src/owner/services/owner.service.ts:100",{"_index":2569,"title":{},"body":{"injectables/OwnerService.html":{}}}],["src/owner/services/owner.service.ts:120",{"_index":2574,"title":{},"body":{"injectables/OwnerService.html":{}}}],["src/owner/services/owner.service.ts:130",{"_index":2578,"title":{},"body":{"injectables/OwnerService.html":{}}}],["src/owner/services/owner.service.ts:140",{"_index":2576,"title":{},"body":{"injectables/OwnerService.html":{}}}],["src/owner/services/owner.service.ts:148",{"_index":2580,"title":{},"body":{"injectables/OwnerService.html":{}}}],["src/owner/services/owner.service.ts:156",{"_index":2586,"title":{},"body":{"injectables/OwnerService.html":{}}}],["src/owner/services/owner.service.ts:171",{"_index":2567,"title":{},"body":{"injectables/OwnerService.html":{}}}],["src/owner/services/owner.service.ts:185",{"_index":2584,"title":{},"body":{"injectables/OwnerService.html":{}}}],["src/owner/services/owner.service.ts:193",{"_index":2581,"title":{},"body":{"injectables/OwnerService.html":{}}}],["src/owner/services/owner.service.ts:208",{"_index":2565,"title":{},"body":{"injectables/OwnerService.html":{}}}],["src/owner/services/owner.service.ts:216",{"_index":2583,"title":{},"body":{"injectables/OwnerService.html":{}}}],["src/owner/services/owner.service.ts:35",{"_index":2563,"title":{},"body":{"injectables/OwnerService.html":{}}}],["src/owner/services/owner.service.ts:41",{"_index":2573,"title":{},"body":{"injectables/OwnerService.html":{}}}],["src/owner/services/owner.service.ts:78",{"_index":2571,"title":{},"body":{"injectables/OwnerService.html":{}}}],["src/product/dto/create.product.dto.ts",{"_index":1826,"title":{},"body":{"classes/CreateProductDto.html":{},"classes/Nested.html":{}}}],["src/product/dto/create.product.dto.ts:13",{"_index":2280,"title":{},"body":{"classes/Nested.html":{}}}],["src/product/dto/create.product.dto.ts:17",{"_index":2279,"title":{},"body":{"classes/Nested.html":{}}}],["src/product/dto/create.product.dto.ts:21",{"_index":2278,"title":{},"body":{"classes/Nested.html":{}}}],["src/product/dto/create.product.dto.ts:26",{"_index":1834,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["src/product/dto/create.product.dto.ts:35",{"_index":1828,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["src/product/dto/create.product.dto.ts:45",{"_index":1830,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["src/product/dto/create.product.dto.ts:54",{"_index":1835,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["src/product/dto/create.product.dto.ts:63",{"_index":1836,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["src/product/dto/create.product.dto.ts:69",{"_index":1833,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["src/product/dto/create.product.dto.ts:76",{"_index":1837,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["src/product/dto/create.product.dto.ts:9",{"_index":2281,"title":{},"body":{"classes/Nested.html":{}}}],["src/product/dto/update.product.dto.ts",{"_index":2282,"title":{},"body":{"classes/Nested-1.html":{},"classes/UpdateProductDto.html":{}}}],["src/product/dto/update.product.dto.ts:11",{"_index":2285,"title":{},"body":{"classes/Nested-1.html":{}}}],["src/product/dto/update.product.dto.ts:15",{"_index":2284,"title":{},"body":{"classes/Nested-1.html":{}}}],["src/product/dto/update.product.dto.ts:19",{"_index":2283,"title":{},"body":{"classes/Nested-1.html":{}}}],["src/product/dto/update.product.dto.ts:24",{"_index":3232,"title":{},"body":{"classes/UpdateProductDto.html":{}}}],["src/product/dto/update.product.dto.ts:33",{"_index":3229,"title":{},"body":{"classes/UpdateProductDto.html":{}}}],["src/product/dto/update.product.dto.ts:43",{"_index":3230,"title":{},"body":{"classes/UpdateProductDto.html":{}}}],["src/product/dto/update.product.dto.ts:52",{"_index":3233,"title":{},"body":{"classes/UpdateProductDto.html":{}}}],["src/product/dto/update.product.dto.ts:61",{"_index":3234,"title":{},"body":{"classes/UpdateProductDto.html":{}}}],["src/product/dto/update.product.dto.ts:67",{"_index":3231,"title":{},"body":{"classes/UpdateProductDto.html":{}}}],["src/product/dto/update.product.dto.ts:7",{"_index":2286,"title":{},"body":{"classes/Nested-1.html":{}}}],["src/product/dto/update.product.dto.ts:74",{"_index":3235,"title":{},"body":{"classes/UpdateProductDto.html":{}}}],["src/product/models/bookmark.products.ts",{"_index":1400,"title":{},"body":{"classes/BookmarksProducts.html":{}}}],["src/product/models/bookmark.products.ts:21",{"_index":1403,"title":{},"body":{"classes/BookmarksProducts.html":{}}}],["src/product/models/bookmark.products.ts:28",{"_index":1406,"title":{},"body":{"classes/BookmarksProducts.html":{}}}],["src/product/models/bookmark.products.ts:35",{"_index":1405,"title":{},"body":{"classes/BookmarksProducts.html":{}}}],["src/product/models/product.model.ts",{"_index":2708,"title":{},"body":{"classes/Product-1.html":{}}}],["src/product/models/product.model.ts:105",{"_index":2720,"title":{},"body":{"classes/Product-1.html":{}}}],["src/product/models/product.model.ts:113",{"_index":2727,"title":{},"body":{"classes/Product-1.html":{}}}],["src/product/models/product.model.ts:121",{"_index":2728,"title":{},"body":{"classes/Product-1.html":{}}}],["src/product/models/product.model.ts:129",{"_index":2717,"title":{},"body":{"classes/Product-1.html":{}}}],["src/product/models/product.model.ts:138",{"_index":2725,"title":{},"body":{"classes/Product-1.html":{}}}],["src/product/models/product.model.ts:143",{"_index":2714,"title":{},"body":{"classes/Product-1.html":{}}}],["src/product/models/product.model.ts:148",{"_index":2723,"title":{},"body":{"classes/Product-1.html":{}}}],["src/product/models/product.model.ts:151",{"_index":2722,"title":{},"body":{"classes/Product-1.html":{}}}],["src/product/models/product.model.ts:154",{"_index":2713,"title":{},"body":{"classes/Product-1.html":{}}}],["src/product/models/product.model.ts:157",{"_index":2716,"title":{},"body":{"classes/Product-1.html":{}}}],["src/product/models/product.model.ts:160",{"_index":2715,"title":{},"body":{"classes/Product-1.html":{}}}],["src/product/models/product.model.ts:163",{"_index":2721,"title":{},"body":{"classes/Product-1.html":{}}}],["src/product/models/product.model.ts:166",{"_index":2726,"title":{},"body":{"classes/Product-1.html":{}}}],["src/product/models/product.model.ts:168",{"_index":2733,"title":{},"body":{"classes/Product-1.html":{}}}],["src/product/models/product.model.ts:172",{"_index":2739,"title":{},"body":{"classes/Product-1.html":{}}}],["src/product/models/product.model.ts:177",{"_index":2732,"title":{},"body":{"classes/Product-1.html":{}}}],["src/product/models/product.model.ts:181",{"_index":2731,"title":{},"body":{"classes/Product-1.html":{}}}],["src/product/models/product.model.ts:185",{"_index":2736,"title":{},"body":{"classes/Product-1.html":{}}}],["src/product/models/product.model.ts:189",{"_index":2742,"title":{},"body":{"classes/Product-1.html":{}}}],["src/product/models/product.model.ts:194",{"_index":2730,"title":{},"body":{"classes/Product-1.html":{}}}],["src/product/models/product.model.ts:198",{"_index":2738,"title":{},"body":{"classes/Product-1.html":{}}}],["src/product/models/product.model.ts:203",{"_index":2735,"title":{},"body":{"classes/Product-1.html":{}}}],["src/product/models/product.model.ts:34",{"_index":2719,"title":{},"body":{"classes/Product-1.html":{}}}],["src/product/models/product.model.ts:42",{"_index":2729,"title":{},"body":{"classes/Product-1.html":{}}}],["src/product/models/product.model.ts:44",{"_index":2737,"title":{},"body":{"classes/Product-1.html":{}}}],["src/product/models/product.model.ts:53",{"_index":2744,"title":{},"body":{"classes/Product-1.html":{}}}],["src/product/models/product.model.ts:69",{"_index":2718,"title":{},"body":{"classes/Product-1.html":{}}}],["src/product/models/product.model.ts:71",{"_index":2734,"title":{},"body":{"classes/Product-1.html":{}}}],["src/product/models/product.model.ts:80",{"_index":2741,"title":{},"body":{"classes/Product-1.html":{}}}],["src/product/models/product.model.ts:97",{"_index":2724,"title":{},"body":{"classes/Product-1.html":{}}}],["src/product/models/watched.products.model.ts",{"_index":3500,"title":{},"body":{"classes/WatchedProducts.html":{}}}],["src/product/models/watched.products.model.ts:22",{"_index":3501,"title":{},"body":{"classes/WatchedProducts.html":{}}}],["src/product/models/watched.products.model.ts:29",{"_index":3503,"title":{},"body":{"classes/WatchedProducts.html":{}}}],["src/product/models/watched.products.model.ts:36",{"_index":3502,"title":{},"body":{"classes/WatchedProducts.html":{}}}],["src/product/product.controller.ts",{"_index":2759,"title":{},"body":{"controllers/ProductController.html":{}}}],["src/product/product.controller.ts:103",{"_index":2801,"title":{},"body":{"controllers/ProductController.html":{}}}],["src/product/product.controller.ts:115",{"_index":2798,"title":{},"body":{"controllers/ProductController.html":{}}}],["src/product/product.controller.ts:131",{"_index":2811,"title":{},"body":{"controllers/ProductController.html":{}}}],["src/product/product.controller.ts:147",{"_index":2777,"title":{},"body":{"controllers/ProductController.html":{}}}],["src/product/product.controller.ts:162",{"_index":2774,"title":{},"body":{"controllers/ProductController.html":{}}}],["src/product/product.controller.ts:235",{"_index":2783,"title":{},"body":{"controllers/ProductController.html":{}}}],["src/product/product.controller.ts:314",{"_index":2815,"title":{},"body":{"controllers/ProductController.html":{}}}],["src/product/product.controller.ts:344",{"_index":2791,"title":{},"body":{"controllers/ProductController.html":{}}}],["src/product/product.controller.ts:357",{"_index":2787,"title":{},"body":{"controllers/ProductController.html":{}}}],["src/product/product.controller.ts:59",{"_index":2804,"title":{},"body":{"controllers/ProductController.html":{}}}],["src/product/product.controller.ts:72",{"_index":2808,"title":{},"body":{"controllers/ProductController.html":{}}}],["src/product/product.controller.ts:86",{"_index":2795,"title":{},"body":{"controllers/ProductController.html":{}}}],["src/product/product.model.ts",{"_index":2661,"title":{},"body":{"classes/Product.html":{}}}],["src/product/product.model.ts:102",{"_index":2669,"title":{},"body":{"classes/Product.html":{}}}],["src/product/product.model.ts:107",{"_index":2678,"title":{},"body":{"classes/Product.html":{}}}],["src/product/product.model.ts:110",{"_index":2677,"title":{},"body":{"classes/Product.html":{}}}],["src/product/product.model.ts:113",{"_index":2668,"title":{},"body":{"classes/Product.html":{}}}],["src/product/product.model.ts:116",{"_index":2671,"title":{},"body":{"classes/Product.html":{}}}],["src/product/product.model.ts:119",{"_index":2670,"title":{},"body":{"classes/Product.html":{}}}],["src/product/product.model.ts:122",{"_index":2676,"title":{},"body":{"classes/Product.html":{}}}],["src/product/product.model.ts:124",{"_index":2688,"title":{},"body":{"classes/Product.html":{}}}],["src/product/product.model.ts:128",{"_index":2694,"title":{},"body":{"classes/Product.html":{}}}],["src/product/product.model.ts:133",{"_index":2687,"title":{},"body":{"classes/Product.html":{}}}],["src/product/product.model.ts:137",{"_index":2686,"title":{},"body":{"classes/Product.html":{}}}],["src/product/product.model.ts:141",{"_index":2690,"title":{},"body":{"classes/Product.html":{}}}],["src/product/product.model.ts:145",{"_index":2695,"title":{},"body":{"classes/Product.html":{}}}],["src/product/product.model.ts:150",{"_index":2685,"title":{},"body":{"classes/Product.html":{}}}],["src/product/product.model.ts:154",{"_index":2692,"title":{},"body":{"classes/Product.html":{}}}],["src/product/product.model.ts:159",{"_index":2689,"title":{},"body":{"classes/Product.html":{}}}],["src/product/product.model.ts:31",{"_index":2674,"title":{},"body":{"classes/Product.html":{}}}],["src/product/product.model.ts:39",{"_index":2684,"title":{},"body":{"classes/Product.html":{}}}],["src/product/product.model.ts:47",{"_index":2673,"title":{},"body":{"classes/Product.html":{}}}],["src/product/product.model.ts:56",{"_index":2679,"title":{},"body":{"classes/Product.html":{}}}],["src/product/product.model.ts:64",{"_index":2675,"title":{},"body":{"classes/Product.html":{}}}],["src/product/product.model.ts:72",{"_index":2682,"title":{},"body":{"classes/Product.html":{}}}],["src/product/product.model.ts:80",{"_index":2683,"title":{},"body":{"classes/Product.html":{}}}],["src/product/product.model.ts:88",{"_index":2672,"title":{},"body":{"classes/Product.html":{}}}],["src/product/product.model.ts:97",{"_index":2680,"title":{},"body":{"classes/Product.html":{}}}],["src/product/product.module.ts",{"_index":2883,"title":{},"body":{"modules/ProductModule.html":{}}}],["src/product/product.module.ts:84",{"_index":2884,"title":{},"body":{"modules/ProductModule.html":{}}}],["src/repl.ts",{"_index":3587,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/reviews/create.review.dto.ts",{"_index":1857,"title":{},"body":{"classes/CreateReviewDto.html":{}}}],["src/reviews/create.review.dto.ts:12",{"_index":1862,"title":{},"body":{"classes/CreateReviewDto.html":{}}}],["src/reviews/create.review.dto.ts:17",{"_index":1861,"title":{},"body":{"classes/CreateReviewDto.html":{}}}],["src/reviews/create.review.dto.ts:7",{"_index":1860,"title":{},"body":{"classes/CreateReviewDto.html":{}}}],["src/reviews/models/product.reviews.model.ts",{"_index":2902,"title":{},"body":{"classes/ProductReviews.html":{}}}],["src/reviews/models/product.reviews.model.ts:22",{"_index":2904,"title":{},"body":{"classes/ProductReviews.html":{}}}],["src/reviews/models/product.reviews.model.ts:29",{"_index":2906,"title":{},"body":{"classes/ProductReviews.html":{}}}],["src/reviews/models/product.reviews.model.ts:36",{"_index":2905,"title":{},"body":{"classes/ProductReviews.html":{}}}],["src/reviews/models/review.model.ts",{"_index":2945,"title":{},"body":{"classes/Review.html":{}}}],["src/reviews/models/review.model.ts:23",{"_index":2946,"title":{},"body":{"classes/Review.html":{}}}],["src/reviews/models/review.model.ts:30",{"_index":2947,"title":{},"body":{"classes/Review.html":{}}}],["src/reviews/models/review.model.ts:37",{"_index":2951,"title":{},"body":{"classes/Review.html":{}}}],["src/reviews/models/review.model.ts:44",{"_index":2950,"title":{},"body":{"classes/Review.html":{}}}],["src/reviews/models/review.model.ts:51",{"_index":2949,"title":{},"body":{"classes/Review.html":{}}}],["src/reviews/models/review.model.ts:54",{"_index":2948,"title":{},"body":{"classes/Review.html":{}}}],["src/reviews/reviews.controller.ts",{"_index":2954,"title":{},"body":{"controllers/ReviewsController.html":{}}}],["src/reviews/reviews.controller.ts:39",{"_index":2959,"title":{},"body":{"controllers/ReviewsController.html":{}}}],["src/reviews/reviews.controller.ts:55",{"_index":2963,"title":{},"body":{"controllers/ReviewsController.html":{}}}],["src/reviews/reviews.module.ts",{"_index":2975,"title":{},"body":{"modules/ReviewsModule.html":{}}}],["src/reviews/reviews.module.ts:76",{"_index":2976,"title":{},"body":{"modules/ReviewsModule.html":{}}}],["src/reviews/reviews.service.ts",{"_index":2984,"title":{},"body":{"injectables/ReviewsService.html":{}}}],["src/reviews/reviews.service.ts:15",{"_index":2989,"title":{},"body":{"injectables/ReviewsService.html":{}}}],["src/reviews/reviews.service.ts:34",{"_index":2991,"title":{},"body":{"injectables/ReviewsService.html":{}}}],["src/reviews/reviews.service.ts:9",{"_index":2986,"title":{},"body":{"injectables/ReviewsService.html":{}}}],["src/roles/dto/create.role.dto.ts",{"_index":1864,"title":{},"body":{"classes/CreateRoleDto.html":{}}}],["src/roles/dto/create.role.dto.ts:10",{"_index":1869,"title":{},"body":{"classes/CreateRoleDto.html":{}}}],["src/roles/dto/create.role.dto.ts:16",{"_index":1867,"title":{},"body":{"classes/CreateRoleDto.html":{}}}],["src/roles/models/roles.model.ts",{"_index":3012,"title":{},"body":{"classes/Role.html":{}}}],["src/roles/models/roles.model.ts:26",{"_index":3020,"title":{},"body":{"classes/Role.html":{}}}],["src/roles/models/roles.model.ts:34",{"_index":3024,"title":{},"body":{"classes/Role.html":{}}}],["src/roles/models/roles.model.ts:42",{"_index":3019,"title":{},"body":{"classes/Role.html":{}}}],["src/roles/models/roles.model.ts:44",{"_index":3022,"title":{},"body":{"classes/Role.html":{}}}],["src/roles/models/roles.model.ts:47",{"_index":3017,"title":{},"body":{"classes/Role.html":{}}}],["src/roles/models/roles.model.ts:50",{"_index":3021,"title":{},"body":{"classes/Role.html":{}}}],["src/roles/models/roles.model.ts:52",{"_index":3027,"title":{},"body":{"classes/Role.html":{}}}],["src/roles/models/roles.model.ts:56",{"_index":3025,"title":{},"body":{"classes/Role.html":{}}}],["src/roles/models/roles.model.ts:60",{"_index":3026,"title":{},"body":{"classes/Role.html":{}}}],["src/roles/models/user.roles.model.ts",{"_index":3327,"title":{},"body":{"classes/UserRoles.html":{}}}],["src/roles/models/user.roles.model.ts:25",{"_index":3330,"title":{},"body":{"classes/UserRoles.html":{}}}],["src/roles/models/user.roles.model.ts:32",{"_index":3333,"title":{},"body":{"classes/UserRoles.html":{}}}],["src/roles/models/user.roles.model.ts:39",{"_index":3335,"title":{},"body":{"classes/UserRoles.html":{}}}],["src/roles/models/user.roles.model.ts:47",{"_index":3329,"title":{},"body":{"classes/UserRoles.html":{}}}],["src/roles/models/user.roles.model.ts:55",{"_index":3331,"title":{},"body":{"classes/UserRoles.html":{}}}],["src/roles/roles.controller.ts",{"_index":3034,"title":{},"body":{"controllers/RolesController.html":{}}}],["src/roles/roles.controller.ts:48",{"_index":3042,"title":{},"body":{"controllers/RolesController.html":{}}}],["src/roles/roles.controller.ts:69",{"_index":3046,"title":{},"body":{"controllers/RolesController.html":{}}}],["src/roles/roles.module.ts",{"_index":3066,"title":{},"body":{"modules/RolesModule.html":{}}}],["src/roles/roles.module.ts:87",{"_index":3067,"title":{},"body":{"modules/RolesModule.html":{}}}],["src/roles/roles.service.ts",{"_index":3072,"title":{},"body":{"injectables/RolesService.html":{}}}],["src/roles/roles.service.ts:13",{"_index":3078,"title":{},"body":{"injectables/RolesService.html":{}}}],["src/roles/roles.service.ts:7",{"_index":3074,"title":{},"body":{"injectables/RolesService.html":{}}}],["src/roles/roles.service.ts:9",{"_index":3077,"title":{},"body":{"injectables/RolesService.html":{}}}],["src/telegram/telegram.interface.ts",{"_index":1986,"title":{},"body":{"interfaces/ITelegramModuleAsyncOptions.html":{},"interfaces/ITelegramOptions.html":{}}}],["src/telegram/telegram.module.ts",{"_index":3181,"title":{},"body":{"modules/TelegramModule.html":{}}}],["src/telegram/telegram.module.ts:19",{"_index":3184,"title":{},"body":{"modules/TelegramModule.html":{}}}],["src/telegram/telegram.module.ts:9",{"_index":3188,"title":{},"body":{"modules/TelegramModule.html":{}}}],["src/telegram/telegram.service.ts",{"_index":3202,"title":{},"body":{"injectables/TelegramService.html":{}}}],["src/telegram/telegram.service.ts:16",{"_index":3207,"title":{},"body":{"injectables/TelegramService.html":{}}}],["src/telegram/telegram.service.ts:8",{"_index":3210,"title":{},"body":{"injectables/TelegramService.html":{}}}],["src/telegram/telegram.service.ts:9",{"_index":3205,"title":{},"body":{"injectables/TelegramService.html":{}}}],["src/users/dto/add",{"_index":122,"title":{},"body":{"classes/AddRoleDto.html":{}}}],["src/users/dto/ban",{"_index":1392,"title":{},"body":{"classes/BanUserDto.html":{}}}],["src/users/dto/create",{"_index":1871,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/CreateUserRefreshTokenDto.html":{}}}],["src/users/dto/update",{"_index":3237,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["src/users/models/user.refresh.token.model.ts",{"_index":3305,"title":{},"body":{"classes/UserRefreshToken.html":{}}}],["src/users/models/user.refresh.token.model.ts:102",{"_index":3324,"title":{},"body":{"classes/UserRefreshToken.html":{}}}],["src/users/models/user.refresh.token.model.ts:107",{"_index":3319,"title":{},"body":{"classes/UserRefreshToken.html":{}}}],["src/users/models/user.refresh.token.model.ts:111",{"_index":3318,"title":{},"body":{"classes/UserRefreshToken.html":{}}}],["src/users/models/user.refresh.token.model.ts:115",{"_index":3322,"title":{},"body":{"classes/UserRefreshToken.html":{}}}],["src/users/models/user.refresh.token.model.ts:30",{"_index":3310,"title":{},"body":{"classes/UserRefreshToken.html":{}}}],["src/users/models/user.refresh.token.model.ts:40",{"_index":3308,"title":{},"body":{"classes/UserRefreshToken.html":{}}}],["src/users/models/user.refresh.token.model.ts:53",{"_index":3316,"title":{},"body":{"classes/UserRefreshToken.html":{}}}],["src/users/models/user.refresh.token.model.ts:64",{"_index":3314,"title":{},"body":{"classes/UserRefreshToken.html":{}}}],["src/users/models/user.refresh.token.model.ts:71",{"_index":3309,"title":{},"body":{"classes/UserRefreshToken.html":{}}}],["src/users/models/user.refresh.token.model.ts:84",{"_index":3311,"title":{},"body":{"classes/UserRefreshToken.html":{}}}],["src/users/models/user.refresh.token.model.ts:87",{"_index":3312,"title":{},"body":{"classes/UserRefreshToken.html":{}}}],["src/users/models/user.refresh.token.model.ts:89",{"_index":3317,"title":{},"body":{"classes/UserRefreshToken.html":{}}}],["src/users/models/user.refresh.token.model.ts:93",{"_index":3321,"title":{},"body":{"classes/UserRefreshToken.html":{}}}],["src/users/models/user.refresh.token.model.ts:98",{"_index":3320,"title":{},"body":{"classes/UserRefreshToken.html":{}}}],["src/users/services/jwt",{"_index":3262,"title":{},"body":{"injectables/UserJwtRefreshTokenService.html":{}}}],["src/users/services/users.service.ts",{"_index":3392,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/services/users.service.ts:109",{"_index":3425,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/services/users.service.ts:122",{"_index":3408,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/services/users.service.ts:146",{"_index":3411,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/services/users.service.ts:174",{"_index":3415,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/services/users.service.ts:184",{"_index":3413,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/services/users.service.ts:192",{"_index":3417,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/services/users.service.ts:200",{"_index":3403,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/services/users.service.ts:212",{"_index":3404,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/services/users.service.ts:223",{"_index":3427,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/services/users.service.ts:238",{"_index":3423,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/services/users.service.ts:246",{"_index":3420,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/services/users.service.ts:261",{"_index":3406,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/services/users.service.ts:269",{"_index":3422,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/services/users.service.ts:38",{"_index":3400,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/services/users.service.ts:44",{"_index":3410,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/services/users.service.ts:88",{"_index":3419,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.controller.ts",{"_index":3339,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.controller.ts:100",{"_index":3360,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.controller.ts:64",{"_index":3356,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.controller.ts:77",{"_index":3353,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.controller.ts:91",{"_index":3349,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.module.ts",{"_index":3381,"title":{},"body":{"modules/UsersModule.html":{}}}],["src/users/users.module.ts:97",{"_index":3382,"title":{},"body":{"modules/UsersModule.html":{}}}],["sse",{"_index":1030,"title":{},"body":{"controllers/AppController.html":{}}}],["sse('sse",{"_index":1038,"title":{},"body":{"controllers/AppController.html":{}}}],["stack",{"_index":902,"title":{},"body":{"classes/ApiErrorExceptionFilter.html":{},"classes/ApiExceptionFilter.html":{}}}],["stalledinterval",{"_index":1170,"title":{},"body":{"modules/AppModule.html":{}}}],["start",{"_index":3606,"title":{},"body":{"index.html":{}}}],["start:dev",{"_index":3609,"title":{},"body":{"index.html":{}}}],["start:prodtest",{"_index":3610,"title":{},"body":{"index.html":{}}}],["started",{"_index":989,"title":{"index.html":{}},"body":{"injectables/AppClusterService.html":{},"interfaces/Msg.html":{}}}],["starter",{"_index":3600,"title":{},"body":{"index.html":{}}}],["startserver",{"_index":3582,"title":{},"body":{"miscellaneous/functions.html":{}}}],["static",{"_index":906,"title":{},"body":{"classes/ApiException.html":{},"injectables/AppClusterService.html":{},"modules/AppModule.html":{},"injectables/FilesService.html":{},"interfaces/Msg.html":{},"injectables/OwnerService.html":{},"injectables/ParseJsonPipe.html":{},"controllers/ProductController.html":{},"classes/RequestValidator.html":{},"modules/TelegramModule.html":{},"dependencies.html":{},"interfaces/fileCreated.html":{}}}],["status",{"_index":246,"title":{},"body":{"controllers/AdminController.html":{},"classes/ApiErrorExceptionFilter.html":{},"classes/ApiException.html":{},"classes/ApiExceptionFilter.html":{},"controllers/AuthController.html":{},"controllers/CategoriesController.html":{},"classes/HttpExceptionFilter.html":{},"controllers/RolesController.html":{},"controllers/UsersController.html":{}}}],["statuscode",{"_index":863,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"classes/ApiError.html":{},"classes/BadRequestError.html":{},"classes/HttpExceptionFilter.html":{},"classes/NotFoundError.html":{}}}],["stay",{"_index":3633,"title":{},"body":{"index.html":{}}}],["storage",{"_index":2857,"title":{},"body":{"controllers/ProductController.html":{}}}],["strict",{"_index":1057,"title":{},"body":{"controllers/AppController.html":{},"injectables/InitializeUserMiddleware.html":{}}}],["string",{"_index":61,"title":{},"body":{"injectables/ActivateMiddleware.html":{},"classes/AddRoleDto.html":{},"controllers/AdminController.html":{},"guards/AdminGuard.html":{},"interfaces/AdminInterface.html":{},"injectables/AdminJwtRefreshService.html":{},"classes/AdminRefreshToken.html":{},"interfaces/AdminRefreshTokenCreationAttrbs.html":{},"injectables/AdminService.html":{},"interfaces/AdmincreationAttrbs.html":{},"classes/ApiError.html":{},"classes/ApiException.html":{},"injectables/AppClusterService.html":{},"controllers/AppController.html":{},"controllers/AuthController.html":{},"guards/AuthFerfershGuard.html":{},"interfaces/AuthUser.html":{},"classes/BadRequestError.html":{},"classes/BanUserDto.html":{},"classes/Cart.html":{},"injectables/CategoriesService.html":{},"classes/Category.html":{},"interfaces/CategoryCreationAtrb.html":{},"classes/ChangeDto.html":{},"interfaces/CodeDto.html":{},"injectables/CorsMiddleware.html":{},"classes/CreateAccessTokenDto.html":{},"classes/CreateAdminDto.html":{},"classes/CreateAdminRefreshTokenDto.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateOwnerDto.html":{},"classes/CreateOwnerRefreshTokenDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateReviewDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserRefreshTokenDto.html":{},"injectables/FilesService.html":{},"interfaces/ITelegramModuleAsyncOptions.html":{},"interfaces/ITelegramOptions.html":{},"interfaces/InitializeUser.html":{},"classes/JwtRefreshTokenDeletedEvent.html":{},"classes/LoginDto.html":{},"injectables/MailService.html":{},"classes/MatchConstraint.html":{},"interfaces/Msg.html":{},"classes/Nested.html":{},"classes/Nested-1.html":{},"classes/NotFoundError.html":{},"classes/Order.html":{},"classes/Owner.html":{},"guards/OwnerAdminGuard.html":{},"interfaces/OwnerCreationAttrbs.html":{},"injectables/OwnerJwtRefreshService.html":{},"classes/OwnerRefreshToken.html":{},"interfaces/OwnerRefreshTokenCreationAttrbs.html":{},"injectables/OwnerService.html":{},"classes/ParseFormDataJsonPipe.html":{},"injectables/ParseJsonPipe.html":{},"interfaces/Payload.html":{},"classes/Product.html":{},"classes/Product-1.html":{},"controllers/ProductController.html":{},"interfaces/ProductCreationAttrs.html":{},"interfaces/RequestHeaders.html":{},"classes/RequestValidator.html":{},"classes/ResetDto.html":{},"interfaces/ReturnedAdmin.html":{},"interfaces/ReturnedCategory.html":{},"interfaces/ReturnedOwner.html":{},"interfaces/ReturnedProduct.html":{},"interfaces/ReturnedProducts.html":{},"interfaces/ReturnedReview.html":{},"interfaces/ReturnedUser.html":{},"classes/Review.html":{},"interfaces/ReviewCreationAtrb.html":{},"classes/Role.html":{},"interfaces/RolecreationAttrbs.html":{},"controllers/RolesController.html":{},"guards/RolesGuard.html":{},"injectables/RolesService.html":{},"classes/SignupDto.html":{},"injectables/TasksService.html":{},"injectables/TelegramService.html":{},"injectables/ThrottlerBehindProxyGuard.html":{},"interfaces/Tokens.html":{},"classes/UpdateCategoryDto.html":{},"classes/UpdateProductDto.html":{},"classes/UpdateUserDto.html":{},"guards/UserGuard.html":{},"interfaces/UserInterface.html":{},"injectables/UserJwtRefreshTokenService.html":{},"interfaces/UserRefreshCreationAttrbs.html":{},"classes/UserRefreshToken.html":{},"interfaces/UsercreationAttrbs.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"interfaces/ValidateUser.html":{},"interfaces/fileCreated.html":{},"miscellaneous/functions.html":{}}}],["string,name",{"_index":3116,"title":{},"body":{"injectables/TasksService.html":{}}}],["style",{"_index":1707,"title":{},"body":{"injectables/CorsMiddleware.html":{},"injectables/MailService.html":{},"interfaces/RequestHeaders.html":{}}}],["subject",{"_index":2104,"title":{},"body":{"injectables/MailService.html":{}}}],["submitted",{"_index":2310,"title":{},"body":{"classes/Order.html":{}}}],["success",{"_index":900,"title":{},"body":{"classes/ApiErrorExceptionFilter.html":{},"classes/ApiExceptionFilter.html":{}}}],["summary",{"_index":245,"title":{},"body":{"controllers/AdminController.html":{},"controllers/AuthController.html":{},"controllers/CategoriesController.html":{},"controllers/RolesController.html":{},"controllers/UsersController.html":{}}}],["sup",{"_index":2113,"title":{},"body":{"injectables/MailService.html":{}}}],["super(httpstatus.bad_request",{"_index":888,"title":{},"body":{"classes/ApiError.html":{},"classes/BadRequestError.html":{},"classes/NotFoundError.html":{}}}],["super(httpstatus.not_found",{"_index":883,"title":{},"body":{"classes/ApiError.html":{},"classes/BadRequestError.html":{},"classes/NotFoundError.html":{}}}],["super(message",{"_index":876,"title":{},"body":{"classes/ApiError.html":{},"classes/ApiException.html":{},"classes/BadRequestError.html":{},"classes/NotFoundError.html":{}}}],["super(response",{"_index":3497,"title":{},"body":{"classes/ValidationException.html":{}}}],["support",{"_index":3625,"title":{},"body":{"index.html":{},"modules.html":{}}}],["surname",{"_index":316,"title":{},"body":{"interfaces/AdminInterface.html":{},"interfaces/AdminRefreshTokenCreationAttrbs.html":{},"injectables/AdminService.html":{},"injectables/AdminUserMiddleware.html":{},"interfaces/AdmincreationAttrbs.html":{},"interfaces/AuthUser.html":{},"interfaces/CategoryCreationAtrb.html":{},"interfaces/CodeDto.html":{},"classes/CreateAdminDto.html":{},"classes/CreateOwnerDto.html":{},"classes/CreateReviewDto.html":{},"classes/CreateUserDto.html":{},"interfaces/InitializeUser.html":{},"classes/Owner.html":{},"interfaces/OwnerCreationAttrbs.html":{},"interfaces/OwnerRefreshTokenCreationAttrbs.html":{},"injectables/OwnerService.html":{},"interfaces/Payload.html":{},"interfaces/ProductCreationAttrs.html":{},"interfaces/ReturnedAdmin.html":{},"interfaces/ReturnedCategory.html":{},"interfaces/ReturnedOwner.html":{},"interfaces/ReturnedProduct.html":{},"interfaces/ReturnedProducts.html":{},"interfaces/ReturnedReview.html":{},"interfaces/ReturnedUser.html":{},"classes/Review.html":{},"interfaces/ReviewCreationAtrb.html":{},"injectables/ReviewsService.html":{},"interfaces/RolecreationAttrbs.html":{},"classes/SignupDto.html":{},"interfaces/Tokens.html":{},"classes/UpdateUserDto.html":{},"injectables/UserAdminMiddleware.html":{},"interfaces/UserInterface.html":{},"interfaces/UserRefreshCreationAttrbs.html":{},"interfaces/UsercreationAttrbs.html":{},"injectables/UsersService.html":{},"interfaces/ValidateUser.html":{}}}],["surname'})@column({type",{"_index":2392,"title":{},"body":{"classes/Owner.html":{}}}],["surname'})@isstring()@minlength(2)@maxlength(30)@matches(/[a",{"_index":1882,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/SignupDto.html":{},"classes/UpdateUserDto.html":{}}}],["surname_validation",{"_index":1883,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/SignupDto.html":{},"classes/UpdateUserDto.html":{}}}],["svg",{"_index":3643,"title":{},"body":{"modules.html":{}}}],["swagger",{"_index":3571,"title":{},"body":{"dependencies.html":{}}}],["synchronize",{"_index":1211,"title":{},"body":{"modules/AppModule.html":{}}}],["table",{"_index":644,"title":{},"body":{"classes/AdminRefreshToken.html":{},"classes/BookmarksProducts.html":{},"classes/Cart.html":{},"classes/CartProduct.html":{},"classes/CartProduct-1.html":{},"classes/Category.html":{},"injectables/MailService.html":{},"classes/Order.html":{},"classes/OrderProduct.html":{},"classes/Owner.html":{},"classes/OwnerRefreshToken.html":{},"classes/Product.html":{},"classes/Product-1.html":{},"classes/ProductCategories.html":{},"classes/ProductReviews.html":{},"classes/Review.html":{},"classes/Role.html":{},"classes/UserRefreshToken.html":{},"classes/UserRoles.html":{},"classes/WatchedProducts.html":{}}}],["table.es",{"_index":2221,"title":{},"body":{"injectables/MailService.html":{}}}],["tablename",{"_index":652,"title":{},"body":{"classes/AdminRefreshToken.html":{},"classes/BookmarksProducts.html":{},"classes/Cart.html":{},"classes/CartProduct.html":{},"classes/CartProduct-1.html":{},"classes/Category.html":{},"classes/Order.html":{},"classes/OrderProduct.html":{},"classes/Owner.html":{},"classes/OwnerRefreshToken.html":{},"classes/Product.html":{},"classes/Product-1.html":{},"classes/ProductCategories.html":{},"classes/ProductReviews.html":{},"classes/Review.html":{},"classes/Role.html":{},"classes/UserRefreshToken.html":{},"classes/UserRoles.html":{},"classes/WatchedProducts.html":{}}}],["target",{"_index":2268,"title":{},"body":{"classes/MatchConstraint.html":{}}}],["tasksservice",{"_index":339,"title":{"injectables/TasksService.html":{}},"body":{"injectables/AdminJwtRefreshService.html":{},"modules/AdminModule.html":{},"modules/AuthModule.html":{},"modules/CoreModule.html":{},"injectables/OwnerJwtRefreshService.html":{},"modules/OwnerModule.html":{},"modules/RolesModule.html":{},"injectables/TasksService.html":{},"injectables/UserJwtRefreshTokenService.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["td",{"_index":2174,"title":{},"body":{"injectables/MailService.html":{}}}],["td,.externalclass",{"_index":2123,"title":{},"body":{"injectables/MailService.html":{}}}],["td.es",{"_index":2220,"title":{},"body":{"injectables/MailService.html":{}}}],["telegraf",{"_index":3209,"title":{},"body":{"injectables/TelegramService.html":{},"dependencies.html":{}}}],["telegraf(options.token",{"_index":3213,"title":{},"body":{"injectables/TelegramService.html":{}}}],["telegram.constants",{"_index":3192,"title":{},"body":{"modules/TelegramModule.html":{},"injectables/TelegramService.html":{}}}],["telegram.interface",{"_index":3193,"title":{},"body":{"modules/TelegramModule.html":{},"injectables/TelegramService.html":{}}}],["telegram.service",{"_index":3195,"title":{},"body":{"modules/TelegramModule.html":{}}}],["telegram/telegram.config",{"_index":1128,"title":{},"body":{"modules/AppModule.html":{}}}],["telegram/telegram.module",{"_index":1126,"title":{},"body":{"modules/AppModule.html":{}}}],["telegram_module_options",{"_index":3191,"title":{},"body":{"modules/TelegramModule.html":{},"injectables/TelegramService.html":{}}}],["telegrammodule",{"_index":1103,"title":{"modules/TelegramModule.html":{}},"body":{"modules/AppModule.html":{},"modules/TelegramModule.html":{},"modules.html":{},"overview.html":{}}}],["telegrammodule.createasyncoptionsprovider(options",{"_index":3197,"title":{},"body":{"modules/TelegramModule.html":{}}}],["telegrammodule.forrootasync",{"_index":1145,"title":{},"body":{"modules/AppModule.html":{}}}],["telegramservice",{"_index":3194,"title":{"injectables/TelegramService.html":{}},"body":{"modules/TelegramModule.html":{},"injectables/TelegramService.html":{}}}],["test",{"_index":3613,"title":{},"body":{"index.html":{}}}],["test:covsupport",{"_index":3617,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":3615,"title":{},"body":{"index.html":{}}}],["tests",{"_index":3612,"title":{},"body":{"index.html":{}}}],["text",{"_index":2107,"title":{},"body":{"injectables/MailService.html":{}}}],["thanks",{"_index":3623,"title":{},"body":{"index.html":{}}}],["the&nbsp",{"_index":2241,"title":{},"body":{"injectables/MailService.html":{}}}],["this.activationcode",{"_index":2442,"title":{},"body":{"classes/Owner.html":{}}}],["this.addbookmark(productid",{"_index":2851,"title":{},"body":{"controllers/ProductController.html":{}}}],["this.addwatchedproduct(productid",{"_index":2849,"title":{},"body":{"controllers/ProductController.html":{}}}],["this.admin",{"_index":666,"title":{},"body":{"classes/AdminRefreshToken.html":{}}}],["this.adminagent",{"_index":665,"title":{},"body":{"classes/AdminRefreshToken.html":{}}}],["this.adminid",{"_index":2706,"title":{},"body":{"classes/Product.html":{},"classes/Product-1.html":{}}}],["this.adminjwtrefreshtokenservice.findtoken",{"_index":299,"title":{},"body":{"guards/AdminGuard.html":{}}}],["this.adminjwtrefreshtokenservice.findtoken(decodedtoken",{"_index":2022,"title":{},"body":{"injectables/InitializeUserMiddleware.html":{},"guards/OwnerAdminGuard.html":{}}}],["this.adminjwtrefreshtokenservice.validaterefreshtoken",{"_index":304,"title":{},"body":{"guards/AdminGuard.html":{},"guards/OwnerAdminGuard.html":{}}}],["this.adminrefreshtokenrepository.create",{"_index":411,"title":{},"body":{"injectables/AdminJwtRefreshService.html":{}}}],["this.adminrefreshtokenrepository.destroy",{"_index":451,"title":{},"body":{"injectables/AdminJwtRefreshService.html":{}}}],["this.adminrefreshtokenrepository.findone",{"_index":426,"title":{},"body":{"injectables/AdminJwtRefreshService.html":{}}}],["this.adminrepository.create(dto",{"_index":767,"title":{},"body":{"injectables/AdminService.html":{}}}],["this.adminrepository.destroy",{"_index":781,"title":{},"body":{"injectables/AdminService.html":{}}}],["this.adminrepository.findall",{"_index":734,"title":{},"body":{"injectables/AdminService.html":{}}}],["this.adminrepository.findbypk(id",{"_index":792,"title":{},"body":{"injectables/AdminService.html":{}}}],["this.adminrepository.findone",{"_index":784,"title":{},"body":{"injectables/AdminService.html":{}}}],["this.admins",{"_index":3031,"title":{},"body":{"classes/Role.html":{}}}],["this.adminservice.checkadmin(payload",{"_index":1326,"title":{},"body":{"guards/AuthFerfershGuard.html":{}}}],["this.adminservice.createadmin(admindto",{"_index":254,"title":{},"body":{"controllers/AdminController.html":{}}}],["this.adminservice.findadmin(v",{"_index":264,"title":{},"body":{"controllers/AdminController.html":{}}}],["this.adminservice.getadminbyemail(email",{"_index":837,"title":{},"body":{"injectables/AdminUserMiddleware.html":{},"injectables/InitializeEmailMiddleware.html":{}}}],["this.adminservice.getadminbyemail(tomail",{"_index":2251,"title":{},"body":{"injectables/MailService.html":{}}}],["this.adminservice.getadminbyid(adminid",{"_index":407,"title":{},"body":{"injectables/AdminJwtRefreshService.html":{}}}],["this.adminservice.getadminbyid(payload.userid",{"_index":116,"title":{},"body":{"guards/AddContentGuard.html":{},"guards/EditContentGuard.html":{},"guards/EditWebsiteGuard.html":{}}}],["this.adminservice.getadminbyid(token.adminid",{"_index":448,"title":{},"body":{"injectables/AdminJwtRefreshService.html":{}}}],["this.adminservice.getalladmins(page",{"_index":266,"title":{},"body":{"controllers/AdminController.html":{}}}],["this.adminservice.updateadmin(admindto",{"_index":258,"title":{},"body":{"controllers/AdminController.html":{}}}],["this.authservice.activate",{"_index":1317,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.changepassword",{"_index":1310,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.login",{"_index":1293,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.logout(response",{"_index":1299,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.refresh(response",{"_index":1297,"title":{},"body":{"controllers/AuthController.html":{},"controllers/UsersController.html":{}}}],["this.authservice.resetpassword(resetdto",{"_index":1307,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.setcode(codedto",{"_index":1303,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.signup",{"_index":1288,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.validateaccesstoken(decodedtoken",{"_index":2034,"title":{},"body":{"guards/JwtAuthGuard.html":{},"guards/RolesGuard.html":{}}}],["this.bot",{"_index":3212,"title":{},"body":{"injectables/TelegramService.html":{}}}],["this.bot.telegram.sendmessage(chatid",{"_index":3214,"title":{},"body":{"injectables/TelegramService.html":{}}}],["this.cart",{"_index":1477,"title":{},"body":{"classes/CartProduct.html":{},"classes/CartProduct-1.html":{}}}],["this.cartproducts",{"_index":1448,"title":{},"body":{"classes/Cart.html":{}}}],["this.carts",{"_index":2705,"title":{},"body":{"classes/Product.html":{},"classes/Product-1.html":{}}}],["this.cartstatus",{"_index":1446,"title":{},"body":{"classes/Cart.html":{}}}],["this.categories",{"_index":2704,"title":{},"body":{"classes/Product.html":{},"classes/Product-1.html":{}}}],["this.categoriesservice.createcategory(categorydto",{"_index":1534,"title":{},"body":{"controllers/CategoriesController.html":{}}}],["this.categoriesservice.deletecategory(categoryid",{"_index":1540,"title":{},"body":{"controllers/CategoriesController.html":{}}}],["this.categoriesservice.getcategories",{"_index":1532,"title":{},"body":{"controllers/CategoriesController.html":{}}}],["this.categoriesservice.updatecategory(categoryid",{"_index":1537,"title":{},"body":{"controllers/CategoriesController.html":{}}}],["this.categoryrepository.create",{"_index":1592,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["this.categoryrepository.destroy",{"_index":1594,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["this.categoryrepository.findall",{"_index":1576,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["this.categoryrepository.findbypk(categoryid",{"_index":1578,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["this.categoryrepository.findone",{"_index":1575,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["this.confirmcode",{"_index":2438,"title":{},"body":{"classes/Owner.html":{}}}],["this.constructor",{"_index":880,"title":{},"body":{"classes/ApiError.html":{},"classes/BadRequestError.html":{},"classes/NotFoundError.html":{}}}],["this.create",{"_index":2610,"title":{},"body":{"injectables/OwnerService.html":{}}}],["this.createuser",{"_index":3440,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.deletetimeout(name",{"_index":3168,"title":{},"body":{"injectables/TasksService.html":{}}}],["this.description",{"_index":2046,"title":{},"body":{"classes/JwtRefreshTokenDeletedEvent.html":{},"classes/Product-1.html":{}}}],["this.email",{"_index":2435,"title":{},"body":{"classes/Owner.html":{}}}],["this.errors",{"_index":951,"title":{},"body":{"classes/ApiException.html":{}}}],["this.eventemitter.emit",{"_index":3172,"title":{},"body":{"injectables/TasksService.html":{}}}],["this.expiredate",{"_index":664,"title":{},"body":{"classes/AdminRefreshToken.html":{},"classes/OwnerRefreshToken.html":{},"classes/UserRefreshToken.html":{}}}],["this.findtoken(adminrefreshtoken",{"_index":447,"title":{},"body":{"injectables/AdminJwtRefreshService.html":{}}}],["this.findtoken(ownerrefreshtoken",{"_index":2507,"title":{},"body":{"injectables/OwnerJwtRefreshService.html":{}}}],["this.findtoken(userrefreshtoken",{"_index":3295,"title":{},"body":{"injectables/UserJwtRefreshTokenService.html":{}}}],["this.generateactivationcode",{"_index":437,"title":{},"body":{"injectables/AdminJwtRefreshService.html":{},"injectables/OwnerJwtRefreshService.html":{}}}],["this.generateencryptedvalue('admin",{"_index":435,"title":{},"body":{"injectables/AdminJwtRefreshService.html":{}}}],["this.generateencryptedvalue('owner",{"_index":2501,"title":{},"body":{"injectables/OwnerJwtRefreshService.html":{}}}],["this.generateencryptedvalue('user",{"_index":1050,"title":{},"body":{"controllers/AppController.html":{}}}],["this.getadminbyemail(admindto.email",{"_index":797,"title":{},"body":{"injectables/AdminService.html":{}}}],["this.getadminbyemail(codedto.email",{"_index":802,"title":{},"body":{"injectables/AdminService.html":{}}}],["this.getadminbyemail(dto.email",{"_index":759,"title":{},"body":{"injectables/AdminService.html":{}}}],["this.getadminbyemail(resetdto.email",{"_index":804,"title":{},"body":{"injectables/AdminService.html":{}}}],["this.getadminbyid(adminid",{"_index":812,"title":{},"body":{"injectables/AdminService.html":{}}}],["this.getadminbyid(payload.userid",{"_index":793,"title":{},"body":{"injectables/AdminService.html":{}}}],["this.getadminbyphonenumber(dto.phonenumber",{"_index":765,"title":{},"body":{"injectables/AdminService.html":{}}}],["this.getbookmarkproducts(page",{"_index":2844,"title":{},"body":{"controllers/ProductController.html":{}}}],["this.getownerbyemail(codedto.email",{"_index":2619,"title":{},"body":{"injectables/OwnerService.html":{}}}],["this.getownerbyemail(dto.email",{"_index":2608,"title":{},"body":{"injectables/OwnerService.html":{}}}],["this.getownerbyemail(ownerdto.email",{"_index":2614,"title":{},"body":{"injectables/OwnerService.html":{}}}],["this.getownerbyemail(resetdto.email",{"_index":2621,"title":{},"body":{"injectables/OwnerService.html":{}}}],["this.getownerbyid(ownerid",{"_index":2625,"title":{},"body":{"injectables/OwnerService.html":{}}}],["this.getownerbyid(payload.userid",{"_index":2617,"title":{},"body":{"injectables/OwnerService.html":{}}}],["this.getownerbyphonenumber(dto.phonenumber",{"_index":2607,"title":{},"body":{"injectables/OwnerService.html":{}}}],["this.getuserbyemail(codedto.email",{"_index":3473,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.getuserbyemail(resetdto.email",{"_index":3476,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.getuserbyemail(userdto.email",{"_index":3437,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.getuserbyid(userid",{"_index":3441,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.getuserbyphonenumber(userdto.phonenumber",{"_index":3438,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.getwatchedproducts(page",{"_index":2846,"title":{},"body":{"controllers/ProductController.html":{}}}],["this.httpadapterhost",{"_index":856,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["this.identifier",{"_index":667,"title":{},"body":{"classes/AdminRefreshToken.html":{},"classes/OwnerRefreshToken.html":{},"classes/UserRefreshToken.html":{}}}],["this.isactivated",{"_index":2437,"title":{},"body":{"classes/Owner.html":{}}}],["this.isempty(headers",{"_index":1688,"title":{},"body":{"injectables/CorsMiddleware.html":{},"interfaces/RequestHeaders.html":{}}}],["this.jwtservice.sign(payload",{"_index":398,"title":{},"body":{"injectables/AdminJwtRefreshService.html":{},"injectables/OwnerJwtRefreshService.html":{},"injectables/UserJwtRefreshTokenService.html":{}}}],["this.jwtservice.verify(adminrefreshtoken",{"_index":406,"title":{},"body":{"injectables/AdminJwtRefreshService.html":{}}}],["this.jwtservice.verify(ownerrefreshtoken",{"_index":2483,"title":{},"body":{"injectables/OwnerJwtRefreshService.html":{}}}],["this.jwtservice.verify(userrefreshtoken",{"_index":3285,"title":{},"body":{"injectables/UserJwtRefreshTokenService.html":{}}}],["this.logger.debug('start",{"_index":1962,"title":{},"body":{"classes/GarbageCollectingProcessor.html":{}}}],["this.logger.debug('transcoding",{"_index":1965,"title":{},"body":{"classes/GarbageCollectingProcessor.html":{}}}],["this.logger.debug(job.data",{"_index":1964,"title":{},"body":{"classes/GarbageCollectingProcessor.html":{}}}],["this.logger.error(err",{"_index":1064,"title":{},"body":{"controllers/AppController.html":{}}}],["this.logger.log('message",{"_index":2246,"title":{},"body":{"injectables/MailService.html":{}}}],["this.logger.log(`checking",{"_index":443,"title":{},"body":{"injectables/AdminJwtRefreshService.html":{},"injectables/OwnerJwtRefreshService.html":{}}}],["this.logger.log(`interval",{"_index":3165,"title":{},"body":{"injectables/TasksService.html":{}}}],["this.logger.log(`job",{"_index":3153,"title":{},"body":{"injectables/TasksService.html":{}}}],["this.logger.log(`timeout",{"_index":3166,"title":{},"body":{"injectables/TasksService.html":{}}}],["this.logger.log(ipaddress",{"_index":1689,"title":{},"body":{"injectables/CorsMiddleware.html":{},"interfaces/RequestHeaders.html":{}}}],["this.logger.warn(`interval",{"_index":3155,"title":{},"body":{"injectables/TasksService.html":{}}}],["this.logger.warn(`job",{"_index":3143,"title":{},"body":{"injectables/TasksService.html":{}}}],["this.logger.warn(`time",{"_index":3139,"title":{},"body":{"injectables/TasksService.html":{}}}],["this.logger.warn(`timeout",{"_index":3174,"title":{},"body":{"injectables/TasksService.html":{}}}],["this.mailerservice.sendmail",{"_index":2102,"title":{},"body":{"injectables/MailService.html":{}}}],["this.mailservice.sendactivationmailtoadmin",{"_index":445,"title":{},"body":{"injectables/AdminJwtRefreshService.html":{}}}],["this.mailservice.sendactivationmailtoowner",{"_index":2505,"title":{},"body":{"injectables/OwnerJwtRefreshService.html":{}}}],["this.messages",{"_index":3499,"title":{},"body":{"classes/ValidationException.html":{}}}],["this.name",{"_index":2044,"title":{},"body":{"classes/JwtRefreshTokenDeletedEvent.html":{},"classes/Owner.html":{}}}],["this.options",{"_index":2642,"title":{},"body":{"classes/ParseFormDataJsonPipe.html":{},"injectables/TelegramService.html":{}}}],["this.options.chatid",{"_index":3208,"title":{},"body":{"injectables/TelegramService.html":{}}}],["this.order",{"_index":2328,"title":{},"body":{"classes/OrderProduct.html":{}}}],["this.orderproducts",{"_index":2313,"title":{},"body":{"classes/Order.html":{}}}],["this.orders",{"_index":2707,"title":{},"body":{"classes/Product.html":{},"classes/Product-1.html":{}}}],["this.orderstatus",{"_index":2312,"title":{},"body":{"classes/Order.html":{}}}],["this.owner",{"_index":2553,"title":{},"body":{"classes/OwnerRefreshToken.html":{},"classes/Product.html":{},"classes/Product-1.html":{}}}],["this.owneragent",{"_index":2441,"title":{},"body":{"classes/Owner.html":{},"classes/OwnerRefreshToken.html":{}}}],["this.ownerid",{"_index":2552,"title":{},"body":{"classes/OwnerRefreshToken.html":{},"classes/Product.html":{},"classes/Product-1.html":{}}}],["this.ownerjwtrefreshtokenservice.findtoken(decodedtoken",{"_index":2021,"title":{},"body":{"injectables/InitializeUserMiddleware.html":{},"guards/OwnerAdminGuard.html":{}}}],["this.ownerjwtrefreshtokenservice.validaterefreshtoken",{"_index":2452,"title":{},"body":{"guards/OwnerAdminGuard.html":{}}}],["this.ownerrefreshtokenrepository.create",{"_index":2485,"title":{},"body":{"injectables/OwnerJwtRefreshService.html":{}}}],["this.ownerrefreshtokenrepository.destroy",{"_index":2510,"title":{},"body":{"injectables/OwnerJwtRefreshService.html":{}}}],["this.ownerrefreshtokenrepository.findone",{"_index":2493,"title":{},"body":{"injectables/OwnerJwtRefreshService.html":{}}}],["this.ownerrefreshtokens",{"_index":2443,"title":{},"body":{"classes/Owner.html":{}}}],["this.ownerrepository.create(dto",{"_index":2611,"title":{},"body":{"injectables/OwnerService.html":{}}}],["this.ownerrepository.findbypk(id",{"_index":2613,"title":{},"body":{"injectables/OwnerService.html":{}}}],["this.ownerrepository.findone",{"_index":74,"title":{},"body":{"injectables/ActivateMiddleware.html":{},"injectables/OwnerService.html":{}}}],["this.owners",{"_index":3032,"title":{},"body":{"classes/Role.html":{}}}],["this.ownerservice.checkowner(payload",{"_index":1325,"title":{},"body":{"guards/AuthFerfershGuard.html":{}}}],["this.ownerservice.getownerbyemail(email",{"_index":1999,"title":{},"body":{"injectables/InitializeEmailMiddleware.html":{}}}],["this.ownerservice.getownerbyemail(tomail",{"_index":2101,"title":{},"body":{"injectables/MailService.html":{}}}],["this.ownerservice.getownerbyid(ownerid",{"_index":2484,"title":{},"body":{"injectables/OwnerJwtRefreshService.html":{}}}],["this.ownerservice.getownerbyid(token.ownerid",{"_index":2508,"title":{},"body":{"injectables/OwnerJwtRefreshService.html":{}}}],["this.password",{"_index":2434,"title":{},"body":{"classes/Owner.html":{}}}],["this.phonenumber",{"_index":2436,"title":{},"body":{"classes/Owner.html":{}}}],["this.product",{"_index":1476,"title":{},"body":{"classes/CartProduct.html":{},"classes/CartProduct-1.html":{},"classes/OrderProduct.html":{}}}],["this.products",{"_index":1447,"title":{},"body":{"classes/Cart.html":{},"classes/Category.html":{},"classes/Owner.html":{}}}],["this.products.push(product",{"_index":2444,"title":{},"body":{"classes/Owner.html":{}}}],["this.productservice.createproduct(createproductdto",{"_index":2865,"title":{},"body":{"controllers/ProductController.html":{}}}],["this.productservice.deleteimage(filepath",{"_index":2876,"title":{},"body":{"controllers/ProductController.html":{}}}],["this.productservice.deleteproduct(productid",{"_index":2873,"title":{},"body":{"controllers/ProductController.html":{}}}],["this.productservice.filterproducts(page",{"_index":2838,"title":{},"body":{"controllers/ProductController.html":{}}}],["this.productservice.findbyid(productid",{"_index":2994,"title":{},"body":{"injectables/ReviewsService.html":{}}}],["this.productservice.findbyid(review.productid",{"_index":3006,"title":{},"body":{"injectables/ReviewsService.html":{}}}],["this.productservice.getproductbyid(productid",{"_index":2841,"title":{},"body":{"controllers/ProductController.html":{}}}],["this.productservice.getproducts(page",{"_index":2830,"title":{},"body":{"controllers/ProductController.html":{}}}],["this.productservice.getproductsbyids(productids",{"_index":2832,"title":{},"body":{"controllers/ProductController.html":{}}}],["this.productservice.updateproduct",{"_index":2870,"title":{},"body":{"controllers/ProductController.html":{}}}],["this.rawerrors",{"_index":878,"title":{},"body":{"classes/ApiError.html":{},"classes/BadRequestError.html":{},"classes/NotFoundError.html":{}}}],["this.reflector.getallandoverride",{"_index":289,"title":{},"body":{"guards/AdminGuard.html":{},"guards/OwnerAdminGuard.html":{},"guards/RolesGuard.html":{},"guards/UserGuard.html":{}}}],["this.resettoken",{"_index":2439,"title":{},"body":{"classes/Owner.html":{}}}],["this.resettokenexpiration",{"_index":2440,"title":{},"body":{"classes/Owner.html":{}}}],["this.reviewrepository.create(createdreviewdto",{"_index":2995,"title":{},"body":{"injectables/ReviewsService.html":{}}}],["this.reviewrepository.destroy",{"_index":3008,"title":{},"body":{"injectables/ReviewsService.html":{}}}],["this.reviewrepository.findbypk(reviewid",{"_index":3005,"title":{},"body":{"injectables/ReviewsService.html":{}}}],["this.reviewsservice.createreview(createreviewdto",{"_index":2969,"title":{},"body":{"controllers/ReviewsController.html":{}}}],["this.reviewsservice.deletereview(reviewid",{"_index":2972,"title":{},"body":{"controllers/ReviewsController.html":{}}}],["this.rewritepassword(admin",{"_index":811,"title":{},"body":{"injectables/AdminService.html":{}}}],["this.rewritepassword(owner",{"_index":2624,"title":{},"body":{"injectables/OwnerService.html":{}}}],["this.rewritepassword(user.id",{"_index":3479,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.rolerepository.create(dto",{"_index":3080,"title":{},"body":{"injectables/RolesService.html":{}}}],["this.rolerepository.findone",{"_index":3081,"title":{},"body":{"injectables/RolesService.html":{}}}],["this.roleservice.createrole",{"_index":770,"title":{},"body":{"injectables/AdminService.html":{},"injectables/OwnerService.html":{},"injectables/UsersService.html":{}}}],["this.roleservice.createrole(roledto",{"_index":3054,"title":{},"body":{"controllers/RolesController.html":{}}}],["this.roleservice.getrolebyvalue('admin",{"_index":768,"title":{},"body":{"injectables/AdminService.html":{}}}],["this.roleservice.getrolebyvalue('owner",{"_index":2612,"title":{},"body":{"injectables/OwnerService.html":{}}}],["this.roleservice.getrolebyvalue('user",{"_index":3453,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.roleservice.getrolebyvalue(dto.value",{"_index":3467,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.roleservice.getrolebyvalue(value",{"_index":3057,"title":{},"body":{"controllers/RolesController.html":{}}}],["this.schedulerregistry.addcronjob(name",{"_index":3141,"title":{},"body":{"injectables/TasksService.html":{}}}],["this.schedulerregistry.addinterval(name",{"_index":3160,"title":{},"body":{"injectables/TasksService.html":{}}}],["this.schedulerregistry.addtimeout(name",{"_index":3176,"title":{},"body":{"injectables/TasksService.html":{}}}],["this.schedulerregistry.deletecronjob(name",{"_index":3154,"title":{},"body":{"injectables/TasksService.html":{}}}],["this.schedulerregistry.deleteinterval(name",{"_index":3161,"title":{},"body":{"injectables/TasksService.html":{}}}],["this.schedulerregistry.deletetimeout(name",{"_index":3177,"title":{},"body":{"injectables/TasksService.html":{}}}],["this.schedulerregistry.getcronjobs",{"_index":3148,"title":{},"body":{"injectables/TasksService.html":{}}}],["this.schedulerregistry.getintervals",{"_index":3163,"title":{},"body":{"injectables/TasksService.html":{}}}],["this.schedulerregistry.gettimeouts",{"_index":3179,"title":{},"body":{"injectables/TasksService.html":{}}}],["this.status",{"_index":950,"title":{},"body":{"classes/ApiException.html":{}}}],["this.statuscode",{"_index":877,"title":{},"body":{"classes/ApiError.html":{},"classes/BadRequestError.html":{},"classes/NotFoundError.html":{}}}],["this.surname",{"_index":2433,"title":{},"body":{"classes/Owner.html":{}}}],["this.title",{"_index":2747,"title":{},"body":{"classes/Product-1.html":{}}}],["this.user",{"_index":1449,"title":{},"body":{"classes/Cart.html":{},"classes/Order.html":{},"classes/UserRefreshToken.html":{}}}],["this.userid",{"_index":2045,"title":{},"body":{"classes/JwtRefreshTokenDeletedEvent.html":{},"classes/UserRefreshToken.html":{}}}],["this.userjwtrefreshtokenservice.findtoken",{"_index":2023,"title":{},"body":{"injectables/InitializeUserMiddleware.html":{},"guards/UserGuard.html":{}}}],["this.userjwtrefreshtokenservice.validaterefreshtoken",{"_index":3260,"title":{},"body":{"guards/UserGuard.html":{}}}],["this.userrefreshtokenrepository.create",{"_index":3287,"title":{},"body":{"injectables/UserJwtRefreshTokenService.html":{}}}],["this.userrefreshtokenrepository.destroy",{"_index":3298,"title":{},"body":{"injectables/UserJwtRefreshTokenService.html":{}}}],["this.userrefreshtokenrepository.findone",{"_index":3293,"title":{},"body":{"injectables/UserJwtRefreshTokenService.html":{}}}],["this.userrepository.create(dto",{"_index":3447,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.userrepository.findall",{"_index":3432,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.userrepository.findbypk(dto.userid",{"_index":3466,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.userrepository.findbypk(id",{"_index":3464,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.userrepository.findone",{"_index":3465,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.users",{"_index":3030,"title":{},"body":{"classes/Role.html":{}}}],["this.userservice.banuser(dto",{"_index":3375,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.userservice.finduser(v",{"_index":3372,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.userservice.getallusers(page",{"_index":3370,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.userservice.getuserbyemail(dto.email",{"_index":750,"title":{},"body":{"injectables/AdminService.html":{}}}],["this.userservice.getuserbyemail(email",{"_index":2002,"title":{},"body":{"injectables/InitializeEmailMiddleware.html":{},"injectables/UserAdminMiddleware.html":{}}}],["this.userservice.getuserbyemail(tomail",{"_index":2252,"title":{},"body":{"injectables/MailService.html":{}}}],["this.userservice.getuserbyid(payload.userid",{"_index":1327,"title":{},"body":{"guards/AuthFerfershGuard.html":{}}}],["this.userservice.getuserbyid(token.userid",{"_index":3296,"title":{},"body":{"injectables/UserJwtRefreshTokenService.html":{}}}],["this.userservice.getuserbyid(userid",{"_index":3286,"title":{},"body":{"injectables/UserJwtRefreshTokenService.html":{}}}],["this.userservice.rewritepassword(admin.userid",{"_index":809,"title":{},"body":{"injectables/AdminService.html":{}}}],["this.userservice.updateuser(userdto",{"_index":3377,"title":{},"body":{"controllers/UsersController.html":{}}}],["throttle",{"_index":224,"title":{},"body":{"controllers/AdminController.html":{},"controllers/AuthController.html":{},"controllers/CategoriesController.html":{},"controllers/ProductController.html":{},"controllers/ReviewsController.html":{},"controllers/RolesController.html":{},"controllers/UsersController.html":{}}}],["throttle(40",{"_index":1290,"title":{},"body":{"controllers/AuthController.html":{},"controllers/UsersController.html":{}}}],["throttle(45",{"_index":1304,"title":{},"body":{"controllers/AuthController.html":{}}}],["throttle(50",{"_index":1285,"title":{},"body":{"controllers/AuthController.html":{}}}],["throttle(60",{"_index":247,"title":{},"body":{"controllers/AdminController.html":{},"controllers/UsersController.html":{}}}],["throttle(70",{"_index":255,"title":{},"body":{"controllers/AdminController.html":{},"controllers/AuthController.html":{},"controllers/CategoriesController.html":{},"controllers/ProductController.html":{},"controllers/ReviewsController.html":{},"controllers/RolesController.html":{}}}],["throttle(700",{"_index":1509,"title":{},"body":{"controllers/CategoriesController.html":{}}}],["throttlerbehindproxyguard",{"_index":211,"title":{"injectables/ThrottlerBehindProxyGuard.html":{}},"body":{"controllers/AdminController.html":{},"controllers/AuthController.html":{},"controllers/CategoriesController.html":{},"modules/CoreModule.html":{},"controllers/ProductController.html":{},"controllers/ReviewsController.html":{},"controllers/RolesController.html":{},"injectables/ThrottlerBehindProxyGuard.html":{},"controllers/UsersController.html":{}}}],["throttlerguard",{"_index":1353,"title":{},"body":{"modules/AuthModule.html":{},"injectables/ThrottlerBehindProxyGuard.html":{}}}],["throttlermodule",{"_index":1109,"title":{},"body":{"modules/AppModule.html":{}}}],["throttlermodule.forroot",{"_index":1151,"title":{},"body":{"modules/AppModule.html":{}}}],["throw",{"_index":65,"title":{},"body":{"injectables/ActivateMiddleware.html":{},"guards/AddContentGuard.html":{},"guards/AdminGuard.html":{},"injectables/AdminJwtRefreshService.html":{},"injectables/AdminService.html":{},"injectables/AdminUserMiddleware.html":{},"classes/ApiException.html":{},"controllers/AuthController.html":{},"guards/AuthFerfershGuard.html":{},"injectables/CategoriesService.html":{},"injectables/CorsMiddleware.html":{},"guards/EditContentGuard.html":{},"guards/EditWebsiteGuard.html":{},"injectables/FilesService.html":{},"injectables/InitializeEmailMiddleware.html":{},"injectables/InitializeUserMiddleware.html":{},"guards/JwtAuthGuard.html":{},"injectables/MailService.html":{},"guards/OwnerAdminGuard.html":{},"injectables/OwnerJwtRefreshService.html":{},"injectables/OwnerService.html":{},"injectables/ParseJsonPipe.html":{},"controllers/ProductController.html":{},"guards/RefreshAuthGuard.html":{},"interfaces/RequestHeaders.html":{},"classes/RequestValidator.html":{},"controllers/ReviewsController.html":{},"controllers/RolesController.html":{},"guards/RolesGuard.html":{},"injectables/UserAdminMiddleware.html":{},"guards/UserGuard.html":{},"injectables/UserJwtRefreshTokenService.html":{},"injectables/UsersService.html":{},"injectables/ValidateDto.html":{},"interfaces/fileCreated.html":{}}}],["throwerror",{"_index":1974,"title":{},"body":{"injectables/GlobalInterceptor.html":{}}}],["time",{"_index":3110,"title":{},"body":{"injectables/TasksService.html":{}}}],["timeout",{"_index":1015,"title":{},"body":{"injectables/AppClusterService.html":{},"controllers/AppController.html":{},"injectables/GlobalInterceptor.html":{},"interfaces/Msg.html":{},"injectables/TasksService.html":{}}}],["timeout(1000).apply",{"_index":1073,"title":{},"body":{"controllers/AppController.html":{}}}],["timeout(5000",{"_index":1979,"title":{},"body":{"injectables/GlobalInterceptor.html":{}}}],["timeouterror",{"_index":1975,"title":{},"body":{"injectables/GlobalInterceptor.html":{}}}],["timeouts",{"_index":3178,"title":{},"body":{"injectables/TasksService.html":{}}}],["timeouts.foreach((key",{"_index":3180,"title":{},"body":{"injectables/TasksService.html":{}}}],["timestamp",{"_index":864,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"classes/ApiErrorExceptionFilter.html":{},"classes/ApiExceptionFilter.html":{},"classes/HttpExceptionFilter.html":{}}}],["title",{"_index":1617,"title":{},"body":{"interfaces/CategoryCreationAtrb.html":{},"classes/CreateProductDto.html":{},"classes/Nested.html":{},"classes/Nested-1.html":{},"classes/Product.html":{},"classes/Product-1.html":{},"interfaces/ProductCreationAttrs.html":{},"interfaces/ReturnedCategory.html":{},"interfaces/ReturnedProduct.html":{},"interfaces/ReturnedProducts.html":{},"interfaces/ReturnedReview.html":{},"interfaces/ReviewCreationAtrb.html":{},"classes/UpdateProductDto.html":{}}}],["tls",{"_index":2078,"title":{},"body":{"modules/MailModule.html":{}}}],["token",{"_index":410,"title":{},"body":{"injectables/AdminJwtRefreshService.html":{},"classes/AdminRefreshToken.html":{},"injectables/AppListener.html":{},"interfaces/ITelegramModuleAsyncOptions.html":{},"interfaces/ITelegramOptions.html":{},"classes/JwtRefreshTokenDeletedEvent.html":{},"injectables/OwnerJwtRefreshService.html":{},"classes/OwnerRefreshToken.html":{},"guards/RolesGuard.html":{},"injectables/TasksService.html":{},"injectables/UserJwtRefreshTokenService.html":{},"classes/UserRefreshToken.html":{}}}],["token'})@column({type",{"_index":610,"title":{},"body":{"classes/AdminRefreshToken.html":{},"classes/OwnerRefreshToken.html":{},"classes/UserRefreshToken.html":{}}}],["token.adminid",{"_index":453,"title":{},"body":{"injectables/AdminJwtRefreshService.html":{}}}],["token.dto",{"_index":384,"title":{},"body":{"injectables/AdminJwtRefreshService.html":{},"injectables/UserJwtRefreshTokenService.html":{}}}],["token.dto.ts",{"_index":1779,"title":{},"body":{"classes/CreateAdminRefreshTokenDto.html":{},"classes/CreateUserRefreshTokenDto.html":{}}}],["token.dto.ts:16",{"_index":1783,"title":{},"body":{"classes/CreateAdminRefreshTokenDto.html":{},"classes/CreateUserRefreshTokenDto.html":{}}}],["token.dto.ts:23",{"_index":1785,"title":{},"body":{"classes/CreateAdminRefreshTokenDto.html":{},"classes/CreateUserRefreshTokenDto.html":{}}}],["token.dto.ts:30",{"_index":1888,"title":{},"body":{"classes/CreateUserRefreshTokenDto.html":{}}}],["token.dto.ts:31",{"_index":1784,"title":{},"body":{"classes/CreateAdminRefreshTokenDto.html":{}}}],["token.dto.ts:40",{"_index":1782,"title":{},"body":{"classes/CreateAdminRefreshTokenDto.html":{}}}],["token.dto.ts:41",{"_index":1887,"title":{},"body":{"classes/CreateUserRefreshTokenDto.html":{}}}],["token.dto.ts:47",{"_index":1787,"title":{},"body":{"classes/CreateAdminRefreshTokenDto.html":{}}}],["token.getexpiredate",{"_index":415,"title":{},"body":{"injectables/AdminJwtRefreshService.html":{},"injectables/OwnerJwtRefreshService.html":{},"injectables/UserJwtRefreshTokenService.html":{}}}],["token.id",{"_index":421,"title":{},"body":{"injectables/AdminJwtRefreshService.html":{},"injectables/OwnerJwtRefreshService.html":{},"injectables/UserJwtRefreshTokenService.html":{}}}],["token.ownerid",{"_index":2511,"title":{},"body":{"injectables/OwnerJwtRefreshService.html":{}}}],["token.phonenumber",{"_index":455,"title":{},"body":{"injectables/AdminJwtRefreshService.html":{},"injectables/OwnerJwtRefreshService.html":{}}}],["token.save",{"_index":414,"title":{},"body":{"injectables/AdminJwtRefreshService.html":{},"injectables/OwnerJwtRefreshService.html":{},"injectables/UserJwtRefreshTokenService.html":{}}}],["token.setexpiredate(expiredate",{"_index":416,"title":{},"body":{"injectables/AdminJwtRefreshService.html":{},"injectables/OwnerJwtRefreshService.html":{},"injectables/UserJwtRefreshTokenService.html":{}}}],["token.setidentifier(v4",{"_index":413,"title":{},"body":{"injectables/AdminJwtRefreshService.html":{},"injectables/OwnerJwtRefreshService.html":{},"injectables/UserJwtRefreshTokenService.html":{}}}],["token.token.id",{"_index":450,"title":{},"body":{"injectables/AdminJwtRefreshService.html":{},"injectables/OwnerJwtRefreshService.html":{},"injectables/UserJwtRefreshTokenService.html":{}}}],["token.userid",{"_index":3300,"title":{},"body":{"injectables/UserJwtRefreshTokenService.html":{}}}],["token_invalid",{"_index":372,"title":{},"body":{"injectables/AdminJwtRefreshService.html":{},"classes/ApiException.html":{},"injectables/OwnerJwtRefreshService.html":{},"injectables/UserJwtRefreshTokenService.html":{}}}],["token_not_found",{"_index":373,"title":{},"body":{"injectables/AdminJwtRefreshService.html":{},"classes/ApiException.html":{},"injectables/OwnerJwtRefreshService.html":{},"injectables/UserJwtRefreshTokenService.html":{}}}],["tokendata",{"_index":425,"title":{},"body":{"injectables/AdminJwtRefreshService.html":{},"injectables/OwnerJwtRefreshService.html":{},"injectables/UserJwtRefreshTokenService.html":{}}}],["tokendata.adminrefreshtoken",{"_index":431,"title":{},"body":{"injectables/AdminJwtRefreshService.html":{}}}],["tokendata.ownerrefreshtoken",{"_index":2498,"title":{},"body":{"injectables/OwnerJwtRefreshService.html":{}}}],["tokendata.save",{"_index":430,"title":{},"body":{"injectables/AdminJwtRefreshService.html":{},"injectables/OwnerJwtRefreshService.html":{},"injectables/UserJwtRefreshTokenService.html":{}}}],["tokendata.setadminagent(adminagent",{"_index":429,"title":{},"body":{"injectables/AdminJwtRefreshService.html":{}}}],["tokendata.setowneragent(owneragent",{"_index":2496,"title":{},"body":{"injectables/OwnerJwtRefreshService.html":{}}}],["tokendata.userrefreshtoken",{"_index":3294,"title":{},"body":{"injectables/UserJwtRefreshTokenService.html":{}}}],["tokens",{"_index":654,"title":{"interfaces/Tokens.html":{}},"body":{"classes/AdminRefreshToken.html":{},"interfaces/AuthUser.html":{},"interfaces/CodeDto.html":{},"classes/OwnerRefreshToken.html":{},"interfaces/Payload.html":{},"interfaces/ReturnedAdmin.html":{},"interfaces/ReturnedOwner.html":{},"interfaces/ReturnedUser.html":{},"interfaces/Tokens.html":{},"classes/UserRefreshToken.html":{}}}],["tomail",{"_index":2091,"title":{},"body":{"injectables/MailService.html":{}}}],["top:0px!important",{"_index":2213,"title":{},"body":{"injectables/MailService.html":{}}}],["totalitems",{"_index":1629,"title":{},"body":{"interfaces/CategoryCreationAtrb.html":{},"interfaces/ProductCreationAttrs.html":{},"interfaces/ReturnedCategory.html":{},"interfaces/ReturnedProduct.html":{},"interfaces/ReturnedProducts.html":{},"interfaces/ReturnedReview.html":{},"interfaces/ReviewCreationAtrb.html":{}}}],["totalprice",{"_index":1419,"title":{},"body":{"classes/Cart.html":{},"classes/Order.html":{}}}],["touch",{"_index":3634,"title":{},"body":{"index.html":{}}}],["tparseformdatajsonoptions",{"_index":2630,"title":{},"body":{"classes/ParseFormDataJsonPipe.html":{},"miscellaneous/typealiases.html":{}}}],["tr.es",{"_index":2219,"title":{},"body":{"injectables/MailService.html":{}}}],["trackofhttprequests",{"_index":966,"title":{},"body":{"injectables/AppClusterService.html":{},"interfaces/Msg.html":{}}}],["transcoding",{"_index":1963,"title":{},"body":{"classes/GarbageCollectingProcessor.html":{}}}],["transform",{"_index":1838,"title":{},"body":{"classes/CreateProductDto.html":{},"classes/Nested.html":{},"classes/Nested-1.html":{},"classes/ParseFormDataJsonPipe.html":{},"injectables/ParseJsonPipe.html":{},"controllers/ProductController.html":{},"classes/UpdateProductDto.html":{},"injectables/ValidateDto.html":{}}}],["transform((value",{"_index":1849,"title":{},"body":{"classes/CreateProductDto.html":{},"classes/Nested.html":{},"classes/Nested-1.html":{},"classes/UpdateProductDto.html":{}}}],["transform(value",{"_index":2632,"title":{},"body":{"classes/ParseFormDataJsonPipe.html":{},"injectables/ParseJsonPipe.html":{},"injectables/ValidateDto.html":{}}}],["transformer",{"_index":1839,"title":{},"body":{"classes/CreateProductDto.html":{},"classes/Nested.html":{},"classes/Nested-1.html":{},"classes/Owner.html":{},"classes/RequestValidator.html":{},"classes/UpdateProductDto.html":{},"injectables/ValidateDto.html":{},"dependencies.html":{}}}],["transport",{"_index":2018,"title":{},"body":{"injectables/InitializeUserMiddleware.html":{},"modules/MailModule.html":{}}}],["trouble_signing",{"_index":2099,"title":{},"body":{"injectables/MailService.html":{}}}],["trouble_signing[locale",{"_index":2254,"title":{},"body":{"injectables/MailService.html":{}}}],["true",{"_index":115,"title":{},"body":{"guards/AddContentGuard.html":{},"guards/AdminGuard.html":{},"modules/AdminModule.html":{},"classes/AdminRefreshToken.html":{},"injectables/AdminService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"guards/AuthFerfershGuard.html":{},"modules/AuthModule.html":{},"classes/BookmarksProducts.html":{},"classes/Cart.html":{},"modules/CartModule.html":{},"classes/CartProduct.html":{},"classes/CartProduct-1.html":{},"modules/CategoriesModule.html":{},"classes/Category.html":{},"modules/CoreModule.html":{},"injectables/CorsMiddleware.html":{},"classes/CreateAccessTokenDto.html":{},"classes/CreateAdminRefreshTokenDto.html":{},"classes/CreateOwnerRefreshTokenDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateUserRefreshTokenDto.html":{},"guards/EditContentGuard.html":{},"guards/EditWebsiteGuard.html":{},"injectables/FilesService.html":{},"guards/JwtAuthGuard.html":{},"modules/MailModule.html":{},"classes/Nested.html":{},"classes/Nested-1.html":{},"classes/Order.html":{},"classes/OrderProduct.html":{},"modules/OrdersModule.html":{},"classes/Owner.html":{},"guards/OwnerAdminGuard.html":{},"modules/OwnerModule.html":{},"classes/OwnerRefreshToken.html":{},"injectables/OwnerService.html":{},"classes/Product.html":{},"classes/Product-1.html":{},"classes/ProductCategories.html":{},"controllers/ProductController.html":{},"modules/ProductModule.html":{},"classes/ProductReviews.html":{},"guards/RefreshAuthGuard.html":{},"interfaces/RequestHeaders.html":{},"classes/RequestValidator.html":{},"classes/Review.html":{},"modules/ReviewsModule.html":{},"classes/Role.html":{},"guards/RolesGuard.html":{},"modules/RolesModule.html":{},"classes/UpdateProductDto.html":{},"guards/UserGuard.html":{},"classes/UserRefreshToken.html":{},"classes/UserRoles.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"classes/WatchedProducts.html":{},"interfaces/fileCreated.html":{}}}],["try",{"_index":58,"title":{},"body":{"injectables/ActivateMiddleware.html":{},"injectables/AdminJwtRefreshService.html":{},"injectables/AdminUserMiddleware.html":{},"controllers/AppController.html":{},"controllers/AuthController.html":{},"injectables/AuthMiddleware.html":{},"injectables/FilesService.html":{},"injectables/InitializeEmailMiddleware.html":{},"injectables/InitializeUserMiddleware.html":{},"guards/JwtAuthGuard.html":{},"injectables/MailService.html":{},"injectables/OwnerJwtRefreshService.html":{},"injectables/ParseJsonPipe.html":{},"controllers/ProductController.html":{},"injectables/ProductMiddleware.html":{},"controllers/ReviewsController.html":{},"controllers/RolesController.html":{},"guards/RolesGuard.html":{},"injectables/TasksService.html":{},"injectables/UserAdminMiddleware.html":{},"injectables/UserJwtRefreshTokenService.html":{},"injectables/UserMiddleware.html":{},"injectables/UserMiddleware-1.html":{},"interfaces/fileCreated.html":{}}}],["tslint:disable",{"_index":242,"title":{},"body":{"controllers/AdminController.html":{},"classes/AdminRefreshToken.html":{},"controllers/AuthController.html":{},"classes/CreateAdminRefreshTokenDto.html":{},"classes/CreateOwnerDto.html":{},"classes/CreateOwnerRefreshTokenDto.html":{},"injectables/FilesService.html":{},"classes/Owner.html":{},"classes/OwnerRefreshToken.html":{},"controllers/RolesController.html":{},"interfaces/fileCreated.html":{}}}],["ttl",{"_index":1148,"title":{},"body":{"modules/AppModule.html":{}}}],["twitter",{"_index":3639,"title":{},"body":{"index.html":{}}}],["txt",{"_index":2182,"title":{},"body":{"injectables/MailService.html":{}}}],["type",{"_index":28,"title":{},"body":{"injectables/ActivateMiddleware.html":{},"guards/AddContentGuard.html":{},"classes/AddRoleDto.html":{},"controllers/AdminController.html":{},"guards/AdminGuard.html":{},"interfaces/AdminInterface.html":{},"injectables/AdminJwtRefreshService.html":{},"modules/AdminModule.html":{},"classes/AdminRefreshToken.html":{},"interfaces/AdminRefreshTokenCreationAttrbs.html":{},"injectables/AdminService.html":{},"injectables/AdminUserMiddleware.html":{},"interfaces/AdmincreationAttrbs.html":{},"classes/AllExceptionsFilter.html":{},"classes/ApiError.html":{},"classes/ApiErrorExceptionFilter.html":{},"classes/ApiException.html":{},"classes/ApiExceptionFilter.html":{},"injectables/AppClusterService.html":{},"controllers/AppController.html":{},"injectables/AppListener.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"guards/AuthFerfershGuard.html":{},"injectables/AuthMiddleware.html":{},"modules/AuthModule.html":{},"interfaces/AuthUser.html":{},"classes/BadRequestError.html":{},"classes/BanUserDto.html":{},"classes/BookmarksProducts.html":{},"classes/Cart.html":{},"classes/CartProduct.html":{},"classes/CartProduct-1.html":{},"controllers/CategoriesController.html":{},"modules/CategoriesModule.html":{},"injectables/CategoriesService.html":{},"classes/Category.html":{},"interfaces/CategoryCreationAtrb.html":{},"classes/ChangeDto.html":{},"interfaces/CodeDto.html":{},"injectables/CorsMiddleware.html":{},"classes/CreateAccessTokenDto.html":{},"classes/CreateAdminDto.html":{},"classes/CreateAdminRefreshTokenDto.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateOwnerDto.html":{},"classes/CreateOwnerRefreshTokenDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateReviewDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserRefreshTokenDto.html":{},"guards/EditContentGuard.html":{},"guards/EditWebsiteGuard.html":{},"injectables/FilesService.html":{},"classes/GarbageCollectingProcessor.html":{},"injectables/GlobalInterceptor.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/ITelegramModuleAsyncOptions.html":{},"interfaces/ITelegramOptions.html":{},"injectables/InitializeEmailMiddleware.html":{},"interfaces/InitializeUser.html":{},"injectables/InitializeUserMiddleware.html":{},"guards/JwtAuthGuard.html":{},"classes/JwtRefreshTokenDeletedEvent.html":{},"injectables/LocationMiddleware.html":{},"classes/LoginDto.html":{},"injectables/MailService.html":{},"classes/MatchConstraint.html":{},"interfaces/Msg.html":{},"classes/Nested.html":{},"classes/Nested-1.html":{},"classes/NotFoundError.html":{},"classes/Order.html":{},"classes/OrderProduct.html":{},"classes/Owner.html":{},"guards/OwnerAdminGuard.html":{},"interfaces/OwnerCreationAttrbs.html":{},"injectables/OwnerJwtRefreshService.html":{},"classes/OwnerRefreshToken.html":{},"interfaces/OwnerRefreshTokenCreationAttrbs.html":{},"injectables/OwnerService.html":{},"classes/ParseFormDataJsonPipe.html":{},"injectables/ParseJsonPipe.html":{},"interfaces/Payload.html":{},"classes/Product.html":{},"classes/Product-1.html":{},"classes/ProductCategories.html":{},"controllers/ProductController.html":{},"interfaces/ProductCreationAttrs.html":{},"injectables/ProductMiddleware.html":{},"modules/ProductModule.html":{},"classes/ProductReviews.html":{},"guards/RefreshAuthGuard.html":{},"interfaces/RequestHeaders.html":{},"classes/ResetDto.html":{},"interfaces/ReturnedAdmin.html":{},"interfaces/ReturnedCategory.html":{},"interfaces/ReturnedOwner.html":{},"interfaces/ReturnedProduct.html":{},"interfaces/ReturnedProducts.html":{},"interfaces/ReturnedReview.html":{},"interfaces/ReturnedUser.html":{},"classes/Review.html":{},"interfaces/ReviewCreationAtrb.html":{},"controllers/ReviewsController.html":{},"modules/ReviewsModule.html":{},"injectables/ReviewsService.html":{},"classes/Role.html":{},"interfaces/RolecreationAttrbs.html":{},"controllers/RolesController.html":{},"guards/RolesGuard.html":{},"modules/RolesModule.html":{},"injectables/RolesService.html":{},"classes/SignupDto.html":{},"injectables/TasksService.html":{},"modules/TelegramModule.html":{},"injectables/TelegramService.html":{},"injectables/ThrottlerBehindProxyGuard.html":{},"interfaces/Tokens.html":{},"classes/UpdateCategoryDto.html":{},"classes/UpdateProductDto.html":{},"classes/UpdateUserDto.html":{},"injectables/UserAdminMiddleware.html":{},"guards/UserGuard.html":{},"interfaces/UserInterface.html":{},"injectables/UserJwtRefreshTokenService.html":{},"injectables/UserMiddleware.html":{},"injectables/UserMiddleware-1.html":{},"interfaces/UserRefreshCreationAttrbs.html":{},"classes/UserRefreshToken.html":{},"classes/UserRoles.html":{},"interfaces/UsercreationAttrbs.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"injectables/ValidateDto.html":{},"interfaces/ValidateUser.html":{},"classes/WatchedProducts.html":{},"interfaces/fileCreated.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["type('activate",{"_index":1316,"title":{},"body":{"controllers/AuthController.html":{}}}],["type('codedto",{"_index":1301,"title":{},"body":{"controllers/AuthController.html":{}}}],["type('refreshtoken",{"_index":1296,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ProductController.html":{}}}],["type(undefined)@isnumber",{"_index":1832,"title":{},"body":{"classes/CreateProductDto.html":{},"classes/UpdateProductDto.html":{}}}],["type.decorator",{"_index":1274,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ProductController.html":{}}}],["typealiases",{"_index":3655,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typeof",{"_index":56,"title":{},"body":{"injectables/ActivateMiddleware.html":{},"injectables/AdminJwtRefreshService.html":{},"injectables/AdminService.html":{},"injectables/CategoriesService.html":{},"injectables/OwnerJwtRefreshService.html":{},"injectables/OwnerService.html":{},"injectables/ReviewsService.html":{},"injectables/RolesService.html":{},"injectables/UserJwtRefreshTokenService.html":{},"injectables/UsersService.html":{}}}],["typescript",{"_index":650,"title":{},"body":{"classes/AdminRefreshToken.html":{},"classes/BookmarksProducts.html":{},"classes/Cart.html":{},"classes/CartProduct.html":{},"classes/CartProduct-1.html":{},"classes/Category.html":{},"classes/Order.html":{},"classes/OrderProduct.html":{},"classes/Owner.html":{},"classes/OwnerRefreshToken.html":{},"classes/Product.html":{},"classes/Product-1.html":{},"classes/ProductCategories.html":{},"classes/ProductReviews.html":{},"classes/Review.html":{},"classes/Role.html":{},"classes/UserRefreshToken.html":{},"classes/UserRoles.html":{},"classes/WatchedProducts.html":{},"dependencies.html":{},"index.html":{}}}],["ua",{"_index":946,"title":{},"body":{"classes/ApiException.html":{},"controllers/AuthController.html":{},"injectables/CategoriesService.html":{},"classes/Category.html":{},"interfaces/CategoryCreationAtrb.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateProductDto.html":{},"injectables/MailService.html":{},"classes/Nested.html":{},"classes/Nested-1.html":{},"classes/Product-1.html":{},"interfaces/ProductCreationAttrs.html":{},"interfaces/ReturnedCategory.html":{},"interfaces/ReturnedProduct.html":{},"interfaces/ReturnedProducts.html":{},"interfaces/ReturnedReview.html":{},"interfaces/ReviewCreationAtrb.html":{},"classes/UpdateCategoryDto.html":{},"classes/UpdateProductDto.html":{}}}],["ui",{"_index":3572,"title":{},"body":{"dependencies.html":{}}}],["ukraine",{"_index":3240,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["ul",{"_index":2159,"title":{},"body":{"injectables/MailService.html":{}}}],["unathorized",{"_index":113,"title":{},"body":{"guards/AddContentGuard.html":{},"guards/AdminGuard.html":{},"injectables/AdminService.html":{},"classes/ApiException.html":{},"guards/AuthFerfershGuard.html":{},"guards/EditContentGuard.html":{},"guards/EditWebsiteGuard.html":{},"guards/JwtAuthGuard.html":{},"guards/OwnerAdminGuard.html":{},"injectables/OwnerService.html":{},"guards/RefreshAuthGuard.html":{},"guards/RolesGuard.html":{},"guards/UserGuard.html":{},"injectables/UsersService.html":{}}}],["unauthorizederror",{"_index":909,"title":{},"body":{"classes/ApiException.html":{}}}],["unauthorizederror(type",{"_index":928,"title":{},"body":{"classes/ApiException.html":{}}}],["unauthorizedexception",{"_index":97,"title":{},"body":{"guards/AddContentGuard.html":{},"injectables/AdminService.html":{},"injectables/OwnerService.html":{},"guards/RefreshAuthGuard.html":{},"injectables/UsersService.html":{}}}],["undefined",{"_index":114,"title":{},"body":{"guards/AddContentGuard.html":{},"classes/AdminRefreshToken.html":{},"injectables/AdminService.html":{},"guards/AuthFerfershGuard.html":{},"classes/BookmarksProducts.html":{},"classes/Cart.html":{},"classes/CartProduct.html":{},"classes/CartProduct-1.html":{},"classes/Category.html":{},"classes/CreateProductDto.html":{},"guards/EditContentGuard.html":{},"guards/EditWebsiteGuard.html":{},"classes/Order.html":{},"classes/OrderProduct.html":{},"classes/Owner.html":{},"guards/OwnerAdminGuard.html":{},"classes/OwnerRefreshToken.html":{},"injectables/OwnerService.html":{},"classes/Product.html":{},"classes/Product-1.html":{},"classes/ProductCategories.html":{},"classes/ProductReviews.html":{},"classes/Review.html":{},"classes/Role.html":{},"classes/UpdateProductDto.html":{},"classes/UserRefreshToken.html":{},"classes/UserRoles.html":{},"classes/WatchedProducts.html":{}}}],["undefined})@roles('owner')@useguards(jwtauthguard",{"_index":3354,"title":{},"body":{"controllers/UsersController.html":{}}}],["undefined})@throttle(60",{"_index":177,"title":{},"body":{"controllers/AdminController.html":{}}}],["unique",{"_index":132,"title":{},"body":{"classes/AddRoleDto.html":{},"classes/AdminRefreshToken.html":{},"classes/BanUserDto.html":{},"classes/BookmarksProducts.html":{},"classes/Cart.html":{},"classes/CartProduct.html":{},"classes/CartProduct-1.html":{},"classes/Category.html":{},"classes/CreateAccessTokenDto.html":{},"classes/CreateAdminRefreshTokenDto.html":{},"classes/CreateOwnerRefreshTokenDto.html":{},"classes/CreateUserRefreshTokenDto.html":{},"classes/Order.html":{},"classes/OrderProduct.html":{},"classes/Owner.html":{},"classes/OwnerRefreshToken.html":{},"classes/Product.html":{},"classes/Product-1.html":{},"classes/ProductCategories.html":{},"classes/ProductReviews.html":{},"classes/Review.html":{},"classes/Role.html":{},"classes/UserRefreshToken.html":{},"classes/UserRoles.html":{},"classes/WatchedProducts.html":{}}}],["unit",{"_index":3611,"title":{},"body":{"index.html":{}}}],["unknown",{"_index":31,"title":{},"body":{"injectables/ActivateMiddleware.html":{},"injectables/AdminJwtRefreshService.html":{},"injectables/AdminService.html":{},"injectables/AdminUserMiddleware.html":{},"controllers/AppController.html":{},"controllers/AuthController.html":{},"injectables/AuthMiddleware.html":{},"injectables/InitializeEmailMiddleware.html":{},"injectables/InitializeUserMiddleware.html":{},"injectables/MailService.html":{},"injectables/OwnerJwtRefreshService.html":{},"injectables/OwnerService.html":{},"controllers/ProductController.html":{},"injectables/ProductMiddleware.html":{},"injectables/ReviewsService.html":{},"injectables/UserAdminMiddleware.html":{},"injectables/UserJwtRefreshTokenService.html":{},"injectables/UserMiddleware.html":{},"injectables/UserMiddleware-1.html":{}}}],["unlicensed",{"_index":3653,"title":{},"body":{"properties.html":{}}}],["unlinkfile",{"_index":1902,"title":{},"body":{"injectables/FilesService.html":{}}}],["unlinkfile(filepath",{"_index":1913,"title":{},"body":{"injectables/FilesService.html":{},"interfaces/fileCreated.html":{}}}],["up",{"_index":1263,"title":{},"body":{"controllers/AuthController.html":{}}}],["update",{"_index":3342,"title":{},"body":{"controllers/UsersController.html":{}}}],["update(response",{"_index":3357,"title":{},"body":{"controllers/UsersController.html":{}}}],["updateadmin",{"_index":154,"title":{},"body":{"controllers/AdminController.html":{},"injectables/AdminService.html":{}}}],["updateadmin(admindto",{"_index":180,"title":{},"body":{"controllers/AdminController.html":{}}}],["updateadmin(dto",{"_index":711,"title":{},"body":{"injectables/AdminService.html":{}}}],["updatecategory",{"_index":1494,"title":{},"body":{"controllers/CategoriesController.html":{},"injectables/CategoriesService.html":{}}}],["updatecategory(categoryid",{"_index":1512,"title":{},"body":{"controllers/CategoriesController.html":{},"injectables/CategoriesService.html":{}}}],["updatecategorydto",{"_index":1568,"title":{"classes/UpdateCategoryDto.html":{}},"body":{"injectables/CategoriesService.html":{},"classes/UpdateCategoryDto.html":{}}}],["updatedat",{"_index":738,"title":{},"body":{"injectables/AdminService.html":{},"classes/BookmarksProducts.html":{},"injectables/CategoriesService.html":{},"interfaces/CategoryCreationAtrb.html":{},"classes/ProductCategories.html":{},"interfaces/ProductCreationAttrs.html":{},"classes/ProductReviews.html":{},"interfaces/ReturnedCategory.html":{},"interfaces/ReturnedProduct.html":{},"interfaces/ReturnedProducts.html":{},"interfaces/ReturnedReview.html":{},"interfaces/ReviewCreationAtrb.html":{},"classes/UserRoles.html":{},"injectables/UsersService.html":{},"classes/WatchedProducts.html":{}}}],["updatedto",{"_index":1567,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["updatedto.en",{"_index":1603,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["updatedto.rs",{"_index":1602,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["updatedto.ru",{"_index":1601,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["updatedto.ua",{"_index":1600,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["updateproduct",{"_index":2770,"title":{},"body":{"controllers/ProductController.html":{}}}],["updateproduct(updateproductdto",{"_index":2812,"title":{},"body":{"controllers/ProductController.html":{}}}],["updateproductdto",{"_index":2287,"title":{"classes/UpdateProductDto.html":{}},"body":{"classes/Nested-1.html":{},"controllers/ProductController.html":{},"classes/UpdateProductDto.html":{}}}],["updateuser",{"_index":3398,"title":{},"body":{"injectables/UsersService.html":{}}}],["updateuser(userdto",{"_index":3424,"title":{},"body":{"injectables/UsersService.html":{}}}],["updateuserdto",{"_index":3236,"title":{"classes/UpdateUserDto.html":{}},"body":{"classes/UpdateUserDto.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["updating",{"_index":181,"title":{},"body":{"controllers/AdminController.html":{}}}],["uploadedfiles",{"_index":2816,"title":{},"body":{"controllers/ProductController.html":{}}}],["use",{"_index":10,"title":{},"body":{"injectables/ActivateMiddleware.html":{},"injectables/AdminUserMiddleware.html":{},"injectables/AuthMiddleware.html":{},"injectables/CorsMiddleware.html":{},"injectables/InitializeEmailMiddleware.html":{},"injectables/InitializeUserMiddleware.html":{},"injectables/LocationMiddleware.html":{},"injectables/ProductMiddleware.html":{},"injectables/UserAdminMiddleware.html":{},"injectables/UserMiddleware.html":{},"injectables/UserMiddleware-1.html":{}}}],["use(@req",{"_index":1331,"title":{},"body":{"injectables/AuthMiddleware.html":{},"injectables/CorsMiddleware.html":{},"injectables/LocationMiddleware.html":{},"injectables/ProductMiddleware.html":{},"interfaces/RequestHeaders.html":{},"injectables/UserMiddleware.html":{},"injectables/UserMiddleware-1.html":{}}}],["use(req",{"_index":21,"title":{},"body":{"injectables/ActivateMiddleware.html":{},"injectables/AdminUserMiddleware.html":{},"injectables/AuthMiddleware.html":{},"injectables/CorsMiddleware.html":{},"injectables/InitializeEmailMiddleware.html":{},"injectables/InitializeUserMiddleware.html":{},"injectables/LocationMiddleware.html":{},"injectables/ProductMiddleware.html":{},"injectables/UserAdminMiddleware.html":{},"injectables/UserMiddleware.html":{},"injectables/UserMiddleware-1.html":{}}}],["useclass",{"_index":1144,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CoreModule.html":{}}}],["usefactory",{"_index":1146,"title":{},"body":{"modules/AppModule.html":{},"interfaces/ITelegramModuleAsyncOptions.html":{},"interfaces/ITelegramOptions.html":{},"modules/TelegramModule.html":{}}}],["usefilters",{"_index":195,"title":{},"body":{"controllers/AdminController.html":{},"controllers/AuthController.html":{},"controllers/CardController.html":{},"controllers/CategoriesController.html":{},"controllers/OrdersController.html":{},"controllers/ProductController.html":{},"controllers/ReviewsController.html":{},"controllers/RolesController.html":{},"controllers/UsersController.html":{}}}],["usefilters(apierrorexceptionfilter",{"_index":236,"title":{},"body":{"controllers/AdminController.html":{},"controllers/AuthController.html":{},"controllers/CardController.html":{},"controllers/CategoriesController.html":{},"controllers/OrdersController.html":{},"controllers/ProductController.html":{},"controllers/ReviewsController.html":{},"controllers/RolesController.html":{},"controllers/UsersController.html":{}}}],["usefilters(apiexceptionfilter",{"_index":1289,"title":{},"body":{"controllers/AuthController.html":{}}}],["useguards",{"_index":188,"title":{},"body":{"controllers/AdminController.html":{},"controllers/AuthController.html":{},"controllers/CategoriesController.html":{},"controllers/ProductController.html":{},"controllers/ReviewsController.html":{},"controllers/RolesController.html":{},"controllers/UsersController.html":{}}}],["useguards(jwtauthguard",{"_index":250,"title":{},"body":{"controllers/AdminController.html":{},"controllers/AuthController.html":{},"controllers/ProductController.html":{},"controllers/ReviewsController.html":{},"controllers/UsersController.html":{}}}],["useguards(refreshauthguard",{"_index":1294,"title":{},"body":{"controllers/AuthController.html":{}}}],["useguards(throttlerbehindproxyguard",{"_index":235,"title":{},"body":{"controllers/AdminController.html":{},"controllers/AuthController.html":{},"controllers/CategoriesController.html":{},"controllers/ProductController.html":{},"controllers/ReviewsController.html":{},"controllers/RolesController.html":{},"controllers/UsersController.html":{}}}],["useinterceptors",{"_index":190,"title":{},"body":{"controllers/AdminController.html":{},"controllers/AuthController.html":{},"controllers/CategoriesController.html":{},"controllers/ProductController.html":{},"controllers/ReviewsController.html":{},"controllers/RolesController.html":{},"controllers/UsersController.html":{}}}],["useinterceptors(cacheinterceptor",{"_index":1527,"title":{},"body":{"controllers/CategoriesController.html":{},"controllers/ProductController.html":{},"controllers/ReviewsController.html":{},"controllers/RolesController.html":{}}}],["useinterceptors(classserializerinterceptor",{"_index":237,"title":{},"body":{"controllers/AdminController.html":{},"controllers/AuthController.html":{},"controllers/CategoriesController.html":{},"controllers/UsersController.html":{}}}],["usepipes",{"_index":2817,"title":{},"body":{"controllers/ProductController.html":{}}}],["usepipes(new",{"_index":2853,"title":{},"body":{"controllers/ProductController.html":{}}}],["user",{"_index":135,"title":{},"body":{"classes/AddRoleDto.html":{},"controllers/AdminController.html":{},"modules/AdminModule.html":{},"injectables/AdminService.html":{},"modules/AppModule.html":{},"guards/AuthFerfershGuard.html":{},"modules/AuthModule.html":{},"interfaces/AuthUser.html":{},"classes/BanUserDto.html":{},"classes/BookmarksProducts.html":{},"classes/Cart.html":{},"modules/CartModule.html":{},"modules/CategoriesModule.html":{},"interfaces/CodeDto.html":{},"modules/CoreModule.html":{},"classes/CreateAccessTokenDto.html":{},"classes/CreateAdminDto.html":{},"classes/CreateAdminRefreshTokenDto.html":{},"classes/CreateOwnerRefreshTokenDto.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserRefreshTokenDto.html":{},"injectables/InitializeEmailMiddleware.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"classes/Order.html":{},"modules/OrdersModule.html":{},"modules/OwnerModule.html":{},"interfaces/Payload.html":{},"modules/ProductModule.html":{},"interfaces/ReturnedAdmin.html":{},"interfaces/ReturnedOwner.html":{},"interfaces/ReturnedUser.html":{},"modules/ReviewsModule.html":{},"classes/Role.html":{},"modules/RolesModule.html":{},"classes/SignupDto.html":{},"injectables/TasksService.html":{},"interfaces/Tokens.html":{},"injectables/UserAdminMiddleware.html":{},"injectables/UserJwtRefreshTokenService.html":{},"classes/UserRefreshToken.html":{},"classes/UserRoles.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"classes/WatchedProducts.html":{}}}],["user'})@apiresponse({status",{"_index":3346,"title":{},"body":{"controllers/UsersController.html":{}}}],["user'})@isarray",{"_index":1786,"title":{},"body":{"classes/CreateAdminRefreshTokenDto.html":{},"classes/CreateOwnerRefreshTokenDto.html":{},"classes/CreateUserRefreshTokenDto.html":{}}}],["user.$add('role",{"_index":3468,"title":{},"body":{"injectables/UsersService.html":{}}}],["user.$add('userrefreshtokens",{"_index":3292,"title":{},"body":{"injectables/UserJwtRefreshTokenService.html":{}}}],["user.$remove('userrefreshtokens",{"_index":3297,"title":{},"body":{"injectables/UserJwtRefreshTokenService.html":{}}}],["user.$set('roles",{"_index":3455,"title":{},"body":{"injectables/UsersService.html":{}}}],["user.$set('userrefreshtokens",{"_index":3290,"title":{},"body":{"injectables/UserJwtRefreshTokenService.html":{}}}],["user.banned",{"_index":3469,"title":{},"body":{"injectables/UsersService.html":{}}}],["user.banreason",{"_index":3470,"title":{},"body":{"injectables/UsersService.html":{}}}],["user.dto",{"_index":3364,"title":{},"body":{"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["user.dto.ts",{"_index":1393,"title":{},"body":{"classes/BanUserDto.html":{},"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{}}}],["user.dto.ts:11",{"_index":1397,"title":{},"body":{"classes/BanUserDto.html":{}}}],["user.dto.ts:16",{"_index":3243,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["user.dto.ts:25",{"_index":1875,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{}}}],["user.dto.ts:34",{"_index":1884,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{}}}],["user.dto.ts:42",{"_index":1880,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:43",{"_index":3242,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["user.dto.ts:52",{"_index":3245,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["user.dto.ts:53",{"_index":1872,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:66",{"_index":1876,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:7",{"_index":1398,"title":{},"body":{"classes/BanUserDto.html":{}}}],["user.email",{"_index":2003,"title":{},"body":{"injectables/InitializeEmailMiddleware.html":{},"injectables/MailService.html":{},"injectables/UsersService.html":{}}}],["user.getaddcontent",{"_index":3461,"title":{},"body":{"injectables/UsersService.html":{}}}],["user.getconfirmcode",{"_index":3478,"title":{},"body":{"injectables/UsersService.html":{}}}],["user.geteditcontent",{"_index":3462,"title":{},"body":{"injectables/UsersService.html":{}}}],["user.geteditwebsite",{"_index":3463,"title":{},"body":{"injectables/UsersService.html":{}}}],["user.getisadmin",{"_index":758,"title":{},"body":{"injectables/AdminService.html":{},"injectables/UsersService.html":{}}}],["user.getname",{"_index":3459,"title":{},"body":{"injectables/UsersService.html":{}}}],["user.getpassword",{"_index":3253,"title":{},"body":{"injectables/UserAdminMiddleware.html":{},"injectables/UsersService.html":{}}}],["user.getresettokenexpiration",{"_index":3477,"title":{},"body":{"injectables/UsersService.html":{}}}],["user.getsurname",{"_index":3460,"title":{},"body":{"injectables/UsersService.html":{}}}],["user.getuserrefreshtokens",{"_index":3288,"title":{},"body":{"injectables/UserJwtRefreshTokenService.html":{}}}],["user.getuserrefreshtokens().length",{"_index":3289,"title":{},"body":{"injectables/UserJwtRefreshTokenService.html":{}}}],["user.id",{"_index":774,"title":{},"body":{"injectables/AdminService.html":{},"injectables/UserJwtRefreshTokenService.html":{},"injectables/UsersService.html":{}}}],["user.middleware",{"_index":509,"title":{},"body":{"modules/AdminModule.html":{},"modules/AuthModule.html":{},"modules/CategoriesModule.html":{},"modules/ProductModule.html":{},"modules/ReviewsModule.html":{},"modules/RolesModule.html":{},"modules/UsersModule.html":{}}}],["user.middleware.ts",{"_index":820,"title":{},"body":{"injectables/AdminUserMiddleware.html":{},"injectables/InitializeUserMiddleware.html":{}}}],["user.middleware.ts:17",{"_index":2013,"title":{},"body":{"injectables/InitializeUserMiddleware.html":{}}}],["user.middleware.ts:21",{"_index":821,"title":{},"body":{"injectables/AdminUserMiddleware.html":{}}}],["user.middleware.ts:23",{"_index":822,"title":{},"body":{"injectables/AdminUserMiddleware.html":{},"injectables/InitializeUserMiddleware.html":{}}}],["user.model",{"_index":3325,"title":{},"body":{"classes/UserRefreshToken.html":{}}}],["user.phonenumber",{"_index":3252,"title":{},"body":{"injectables/UserAdminMiddleware.html":{},"injectables/UsersService.html":{}}}],["user.roles",{"_index":3456,"title":{},"body":{"injectables/UsersService.html":{}}}],["user.roles.model",{"_index":3029,"title":{},"body":{"classes/Role.html":{}}}],["user.save",{"_index":756,"title":{},"body":{"injectables/AdminService.html":{},"injectables/UserJwtRefreshTokenService.html":{},"injectables/UsersService.html":{}}}],["user.setaddcontent(dto.addcontent",{"_index":753,"title":{},"body":{"injectables/AdminService.html":{}}}],["user.setaddcontent(false",{"_index":3450,"title":{},"body":{"injectables/UsersService.html":{}}}],["user.setcity(userdto.city",{"_index":3444,"title":{},"body":{"injectables/UsersService.html":{}}}],["user.setconfirmcode(code",{"_index":3474,"title":{},"body":{"injectables/UsersService.html":{}}}],["user.setcountry(userdto.country",{"_index":3445,"title":{},"body":{"injectables/UsersService.html":{}}}],["user.seteditcontent(dto.editcontent",{"_index":754,"title":{},"body":{"injectables/AdminService.html":{}}}],["user.seteditcontent(false",{"_index":3452,"title":{},"body":{"injectables/UsersService.html":{}}}],["user.seteditwebsite(dto.editwebsite",{"_index":755,"title":{},"body":{"injectables/AdminService.html":{}}}],["user.seteditwebsite(false",{"_index":3451,"title":{},"body":{"injectables/UsersService.html":{}}}],["user.setisactivated(false",{"_index":3448,"title":{},"body":{"injectables/UsersService.html":{}}}],["user.setisadmin(dto.isadmin",{"_index":752,"title":{},"body":{"injectables/AdminService.html":{}}}],["user.setisadmin(false",{"_index":3449,"title":{},"body":{"injectables/UsersService.html":{}}}],["user.setname(userdto.name",{"_index":3442,"title":{},"body":{"injectables/UsersService.html":{}}}],["user.setnewpasssword(hashedpassword",{"_index":3480,"title":{},"body":{"injectables/UsersService.html":{}}}],["user.setpostoffice(userdto.postoffice",{"_index":3446,"title":{},"body":{"injectables/UsersService.html":{}}}],["user.setresettokenexpiration(number(date.now",{"_index":3475,"title":{},"body":{"injectables/UsersService.html":{}}}],["user.setsurname(userdto.surname",{"_index":3443,"title":{},"body":{"injectables/UsersService.html":{}}}],["user.userrefreshtokens",{"_index":3291,"title":{},"body":{"injectables/UserJwtRefreshTokenService.html":{}}}],["user/find_users",{"_index":3391,"title":{},"body":{"modules/UsersModule.html":{}}}],["user/get_users",{"_index":3390,"title":{},"body":{"modules/UsersModule.html":{}}}],["user@gmail.com",{"_index":1717,"title":{},"body":{"classes/CreateAccessTokenDto.html":{},"classes/CreateAdminDto.html":{},"classes/CreateOwnerDto.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserRefreshTokenDto.html":{},"classes/LoginDto.html":{},"classes/ResetDto.html":{},"classes/SignupDto.html":{},"classes/UserRefreshToken.html":{}}}],["user_not_authorizied",{"_index":277,"title":{},"body":{"guards/AdminGuard.html":{},"guards/JwtAuthGuard.html":{},"guards/RolesGuard.html":{},"guards/UserGuard.html":{}}}],["user_not_detected",{"_index":100,"title":{},"body":{"guards/AddContentGuard.html":{},"guards/AuthFerfershGuard.html":{},"guards/EditContentGuard.html":{},"guards/EditWebsiteGuard.html":{},"guards/OwnerAdminGuard.html":{}}}],["user_not_found",{"_index":934,"title":{},"body":{"classes/ApiException.html":{},"guards/AuthFerfershGuard.html":{},"injectables/MailService.html":{},"injectables/UserAdminMiddleware.html":{},"injectables/UserJwtRefreshTokenService.html":{},"injectables/UsersService.html":{}}}],["user_or_role_not_found",{"_index":935,"title":{},"body":{"classes/ApiException.html":{},"injectables/UsersService.html":{}}}],["user_with_email_doesnt_exist",{"_index":918,"title":{},"body":{"classes/ApiException.html":{},"injectables/InitializeEmailMiddleware.html":{},"injectables/UsersService.html":{}}}],["user_with_email_exist",{"_index":916,"title":{},"body":{"classes/ApiException.html":{},"injectables/UsersService.html":{}}}],["user_with_email_not_found",{"_index":1998,"title":{},"body":{"injectables/InitializeEmailMiddleware.html":{}}}],["user_with_phonenumber_exist",{"_index":917,"title":{},"body":{"classes/ApiException.html":{},"injectables/UsersService.html":{}}}],["user`s",{"_index":1633,"title":{},"body":{"classes/ChangeDto.html":{},"classes/CreateAccessTokenDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserRefreshTokenDto.html":{},"classes/LoginDto.html":{},"classes/ResetDto.html":{},"classes/Role.html":{},"classes/SignupDto.html":{},"classes/UpdateUserDto.html":{},"classes/UserRefreshToken.html":{}}}],["user`s_refresh",{"_index":3326,"title":{},"body":{"classes/UserRefreshToken.html":{}}}],["user`s_roles",{"_index":3337,"title":{},"body":{"classes/UserRoles.html":{}}}],["useractivationlink",{"_index":1382,"title":{},"body":{"interfaces/AuthUser.html":{},"interfaces/CodeDto.html":{},"classes/CreateAccessTokenDto.html":{},"interfaces/Payload.html":{},"interfaces/ReturnedAdmin.html":{},"interfaces/ReturnedOwner.html":{},"interfaces/ReturnedUser.html":{},"interfaces/Tokens.html":{}}}],["useradminmiddleware",{"_index":521,"title":{"injectables/UserAdminMiddleware.html":{}},"body":{"modules/AdminModule.html":{},"injectables/UserAdminMiddleware.html":{}}}],["useragent",{"_index":604,"title":{},"body":{"classes/AdminRefreshToken.html":{},"controllers/AuthController.html":{},"injectables/AuthMiddleware.html":{},"interfaces/InitializeUser.html":{},"injectables/ProductMiddleware.html":{},"interfaces/RolecreationAttrbs.html":{},"interfaces/UserInterface.html":{},"injectables/UserJwtRefreshTokenService.html":{},"injectables/UserMiddleware.html":{},"injectables/UserMiddleware-1.html":{},"interfaces/UserRefreshCreationAttrbs.html":{},"interfaces/UsercreationAttrbs.html":{},"controllers/UsersController.html":{},"interfaces/ValidateUser.html":{}}}],["useragent('user",{"_index":1287,"title":{},"body":{"controllers/AuthController.html":{},"controllers/UsersController.html":{}}}],["usercreationattrbs",{"_index":2008,"title":{"interfaces/UsercreationAttrbs.html":{}},"body":{"interfaces/InitializeUser.html":{},"interfaces/RolecreationAttrbs.html":{},"interfaces/UserInterface.html":{},"interfaces/UserRefreshCreationAttrbs.html":{},"interfaces/UsercreationAttrbs.html":{},"interfaces/ValidateUser.html":{}}}],["userdata",{"_index":3284,"title":{},"body":{"injectables/UserJwtRefreshTokenService.html":{}}}],["userdto",{"_index":1247,"title":{},"body":{"controllers/AuthController.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["userdto.password",{"_index":3472,"title":{},"body":{"injectables/UsersService.html":{}}}],["userguard",{"_index":2827,"title":{"guards/UserGuard.html":{}},"body":{"controllers/ProductController.html":{},"guards/UserGuard.html":{},"controllers/UsersController.html":{}}}],["userguard)@get('bookmarkproducts",{"_index":2797,"title":{},"body":{"controllers/ProductController.html":{}}}],["userguard)@get('watchedproducts",{"_index":2810,"title":{},"body":{"controllers/ProductController.html":{}}}],["userguard)@httpcode(201)@patch('update",{"_index":3359,"title":{},"body":{"controllers/UsersController.html":{}}}],["userguard)@post('addbookmarkproduct",{"_index":2773,"title":{},"body":{"controllers/ProductController.html":{}}}],["userguard)@post('addwatchedproduct",{"_index":2776,"title":{},"body":{"controllers/ProductController.html":{}}}],["userid",{"_index":125,"title":{},"body":{"classes/AddRoleDto.html":{},"interfaces/AdminInterface.html":{},"interfaces/AdminRefreshTokenCreationAttrbs.html":{},"injectables/AdminService.html":{},"interfaces/AdmincreationAttrbs.html":{},"controllers/AuthController.html":{},"interfaces/AuthUser.html":{},"classes/BanUserDto.html":{},"classes/BookmarksProducts.html":{},"classes/Cart.html":{},"interfaces/CodeDto.html":{},"classes/CreateAccessTokenDto.html":{},"classes/CreateUserRefreshTokenDto.html":{},"interfaces/InitializeUser.html":{},"classes/JwtRefreshTokenDeletedEvent.html":{},"classes/Order.html":{},"interfaces/Payload.html":{},"controllers/ProductController.html":{},"interfaces/ReturnedAdmin.html":{},"interfaces/ReturnedOwner.html":{},"interfaces/ReturnedUser.html":{},"interfaces/RolecreationAttrbs.html":{},"interfaces/Tokens.html":{},"interfaces/UserInterface.html":{},"injectables/UserJwtRefreshTokenService.html":{},"interfaces/UserRefreshCreationAttrbs.html":{},"classes/UserRefreshToken.html":{},"classes/UserRoles.html":{},"interfaces/UsercreationAttrbs.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"interfaces/ValidateUser.html":{},"classes/WatchedProducts.html":{}}}],["userid'})@foreignkey(undefined)@column({type",{"_index":3334,"title":{},"body":{"classes/UserRoles.html":{}}}],["userid'})@foreignkey(undefined)@isint()@column({type",{"_index":3313,"title":{},"body":{"classes/UserRefreshToken.html":{}}}],["userid('user",{"_index":1309,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ProductController.html":{},"controllers/UsersController.html":{}}}],["userinterface",{"_index":2010,"title":{"interfaces/UserInterface.html":{}},"body":{"interfaces/InitializeUser.html":{},"interfaces/RolecreationAttrbs.html":{},"interfaces/UserInterface.html":{},"interfaces/UserRefreshCreationAttrbs.html":{},"interfaces/UsercreationAttrbs.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"interfaces/ValidateUser.html":{}}}],["userjwtrefreshtokenservice",{"_index":2012,"title":{"injectables/UserJwtRefreshTokenService.html":{}},"body":{"injectables/InitializeUserMiddleware.html":{},"modules/RolesModule.html":{},"guards/UserGuard.html":{},"injectables/UserJwtRefreshTokenService.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["usermiddleware",{"_index":2892,"title":{"injectables/UserMiddleware.html":{},"injectables/UserMiddleware-1.html":{}},"body":{"modules/ProductModule.html":{},"injectables/UserMiddleware.html":{},"injectables/UserMiddleware-1.html":{},"modules/UsersModule.html":{}}}],["username",{"_index":1204,"title":{},"body":{"modules/AppModule.html":{}}}],["username_validation",{"_index":1874,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/SignupDto.html":{},"classes/UpdateUserDto.html":{}}}],["usernotfound",{"_index":910,"title":{},"body":{"classes/ApiException.html":{}}}],["usernotfound(type",{"_index":933,"title":{},"body":{"classes/ApiException.html":{}}}],["userperpage",{"_index":3409,"title":{},"body":{"injectables/UsersService.html":{}}}],["userrefreshcreationattrbs",{"_index":2006,"title":{"interfaces/UserRefreshCreationAttrbs.html":{}},"body":{"interfaces/InitializeUser.html":{},"interfaces/RolecreationAttrbs.html":{},"interfaces/UserInterface.html":{},"interfaces/UserRefreshCreationAttrbs.html":{},"classes/UserRefreshToken.html":{},"interfaces/UsercreationAttrbs.html":{},"interfaces/ValidateUser.html":{}}}],["userrefreshtoken",{"_index":298,"title":{"classes/UserRefreshToken.html":{}},"body":{"guards/AdminGuard.html":{},"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CartModule.html":{},"modules/CategoriesModule.html":{},"modules/CoreModule.html":{},"interfaces/InitializeUser.html":{},"injectables/InitializeUserMiddleware.html":{},"modules/MailModule.html":{},"modules/OrdersModule.html":{},"guards/OwnerAdminGuard.html":{},"modules/OwnerModule.html":{},"modules/ProductModule.html":{},"modules/ReviewsModule.html":{},"interfaces/RolecreationAttrbs.html":{},"modules/RolesModule.html":{},"guards/UserGuard.html":{},"interfaces/UserInterface.html":{},"injectables/UserJwtRefreshTokenService.html":{},"interfaces/UserRefreshCreationAttrbs.html":{},"classes/UserRefreshToken.html":{},"interfaces/UsercreationAttrbs.html":{},"modules/UsersModule.html":{},"interfaces/ValidateUser.html":{}}}],["userrefreshtoken.adminid",{"_index":302,"title":{},"body":{"guards/AdminGuard.html":{},"guards/OwnerAdminGuard.html":{}}}],["userrefreshtoken.findone",{"_index":3299,"title":{},"body":{"injectables/UserJwtRefreshTokenService.html":{}}}],["userrefreshtoken.ownerid",{"_index":2451,"title":{},"body":{"guards/OwnerAdminGuard.html":{}}}],["userrefreshtoken.userid",{"_index":3259,"title":{},"body":{"guards/UserGuard.html":{}}}],["userrefreshtokenid",{"_index":3276,"title":{},"body":{"injectables/UserJwtRefreshTokenService.html":{}}}],["userrefreshtokenrepository",{"_index":3263,"title":{},"body":{"injectables/UserJwtRefreshTokenService.html":{}}}],["userrepository",{"_index":3401,"title":{},"body":{"injectables/UsersService.html":{}}}],["userrole",{"_index":769,"title":{},"body":{"injectables/AdminService.html":{},"injectables/OwnerService.html":{},"injectables/UsersService.html":{}}}],["userrole.id",{"_index":776,"title":{},"body":{"injectables/AdminService.html":{},"injectables/OwnerService.html":{},"injectables/UsersService.html":{}}}],["userroles",{"_index":512,"title":{"classes/UserRoles.html":{}},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CartModule.html":{},"modules/CategoriesModule.html":{},"modules/CoreModule.html":{},"modules/MailModule.html":{},"modules/OrdersModule.html":{},"classes/Owner.html":{},"modules/OwnerModule.html":{},"modules/ProductModule.html":{},"modules/ReviewsModule.html":{},"classes/Role.html":{},"modules/RolesModule.html":{},"classes/UserRoles.html":{},"modules/UsersModule.html":{}}}],["users",{"_index":1283,"title":{},"body":{"controllers/AuthController.html":{},"classes/Role.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["users'})@apiresponse({status",{"_index":1225,"title":{},"body":{"controllers/AuthController.html":{},"controllers/UsersController.html":{}}}],["users.controller",{"_index":3383,"title":{},"body":{"modules/UsersModule.html":{}}}],["users.length",{"_index":3457,"title":{},"body":{"injectables/UsersService.html":{}}}],["users.map((user",{"_index":3458,"title":{},"body":{"injectables/UsersService.html":{}}}],["users.push(user",{"_index":3436,"title":{},"body":{"injectables/UsersService.html":{}}}],["users.service",{"_index":3282,"title":{},"body":{"injectables/UserJwtRefreshTokenService.html":{}}}],["users/constants/jwt",{"_index":943,"title":{},"body":{"classes/ApiException.html":{}}}],["users/constants/user.constants",{"_index":944,"title":{},"body":{"classes/ApiException.html":{},"guards/AuthFerfershGuard.html":{},"injectables/MailService.html":{},"injectables/UserAdminMiddleware.html":{}}}],["users/models/user.model",{"_index":226,"title":{},"body":{"controllers/AdminController.html":{},"modules/AdminModule.html":{},"injectables/AdminService.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"classes/BookmarksProducts.html":{},"classes/Cart.html":{},"modules/CartModule.html":{},"modules/CategoriesModule.html":{},"modules/CoreModule.html":{},"modules/MailModule.html":{},"classes/Order.html":{},"modules/OrdersModule.html":{},"modules/OwnerModule.html":{},"modules/ProductModule.html":{},"modules/ReviewsModule.html":{},"classes/Role.html":{},"modules/RolesModule.html":{},"classes/UserRoles.html":{},"classes/WatchedProducts.html":{}}}],["users/models/user.refresh.token.model",{"_index":520,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CartModule.html":{},"modules/CategoriesModule.html":{},"modules/CoreModule.html":{},"modules/MailModule.html":{},"modules/OrdersModule.html":{},"modules/OwnerModule.html":{},"modules/ProductModule.html":{},"modules/ReviewsModule.html":{},"modules/RolesModule.html":{}}}],["users/services/jwt",{"_index":2015,"title":{},"body":{"injectables/InitializeUserMiddleware.html":{},"modules/RolesModule.html":{},"guards/UserGuard.html":{}}}],["users/services/users.service",{"_index":547,"title":{},"body":{"modules/AdminModule.html":{},"injectables/AdminService.html":{},"guards/AuthFerfershGuard.html":{},"injectables/InitializeEmailMiddleware.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"modules/OwnerModule.html":{},"modules/RolesModule.html":{},"injectables/UserAdminMiddleware.html":{}}}],["users/update",{"_index":3388,"title":{},"body":{"modules/UsersModule.html":{}}}],["users/users.module",{"_index":519,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CartModule.html":{},"modules/CategoriesModule.html":{},"modules/MailModule.html":{},"modules/OrdersModule.html":{},"modules/ProductModule.html":{},"modules/ReviewsModule.html":{},"modules/RolesModule.html":{}}}],["userscontroller",{"_index":3338,"title":{"controllers/UsersController.html":{}},"body":{"controllers/UsersController.html":{},"modules/UsersModule.html":{}}}],["userservice",{"_index":680,"title":{},"body":{"injectables/AdminService.html":{},"guards/AuthFerfershGuard.html":{},"injectables/InitializeEmailMiddleware.html":{},"injectables/MailService.html":{},"injectables/UserAdminMiddleware.html":{},"injectables/UserJwtRefreshTokenService.html":{},"controllers/UsersController.html":{}}}],["usersmodule",{"_index":518,"title":{"modules/UsersModule.html":{}},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CartModule.html":{},"modules/CategoriesModule.html":{},"modules/MailModule.html":{},"modules/OrdersModule.html":{},"modules/ProductModule.html":{},"modules/ReviewsModule.html":{},"modules/RolesModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["usersservice",{"_index":483,"title":{"injectables/UsersService.html":{}},"body":{"modules/AdminModule.html":{},"injectables/AdminService.html":{},"guards/AuthFerfershGuard.html":{},"injectables/InitializeEmailMiddleware.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"modules/OwnerModule.html":{},"modules/RolesModule.html":{},"injectables/UserAdminMiddleware.html":{},"injectables/UserJwtRefreshTokenService.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"overview.html":{}}}],["user})@roles('owner')@useguards(jwtauthguard",{"_index":3351,"title":{},"body":{"controllers/UsersController.html":{}}}],["util",{"_index":393,"title":{},"body":{"injectables/AdminJwtRefreshService.html":{},"controllers/AppController.html":{},"injectables/OwnerJwtRefreshService.html":{}}}],["uuid",{"_index":395,"title":{},"body":{"injectables/AdminJwtRefreshService.html":{},"injectables/FilesService.html":{},"injectables/OwnerJwtRefreshService.html":{},"injectables/OwnerService.html":{},"controllers/ProductController.html":{},"injectables/UserAdminMiddleware.html":{},"injectables/UserJwtRefreshTokenService.html":{},"dependencies.html":{},"interfaces/fileCreated.html":{}}}],["uuid.v4",{"_index":1922,"title":{},"body":{"injectables/FilesService.html":{},"interfaces/fileCreated.html":{}}}],["v",{"_index":175,"title":{},"body":{"controllers/AdminController.html":{},"injectables/AdminService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["v.map((param",{"_index":731,"title":{},"body":{"injectables/AdminService.html":{},"injectables/UsersService.html":{}}}],["v4",{"_index":394,"title":{},"body":{"injectables/AdminJwtRefreshService.html":{},"injectables/FilesService.html":{},"injectables/OwnerJwtRefreshService.html":{},"injectables/OwnerService.html":{},"controllers/ProductController.html":{},"injectables/UserAdminMiddleware.html":{},"injectables/UserJwtRefreshTokenService.html":{},"interfaces/fileCreated.html":{}}}],["v4()}`).replace",{"_index":439,"title":{},"body":{"injectables/AdminJwtRefreshService.html":{},"injectables/OwnerJwtRefreshService.html":{}}}],["valid",{"_index":1395,"title":{},"body":{"classes/BanUserDto.html":{}}}],["validate",{"_index":2259,"title":{},"body":{"classes/MatchConstraint.html":{},"classes/RequestValidator.html":{},"injectables/ValidateDto.html":{}}}],["validate(convertedobject).then((errors",{"_index":2926,"title":{},"body":{"classes/RequestValidator.html":{}}}],["validate(obj",{"_index":3488,"title":{},"body":{"injectables/ValidateDto.html":{}}}],["validate(value",{"_index":2260,"title":{},"body":{"classes/MatchConstraint.html":{}}}],["validateadmin",{"_index":679,"title":{},"body":{"injectables/AdminService.html":{}}}],["validateadmin(admindto",{"_index":713,"title":{},"body":{"injectables/AdminService.html":{}}}],["validatedto",{"_index":207,"title":{"injectables/ValidateDto.html":{}},"body":{"controllers/AdminController.html":{},"controllers/AuthController.html":{},"controllers/UsersController.html":{},"injectables/ValidateDto.html":{}}}],["validatenested",{"_index":3584,"title":{},"body":{"miscellaneous/functions.html":{}}}],["validatenested(schema",{"_index":3590,"title":{},"body":{"miscellaneous/functions.html":{}}}],["validateowner",{"_index":2561,"title":{},"body":{"injectables/OwnerService.html":{}}}],["validateowner(ownerdto",{"_index":2585,"title":{},"body":{"injectables/OwnerService.html":{}}}],["validaterefreshtoken",{"_index":335,"title":{},"body":{"injectables/AdminJwtRefreshService.html":{},"injectables/OwnerJwtRefreshService.html":{},"injectables/UserJwtRefreshTokenService.html":{}}}],["validaterefreshtoken(adminrefreshtoken",{"_index":367,"title":{},"body":{"injectables/AdminJwtRefreshService.html":{}}}],["validaterefreshtoken(ownerrefreshtoken",{"_index":2475,"title":{},"body":{"injectables/OwnerJwtRefreshService.html":{}}}],["validaterefreshtoken(userrefreshtoken",{"_index":3279,"title":{},"body":{"injectables/UserJwtRefreshTokenService.html":{}}}],["validateuser",{"_index":2009,"title":{"interfaces/ValidateUser.html":{}},"body":{"interfaces/InitializeUser.html":{},"interfaces/RolecreationAttrbs.html":{},"interfaces/UserInterface.html":{},"interfaces/UserRefreshCreationAttrbs.html":{},"interfaces/UsercreationAttrbs.html":{},"injectables/UsersService.html":{},"interfaces/ValidateUser.html":{}}}],["validateuser(userdto",{"_index":3426,"title":{},"body":{"injectables/UsersService.html":{}}}],["validation",{"_index":2932,"title":{},"body":{"classes/RequestValidator.html":{}}}],["validationarguments",{"_index":2261,"title":{},"body":{"classes/MatchConstraint.html":{}}}],["validationerrortext",{"_index":2931,"title":{},"body":{"classes/RequestValidator.html":{}}}],["validationexception",{"_index":3484,"title":{"classes/ValidationException.html":{}},"body":{"injectables/ValidateDto.html":{},"classes/ValidationException.html":{}}}],["validationexception(messages",{"_index":3493,"title":{},"body":{"injectables/ValidateDto.html":{}}}],["validationoptions",{"_index":2264,"title":{},"body":{"classes/MatchConstraint.html":{},"miscellaneous/functions.html":{}}}],["validationpipe",{"_index":2818,"title":{},"body":{"controllers/ProductController.html":{}}}],["validationpipe())@useguards(jwtauthguard",{"_index":2781,"title":{},"body":{"controllers/ProductController.html":{}}}],["validator",{"_index":143,"title":{},"body":{"classes/AddRoleDto.html":{},"classes/BanUserDto.html":{},"classes/ChangeDto.html":{},"classes/CreateAccessTokenDto.html":{},"classes/CreateAdminDto.html":{},"classes/CreateAdminRefreshTokenDto.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateOwnerDto.html":{},"classes/CreateOwnerRefreshTokenDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateReviewDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserRefreshTokenDto.html":{},"classes/LoginDto.html":{},"classes/MatchConstraint.html":{},"classes/Nested.html":{},"classes/Nested-1.html":{},"classes/RequestValidator.html":{},"classes/ResetDto.html":{},"classes/SignupDto.html":{},"classes/UpdateCategoryDto.html":{},"classes/UpdateProductDto.html":{},"classes/UpdateUserDto.html":{},"injectables/ValidateDto.html":{},"dependencies.html":{}}}],["validator.pipe",{"_index":526,"title":{},"body":{"modules/AdminModule.html":{},"modules/AuthModule.html":{},"modules/ReviewsModule.html":{},"modules/UsersModule.html":{}}}],["validator.pipe.ts",{"_index":2918,"title":{},"body":{"classes/RequestValidator.html":{}}}],["validator.pipe.ts:6",{"_index":2919,"title":{},"body":{"classes/RequestValidator.html":{}}}],["validatorconstraint",{"_index":2265,"title":{},"body":{"classes/MatchConstraint.html":{}}}],["validatorconstraintinterface",{"_index":2258,"title":{},"body":{"classes/MatchConstraint.html":{}}}],["value",{"_index":126,"title":{},"body":{"classes/AddRoleDto.html":{},"guards/AdminGuard.html":{},"injectables/AdminJwtRefreshService.html":{},"injectables/AdminService.html":{},"classes/ApiError.html":{},"injectables/AppClusterService.html":{},"controllers/AppController.html":{},"classes/BadRequestError.html":{},"injectables/CategoriesService.html":{},"injectables/CorsMiddleware.html":{},"classes/CreateRoleDto.html":{},"classes/GarbageCollectingProcessor.html":{},"interfaces/InitializeUser.html":{},"injectables/MailService.html":{},"classes/MatchConstraint.html":{},"classes/NotFoundError.html":{},"guards/OwnerAdminGuard.html":{},"injectables/OwnerJwtRefreshService.html":{},"injectables/OwnerService.html":{},"classes/ParseFormDataJsonPipe.html":{},"injectables/ParseJsonPipe.html":{},"classes/RequestValidator.html":{},"injectables/ReviewsService.html":{},"classes/Role.html":{},"interfaces/RolecreationAttrbs.html":{},"controllers/RolesController.html":{},"guards/RolesGuard.html":{},"injectables/RolesService.html":{},"injectables/TasksService.html":{},"injectables/TelegramService.html":{},"guards/UserGuard.html":{},"interfaces/UserInterface.html":{},"interfaces/UserRefreshCreationAttrbs.html":{},"interfaces/UsercreationAttrbs.html":{},"injectables/UsersService.html":{},"injectables/ValidateDto.html":{},"interfaces/ValidateUser.html":{}}}],["value'})@isstring",{"_index":137,"title":{},"body":{"classes/AddRoleDto.html":{}}}],["value.nextdates().tojsdate",{"_index":3150,"title":{},"body":{"injectables/TasksService.html":{}}}],["value.obj",{"_index":1851,"title":{},"body":{"classes/CreateProductDto.html":{},"classes/Nested.html":{},"classes/Nested-1.html":{},"classes/UpdateProductDto.html":{}}}],["verbosememoryleak",{"_index":1671,"title":{},"body":{"modules/CoreModule.html":{}}}],["version",{"_index":3651,"title":{},"body":{"properties.html":{}}}],["void",{"_index":495,"title":{},"body":{"modules/AdminModule.html":{},"classes/AllExceptionsFilter.html":{},"classes/ApiErrorExceptionFilter.html":{},"classes/ApiException.html":{},"classes/ApiExceptionFilter.html":{},"injectables/AppClusterService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"modules/CategoriesModule.html":{},"injectables/FilesService.html":{},"classes/GarbageCollectingProcessor.html":{},"classes/HttpExceptionFilter.html":{},"classes/JwtRefreshTokenDeletedEvent.html":{},"injectables/LocationMiddleware.html":{},"controllers/ProductController.html":{},"modules/ProductModule.html":{},"modules/ReviewsModule.html":{},"modules/RolesModule.html":{},"injectables/TasksService.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"interfaces/fileCreated.html":{}}}],["watch",{"_index":3607,"title":{},"body":{"index.html":{}}}],["watchedproducts",{"_index":1141,"title":{"classes/WatchedProducts.html":{}},"body":{"modules/AppModule.html":{},"modules/ProductModule.html":{},"modules/UsersModule.html":{},"classes/WatchedProducts.html":{}}}],["website",{"_index":1778,"title":{},"body":{"classes/CreateAdminDto.html":{},"injectables/MailService.html":{},"injectables/OwnerService.html":{},"index.html":{}}}],["website'})@isboolean",{"_index":1748,"title":{},"body":{"classes/CreateAdminDto.html":{}}}],["website.guard.ts",{"_index":1894,"title":{},"body":{"guards/EditWebsiteGuard.html":{}}}],["website.guard.ts:15",{"_index":1895,"title":{},"body":{"guards/EditWebsiteGuard.html":{}}}],["website.guard.ts:18",{"_index":1896,"title":{},"body":{"guards/EditWebsiteGuard.html":{}}}],["weight:inherit!important",{"_index":2136,"title":{},"body":{"injectables/MailService.html":{}}}],["width:0",{"_index":2143,"title":{},"body":{"injectables/MailService.html":{}}}],["width:0!important",{"_index":2149,"title":{},"body":{"injectables/MailService.html":{}}}],["width:1%!important",{"_index":2230,"title":{},"body":{"injectables/MailService.html":{}}}],["width:100%!important",{"_index":2201,"title":{},"body":{"injectables/MailService.html":{}}}],["width:100%;}.externalclass,.externalclass",{"_index":2119,"title":{},"body":{"injectables/MailService.html":{}}}],["width:10px",{"_index":2196,"title":{},"body":{"injectables/MailService.html":{}}}],["width:15px",{"_index":2192,"title":{},"body":{"injectables/MailService.html":{}}}],["width:600px",{"_index":2157,"title":{},"body":{"injectables/MailService.html":{}}}],["width:600px!important",{"_index":2202,"title":{},"body":{"injectables/MailService.html":{}}}],["width:auto!important",{"_index":2222,"title":{},"body":{"injectables/MailService.html":{}}}],["wildcard",{"_index":1666,"title":{},"body":{"modules/CoreModule.html":{}}}],["win32",{"_index":593,"title":{},"body":{"classes/AdminRefreshToken.html":{},"classes/CreateAdminRefreshTokenDto.html":{},"classes/CreateOwnerDto.html":{},"classes/CreateOwnerRefreshTokenDto.html":{},"classes/Owner.html":{},"classes/OwnerRefreshToken.html":{},"injectables/UserJwtRefreshTokenService.html":{}}}],["windows",{"_index":590,"title":{},"body":{"classes/AdminRefreshToken.html":{},"classes/CreateAdminRefreshTokenDto.html":{},"classes/CreateOwnerDto.html":{},"classes/CreateOwnerRefreshTokenDto.html":{},"classes/Owner.html":{},"classes/OwnerRefreshToken.html":{},"injectables/UserJwtRefreshTokenService.html":{}}}],["worker",{"_index":973,"title":{},"body":{"injectables/AppClusterService.html":{},"interfaces/Msg.html":{}}}],["worker.disconnect",{"_index":1020,"title":{},"body":{"injectables/AppClusterService.html":{},"interfaces/Msg.html":{}}}],["worker.kill",{"_index":1022,"title":{},"body":{"injectables/AppClusterService.html":{},"interfaces/Msg.html":{}}}],["worker.on('disconnect",{"_index":1024,"title":{},"body":{"injectables/AppClusterService.html":{},"interfaces/Msg.html":{}}}],["worker.on('listening",{"_index":1017,"title":{},"body":{"injectables/AppClusterService.html":{},"interfaces/Msg.html":{}}}],["worker.process.pid",{"_index":992,"title":{},"body":{"injectables/AppClusterService.html":{},"interfaces/Msg.html":{}}}],["worker.send('shutdown",{"_index":1019,"title":{},"body":{"injectables/AppClusterService.html":{},"interfaces/Msg.html":{}}}],["working",{"_index":1180,"title":{},"body":{"modules/AppModule.html":{}}}],["world",{"_index":1077,"title":{},"body":{"controllers/AppController.html":{}}}],["writing",{"_index":1932,"title":{},"body":{"injectables/FilesService.html":{},"interfaces/fileCreated.html":{}}}],["x",{"_index":1697,"title":{},"body":{"injectables/CorsMiddleware.html":{},"interfaces/RequestHeaders.html":{}}}],["x32",{"_index":594,"title":{},"body":{"classes/AdminRefreshToken.html":{},"classes/CreateAdminRefreshTokenDto.html":{},"classes/CreateOwnerDto.html":{},"classes/CreateOwnerRefreshTokenDto.html":{},"classes/Owner.html":{},"classes/OwnerRefreshToken.html":{},"injectables/UserJwtRefreshTokenService.html":{}}}],["xl",{"_index":2703,"title":{},"body":{"classes/Product.html":{},"classes/Product-1.html":{}}}],["xs",{"_index":2702,"title":{},"body":{"classes/Product.html":{},"classes/Product-1.html":{}}}],["xxl",{"_index":2751,"title":{},"body":{"classes/Product-1.html":{}}}],["xxs",{"_index":2701,"title":{},"body":{"classes/Product.html":{},"classes/Product-1.html":{}}}],["yes",{"_index":874,"title":{},"body":{"classes/ApiError.html":{},"classes/ParseFormDataJsonPipe.html":{},"miscellaneous/functions.html":{}}}],["you'd",{"_index":3628,"title":{},"body":{"index.html":{}}}],["z",{"_index":1721,"title":{},"body":{"classes/CreateAccessTokenDto.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserRefreshTokenDto.html":{},"classes/LoginDto.html":{},"classes/ResetDto.html":{},"classes/SignupDto.html":{}}}],["z0",{"_index":1751,"title":{},"body":{"classes/CreateAdminDto.html":{},"classes/CreateAdminRefreshTokenDto.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateOwnerDto.html":{},"classes/CreateOwnerRefreshTokenDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateReviewDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUserDto.html":{},"classes/Nested.html":{},"classes/Nested-1.html":{},"classes/SignupDto.html":{},"classes/UpdateCategoryDto.html":{},"classes/UpdateProductDto.html":{},"classes/UpdateUserDto.html":{}}}],["z\\d@$!%*?&]{8",{"_index":1639,"title":{},"body":{"classes/ChangeDto.html":{},"classes/CreateUserDto.html":{},"classes/LoginDto.html":{},"classes/ResetDto.html":{},"classes/SignupDto.html":{}}}],["z])(?=.*[@#$%^&+=]).{6,64}$/gm",{"_index":1811,"title":{},"body":{"classes/CreateOwnerDto.html":{}}}],["z])(?=.*[a",{"_index":1636,"title":{},"body":{"classes/ChangeDto.html":{},"classes/CreateOwnerDto.html":{},"classes/CreateUserDto.html":{},"classes/LoginDto.html":{},"classes/ResetDto.html":{},"classes/SignupDto.html":{}}}],["z])(?=.*\\d)(?=.*[@$!%*?&])[a",{"_index":1637,"title":{},"body":{"classes/ChangeDto.html":{},"classes/CreateUserDto.html":{},"classes/LoginDto.html":{},"classes/ResetDto.html":{},"classes/SignupDto.html":{}}}],["z]+\\.[a",{"_index":1753,"title":{},"body":{"classes/CreateAdminDto.html":{},"classes/CreateAdminRefreshTokenDto.html":{},"classes/CreateOwnerDto.html":{},"classes/CreateOwnerRefreshTokenDto.html":{}}}],["z]{2",{"_index":1723,"title":{},"body":{"classes/CreateAccessTokenDto.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserRefreshTokenDto.html":{},"classes/LoginDto.html":{},"classes/ResetDto.html":{},"classes/SignupDto.html":{}}}],["z]{2,64",{"_index":1754,"title":{},"body":{"classes/CreateAdminDto.html":{},"classes/CreateAdminRefreshTokenDto.html":{},"classes/CreateOwnerDto.html":{},"classes/CreateOwnerRefreshTokenDto.html":{}}}],["za",{"_index":1638,"title":{},"body":{"classes/ChangeDto.html":{},"classes/CreateAccessTokenDto.html":{},"classes/CreateAdminDto.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateOwnerDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateReviewDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserRefreshTokenDto.html":{},"classes/LoginDto.html":{},"classes/Nested.html":{},"classes/Nested-1.html":{},"classes/ResetDto.html":{},"classes/SignupDto.html":{},"classes/UpdateCategoryDto.html":{},"classes/UpdateProductDto.html":{},"classes/UpdateUserDto.html":{}}}],["zoom",{"_index":484,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CartModule.html":{},"modules/CategoriesModule.html":{},"modules/CoreModule.html":{},"modules/MailModule.html":{},"modules/OrdersModule.html":{},"modules/OwnerModule.html":{},"modules/ProductModule.html":{},"modules/ReviewsModule.html":{},"modules/RolesModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["zžitisšte_",{"_index":1846,"title":{},"body":{"classes/CreateProductDto.html":{},"classes/CreateReviewDto.html":{},"classes/Nested.html":{},"classes/Nested-1.html":{},"classes/UpdateProductDto.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"injectables/ActivateMiddleware.html":{"url":"injectables/ActivateMiddleware.html","title":"injectable - ActivateMiddleware","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ActivateMiddleware\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/middlewares/activate.middleware.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                use\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(adminRepository, ownerRepository)\n                    \n                \n                        \n                            \n                                Defined in src/common/middlewares/activate.middleware.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        adminRepository\n                                                  \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        ownerRepository\n                                                  \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        use\n                        \n                    \n                \n            \n            \n                \n                    \n                    use(req: Request, res: Response, next: NextFunction)\n                \n            \n\n\n            \n                \n                    Defined in src/common/middlewares/activate.middleware.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                            NextFunction\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  BadRequestException,\n  HttpStatus,\n  Injectable,\n  NestMiddleware,\n  Next,\n  Req,\n  Res,\n  Scope,\n} from '@nestjs/common';\nimport { InjectModel } from '@nestjs/sequelize';\nimport { Request, Response, NextFunction } from 'express';\nimport { ACTIVTING_PARAMS_NOT_PROVIDED, INVALID_PARAMS } from '../../auth/auth.constants';\nimport { Admin } from '../../admin/models/admin.model';\nimport { Owner } from '../../owner/models/owner.model';\nimport { ApiException } from '../exceptions/api.exception';\n\n@Injectable({ scope: Scope.REQUEST })\nexport class ActivateMiddleware implements NestMiddleware {\n  constructor(\n    @InjectModel(Admin) private adminRepository: typeof Admin,\n    @InjectModel(Owner) private ownerRepository: typeof Owner,\n  ) {}\n  async use(\n    @Req() req: Request,\n    @Res() res: Response,\n    @Next() next: NextFunction,\n  ) {\n    try {\n      const activationLink: string = req.params?.link;\n      const code = Number(req.query?.code);\n      if (!activationLink || !code) {\n        throw new ApiException(HttpStatus.BAD_REQUEST, 'Bad request!', ACTIVTING_PARAMS_NOT_PROVIDED);\n      }\n      res.setHeader('X-Content-Type-Options', 'nosniff');\n      const owner = await this.ownerRepository.findOne({\n        where: {\n          resetToken: activationLink,\n        },\n      });\n      if (\n        owner &&\n        !owner.getIsActivated() &&\n        Number(Date.now()) \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/AddContentGuard.html":{"url":"guards/AddContentGuard.html","title":"guard - AddContentGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    AddContentGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/common/guards/add-content.guard.ts\n            \n\n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(adminService: AdminService)\n                    \n                \n                        \n                            \n                                Defined in src/common/guards/add-content.guard.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        adminService\n                                                  \n                                                        \n                                                                        AdminService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate(context: ExecutionContext)\n                \n            \n\n\n            \n                \n                    Defined in src/common/guards/add-content.guard.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                            ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     boolean | Promise | Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import {\n  CanActivate,\n  ExecutionContext,\n  ForbiddenException,\n  HttpStatus,\n  Injectable,\n  Scope,\n  UnauthorizedException,\n} from '@nestjs/common';\nimport { Observable } from 'rxjs';\nimport { INVALID_REQUEST, USER_NOT_DETECTED, NO_RIGHT } from '../../auth/auth.constants';\nimport { AdminService } from '../../admin/services/admin.service';\nimport { Payload } from '../../core/interfaces/auth.interfaces';\nimport { ApiException } from '../exceptions/api.exception';\n\n@Injectable({ scope: Scope.REQUEST })\nexport class AddContentGuard implements CanActivate {\n  constructor(private readonly adminService: AdminService) {}\n\n  canActivate(\n    context: ExecutionContext,\n  ): boolean | Promise | Observable {\n    return (async () => {\n      const req = context.switchToHttp().getRequest();\n      const payload: Payload = req?.payload;\n      const type: 'OWNER' | 'ADMIN' | null = req['type'];\n      if (!payload) {\n        throw new ApiException(HttpStatus.UNAUTHORIZED, 'Unathorized!', INVALID_REQUEST);\n      }\n      if (type === undefined) {\n         throw new ApiException(HttpStatus.UNAUTHORIZED, 'Unathorized!', USER_NOT_DETECTED);\n      }\n      if (type && type === 'OWNER') {\n        return true;\n      }\n      const admin = await this.adminService.getAdminById(payload.userId);\n      if (type && type === 'ADMIN' && admin.getAddContent()) {\n        return true;\n      }\n      throw new ApiException(HttpStatus.FORBIDDEN, 'Forbidden!', NO_RIGHT);\n    })();\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AddRoleDto.html":{"url":"classes/AddRoleDto.html","title":"class - AddRoleDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AddRoleDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/dto/add-role.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                userId\n                            \n                            \n                                    Readonly\n                                value\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        userId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: '1', description: 'unique identifier'})@IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/add-role.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        value\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'User role', description: 'some value'})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/add-role.dto.ts:7\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsNumber, IsString } from 'class-validator';\n\nexport class AddRoleDto {\n  @ApiProperty({ example: 'User role', description: 'some value' })\n  @IsString()\n  readonly value: string;\n\n  @ApiProperty({ example: '1', description: 'unique identifier' })\n  @IsNumber()\n  readonly userId: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AdminController.html":{"url":"controllers/AdminController.html","title":"controller - AdminController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AdminController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/admin/admin.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                admin\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createAdmin\n                            \n                            \n                                findAdmin\n                            \n                            \n                                getAllUsers\n                            \n                            \n                                updateAdmin\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        createAdmin\n                        \n                    \n                \n            \n            \n                \ncreateAdmin(adminDto: CreateAdminDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'Creating Admin'})@ApiResponse({status: 200, type: Admin})@Throttle(60, 700)@Roles('OWNER')@UseGuards(JwtAuthGuard, RolesGuard, OwnerAdminGuard, AuthFerfershGuard)@HttpCode(201)@Post('create_admin')\n                \n            \n\n            \n                \n                    Defined in src/admin/admin.controller.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    adminDto\n                                    \n                                                CreateAdminDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAdmin\n                        \n                    \n                \n            \n            \n                \nfindAdmin(v: string[], page: number, pageSize: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'Getting Admins'})@ApiResponse({status: 200, type: Admin})@Throttle(60, 700)@Roles('OWNER')@UseGuards(JwtAuthGuard, RolesGuard, OwnerAdminGuard, AuthFerfershGuard)@Get('find_admin')\n                \n            \n\n            \n                \n                    Defined in src/admin/admin.controller.ts:82\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    v\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    page\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    pageSize\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAllUsers\n                        \n                    \n                \n            \n            \n                \ngetAllUsers(page: number, pageSize: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'Getting Admins'})@ApiResponse({status: 200, type: undefined})@Throttle(60, 700)@Roles('OWNER')@UseGuards(JwtAuthGuard, RolesGuard, OwnerAdminGuard, AuthFerfershGuard)@Get('get_admins')\n                \n            \n\n            \n                \n                    Defined in src/admin/admin.controller.ts:97\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    page\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    pageSize\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateAdmin\n                        \n                    \n                \n            \n            \n                \nupdateAdmin(adminDto: CreateAdminDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'Updating Admin'})@ApiResponse({status: 202, type: Admin})@Throttle(70, 700)@Roles('OWNER')@UseGuards(JwtAuthGuard, RolesGuard, OwnerAdminGuard, AuthFerfershGuard)@HttpCode(202)@Patch('update_admin')\n                \n            \n\n            \n                \n                    Defined in src/admin/admin.controller.ts:69\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    adminDto\n                                    \n                                                CreateAdminDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Get,\n  Post,\n  Body,\n  UseGuards,\n  ClassSerializerInterceptor,\n  UseInterceptors,\n  HttpCode,\n  Query,\n  ParseIntPipe,\n  Patch,\n  UseFilters,\n} from '@nestjs/common';\nimport {\n  ApiBearerAuth,\n  ApiOperation,\n  ApiResponse,\n  ApiTags,\n} from '@nestjs/swagger';\nimport { JwtAuthGuard } from '../common/guards/jwt-auth.guard';\nimport { CreateAdminDto } from './dto/create-admin.dto';\nimport { Admin } from './models/admin.model';\nimport { AdminService } from './services/admin.service';\nimport { ValidateDto } from '../common/pipes/validation.pipe';\nimport { AdminInterface } from '../core/interfaces/admin.interfaces';\nimport { ThrottlerBehindProxyGuard } from '../common/guards/throttler-behind-proxy.guard';\nimport { Roles } from '../common/decorators/roles-auth.decorator';\nimport { RolesGuard } from '../common/guards/roles.guard';\nimport { OwnerAdminGuard } from '../common/guards/owner-admin.guard';\nimport { AuthFerfershGuard } from '../common/guards/jw-refresh.guard';\nimport { Throttle } from '@nestjs/throttler';\nimport { User } from '../users/models/user.model';\nimport { ParseArrayPipe } from '@nestjs/common/pipes';\nimport { ApiErrorExceptionFilter } from '../common/filters/error-handler.filter';\nimport { ApiExceptionFilter } from '../common/filters/api-exception.filter';\n\n@UseGuards(ThrottlerBehindProxyGuard)\n@UseFilters(ApiErrorExceptionFilter, ApiExceptionFilter)\n@UseInterceptors(ClassSerializerInterceptor)\n@ApiTags('admin')\n@ApiBearerAuth('JWT-auth')\n@Controller('admin')\nexport class AdminController {\n  constructor(private readonly adminService: AdminService) {}\n\n  // tslint:disable-next-line: promise-function-async\n  @ApiOperation({ summary: 'Creating Admin' })\n  @ApiResponse({ status: 200, type: Admin })\n  @Throttle(60, 700)\n  @Roles('OWNER')\n  @UseGuards(JwtAuthGuard, RolesGuard, OwnerAdminGuard, AuthFerfershGuard)\n  @HttpCode(201)\n  @Post('create_admin')\n  createAdmin(\n    @Body(new ValidateDto()) adminDto: CreateAdminDto,\n  ): Promise {\n    return this.adminService.createAdmin(adminDto);\n  }\n\n  // tslint:disable-next-line: promise-function-async\n  @ApiOperation({ summary: 'Updating Admin' })\n  @ApiResponse({ status: 202, type: Admin })\n  @Throttle(70, 700)\n  @Roles('OWNER')\n  @UseGuards(JwtAuthGuard, RolesGuard, OwnerAdminGuard, AuthFerfershGuard)\n  @HttpCode(202)\n  @Patch('update_admin')\n  updateAdmin(\n    @Body(new ValidateDto()) adminDto: CreateAdminDto,\n  ): Promise {\n    return this.adminService.updateAdmin(adminDto);\n  }\n\n  // tslint:disable-next-line: promise-function-async\n  @ApiOperation({ summary: 'Getting Admins' })\n  @ApiResponse({ status: 200, type: Admin })\n  @Throttle(60, 700)\n  @Roles('OWNER')\n  @UseGuards(JwtAuthGuard, RolesGuard, OwnerAdminGuard, AuthFerfershGuard)\n  @Get('find_admin')\n  findAdmin(\n    @Query('v', ParseArrayPipe) v: string[],\n    @Query('page', ParseIntPipe) page: number,\n    @Query('pageSize', ParseIntPipe) pageSize: number,\n  ): Promise {\n    return this.adminService.findAdmin(v, page, pageSize);\n  }\n\n  // tslint:disable-next-line: promise-function-async\n  @ApiOperation({ summary: 'Getting Admins' })\n  @ApiResponse({ status: 200, type: [Admin] })\n  @Throttle(60, 700)\n  @Roles('OWNER')\n  @UseGuards(JwtAuthGuard, RolesGuard, OwnerAdminGuard, AuthFerfershGuard)\n  @Get('get_admins')\n  getAllUsers(\n    @Query('page', ParseIntPipe) page: number,\n    @Query('pageSize', ParseIntPipe) pageSize: number,\n  ): Promise {\n    return this.adminService.getAllAdmins(page, pageSize);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/AdminGuard.html":{"url":"guards/AdminGuard.html","title":"guard - AdminGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    AdminGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/common/guards/admin.guard.ts\n            \n\n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(adminJwtRefreshTokenService: AdminJwtRefreshService, reflector: Reflector, authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/common/guards/admin.guard.ts:20\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        adminJwtRefreshTokenService\n                                                  \n                                                        \n                                                                        AdminJwtRefreshService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        reflector\n                                                  \n                                                        \n                                                                    Reflector\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate(context: ExecutionContext)\n                \n            \n\n\n            \n                \n                    Defined in src/common/guards/admin.guard.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                            ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     boolean | Promise | Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import {\n  CanActivate,\n  ExecutionContext,\n  HttpStatus,\n  Injectable,\n  Scope,\n} from '@nestjs/common';\nimport { Observable } from 'rxjs';\nimport { Payload } from '../../core/interfaces/auth.interfaces';\nimport { REFRESH_TOKEN_NOT_PROVIDED, USER_NOT_AUTHORIZIED } from '../../auth/auth.constants';\nimport { AdminJwtRefreshService } from '../../admin/services/jwt-refresh.service';\nimport { AdminRefreshToken } from '../../admin/models/admin.refresh.token.model';\nimport { Reflector } from '@nestjs/core';\nimport { ROLES_KEY } from '../decorators/roles-auth.decorator';\nimport { AuthService } from '../../auth/auth.service';\nimport { ApiException } from '../exceptions/api.exception';\nimport { ACCESS_DENIED } from '../../admin/constants/admin.constants';\n\n@Injectable({ scope: Scope.REQUEST })\nexport class AdminGuard implements CanActivate {\n  constructor(\n    private readonly adminJwtRefreshTokenService: AdminJwtRefreshService,\n    private reflector: Reflector,\n    private authService: AuthService,\n  ) {}\n\n  canActivate(\n    context: ExecutionContext,\n  ): boolean | Promise | Observable {\n    return (async () => {\n      const requiredRoles: string[] = this.reflector.getAllAndOverride(\n        ROLES_KEY,\n        [context.getHandler(), context.getClass()],\n      );\n      if (!requiredRoles) {\n        return true;\n      }\n      const req = context.switchToHttp().getRequest();\n      const refreshToken = req?.cookies['refreshToken'];\n      if (!refreshToken) {\n        throw new ApiException(HttpStatus.BAD_REQUEST, 'Bad request!', REFRESH_TOKEN_NOT_PROVIDED);\n      }\n      const decodedToken = Buffer.from(refreshToken, 'base64').toString(\n        'ascii',\n      );\n      const userRefreshToken = await this.adminJwtRefreshTokenService.findToken(\n        decodedToken,\n      );\n      if (!userRefreshToken) {\n        throw new ApiException(HttpStatus.UNAUTHORIZED, 'Unathorized!', USER_NOT_AUTHORIZIED);\n      }\n      const payload: Payload = req?.payload;\n      if (!payload) {\n        throw new ApiException(HttpStatus.UNAUTHORIZED, 'Unathorized!', USER_NOT_AUTHORIZIED);\n      }\n      if (\n        userRefreshToken instanceof AdminRefreshToken &&\n        payload.userId !== userRefreshToken.adminId\n      ) {\n        throw new ApiException(HttpStatus.UNAUTHORIZED, 'Unathorized!', USER_NOT_AUTHORIZIED);\n      }\n      const refreshPayload =\n        await this.adminJwtRefreshTokenService.validateRefreshToken(\n          decodedToken,\n        );\n      if (\n          !refreshPayload.roles.some(\n          (role: { value: string; description: string }) =>\n            requiredRoles.includes(role.value))\n        ) {\n          throw new ApiException(HttpStatus.UNAUTHORIZED, 'Unathorized!', ACCESS_DENIED);\n      }\n      return true;\n    })();\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AdminInterface.html":{"url":"interfaces/AdminInterface.html","title":"interface - AdminInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  AdminInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/interfaces/admin.interfaces.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            addContent\n                                        \n                                \n                                \n                                        \n                                            editContent\n                                        \n                                \n                                \n                                        \n                                            editWebsite\n                                        \n                                \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            phoneNumber\n                                        \n                                \n                                \n                                        \n                                            surname\n                                        \n                                \n                                \n                                        \n                                            userId\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        addContent\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        addContent:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        editContent\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        editContent:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        editWebsite\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        editWebsite:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        phoneNumber\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        phoneNumber:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        surname\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        surname:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        userId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        userId:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface AdminRefreshTokenCreationAttrbs {\n  email: string;\n  adminId: number;\n  adminRefreshToken: string;\n  adminAgent: string;\n  phoneNumber: string;\n}\n\nexport interface AdmincreationAttrbs {\n  name: string;\n  surname: string;\n  email: string;\n  phoneNumber: string;\n  password: string;\n  activationLink: string;\n}\n\nexport interface AdminInterface {\n  id: number;\n  name: string;\n  surname: string;\n  email: string;\n  phoneNumber: string;\n  userId: number;\n  addContent: boolean;\n  editContent: boolean;\n  editWebsite: boolean;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AdminJwtRefreshService.html":{"url":"injectables/AdminJwtRefreshService.html","title":"injectable - AdminJwtRefreshService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AdminJwtRefreshService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/admin/services/jwt-refresh.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                Logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                findToken\n                            \n                            \n                                    Async\n                                findTokenByParams\n                            \n                            \n                                    Async\n                                findTokenByToken\n                            \n                            \n                                    Private\n                                generateActivationCode\n                            \n                            \n                                    Private\n                                    Async\n                                generateEncryptedValue\n                            \n                            \n                                    Async\n                                generateRefreshToken\n                            \n                            \n                                    Async\n                                insertToken\n                            \n                            \n                                    Async\n                                removeToken\n                            \n                            \n                                    Async\n                                removeTokenInTime\n                            \n                            \n                                    Async\n                                saveToken\n                            \n                            \n                                    Async\n                                validateRefreshToken\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(jwtService: JwtService, adminService: AdminService, sheduleService: TasksService, mailService: MailService, adminRefreshTokenRepository)\n                    \n                \n                        \n                            \n                                Defined in src/admin/services/jwt-refresh.service.ts:30\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        jwtService\n                                                  \n                                                        \n                                                                    JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        adminService\n                                                  \n                                                        \n                                                                        AdminService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        sheduleService\n                                                  \n                                                        \n                                                                        TasksService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        mailService\n                                                  \n                                                        \n                                                                        MailService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        adminRefreshTokenRepository\n                                                  \n                                                        \n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findToken\n                        \n                    \n                \n            \n            \n                \n                    \n                    findToken(adminRefreshToken: string)\n                \n            \n\n\n            \n                \n                    Defined in src/admin/services/jwt-refresh.service.ts:204\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    adminRefreshToken\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findTokenByParams\n                        \n                    \n                \n            \n            \n                \n                    \n                    findTokenByParams(email: string, phoneNumber: string, identifier: string)\n                \n            \n\n\n            \n                \n                    Defined in src/admin/services/jwt-refresh.service.ts:232\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    phoneNumber\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    identifier\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findTokenByToken\n                        \n                    \n                \n            \n            \n                \n                    \n                    findTokenByToken(adminRefreshToken: string, identifier: string)\n                \n            \n\n\n            \n                \n                    Defined in src/admin/services/jwt-refresh.service.ts:219\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    adminRefreshToken\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    identifier\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        generateActivationCode\n                        \n                    \n                \n            \n            \n                \n                    \n                    generateActivationCode()\n                \n            \n\n\n            \n                \n                    Defined in src/admin/services/jwt-refresh.service.ts:284\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         number\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Async\n                        generateEncryptedValue\n                        \n                    \n                \n            \n            \n                \n                    \n                    generateEncryptedValue(value: string, bytes: number)\n                \n            \n\n\n            \n                \n                    Defined in src/admin/services/jwt-refresh.service.ts:271\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    bytes\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        generateRefreshToken\n                        \n                    \n                \n            \n            \n                \n                    \n                    generateRefreshToken(payload: CreateAdminRefreshTokenDto)\n                \n            \n\n\n            \n                \n                    Defined in src/admin/services/jwt-refresh.service.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    payload\n                                    \n                                                CreateAdminRefreshTokenDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        insertToken\n                        \n                    \n                \n            \n            \n                \n                    \n                    insertToken(adminId: number, adminRefreshToken: string, email: string, adminAgent: string, phoneNumber: string, expireDate: Date)\n                \n            \n\n\n            \n                \n                    Defined in src/admin/services/jwt-refresh.service.ts:73\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    adminId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    adminRefreshToken\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    adminAgent\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    phoneNumber\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    expireDate\n                                    \n                                                Date\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        removeToken\n                        \n                    \n                \n            \n            \n                \n                    \n                    removeToken(adminRefreshToken: string)\n                \n            \n\n\n            \n                \n                    Defined in src/admin/services/jwt-refresh.service.ts:182\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    adminRefreshToken\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        removeTokenInTime\n                        \n                    \n                \n            \n            \n                \n                    \n                    removeTokenInTime(adminRefreshTokenId: number, identifier: string)\n                \n            \n\n\n            \n                \n                    Defined in src/admin/services/jwt-refresh.service.ts:246\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    adminRefreshTokenId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    identifier\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        saveToken\n                        \n                    \n                \n            \n            \n                \n                    \n                    saveToken(adminId: number, adminRefreshToken: string, email: string, adminAgent: string, phoneNumber: string, expireDate: Date, identifier: string)\n                \n            \n\n\n            \n                \n                    Defined in src/admin/services/jwt-refresh.service.ts:116\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    adminId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    adminRefreshToken\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    adminAgent\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    phoneNumber\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    expireDate\n                                    \n                                                Date\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    identifier\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        validateRefreshToken\n                        \n                    \n                \n            \n            \n                \n                    \n                    validateRefreshToken(adminRefreshToken: string)\n                \n            \n\n\n            \n                \n                    Defined in src/admin/services/jwt-refresh.service.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    adminRefreshToken\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        Logger\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Logger(AdminJwtRefreshService.name)\n                    \n                \n                    \n                        \n                                Defined in src/admin/services/jwt-refresh.service.ts:30\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import {\n  HttpStatus,\n  Injectable,\n  Logger,\n  Scope,\n} from '@nestjs/common';\nimport { JwtService } from '@nestjs/jwt';\nimport {\n  TOKEN_INVALID,\n  TOKEN_NOT_FOUND,\n  ADMIN_NOT_FOUND,\n  ERROR_WHILE_REMOVING_TOKEN,\n  ERROR_WHILE_SAVING_TOKEN,\n  ERROR_WHILE_VALIDATING_TOKEN,\n  ERROR_WHILE_SIGNING_TOKEN,\n} from '../constants/jwt-refresh.constants';\nimport { AdminRefreshToken } from '../models/admin.refresh.token.model';\nimport { AdminService } from './admin.service';\nimport { CreateAdminRefreshTokenDto } from '../dto/create-admin-refresh-token.dto';\nimport { MailService } from '../../mail/mail.service';\nimport { InjectModel } from '@nestjs/sequelize';\nimport { TasksService } from '../../core/services/scedule.service';\nimport { ApiException } from '../../common/exceptions/api.exception';\nimport { randomBytes, scrypt, createCipheriv } from 'crypto';\nimport { promisify } from 'util';\nimport { v4 } from 'uuid';\n\n@Injectable({ scope: Scope.TRANSIENT })\nexport class AdminJwtRefreshService {\n  private readonly Logger = new Logger(AdminJwtRefreshService.name);\n  constructor(\n    private jwtService: JwtService,\n    private adminService: AdminService,\n    private sheduleService: TasksService,\n    private mailService: MailService,\n    @InjectModel(AdminRefreshToken)\n    private readonly adminRefreshTokenRepository: typeof AdminRefreshToken,\n  ) {}\n\n  async generateRefreshToken(\n    payload: CreateAdminRefreshTokenDto,\n  ): Promise {\n    try {\n      const adminRefreshToken = this.jwtService.sign(payload);\n      return adminRefreshToken;\n    } catch (err) {\n      throw new ApiException(\n        HttpStatus.INTERNAL_SERVER_ERROR,\n        'Internal Server Error',\n        ERROR_WHILE_SIGNING_TOKEN\n      );   \n    }\n  }\n\n  async validateRefreshToken(\n    adminRefreshToken: string,\n  ): Promise {\n    try {\n      const adminData = this.jwtService.verify(adminRefreshToken);\n      if (!adminData) {\n        throw new ApiException(HttpStatus.BAD_REQUEST, 'Bad request', TOKEN_INVALID);\n      }\n      return adminData;\n    } catch (err: unknown) {\n      throw new ApiException(\n        HttpStatus.INTERNAL_SERVER_ERROR,\n        'Internal Server Error',\n        ERROR_WHILE_VALIDATING_TOKEN\n      );   \n    }\n  }\n\n  async insertToken(\n    adminId: number,\n    adminRefreshToken: string,\n    email: string,\n    adminAgent: string,\n    phoneNumber: string,\n    expireDate: Date,\n  ) {\n    try{\n      const admin = await this.adminService.getAdminById(adminId);\n        if (!admin) {\n          throw new ApiException(HttpStatus.NOT_FOUND, 'Not found!', ADMIN_NOT_FOUND);\n      }\n      const token = await this.adminRefreshTokenRepository.create({\n        adminRefreshToken: adminRefreshToken,\n        adminId: admin.id,\n        email: email,\n        adminAgent: adminAgent,\n        phoneNumber: phoneNumber,\n      });\n      token.setIdentifier(v4());\n      await token.save();\n      if (!token.getExpireDate()) {\n        token.setExpireDate(expireDate);\n        await token.save(); \n      }\n      if (!admin.getAdminRefreshTokens() || admin.getAdminRefreshTokens().length === 0) {\n        admin.$set('adminRefreshTokens', token.id);\n        admin.adminRefreshTokens = [token];\n      } else {\n        admin.$add('adminRefreshTokens', token.id);\n      }\n      await admin.save();\n      return token;\n    } catch (err: unknown) {\n      throw new ApiException(\n        HttpStatus.INTERNAL_SERVER_ERROR,\n        'Internal Server Error',\n        ERROR_WHILE_SAVING_TOKEN\n      );   \n    }\n  }\n\n  async saveToken(\n    adminId: number,\n    adminRefreshToken: string,\n    email: string,\n    adminAgent: string,\n    phoneNumber: string,\n    expireDate: Date,\n    identifier: string,\n  ): Promise {\n    try {\n      const admin = await this.adminService.getAdminById(adminId);\n      if (!admin) {\n        throw new ApiException(HttpStatus.NOT_FOUND, 'Not found!', ADMIN_NOT_FOUND);\n      }\n      const tokenData = await this.adminRefreshTokenRepository.findOne({\n        where: {\n          adminId: adminId,\n          identifier: identifier,\n        },\n      });\n      if (tokenData && admin.getAdminAgent() === 'null') {\n        admin.setAdminAgent(adminAgent);\n        tokenData.setAdminAgent(adminAgent); \n        await admin.save();\n        await tokenData.save(); \n      }\n      if (tokenData) {\n        tokenData.adminRefreshToken = adminRefreshToken;\n        if (admin.getAdminAgent() && admin.getAdminAgent().trim() !== adminAgent) {\n          admin.setIsActivated(false);\n          const link = await this.generateEncryptedValue('ADMIN', 16);\n          const code = this.generateActivationCode();\n          admin.setResetToken(link.replace('/', `${v4()}`).replace('=', `${v4()}`));\n          admin.setActivationCode(code);\n          admin.setResetTokenExpiration(Number(Date.now() + 3600000));\n          await admin.save();\n          this.Logger.log(`checking owner with email ${admin.email}`, admin.getAdminAgent() !== adminAgent);\n          this.mailService.sendActivationMailToAdmin(\n            admin.email,\n            `${process.env.API_URL}/auth/activate/${admin.getResetToken().trim()}?code=${code}`,\n          );\n        }\n        await tokenData.save();\n        return tokenData;\n      }\n      const token = await this.adminRefreshTokenRepository.create({\n        adminRefreshToken: adminRefreshToken,\n        adminId: adminId,\n        email: email,\n        adminAgent: adminAgent,\n        phoneNumber: phoneNumber,\n      });\n      if (!token.getExpireDate()) {\n        token.setExpireDate(expireDate);\n        await token.save(); \n      }\n      return token;\n    } catch (err: unknown) {\n      throw new ApiException(\n        HttpStatus.INTERNAL_SERVER_ERROR,\n        'Internal Server Error',\n        ERROR_WHILE_SAVING_TOKEN\n      );   \n    }\n  }\n\n  async removeToken(adminRefreshToken: string): Promise {\n    try {\n      const token = await this.findToken(adminRefreshToken);\n      if (!token) {\n        throw new ApiException(HttpStatus.NOT_FOUND, 'Not found!', TOKEN_NOT_FOUND);   \n      }\n      const admin = await this.adminService.getAdminById(token.adminId);\n      admin.$remove('adminRefreshTokens', token.token.id);\n      await admin.save();\n      const tokenData = await this.adminRefreshTokenRepository.destroy({\n        where: { adminRefreshToken: adminRefreshToken },\n      });\n      return tokenData;\n    } catch (err: unknown) {\n      throw new ApiException(\n        HttpStatus.INTERNAL_SERVER_ERROR,\n        'Internal Server Error',\n        ERROR_WHILE_REMOVING_TOKEN\n      );   \n    }\n  }\n\n  async findToken(\n    adminRefreshToken: string,\n  ): Promise {\n    const token = await this.adminRefreshTokenRepository.findOne({\n      where: { adminRefreshToken: adminRefreshToken },\n    });\n    if (!token) {\n      return false;\n    }\n    return { token: token, adminId: token.adminId };\n  }\n\n  async findTokenByToken(\n    adminRefreshToken: string,\n    identifier: string,\n  ): Promise {\n    const token = await this.adminRefreshTokenRepository.findOne({\n      where: { adminRefreshToken: adminRefreshToken, identifier: identifier },\n    });\n    if (!token) {\n      throw new ApiException(HttpStatus.NOT_FOUND, 'Not found!', TOKEN_NOT_FOUND);   \n    }\n    return token;\n  }\n\n  async findTokenByParams(\n    email: string,\n    phoneNumber: string,\n    identifier: string,\n  ): Promise {\n    const token = await this.adminRefreshTokenRepository.findOne({\n      where: { email: email, phoneNumber: phoneNumber, identifier: identifier },\n    });\n    if (!token) {\n      throw new ApiException(HttpStatus.BAD_REQUEST, 'Bad request', TOKEN_INVALID);\n    }\n    return token;\n  }\n\n  async removeTokenInTime(\n    adminRefreshTokenId: number,\n    identifier: string,\n  ): Promise {\n    const token = await AdminRefreshToken.findOne({\n      where: {\n        id: adminRefreshTokenId,\n        identifier: identifier,\n      }\n    });\n    if (!token) {\n      return false;\n    }\n    const admin = await this.adminService.getAdminById(token.adminId);\n    admin.$remove('adminRefreshTokens', token.id);\n    await admin.save();\n    return this.adminRefreshTokenRepository.destroy({\n      where: {\n        id: token.id,\n        phoneNumber: token.phoneNumber,\n        identifier: identifier,\n      },\n    });\n  }\n\n  private async generateEncryptedValue(\n    value: string,\n    bytes: number,\n  ): Promise {\n    const iv = randomBytes(bytes);\n    const API_KEY = process.env.API_KEY.toString();\n    const key = (await promisify(scrypt)(API_KEY, 'salt', 32)) as Buffer;\n    const cipher = createCipheriv('aes-256-ctr', key, iv);\n    return Buffer.concat([cipher.update(value), cipher.final()]).toString(\n      'base64',\n    );\n  }\n\n  private generateActivationCode(): number {\n    const confirmCode = Number(('' + Math.random()).substring(2, 10));\n    return confirmCode;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AdminModule.html":{"url":"modules/AdminModule.html","title":"module - AdminModule","body":"\n                   \n\n\n\n\n    Modules\n    AdminModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AdminModule\n\n\n\ncluster_AdminModule_exports\n\n\n\ncluster_AdminModule_providers\n\n\n\n\nAdminJwtRefreshService \n\nAdminJwtRefreshService \n\n\n\nAdminService \n\nAdminService \n\n\n\nAdminModule\n\nAdminModule\n\nAdminJwtRefreshService  -->\n\nAdminModule->AdminJwtRefreshService \n\n\n\nAdminService  -->\n\nAdminModule->AdminService \n\n\n\n\n\nAdminJwtRefreshService\n\nAdminJwtRefreshService\n\nAdminModule -->\n\nAdminJwtRefreshService->AdminModule\n\n\n\n\n\nAdminService\n\nAdminService\n\nAdminModule -->\n\nAdminService->AdminModule\n\n\n\nAdminModule -->\n\nAdminService->AdminModule\n\n\n\n\n\nMailService\n\nMailService\n\nAdminModule -->\n\nMailService->AdminModule\n\n\n\n\n\nOwnerService\n\nOwnerService\n\nAdminModule -->\n\nOwnerService->AdminModule\n\n\n\n\n\nTasksService\n\nTasksService\n\nAdminModule -->\n\nTasksService->AdminModule\n\n\n\n\n\nUsersService\n\nUsersService\n\nAdminModule -->\n\nUsersService->AdminModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/admin/admin.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AdminJwtRefreshService\n                        \n                        \n                            AdminService\n                        \n                        \n                            AdminService\n                        \n                        \n                            MailService\n                        \n                        \n                            OwnerService\n                        \n                        \n                            TasksService\n                        \n                        \n                            UsersService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AdminController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AdminJwtRefreshService\n                        \n                        \n                            AdminService\n                        \n                    \n                \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        configure\n                        \n                    \n                \n            \n            \n                \nconfigure(consumer: MiddlewareConsumer)\n                \n            \n\n\n            \n                \n                    Defined in src/admin/admin.module.ts:95\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    consumer\n                                    \n                                            MiddlewareConsumer\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        import {\n  forwardRef,\n  MiddlewareConsumer,\n  Module,\n  NestModule,\n  RequestMethod,\n} from '@nestjs/common';\nimport { AdminController } from './admin.controller';\nimport { AdminService } from './services/admin.service';\nimport { SequelizeModule } from '@nestjs/sequelize';\nimport { Admin } from './models/admin.model';\nimport { AuthModule } from '../auth/auth.module';\nimport { JwtModule } from '@nestjs/jwt';\nimport { AdminRefreshToken } from './models/admin.refresh.token.model';\nimport { AdminJwtRefreshService } from './services/jwt-refresh.service';\nimport { OwnerModule } from '../owner/owner.module';\nimport { MailService } from '../mail/mail.service';\nimport { InitializeUserMiddleware } from '../common/middlewares/initialize-user.middleware';\nimport { OwnerService } from '../owner/services/owner.service';\nimport { Owner } from '../owner/models/owner.model';\nimport { Role } from '../roles/models/roles.model';\nimport { UserRoles } from '../roles/models/user.roles.model';\nimport { RolesModule } from '../roles/roles.module';\nimport { OwnerRefreshToken } from '../owner/models/owner.refresh.token.model';\nimport { UsersModule } from '../users/users.module';\nimport { User } from '../users/models/user.model';\nimport { UserRefreshToken } from '../users/models/user.refresh.token.model';\nimport { UserAdminMiddleware } from '../common/middlewares/user-admin.middleware';\nimport RequestValidator from '../common/pipes/body-validator.pipe';\nimport { CreateAdminDto } from './dto/create-admin.dto';\nimport { ConfigModule } from '@nestjs/config';\nimport { AdminUserMiddleware } from '../common/middlewares/admin-user.middleware';\nimport { CoreModule } from '../core/core.module';\nimport { TasksService } from '../core/services/scedule.service';\nimport { CartProduct } from '../cart/models/cart.product.model';\nimport { Cart } from '../cart/models/cart.model';\nimport { Category } from '../categories/models/category.model';\nimport { ProductCategories } from '../categories/models/product.categories.model';\nimport { Order } from '../orders/models/order.model';\nimport { OrderProduct } from '../orders/models/order.product.model';\nimport { Product } from '../product/models/product.model';\nimport { UsersService } from '../users/services/users.service';\n@Module({\n  controllers: [AdminController],\n  imports: [\n    ConfigModule.forRoot({\n      envFilePath: `.${process.env.NODE_ENV}.env`,\n      expandVariables: true,\n      isGlobal: true,\n    }),\n    SequelizeModule.forFeature([\n      Product,\n      Order,\n      OrderProduct,\n      Category,\n      ProductCategories,\n      Admin,\n      AdminRefreshToken,\n      Owner,\n      OwnerRefreshToken,\n      User,\n      UserRefreshToken,\n      Role,\n      UserRoles,\n      Cart,\n      CartProduct,\n    ]),\n    JwtModule.register({\n      secret:\n        process.env.JWT_REFRESH_ADMIN_SECRET.toString().trim() ||\n        'knfdljhtop6hohjlymhnhgnljjukfty6yujhjbjlvcglkidrtujhtrfujuj',\n      signOptions: {\n        expiresIn: 172800000,\n      },\n    }),\n    forwardRef(() => CoreModule),\n    forwardRef(() => AdminModule),\n    forwardRef(() => RolesModule),\n    forwardRef(() => AuthModule),\n    forwardRef(() => OwnerModule),\n    forwardRef(() => UsersModule),\n  ],\n  providers: [\n    TasksService,\n    AdminService,\n    AdminJwtRefreshService,\n    MailService,\n    OwnerService,\n    AdminService,\n    UsersService,\n  ],\n  exports: [AdminService, AdminJwtRefreshService],\n})\nexport class AdminModule implements NestModule {\n  configure(consumer: MiddlewareConsumer) {\n    consumer\n      .apply(InitializeUserMiddleware)\n      .forRoutes(\n        { path: 'admin/get_admins', method: RequestMethod.GET },\n        { path: 'admin/find_admin', method: RequestMethod.GET },\n        { path: 'admin/create_admin', method: RequestMethod.POST },\n        { path: 'admin/update_admin', method: RequestMethod.PATCH },\n      );\n    consumer\n      .apply(UserAdminMiddleware)\n      .forRoutes({ path: 'admin/create_admin', method: RequestMethod.POST });\n    consumer\n      .apply(RequestValidator.validate(CreateAdminDto))\n      .forRoutes({ path: 'admin/create_admin', method: RequestMethod.POST });\n    consumer\n      .apply(AdminUserMiddleware)\n      .forRoutes({ path: 'admin/update_admin', method: RequestMethod.PATCH });\n    consumer\n      .apply(RequestValidator.validate(CreateAdminDto))\n      .forRoutes({ path: 'admin/update_admin', method: RequestMethod.PATCH });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AdminRefreshToken.html":{"url":"classes/AdminRefreshToken.html","title":"class - AdminRefreshToken","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AdminRefreshToken\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/admin/models/admin.refresh.token.model.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    Model\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                admin\n                            \n                            \n                                    Private\n                                adminAgent\n                            \n                            \n                                    Public\n                                adminId\n                            \n                            \n                                    Public\n                                adminRefreshToken\n                            \n                            \n                                    Public\n                                email\n                            \n                            \n                                    Private\n                                expireDate\n                            \n                            \n                                    Public\n                                id\n                            \n                            \n                                    Public\n                                identifier\n                            \n                            \n                                    Public\n                                phoneNumber\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getAdmin\n                            \n                            \n                                getAdminAgent\n                            \n                            \n                                getExpireDate\n                            \n                            \n                                getIdentifier\n                            \n                            \n                                setAdminAgent\n                            \n                            \n                                setExpireDate\n                            \n                            \n                                setIdentifier\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        admin\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Admin\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @BelongsTo(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/admin/models/admin.refresh.token.model.ts:107\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        adminAgent\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'Mozilla/5.0 (Windows NT 7.0; Win32; x32) AppleWebKit/523.34 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/523.34', description: 'admin`s agent'})@Column({type: undefined, unique: false, allowNull: false, field: 'userAgent'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/admin/models/admin.refresh.token.model.ts:84\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        adminId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: '1', description: 'adminId'})@ForeignKey(undefined)@Column({type: undefined, field: 'adminId', unique: false, allowNull: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/admin/models/admin.refresh.token.model.ts:70\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        adminRefreshToken\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'eyJhbGciOiJrdyIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjEsImlzQWN0aXZhdGVkIjpmYWxzZSwiZW1haWwiOiJ1c2VyQGdtYWlsLmNvbSIsInJvbGVzIjpbeyJpZCI6MSwidmFsdWUiOiJVU0VSIiwiZGVzY3JpcHRpb24iOiJzaW1wbGUgdXNlciIsInJpZ2h0MSI6ZmFsc2UsInJpZ2h0MiI6ZmFsc2UsImNyZWF0ZWRBdCI6IjIwMjMtMDEtMTZUMTA6NDE6MjguOTY5WiIsInVwZGF0ZWRBdCI6IjIwMjMtMDEtMTZUMTA6NDE6MjguOTY5WiIsIlVzZXJSb2xlcyI6eyJpZCI6MSwicm9sZUlkIjoxLCJ1c2VySWQiOjEsImFkbWluSWQiOm51bGx9fV0sImlhdCI6MTY3Mzg2NTcxNiwiZXhwIjoxNjczODY5MzE2fQ.cx0YqrXwrvrL8wNMsnTiitL632ORCOxYUJuNQ-g4lOc', description: 'admin`s refresh token'})@Column({type: undefined, unique: true, allowNull: false, field: 'adminRefreshToken'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/admin/models/admin.refresh.token.model.ts:60\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'admin@gmail.com', description: 'admin`s email'})@IsEmail()@Column({type: undefined, unique: false, allowNull: false, field: 'email'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/admin/models/admin.refresh.token.model.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        expireDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: '86400000', description: 'expireDate'})@Column({type: undefined, field: 'expireDate'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/admin/models/admin.refresh.token.model.ts:91\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: '1', description: 'unique identifier'})@Column({type: undefined, unique: true, autoIncrement: true, primaryKey: true, allowNull: false, field: 'id'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/admin/models/admin.refresh.token.model.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        identifier\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: '9b1deb4d-3b7d-4bad-9bdd-2b0d7b3dcb6d', description: 'identifier'})@IsUUID(4)@Column({type: undefined, unique: true, allowNull: true, field: 'identifier'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/admin/models/admin.refresh.token.model.ts:104\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        phoneNumber\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: '+251912345678', description: 'admin`s phoneNumber'})@Column({type: undefined, unique: false, allowNull: false, field: 'phoneNumber'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/admin/models/admin.refresh.token.model.ts:47\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getAdmin\n                        \n                    \n                \n            \n            \n                \ngetAdmin()\n                \n            \n\n\n            \n                \n                    Defined in src/admin/models/admin.refresh.token.model.ts:127\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Admin\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAdminAgent\n                        \n                    \n                \n            \n            \n                \ngetAdminAgent()\n                \n            \n\n\n            \n                \n                    Defined in src/admin/models/admin.refresh.token.model.ts:118\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getExpireDate\n                        \n                    \n                \n            \n            \n                \ngetExpireDate()\n                \n            \n\n\n            \n                \n                    Defined in src/admin/models/admin.refresh.token.model.ts:109\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Date\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getIdentifier\n                        \n                    \n                \n            \n            \n                \ngetIdentifier()\n                \n            \n\n\n            \n                \n                    Defined in src/admin/models/admin.refresh.token.model.ts:131\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setAdminAgent\n                        \n                    \n                \n            \n            \n                \nsetAdminAgent(adminAgent: string)\n                \n            \n\n\n            \n                \n                    Defined in src/admin/models/admin.refresh.token.model.ts:122\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    adminAgent\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setExpireDate\n                        \n                    \n                \n            \n            \n                \nsetExpireDate(expireDate: Date)\n                \n            \n\n\n            \n                \n                    Defined in src/admin/models/admin.refresh.token.model.ts:113\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    expireDate\n                                    \n                                                Date\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Date\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setIdentifier\n                        \n                    \n                \n            \n            \n                \nsetIdentifier(identifier: string)\n                \n            \n\n\n            \n                \n                    Defined in src/admin/models/admin.refresh.token.model.ts:135\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    identifier\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport {\n  Column,\n  DataType,\n  Table,\n  Model,\n  ForeignKey,\n  IsEmail,\n  BelongsTo,\n  IsUUID,\n} from 'sequelize-typescript';\nimport { AdminRefreshTokenCreationAttrbs } from '../../core/interfaces/admin.interfaces';\nimport { Admin } from './admin.model';\n@Table({ tableName: 'ADMIN`s_Refresh-tokens' })\nexport class AdminRefreshToken extends Model {\n  @ApiProperty({ example: '1', description: 'unique identifier' })\n  @Column({\n    type: DataType.INTEGER,\n    unique: true,\n    autoIncrement: true,\n    primaryKey: true,\n    allowNull: false,\n    field: 'id',\n  })\n  public id: number;\n\n  @ApiProperty({ example: 'admin@gmail.com', description: 'admin`s email' })\n  @IsEmail\n  @Column({\n    type: DataType.STRING,\n    unique: false,\n    allowNull: false,\n    field: 'email',\n  })\n  public email: string;\n\n  @ApiProperty({ example: '+251912345678', description: 'admin`s phoneNumber' })\n  @Column({\n    type: DataType.STRING,\n    unique: false,\n    allowNull: false,\n    field: 'phoneNumber',\n  })\n  public phoneNumber: string;\n\n  @ApiProperty({\n    example:\n      'eyJhbGciOiJrdyIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjEsImlzQWN0aXZhdGVkIjpmYWxzZSwiZW1haWwiOiJ1c2VyQGdtYWlsLmNvbSIsInJvbGVzIjpbeyJpZCI6MSwidmFsdWUiOiJVU0VSIiwiZGVzY3JpcHRpb24iOiJzaW1wbGUgdXNlciIsInJpZ2h0MSI6ZmFsc2UsInJpZ2h0MiI6ZmFsc2UsImNyZWF0ZWRBdCI6IjIwMjMtMDEtMTZUMTA6NDE6MjguOTY5WiIsInVwZGF0ZWRBdCI6IjIwMjMtMDEtMTZUMTA6NDE6MjguOTY5WiIsIlVzZXJSb2xlcyI6eyJpZCI6MSwicm9sZUlkIjoxLCJ1c2VySWQiOjEsImFkbWluSWQiOm51bGx9fV0sImlhdCI6MTY3Mzg2NTcxNiwiZXhwIjoxNjczODY5MzE2fQ.cx0YqrXwrvrL8wNMsnTiitL632ORCOxYUJuNQ-g4lOc',\n    description: 'admin`s refresh token',\n  })\n  @Column({\n    type: DataType.CHAR(2500),\n    unique: true,\n    allowNull: false,\n    field: 'adminRefreshToken',\n  })\n  public adminRefreshToken: string;\n\n  @ApiProperty({ example: '1', description: 'adminId' })\n  @ForeignKey(() => Admin)\n  @Column({\n    type: DataType.INTEGER,\n    field: 'adminId',\n    unique: false,\n    allowNull: false,\n  })\n  public adminId: number;\n\n  @ApiProperty({\n    example:\n      // tslint:disable-next-line: max-line-length\n      'Mozilla/5.0 (Windows NT 7.0; Win32; x32) AppleWebKit/523.34 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/523.34',\n    description: 'admin`s agent',\n  })\n  @Column({\n    type: DataType.CHAR(350),\n    unique: false,\n    allowNull: false,\n    field: 'userAgent',\n  })\n  private adminAgent: string;\n\n  @ApiProperty({ example: '86400000', description: 'expireDate' })\n  @Column({\n    type: DataType.DATE,\n    field: 'expireDate',\n  })\n  private expireDate: Date;\n\n  @ApiProperty({\n    example: '9b1deb4d-3b7d-4bad-9bdd-2b0d7b3dcb6d',\n    description: 'identifier',\n  })\n  @IsUUID(4)\n  @Column({\n    type: DataType.STRING,\n    unique: true,\n    allowNull: true,\n    field: 'identifier',\n  })\n  public identifier: string;\n\n  @BelongsTo(() => Admin)\n  private admin: Admin;\n\n  getExpireDate(): Date {\n    return this.expireDate;\n  }\n\n  setExpireDate(expireDate: Date): Date {\n    this.expireDate = expireDate;\n    return this.expireDate;\n  }\n\n  getAdminAgent(): string {\n    return this.adminAgent;\n  }\n\n  setAdminAgent(adminAgent: string): string {\n    this.adminAgent = adminAgent;\n    return this.adminAgent;\n  }\n\n  getAdmin(): Admin {\n    return this.admin;\n  }\n\n  getIdentifier(): string {\n    return this.identifier;\n  }\n\n  setIdentifier(identifier: string): string {\n    this.identifier = identifier;\n    return this.identifier;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AdminRefreshTokenCreationAttrbs.html":{"url":"interfaces/AdminRefreshTokenCreationAttrbs.html","title":"interface - AdminRefreshTokenCreationAttrbs","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  AdminRefreshTokenCreationAttrbs\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/interfaces/admin.interfaces.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            adminAgent\n                                        \n                                \n                                \n                                        \n                                            adminId\n                                        \n                                \n                                \n                                        \n                                            adminRefreshToken\n                                        \n                                \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            phoneNumber\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        adminAgent\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        adminAgent:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        adminId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        adminId:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        adminRefreshToken\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        adminRefreshToken:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        phoneNumber\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        phoneNumber:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface AdminRefreshTokenCreationAttrbs {\n  email: string;\n  adminId: number;\n  adminRefreshToken: string;\n  adminAgent: string;\n  phoneNumber: string;\n}\n\nexport interface AdmincreationAttrbs {\n  name: string;\n  surname: string;\n  email: string;\n  phoneNumber: string;\n  password: string;\n  activationLink: string;\n}\n\nexport interface AdminInterface {\n  id: number;\n  name: string;\n  surname: string;\n  email: string;\n  phoneNumber: string;\n  userId: number;\n  addContent: boolean;\n  editContent: boolean;\n  editWebsite: boolean;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AdminService.html":{"url":"injectables/AdminService.html","title":"injectable - AdminService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AdminService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/admin/services/admin.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                changePassword\n                            \n                            \n                                    Async\n                                checkAdmin\n                            \n                            \n                                    Async\n                                createAdmin\n                            \n                            \n                                    Async\n                                findAdmin\n                            \n                            \n                                    Async\n                                findByActivationLink\n                            \n                            \n                                    Async\n                                getAdminByEmail\n                            \n                            \n                                    Async\n                                getAdminById\n                            \n                            \n                                    Async\n                                getAdminByPhoneNumber\n                            \n                            \n                                    Async\n                                getAllAdmins\n                            \n                            \n                                    Async\n                                resetPassword\n                            \n                            \n                                    Private\n                                    Async\n                                rewritePassword\n                            \n                            \n                                    Async\n                                setConfirmCode\n                            \n                            \n                                    Async\n                                updateAdmin\n                            \n                            \n                                    Async\n                                validateAdmin\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(adminRepository, userService: UsersService, roleService: RolesService)\n                    \n                \n                        \n                            \n                                Defined in src/admin/services/admin.service.ts:36\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        adminRepository\n                                                  \n                                                        \n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UsersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        roleService\n                                                  \n                                                        \n                                                                        RolesService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        changePassword\n                        \n                    \n                \n            \n            \n                \n                    \n                    changePassword(adminId: number, password: string)\n                \n            \n\n\n            \n                \n                    Defined in src/admin/services/admin.service.ts:305\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    adminId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        checkAdmin\n                        \n                    \n                \n            \n            \n                \n                    \n                    checkAdmin(payload: Payload, activationLink: string | undefined)\n                \n            \n\n\n            \n                \n                    Defined in src/admin/services/admin.service.ts:241\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    payload\n                                    \n                                                Payload\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    activationLink\n                                    \n                                            string | undefined\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        createAdmin\n                        \n                    \n                \n            \n            \n                \n                    \n                    createAdmin(dto: CreateAdminDto)\n                \n            \n\n\n            \n                \n                    Defined in src/admin/services/admin.service.ts:87\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dto\n                                    \n                                                CreateAdminDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAdmin\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAdmin(v: string[], page: number, adminPerPage: number)\n                \n            \n\n\n            \n                \n                    Defined in src/admin/services/admin.service.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    v\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    page\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    adminPerPage\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findByActivationLink\n                        \n                    \n                \n            \n            \n                \n                    \n                    findByActivationLink(activationLink: string)\n                \n            \n\n\n            \n                \n                    Defined in src/admin/services/admin.service.ts:185\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    activationLink\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getAdminByEmail\n                        \n                    \n                \n            \n            \n                \n                    \n                    getAdminByEmail(email: string)\n                \n            \n\n\n            \n                \n                    Defined in src/admin/services/admin.service.ts:233\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getAdminById\n                        \n                    \n                \n            \n            \n                \n                    \n                    getAdminById(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/admin/services/admin.service.ts:223\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getAdminByPhoneNumber\n                        \n                    \n                \n            \n            \n                \n                    \n                    getAdminByPhoneNumber(phoneNumber: string)\n                \n            \n\n\n            \n                \n                    Defined in src/admin/services/admin.service.ts:258\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    phoneNumber\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getAllAdmins\n                        \n                    \n                \n            \n            \n                \n                    \n                    getAllAdmins(page: number, adminPerPage: number)\n                \n            \n\n\n            \n                \n                    Defined in src/admin/services/admin.service.ts:195\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    page\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    adminPerPage\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        resetPassword\n                        \n                    \n                \n            \n            \n                \n                    \n                    resetPassword(resetDto: ResetDto)\n                \n            \n\n\n            \n                \n                    Defined in src/admin/services/admin.service.ts:289\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    resetDto\n                                    \n                                                ResetDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Async\n                        rewritePassword\n                        \n                    \n                \n            \n            \n                \n                    \n                    rewritePassword(admin: Admin, password: string)\n                \n            \n\n\n            \n                \n                    Defined in src/admin/services/admin.service.ts:311\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    admin\n                                    \n                                                Admin\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        setConfirmCode\n                        \n                    \n                \n            \n            \n                \n                    \n                    setConfirmCode(codeDto: CodeDto, code: number)\n                \n            \n\n\n            \n                \n                    Defined in src/admin/services/admin.service.ts:281\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    codeDto\n                                    \n                                                CodeDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    code\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        updateAdmin\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateAdmin(dto: CreateAdminDto)\n                \n            \n\n\n            \n                \n                    Defined in src/admin/services/admin.service.ts:151\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dto\n                                    \n                                                CreateAdminDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        validateAdmin\n                        \n                    \n                \n            \n            \n                \n                    \n                    validateAdmin(adminDto: LoginDto)\n                \n            \n\n\n            \n                \n                    Defined in src/admin/services/admin.service.ts:266\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    adminDto\n                                    \n                                                LoginDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  BadRequestException,\n  ForbiddenException,\n  HttpStatus,\n  Injectable,\n  NotFoundException,\n  Scope,\n  UnauthorizedException,\n} from '@nestjs/common';\nimport { InjectModel } from '@nestjs/sequelize';\nimport { CreateAdminDto } from '../dto/create-admin.dto';\nimport * as bcrypt from 'bcrypt';\nimport {\n  INVALID_LINK,\n  ADMIN_NOT_FOUND,\n  ADMIN_WITH_EMAIL_EXIST,\n  ADMIN_WITH_PHONENUMBER_EXIST,\n  INVALID_EMAIL,\n  RESET_TIME_EXPIRED,\n  INVALID_CODE,\n  ADMIN_ID_NOT_PROVIDED,\n  NOT_ACTIVATED,\n} from '../constants/admin.constants';\nimport { Admin } from '../models/admin.model';\nimport { LoginDto } from '../../auth/dto/login.dto';\nimport { ResetDto } from '../../auth/dto/reset.password.dto';\nimport { CodeDto } from '../../core/interfaces/auth.interfaces';\nimport { Payload } from '../../core/interfaces/auth.interfaces';\nimport { AdminInterface } from '../../core/interfaces/admin.interfaces';\nimport { UsersService } from '../../users/services/users.service';\nimport { User } from '../../users/models/user.model';\nimport { RolesService } from '../../roles/roles.service';\nimport { ApiException } from '../../common/exceptions/api.exception';\n\n@Injectable({ scope: Scope.TRANSIENT })\nexport class AdminService {\n  constructor(\n    @InjectModel(Admin) private adminRepository: typeof Admin,\n    private readonly userService: UsersService,\n    private readonly roleService: RolesService,\n  ) {}\n\n  async findAdmin(\n    v: string[],\n    page: number,\n    adminPerPage: number,\n  ): Promise {\n    const params = v.map((param: string) => {\n      return param.toLowerCase();\n    });\n    const dbAdmins = await this.adminRepository.findAll({\n      include: { all: true },\n      offset: (page - 1) * adminPerPage,\n      limit: adminPerPage,\n      order: [['updatedAt', 'DESC']],\n      attributes: [\n        'id',\n        'name',\n        'surname',\n        'email',\n        'phoneNumber',\n        'userId',\n        'addContent',\n        'editContent',\n        'editWebsite',\n      ],\n    });\n    if (dbAdmins.length === 0) {\n      return [];\n    }\n    const admins = [];\n    dbAdmins.forEach((admin: Admin) => {\n      const dbArray = [];\n      for (const key in admin) {\n        dbArray.push(admin[key]);\n      }\n      const isContained = params.some(\n        (param: string) => dbArray.indexOf(param) >= 0,\n      );\n      if (isContained) {\n        admins.push(admin);\n      }\n    });\n    return admins;\n  }\n\n  async createAdmin(dto: CreateAdminDto): Promise {\n    const user = await this.userService.getUserByEmail(dto.email);\n    if (!dto.isAdmin) {\n      user.setIsAdmin(dto.isAdmin);\n      user.setAddContent(dto.addContent);\n      user.setEditContent(dto.editContent);\n      user.setEditWebsite(dto.editWebSite);\n      await user.save();\n      return JSON.parse(JSON.stringify(user));\n    }\n    if (user.getIsAdmin()) {\n      user.setAddContent(dto.addContent);\n      user.setEditContent(dto.editContent);\n      user.setEditWebsite(dto.editWebSite);\n      await user.save();\n      const admin = await this.getAdminByEmail(dto.email);\n      admin.setAddContent(dto.addContent);\n      admin.setEditContent(dto.editWebSite);\n      admin.setEditWebsite(dto.editWebSite);\n      await admin.save();\n      return JSON.parse(JSON.stringify(admin));\n    }\n    const [phoneNumber, email] = await Promise.all([\n      await this.getAdminByPhoneNumber(dto.phoneNumber),\n      await this.getAdminByEmail(dto.email),\n    ]);\n    if (phoneNumber) {\n       throw new ApiException(HttpStatus.BAD_REQUEST, 'Bad request', ADMIN_WITH_PHONENUMBER_EXIST);\n    }\n    if (email) {\n      throw new ApiException(HttpStatus.BAD_REQUEST, 'Bad request', ADMIN_WITH_EMAIL_EXIST);\n    }\n    const [admin] = await Promise.all([await this.adminRepository.create(dto)]);\n    const role = await this.roleService.getRoleByValue('ADMIN');\n    if (!role) {\n      const userRole = await this.roleService.createRole({\n        value: 'ADMIN',\n        description: 'User with rights',\n      });\n      user.setIsAdmin(dto.isAdmin);\n      user.setAddContent(dto.addContent);\n      user.setEditContent(dto.editContent);\n      user.setEditWebsite(dto.editWebSite);\n      await user.save();\n      admin.setIsActivated(user.getIsActivated());\n      admin.userId = user.id;\n      await admin.$set('roles', userRole.id);\n      admin.roles = [role];\n      await admin.save();\n      return JSON.parse(JSON.stringify(admin));\n    }\n    user.setIsAdmin(dto.isAdmin);\n    user.setAddContent(dto.addContent);\n    user.setEditContent(dto.editContent);\n    user.setEditWebsite(dto.editWebSite);\n    await user.save();\n    admin.setIsActivated(user.getIsActivated());\n    await admin.$set('roles', role.id);\n    admin.roles = [role];\n    admin.userId = user.id;\n    await admin.save();\n    return JSON.parse(JSON.stringify(admin));\n  }\n\n  async updateAdmin(dto: CreateAdminDto): Promise {\n    const [admin, user] = await Promise.all([\n      await this.getAdminByEmail(dto.email),\n      await this.userService.getUserByEmail(dto.email),\n    ]);\n    if (dto.isAdmin) {\n      user.setIsAdmin(dto.isAdmin);\n      user.setAddContent(dto.addContent);\n      user.setEditContent(dto.editContent);\n      user.setEditWebsite(dto.editWebSite);\n      admin.userId = user.id;\n      admin.setAddContent(dto.addContent);\n      admin.setEditContent(dto.editContent);\n      admin.setEditWebsite(dto.editWebSite);\n      await Promise.all([await user.save(), await admin.save()]);\n      return JSON.parse(JSON.stringify(admin));\n    }\n    user.setIsAdmin(dto.isAdmin);\n    user.setAddContent(dto.addContent);\n    user.setEditContent(dto.editContent);\n    user.setEditWebsite(dto.editWebSite);\n    const [deletedAdmin] = await Promise.all([\n      await this.adminRepository.destroy({\n        where: {\n          userId: user.id,\n          email: dto.email,\n          phoneNumber: dto.phoneNumber,\n        },\n      }),\n      await user.save(),\n    ]);\n    return deletedAdmin;\n  }\n\n  async findByActivationLink(activationLink: string): Promise {\n    const admin = this.adminRepository.findOne({\n      where: { activationLink: activationLink },\n    });\n    if (!admin) {\n      throw new ApiException(HttpStatus.BAD_REQUEST, 'Bad request', INVALID_LINK);\n    }\n    return admin;\n  }\n\n  async getAllAdmins(\n    page: number,\n    adminPerPage: number,\n  ): Promise {\n    const admins = await this.adminRepository.findAll({\n      include: { all: true },\n      offset: (page - 1) * adminPerPage,\n      limit: adminPerPage,\n      order: [['updatedAt', 'DESC']],\n    });\n    if (admins.length === 0) {\n      return [];\n    }\n    return admins.map((admin: Admin) => {\n      return {\n        id: admin.id,\n        name: admin.getName(),\n        surname: admin.getSurname(),\n        email: admin.email,\n        phoneNumber: admin.phoneNumber,\n        userId: admin.userId,\n        addContent: admin.getAddContent(),\n        editContent: admin.getEditContent(),\n        editWebsite: admin.getEditWebSite(),\n      };\n    });\n  }\n\n  async getAdminById(id: number): Promise {\n    const admin = await this.adminRepository.findByPk(id, {\n      include: { all: true },\n    });\n    if (!admin) {\n       throw new ApiException(HttpStatus.NOT_FOUND, 'Not found!', ADMIN_NOT_FOUND);  \n    }\n    return admin;\n  }\n\n  async getAdminByEmail(email: string): Promise {\n    const admin = await this.adminRepository.findOne({\n      where: { email: email },\n      include: { all: true },\n    });\n    return admin;\n  }\n\n  async checkAdmin(payload: Payload, activationLink: string | undefined) {\n    if (!activationLink) {\n      throw new ApiException(HttpStatus.UNAUTHORIZED, 'Unathorized!', ADMIN_ID_NOT_PROVIDED); \n    }\n    const admin = await this.getAdminById(payload.userId);\n    if (!admin.getIsActivated()) {\n      throw new ApiException(HttpStatus.FORBIDDEN, 'Forbidden!', NOT_ACTIVATED); \n    }\n    if (\n      admin.activationLink === activationLink &&\n      payload.userActivationLink === activationLink\n    ) {\n      return true;\n    }\n    return false;\n  }\n\n  async getAdminByPhoneNumber(phoneNumber: string): Promise {\n    const admin = await this.adminRepository.findOne({\n      where: { phoneNumber: phoneNumber },\n      include: { all: true },\n    });\n    return admin;\n  }\n\n  async validateAdmin(adminDto: LoginDto): Promise {\n    const admin = await this.getAdminByEmail(adminDto.email);\n    if (!admin) {\n      return false;\n    }\n    const passwordEquals = await bcrypt.compare(\n      adminDto.password,\n      admin.getPassword(),\n    );\n    if (passwordEquals) {\n      return admin;\n    }\n    return false;\n  }\n\n  async setConfirmCode(codeDto: CodeDto, code: number): Promise {\n    const admin = await this.getAdminByEmail(codeDto.email);\n    admin.setConfirmCode(code);\n    admin.setResetTokenExpiration(Number(Date.now() + 3600000));\n    await admin.save();\n    return admin.email;\n  }\n\n  async resetPassword(resetDto: ResetDto): Promise {\n    const admin = await this.getAdminByEmail(resetDto.email);\n    if (resetDto.email !== admin.email) {\n      throw new ApiException(HttpStatus.BAD_REQUEST, 'Bad request', INVALID_EMAIL);\n    }\n    if (Number(Date.now()) >= admin.getResetTokenExpiration()) {\n      throw new ApiException(HttpStatus.BAD_REQUEST, 'Bad request', RESET_TIME_EXPIRED);\n    }\n    if (Number(resetDto.code) !== admin.getConfirmCode()) {\n      throw new ApiException(HttpStatus.BAD_REQUEST, 'Bad request', INVALID_CODE);\n    }\n    await this.userService.rewritePassword(admin.userId, resetDto.password);\n    await this.rewritePassword(admin, resetDto.password);\n    return admin.email;\n  }\n\n  async changePassword(adminId: number, password: string): Promise {\n    const admin = await this.getAdminById(adminId);\n    await this.userService.rewritePassword(admin.userId, password);\n    return this.rewritePassword(admin, password);\n  }\n\n  private async rewritePassword(\n    admin: Admin,\n    password: string,\n  ): Promise {\n    const SALT_ROUNDS = Number(process.env.SALT_ROUNDS);\n    const salt = await bcrypt.genSalt(SALT_ROUNDS);\n    const hashedPassword = await bcrypt.hash(password, salt);\n    admin.setNewPasssword(hashedPassword);\n    return admin.save();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AdminUserMiddleware.html":{"url":"injectables/AdminUserMiddleware.html","title":"injectable - AdminUserMiddleware","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AdminUserMiddleware\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/middlewares/admin-user.middleware.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                use\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(adminService: AdminService)\n                    \n                \n                        \n                            \n                                Defined in src/common/middlewares/admin-user.middleware.ts:21\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        adminService\n                                                  \n                                                        \n                                                                        AdminService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        use\n                        \n                    \n                \n            \n            \n                \n                    \n                    use(req: Request, res: Response, next: NextFunction)\n                \n            \n\n\n            \n                \n                    Defined in src/common/middlewares/admin-user.middleware.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                            NextFunction\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  HttpStatus,\n  Injectable,\n  NestMiddleware,\n  Next,\n  Req,\n  Res,\n  Scope,\n} from '@nestjs/common';\nimport {\n  BadRequestException,\n  NotFoundException,\n} from '@nestjs/common/exceptions';\nimport { Request, Response, NextFunction } from 'express';\nimport { ADMIN_NOT_FOUND } from '../../admin/constants/admin.constants';\nimport { INVALID_PARAMS } from '../../auth/auth.constants';\nimport { AdminService } from '../../admin/services/admin.service';\nimport { ApiException } from '../exceptions/api.exception';\n\n@Injectable({ scope: Scope.REQUEST })\nexport class AdminUserMiddleware implements NestMiddleware {\n  constructor(private readonly adminService: AdminService) {}\n  async use(\n    @Req() req: Request,\n    @Res() res: Response,\n    @Next() next: NextFunction,\n  ) {\n    try {\n      const name = req?.body?.name;\n      const surname = req?.body?.surname;\n      const email = req?.body?.email;\n      const phoneNumber = req?.body?.phoneNumber;\n      const isAdmin = req?.body?.isAdmin;\n      const addContent = req?.body?.addContent;\n      const editContent = req?.body?.editContent;\n      const editWebSite = req?.body?.editWebSite;\n      if (\n        !name ||\n        !surname ||\n        !phoneNumber ||\n        !email ||\n        !isAdmin.toString() ||\n        !addContent.toString() ||\n        !editContent.toString() ||\n        !editWebSite.toString()\n      ) {\n        throw new ApiException(HttpStatus.BAD_REQUEST, 'Bad request!', INVALID_PARAMS);\n      }\n      const admin = await this.adminService.getAdminByEmail(email);\n      if (admin.phoneNumber === phoneNumber) {\n        req.body.password = admin.getPassword();\n        req.body.activationLink = admin.activationLink;\n        return next();\n      }\n      throw new ApiException(HttpStatus.NOT_FOUND, 'Not found!', ADMIN_NOT_FOUND);\n    } catch (err: unknown) {\n      return next(err);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AdmincreationAttrbs.html":{"url":"interfaces/AdmincreationAttrbs.html","title":"interface - AdmincreationAttrbs","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  AdmincreationAttrbs\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/interfaces/admin.interfaces.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            activationLink\n                                        \n                                \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            password\n                                        \n                                \n                                \n                                        \n                                            phoneNumber\n                                        \n                                \n                                \n                                        \n                                            surname\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        activationLink\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        activationLink:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        password\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        password:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        phoneNumber\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        phoneNumber:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        surname\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        surname:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface AdminRefreshTokenCreationAttrbs {\n  email: string;\n  adminId: number;\n  adminRefreshToken: string;\n  adminAgent: string;\n  phoneNumber: string;\n}\n\nexport interface AdmincreationAttrbs {\n  name: string;\n  surname: string;\n  email: string;\n  phoneNumber: string;\n  password: string;\n  activationLink: string;\n}\n\nexport interface AdminInterface {\n  id: number;\n  name: string;\n  surname: string;\n  email: string;\n  phoneNumber: string;\n  userId: number;\n  addContent: boolean;\n  editContent: boolean;\n  editWebsite: boolean;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AllExceptionsFilter.html":{"url":"classes/AllExceptionsFilter.html","title":"class - AllExceptionsFilter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AllExceptionsFilter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/filters/all-exceptions.filter.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        ExceptionFilter\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                catch\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(httpAdapterHost: HttpAdapterHost)\n                    \n                \n                        \n                            \n                                Defined in src/core/filters/all-exceptions.filter.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        httpAdapterHost\n                                                  \n                                                        \n                                                                    HttpAdapterHost\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        catch\n                        \n                    \n                \n            \n            \n                \ncatch(exception: HttpException, host: ArgumentsHost)\n                \n            \n\n\n            \n                \n                    Defined in src/core/filters/all-exceptions.filter.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    exception\n                                    \n                                            HttpException\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    host\n                                    \n                                            ArgumentsHost\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n  ExceptionFilter,\n  Catch,\n  ArgumentsHost,\n  HttpException,\n  HttpStatus,\n} from '@nestjs/common';\nimport { HttpAdapterHost } from '@nestjs/core';\n\n@Catch()\nexport class AllExceptionsFilter implements ExceptionFilter {\n  constructor(private readonly httpAdapterHost: HttpAdapterHost) {}\n  catch(exception: HttpException, host: ArgumentsHost): void {\n    console.log(exception);\n    const { httpAdapter } = this.httpAdapterHost;\n    const ctx = host.switchToHttp();\n    const message = exception.message;\n    const httpStatus =\n      exception instanceof HttpException\n        ? exception.getStatus()\n        : HttpStatus.INTERNAL_SERVER_ERROR;\n    const responseBody = {\n      statusCode: httpStatus,\n      timestamp: new Date().toISOString(),\n      message: message,\n      path: httpAdapter.getRequestUrl(ctx.getRequest()),\n    };\n    httpAdapter.reply(ctx.getResponse(), responseBody, httpStatus);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ApiError.html":{"url":"classes/ApiError.html","title":"class - ApiError","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ApiError\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/exceptions/validate-dto.exception.error.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    Error\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                rawErrors\n                            \n                            \n                                statusCode\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(statusCode: number, message: string, rawErrors?: string[])\n                    \n                \n                        \n                            \n                                Defined in src/common/exceptions/validate-dto.exception.error.ts:5\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        statusCode\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        message\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        rawErrors\n                                                  \n                                                        \n                                                                    string[]\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        rawErrors\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/common/exceptions/validate-dto.exception.error.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        statusCode\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/common/exceptions/validate-dto.exception.error.ts:4\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { HttpStatus } from '@nestjs/common';\n\nexport class ApiError extends Error {\n  statusCode: number;\n  rawErrors: string[] = [];\n  constructor(statusCode: number, message: string, rawErrors?: string[]) {\n    super(message);\n\n    this.statusCode = statusCode;\n    if (rawErrors) {\n      this.rawErrors = rawErrors;\n    }\n    Error.captureStackTrace(this, this.constructor);\n  }\n}\n\nexport class NotFoundError extends ApiError {\n  constructor(path: string) {\n    super(HttpStatus.NOT_FOUND, `The requested path ${path} not found!`);\n  }\n}\n\nexport class BadRequestError extends ApiError {\n  constructor(message: string, errors: string[]) {\n    super(HttpStatus.BAD_REQUEST, message, errors);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ApiErrorExceptionFilter.html":{"url":"classes/ApiErrorExceptionFilter.html","title":"class - ApiErrorExceptionFilter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ApiErrorExceptionFilter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/filters/error-handler.filter.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        ExceptionFilter\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                catch\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        catch\n                        \n                    \n                \n            \n            \n                \ncatch(exception: BadRequestError, host: ArgumentsHost)\n                \n            \n\n\n            \n                \n                    Defined in src/common/filters/error-handler.filter.ts:7\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    exception\n                                    \n                                                BadRequestError\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    host\n                                    \n                                            ArgumentsHost\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { BadRequestError } from '../exceptions/validate-dto.exception.error';\nimport { ExceptionFilter, Catch, ArgumentsHost } from '@nestjs/common';\nimport { Request, Response } from 'express';\n\n@Catch(BadRequestError)\nexport class ApiErrorExceptionFilter implements ExceptionFilter {\n  catch(exception: BadRequestError, host: ArgumentsHost) {\n    const ctx = host.switchToHttp();\n    const response = ctx.getResponse();\n    const request = ctx.getRequest();\n    const status = exception.statusCode || 500;\n    response.status(status).send({\n      success: false,\n      message: exception.message,\n      rawErrors: exception.rawErrors ?? [],\n      stack:\n        exception.stack.toString().split(' ')[0] +\n        exception.stack.toString().split(' ')[1],\n      timestamp: new Date().toISOString(),\n      path: request.url,\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ApiException.html":{"url":"classes/ApiException.html","title":"class - ApiException","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ApiException\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/exceptions/api.exception.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    Error\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                errors\n                            \n                            \n                                status\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                BadRequest\n                            \n                            \n                                    Static\n                                ForbiddenException\n                            \n                            \n                                    Static\n                                InternalServerError\n                            \n                            \n                                    Static\n                                UnauthorizedError\n                            \n                            \n                                    Static\n                                UserNotFound\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(status: number, message: string, errors: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/common/exceptions/api.exception.ts:41\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        status\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        message\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        errors\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        errors\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type[]\n\n                    \n                \n                    \n                        \n                                Defined in src/common/exceptions/api.exception.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/common/exceptions/api.exception.ts:40\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        BadRequest\n                        \n                    \n                \n            \n            \n                \n                    \n                    BadRequest(type: \"USER_WITH_EMAIL_EXIST\" | \"USER_WITH_PHONENUMBER_EXIST\" | \"USER_WITH_EMAIL_DOESNT_EXIST\" | \"INVALID_EMAIL\" | \"RESET_TIME_EXPIRED\" | \"ADMIN_WITH_EMAIL_EXIST\" | \"ADMIN_WITH_PHONENUMBER_EXIST\" | \"ADMIN_WITH_EMAIL_DOESNT_EXIST\" | \"OWNER_WITH_EMAIL_EXIST\" | \"OWNER_WITH_PHONENUMBER_EXIST\" | \"OWNER_WITH_EMAIL_DOESNT_EXIST\" | \"INVALID_CODE\" | \"TOKEN_INVALID\")\n                \n            \n\n\n            \n                \n                    Defined in src/common/exceptions/api.exception.ts:63\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    type\n                                    \n                                            \"USER_WITH_EMAIL_EXIST\" | \"USER_WITH_PHONENUMBER_EXIST\" | \"USER_WITH_EMAIL_DOESNT_EXIST\" | \"INVALID_EMAIL\" | \"RESET_TIME_EXPIRED\" | \"ADMIN_WITH_EMAIL_EXIST\" | \"ADMIN_WITH_PHONENUMBER_EXIST\" | \"ADMIN_WITH_EMAIL_DOESNT_EXIST\" | \"OWNER_WITH_EMAIL_EXIST\" | \"OWNER_WITH_PHONENUMBER_EXIST\" | \"OWNER_WITH_EMAIL_DOESNT_EXIST\" | \"INVALID_CODE\" | \"TOKEN_INVALID\"\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        ForbiddenException\n                        \n                    \n                \n            \n            \n                \n                    \n                    ForbiddenException(type: \"NOT_ACTIVATED\" | \"ACCESS_DENIED\")\n                \n            \n\n\n            \n                \n                    Defined in src/common/exceptions/api.exception.ts:203\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    type\n                                    \n                                            \"NOT_ACTIVATED\" | \"ACCESS_DENIED\"\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        InternalServerError\n                        \n                    \n                \n            \n            \n                \n                    \n                    InternalServerError(type: \"ERROR_WHILE_SIGNING_TOKEN\" | \"ERROR_WHILE_VALIDATING_TOKEN\" | \"ERROR_WHILE_SAVING_TOKEN\" | \"ERROR_WHILE_REMOVING_TOKEN\")\n                \n            \n\n\n            \n                \n                    Defined in src/common/exceptions/api.exception.ts:167\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    type\n                                    \n                                            \"ERROR_WHILE_SIGNING_TOKEN\" | \"ERROR_WHILE_VALIDATING_TOKEN\" | \"ERROR_WHILE_SAVING_TOKEN\" | \"ERROR_WHILE_REMOVING_TOKEN\"\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        UnauthorizedError\n                        \n                    \n                \n            \n            \n                \n                    \n                    UnauthorizedError(type: \"INVALID_EMAIL_OR_PASSWORD\" | \"OWNER_ID_NOT_PROVIDED\" | \"ADMIN_ID_NOT_FOUND\")\n                \n            \n\n\n            \n                \n                    Defined in src/common/exceptions/api.exception.ts:151\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    type\n                                    \n                                            \"INVALID_EMAIL_OR_PASSWORD\" | \"OWNER_ID_NOT_PROVIDED\" | \"ADMIN_ID_NOT_FOUND\"\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        UserNotFound\n                        \n                    \n                \n            \n            \n                \n                    \n                    UserNotFound(type: \"USER_NOT_FOUND\" | \"USER_OR_ROLE_NOT_FOUND\" | \"TOKEN_NOT_FOUND\" | \"OWNER_NOT_FOUND\" | \"ADMIN_NOT_FOUND\" | \"OWNER_OR_ROLE_NOT_FOUND\" | \"ADMIN_OR_ROLE_NOT_FOUND\")\n                \n            \n\n\n            \n                \n                    Defined in src/common/exceptions/api.exception.ts:119\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    type\n                                    \n                                            \"USER_NOT_FOUND\" | \"USER_OR_ROLE_NOT_FOUND\" | \"TOKEN_NOT_FOUND\" | \"OWNER_NOT_FOUND\" | \"ADMIN_NOT_FOUND\" | \"OWNER_OR_ROLE_NOT_FOUND\" | \"ADMIN_OR_ROLE_NOT_FOUND\"\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { HttpStatus } from '@nestjs/common';\nimport { \n    ADMIN_ID_NOT_PROVIDED,\n    ADMIN_OR_ROLE_NOT_FOUND,\n     ADMIN_WITH_EMAIL_DOESNT_EXIST, \n     ADMIN_WITH_EMAIL_EXIST, \n     ADMIN_WITH_PHONENUMBER_EXIST \n} from '../../admin/constants/admin.constants';\nimport {\n    ACCESS_DENIED,\n    NOT_ACTIVATED,\n    OWNER_ID_NOT_PROVIDED,\n    OWNER_OR_ROLE_NOT_FOUND, \n    OWNER_WITH_EMAIL_DOESNT_EXIST, \n    OWNER_WITH_EMAIL_EXIST, \n    OWNER_WITH_PHONENUMBER_EXIST \n} from '../../owner/constants/owner.constants';\nimport { ADMIN_NOT_FOUND } from '../../admin/constants/jwt-refresh.constants';\nimport { OWNER_NOT_FOUND } from '../../owner/constants/jwt-refresh.constants';\nimport {\n    ERROR_WHILE_REMOVING_TOKEN,\n    ERROR_WHILE_SAVING_TOKEN,\n    ERROR_WHILE_SIGNING_TOKEN,\n    ERROR_WHILE_VALIDATING_TOKEN,\n    TOKEN_INVALID, TOKEN_NOT_FOUND\n} from '../../users/constants/jwt-refresh.constants';\nimport {\n    INVALID_CODE,\n    INVALID_EMAIL,\n    INVALID_EMAIL_OR_PASSWORD,\n    RESET_TIME_EXPIRED,\n    USER_NOT_FOUND,\n    USER_OR_ROLE_NOT_FOUND,\n    USER_WITH_EMAIL_DOESNT_EXIST,\n    USER_WITH_EMAIL_EXIST,\n    USER_WITH_PHONENUMBER_EXIST\n} from '../../users/constants/user.constants';\n\nexport class ApiException extends Error {\n    status: number;\n    errors: { locale: string, error: string }[];\n   \n    constructor(\n        status: number,\n        message: string,\n        errors: {\n            ua: string,\n            ru: string,\n            en: string,\n            rs: string\n        }\n    ) {\n        super(message);\n        this.status = status;\n        this.errors = [\n            { locale: 'ua', error: errors.ua },\n            { locale: 'ru', error: errors.ru },\n            { locale: 'en', error: errors.en },\n            { locale: 'rs', error: errors.rs },\n        ];\n    }\n\n    static BadRequest(type:\n        'USER_WITH_EMAIL_EXIST' |\n        'USER_WITH_PHONENUMBER_EXIST' |\n        'USER_WITH_EMAIL_DOESNT_EXIST' |\n        'INVALID_EMAIL' |\n        'RESET_TIME_EXPIRED' |\n        'ADMIN_WITH_EMAIL_EXIST' |\n        'ADMIN_WITH_PHONENUMBER_EXIST' |\n        'ADMIN_WITH_EMAIL_DOESNT_EXIST' |\n        'OWNER_WITH_EMAIL_EXIST' |\n        'OWNER_WITH_PHONENUMBER_EXIST' |\n        'OWNER_WITH_EMAIL_DOESNT_EXIST' |\n        'INVALID_CODE' |\n        'TOKEN_INVALID' \n    ) {\n        if (type = 'USER_WITH_EMAIL_EXIST') {\n            throw new ApiException(HttpStatus.BAD_REQUEST, 'Bad request', USER_WITH_EMAIL_EXIST);\n        }\n        if (type = 'USER_WITH_PHONENUMBER_EXIST') {\n            throw new ApiException(HttpStatus.BAD_REQUEST, 'Bad request', USER_WITH_PHONENUMBER_EXIST);\n        }\n        if (type = 'USER_WITH_EMAIL_DOESNT_EXIST') {\n            throw new ApiException(HttpStatus.BAD_REQUEST, 'Bad request', USER_WITH_EMAIL_DOESNT_EXIST);\n        }\n        if (type = 'ADMIN_WITH_EMAIL_EXIST') {\n            throw new ApiException(HttpStatus.BAD_REQUEST, 'Bad request', ADMIN_WITH_EMAIL_EXIST);\n        }\n        if (type = 'ADMIN_WITH_PHONENUMBER_EXIST') {\n            throw new ApiException(HttpStatus.BAD_REQUEST, 'Bad request', ADMIN_WITH_PHONENUMBER_EXIST);\n        }\n        if (type = 'ADMIN_WITH_EMAIL_DOESNT_EXIST') {\n            throw new ApiException(HttpStatus.BAD_REQUEST, 'Bad request', ADMIN_WITH_EMAIL_DOESNT_EXIST);\n        }\n        if (type = 'OWNER_WITH_EMAIL_EXIST') {\n            throw new ApiException(HttpStatus.BAD_REQUEST, 'Bad request', OWNER_WITH_EMAIL_EXIST);\n        }\n        if (type = 'OWNER_WITH_PHONENUMBER_EXIST') {\n            throw new ApiException(HttpStatus.BAD_REQUEST, 'Bad request', OWNER_WITH_PHONENUMBER_EXIST);\n        }\n        if (type = 'OWNER_WITH_EMAIL_DOESNT_EXIST') {\n            throw new ApiException(HttpStatus.BAD_REQUEST, 'Bad request', OWNER_WITH_EMAIL_DOESNT_EXIST);\n        }\n        if (type = 'INVALID_EMAIL') {\n            throw new ApiException(HttpStatus.BAD_REQUEST, 'Bad request', INVALID_EMAIL);\n        }\n        if (type = 'RESET_TIME_EXPIRED') {\n            throw new ApiException(HttpStatus.BAD_REQUEST, 'Bad request', RESET_TIME_EXPIRED);\n        }\n        if (type = 'INVALID_CODE') {\n            throw new ApiException(HttpStatus.BAD_REQUEST, 'Bad request', INVALID_CODE);\n        }\n        if (type = 'TOKEN_INVALID') {\n            throw new ApiException(HttpStatus.BAD_REQUEST, 'Bad request', TOKEN_INVALID);\n        }\n    }\n\n    static UserNotFound(type:\n        'USER_NOT_FOUND' |\n        'USER_OR_ROLE_NOT_FOUND' |\n        'TOKEN_NOT_FOUND' |\n        'OWNER_NOT_FOUND' |\n        'ADMIN_NOT_FOUND' |\n        'OWNER_OR_ROLE_NOT_FOUND' |\n        'ADMIN_OR_ROLE_NOT_FOUND'\n    ) {\n        if (type = 'USER_NOT_FOUND') {\n            throw new ApiException(HttpStatus.NOT_FOUND, 'Not found!', USER_NOT_FOUND);   \n        }\n        if (type = 'USER_OR_ROLE_NOT_FOUND') {\n            throw new ApiException(HttpStatus.NOT_FOUND, 'Not found!', USER_OR_ROLE_NOT_FOUND);   \n        }\n        if (type = 'TOKEN_NOT_FOUND') {\n            throw new ApiException(HttpStatus.NOT_FOUND, 'Not found!', TOKEN_NOT_FOUND);   \n        }\n        if (type = 'OWNER_NOT_FOUND') {\n            throw new ApiException(HttpStatus.NOT_FOUND, 'Not found!', OWNER_NOT_FOUND);   \n        }\n        if (type = 'ADMIN_NOT_FOUND') {\n            throw new ApiException(HttpStatus.NOT_FOUND, 'Not found!', ADMIN_NOT_FOUND);   \n        }\n        if (type = 'OWNER_OR_ROLE_NOT_FOUND') {\n            throw new ApiException(HttpStatus.NOT_FOUND, 'Not found!', OWNER_OR_ROLE_NOT_FOUND);   \n        }\n        if (type = 'ADMIN_OR_ROLE_NOT_FOUND') {\n            throw new ApiException(HttpStatus.NOT_FOUND, 'Not found!', ADMIN_OR_ROLE_NOT_FOUND);   \n        }\n    }\n\n    static UnauthorizedError(\n        type: 'INVALID_EMAIL_OR_PASSWORD' |\n            'OWNER_ID_NOT_PROVIDED' |\n            'ADMIN_ID_NOT_FOUND'\n    ) {\n        if (type = 'INVALID_EMAIL_OR_PASSWORD') {\n            throw new ApiException(HttpStatus.UNAUTHORIZED, 'Unathorized!', INVALID_EMAIL_OR_PASSWORD);   \n        }\n        if (type = 'OWNER_ID_NOT_PROVIDED') {\n            throw new ApiException(HttpStatus.UNAUTHORIZED, 'Unathorized!', OWNER_ID_NOT_PROVIDED); \n        }\n        if (type = 'ADMIN_ID_NOT_FOUND') {\n            throw new ApiException(HttpStatus.UNAUTHORIZED, 'Unathorized!', ADMIN_ID_NOT_PROVIDED); \n        }\n    }\n\n    static InternalServerError(type:\n        'ERROR_WHILE_SIGNING_TOKEN' |\n        'ERROR_WHILE_VALIDATING_TOKEN' |\n        'ERROR_WHILE_SAVING_TOKEN' |\n        'ERROR_WHILE_REMOVING_TOKEN'\n    ) {\n        if (type = 'ERROR_WHILE_SIGNING_TOKEN') {\n            throw new ApiException(\n                HttpStatus.INTERNAL_SERVER_ERROR,\n                'Internal Server Error',\n                ERROR_WHILE_SIGNING_TOKEN\n            );\n        }\n        if (type = 'ERROR_WHILE_VALIDATING_TOKEN') {\n            throw new ApiException(\n                HttpStatus.INTERNAL_SERVER_ERROR,\n                'Internal Server Error',\n                ERROR_WHILE_VALIDATING_TOKEN\n            );\n        }\n        if (type = 'ERROR_WHILE_SAVING_TOKEN') {\n            throw new ApiException(\n                HttpStatus.INTERNAL_SERVER_ERROR,\n                'Internal Server Error',\n                ERROR_WHILE_SAVING_TOKEN\n            );\n        }\n        if (type = 'ERROR_WHILE_REMOVING_TOKEN') {\n            throw new ApiException(\n                HttpStatus.INTERNAL_SERVER_ERROR,\n                'Internal Server Error',\n                ERROR_WHILE_REMOVING_TOKEN\n            );\n        }\n    }\n     \n    static ForbiddenException(\n        type: 'NOT_ACTIVATED' | \n        'ACCESS_DENIED'\n    ) {\n        if (type = 'NOT_ACTIVATED') {\n            throw new ApiException(HttpStatus.FORBIDDEN, 'Forbidden!', NOT_ACTIVATED); \n        }\n        if (type = 'ACCESS_DENIED') {\n            throw new ApiException(HttpStatus.FORBIDDEN, 'Forbidden!', ACCESS_DENIED); \n        }\n    }  \n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ApiExceptionFilter.html":{"url":"classes/ApiExceptionFilter.html","title":"class - ApiExceptionFilter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ApiExceptionFilter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/filters/api-exception.filter.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        ExceptionFilter\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                catch\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        catch\n                        \n                    \n                \n            \n            \n                \ncatch(exception: ApiException, host: ArgumentsHost)\n                \n            \n\n\n            \n                \n                    Defined in src/common/filters/api-exception.filter.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    exception\n                                    \n                                                ApiException\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    host\n                                    \n                                            ArgumentsHost\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ExceptionFilter, Catch, ArgumentsHost } from '@nestjs/common';\nimport { Request, Response } from 'express';\nimport { ApiException } from '../exceptions/api.exception';\n\n@Catch(ApiException)\nexport class ApiExceptionFilter implements ExceptionFilter {\n  catch(exception: ApiException, host: ArgumentsHost) {\n    const ctx = host.switchToHttp();\n    const response = ctx.getResponse();\n    const request = ctx.getRequest();\n    const status = exception.status || 500;\n    response.status(status).send({\n        success: false,\n        message: exception.message,\n        rawErrors: exception.errors,\n        stack:\n            exception.stack.toString().split(' ')[0] +\n            exception.stack.toString().split(' ')[1],\n        timestamp: new Date().toISOString(),\n        path: request.url,\n    });\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppClusterService.html":{"url":"injectables/AppClusterService.html","title":"injectable - AppClusterService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AppClusterService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/services/cluster.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                    Readonly\n                                Logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                    Async\n                                clusterize\n                            \n                            \n                                    Private\n                                    Static\n                                setTimeouts\n                            \n                            \n                                    Private\n                                    Static\n                                trackOfhttpRequests\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        Async\n                        clusterize\n                        \n                    \n                \n            \n            \n                \n                    \n                    clusterize(callback: CallbackFunction)\n                \n            \n\n\n            \n                \n                    Defined in src/core/services/cluster.service.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    callback\n                                    \n                                                CallbackFunction\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Static\n                        setTimeouts\n                        \n                    \n                \n            \n            \n                \n                    \n                    setTimeouts(worker: any)\n                \n            \n\n\n            \n                \n                    Defined in src/core/services/cluster.service.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    worker\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Static\n                        trackOfhttpRequests\n                        \n                    \n                \n            \n            \n                \n                    \n                    trackOfhttpRequests()\n                \n            \n\n\n            \n                \n                    Defined in src/core/services/cluster.service.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        Logger\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Logger(AppClusterService.name)\n                    \n                \n                    \n                        \n                                Defined in src/core/services/cluster.service.ts:11\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import cluster from 'cluster';\nimport { cpus } from 'os';\nimport { INestApplication, Injectable, Logger, Scope } from '@nestjs/common';\ntype CallbackFunction = () => Promise;\nconst numCPUs: number = cpus().length;\ninterface Msg {\n  cmd: string;\n}\n@Injectable({ scope: Scope.DEFAULT })\nexport class AppClusterService {\n  static readonly Logger = new Logger(AppClusterService.name);\n  static async clusterize(callback: CallbackFunction): Promise {\n    if (cluster.isPrimary) {\n      AppClusterService.Logger.log(`Number of CPUs is ${numCPUs}`);\n      AppClusterService.Logger.log(`Master server started on ${process.pid}`);\n      for (let i = 0; i  {\n        AppClusterService.Logger.log(\n          `Worker ${worker.process.pid} died. Restarting`,\n          signal || code,\n        );\n        cluster.fork();\n      });\n    } else {\n      AppClusterService.Logger.log(`Cluster server started on ${process.pid}`);\n      const app = await callback();\n      process.on('SIGINT', () => app.close());\n      process.on('SIGTERM', () => app.close());\n      process.on('SIGUSR2', async () => app.close());\n      process.on('message', (msg) => {\n        if (msg === 'shutdown') {\n          app.close();\n        }\n      });\n    }\n  }\n\n  private static trackOfhttpRequests() {\n    let numReqs = 0;\n    for (const id in cluster.workers) {\n      cluster.workers[id].on('message', messageHandler);\n    }\n    setInterval(() => {\n      AppClusterService.Logger.log(`numReqs = ${numReqs}`);\n    }, 1000);\n    function messageHandler(msg: Msg) {\n      if (msg.cmd && msg.cmd === 'notifyRequest') {\n        numReqs = numReqs + 1;\n      }\n    }\n  }\n\n  private static setTimeouts(worker: any) {\n    let timeout: NodeJS.Timeout;\n    worker.on('listening', (address) => {\n      worker.send('shutdown');\n      worker.disconnect();\n      timeout = setTimeout(() => {\n        worker.kill();\n      }, 2000);\n    });\n    worker.on('disconnect', () => {\n      clearTimeout(timeout);\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                /\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Async\n                                generateEncryptedValue\n                            \n                            \n                                getLocation\n                            \n                            \n                                set\n                            \n                            \n                                sse\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Async\n                        generateEncryptedValue\n                        \n                    \n                \n            \n            \n                \n                    \n                    generateEncryptedValue(value: string, bytes: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app.controller.ts:80\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    bytes\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getLocation\n                        \n                    \n                \n            \n            \n                \ngetLocation(request: Request, response: Response, next: NextFunction)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('get')@HttpCode(200)\n                \n            \n\n            \n                \n                    Defined in src/app.controller.ts:54\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    response\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                            NextFunction\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        set\n                        \n                    \n                \n            \n            \n                \nset(request: Request, response: Response, next: NextFunction)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('set')@HttpCode(200)\n                \n            \n\n            \n                \n                    Defined in src/app.controller.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    response\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                            NextFunction\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sse\n                        \n                    \n                \n            \n            \n                \nsse()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Sse('sse')\n                \n            \n\n            \n                \n                    Defined in src/app.controller.ts:74\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Get,\n  HttpCode,\n  Logger,\n  Next,\n  Req,\n  Res,\n  Sse,\n} from '@nestjs/common';\nimport { ApiTags } from '@nestjs/swagger';\nimport path from 'path';\nimport { Reader } from '@maxmind/geoip2-node';\nimport { Observable, map, timeout } from 'rxjs';\nimport { NextFunction, Request, Response } from 'express';\nimport { randomBytes, scrypt, createCipheriv } from 'crypto';\nimport { promisify } from 'util';\nimport IP from 'ip';\n@ApiTags('/')\n@Controller('/')\nexport class AppController {\n  private readonly Logger = new Logger(AppController.name);\n  @Get('set')\n  @HttpCode(200)\n  set(\n    @Req() request: Request,\n    @Res() response: Response,\n    @Next() next: NextFunction\n  ) {\n    (async () => {\n      try {\n        if (!request.signedCookies['_id']) {\n          const _id = await this.generateEncryptedValue('USER', 16);\n          response.cookie('_id', _id, {\n            httpOnly: true,\n            secure: process.env.NODE_ENV === 'production' ? true : false,\n            sameSite: 'strict',\n            signed: true,\n            path: '/',\n            maxAge: 30 * 24 * 60 * 60 * 1000,\n          });\n          return response.json({ _id: _id});\n        }\n        return response.json({ _id: request.signedCookies['_id']});\n      } catch (err: unknown) {\n        this.Logger.error(err);\n        next(err);\n      }\n    })();\n  }\n\n  @Get('get')\n  @HttpCode(200)\n  getLocation(\n    @Req() request: Request,\n    @Res() response: Response,\n    @Next() next: NextFunction\n  ) {\n    (async () => {\n      try {\n        const ipAddress = IP.address();\n        const reader = await Reader.open(path.join(__dirname, 'GeoLite2-Country.mmdb'));\n        const res = reader.country(ipAddress);\n        return response.json(res.country.isoCode);\n      } catch (err) {\n        this.Logger.error(err);\n        next(err);\n      }\n    })();\n  }\n\n\n  @Sse('sse')\n  sse(): Observable {\n    return timeout(1000).apply(\n      map((_) => ({ data: { hello: 'world' } } as MessageEvent)),\n    );\n  }\n\n  private async generateEncryptedValue(\n    value: string,\n    bytes: number,\n  ): Promise {\n    const iv = randomBytes(bytes);\n    const API_KEY = process.env.API_KEY.toString();\n    const key = (await promisify(scrypt)(API_KEY, 'salt', 32)) as Buffer;\n    const cipher = createCipheriv('aes-256-ctr', key, iv);\n    return Buffer.concat([cipher.update(value), cipher.final()]).toString(\n      'base64',\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppListener.html":{"url":"injectables/AppListener.html","title":"injectable - AppListener","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AppListener\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/services/events.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                handleTokenDeletedEvent\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        handleTokenDeletedEvent\n                        \n                    \n                \n            \n            \n                \nhandleTokenDeletedEvent(event: JwtRefreshTokenDeletedEvent)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @OnEvent('refreshtoken.deleted')\n                \n            \n\n            \n                \n                    Defined in src/core/services/events.service.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                JwtRefreshTokenDeletedEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         JwtRefreshTokenDeletedEvent\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { Scope } from '@nestjs/common/interfaces';\nimport { OnEvent } from '@nestjs/event-emitter';\nimport { JwtRefreshTokenDeletedEvent } from '../events/jwt-refresh-token-deleted.evet';\n\n@Injectable({ scope: Scope.DEFAULT })\nexport class AppListener {\n  @OnEvent('refreshtoken.deleted')\n  handleTokenDeletedEvent(event: JwtRefreshTokenDeletedEvent) {\n    return event;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAdminModule\n\nAdminModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAdminModule->AppModule\n\n\n\n\n\nAuthModule\n\nAuthModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nCartModule\n\nCartModule\n\nAppModule -->\n\nCartModule->AppModule\n\n\n\n\n\nCategoriesModule\n\nCategoriesModule\n\nAppModule -->\n\nCategoriesModule->AppModule\n\n\n\n\n\nCoreModule\n\nCoreModule\n\nAppModule -->\n\nCoreModule->AppModule\n\n\n\n\n\nMailModule\n\nMailModule\n\nAppModule -->\n\nMailModule->AppModule\n\n\n\n\n\nOrdersModule\n\nOrdersModule\n\nAppModule -->\n\nOrdersModule->AppModule\n\n\n\n\n\nOwnerModule\n\nOwnerModule\n\nAppModule -->\n\nOwnerModule->AppModule\n\n\n\n\n\nProductModule\n\nProductModule\n\nAppModule -->\n\nProductModule->AppModule\n\n\n\n\n\nReviewsModule\n\nReviewsModule\n\nAppModule -->\n\nReviewsModule->AppModule\n\n\n\n\n\nTelegramModule\n\nTelegramModule\n\nAppModule -->\n\nTelegramModule->AppModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nAppModule -->\n\nUsersModule->AppModule\n\n\n\n\n\nAppClusterService\n\nAppClusterService\n\nAppModule -->\n\nAppClusterService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppClusterService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AdminModule\n                        \n                        \n                            AuthModule\n                        \n                        \n                            CartModule\n                        \n                        \n                            CategoriesModule\n                        \n                        \n                            CoreModule\n                        \n                        \n                            MailModule\n                        \n                        \n                            OrdersModule\n                        \n                        \n                            OwnerModule\n                        \n                        \n                            ProductModule\n                        \n                        \n                            ReviewsModule\n                        \n                        \n                            TelegramModule\n                        \n                        \n                            UsersModule\n                        \n                    \n                \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        configure\n                        \n                    \n                \n            \n            \n                \nconfigure(consumer: MiddlewareConsumer)\n                \n            \n\n\n            \n                \n                    Defined in src/app.module.ts:173\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    consumer\n                                    \n                                            MiddlewareConsumer\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        import {\n  CacheModule,\n  MiddlewareConsumer,\n  Module,\n  NestModule,\n  RequestMethod,\n} from '@nestjs/common';\nimport { SequelizeModule } from '@nestjs/sequelize';\nimport { AdminModule } from './admin/admin.module';\nimport { ConfigModule } from '@nestjs/config';\nimport { Admin } from './admin/models/admin.model';\nimport { AuthModule } from './auth/auth.module';\nimport { AppClusterService } from './core/services/cluster.service';\nimport { ThrottlerModule } from '@nestjs/throttler';\nimport { ServeStaticModule } from '@nestjs/serve-static';\nimport path, { extname } from 'path';\nimport { AdminRefreshToken } from './admin/models/admin.refresh.token.model';\nimport { MailModule } from './mail/mail.module';\nimport { CorsMiddleware } from './core/middlewares/cors.middleware';\nimport { APP_FILTER, APP_INTERCEPTOR } from '@nestjs/core';\nimport { AllExceptionsFilter } from './core/filters/all-exceptions.filter';\nimport { GlobalInterceptor } from './core/interceptors/global.interceptor';\nimport { CoreModule } from './core/core.module';\nimport { ProductModule } from './product/product.module';\nimport { UsersModule } from './users/users.module';\nimport { OwnerModule } from './owner/owner.module';\nimport { OrdersModule } from './orders/orders.module';\nimport { CartModule } from './cart/cart.module';\nimport { Owner } from './owner/models/owner.model';\nimport { OwnerRefreshToken } from './owner/models/owner.refresh.token.model';\nimport { User } from './users/models/user.model';\nimport { UserRefreshToken } from './users/models/user.refresh.token.model';\nimport { Role } from './roles/models/roles.model';\nimport { UserRoles } from './roles/models/user.roles.model';\nimport { AppController } from './app.controller';\nimport { TelegramModule } from './telegram/telegram.module';\nimport { getTelegramConfig } from './telegram/telegram.config';\nimport { CategoriesModule } from './categories/categories.module';\nimport { Product } from './product/models/product.model';\nimport { Category } from './categories/models/category.model';\nimport { ProductCategories } from './categories/models/product.categories.model';\nimport { CartProduct } from './cart/models/cart.product.model';\nimport { Cart } from './cart/models/cart.model';\nimport { Order } from './orders/models/order.model';\nimport { OrderProduct } from './orders/models/order.product.model';\nimport { MulterModule } from '@nestjs/platform-express';\nimport { BullModule } from '@nestjs/bull';\nimport { ReviewsModule } from './reviews/reviews.module';\nimport { Review } from './reviews/models/review.model';\nimport { ProductReviews } from './reviews/models/product.reviews.model';\nimport { BookmarksProducts } from './product/models/bookmark.products';\nimport { WatchedProducts } from './product/models/watched.products.model';\n@Module({\n  controllers: [AppController],\n  providers: [\n    AppClusterService,\n    {\n      provide: APP_FILTER,\n      useClass: AllExceptionsFilter,\n    },\n    {\n      provide: APP_INTERCEPTOR,\n      useClass: GlobalInterceptor,\n    },\n  ],\n  imports: [\n    ConfigModule.forRoot({\n      envFilePath: `.${process.env.NODE_ENV}.env`,\n      expandVariables: true,\n      isGlobal: true,\n    }),\n    TelegramModule.forRootAsync({\n      useFactory: getTelegramConfig,\n    }),\n    CacheModule.register({\n      ttl: 6000,\n      max: 100,\n      isGlobal: true,\n    }),\n    ThrottlerModule.forRoot({\n      ttl: 600,\n      limit: 100,\n    }),\n    BullModule.forRoot({\n      limiter: {\n        max: 5,\n        duration: 10000,\n        bounceBack: true,\n      },\n      redis: {\n        host: process.env.REDIS_HOST.toString(),\n        port: Number(process.env.REDIS_PORT),\n        db: 1,\n        password: process.env.REDIS_PASSWORD.toString(),\n      },\n      settings: {\n        lockDuration: 30000, \n        lockRenewTime: 15000, \n        stalledInterval: 30000, \n        maxStalledCount: 1, \n        guardInterval: 5000, \n        retryProcessDelay: 5000, \n        drainDelay: 5, \n      }\n    }),\n    // ServeStaticModule.forRoot({\n    //   rootPath: path.join(__dirname, 'static'),\n    //   renderPath: '*',\n    // }),  NOT WORKING\n    MulterModule.register({\n      dest: './static',\n      fileFilter(req, file, callback) {\n        const filetypes = /\\.(jpg|jpeg|png|gif)$/;\n        const extname = filetypes.test(path.extname(file.originalname).toLowerCase());\n        const mimetype = filetypes.test(file.mimetype);\n        if (mimetype && extname) {\n          return callback(null, true);\n        }\n        return callback(new Error('Only image files are allowed!'), false);\n      },\n      preservePath: true,\n      limits: {\n        fileSize: 12282810,\n      }\n    }),\n    SequelizeModule.forRoot({\n      dialect: 'postgres',\n      host: process.env.PGHOST.toString(),\n      port: Number(process.env.PGPORT),\n      username: process.env.PGUSER.toString(),\n      password: process.env.PGPASSWORD.toString(),\n      database: process.env.PGDATABASE.toString(),\n      models: [\n        ProductReviews,\n        Product,\n        Order,\n        OrderProduct,\n        Category,\n        ProductCategories,\n        Admin,\n        AdminRefreshToken,\n        Owner,\n        OwnerRefreshToken,\n        User,\n        UserRefreshToken,\n        Role,\n        UserRoles,\n        Cart,\n        CartProduct,\n        Review,\n        BookmarksProducts,\n        WatchedProducts,\n      ],\n      autoLoadModels: true,\n      synchronize: true,\n      retryDelay: 5,\n      retryAttempts: 5,\n    }),\n    AdminModule,\n    AuthModule,\n    MailModule,\n    CoreModule,\n    ProductModule,\n    UsersModule,\n    OwnerModule,\n    OrdersModule,\n    CartModule,\n    CategoriesModule,\n    ReviewsModule,\n  ],\n})\nexport class AppModule implements NestModule {\n  configure(consumer: MiddlewareConsumer) {\n    consumer.apply(CorsMiddleware).forRoutes({\n      path: '*',\n      method: RequestMethod.ALL,\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AuthController.html":{"url":"controllers/AuthController.html","title":"controller - AuthController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AuthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                auth\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                activate\n                            \n                            \n                                changePassword\n                            \n                            \n                                fetchRenewalCode\n                            \n                            \n                                login\n                            \n                            \n                                logout\n                            \n                            \n                                refresh\n                            \n                            \n                                resetPassword\n                            \n                            \n                                signup\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        activate\n                        \n                    \n                \n            \n            \n                \nactivate(activationLink: string, code: number, request: Request, response: Response, next: NextFunction, type: \"OWNER\" | \"ADMIN\", userAgent: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'Activating users'})@ApiResponse({status: 204})@Throttle(70, 700)@Get('activate/:link')@HttpCode(204)\n                \n            \n\n            \n                \n                    Defined in src/auth/auth.controller.ts:199\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    activationLink\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    code\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    request\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    response\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                            NextFunction\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    type\n                                    \n                                            \"OWNER\" | \"ADMIN\"\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    userAgent\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        changePassword\n                        \n                    \n                \n            \n            \n                \nchangePassword(response: Response, request: Request, next: NextFunction, changeDto: ChangeDto, userId: number, type: \"OWNER\" | \"ADMIN\" | null)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'Changing password'})@ApiResponse({status: 202})@Throttle(70, 700)@Patch('change')@UseGuards(JwtAuthGuard, AuthFerfershGuard)@HttpCode(202)\n                \n            \n\n            \n                \n                    Defined in src/auth/auth.controller.ts:174\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    response\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    request\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                            NextFunction\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    changeDto\n                                    \n                                                ChangeDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    userId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    type\n                                    \n                                            \"OWNER\" | \"ADMIN\" | null\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        fetchRenewalCode\n                        \n                    \n                \n            \n            \n                \nfetchRenewalCode(codeDto: CodeDto, locale: \"ua\" | \"ru\" | \"rs\" | \"en\")\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'Getting code'})@ApiResponse({status: 202})@Throttle(40, 400)@Post('code')@HttpCode(202)\n                \n            \n\n            \n                \n                    Defined in src/auth/auth.controller.ts:140\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    codeDto\n                                    \n                                                CodeDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    locale\n                                    \n                                            \"ua\" | \"ru\" | \"rs\" | \"en\"\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        login\n                        \n                    \n                \n            \n            \n                \nlogin(userDto: LoginDto, response: Response, request: Request, next: NextFunction, userAgent: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'Logging in users'})@ApiResponse({status: 200})@UseFilters(ApiExceptionFilter)@Throttle(40, 400)@HttpCode(200)@Post('login')\n                \n            \n\n            \n                \n                    Defined in src/auth/auth.controller.ts:82\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userDto\n                                    \n                                                LoginDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    response\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    request\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                            NextFunction\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    userAgent\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        logout\n                        \n                    \n                \n            \n            \n                \nlogout(response: Response, request: Request, next: NextFunction, type: \"OWNER\" | \"ADMIN\" | null)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'Loggigng out users'})@ApiResponse({status: 202})@Throttle(40, 400)@UseGuards(JwtAuthGuard)@HttpCode(202)@Post('logout')\n                \n            \n\n            \n                \n                    Defined in src/auth/auth.controller.ts:124\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    response\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    request\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                            NextFunction\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    type\n                                    \n                                            \"OWNER\" | \"ADMIN\" | null\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        refresh\n                        \n                    \n                \n            \n            \n                \nrefresh(response: Response, request: Request, next: NextFunction, type: \"OWNER\" | \"ADMIN\" | null, userAgent: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'Refreshing users'})@ApiResponse({status: 202})@Throttle(40, 400)@UseGuards(RefreshAuthGuard)@HttpCode(202)@Patch('refresh')\n                \n            \n\n            \n                \n                    Defined in src/auth/auth.controller.ts:106\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    response\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    request\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                            NextFunction\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    type\n                                    \n                                            \"OWNER\" | \"ADMIN\" | null\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    userAgent\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resetPassword\n                        \n                    \n                \n            \n            \n                \nresetPassword(resetDto: ResetDto, codeDto: CodeDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'Resetting password'})@ApiResponse({status: 201})@Throttle(45, 450)@Patch('reset')@HttpCode(201)\n                \n            \n\n            \n                \n                    Defined in src/auth/auth.controller.ts:157\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    resetDto\n                                    \n                                                ResetDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    codeDto\n                                    \n                                                CodeDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        signup\n                        \n                    \n                \n            \n            \n                \nsignup(userDto: SignupDto, response: Response, request: Request, next: NextFunction, userAgent: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'Signing up users'})@ApiResponse({status: 201})@Throttle(50, 600)@Post('signup')@HttpCode(201)\n                \n            \n\n            \n                \n                    Defined in src/auth/auth.controller.ts:58\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userDto\n                                    \n                                                SignupDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    response\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    request\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                            NextFunction\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    userAgent\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Post,\n  Body,\n  Put,\n  Req,\n  Res,\n  Next,\n  ClassSerializerInterceptor,\n  ParseIntPipe,\n} from '@nestjs/common';\nimport {\n  Get,\n  HttpCode,\n  Param,\n  Patch,\n  Query,\n  UseFilters,\n  UseGuards,\n  UseInterceptors,\n} from '@nestjs/common/decorators';\nimport { AuthService } from './auth.service';\nimport { LoginDto } from './dto/login.dto';\nimport { ResetDto } from './dto/reset.password.dto';\nimport { SignupDto } from './dto/signup.dto';\nimport { ApiOperation, ApiResponse, ApiTags } from '@nestjs/swagger';\nimport { NextFunction, Request, Response } from 'express';\nimport { JwtAuthGuard } from '../common/guards/jwt-auth.guard';\nimport { Throttle } from '@nestjs/throttler';\nimport { ThrottlerBehindProxyGuard } from '../common/guards/throttler-behind-proxy.guard';\nimport { Type } from '../common/decorators/user-type.decorator';\nimport { UserAgent } from '../common/decorators/user-agent.decorator';\nimport { ValidateDto } from '../common/pipes/validation.pipe';\nimport { RefreshAuthGuard } from '../common/guards/refresh.guard';\nimport { CodeDto } from '../core/interfaces/auth.interfaces';\nimport { AuthFerfershGuard } from '../common/guards/jw-refresh.guard';\nimport { ChangeDto } from './dto/change.password.dto';\nimport { UserId } from '../common/decorators/user.id.decorator';\nimport { ApiErrorExceptionFilter } from '../common/filters/error-handler.filter';\nimport { AppListener } from '../core/services/events.service';\nimport { ApiExceptionFilter } from '../common/filters/api-exception.filter';\n@UseGuards(ThrottlerBehindProxyGuard)\n@UseFilters(ApiErrorExceptionFilter, ApiExceptionFilter)\n@UseInterceptors(ClassSerializerInterceptor)\n@ApiTags('auth')\n@Controller('auth')\nexport class AuthController {\n  constructor(\n    private authService: AuthService,\n    private appListener: AppListener,\n  ) {}\n\n  @ApiOperation({ summary: 'Signing up users' })\n  @ApiResponse({ status: 201 })\n  @Throttle(50, 600)\n  @Post('signup')\n  @HttpCode(201)\n  signup(\n    @Body(new ValidateDto()) userDto: SignupDto,\n    @Res() response: Response,\n    @Req() request: Request,\n    @Next() next: NextFunction,\n    @UserAgent('USER-AGENT') userAgent: string,\n  ): void {\n    (async () => {\n      return this.authService.signup(\n        userDto,\n        response,\n        request,\n        next,\n        userAgent,\n      );\n    })();\n  }\n\n  @ApiOperation({ summary: 'Logging in users' })\n  @ApiResponse({ status: 200 })\n  @UseFilters(ApiExceptionFilter)\n  @Throttle(40, 400)\n  @HttpCode(200)\n  @Post('login')\n  login(\n    @Body(new ValidateDto()) userDto: LoginDto,\n    @Res() response: Response,\n    @Req() request: Request,\n    @Next() next: NextFunction,\n    @UserAgent('USER-AGENT') userAgent: string,\n  ): void {\n    (async () => {\n      return this.authService.login(\n        userDto,\n        response,\n        request,\n        next,\n        userAgent,\n      );\n    })();\n  }\n\n  @ApiOperation({ summary: 'Refreshing users' })\n  @ApiResponse({ status: 202 })\n  @Throttle(40, 400)\n  @UseGuards(RefreshAuthGuard)\n  @HttpCode(202)\n  @Patch('refresh')\n  refresh(\n    @Res() response: Response,\n    @Req() request: Request,\n    @Next() next: NextFunction,\n    @Type('REFRESHTOKEN') type: 'OWNER' | 'ADMIN' | null,\n    @UserAgent('USER-AGENT') userAgent: string,\n  ) {\n    (async () => {\n      return this.authService.refresh(response, request, next, type, userAgent);\n    })();\n  }\n\n  @ApiOperation({ summary: 'Loggigng out users' })\n  @ApiResponse({ status: 202 })\n  @Throttle(40, 400)\n  @UseGuards(JwtAuthGuard)\n  @HttpCode(202)\n  @Post('logout')\n  logout(\n    @Res() response: Response,\n    @Req() request: Request,\n    @Next() next: NextFunction,\n    @Type('REFRESHTOKEN') type: 'OWNER' | 'ADMIN' | null,\n  ): void {\n    (async () => {\n      return this.authService.logout(response, request, next, type);\n    })();\n  }\n  \n  @ApiOperation({ summary: 'Getting code' })\n  @ApiResponse({ status: 202 })\n  @Throttle(40, 400)\n  @Post('code')\n  @HttpCode(202)\n  fetchRenewalCode(\n    @Type('CODEDTO') codeDto: CodeDto,\n    @Query('locale') locale: 'ua' | 'ru' | 'rs' | 'en',\n  ): Promise {\n    try {\n      return this.authService.setCode(codeDto, locale);\n    } catch (error: unknown) {\n      throw error;\n    }\n  }\n\n  // tslint:disable-next-line: promise-function-async\n  @ApiOperation({ summary: 'Resetting password' })\n  @ApiResponse({ status: 201 })\n  @Throttle(45, 450)\n  @Patch('reset')\n  @HttpCode(201)\n  resetPassword(\n    @Body(new ValidateDto()) resetDto: ResetDto,\n    @Type('CODEDTO') codeDto: CodeDto,\n  ): Promise{\n    try {\n      return this.authService.resetPassword(resetDto, codeDto);\n    } catch (error: unknown) {\n      throw error;\n    }\n  }\n\n  @ApiOperation({ summary: 'Changing password' })\n  @ApiResponse({ status: 202 })\n  @Throttle(70, 700)\n  @Patch('change')\n  @UseGuards(JwtAuthGuard, AuthFerfershGuard)\n  @HttpCode(202)\n  changePassword(\n    @Res() response: Response,\n    @Req() request: Request,\n    @Next() next: NextFunction,\n    @Body() changeDto: ChangeDto,\n    @UserId('USER-ID') userId: number,\n    @Type('REFRESHTOKEN') type: 'OWNER' | 'ADMIN' | null,\n  ): void {\n    (async () => {\n      return this.authService.changePassword(\n        response,\n        request,\n        next,\n        changeDto,\n        userId,\n        type,\n      );\n    })();\n  }\n\n  @ApiOperation({ summary: 'Activating users' })\n  @ApiResponse({ status: 204 })\n  @Throttle(70, 700)\n  @Get('activate/:link')\n  @HttpCode(204)\n  activate(\n    @Param('link') activationLink: string,\n    @Query('code', ParseIntPipe) code: number,\n    @Req() request: Request,\n    @Res() response: Response,\n    @Next() next: NextFunction,\n    @Type('ACTIVATE') type: 'OWNER' | 'ADMIN',\n    @UserAgent('USER-AGENT') userAgent: string,\n  ): void {\n    (async () => {\n      return this.authService.activate(\n        request,\n        response,\n        next,\n        activationLink,\n        code,\n        type,\n        userAgent,\n      );\n    })();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/AuthFerfershGuard.html":{"url":"guards/AuthFerfershGuard.html","title":"guard - AuthFerfershGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    AuthFerfershGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/common/guards/jw-refresh.guard.ts\n            \n\n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(ownerService: OwnerService, adminService: AdminService, userService: UsersService)\n                    \n                \n                        \n                            \n                                Defined in src/common/guards/jw-refresh.guard.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        ownerService\n                                                  \n                                                        \n                                                                        OwnerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        adminService\n                                                  \n                                                        \n                                                                        AdminService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UsersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate(context: ExecutionContext)\n                \n            \n\n\n            \n                \n                    Defined in src/common/guards/jw-refresh.guard.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                            ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     boolean | Promise | Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import {\n  CanActivate,\n  ExecutionContext,\n  HttpStatus,\n  Injectable,\n  Scope,\n} from '@nestjs/common';\nimport { Observable } from 'rxjs';\nimport { AdminService } from '../../admin/services/admin.service';\nimport { OwnerService } from '../../owner/services/owner.service';\nimport { UsersService } from '../../users/services/users.service';\nimport { Payload } from '../../core/interfaces/auth.interfaces';\nimport { USER_NOT_FOUND } from '../../users/constants/user.constants';\nimport { ApiException } from '../exceptions/api.exception';\nimport { INVALID_REQUEST, NO_LINK_PROVIDED, USER_NOT_DETECTED } from '../../auth/auth.constants';\n\n@Injectable({ scope: Scope.REQUEST })\nexport class AuthFerfershGuard implements CanActivate {\n  constructor(\n    private readonly ownerService: OwnerService,\n    private readonly adminService: AdminService,\n    private readonly userService: UsersService,\n  ) {}\n\n  canActivate(\n    context: ExecutionContext,\n  ): boolean | Promise | Observable {\n    return (async () => {\n      const req = context.switchToHttp().getRequest();\n      const payload: Payload = req?.payload;\n      const type: 'OWNER' | 'ADMIN' | null = req['type'];\n      if (!payload) {\n        throw new ApiException(HttpStatus.UNAUTHORIZED, 'Unathorized!', INVALID_REQUEST);\n      }\n      if (type === undefined) {\n        throw new ApiException(HttpStatus.UNAUTHORIZED, 'Unathorized!', USER_NOT_DETECTED);\n      }\n      if (type && type === 'OWNER') {\n        const activationLink: string = req?.signedCookies['user-id'];\n        if (!activationLink) {\n          throw new ApiException(HttpStatus.FORBIDDEN, 'Forbidden!', NO_LINK_PROVIDED);\n        }\n        return this.ownerService.checkOwner(payload, activationLink);\n      }\n      if (type && type === 'ADMIN') {\n        const activationLink: string = req?.signedCookies['user-id'];\n        if (!activationLink) {\n          throw new ApiException(HttpStatus.FORBIDDEN, 'Forbidden!', NO_LINK_PROVIDED);\n        }\n        return this.adminService.checkAdmin(payload, activationLink);\n      }\n      const user = await this.userService.getUserById(payload.userId);\n      if (!user) {\n        throw new ApiException(HttpStatus.NOT_FOUND, 'Not found!', USER_NOT_FOUND);  \n      }\n      return true;\n    })();\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthMiddleware.html":{"url":"injectables/AuthMiddleware.html","title":"injectable - AuthMiddleware","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthMiddleware\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/middlewares/auth.middleware.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                use\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        use\n                        \n                    \n                \n            \n            \n                \nuse(req: Request, res: Response, next: NextFunction)\n                \n            \n\n\n            \n                \n                    Defined in src/common/middlewares/auth.middleware.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                            NextFunction\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  Injectable,\n  NestMiddleware,\n  Next,\n  Req,\n  Res,\n  Scope,\n} from '@nestjs/common';\nimport { Request, Response, NextFunction } from 'express';\n\n@Injectable({ scope: Scope.REQUEST })\nexport class AuthMiddleware implements NestMiddleware {\n  use(@Req() req: Request, @Res() res: Response, @Next() next: NextFunction) {\n    try {\n      const userAgent = req.headers['user-agent'];\n      res.setHeader('Access-Control-Request-Headers', 'Authorization');\n      res.setHeader('Access-Control-Request-Method', 'POST, GET, PUT, PATCH');\n      res.setHeader('Timing-Allow-Origin', `${process.env.ACCESS_ALLOW}`);\n      req['userAgent'] = userAgent;\n      return next();\n    } catch (err: unknown) {\n      return next(err);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_exports\n\n\n\ncluster_AuthModule_providers\n\n\n\n\nAdminJwtRefreshService \n\nAdminJwtRefreshService \n\n\n\nAuthService \n\nAuthService \n\n\n\nOwnerJwtRefreshService \n\nOwnerJwtRefreshService \n\n\n\nAuthModule\n\nAuthModule\n\nAdminJwtRefreshService  -->\n\nAuthModule->AdminJwtRefreshService \n\n\n\nAuthService  -->\n\nAuthModule->AuthService \n\n\n\nOwnerJwtRefreshService  -->\n\nAuthModule->OwnerJwtRefreshService \n\n\n\n\n\nAdminJwtRefreshService\n\nAdminJwtRefreshService\n\nAuthModule -->\n\nAdminJwtRefreshService->AuthModule\n\n\n\n\n\nAppListener\n\nAppListener\n\nAuthModule -->\n\nAppListener->AuthModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nMailService\n\nMailService\n\nAuthModule -->\n\nMailService->AuthModule\n\n\n\n\n\nOwnerJwtRefreshService\n\nOwnerJwtRefreshService\n\nAuthModule -->\n\nOwnerJwtRefreshService->AuthModule\n\n\n\n\n\nTasksService\n\nTasksService\n\nAuthModule -->\n\nTasksService->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/auth/auth.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AdminJwtRefreshService\n                        \n                        \n                            AppListener\n                        \n                        \n                            AuthService\n                        \n                        \n                            MailService\n                        \n                        \n                            OwnerJwtRefreshService\n                        \n                        \n                            TasksService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AuthController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AdminJwtRefreshService\n                        \n                        \n                            AuthService\n                        \n                        \n                            OwnerJwtRefreshService\n                        \n                    \n                \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        configure\n                        \n                    \n                \n            \n            \n                \nconfigure(consumer: MiddlewareConsumer)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.module.ts:98\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    consumer\n                                    \n                                            MiddlewareConsumer\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        import {\n  forwardRef,\n  MiddlewareConsumer,\n  Module,\n  NestModule,\n  RequestMethod,\n} from '@nestjs/common';\nimport { AuthService } from './auth.service';\nimport { AuthController } from './auth.controller';\nimport { AdminModule } from '../admin/admin.module';\nimport { JwtModule } from '@nestjs/jwt';\nimport { MailService } from '../mail/mail.service';\nimport { APP_FILTER, APP_GUARD } from '@nestjs/core';\nimport { HttpExceptionFilter } from '../common/filters/http-exception.filter';\nimport { AuthMiddleware } from '../common/middlewares/auth.middleware';\nimport { ThrottlerGuard } from '@nestjs/throttler';\nimport { OwnerModule } from '../owner/owner.module';\nimport { AdminJwtRefreshService } from '../admin/services/jwt-refresh.service';\nimport { OwnerJwtRefreshService } from '../owner/services/jwt-refresh.service';\nimport { UsersModule } from '../users/users.module';\nimport { InitializeUserMiddleware } from '../common/middlewares/initialize-user.middleware';\nimport { InitializeEmailMiddleware } from '../common/middlewares/initialize-email.middleware';\nimport { ActivateMiddleware } from '../common/middlewares/activate.middleware';\nimport RequestValidator from '../common/pipes/body-validator.pipe';\nimport { LoginDto } from './dto/login.dto';\nimport { SignupDto } from './dto/signup.dto';\nimport { ResetDto } from './dto/reset.password.dto';\nimport { ChangeDto } from './dto/change.password.dto';\nimport { SequelizeModule } from '@nestjs/sequelize';\nimport { Admin } from '../admin/models/admin.model';\nimport { AdminRefreshToken } from '../admin/models/admin.refresh.token.model';\nimport { Owner } from '../owner/models/owner.model';\nimport { OwnerRefreshToken } from '../owner/models/owner.refresh.token.model';\nimport { Role } from '../roles/models/roles.model';\nimport { UserRoles } from '../roles/models/user.roles.model';\nimport { User } from '../users/models/user.model';\nimport { UserRefreshToken } from '../users/models/user.refresh.token.model';\nimport { ConfigModule } from '@nestjs/config';\nimport { TasksService } from '../core/services/scedule.service';\nimport { CoreModule } from '../core/core.module';\nimport { AppListener } from '../core/services/events.service';\n@Module({\n  providers: [\n    AppListener,\n    AuthService,\n    JwtModule,\n    AdminJwtRefreshService,\n    OwnerJwtRefreshService,\n    MailService,\n    TasksService,\n    {\n      provide: APP_GUARD,\n      useClass: ThrottlerGuard,\n    },\n    {\n      provide: APP_FILTER,\n      useClass: HttpExceptionFilter,\n    },\n  ],\n  controllers: [AuthController],\n  imports: [\n    ConfigModule.forRoot({\n      envFilePath: `.${process.env.NODE_ENV}.env`,\n      expandVariables: true,\n      isGlobal: true,\n    }),\n    SequelizeModule.forFeature([\n      User,\n      UserRefreshToken,\n      Admin,\n      AdminRefreshToken,\n      Owner,\n      Role,\n      UserRoles,\n      OwnerRefreshToken,\n    ]),\n    forwardRef(() => CoreModule),\n    forwardRef(() => AdminModule),\n    forwardRef(() => OwnerModule),\n    forwardRef(() => UsersModule),\n    JwtModule.register({\n      secret:\n        process.env.JWT_ACCESS_SECRET.toString().trim() ||\n        'knfdljhtop6hohjlymhnhgnljjukfty6yujhjbjlvcglki',\n      signOptions: {\n        expiresIn: 3600000,\n      },\n    }),\n  ],\n  exports: [\n    AuthService,\n    JwtModule,\n    AdminJwtRefreshService,\n    OwnerJwtRefreshService,\n  ],\n})\nexport class AuthModule implements NestModule {\n  configure(consumer: MiddlewareConsumer) {\n    consumer\n      .apply(AuthMiddleware)\n      .forRoutes(\n        { path: 'auth/login', method: RequestMethod.POST },\n        { path: 'auth/signup', method: RequestMethod.POST },\n        { path: 'auth/refresh', method: RequestMethod.PATCH },\n        { path: 'auth/change', method: RequestMethod.PATCH },\n      );\n    consumer\n      .apply(InitializeUserMiddleware)\n      .forRoutes(\n        { path: 'auth/logout', method: RequestMethod.POST },\n        { path: 'auth/refresh', method: RequestMethod.PATCH },\n        { path: 'auth/change', method: RequestMethod.PATCH },\n      );\n    consumer\n      .apply(InitializeEmailMiddleware)\n      .forRoutes(\n        { path: 'auth/code', method: RequestMethod.POST },\n        { path: 'auth/reset', method: RequestMethod.PATCH },\n      );\n    consumer\n      .apply(ActivateMiddleware)\n      .forRoutes({ path: 'auth/activate/:link', method: RequestMethod.GET });\n    consumer\n      .apply(RequestValidator.validate(LoginDto))\n      .forRoutes({ path: 'auth/login', method: RequestMethod.POST });\n    consumer\n      .apply(RequestValidator.validate(SignupDto))\n      .forRoutes({ path: 'auth/signup', method: RequestMethod.PUT });\n    consumer\n      .apply(RequestValidator.validate(ResetDto))\n      .forRoutes({ path: 'auth/reset', method: RequestMethod.PATCH });\n    consumer\n      .apply(RequestValidator.validate(ChangeDto))\n      .forRoutes({ path: 'auth/change', method: RequestMethod.PATCH });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AuthUser.html":{"url":"interfaces/AuthUser.html","title":"interface - AuthUser","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  AuthUser\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/interfaces/auth.interfaces.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            accessToken\n                                        \n                                \n                                \n                                        \n                                            user\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        accessToken\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        accessToken:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        user\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        user:     ReturnedUser | ReturnedAdmin | ReturnedOwner\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     ReturnedUser | ReturnedAdmin | ReturnedOwner\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Role } from '../../roles/models/roles.model';\nexport interface Payload {\n  email: string;\n  userId: number;\n  userActivationLink: string;\n  isUserActivated: boolean;\n  roles?: Role[];\n}\n\nexport interface Tokens {\n  refreshToken: string;\n  accessToken: string;\n  expireDate: Date;\n}\n\nexport interface AuthUser {\n  accessToken: string;\n  user: ReturnedUser | ReturnedAdmin | ReturnedOwner;\n}\n\nexport interface ReturnedUser {\n  id: number;\n  name: string;\n  surname: string;\n  phoneNumber: string;\n  email: string;\n  country: string | null;\n  city: string | null;\n  postOffice: string | null;\n  type: 'USER';\n}\n\nexport interface ReturnedOwner {\n  id: number;\n  name: string;\n  surname: string;\n  phoneNumber: string;\n  email: string;\n  type: 'OWNER';\n}\n\nexport interface ReturnedAdmin {\n  id: number;\n  name: string;\n  surname: string;\n  phoneNumber: string;\n  email: string;\n  type: 'ADMIN';\n}\n\nexport interface CodeDto {\n  type: 'OWNER' | 'ADMIN' | null;\n  email: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BadRequestError.html":{"url":"classes/BadRequestError.html","title":"class - BadRequestError","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BadRequestError\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/exceptions/validate-dto.exception.error.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        ApiError\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                rawErrors\n                            \n                            \n                                statusCode\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(message: string, errors: string[])\n                    \n                \n                        \n                            \n                                Defined in src/common/exceptions/validate-dto.exception.error.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        message\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        errors\n                                                  \n                                                        \n                                                                    string[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        rawErrors\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                        \n                            \n                                Inherited from         ApiError\n\n                            \n                        \n                    \n                        \n                                Defined in         ApiError:5\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        statusCode\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                Inherited from         ApiError\n\n                            \n                        \n                    \n                        \n                                Defined in         ApiError:4\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { HttpStatus } from '@nestjs/common';\n\nexport class ApiError extends Error {\n  statusCode: number;\n  rawErrors: string[] = [];\n  constructor(statusCode: number, message: string, rawErrors?: string[]) {\n    super(message);\n\n    this.statusCode = statusCode;\n    if (rawErrors) {\n      this.rawErrors = rawErrors;\n    }\n    Error.captureStackTrace(this, this.constructor);\n  }\n}\n\nexport class NotFoundError extends ApiError {\n  constructor(path: string) {\n    super(HttpStatus.NOT_FOUND, `The requested path ${path} not found!`);\n  }\n}\n\nexport class BadRequestError extends ApiError {\n  constructor(message: string, errors: string[]) {\n    super(HttpStatus.BAD_REQUEST, message, errors);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BanUserDto.html":{"url":"classes/BanUserDto.html","title":"class - BanUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BanUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/dto/ban-user.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                banReason\n                            \n                            \n                                    Readonly\n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        banReason\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'User is not valid!', description: 'some reason'})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/ban-user.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        userId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: '1', description: 'unique identifier'})@IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/ban-user.dto.ts:7\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsNumber, IsString } from 'class-validator';\n\nexport class BanUserDto {\n  @ApiProperty({ example: '1', description: 'unique identifier' })\n  @IsNumber()\n  readonly userId: number;\n\n  @ApiProperty({ example: 'User is not valid!', description: 'some reason' })\n  @IsString()\n  readonly banReason: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BookmarksProducts.html":{"url":"classes/BookmarksProducts.html","title":"class - BookmarksProducts","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BookmarksProducts\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/product/models/bookmark.products.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    Model\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                id\n                            \n                            \n                                    Public\n                                productId\n                            \n                            \n                                    Public\n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: undefined, unique: true, autoIncrement: true, primaryKey: true, allowNull: false, field: 'id'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/product/models/bookmark.products.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        productId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ForeignKey(undefined)@Column({type: undefined, field: 'productId'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/product/models/bookmark.products.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        userId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ForeignKey(undefined)@Column({type: undefined, field: 'userId'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/product/models/bookmark.products.ts:28\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  Column,\n  DataType,\n  Table,\n  Model,\n  ForeignKey,\n} from 'sequelize-typescript';\nimport { User } from '../../users/models/user.model';\nimport { Product } from '../../product/models/product.model';\n\n@Table({ tableName: 'BOOKMARKS_Products', createdAt: false, updatedAt: false })\nexport class BookmarksProducts extends Model {\n  @Column({\n    type: DataType.INTEGER,\n    unique: true,\n    autoIncrement: true,\n    primaryKey: true,\n    allowNull: false,\n    field: 'id',\n  })\n  public id: number;\n\n  @ForeignKey(() => User)\n  @Column({\n    type: DataType.INTEGER,\n    field: 'userId',\n  })\n  public userId: number;\n\n  @ForeignKey(() => Product)\n  @Column({\n    type: DataType.INTEGER,\n    field: 'productId',\n  })\n  public productId: number;\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/CardController.html":{"url":"controllers/CardController.html","title":"controller - CardController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  CardController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/cart/cart.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                card\n            \n\n\n\n\n\n\n\n    \n\n\n    \n        import { Controller, UseFilters } from '@nestjs/common';\nimport { ApiExceptionFilter } from '../common/filters/api-exception.filter';\nimport { ApiErrorExceptionFilter } from '../common/filters/error-handler.filter';\n@UseFilters(ApiErrorExceptionFilter, ApiExceptionFilter)\n@Controller('card')\nexport class CardController {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CardService.html":{"url":"injectables/CardService.html","title":"injectable - CardService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  CardService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/cart/cart.service.ts\n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable, Scope } from '@nestjs/common';\n\n@Injectable({ scope: Scope.TRANSIENT })\nexport class CardService {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Cart.html":{"url":"classes/Cart.html","title":"class - Cart","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Cart\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/cart/models/cart.model.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    Model\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                cartProducts\n                            \n                            \n                                    Private\n                                cartStatus\n                            \n                            \n                                    Public\n                                id\n                            \n                            \n                                    Private\n                                products\n                            \n                            \n                                    Public\n                                totalPrice\n                            \n                            \n                                    Private\n                                user\n                            \n                            \n                                    Public\n                                userId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getCartProducts\n                            \n                            \n                                getCartStatus\n                            \n                            \n                                getProducts\n                            \n                            \n                                getUser\n                            \n                            \n                                setCartStatus\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        cartProducts\n                        \n                    \n                \n            \n                \n                    \n                        Type :     CartProduct[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @HasMany(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/cart/models/cart.model.ts:54\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        cartStatus\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: undefined, unique: false, field: 'cartStatus'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/cart/models/cart.model.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: undefined, unique: true, autoIncrement: true, primaryKey: true, field: 'id'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/cart/models/cart.model.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        products\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Product[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @BelongsToMany(undefined, undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/cart/models/cart.model.ts:51\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        totalPrice\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: undefined, unique: false, field: 'totalPrice'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/cart/models/cart.model.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @BelongsTo(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/cart/models/cart.model.ts:48\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        userId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ForeignKey(undefined)@Column({type: undefined, field: 'userId'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/cart/models/cart.model.ts:45\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getCartProducts\n                        \n                    \n                \n            \n            \n                \ngetCartProducts()\n                \n            \n\n\n            \n                \n                    Defined in src/cart/models/cart.model.ts:69\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     CartProduct[]\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getCartStatus\n                        \n                    \n                \n            \n            \n                \ngetCartStatus()\n                \n            \n\n\n            \n                \n                    Defined in src/cart/models/cart.model.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getProducts\n                        \n                    \n                \n            \n            \n                \ngetProducts()\n                \n            \n\n\n            \n                \n                    Defined in src/cart/models/cart.model.ts:65\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Product[]\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getUser\n                        \n                    \n                \n            \n            \n                \ngetUser()\n                \n            \n\n\n            \n                \n                    Defined in src/cart/models/cart.model.ts:73\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         User\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setCartStatus\n                        \n                    \n                \n            \n            \n                \nsetCartStatus(cartStatus: string)\n                \n            \n\n\n            \n                \n                    Defined in src/cart/models/cart.model.ts:60\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    cartStatus\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n  Column,\n  DataType,\n  Table,\n  Model,\n  HasMany,\n  ForeignKey,\n  BelongsToMany,\n  BelongsTo,\n} from 'sequelize-typescript';\nimport { Product } from '../../product/models/product.model';\nimport { User } from '../../users/models/user.model';\nimport { CartProduct } from './cart.product.model';\n\n@Table({ tableName: 'CARTS' })\nexport class Cart extends Model {\n  @Column({\n    type: DataType.INTEGER,\n    unique: true,\n    autoIncrement: true,\n    primaryKey: true,\n    field: 'id',\n  })\n  public id: number;\n\n  @Column({\n    type: DataType.ENUM('Open', 'CheckedOut'),\n    unique: false,\n    field: 'cartStatus',\n  })\n  private cartStatus: string;\n\n  @Column({\n    type: DataType.INTEGER,\n    unique: false,\n    field: 'totalPrice',\n  })\n  public totalPrice: number;\n\n  @ForeignKey(() => User)\n  @Column({\n    type: DataType.INTEGER,\n    field: 'userId',\n  })\n  public userId: number;\n\n  @BelongsTo(() => User)\n  private user: User;\n\n  @BelongsToMany(() => Product, () => CartProduct)\n  private products: Product[];\n\n  @HasMany(() => CartProduct)\n  private cartProducts: CartProduct[];\n\n  getCartStatus(): string {\n    return this.cartStatus;\n  }\n\n  setCartStatus(cartStatus: string): string {\n    this.cartStatus = cartStatus;\n    return this.cartStatus;\n  }\n\n  getProducts(): Product[] {\n    return this.products;\n  }\n\n  getCartProducts(): CartProduct[] {\n    return this.cartProducts;\n  }\n\n  getUser(): User {\n    return this.user;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CartModule.html":{"url":"modules/CartModule.html","title":"module - CartModule","body":"\n                   \n\n\n\n\n    Modules\n    CartModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_CartModule\n\n\n\ncluster_CartModule_providers\n\n\n\n\nCardService\n\nCardService\n\n\n\nCartModule\n\nCartModule\n\nCartModule -->\n\nCardService->CartModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/cart/cart.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            CardService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            CardController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { forwardRef, Module } from '@nestjs/common';\nimport { CardService } from './cart.service';\nimport { CardController } from './cart.controller';\nimport { ConfigModule } from '@nestjs/config';\nimport { SequelizeModule } from '@nestjs/sequelize';\nimport { Admin } from '../admin/models/admin.model';\nimport { AdminRefreshToken } from '../admin/models/admin.refresh.token.model';\nimport { Owner } from '../owner/models/owner.model';\nimport { OwnerRefreshToken } from '../owner/models/owner.refresh.token.model';\nimport { Role } from '../roles/models/roles.model';\nimport { UserRoles } from '../roles/models/user.roles.model';\nimport { RolesModule } from '../roles/roles.module';\nimport { User } from '../users/models/user.model';\nimport { UserRefreshToken } from '../users/models/user.refresh.token.model';\nimport { Cart } from './models/cart.model';\nimport { AuthModule } from '../auth/auth.module';\nimport { ProductModule } from '../product/product.module';\nimport { UsersModule } from '../users/users.module';\nimport { CartProduct } from './models/cart.product.model';\nimport { CategoriesModule } from '../categories/categories.module';\nimport { Category } from '../categories/models/category.model';\nimport { ProductCategories } from '../categories/models/product.categories.model';\nimport { Order } from '../orders/models/order.model';\nimport { OrderProduct } from '../orders/models/order.product.model';\nimport { Product } from '../product/models/product.model';\nimport { OrdersModule } from '../orders/orders.module';\n\n@Module({\n  providers: [CardService],\n  controllers: [CardController],\n  imports: [\n    forwardRef(() => AuthModule),\n    ConfigModule.forRoot({\n      envFilePath: `.${process.env.NODE_ENV}.env`,\n      expandVariables: true,\n      isGlobal: true,\n    }),\n    SequelizeModule.forFeature([\n      Product,\n      Order,\n      OrderProduct,\n      Category,\n      ProductCategories,\n      Admin,\n      AdminRefreshToken,\n      Owner,\n      OwnerRefreshToken,\n      User,\n      UserRefreshToken,\n      Role,\n      UserRoles,\n      Cart,\n      CartProduct,\n    ]),\n    forwardRef(() => ProductModule),\n    forwardRef(() => OrdersModule),\n    forwardRef(() => CategoriesModule),\n    forwardRef(() => RolesModule),\n    forwardRef(() => AuthModule),\n    forwardRef(() => UsersModule),\n  ],\n})\nexport class CartModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CartProduct.html":{"url":"classes/CartProduct.html","title":"class - CartProduct","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CartProduct\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/cart/models/cart-item.model.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    Model\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                cart\n                            \n                            \n                                    Public\n                                cartId\n                            \n                            \n                                    Public\n                                id\n                            \n                            \n                                    Private\n                                product\n                            \n                            \n                                    Public\n                                productId\n                            \n                            \n                                    Public\n                                quantity\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getCart\n                            \n                            \n                                getProduct\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        cart\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Cart\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @BelongsTo(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/cart/models/cart-item.model.ts:54\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        cartId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsInt()@ForeignKey(undefined)@Column({type: undefined, unique: true, allowNull: false, field: 'cartId'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/cart/models/cart-item.model.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: undefined, unique: true, autoIncrement: true, primaryKey: true, field: 'id'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/cart/models/cart-item.model.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        product\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Product\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @BelongsTo(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/cart/models/cart-item.model.ts:57\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        productId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsInt()@ForeignKey(undefined)@Column({type: undefined, unique: true, allowNull: false, field: 'productId'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/cart/models/cart-item.model.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        quantity\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsInt()@Column({type: undefined, unique: false, allowNull: false, field: 'quantity'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/cart/models/cart-item.model.ts:51\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getCart\n                        \n                    \n                \n            \n            \n                \ngetCart()\n                \n            \n\n\n            \n                \n                    Defined in src/cart/models/cart-item.model.ts:63\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Cart\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getProduct\n                        \n                    \n                \n            \n            \n                \ngetProduct()\n                \n            \n\n\n            \n                \n                    Defined in src/cart/models/cart-item.model.ts:59\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Product\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n  Column,\n  DataType,\n  Table,\n  Model,\n  IsInt,\n  ForeignKey,\n  BelongsTo,\n} from 'sequelize-typescript';\nimport { Product } from '../../product/product.model';\nimport { Cart } from './cart.model';\n\n@Table({ tableName: 'cartproduct' })\nexport class CartProduct extends Model {\n  @Column({\n    type: DataType.INTEGER,\n    unique: true,\n    autoIncrement: true,\n    primaryKey: true,\n    field: 'id',\n  })\n  public id: number;\n\n  @IsInt\n  @ForeignKey(() => Product)\n  @Column({\n    type: DataType.INTEGER,\n    unique: true,\n    allowNull: false,\n    field: 'productId',\n  })\n  public productId: number;\n\n  @IsInt\n  @ForeignKey(() => Cart)\n  @Column({\n    type: DataType.INTEGER,\n    unique: true,\n    allowNull: false,\n    field: 'cartId',\n  })\n  public cartId: number;\n\n  @IsInt\n  @Column({\n    type: DataType.INTEGER,\n    unique: false,\n    allowNull: false,\n    field: 'quantity',\n  })\n  public quantity: number;\n\n  @BelongsTo(() => Cart)\n  private cart: Cart;\n\n  @BelongsTo(() => Product)\n  private product: Product;\n\n  getProduct(): Product {\n    return this.product;\n  }\n\n  getCart(): Cart {\n    return this.cart;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CartProduct-1.html":{"url":"classes/CartProduct-1.html","title":"class - CartProduct-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CartProduct\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/cart/models/cart.product.model.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    Model\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                cart\n                            \n                            \n                                    Public\n                                cartId\n                            \n                            \n                                    Public\n                                id\n                            \n                            \n                                    Private\n                                product\n                            \n                            \n                                    Public\n                                productId\n                            \n                            \n                                    Public\n                                quantity\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getCart\n                            \n                            \n                                getProduct\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        cart\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Cart\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @BelongsTo(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/cart/models/cart.product.model.ts:54\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        cartId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsInt()@ForeignKey(undefined)@Column({type: undefined, unique: true, allowNull: false, field: 'cartId'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/cart/models/cart.product.model.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: undefined, unique: true, autoIncrement: true, primaryKey: true, field: 'id'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/cart/models/cart.product.model.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        product\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Product\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @BelongsTo(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/cart/models/cart.product.model.ts:57\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        productId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsInt()@ForeignKey(undefined)@Column({type: undefined, unique: true, allowNull: false, field: 'productId'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/cart/models/cart.product.model.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        quantity\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsInt()@Column({type: undefined, unique: false, allowNull: false, field: 'quantity'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/cart/models/cart.product.model.ts:51\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getCart\n                        \n                    \n                \n            \n            \n                \ngetCart()\n                \n            \n\n\n            \n                \n                    Defined in src/cart/models/cart.product.model.ts:63\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Cart\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getProduct\n                        \n                    \n                \n            \n            \n                \ngetProduct()\n                \n            \n\n\n            \n                \n                    Defined in src/cart/models/cart.product.model.ts:59\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Product\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n  Column,\n  DataType,\n  Table,\n  Model,\n  IsInt,\n  ForeignKey,\n  BelongsTo,\n} from 'sequelize-typescript';\nimport { Product } from '../../product/models/product.model';\nimport { Cart } from './cart.model';\n\n@Table({ tableName: 'CART_products' })\nexport class CartProduct extends Model {\n  @Column({\n    type: DataType.INTEGER,\n    unique: true,\n    autoIncrement: true,\n    primaryKey: true,\n    field: 'id',\n  })\n  public id: number;\n\n  @IsInt\n  @ForeignKey(() => Product)\n  @Column({\n    type: DataType.INTEGER,\n    unique: true,\n    allowNull: false,\n    field: 'productId',\n  })\n  public productId: number;\n\n  @IsInt\n  @ForeignKey(() => Cart)\n  @Column({\n    type: DataType.INTEGER,\n    unique: true,\n    allowNull: false,\n    field: 'cartId',\n  })\n  public cartId: number;\n\n  @IsInt\n  @Column({\n    type: DataType.INTEGER,\n    unique: false,\n    allowNull: false,\n    field: 'quantity',\n  })\n  public quantity: number;\n\n  @BelongsTo(() => Cart)\n  private cart: Cart;\n\n  @BelongsTo(() => Product)\n  private product: Product;\n\n  getProduct(): Product {\n    return this.product;\n  }\n\n  getCart(): Cart {\n    return this.cart;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/CategoriesController.html":{"url":"controllers/CategoriesController.html","title":"controller - CategoriesController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  CategoriesController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/categories/categories.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                categories\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createCategory\n                            \n                            \n                                deleteCategory\n                            \n                            \n                                getCategories\n                            \n                            \n                                updateCategory\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        createCategory\n                        \n                    \n                \n            \n            \n                \ncreateCategory(categoryDto: CreateCategoryDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Throttle(70, 700)@ApiOperation({summary: 'Creating Categories'})@ApiResponse({status: 201, type: Category})@HttpCode(201)@Roles('OWNER', 'ADMIN')@UseGuards(JwtAuthGuard, RolesGuard, OwnerAdminGuard, AuthFerfershGuard, AddContentGuard)@Put('create_category')\n                \n            \n\n            \n                \n                    Defined in src/categories/categories.controller.ts:64\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    categoryDto\n                                    \n                                                CreateCategoryDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteCategory\n                        \n                    \n                \n            \n            \n                \ndeleteCategory(categoryId: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Throttle(70, 700)@HttpCode(200)@Roles('OWNER', 'ADMIN')@UseGuards(JwtAuthGuard, RolesGuard, OwnerAdminGuard, AuthFerfershGuard, AddContentGuard)@Delete('delete_category/:categoryId')\n                \n            \n\n            \n                \n                    Defined in src/categories/categories.controller.ts:103\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    categoryId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getCategories\n                        \n                    \n                \n            \n            \n                \ngetCategories()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Throttle(700, 7000)@CacheTTL(200)@Get('get_categoties')\n                \n            \n\n            \n                \n                    Defined in src/categories/categories.controller.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateCategory\n                        \n                    \n                \n            \n            \n                \nupdateCategory(categoryId: number, categoryDto: CreateCategoryDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Throttle(70, 700)@ApiOperation({summary: 'Creating Categories'})@ApiResponse({status: 201, type: Category})@HttpCode(201)@Roles('OWNER', 'ADMIN')@UseGuards(JwtAuthGuard, RolesGuard, OwnerAdminGuard, AuthFerfershGuard, AddContentGuard)@Patch('update_category/:categoryId')\n                \n            \n\n            \n                \n                    Defined in src/categories/categories.controller.ts:84\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    categoryId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    categoryDto\n                                    \n                                                CreateCategoryDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Body,\n  CacheInterceptor,\n  CacheTTL,\n  CACHE_MANAGER,\n  ClassSerializerInterceptor,\n  Controller,\n  Delete,\n  Get,\n  HttpCode,\n  Param,\n  ParseIntPipe,\n  Patch,\n  Put,\n  UseFilters,\n  UseGuards,\n  UseInterceptors,\n} from '@nestjs/common';\nimport { ApiOperation, ApiResponse } from '@nestjs/swagger';\nimport { Throttle } from '@nestjs/throttler';\nimport { Roles } from '../common/decorators/roles-auth.decorator';\nimport { AddContentGuard } from '../common/guards/add-content.guard';\nimport { AuthFerfershGuard } from '../common/guards/jw-refresh.guard';\nimport { JwtAuthGuard } from '../common/guards/jwt-auth.guard';\nimport { OwnerAdminGuard } from '../common/guards/owner-admin.guard';\nimport { RolesGuard } from '../common/guards/roles.guard';\nimport { ThrottlerBehindProxyGuard } from '../common/guards/throttler-behind-proxy.guard';\nimport { ApiErrorExceptionFilter } from '../common/filters/error-handler.filter';\nimport { CategoriesService } from './categories.service';\nimport { CreateCategoryDto } from './dto/create.category.dto';\nimport { Category } from './models/category.model';\nimport { ApiExceptionFilter } from '../common/filters/api-exception.filter';\nimport { ReturnedCategory } from '../core/interfaces/product.interfaces';\n@UseGuards(ThrottlerBehindProxyGuard)\n@UseFilters(ApiErrorExceptionFilter, ApiExceptionFilter)\n@UseInterceptors(ClassSerializerInterceptor)\n@UseInterceptors(CacheInterceptor)\n@Controller('categories')\nexport class CategoriesController {\n  constructor(\n    private readonly categoriesService: CategoriesService,\n  ) {}\n\n  @Throttle(700, 7000)\n  @CacheTTL(200)\n  @Get('get_categoties')\n  getCategories(): Promise {\n    return this.categoriesService.getCategories();\n  }\n\n  @Throttle(70, 700)\n  @ApiOperation({ summary: 'Creating Categories' })\n  @ApiResponse({ status: 201, type: Category })\n  @HttpCode(201)\n  @Roles('OWNER', 'ADMIN')\n  @UseGuards(\n    JwtAuthGuard,\n    RolesGuard,\n    OwnerAdminGuard,\n    AuthFerfershGuard,\n    AddContentGuard,\n  )\n  @Put('create_category')\n  createCategory(\n    @Body() categoryDto: CreateCategoryDto\n  ): Promise{\n    return this.categoriesService.createCategory(categoryDto);\n  }\n\n\n  @Throttle(70, 700)\n  @ApiOperation({ summary: 'Creating Categories' })\n  @ApiResponse({ status: 201, type: Category })\n  @HttpCode(201)\n  @Roles('OWNER', 'ADMIN')\n  @UseGuards(\n    JwtAuthGuard,\n    RolesGuard,\n    OwnerAdminGuard,\n    AuthFerfershGuard,\n    AddContentGuard,\n  )\n  @Patch('update_category/:categoryId')\n  updateCategory(\n    @Param('categoryId', ParseIntPipe) categoryId: number,\n    @Body() categoryDto: CreateCategoryDto\n  ): Promise{\n    return this.categoriesService.updateCategory(categoryId, categoryDto);\n  }\n\n\n  @Throttle(70, 700)\n  @HttpCode(200)\n  @Roles('OWNER', 'ADMIN')\n  @UseGuards(\n    JwtAuthGuard,\n    RolesGuard,\n    OwnerAdminGuard,\n    AuthFerfershGuard,\n    AddContentGuard,\n  )\n  @Delete('delete_category/:categoryId')\n  deleteCategory(@Param('categoryId', ParseIntPipe) categoryId: number): Promise {\n    return this.categoriesService.deleteCategory(categoryId);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CategoriesModule.html":{"url":"modules/CategoriesModule.html","title":"module - CategoriesModule","body":"\n                   \n\n\n\n\n    Modules\n    CategoriesModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_CategoriesModule\n\n\n\ncluster_CategoriesModule_providers\n\n\n\n\nCategoriesService\n\nCategoriesService\n\n\n\nCategoriesModule\n\nCategoriesModule\n\nCategoriesModule -->\n\nCategoriesService->CategoriesModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/categories/categories.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            CategoriesService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            CategoriesController\n                        \n                    \n                \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        configure\n                        \n                    \n                \n            \n            \n                \nconfigure(consumer: MiddlewareConsumer)\n                \n            \n\n\n            \n                \n                    Defined in src/categories/categories.module.ts:62\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    consumer\n                                    \n                                            MiddlewareConsumer\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        import {\n  forwardRef,\n  MiddlewareConsumer,\n  Module,\n  NestModule,\n  RequestMethod,\n} from '@nestjs/common';\nimport { CategoriesService } from './categories.service';\nimport { CategoriesController } from './categories.controller';\nimport { ConfigModule } from '@nestjs/config';\nimport { SequelizeModule } from '@nestjs/sequelize';\nimport { AdminModule } from '../admin/admin.module';\nimport { Admin } from '../admin/models/admin.model';\nimport { AdminRefreshToken } from '../admin/models/admin.refresh.token.model';\nimport { AuthModule } from '../auth/auth.module';\nimport { Owner } from '../owner/models/owner.model';\nimport { OwnerRefreshToken } from '../owner/models/owner.refresh.token.model';\nimport { OwnerModule } from '../owner/owner.module';\nimport { Product } from '../product/models/product.model';\nimport { Role } from '../roles/models/roles.model';\nimport { UserRoles } from '../roles/models/user.roles.model';\nimport { RolesModule } from '../roles/roles.module';\nimport { User } from '../users/models/user.model';\nimport { UserRefreshToken } from '../users/models/user.refresh.token.model';\nimport { UsersModule } from '../users/users.module';\nimport { Category } from './models/category.model';\nimport { ProductCategories } from './models/product.categories.model';\nimport { ProductModule } from '../product/product.module';\nimport { InitializeUserMiddleware } from '../common/middlewares/initialize-user.middleware';\n\n@Module({\n  providers: [CategoriesService],\n  controllers: [CategoriesController],\n  imports: [\n    ConfigModule.forRoot({\n      envFilePath: `.${process.env.NODE_ENV}.env`,\n      expandVariables: true,\n      isGlobal: true,\n    }),\n    SequelizeModule.forFeature([\n      Product,\n      Category,\n      ProductCategories,\n      Admin,\n      AdminRefreshToken,\n      Owner,\n      OwnerRefreshToken,\n      User,\n      UserRefreshToken,\n      Role,\n      UserRoles,\n    ]),\n    forwardRef(() => ProductModule),\n    forwardRef(() => AdminModule),\n    forwardRef(() => RolesModule),\n    forwardRef(() => AuthModule),\n    forwardRef(() => OwnerModule),\n    forwardRef(() => UsersModule),\n  ],\n})\nexport class CategoriesModule implements NestModule {\n  configure(consumer: MiddlewareConsumer) {\n    consumer\n      .apply(InitializeUserMiddleware)\n      .forRoutes(\n        { path: 'categories/create_category', method: RequestMethod.PUT },\n        { path: 'categories/delete_category', method: RequestMethod.DELETE },\n        { path: '*', method: RequestMethod.PATCH }\n      );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CategoriesService.html":{"url":"injectables/CategoriesService.html","title":"injectable - CategoriesService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  CategoriesService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/categories/categories.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createCategory\n                            \n                            \n                                    Async\n                                deleteCategory\n                            \n                            \n                                    Async\n                                getCategories\n                            \n                            \n                                    Async\n                                getCategoriesByIds\n                            \n                            \n                                    Async\n                                getCategoryById\n                            \n                            \n                                    Async\n                                getCategoryByValue\n                            \n                            \n                                    Async\n                                updateCategory\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(categoryRepository)\n                    \n                \n                        \n                            \n                                Defined in src/categories/categories.service.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        categoryRepository\n                                                  \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        createCategory\n                        \n                    \n                \n            \n            \n                \n                    \n                    createCategory(categoryDto: CreateCategoryDto)\n                \n            \n\n\n            \n                \n                    Defined in src/categories/categories.service.ts:61\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    categoryDto\n                                    \n                                                CreateCategoryDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        deleteCategory\n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteCategory(categoryId: number)\n                \n            \n\n\n            \n                \n                    Defined in src/categories/categories.service.ts:85\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    categoryId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getCategories\n                        \n                    \n                \n            \n            \n                \n                    \n                    getCategories()\n                \n            \n\n\n            \n                \n                    Defined in src/categories/categories.service.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getCategoriesByIds\n                        \n                    \n                \n            \n            \n                \n                    \n                    getCategoriesByIds(categoryIds: number[])\n                \n            \n\n\n            \n                \n                    Defined in src/categories/categories.service.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    categoryIds\n                                    \n                                            number[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getCategoryById\n                        \n                    \n                \n            \n            \n                \n                    \n                    getCategoryById(categoryId: number)\n                \n            \n\n\n            \n                \n                    Defined in src/categories/categories.service.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    categoryId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getCategoryByValue\n                        \n                    \n                \n            \n            \n                \n                    \n                    getCategoryByValue(value: string)\n                \n            \n\n\n            \n                \n                    Defined in src/categories/categories.service.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        updateCategory\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateCategory(categoryId: number, updateDto: UpdateCategoryDto)\n                \n            \n\n\n            \n                \n                    Defined in src/categories/categories.service.ts:102\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    categoryId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateDto\n                                    \n                                                UpdateCategoryDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  HttpStatus,\n  Injectable,\n} from '@nestjs/common';\nimport { Scope } from '@nestjs/common/interfaces';\nimport { InjectModel } from '@nestjs/sequelize';\nimport { ApiException } from '../common/exceptions/api.exception';\nimport { ReturnedCategory } from '../core/interfaces/product.interfaces';\nimport { ALREADY_EXIST, NOT_FOUND } from './category.constants';\nimport { CreateCategoryDto } from './dto/create.category.dto';\nimport { UpdateCategoryDto } from './dto/update.category.dto';\nimport { Category } from './models/category.model';\n\n@Injectable({ scope: Scope.REQUEST })\nexport class CategoriesService {\n  constructor(\n    @InjectModel(Category) private readonly categoryRepository: typeof Category,\n  ) {}\n\n  async getCategoryByValue(value: string): Promise {\n    const category = await this.categoryRepository.findOne({ where: { ua: value } });\n    if (!category) {\n      throw new ApiException(HttpStatus.NOT_FOUND, 'Not found!', NOT_FOUND);   \n    }\n    return category;\n  }\n\n  async getCategoriesByIds(categoryIds: number[]): Promise {\n    const category = await this.categoryRepository.findAll({ where: { \n      id: categoryIds,\n    }});\n    if (category.length === 0 || !category) {\n      throw new ApiException(HttpStatus.NOT_FOUND, 'Not found!', NOT_FOUND);\n    }\n    return category;\n  }\n\n  async getCategoryById(categoryId: number): Promise {\n    const category = await this.categoryRepository.findByPk(categoryId);\n    if (!category) {\n      throw new ApiException(HttpStatus.NOT_FOUND, 'Not found!', NOT_FOUND);\n    }\n    return category;\n  }\n\n  async getCategories(): Promise {\n    const categories = await this.categoryRepository.findAll();\n    return categories.map((category) => {\n      return {\n        id: category.id,\n        ua: category.ua,\n        en: category.en,\n        rs: category.rs,\n        ru: category.ru,\n        createdAt: category.createdAt,\n        updatedAt: category.updatedAt,\n      };\n    });\n  }\n\n  async createCategory(categoryDto: CreateCategoryDto): Promise {\n    const isExist = await this.categoryRepository.findOne({\n      where: {\n        ua: categoryDto.ua,\n        en: categoryDto.en,\n        rs: categoryDto.rs,\n        ru: categoryDto.ru,\n      },\n    });\n    if (isExist) {\n      throw new ApiException(HttpStatus.BAD_REQUEST, 'Bad request', ALREADY_EXIST);\n    }\n    const category = await this.categoryRepository.create({ ...categoryDto });\n    return {\n        id: category.id,\n        ua: category.ua,\n        en: category.en,\n        rs: category.rs,\n        ru: category.ru,\n        createdAt: category.createdAt,\n        updatedAt: category.updatedAt,\n    };\n  }\n\n  async deleteCategory(categoryId: number): Promise {\n    const isExist = await this.categoryRepository.findByPk(categoryId);\n    if (!isExist) {\n      throw new ApiException(HttpStatus.NOT_FOUND, 'Not found!', NOT_FOUND);\n    }\n    const deleted = await this.categoryRepository.destroy({\n      where: {\n        id: isExist.id,\n        ua: isExist.ua,\n        en: isExist.en,\n        rs: isExist.rs,\n        ru: isExist.ru,\n      },\n    });\n    return deleted;\n  }\n\n  async updateCategory(categoryId: number, updateDto: UpdateCategoryDto): Promise {\n    const isExist = await this.categoryRepository.findByPk(categoryId);\n    if (!isExist) {\n      throw new ApiException(HttpStatus.NOT_FOUND, 'Not found!', NOT_FOUND);\n    }\n    isExist.ua = updateDto.ua;\n    isExist.ru = updateDto.ru;\n    isExist.rs = updateDto.rs;\n    isExist.en = updateDto.en;\n    await isExist.save();\n    const category = await this.categoryRepository.findOne({\n      where: {\n        id: isExist.id,\n        ua: isExist.ua,\n        en: isExist.en,\n        rs: isExist.rs,\n        ru: isExist.ru,\n      }\n    });\n    return {\n        id: category.id,\n        ua: category.ua,\n        en: category.en,\n        rs: category.rs,\n        ru: category.ru,\n        createdAt: category.createdAt,\n        updatedAt: category.updatedAt,\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Category.html":{"url":"classes/Category.html","title":"class - Category","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Category\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/categories/models/category.model.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    Model\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                en\n                            \n                            \n                                    Public\n                                id\n                            \n                            \n                                    Private\n                                products\n                            \n                            \n                                    Public\n                                rs\n                            \n                            \n                                    Public\n                                ru\n                            \n                            \n                                    Public\n                                ua\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getProducts\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        en\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: undefined, allowNull: false, unique: false, field: 'en-locale'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/categories/models/category.model.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: undefined, unique: true, autoIncrement: true, primaryKey: true, field: 'id'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/categories/models/category.model.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        products\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Product[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @BelongsToMany(undefined, undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/categories/models/category.model.ts:56\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        rs\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: undefined, allowNull: false, unique: false, field: 'rs-locale'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/categories/models/category.model.ts:53\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        ru\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: undefined, allowNull: false, unique: false, field: 'ru-locale'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/categories/models/category.model.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        ua\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: undefined, allowNull: false, unique: false, field: 'ua-locale'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/categories/models/category.model.ts:29\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getProducts\n                        \n                    \n                \n            \n            \n                \ngetProducts()\n                \n            \n\n\n            \n                \n                    Defined in src/categories/models/category.model.ts:58\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Product[]\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n  Column,\n  DataType,\n  Table,\n  Model,\n  BelongsToMany,\n} from 'sequelize-typescript';\nimport { CategoryCreationAtrb } from '../../core/interfaces/product.interfaces';\nimport { Product } from '../../product/models/product.model';\nimport { ProductCategories } from './product.categories.model';\n\n@Table({ tableName: 'CATEGORIES' })\nexport class Category extends Model {\n  @Column({\n    type: DataType.INTEGER,\n    unique: true,\n    autoIncrement: true,\n    primaryKey: true,\n    field: 'id',\n  })\n  public id: number;\n\n  @Column({\n    type: DataType.STRING,\n    allowNull: false,\n    unique: false,\n    field: 'ua-locale',\n  })\n  public ua: string;\n\n  @Column({\n    type: DataType.STRING,\n    allowNull: false,\n    unique: false,\n    field: 'ru-locale',\n  })\n  public ru: string;\n   \n  @Column({\n    type: DataType.STRING,\n    allowNull: false,\n    unique: false,\n    field: 'en-locale',\n  })\n  public en: string;\n\n  @Column({\n    type: DataType.STRING,\n    allowNull: false,\n    unique: false,\n    field: 'rs-locale',\n  })\n  public rs: string;\n\n  @BelongsToMany(() => Product, () => ProductCategories)\n  private products: Product[];\n\n  getProducts(): Product[] {\n    return this.products;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CategoryCreationAtrb.html":{"url":"interfaces/CategoryCreationAtrb.html","title":"interface - CategoryCreationAtrb","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  CategoryCreationAtrb\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/interfaces/product.interfaces.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            en\n                                        \n                                \n                                \n                                        \n                                            rs\n                                        \n                                \n                                \n                                        \n                                            ru\n                                        \n                                \n                                \n                                        \n                                            ua\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        en\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        en:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        rs\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        rs:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ru\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ru:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ua\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ua:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface ProductCreationAttrs {\n  title: string;\n  description: string;\n  ownerId?: number;\n  adminId?: number;\n  images: string[];\n  price: number;\n  sizeChartImage: string;\n  sizes: string[];\n  colours: string[];\n}\n\nexport interface ReviewCreationAtrb {\n  name: string;\n  surname: string;\n  review: string;\n}\n\nexport interface ReturnedReview {\n  id: number;\n  name: string;\n  surname: string;\n  review: string;\n  createdAt: any;\n  updatedAt: any;\n}\n\nexport interface CategoryCreationAtrb {\n  ua: string;\n  ru: string;\n  rs: string;\n  en: string;\n}\n\nexport interface ReturnedProduct {\n  id: number;\n  title: {\n    ua: string;\n    ru: string;\n    rs: string;\n    en: string;\n  };\n  description: {\n    ua: string;\n    ru: string;\n    rs: string;\n    en: string;\n  };\n  price: number;\n  quantity: number;\n  images: string[];\n  sizeChartImage: string;\n  sizes: string[];\n  colours: string[];\n  categories: ReturnedCategory[];  \n  reviews: ReturnedReview[] | [];\n}\n\nexport interface ReturnedProducts {\n  products: ReturnedProduct[];\n  totalItems: number;\n}\n\nexport interface ReturnedCategory {\n  id: number;\n  ua: string;\n  en: string;\n  rs: string;\n  ru: string;\n  createdAt: any;\n  updatedAt: any;\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ChangeDto.html":{"url":"classes/ChangeDto.html","title":"class - ChangeDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ChangeDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/dto/change.password.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                confirmPassword\n                            \n                            \n                                    Readonly\n                                password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        confirmPassword\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'etrhg45ty5yeewt4t4665y', description: 'user`s confirm password'})@IsString()@Matches(/^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{8,}$/, {message: PASSWORD_VALIDATION})@Match('password')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/change.password.dto.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'etrhg45ty5yeewt4t4665y', description: 'user`s password'})@IsString()@Matches(/^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{8,}$/, {message: PASSWORD_VALIDATION})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/change.password.dto.ts:18\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsString, Matches } from 'class-validator';\nimport { Match } from '../../common/decorators/match.decorator';\nimport { PASSWORD_VALIDATION } from '../auth.constants';\n\nexport class ChangeDto {\n  @ApiProperty({\n    example: 'etrhg45ty5yeewt4t4665y',\n    description: 'user`s password',\n  })\n  @IsString()\n  @Matches(\n    /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{8,}$/,\n    {\n      message: PASSWORD_VALIDATION,\n    },\n  )\n  readonly password: string;\n\n  @ApiProperty({\n    example: 'etrhg45ty5yeewt4t4665y',\n    description: 'user`s confirm password',\n  })\n  @IsString()\n  @Matches(\n    /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{8,}$/,\n    {\n      message: PASSWORD_VALIDATION,\n    },\n  )\n  @Match('password')\n  readonly confirmPassword: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CodeDto.html":{"url":"interfaces/CodeDto.html","title":"interface - CodeDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  CodeDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/interfaces/auth.interfaces.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:     \"OWNER\" | \"ADMIN\" | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"OWNER\" | \"ADMIN\" | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Role } from '../../roles/models/roles.model';\nexport interface Payload {\n  email: string;\n  userId: number;\n  userActivationLink: string;\n  isUserActivated: boolean;\n  roles?: Role[];\n}\n\nexport interface Tokens {\n  refreshToken: string;\n  accessToken: string;\n  expireDate: Date;\n}\n\nexport interface AuthUser {\n  accessToken: string;\n  user: ReturnedUser | ReturnedAdmin | ReturnedOwner;\n}\n\nexport interface ReturnedUser {\n  id: number;\n  name: string;\n  surname: string;\n  phoneNumber: string;\n  email: string;\n  country: string | null;\n  city: string | null;\n  postOffice: string | null;\n  type: 'USER';\n}\n\nexport interface ReturnedOwner {\n  id: number;\n  name: string;\n  surname: string;\n  phoneNumber: string;\n  email: string;\n  type: 'OWNER';\n}\n\nexport interface ReturnedAdmin {\n  id: number;\n  name: string;\n  surname: string;\n  phoneNumber: string;\n  email: string;\n  type: 'ADMIN';\n}\n\nexport interface CodeDto {\n  type: 'OWNER' | 'ADMIN' | null;\n  email: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CoreModule.html":{"url":"modules/CoreModule.html","title":"module - CoreModule","body":"\n                   \n\n\n\n\n    Modules\n    CoreModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_CoreModule\n\n\n\ncluster_CoreModule_providers\n\n\n\n\nAppClusterService\n\nAppClusterService\n\n\n\nCoreModule\n\nCoreModule\n\nCoreModule -->\n\nAppClusterService->CoreModule\n\n\n\n\n\nFilesService\n\nFilesService\n\nCoreModule -->\n\nFilesService->CoreModule\n\n\n\n\n\nTasksService\n\nTasksService\n\nCoreModule -->\n\nTasksService->CoreModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/core/core.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppClusterService\n                        \n                        \n                            FilesService\n                        \n                        \n                            TasksService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { APP_FILTER, APP_GUARD, APP_INTERCEPTOR } from '@nestjs/core';\nimport { AllExceptionsFilter } from './filters/all-exceptions.filter';\nimport { ThrottlerBehindProxyGuard } from '../common/guards/throttler-behind-proxy.guard';\nimport { GlobalInterceptor } from './interceptors/global.interceptor';\nimport { AppClusterService } from './services/cluster.service';\nimport { FilesService } from './services/file.service';\nimport { ConfigModule } from '@nestjs/config';\nimport { ScheduleModule } from '@nestjs/schedule';\nimport { TasksService } from './services/scedule.service';\nimport { EventEmitterModule } from '@nestjs/event-emitter';\nimport { BullModule } from '@nestjs/bull';\nimport { GarbageCollectingProcessor } from './processors/garbage.processor';\nimport { Admin } from '../admin/models/admin.model';\nimport { AdminRefreshToken } from '../admin/models/admin.refresh.token.model';\nimport { CartProduct } from '../cart/models/cart.product.model';\nimport { Cart } from '../cart/models/cart.model';\nimport { Category } from '../categories/models/category.model';\nimport { ProductCategories } from '../categories/models/product.categories.model';\nimport { Order } from '../orders/models/order.model';\nimport { OrderProduct } from '../orders/models/order.product.model';\nimport { Owner } from '../owner/models/owner.model';\nimport { OwnerRefreshToken } from '../owner/models/owner.refresh.token.model';\nimport { Product } from '../product/models/product.model';\nimport { Role } from '../roles/models/roles.model';\nimport { UserRoles } from '../roles/models/user.roles.model';\nimport { User } from '../users/models/user.model';\nimport { UserRefreshToken } from '../users/models/user.refresh.token.model';\nimport { SequelizeModule } from '@nestjs/sequelize';\n@Module({\n  providers: [\n    { provide: APP_INTERCEPTOR, useClass: GlobalInterceptor },\n    { provide: APP_FILTER, useClass: AllExceptionsFilter },\n    {\n      provide: APP_GUARD,\n      useClass: ThrottlerBehindProxyGuard,\n    },\n    TasksService,\n    AppClusterService,\n    FilesService,\n    GarbageCollectingProcessor,\n  ],\n  imports: [\n    BullModule.registerQueue({\n      name: 'garbageCollecting',\n    }),\n    EventEmitterModule.forRoot({\n      wildcard: true,\n      delimiter: '.',\n      newListener: true,\n      removeListener: true,\n      maxListeners: 10,\n      verboseMemoryLeak: true,\n      ignoreErrors: false,\n    }),\n    ScheduleModule.forRoot(),\n    ConfigModule.forRoot({\n      envFilePath: `.${process.env.NODE_ENV}.env`,\n      expandVariables: true,\n      isGlobal: true,\n    }),\n    SequelizeModule.forFeature([\n      Product,\n      Order,\n      OrderProduct,\n      Category,\n      ProductCategories,\n      Admin,\n      AdminRefreshToken,\n      Owner,\n      OwnerRefreshToken,\n      User,\n      UserRefreshToken,\n      Role,\n      UserRoles,\n      Cart,\n      CartProduct,\n    ]),\n  ],\n})\nexport class CoreModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CorsMiddleware.html":{"url":"injectables/CorsMiddleware.html","title":"injectable - CorsMiddleware","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  CorsMiddleware\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/middlewares/cors.middleware.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                Logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                isEmpty\n                            \n                            \n                                use\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        isEmpty\n                        \n                    \n                \n            \n            \n                \n                    \n                    isEmpty(object: RequestHeaders)\n                \n            \n\n\n            \n                \n                    Defined in src/core/middlewares/cors.middleware.ts:57\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    object\n                                    \n                                                RequestHeaders\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        use\n                        \n                    \n                \n            \n            \n                \nuse(req: Request, res: Response, next: NextFunction)\n                \n            \n\n\n            \n                \n                    Defined in src/core/middlewares/cors.middleware.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                            NextFunction\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        Logger\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Logger(CorsMiddleware.name)\n                    \n                \n                    \n                        \n                                Defined in src/core/middlewares/cors.middleware.ts:23\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import {\n  BadRequestException,\n  Injectable,\n  Logger,\n  NestMiddleware,\n  Next,\n  Req,\n  Res,\n  Scope,\n} from '@nestjs/common';\nimport { Request, Response, NextFunction } from 'express';\nimport geoip from 'geoip-lite';\nimport IP from 'ip';\ninterface RequestHeaders {\n  Accept?: string;\n  Host?: string;\n  Connection?: string;\n  [key: string]: string;\n}\n\n@Injectable({ scope: Scope.REQUEST })\nexport class CorsMiddleware implements NestMiddleware {\n  readonly Logger = new Logger(CorsMiddleware.name);\n  use(@Req() req: Request, @Res() res: Response, @Next() next: NextFunction) {\n    const headers: RequestHeaders = JSON.parse(JSON.stringify(req.headers));\n    const isEmpty = this.isEmpty(headers);\n    const ipAddress = IP.address();\n    this.Logger.log(ipAddress);\n    if (isEmpty) {\n      throw new BadRequestException({\n        message: 'No request headers were provided!',\n      });\n    }\n    res.setHeader(\n      'Access-Control-Allow-Origin',\n      `${process.env.CLIENT_URL.toString().trim()}`,\n    );\n    res.setHeader(\n      'Access-Control-Allow-Methods',\n      'OPTIONS, GET, POST, PUT, PATCH, DELETE',\n    );\n    res.setHeader('Access-Control-Allow-Credentials', 'true');\n    res.header(\n      'Access-Control-Allow-Headers',\n      'imageType, Authorization, X-Requested-With, X-HTTP-Method-Override, Content-Type, Accept',\n    );\n    res.setHeader(\n      'Content-Security-Policy',\n      'default-src \\'self\\'; font-src \\'self\\'; img-src \\'self\\'; script-src \\'self\\'; style-src \\'self\\'; frame-src \\'self\\'',\n    );\n    if (req.method === 'OPTIONS') {\n      return res.status(204).end();\n    }\n    return next();\n  }\n\n  private isEmpty(object: RequestHeaders): boolean {\n    for (const prop in object) {\n      if (Object.prototype.hasOwnProperty.call(object, prop)) {\n        return false;\n      }\n    }\n    return JSON.stringify(object) === JSON.stringify({});\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateAccessTokenDto.html":{"url":"classes/CreateAccessTokenDto.html","title":"class - CreateAccessTokenDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateAccessTokenDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/dto/create.access.token.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                email\n                            \n                            \n                                    Readonly\n                                    Optional\n                                isUserActivated\n                            \n                            \n                                    Readonly\n                                    Optional\n                                roles\n                            \n                            \n                                    Readonly\n                                    Optional\n                                userActivationLink\n                            \n                            \n                                    Readonly\n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'user@gmail.com', description: 'user`s email'})@IsString()@IsEmail()@Matches(/^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/, {message: EMAIL_VALIDATION})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/create.access.token.dto.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                            Optional\n                        isUserActivated\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'True', description: 'Is user activated'})@IsBoolean()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/create.access.token.dto.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                            Optional\n                        roles\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Role[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'USER', description: 'user`s roles'})@IsArray()@ArrayNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/create.access.token.dto.ts:48\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                            Optional\n                        userActivationLink\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: '9b1deb4d-3b7d-4bad-9bdd-2b0d7b3dcb6d', description: 'user`s activation link'})@IsUUID(4)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/create.access.token.dto.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        userId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: '1', description: 'unique identifier'})@IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/create.access.token.dto.ts:18\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport {\n  IsEmail,\n  IsString,\n  Matches,\n  IsBoolean,\n  IsNumber,\n  IsUUID,\n  IsArray,\n  ArrayNotEmpty,\n} from 'class-validator';\nimport { Role } from '../../roles/models/roles.model';\nimport { EMAIL_VALIDATION } from '../auth.constants';\n\nexport class CreateAccessTokenDto {\n  @ApiProperty({ example: '1', description: 'unique identifier' })\n  @IsNumber()\n  readonly userId: number;\n\n  @ApiProperty({\n    example: 'True',\n    description: 'Is user activated',\n  })\n  @IsBoolean()\n  readonly isUserActivated?: boolean;\n\n  @ApiProperty({\n    example: '9b1deb4d-3b7d-4bad-9bdd-2b0d7b3dcb6d',\n    description: 'user`s activation link',\n  })\n  @IsUUID(4)\n  readonly userActivationLink?: string;\n\n  @ApiProperty({ example: 'user@gmail.com', description: 'user`s email' })\n  @IsString()\n  @IsEmail()\n  @Matches(\n    /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/,\n    {\n      message: EMAIL_VALIDATION,\n    },\n  )\n  readonly email: string;\n\n  @ApiProperty({ example: 'USER', description: 'user`s roles' })\n  @IsArray()\n  @ArrayNotEmpty()\n  readonly roles?: Role[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateAdminDto.html":{"url":"classes/CreateAdminDto.html","title":"class - CreateAdminDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateAdminDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/admin/dto/create-admin.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                activationLink\n                            \n                            \n                                    Readonly\n                                addContent\n                            \n                            \n                                    Readonly\n                                editContent\n                            \n                            \n                                    Readonly\n                                editWebSite\n                            \n                            \n                                    Readonly\n                                email\n                            \n                            \n                                    Readonly\n                                isAdmin\n                            \n                            \n                                    Readonly\n                                name\n                            \n                            \n                                    Readonly\n                                password\n                            \n                            \n                                    Readonly\n                                phoneNumber\n                            \n                            \n                                    Readonly\n                                surname\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        activationLink\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'etrhg45ty5yeewt4t4665yупвіяпвкірніп', description: 'admin`s activation link'})@IsUUID(4)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/admin/dto/create-admin.dto.ts:54\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        addContent\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'False', description: 'Right to add content'})@IsBoolean()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/admin/dto/create-admin.dto.ts:68\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        editContent\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'False', description: 'Right to edit content'})@IsBoolean()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/admin/dto/create-admin.dto.ts:75\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        editWebSite\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'False', description: 'Right to edit website'})@IsBoolean()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/admin/dto/create-admin.dto.ts:61\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'user@gmail.com', description: 'admin`s email'})@IsString()@IsEmail()@Matches(/^[a-z0-9]+@[a-z]+\\.[a-z]{2,64}$/, {message: EMAIL_VALIDATION})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/admin/dto/create-admin.dto.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        isAdmin\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'False', description: 'is user Admin'})@IsBoolean()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/admin/dto/create-admin.dto.ts:82\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'Alex', description: 'admin`s name'})@IsString()@Matches(/[a-zA-Z0-9_-]{2,20}/, {message: ADMINNAME_VALIDATION})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/admin/dto/create-admin.dto.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'etrhg45ty5yeewt4t4665y', description: 'admin`s password'})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/admin/dto/create-admin.dto.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        phoneNumber\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: '+251912345678', description: 'admin`s phone number'})@IsString()@Matches(/^[\\+]?[(]?[0-9]{3}[)]?[-\\s\\.]?[0-9]{3}[-\\s\\.]?[0-9]{4,6}$/, {message: PHONENUMBER_VALIDATION})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/admin/dto/create-admin.dto.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        surname\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'Casler', description: 'admin`s name'})@IsString()@Matches(/[a-zA-Z0-9_-]{2,20}/, {message: ADMINNAME_VALIDATION})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/admin/dto/create-admin.dto.ts:22\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsBoolean, IsEmail, IsString, IsUUID, Matches } from 'class-validator';\nimport {\n  EMAIL_VALIDATION,\n  PHONENUMBER_VALIDATION,\n  ADMINNAME_VALIDATION,\n} from '../constants/admin.constants';\n\nexport class CreateAdminDto {\n  @ApiProperty({ example: 'Alex', description: 'admin`s name' })\n  @IsString()\n  @Matches(/[a-zA-Z0-9_-]{2,20}/, {\n    message: ADMINNAME_VALIDATION,\n  })\n  readonly name: string;\n\n  @ApiProperty({ example: 'Casler', description: 'admin`s name' })\n  @IsString()\n  @Matches(/[a-zA-Z0-9_-]{2,20}/, {\n    message: ADMINNAME_VALIDATION,\n  })\n  readonly surname: string;\n\n  @ApiProperty({\n    example: '+251912345678',\n    description: 'admin`s phone number',\n  })\n  @IsString()\n  @Matches(/^[\\+]?[(]?[0-9]{3}[)]?[-\\s\\.]?[0-9]{3}[-\\s\\.]?[0-9]{4,6}$/, {\n    message: PHONENUMBER_VALIDATION,\n  })\n  readonly phoneNumber: string;\n\n  @ApiProperty({ example: 'user@gmail.com', description: 'admin`s email' })\n  @IsString()\n  @IsEmail()\n  @Matches(/^[a-z0-9]+@[a-z]+\\.[a-z]{2,64}$/, {\n    message: EMAIL_VALIDATION,\n  })\n  readonly email: string;\n\n  @ApiProperty({\n    example: 'etrhg45ty5yeewt4t4665y',\n    description: 'admin`s password',\n  })\n  @IsString()\n  readonly password: string;\n\n  @ApiProperty({\n    example: 'etrhg45ty5yeewt4t4665yупвіяпвкірніп',\n    description: 'admin`s activation link',\n  })\n  @IsUUID(4)\n  readonly activationLink: string;\n\n  @ApiProperty({\n    example: 'False',\n    description: 'Right to edit website',\n  })\n  @IsBoolean()\n  readonly editWebSite: boolean;\n\n  @ApiProperty({\n    example: 'False',\n    description: 'Right to add content',\n  })\n  @IsBoolean()\n  readonly addContent: boolean;\n\n  @ApiProperty({\n    example: 'False',\n    description: 'Right to edit content',\n  })\n  @IsBoolean()\n  readonly editContent: boolean;\n\n  @ApiProperty({\n    example: 'False',\n    description: 'is user Admin',\n  })\n  @IsBoolean()\n  readonly isAdmin: boolean;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateAdminRefreshTokenDto.html":{"url":"classes/CreateAdminRefreshTokenDto.html","title":"class - CreateAdminRefreshTokenDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateAdminRefreshTokenDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/admin/dto/create-admin-refresh-token.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                adminAgent\n                            \n                            \n                                    Readonly\n                                adminId\n                            \n                            \n                                    Readonly\n                                email\n                            \n                            \n                                    Readonly\n                                isActivated\n                            \n                            \n                                    Readonly\n                                roles\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        adminAgent\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'Mozilla/5.0 (Windows NT 7.0; Win32; x32) AppleWebKit/523.34 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/523.34', description: 'admin`s agent'})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/admin/dto/create-admin-refresh-token.dto.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        adminId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: '1', description: 'unique identifier'})@IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/admin/dto/create-admin-refresh-token.dto.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'admin@gmail.com', description: 'admin`s email'})@IsString()@IsEmail()@Matches(/^[a-z0-9]+@[a-z]+\\.[a-z]{2,64}$/, {message: EMAIL_VALIDATION})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/admin/dto/create-admin-refresh-token.dto.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        isActivated\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'True', description: 'Is admin activated'})@IsBoolean()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/admin/dto/create-admin-refresh-token.dto.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        roles\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Role[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: '[User, Admin]', description: 'roles of User'})@IsArray()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/admin/dto/create-admin-refresh-token.dto.ts:47\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport {\n  IsEmail,\n  IsString,\n  Matches,\n  IsBoolean,\n  IsNumber,\n  IsArray,\n} from 'class-validator';\nimport { Role } from '../../roles/models/roles.model';\nimport { EMAIL_VALIDATION } from '../constants/admin.constants';\n\nexport class CreateAdminRefreshTokenDto {\n  @ApiProperty({ example: '1', description: 'unique identifier' })\n  @IsNumber()\n  readonly adminId: number;\n\n  @ApiProperty({\n    example: 'True',\n    description: 'Is admin activated',\n  })\n  @IsBoolean()\n  readonly isActivated: boolean;\n\n  @ApiProperty({ example: 'admin@gmail.com', description: 'admin`s email' })\n  @IsString()\n  @IsEmail()\n  @Matches(/^[a-z0-9]+@[a-z]+\\.[a-z]{2,64}$/, {\n    message: EMAIL_VALIDATION,\n  })\n  readonly email: string;\n\n  @ApiProperty({\n    example:\n      // tslint:disable-next-line: max-line-length\n      'Mozilla/5.0 (Windows NT 7.0; Win32; x32) AppleWebKit/523.34 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/523.34',\n    description: 'admin`s agent',\n  })\n  @IsString()\n  readonly adminAgent: string;\n\n  @ApiProperty({\n    example: '[User, Admin]',\n    description: 'roles of User',\n  })\n  @IsArray()\n  readonly roles: Role[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateCategoryDto.html":{"url":"classes/CreateCategoryDto.html","title":"class - CreateCategoryDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateCategoryDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/categories/dto/create.category.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                en\n                            \n                            \n                                rs\n                            \n                            \n                                ru\n                            \n                            \n                                ua\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        en\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@MinLength(2)@MaxLength(30)@Matches(/[a-zA-Z0-9а-яієїґА_ЯЇЄЇЁёА-я_-]{2,30}/)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/categories/dto/create.category.dto.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        rs\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@MinLength(2)@MaxLength(30)@Matches(/[a-zA-Z0-9а-яієїґА_ЯЇЄЇЁёА-я_-]{2,30}/)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/categories/dto/create.category.dto.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ru\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@MinLength(2)@MaxLength(30)@Matches(/[a-zA-Z0-9а-яієїґА_ЯЇЄЇЁёА-я_-]{2,30}/)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/categories/dto/create.category.dto.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ua\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@MinLength(2)@MaxLength(30)@Matches(/[a-zA-Z0-9а-яієїґА_ЯЇЄЇЁёА-я_-]{2,30}/)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/categories/dto/create.category.dto.ts:8\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsString, MinLength, MaxLength, Matches } from 'class-validator';\n\nexport class CreateCategoryDto {\n  @IsString()\n  @MinLength(2)\n  @MaxLength(30)\n  @Matches(/[a-zA-Z0-9а-яієїґА_ЯЇЄЇЁёА-я_-]{2,30}/)\n  ua: string;\n\n  @IsString()\n  @MinLength(2)\n  @MaxLength(30)\n  @Matches(/[a-zA-Z0-9а-яієїґА_ЯЇЄЇЁёА-я_-]{2,30}/)\n  ru: string;\n\n  @IsString()\n  @MinLength(2)\n  @MaxLength(30)\n  @Matches(/[a-zA-Z0-9а-яієїґА_ЯЇЄЇЁёА-я_-]{2,30}/)\n  rs: string;\n\n  @IsString()\n  @MinLength(2)\n  @MaxLength(30)\n  @Matches(/[a-zA-Z0-9а-яієїґА_ЯЇЄЇЁёА-я_-]{2,30}/)\n  en: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateOwnerDto.html":{"url":"classes/CreateOwnerDto.html","title":"class - CreateOwnerDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateOwnerDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/owner/dto/create.owner.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                activationLink\n                            \n                            \n                                    Readonly\n                                email\n                            \n                            \n                                    Readonly\n                                name\n                            \n                            \n                                    Readonly\n                                ownerAgent\n                            \n                            \n                                    Readonly\n                                password\n                            \n                            \n                                    Readonly\n                                phoneNumber\n                            \n                            \n                                    Readonly\n                                surname\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        activationLink\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'etrhg45ty5yeewt4t4665yупвіяпвкірніп', description: 'owner`s activation link'})@IsUUID(4)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/owner/dto/create.owner.dto.ts:58\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'user@gmail.com', description: 'owner`s email'})@IsString()@IsEmail()@Matches(/^[a-z0-9]+@[a-z]+\\.[a-z]{2,64}$/, {message: EMAIL_VALIDATION})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/owner/dto/create.owner.dto.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'Alex', description: 'owner`s name'})@IsString()@Matches(/[a-zA-Z0-9_-]{2,20}/, {message: OWNERNAME_VALIDATION})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/owner/dto/create.owner.dto.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        ownerAgent\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'Mozilla/5.0 (Windows NT 7.0; Win32; x32) AppleWebKit/523.34 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/523.34', description: 'owner`s agent'})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/owner/dto/create.owner.dto.ts:67\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'etrhg45ty5yeewt4t4665y', description: 'owner`s password'})@IsString()@Matches(/^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[@#$%^&+=]).{6,64}$/gm, {message: PASSWORD_VALIDATION})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/owner/dto/create.owner.dto.ts:51\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        phoneNumber\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: '+251912345678', description: 'owner`s phone number'})@IsString()@Matches(/^[\\+]?[(]?[0-9]{3}[)]?[-\\s\\.]?[0-9]{3}[-\\s\\.]?[0-9]{4,6}$/, {message: PHONENUMBER_VALIDATION})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/owner/dto/create.owner.dto.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        surname\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'Casler', description: 'owner`s name'})@IsString()@Matches(/[a-zA-Z0-9_-]{2,20}/, {message: OWNERNAME_VALIDATION})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/owner/dto/create.owner.dto.ts:23\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsEmail, IsString, IsUUID, Matches } from 'class-validator';\nimport {\n  EMAIL_VALIDATION,\n  PASSWORD_VALIDATION,\n  PHONENUMBER_VALIDATION,\n  OWNERNAME_VALIDATION,\n} from '../constants/owner.constants';\n\nexport class CreateOwnerDto {\n  @ApiProperty({ example: 'Alex', description: 'owner`s name' })\n  @IsString()\n  @Matches(/[a-zA-Z0-9_-]{2,20}/, {\n    message: OWNERNAME_VALIDATION,\n  })\n  readonly name: string;\n\n  @ApiProperty({ example: 'Casler', description: 'owner`s name' })\n  @IsString()\n  @Matches(/[a-zA-Z0-9_-]{2,20}/, {\n    message: OWNERNAME_VALIDATION,\n  })\n  readonly surname: string;\n\n  @ApiProperty({\n    example: '+251912345678',\n    description: 'owner`s phone number',\n  })\n  @IsString()\n  @Matches(/^[\\+]?[(]?[0-9]{3}[)]?[-\\s\\.]?[0-9]{3}[-\\s\\.]?[0-9]{4,6}$/, {\n    message: PHONENUMBER_VALIDATION,\n  })\n  readonly phoneNumber: string;\n\n  @ApiProperty({ example: 'user@gmail.com', description: 'owner`s email' })\n  @IsString()\n  @IsEmail()\n  @Matches(/^[a-z0-9]+@[a-z]+\\.[a-z]{2,64}$/, {\n    message: EMAIL_VALIDATION,\n  })\n  readonly email: string;\n\n  @ApiProperty({\n    example: 'etrhg45ty5yeewt4t4665y',\n    description: 'owner`s password',\n  })\n  @IsString()\n  @Matches(/^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[@#$%^&+=]).{6,64}$/gm, {\n    message: PASSWORD_VALIDATION,\n  })\n  readonly password: string;\n\n  @ApiProperty({\n    example: 'etrhg45ty5yeewt4t4665yупвіяпвкірніп',\n    description: 'owner`s activation link',\n  })\n  @IsUUID(4)\n  readonly activationLink: string;\n\n  @ApiProperty({\n    example:\n      // tslint:disable-next-line: max-line-length\n      'Mozilla/5.0 (Windows NT 7.0; Win32; x32) AppleWebKit/523.34 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/523.34',\n    description: 'owner`s agent',\n  })\n  @IsString()\n  readonly ownerAgent: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateOwnerRefreshTokenDto.html":{"url":"classes/CreateOwnerRefreshTokenDto.html","title":"class - CreateOwnerRefreshTokenDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateOwnerRefreshTokenDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/owner/dto/create.owner.refresh.token.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                email\n                            \n                            \n                                    Readonly\n                                isActivated\n                            \n                            \n                                    Readonly\n                                ownerAgent\n                            \n                            \n                                    Readonly\n                                ownerId\n                            \n                            \n                                    Readonly\n                                roles\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'owner@gmail.com', description: 'owner`s email'})@IsString()@IsEmail()@Matches(/^[a-z0-9]+@[a-z]+\\.[a-z]{2,64}$/, {message: EMAIL_VALIDATION})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/owner/dto/create.owner.refresh.token.dto.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        isActivated\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'True', description: 'Is owner activated'})@IsBoolean()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/owner/dto/create.owner.refresh.token.dto.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        ownerAgent\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'Mozilla/5.0 (Windows NT 7.0; Win32; x32) AppleWebKit/523.34 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/523.34', description: 'owner`s agent'})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/owner/dto/create.owner.refresh.token.dto.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        ownerId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: '1', description: 'unique identifier'})@IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/owner/dto/create.owner.refresh.token.dto.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        roles\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Role[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: '[User, Admin]', description: 'roles of User'})@IsArray()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/owner/dto/create.owner.refresh.token.dto.ts:47\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport {\n  IsEmail,\n  IsString,\n  Matches,\n  IsBoolean,\n  IsNumber,\n  IsArray,\n} from 'class-validator';\nimport { Role } from '../../roles/models/roles.model';\nimport { EMAIL_VALIDATION } from '../constants/owner.constants';\n\nexport class CreateOwnerRefreshTokenDto {\n  @ApiProperty({ example: '1', description: 'unique identifier' })\n  @IsNumber()\n  readonly ownerId: number;\n\n  @ApiProperty({\n    example: 'True',\n    description: 'Is owner activated',\n  })\n  @IsBoolean()\n  readonly isActivated: boolean;\n\n  @ApiProperty({ example: 'owner@gmail.com', description: 'owner`s email' })\n  @IsString()\n  @IsEmail()\n  @Matches(/^[a-z0-9]+@[a-z]+\\.[a-z]{2,64}$/, {\n    message: EMAIL_VALIDATION,\n  })\n  readonly email: string;\n\n  @ApiProperty({\n    example:\n      // tslint:disable-next-line: max-line-length\n      'Mozilla/5.0 (Windows NT 7.0; Win32; x32) AppleWebKit/523.34 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/523.34',\n    description: 'owner`s agent',\n  })\n  @IsString()\n  readonly ownerAgent: string;\n\n  @ApiProperty({\n    example: '[User, Admin]',\n    description: 'roles of User',\n  })\n  @IsArray()\n  readonly roles: Role[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateProductDto.html":{"url":"classes/CreateProductDto.html","title":"class - CreateProductDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateProductDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/product/dto/create.product.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                description\n                            \n                            \n                                    Readonly\n                                price\n                            \n                            \n                                    Readonly\n                                quantity\n                            \n                            \n                                    Readonly\n                                title\n                            \n                            \n                                \n                            \n                            \n                                \n                            \n                            \n                                \n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsDefined()@Type(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/product/dto/create.product.dto.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        price\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsDefined()@Type(undefined)@IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/product/dto/create.product.dto.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        quantity\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsDefined()@Transform(value => )@Type(undefined)@IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/product/dto/create.product.dto.ts:69\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsDefined()@Type(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/product/dto/create.product.dto.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                    \n                \n            \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsDefined()@Type(undefined, readonly, sizes, undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/product/dto/create.product.dto.ts:54\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                    \n                \n            \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsDefined()@Type(undefined, readonly, colours, undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/product/dto/create.product.dto.ts:63\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                    \n                \n            \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsDefined()@Type(undefined, readonly, categories, undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/product/dto/create.product.dto.ts:76\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Transform, Type } from 'class-transformer';\nimport { IsString, IsNumber, IsDefined, Matches, ArrayNotEmpty, IsArray, MaxLength} from 'class-validator';\nimport { ParseFormDataJsonPipe } from '../../common/pipes/formdata.pipe';\nimport { ParseJsonPipe } from '../../common/pipes/parse.json.pipe';\nclass Nested {\n  @IsDefined()\n  @IsString()\n  @Matches(/[a-zA-Z0-9а-яієїґА_ЯЇЄЇЁёА-яzžitisšte_-]/gi)  \n  ua: string;\n  @IsDefined()\n  @IsString() \n  @Matches(/[a-zA-Z0-9а-яієїґА_ЯЇЄЇЁёА-яzžitisšte_-]/gi)\n  ru: string;\n  @IsDefined()\n  @IsString()\n  @Matches(/[a-zA-Z0-9а-яієїґА_ЯЇЄЇЁёА-яzžitisšte_-]/gi)\n  rs: string;\n  @IsDefined()\n  @IsString()\n  @Matches(/[a-zA-Z0-9а-яієїґА_ЯЇЄЇЁёА-яzžitisšte_-]/gi)\n  en: string;\n}\nexport class CreateProductDto {\n  @IsDefined()\n  @Type(() => Nested)\n  readonly title: {\n    ua: string;\n    ru: string;\n    rs: string;\n    en: string;\n  };\n\n  @IsDefined()\n  @Type(() => Nested)\n  readonly description: {\n    ua: string;\n    ru: string;\n    rs: string;\n    en: string;\n  };\n\n  @IsDefined()\n  @Type(()=> Number)\n  @IsNumber()\n  readonly price: number;\n\n  @IsDefined()\n  @Type(() => Array)\n  // @Transform((value) => ParseJsonPipe.transform(value.value, value.obj))\n  // @IsArray()\n  // @ArrayNotEmpty()\n  // @IsString({ each: true }) \n  // @MaxLength(15, { each: true })\n  readonly sizes: string[];\n\n  @IsDefined()\n  @Type(() => Array)\n  // @Transform((value) => JSON.parse(value.value))\n  // @IsArray()\n  // @ArrayNotEmpty()\n  // @IsString({ each: true }) \n  // @MaxLength(15, { each: true })\n  readonly colours: string[];\n\n  @IsDefined()\n  @Transform((value: any) => Number(value.value))\n  @Type(()=> Number)\n  @IsNumber()\n  readonly quantity: number;\n\n  @IsDefined()\n  @Type(() => Array)\n  // @Transform((value) => JSON.parse(value.value))\n  // @IsArray()\n  // @ArrayNotEmpty()\n  readonly categories: number[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateReviewDto.html":{"url":"classes/CreateReviewDto.html","title":"class - CreateReviewDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateReviewDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/reviews/create.review.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                name\n                            \n                            \n                                    Readonly\n                                review\n                            \n                            \n                                    Readonly\n                                surname\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsDefined()@Matches(/[a-zA-Z0-9а-яієїґА_ЯЇЄЇЁёА-яzžitisšte_-]/gi)@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/reviews/create.review.dto.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        review\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsDefined()@Matches(/[a-zA-Z0-9а-яієїґА_ЯЇЄЇЁёА-яzžitisšte_-]/gi)@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/reviews/create.review.dto.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        surname\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsDefined()@Matches(/[a-zA-Z0-9а-яієїґА_ЯЇЄЇЁёА-яzžitisšte_-]/gi)@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/reviews/create.review.dto.ts:12\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsString, IsDefined, Matches, } from 'class-validator';\n\nexport class CreateReviewDto {\n  @IsDefined()\n  @Matches(/[a-zA-Z0-9а-яієїґА_ЯЇЄЇЁёА-яzžitisšte_-]/gi)\n  @IsString()\n  readonly name: string;\n\n  @IsDefined()\n  @Matches(/[a-zA-Z0-9а-яієїґА_ЯЇЄЇЁёА-яzžitisšte_-]/gi)\n  @IsString()\n  readonly surname: string;\n\n  @IsDefined()\n  @Matches(/[a-zA-Z0-9а-яієїґА_ЯЇЄЇЁёА-яzžitisšte_-]/gi)\n  @IsString()\n  readonly review: string;\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateRoleDto.html":{"url":"classes/CreateRoleDto.html","title":"class - CreateRoleDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateRoleDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/roles/dto/create.role.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                description\n                            \n                            \n                                    Readonly\n                                value\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'Admin', description: 'Role`s description'})@IsString()@MinLength(2)@MaxLength(30)@Matches(/[a-zA-Z0-9а-яієїґА_ЯЇЄЇЁёА-я_-]{2,30}/)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/roles/dto/create.role.dto.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        value\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'ADMIN', description: 'user`s role'})@IsString()@MinLength(2)@MaxLength(30)@Matches(/[a-zA-Z0-9а-яієїґА_ЯЇЄЇЁёА-я_-]{2,30}/)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/roles/dto/create.role.dto.ts:10\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsString, MinLength, MaxLength, Matches } from 'class-validator';\n\nexport class CreateRoleDto {\n  @ApiProperty({ example: 'ADMIN', description: 'user`s role' })\n  @IsString()\n  @MinLength(2)\n  @MaxLength(30)\n  @Matches(/[a-zA-Z0-9а-яієїґА_ЯЇЄЇЁёА-я_-]{2,30}/)\n  readonly value: string;\n  @ApiProperty({ example: 'Admin', description: 'Role`s description' })\n  @IsString()\n  @MinLength(2)\n  @MaxLength(30)\n  @Matches(/[a-zA-Z0-9а-яієїґА_ЯЇЄЇЁёА-я_-]{2,30}/)\n  readonly description: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateUserDto.html":{"url":"classes/CreateUserDto.html","title":"class - CreateUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/dto/create-user.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                email\n                            \n                            \n                                    Readonly\n                                name\n                            \n                            \n                                    Readonly\n                                password\n                            \n                            \n                                    Readonly\n                                phoneNumber\n                            \n                            \n                                    Readonly\n                                surname\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'user@gmail.com', description: 'user`s email'})@IsString()@IsEmail()@Matches(/^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/, {message: EMAIL_VALIDATION})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:53\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'Alex', description: 'user`s name'})@IsString()@MinLength(2)@MaxLength(30)@Matches(/[a-zA-Z0-9а-яієїґА_ЯЇЄЇЁёА-я_-]{2,30}/, {message: USERNAME_VALIDATION})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'etrhg45ty5yeewt4t4665y', description: 'user`s password'})@IsString()@Matches(/^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{8,}$/, {message: PASSWORD_VALIDATION})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:66\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        phoneNumber\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: '+381056733', description: 'user phone number'})@IsString()@IsEmail()@Matches(/^[\\+]?[(]?[0-9]{3}[)]?[-\\s\\.]?[0-9]{3}[-\\s\\.]?[0-9]{4,6}$/, {message: PHONE_NUMRER_VALIDATION})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        surname\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'Cusler', description: 'user`s surname'})@IsString()@MinLength(2)@MaxLength(30)@Matches(/[a-zA-Z0-9а-яієїґА_ЯЇЄЇЁёА-я_-]{2,30}/, {message: SURNAME_VALIDATION})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:34\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport {\n  IsEmail,\n  IsString,\n  Matches,\n  MaxLength,\n  MinLength,\n} from 'class-validator';\nimport {\n  EMAIL_VALIDATION,\n  PASSWORD_VALIDATION,\n  PHONE_NUMRER_VALIDATION,\n  SURNAME_VALIDATION,\n  USERNAME_VALIDATION,\n} from '../constants/user.constants';\n\nexport class CreateUserDto {\n  @ApiProperty({ example: 'Alex', description: 'user`s name' })\n  @IsString()\n  @MinLength(2)\n  @MaxLength(30)\n  @Matches(/[a-zA-Z0-9а-яієїґА_ЯЇЄЇЁёА-я_-]{2,30}/, {\n    message: USERNAME_VALIDATION,\n  })\n  readonly name: string;\n\n  @ApiProperty({ example: 'Cusler', description: 'user`s surname' })\n  @IsString()\n  @MinLength(2)\n  @MaxLength(30)\n  @Matches(/[a-zA-Z0-9а-яієїґА_ЯЇЄЇЁёА-я_-]{2,30}/, {\n    message: SURNAME_VALIDATION,\n  })\n  readonly surname: string;\n\n  @ApiProperty({ example: '+381056733', description: 'user phone number' })\n  @IsString()\n  @IsEmail()\n  @Matches(/^[\\+]?[(]?[0-9]{3}[)]?[-\\s\\.]?[0-9]{3}[-\\s\\.]?[0-9]{4,6}$/, {\n    message: PHONE_NUMRER_VALIDATION,\n  })\n  readonly phoneNumber: string;\n\n  @ApiProperty({ example: 'user@gmail.com', description: 'user`s email' })\n  @IsString()\n  @IsEmail()\n  @Matches(\n    /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/,\n    {\n      message: EMAIL_VALIDATION,\n    },\n  )\n  readonly email: string;\n\n  @ApiProperty({\n    example: 'etrhg45ty5yeewt4t4665y',\n    description: 'user`s password',\n  })\n  @IsString()\n  @Matches(\n    /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{8,}$/,\n    {\n      message: PASSWORD_VALIDATION,\n    },\n  )\n  readonly password: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateUserRefreshTokenDto.html":{"url":"classes/CreateUserRefreshTokenDto.html","title":"class - CreateUserRefreshTokenDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateUserRefreshTokenDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/dto/create-user-refresh-token.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                email\n                            \n                            \n                                    Readonly\n                                isActivated\n                            \n                            \n                                    Readonly\n                                roles\n                            \n                            \n                                    Readonly\n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'user@gmail.com', description: 'user`s email'})@IsString()@IsEmail()@Matches(/^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/, {message: EMAIL_VALIDATION})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user-refresh-token.dto.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        isActivated\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'True', description: 'Is user activated'})@IsBoolean()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user-refresh-token.dto.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        roles\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Role[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: '[User, Admin]', description: 'roles of User'})@IsArray()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user-refresh-token.dto.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        userId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: '1', description: 'unique identifier'})@IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user-refresh-token.dto.ts:16\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport {\n  IsEmail,\n  IsString,\n  Matches,\n  IsBoolean,\n  IsNumber,\n  IsArray,\n} from 'class-validator';\nimport { Role } from '../../roles/models/roles.model';\nimport { EMAIL_VALIDATION } from '../constants/user.constants';\n\nexport class CreateUserRefreshTokenDto {\n  @ApiProperty({ example: '1', description: 'unique identifier' })\n  @IsNumber()\n  readonly userId: number;\n\n  @ApiProperty({\n    example: 'True',\n    description: 'Is user activated',\n  })\n  @IsBoolean()\n  readonly isActivated: boolean;\n\n  @ApiProperty({\n    example: '[User, Admin]',\n    description: 'roles of User',\n  })\n  @IsArray()\n  readonly roles: Role[];\n\n  @ApiProperty({ example: 'user@gmail.com', description: 'user`s email' })\n  @IsString()\n  @IsEmail()\n  @Matches(\n    /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/,\n    {\n      message: EMAIL_VALIDATION,\n    },\n  )\n  readonly email: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/EditContentGuard.html":{"url":"guards/EditContentGuard.html","title":"guard - EditContentGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    EditContentGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/common/guards/edit-content.guard.ts\n            \n\n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(adminService: AdminService)\n                    \n                \n                        \n                            \n                                Defined in src/common/guards/edit-content.guard.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        adminService\n                                                  \n                                                        \n                                                                        AdminService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate(context: ExecutionContext)\n                \n            \n\n\n            \n                \n                    Defined in src/common/guards/edit-content.guard.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                            ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     boolean | Promise | Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import {\n  CanActivate,\n  ExecutionContext,\n  HttpStatus,\n  Injectable,\n  Scope,\n} from '@nestjs/common';\nimport { Observable } from 'rxjs';\nimport { INVALID_REQUEST, USER_NOT_DETECTED, NO_RIGHT } from '../../auth/auth.constants';\nimport { AdminService } from '../../admin/services/admin.service';\nimport { Payload } from '../../core/interfaces/auth.interfaces';\nimport { ApiException } from '../exceptions/api.exception';\n\n@Injectable({ scope: Scope.REQUEST })\nexport class EditContentGuard implements CanActivate {\n  constructor(private readonly adminService: AdminService) {}\n\n  canActivate(\n    context: ExecutionContext,\n  ): boolean | Promise | Observable {\n    return (async () => {\n      const req = context.switchToHttp().getRequest();\n      const payload: Payload = req?.payload;\n      const type: 'OWNER' | 'ADMIN' | null = req['type'];\n      if (!payload) {\n        throw new ApiException(HttpStatus.UNAUTHORIZED, 'Unathorized!', INVALID_REQUEST);\n      }\n      if (type === undefined) {\n        throw new ApiException(HttpStatus.UNAUTHORIZED, 'Unathorized!', USER_NOT_DETECTED);\n      }\n      if (type && type === 'OWNER') {\n        return true;\n      }\n      const admin = await this.adminService.getAdminById(payload.userId);\n      if (type && type === 'ADMIN' && admin.getEditContent()) {\n        return true;\n      }\n      throw new ApiException(HttpStatus.FORBIDDEN, 'Forbidden!', NO_RIGHT);\n    })();\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/EditWebsiteGuard.html":{"url":"guards/EditWebsiteGuard.html","title":"guard - EditWebsiteGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    EditWebsiteGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/common/guards/edit-website.guard.ts\n            \n\n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(adminService: AdminService)\n                    \n                \n                        \n                            \n                                Defined in src/common/guards/edit-website.guard.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        adminService\n                                                  \n                                                        \n                                                                        AdminService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate(context: ExecutionContext)\n                \n            \n\n\n            \n                \n                    Defined in src/common/guards/edit-website.guard.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                            ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     boolean | Promise | Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import {\n  CanActivate,\n  ExecutionContext,\n  HttpStatus,\n  Injectable,\n  Scope,\n} from '@nestjs/common';\nimport { Observable } from 'rxjs';\nimport { INVALID_REQUEST, NO_RIGHT, USER_NOT_DETECTED } from '../../auth/auth.constants';\nimport { AdminService } from '../../admin/services/admin.service';\nimport { Payload } from '../../core/interfaces/auth.interfaces';\nimport { ApiException } from '../exceptions/api.exception';\n\n@Injectable({ scope: Scope.REQUEST })\nexport class EditWebsiteGuard implements CanActivate {\n  constructor(private readonly adminService: AdminService) {}\n\n  canActivate(\n    context: ExecutionContext,\n  ): boolean | Promise | Observable {\n    return (async () => {\n      const req = context.switchToHttp().getRequest();\n      const payload: Payload = req?.payload;\n      const type: 'OWNER' | 'ADMIN' | null = req['type'];\n      if (!payload) {\n        throw new ApiException(HttpStatus.UNAUTHORIZED, 'Unathorized!', INVALID_REQUEST);\n      }\n      if (type === undefined) {\n        throw new ApiException(HttpStatus.UNAUTHORIZED, 'Unathorized!', USER_NOT_DETECTED);\n      }\n      if (type && type === 'OWNER') {\n        return true;\n      }\n      const admin = await this.adminService.getAdminById(payload.userId);\n      if (type && type === 'ADMIN' && admin.getEditWebSite()) {\n        return true;\n      }\n      throw new ApiException(HttpStatus.FORBIDDEN, 'Forbidden!', NO_RIGHT);\n    })();\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FilesService.html":{"url":"injectables/FilesService.html","title":"injectable - FilesService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  FilesService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/services/file.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createFile\n                            \n                            \n                                createfileName\n                            \n                            \n                                destination\n                            \n                            \n                                fileFilter\n                            \n                            \n                                    Async\n                                unlinkFile\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        createFile\n                        \n                    \n                \n            \n            \n                \n                    \n                    createFile(file: literal type)\n                \n            \n\n\n            \n                \n                    Defined in src/core/services/file.service.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    file\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createfileName\n                        \n                    \n                \n            \n            \n                \ncreatefileName(req: Request, file: Express.Multer.File, callback: any)\n                \n            \n\n\n            \n                \n                    Defined in src/core/services/file.service.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    file\n                                    \n                                            Express.Multer.File\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    callback\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        destination\n                        \n                    \n                \n            \n            \n                \ndestination(req: Request, file: Express.Multer.File, callback: (error: Error,destination: string) => void)\n                \n            \n\n\n            \n                \n                    Defined in src/core/services/file.service.ts:69\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    file\n                                    \n                                            Express.Multer.File\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    callback\n                                    \n                                                function\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        fileFilter\n                        \n                    \n                \n            \n            \n                \nfileFilter(req: Request, file: Express.Multer.File, callback: (error: Error,acceptFile: boolean) => void)\n                \n            \n\n\n            \n                \n                    Defined in src/core/services/file.service.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    file\n                                    \n                                            Express.Multer.File\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    callback\n                                    \n                                                function\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        unlinkFile\n                        \n                    \n                \n            \n            \n                \n                    \n                    unlinkFile(filePath: string)\n                \n            \n\n\n            \n                \n                    Defined in src/core/services/file.service.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filePath\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpException, HttpStatus, Injectable, Scope } from '@nestjs/common';\nimport * as fs from 'fs';\nimport * as uuid from 'uuid';\nimport path, { extname } from 'path';\nimport { Request } from 'express';\nimport { mkdirSync, existsSync } from 'fs';\nimport { v4 } from 'uuid';\n\n// tslint:disable-next-line: class-name\ninterface fileCreated {\n  readonly fileName: string;\n  readonly filePath: string;\n}\n\n@Injectable({ scope: Scope.DEFAULT })\nexport class FilesService {\n  async createFile(file: {\n    buffer: string | NodeJS.ArrayBufferView;\n  }): Promise {\n    try {\n      const fileName = uuid.v4() + '.jpg';\n      const filePath = path.resolve(__dirname, '..', 'static');\n      if (!fs.existsSync(filePath)) {\n        fs.mkdirSync(filePath, { recursive: true });\n      }\n      fs.writeFileSync(path.join(filePath, fileName), file.buffer);\n      return { fileName: fileName, filePath: filePath };\n    } catch (e) {\n      throw new HttpException(\n        'Error occured while writing file.',\n        HttpStatus.INTERNAL_SERVER_ERROR,\n      );\n    }\n  }\n\n  async unlinkFile(filePath: string) {\n    filePath = path.join(__dirname, 'static', filePath);\n    fs.unlink(filePath, (err) => {\n      throw new HttpException(err.message, HttpStatus.INTERNAL_SERVER_ERROR);\n    });\n  }\n\n\n  createfileName(\n    req: Request,\n    file: Express.Multer.File,\n    callback: any,  \n  ){\n    const name = file.originalname.split('.')[0];\n    const ext = extname(file.originalname);\n    const randomName = v4();\n    callback(null, `${randomName}--${req.body.title}--${name}${ext}`);\n  }\n\n  fileFilter(\n    req: Request,\n    file: Express.Multer.File,\n    callback: (error: Error, acceptFile: boolean) => void\n  ){\n    const filetypes = /\\.(jpg|jpeg|png|gif)$/;\n    const extname = filetypes.test(path.extname(file.originalname).toLowerCase());\n    const mimetype = filetypes.test(file.mimetype);\n    if(mimetype && extname){\n        return callback(null, true);\n    } \n    return callback(new Error('Only image files are allowed!'), false);\n  }  \n\n  destination (\n    req: Request, \n    file: Express.Multer.File, \n    callback: (error: Error, destination: string) => void\n  ){\n    const destination = path.join(__dirname, 'static', 'products', `${req?.body?.title}`);\n    const imagesPath = path.join(__dirname, 'static', 'products', `${req?.body?.title}`, file.fieldname);\n    if (!existsSync(destination)) {\n        mkdirSync(destination, { recursive: true });\n    }\n    if (!existsSync(imagesPath)) {\n        mkdirSync(imagesPath, { recursive: true });\n    }\n    callback(null, imagesPath);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GarbageCollectingProcessor.html":{"url":"classes/GarbageCollectingProcessor.html","title":"class - GarbageCollectingProcessor","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GarbageCollectingProcessor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/processors/garbage.processor.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                handleTranscode\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Logger(GarbageCollectingProcessor.name)\n                    \n                \n                    \n                        \n                                Defined in src/core/processors/garbage.processor.ts:7\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        handleTranscode\n                        \n                    \n                \n            \n            \n                \nhandleTranscode(job: Job)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Process('transcode')\n                \n            \n\n            \n                \n                    Defined in src/core/processors/garbage.processor.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    job\n                                    \n                                            Job\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Process, Processor } from '@nestjs/bull';\nimport { Logger } from '@nestjs/common';\nimport { Job } from 'bull';\n\n@Processor('garbageCollecting')\nexport class GarbageCollectingProcessor {\n  private readonly logger = new Logger(GarbageCollectingProcessor.name);\n\n  @Process('transcode')\n  handleTranscode(job: Job) {\n    this.logger.debug('Start transcoding...');\n    this.logger.debug(job.data);\n    this.logger.debug('Transcoding completed');\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GlobalInterceptor.html":{"url":"injectables/GlobalInterceptor.html","title":"injectable - GlobalInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  GlobalInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/interceptors/global.interceptor.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        intercept\n                        \n                    \n                \n            \n            \n                \nintercept(context: ExecutionContext, next: CallHandler)\n                \n            \n\n\n            \n                \n                    Defined in src/core/interceptors/global.interceptor.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                            ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                            CallHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  Injectable,\n  NestInterceptor,\n  ExecutionContext,\n  CallHandler,\n  RequestTimeoutException,\n} from '@nestjs/common';\nimport { Observable, throwError, TimeoutError } from 'rxjs';\nimport { catchError, timeout } from 'rxjs/operators';\n\n@Injectable()\nexport class GlobalInterceptor implements NestInterceptor {\n  intercept(context: ExecutionContext, next: CallHandler): Observable {\n    return next.handle().pipe(\n      timeout(5000),\n      catchError((err) => {\n        if (err instanceof TimeoutError) {\n          return throwError(() => new RequestTimeoutException());\n        }\n        return throwError(() => err);\n      }),\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/HttpExceptionFilter.html":{"url":"classes/HttpExceptionFilter.html","title":"class - HttpExceptionFilter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  HttpExceptionFilter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/filters/http-exception.filter.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        ExceptionFilter\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                catch\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        catch\n                        \n                    \n                \n            \n            \n                \ncatch(exception: HttpException, host: ArgumentsHost)\n                \n            \n\n\n            \n                \n                    Defined in src/common/filters/http-exception.filter.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    exception\n                                    \n                                            HttpException\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    host\n                                    \n                                            ArgumentsHost\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n  ExceptionFilter,\n  Catch,\n  ArgumentsHost,\n  HttpException,\n} from '@nestjs/common';\nimport { Request, Response } from 'express';\n\n@Catch(HttpException)\nexport class HttpExceptionFilter implements ExceptionFilter {\n  catch(exception: HttpException, host: ArgumentsHost) {\n    const ctx = host.switchToHttp();\n    const response = ctx.getResponse();\n    const request = ctx.getRequest();\n    const status = exception.getStatus();\n    const message = exception.message;\n    response.status(status).json({\n      statusCode: status,\n      message: message,\n      timestamp: new Date().toISOString(),\n      path: request.url,\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ITelegramModuleAsyncOptions.html":{"url":"interfaces/ITelegramModuleAsyncOptions.html","title":"interface - ITelegramModuleAsyncOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ITelegramModuleAsyncOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/telegram/telegram.interface.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    Pick\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            inject\n                                        \n                                \n                                \n                                        \n                                            useFactory\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        inject\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        inject:     any[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        useFactory\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        useFactory:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ModuleMetadata } from '@nestjs/common';\n\nexport interface ITelegramOptions {\n  chatId: string;\n  token: string;\n}\n\nexport interface ITelegramModuleAsyncOptions\n  extends Pick {\n  useFactory: (...args: any[]) => Promise | ITelegramOptions;\n  inject?: any[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ITelegramOptions.html":{"url":"interfaces/ITelegramOptions.html","title":"interface - ITelegramOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ITelegramOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/telegram/telegram.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            chatId\n                                        \n                                \n                                \n                                        \n                                            token\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        chatId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        chatId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        token\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        token:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ModuleMetadata } from '@nestjs/common';\n\nexport interface ITelegramOptions {\n  chatId: string;\n  token: string;\n}\n\nexport interface ITelegramModuleAsyncOptions\n  extends Pick {\n  useFactory: (...args: any[]) => Promise | ITelegramOptions;\n  inject?: any[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/InitializeEmailMiddleware.html":{"url":"injectables/InitializeEmailMiddleware.html","title":"injectable - InitializeEmailMiddleware","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  InitializeEmailMiddleware\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/middlewares/initialize-email.middleware.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                use\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(ownerService: OwnerService, adminService: AdminService, userService: UsersService)\n                    \n                \n                        \n                            \n                                Defined in src/common/middlewares/initialize-email.middleware.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        ownerService\n                                                  \n                                                        \n                                                                        OwnerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        adminService\n                                                  \n                                                        \n                                                                        AdminService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UsersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        use\n                        \n                    \n                \n            \n            \n                \n                    \n                    use(req: Request, res: Response, next: NextFunction)\n                \n            \n\n\n            \n                \n                    Defined in src/common/middlewares/initialize-email.middleware.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                            NextFunction\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  BadRequestException,\n  HttpStatus,\n  Injectable,\n  NestMiddleware,\n  NotFoundException,\n  Req,\n  Scope,\n} from '@nestjs/common';\nimport { Request, Response, NextFunction } from 'express';\nimport { Next, Res } from '@nestjs/common/decorators';\nimport { AdminService } from '../../admin/services/admin.service';\nimport { OwnerService } from '../../owner/services/owner.service';\nimport { UsersService } from '../../users/services/users.service';\nimport { EMAIL_NOT_PROVIDED, USER_WITH_EMAIL_DOESNT_EXIST, USER_WITH_EMAIL_NOT_FOUND } from '../../auth/auth.constants';\nimport { ApiException } from '../exceptions/api.exception';\n@Injectable({ scope: Scope.REQUEST })\nexport class InitializeEmailMiddleware implements NestMiddleware {\n  constructor(\n    private readonly ownerService: OwnerService,\n    private readonly adminService: AdminService,\n    private readonly userService: UsersService,\n  ) {}\n  async use(\n    @Req() req: Request,\n    @Res() res: Response,\n    @Next() next: NextFunction,\n  ) {\n    const email = req?.body?.email;\n    try {\n      if (!email) {\n        throw new ApiException(HttpStatus.BAD_REQUEST, 'Bad request', EMAIL_NOT_PROVIDED);\n      }\n      const owner = await this.ownerService.getOwnerByEmail(email);\n      if (owner) {\n        req['codeDto'] = { email: owner.email, type: 'OWNER' };\n        return next();\n      }\n      const admin = await this.adminService.getAdminByEmail(email);\n      if (admin) {\n        req['codeDto'] = { email: admin.email, type: 'ADMIN' };\n        return next();\n      }\n      const user = await this.userService.getUserByEmail(email);\n      if (!user) {\n        throw new ApiException(HttpStatus.NOT_FOUND, 'Not found!', USER_WITH_EMAIL_NOT_FOUND);\n      }\n      res.setHeader('X-Content-Type-Options', 'nosniff');\n      req['codeDto'] = { email: user.email, type: null };\n      return next();\n    } catch (err: unknown) {\n      return next(err);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/InitializeUser.html":{"url":"interfaces/InitializeUser.html","title":"interface - InitializeUser","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  InitializeUser\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/interfaces/user.interfaces.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            confirmPassword\n                                        \n                                \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            password\n                                        \n                                \n                                \n                                        \n                                            phoneNumber\n                                        \n                                \n                                \n                                        \n                                            surname\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        confirmPassword\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        confirmPassword:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        password\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        password:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        phoneNumber\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        phoneNumber:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        surname\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        surname:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface UserRefreshCreationAttrbs {\n  userId: number;\n  userRefreshToken: string;\n  userAgent: string;\n  email: string;\n}\n\nexport interface RolecreationAttrbs {\n  value: string;\n  description: string;\n}\nexport interface UsercreationAttrbs {\n  name: string;\n  surname: string;\n  email: string;\n  phoneNumber: string;\n  password: string;\n  activationLink: string;\n}\n\nexport interface InitializeUser {\n  name: string;\n  surname: string;\n  phoneNumber: string;\n  email: string;\n  password: string;\n  confirmPassword: string;\n}\n\nexport interface ValidateUser {\n  email: string;\n  password: string;\n}\n\nexport interface UserInterface {\n  id: number;\n  name: string;\n  surname: string;\n  email: string;\n  phoneNumber: string;\n  isAdmin: boolean;\n  addContent: boolean;\n  editContent: boolean;\n  editWebsite: boolean;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/InitializeUserMiddleware.html":{"url":"injectables/InitializeUserMiddleware.html","title":"injectable - InitializeUserMiddleware","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  InitializeUserMiddleware\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/middlewares/initialize-user.middleware.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                use\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(ownerJwtRefreshTokenService: OwnerJwtRefreshService, adminJwtRefreshTokenService: AdminJwtRefreshService, userJwtRefreshTokenService: UserJwtRefreshTokenService)\n                    \n                \n                        \n                            \n                                Defined in src/common/middlewares/initialize-user.middleware.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        ownerJwtRefreshTokenService\n                                                  \n                                                        \n                                                                        OwnerJwtRefreshService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        adminJwtRefreshTokenService\n                                                  \n                                                        \n                                                                        AdminJwtRefreshService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userJwtRefreshTokenService\n                                                  \n                                                        \n                                                                        UserJwtRefreshTokenService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        use\n                        \n                    \n                \n            \n            \n                \n                    \n                    use(req: Request, res: Response, next: NextFunction)\n                \n            \n\n\n            \n                \n                    Defined in src/common/middlewares/initialize-user.middleware.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                            NextFunction\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  BadRequestException,\n  HttpStatus,\n  Injectable,\n  NestMiddleware,\n  Req,\n  Scope,\n} from '@nestjs/common';\nimport { Request, Response, NextFunction } from 'express';\nimport { OwnerJwtRefreshService } from '../../owner/services/jwt-refresh.service';\nimport { AdminJwtRefreshService } from '../../admin/services/jwt-refresh.service';\nimport { UserJwtRefreshTokenService } from '../../users/services/jwt-refresh.service';\nimport { Next, Res } from '@nestjs/common/decorators';\nimport { REFRESH_TOKEN_NOT_PROVIDED, INVALID_REFRESH_TOKEN } from '../../auth/auth.constants';\nimport { ApiException } from '../exceptions/api.exception';\n@Injectable({ scope: Scope.REQUEST })\nexport class InitializeUserMiddleware implements NestMiddleware {\n  constructor(\n    private readonly ownerJwtRefreshTokenService: OwnerJwtRefreshService,\n    private readonly adminJwtRefreshTokenService: AdminJwtRefreshService,\n    private readonly userJwtRefreshTokenService: UserJwtRefreshTokenService,\n  ) {}\n  async use(\n    @Req() req: Request,\n    @Res() res: Response,\n    @Next() next: NextFunction,\n  ) {\n    const refreshToken = req?.cookies['refreshToken'];\n    if (!refreshToken) {\n      throw new ApiException(HttpStatus.BAD_REQUEST, 'Bad request!', REFRESH_TOKEN_NOT_PROVIDED);\n    }\n    const decodedToken = Buffer.from(refreshToken, 'base64').toString('ascii');\n    try {\n      res.setHeader(\n        'Strict-Transport-Security',\n        'max-age=31536000; includeSubDomains',\n      );\n      const ownerRefreshToken =\n        await this.ownerJwtRefreshTokenService.findToken(decodedToken);\n      if (ownerRefreshToken) {\n        req['type'] = 'OWNER';\n        return next();\n      }\n      const adminRefreshToken =\n        await this.adminJwtRefreshTokenService.findToken(decodedToken);\n      if (adminRefreshToken) {\n        req['type'] = 'ADMIN';\n        return next();\n      }\n      const userRefreshToken = await this.userJwtRefreshTokenService.findToken(\n        decodedToken,\n      );\n      if (!userRefreshToken) {\n        throw new ApiException(HttpStatus.BAD_REQUEST, 'Bad request!', INVALID_REFRESH_TOKEN);\n      }\n      req['type'] = null;\n      return next();\n    } catch (err: unknown) {\n      return next(err);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/JwtAuthGuard.html":{"url":"guards/JwtAuthGuard.html","title":"guard - JwtAuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    JwtAuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/common/guards/jwt-auth.guard.ts\n            \n\n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/common/guards/jwt-auth.guard.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate(context: ExecutionContext)\n                \n            \n\n\n            \n                \n                    Defined in src/common/guards/jwt-auth.guard.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                            ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     boolean | Promise | Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import {\n  CanActivate,\n  ExecutionContext,\n  HttpStatus,\n  Injectable,\n  Scope,\n} from '@nestjs/common';\nimport { Observable } from 'rxjs';\nimport { USER_NOT_AUTHORIZIED } from '../../auth/auth.constants';\nimport { AuthService } from '../../auth/auth.service';\nimport { Payload } from '../../core/interfaces/auth.interfaces';\nimport { ApiException } from '../exceptions/api.exception';\n@Injectable({ scope: Scope.REQUEST })\nexport class JwtAuthGuard implements CanActivate {\n  constructor(private authService: AuthService) {}\n\n  canActivate(\n    context: ExecutionContext,\n  ): boolean | Promise | Observable {\n    return (async () => {\n      const req = context.switchToHttp().getRequest();\n      const authHeader = req.headers.authorization;\n      if (!authHeader) {\n        throw new ApiException(HttpStatus.UNAUTHORIZED, 'Unathorized!', USER_NOT_AUTHORIZIED);\n      }\n      const bearer = authHeader.split(' ')[0];\n      const accessToken = authHeader.split(' ')[1];\n      if (bearer !== 'Bearer' || !accessToken) {\n        throw new ApiException(HttpStatus.UNAUTHORIZED, 'Unathorized!', USER_NOT_AUTHORIZIED);\n      }\n      const decodedToken = Buffer.from(accessToken, 'base64').toString('ascii');\n      let payload: Payload;\n      try {\n        payload = await this.authService.validateAccessToken(decodedToken);\n      } catch (err) {\n        throw new ApiException(HttpStatus.UNAUTHORIZED, 'Unathorized!', USER_NOT_AUTHORIZIED);\n      }\n      if (!payload) {\n        throw new ApiException(HttpStatus.UNAUTHORIZED, 'Unathorized!', USER_NOT_AUTHORIZIED);\n      }\n      req.payload = payload;\n      return true;\n    })();\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/JwtRefreshTokenDeletedEvent.html":{"url":"classes/JwtRefreshTokenDeletedEvent.html","title":"class - JwtRefreshTokenDeletedEvent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  JwtRefreshTokenDeletedEvent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/events/jwt-refresh-token-deleted.evet.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                description\n                            \n                            \n                                name\n                            \n                            \n                                userId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                contructor\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/core/events/jwt-refresh-token-deleted.evet.ts:4\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/core/events/jwt-refresh-token-deleted.evet.ts:2\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        userId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/core/events/jwt-refresh-token-deleted.evet.ts:3\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        contructor\n                        \n                    \n                \n            \n            \n                \ncontructor(name: string, userId: number, description: string)\n                \n            \n\n\n            \n                \n                    Defined in src/core/events/jwt-refresh-token-deleted.evet.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    userId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    description\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        export class JwtRefreshTokenDeletedEvent {\n  name: string;\n  userId: number;\n  description: string;\n  contructor(name: string, userId: number, description: string) {\n    this.name = name;\n    this.userId = userId;\n    this.description = description;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LocationMiddleware.html":{"url":"injectables/LocationMiddleware.html","title":"injectable - LocationMiddleware","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LocationMiddleware\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/middlewares/location.middleware.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                use\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        use\n                        \n                    \n                \n            \n            \n                \nuse(req: Request, res: Response, next: NextFunction)\n                \n            \n\n\n            \n                \n                    Defined in src/core/middlewares/location.middleware.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                            NextFunction\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  Injectable,\n  NestMiddleware,\n  Next,\n  Req,\n  Res,\n  Scope,\n} from '@nestjs/common';\nimport { Request, Response, NextFunction } from 'express';\nimport geoip from 'geoip-lite';\nimport IP from 'ip'; \nimport path from 'path';\nimport { Reader } from '@maxmind/geoip2-node';\n@Injectable({ scope: Scope.REQUEST })\nexport class LocationMiddleware implements NestMiddleware {\n  use(@Req() req: Request, @Res() res: Response, @Next() next: NextFunction) {\n    (async () => {\n      const ipAddress = IP.address();\n      const reader = await Reader.open(path.join(__dirname, 'GeoLite2-Country.mmdb'));\n      const data = reader.country(ipAddress);\n      const geo = geoip.lookup(ipAddress);\n      console.log(geo, ipAddress);\n      req['location'] = data.country.isoCode;\n      res.setHeader('Location', `${req['location']}`);\n      return next();\n    })();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoginDto.html":{"url":"classes/LoginDto.html","title":"class - LoginDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoginDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/dto/login.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                email\n                            \n                            \n                                    Readonly\n                                password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'user@gmail.com', description: 'user`s email'})@IsString()@IsEmail()@Matches(/^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/, {message: EMAIL_VALIDATION})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/login.dto.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'etrhg45ty5yeewt4t4665y', description: 'user`s password'})@IsString()@Matches(/^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{8,}$/, {message: PASSWORD_VALIDATION})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/login.dto.ts:28\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsEmail, Matches, IsString } from 'class-validator';\nimport { EMAIL_VALIDATION, PASSWORD_VALIDATION } from '../auth.constants';\n\nexport class LoginDto {\n  @ApiProperty({ example: 'user@gmail.com', description: 'user`s email' })\n  @IsString()\n  @IsEmail()\n  @Matches(\n    /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/,\n    {\n      message: EMAIL_VALIDATION,\n    },\n  )\n  readonly email: string;\n\n  @ApiProperty({\n    example: 'etrhg45ty5yeewt4t4665y',\n    description: 'user`s password',\n  })\n  @IsString()\n  @Matches(\n    /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{8,}$/,\n    {\n      message: PASSWORD_VALIDATION,\n    },\n  )\n  readonly password: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/MailModule.html":{"url":"modules/MailModule.html","title":"module - MailModule","body":"\n                   \n\n\n\n\n    Modules\n    MailModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_MailModule\n\n\n\ncluster_MailModule_providers\n\n\n\ncluster_MailModule_exports\n\n\n\n\nMailService \n\nMailService \n\n\n\nMailModule\n\nMailModule\n\nMailService  -->\n\nMailModule->MailService \n\n\n\n\n\nAdminService\n\nAdminService\n\nMailModule -->\n\nAdminService->MailModule\n\n\n\n\n\nMailService\n\nMailService\n\nMailModule -->\n\nMailService->MailModule\n\n\n\n\n\nOwnerService\n\nOwnerService\n\nMailModule -->\n\nOwnerService->MailModule\n\n\n\n\n\nUsersService\n\nUsersService\n\nMailModule -->\n\nUsersService->MailModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/mail/mail.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AdminService\n                        \n                        \n                            MailService\n                        \n                        \n                            OwnerService\n                        \n                        \n                            UsersService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            MailService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { forwardRef, Module } from '@nestjs/common';\nimport { MailService } from './mail.service';\nimport { MailerModule } from '@nestjs-modules/mailer';\nimport { AdminModule } from '../admin/admin.module';\nimport { AuthModule } from '../auth/auth.module';\nimport { OwnerModule } from '../owner/owner.module';\nimport { RolesModule } from '../roles/roles.module';\nimport { UsersModule } from '../users/users.module';\nimport { ConfigModule } from '@nestjs/config';\nimport { UsersService } from '../users/services/users.service';\nimport { OwnerService } from '../owner/services/owner.service';\nimport { AdminService } from '../admin/services/admin.service';\nimport { SequelizeModule } from '@nestjs/sequelize';\nimport { Admin } from '../admin/models/admin.model';\nimport { AdminRefreshToken } from '../admin/models/admin.refresh.token.model';\nimport { CartProduct } from '../cart/models/cart.product.model';\nimport { Cart } from '../cart/models/cart.model';\nimport { Category } from '../categories/models/category.model';\nimport { ProductCategories } from '../categories/models/product.categories.model';\nimport { Order } from '../orders/models/order.model';\nimport { OrderProduct } from '../orders/models/order.product.model';\nimport { Owner } from '../owner/models/owner.model';\nimport { OwnerRefreshToken } from '../owner/models/owner.refresh.token.model';\nimport { Product } from '../product/models/product.model';\nimport { Role } from '../roles/models/roles.model';\nimport { UserRoles } from '../roles/models/user.roles.model';\nimport { User } from '../users/models/user.model';\nimport { UserRefreshToken } from '../users/models/user.refresh.token.model';\n\n@Module({\n  providers: [MailService, UsersService, OwnerService, AdminService],\n  imports: [\n    ConfigModule.forRoot({\n      envFilePath: `.${process.env.NODE_ENV}.env`,\n      expandVariables: true,\n      isGlobal: true,\n    }),\n    SequelizeModule.forFeature([\n      Product,\n      Order,\n      OrderProduct,\n      Category,\n      ProductCategories,\n      Admin,\n      AdminRefreshToken,\n      Owner,\n      OwnerRefreshToken,\n      User,\n      UserRefreshToken,\n      Role,\n      UserRoles,\n      Cart,\n      CartProduct,\n    ]),\n    forwardRef(() => AdminModule),\n    forwardRef(() => RolesModule),\n    forwardRef(() => AuthModule),\n    forwardRef(() => OwnerModule),\n    forwardRef(() => UsersModule),\n    MailerModule.forRoot({\n      transport: {\n        host: process.env.MAILER_HOST?.toString().trim() || 'smtp.gmail.com',\n        port: Number(process.env.MAILER_PORT?.trim()) || 465,\n        secure: Boolean(process.env.MAILER_SECURITY?.trim()) || true,\n        auth: {\n          user:\n            process.env.MAILER_USER?.toString().trim() ||\n            'kazesport2022@gmail.com',\n          pass:\n            process.env.MAILER_PASS?.toString().trim() || 'flbwyzikawirfudk',\n        },\n        tls: {\n          rejectUnauthorized: false,\n        },\n      },\n      defaults: {\n        from: '\"No Reply\" ',\n      },\n    }),\n  ],\n  exports: [MailService],\n})\nexport class MailModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MailService.html":{"url":"injectables/MailService.html","title":"injectable - MailService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  MailService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/mail/mail.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                Logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                sendActivationMailToAdmin\n                            \n                            \n                                    Async\n                                sendActivationMailToOwner\n                            \n                            \n                                    Async\n                                sendCode\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(mailerService: MailerService, userService: UsersService, adminService: AdminService, ownerService: OwnerService)\n                    \n                \n                        \n                            \n                                Defined in src/mail/mail.service.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        mailerService\n                                                  \n                                                        \n                                                                    MailerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UsersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        adminService\n                                                  \n                                                        \n                                                                        AdminService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        ownerService\n                                                  \n                                                        \n                                                                        OwnerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        sendActivationMailToAdmin\n                        \n                    \n                \n            \n            \n                \n                    \n                    sendActivationMailToAdmin(toMail: string, link: string)\n                \n            \n\n\n            \n                \n                    Defined in src/mail/mail.service.ts:62\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    toMail\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    link\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        sendActivationMailToOwner\n                        \n                    \n                \n            \n            \n                \n                    \n                    sendActivationMailToOwner(toMail: string, link: string)\n                \n            \n\n\n            \n                \n                    Defined in src/mail/mail.service.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    toMail\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    link\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        sendCode\n                        \n                    \n                \n            \n            \n                \n                    \n                    sendCode(toMail: string, code: number, locale: \"ua\" | \"ru\" | \"rs\" | \"en\")\n                \n            \n\n\n            \n                \n                    Defined in src/mail/mail.service.ts:97\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    toMail\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    code\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    locale\n                                    \n                                            \"ua\" | \"ru\" | \"rs\" | \"en\"\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        Logger\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Logger(MailService.name)\n                    \n                \n                    \n                        \n                                Defined in src/mail/mail.service.ts:19\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import {\n  HttpStatus,\n  Injectable,\n  InternalServerErrorException,\n  Logger,\n  Scope,\n} from '@nestjs/common';\nimport { MailerService } from '@nestjs-modules/mailer';\nimport { ERORR_WHILE_SENDING_EMAIL, RESETTING, TROUBLE_SIGNING } from './mail.constants';\nimport { UsersService } from '../users/services/users.service';\nimport { AdminService } from '../admin/services/admin.service';\nimport { OwnerService } from '../owner/services/owner.service';\nimport { ApiException } from '../common/exceptions/api.exception';\nimport { OWNER_NOT_FOUND } from '../owner/constants/owner.constants';\nimport { ADMIN_NOT_FOUND } from '../admin/constants/admin.constants';\nimport { USER_NOT_FOUND } from '../users/constants/user.constants';\n@Injectable({ scope: Scope.REQUEST })\nexport class MailService {\n  private readonly Logger = new Logger(MailService.name);\n  constructor(\n    private readonly mailerService: MailerService,\n    private readonly userService: UsersService,\n    private readonly adminService: AdminService,\n    private readonly ownerService: OwnerService,\n  ) {}\n  \n  async sendActivationMailToOwner(toMail: string, link: string) {\n    try {\n      const owner = await this.ownerService.getOwnerByEmail(toMail);\n      if (!owner) {\n        throw new ApiException(HttpStatus.NOT_FOUND, 'Not found!', OWNER_NOT_FOUND);   \n      }\n      const info = await this.mailerService.sendMail({\n        from: process.env.MAILER_USER,\n        to: owner.email,\n        subject: 'Activation of account on ' + process.env.API_URL,\n        text: 'KAZE_SPORT',\n        html: `\n        Новий лист 2     a {text-decoration: none;}     sup { font-size: 100% !important; }   96  #outlook a {\tpadding:0;}.ExternalClass {\twidth:100%;}.ExternalClass,.ExternalClass p,.ExternalClass span,.ExternalClass font,.ExternalClass td,.ExternalClass div {\tline-height:100%;}.es-button {\tmso-style-priority:100!important;\ttext-decoration:none!important;}a[x-apple-data-detectors] {\tcolor:inherit!important;\ttext-decoration:none!important;\tfont-size:inherit!important;\tfont-family:inherit!important;\tfont-weight:inherit!important;\tline-height:inherit!important;}.es-desk-hidden {\tdisplay:none;\tfloat:left;\toverflow:hidden;\twidth:0;\tmax-height:0;\tline-height:0;\tmso-hide:all;}[data-ogsb] .es-button {\tborder-width:0!important;\tpadding:15px 25px 15px 25px!important;}[data-ogsb] .es-button.es-button-1 {\tpadding:15px 25px!important;}@media only screen and (max-width:600px) {p, ul li, ol li, a { line-height:150%!important } h1, h2, h3, h1 a, h2 a, h3 a { line-height:120%!important } h1 { font-size:30px!important; text-align:center } h2 { font-size:26px!important; text-align:center } h3 { font-size:20px!important; text-align:center } .es-header-body h1 a, .es-content-body h1 a, .es-footer-body h1 a { font-size:30px!important } .es-header-body h2 a, .es-content-body h2 a, .es-footer-body h2 a { font-size:26px!important } .es-header-body h3 a, .es-content-body h3 a, .es-footer-body h3 a { font-size:20px!important } .es-menu td a { font-size:16px!important } .es-header-body p, .es-header-body ul li, .es-header-body ol li, .es-header-body a { font-size:16px!important } .es-content-body p, .es-content-body ul li, .es-content-body ol li, .es-content-body a { font-size:16px!important } .es-footer-body p, .es-footer-body ul li, .es-footer-body ol li, .es-footer-body a { font-size:16px!important } .es-infoblock p, .es-infoblock ul li, .es-infoblock ol li, .es-infoblock a { font-size:12px!important } *[class=\"gmail-fix\"] { display:none!important } .es-m-txt-c, .es-m-txt-c h1, .es-m-txt-c h2, .es-m-txt-c h3 { text-align:center!important } .es-m-txt-r, .es-m-txt-r h1, .es-m-txt-r h2, .es-m-txt-r h3 { text-align:right!important } .es-m-txt-l, .es-m-txt-l h1, .es-m-txt-l h2, .es-m-txt-l h3 { text-align:left!important } .es-m-txt-r img, .es-m-txt-c img, .es-m-txt-l img { display:inline!important } .es-button-border { display:block!important } a.es-button, button.es-button { font-size:20px!important; display:block!important; border-width:15px 25px 15px 25px!important } .es-btn-fw { border-width:10px 0px!important; text-align:center!important } .es-adaptive table, .es-btn-fw, .es-btn-fw-brdr, .es-left, .es-right { width:100%!important } .es-content table, .es-header table, .es-footer table, .es-content, .es-footer, .es-header { width:100%!important; max-width:600px!important } .es-adapt-td { display:block!important; width:100%!important } .adapt-img { width:100%!important; height:auto!important } .es-m-p0 { padding:0px!important } .es-m-p0r { padding-right:0px!important } .es-m-p0l { padding-left:0px!important } .es-m-p0t { padding-top:0px!important } .es-m-p0b { padding-bottom:0!important } .es-m-p20b { padding-bottom:20px!important } .es-mobile-hidden, .es-hidden { display:none!important } tr.es-desk-hidden, td.es-desk-hidden, table.es-desk-hidden { width:auto!important; overflow:visible!important; float:none!important; max-height:inherit!important; line-height:inherit!important } tr.es-desk-hidden { display:table-row!important } table.es-desk-hidden { display:table!important } td.es-desk-menu-hidden { display:table-cell!important } .es-menu td { width:1%!important } table.es-table-not-adapt, .esd-block-html table { width:auto!important } table.es-social { display:inline-block!important } table.es-social td { display:inline-block!important } .es-desk-hidden { display:table-row!important; width:auto!important; overflow:visible!important; max-height:inherit!important } }\n  \n\n\n\nTo activate Owner rights, click the button below...\n\n   Activate Account Activate Account\n\nMake your website better.\nYou will get the rights to edit and create content on the&nbsp; website.\n\n\nNeed more help?\nKAZE_SHOP \n        `\n      });\n      this.Logger.log('Message sent: %s', info.messageId);\n    } catch (err) {\n      throw new InternalServerErrorException(ERORR_WHILE_SENDING_EMAIL);\n    }\n  } \n\n  async sendActivationMailToAdmin(toMail: string, link: string) {\n    try {\n      const admin = await this.adminService.getAdminByEmail(toMail);\n      if (!admin) {\n        throw new ApiException(HttpStatus.NOT_FOUND, 'Not found!', ADMIN_NOT_FOUND);   \n      }\n      const info = await this.mailerService.sendMail({\n        from: process.env.MAILER_USER,\n        to: admin.email,\n        subject: 'Activation of account on ' + process.env.API_URL,\n        text: 'KAZE_SPORT',\n        html: `\n       Новий лист 2     a {text-decoration: none;}     sup { font-size: 100% !important; }   96  #outlook a {\tpadding:0;}.ExternalClass {\twidth:100%;}.ExternalClass,.ExternalClass p,.ExternalClass span,.ExternalClass font,.ExternalClass td,.ExternalClass div {\tline-height:100%;}.es-button {\tmso-style-priority:100!important;\ttext-decoration:none!important;}a[x-apple-data-detectors] {\tcolor:inherit!important;\ttext-decoration:none!important;\tfont-size:inherit!important;\tfont-family:inherit!important;\tfont-weight:inherit!important;\tline-height:inherit!important;}.es-desk-hidden {\tdisplay:none;\tfloat:left;\toverflow:hidden;\twidth:0;\tmax-height:0;\tline-height:0;\tmso-hide:all;}[data-ogsb] .es-button {\tborder-width:0!important;\tpadding:15px 25px 15px 25px!important;}[data-ogsb] .es-button.es-button-1 {\tpadding:15px 25px!important;}@media only screen and (max-width:600px) {p, ul li, ol li, a { line-height:150%!important } h1, h2, h3, h1 a, h2 a, h3 a { line-height:120%!important } h1 { font-size:30px!important; text-align:center } h2 { font-size:26px!important; text-align:center } h3 { font-size:20px!important; text-align:center } .es-header-body h1 a, .es-content-body h1 a, .es-footer-body h1 a { font-size:30px!important } .es-header-body h2 a, .es-content-body h2 a, .es-footer-body h2 a { font-size:26px!important } .es-header-body h3 a, .es-content-body h3 a, .es-footer-body h3 a { font-size:20px!important } .es-menu td a { font-size:16px!important } .es-header-body p, .es-header-body ul li, .es-header-body ol li, .es-header-body a { font-size:16px!important } .es-content-body p, .es-content-body ul li, .es-content-body ol li, .es-content-body a { font-size:16px!important } .es-footer-body p, .es-footer-body ul li, .es-footer-body ol li, .es-footer-body a { font-size:16px!important } .es-infoblock p, .es-infoblock ul li, .es-infoblock ol li, .es-infoblock a { font-size:12px!important } *[class=\"gmail-fix\"] { display:none!important } .es-m-txt-c, .es-m-txt-c h1, .es-m-txt-c h2, .es-m-txt-c h3 { text-align:center!important } .es-m-txt-r, .es-m-txt-r h1, .es-m-txt-r h2, .es-m-txt-r h3 { text-align:right!important } .es-m-txt-l, .es-m-txt-l h1, .es-m-txt-l h2, .es-m-txt-l h3 { text-align:left!important } .es-m-txt-r img, .es-m-txt-c img, .es-m-txt-l img { display:inline!important } .es-button-border { display:block!important } a.es-button, button.es-button { font-size:20px!important; display:block!important; border-width:15px 25px 15px 25px!important } .es-btn-fw { border-width:10px 0px!important; text-align:center!important } .es-adaptive table, .es-btn-fw, .es-btn-fw-brdr, .es-left, .es-right { width:100%!important } .es-content table, .es-header table, .es-footer table, .es-content, .es-footer, .es-header { width:100%!important; max-width:600px!important } .es-adapt-td { display:block!important; width:100%!important } .adapt-img { width:100%!important; height:auto!important } .es-m-p0 { padding:0px!important } .es-m-p0r { padding-right:0px!important } .es-m-p0l { padding-left:0px!important } .es-m-p0t { padding-top:0px!important } .es-m-p0b { padding-bottom:0!important } .es-m-p20b { padding-bottom:20px!important } .es-mobile-hidden, .es-hidden { display:none!important } tr.es-desk-hidden, td.es-desk-hidden, table.es-desk-hidden { width:auto!important; overflow:visible!important; float:none!important; max-height:inherit!important; line-height:inherit!important } tr.es-desk-hidden { display:table-row!important } table.es-desk-hidden { display:table!important } td.es-desk-menu-hidden { display:table-cell!important } .es-menu td { width:1%!important } table.es-table-not-adapt, .esd-block-html table { width:auto!important } table.es-social { display:inline-block!important } table.es-social td { display:inline-block!important } .es-desk-hidden { display:table-row!important; width:auto!important; overflow:visible!important; max-height:inherit!important } }\n  \n\n\n\nTo activate admin rights, click the button below...\n\n   Activate Account Activate Account\n\nMake your website better.\nYou will get the rights to edit and create content on the&nbsp; website.\n\n\nNeed more help?\nKAZE_SHOP\n        `,\n      });\n      this.Logger.log('Message sent: %s', info.messageId);\n    } catch (err: unknown) {\n      throw new InternalServerErrorException(ERORR_WHILE_SENDING_EMAIL);\n    }\n  }\n\n  async sendCode(toMail: string, code: number, locale: 'ua' | 'ru' | 'rs' | 'en',) {\n    try {\n      const user = await this.userService.getUserByEmail(toMail);\n      if (!user) {\n        throw new ApiException(HttpStatus.NOT_FOUND, 'Not found!', USER_NOT_FOUND);   \n      }\n      const info = await this.mailerService.sendMail({\n        from: process.env.MAILER_USER,\n        to: user.email,\n        subject: 'Reset password on ' + process.env.CLIENT_URL,\n        text: 'KAZE_SPORT',\n        html: `\n        Новий лист     a {text-decoration: none;}     sup { font-size: 100% !important; }   96  #outlook a {\tpadding:0;}.ExternalClass {\twidth:100%;}.ExternalClass,.ExternalClass p,.ExternalClass span,.ExternalClass font,.ExternalClass td,.ExternalClass div {\tline-height:100%;}.es-button {\tmso-style-priority:100!important;\ttext-decoration:none!important;}a[x-apple-data-detectors] {\tcolor:inherit!important;\ttext-decoration:none!important;\tfont-size:inherit!important;\tfont-family:inherit!important;\tfont-weight:inherit!important;\tline-height:inherit!important;}.es-desk-hidden {\tdisplay:none;\tfloat:left;\toverflow:hidden;\twidth:0;\tmax-height:0;\tline-height:0;\tmso-hide:all;}[data-ogsb] .es-button {\tborder-width:0!important;\tpadding:15px 25px 15px 25px!important;}@media only screen and (max-width:600px) {p, ul li, ol li, a { line-height:150%!important } h1, h2, h3, h1 a, h2 a, h3 a { line-height:120%!important } h1 { font-size:30px!important; text-align:center } h2 { font-size:26px!important; text-align:center } h3 { font-size:20px!important; text-align:center } .es-header-body h1 a, .es-content-body h1 a, .es-footer-body h1 a { font-size:30px!important } .es-header-body h2 a, .es-content-body h2 a, .es-footer-body h2 a { font-size:26px!important } .es-header-body h3 a, .es-content-body h3 a, .es-footer-body h3 a { font-size:20px!important } .es-menu td a { font-size:16px!important } .es-header-body p, .es-header-body ul li, .es-header-body ol li, .es-header-body a { font-size:16px!important } .es-content-body p, .es-content-body ul li, .es-content-body ol li, .es-content-body a { font-size:16px!important } .es-footer-body p, .es-footer-body ul li, .es-footer-body ol li, .es-footer-body a { font-size:16px!important } .es-infoblock p, .es-infoblock ul li, .es-infoblock ol li, .es-infoblock a { font-size:12px!important } *[class=\"gmail-fix\"] { display:none!important } .es-m-txt-c, .es-m-txt-c h1, .es-m-txt-c h2, .es-m-txt-c h3 { text-align:center!important } .es-m-txt-r, .es-m-txt-r h1, .es-m-txt-r h2, .es-m-txt-r h3 { text-align:right!important } .es-m-txt-l, .es-m-txt-l h1, .es-m-txt-l h2, .es-m-txt-l h3 { text-align:left!important } .es-m-txt-r img, .es-m-txt-c img, .es-m-txt-l img { display:inline!important } .es-button-border { display:block!important } a.es-button, button.es-button { font-size:20px!important; display:block!important; border-width:15px 25px 15px 25px!important } .es-btn-fw { border-width:10px 0px!important; text-align:center!important } .es-adaptive table, .es-btn-fw, .es-btn-fw-brdr, .es-left, .es-right { width:100%!important } .es-content table, .es-header table, .es-footer table, .es-content, .es-footer, .es-header { width:100%!important; max-width:600px!important } .es-adapt-td { display:block!important; width:100%!important } .adapt-img { width:100%!important; height:auto!important } .es-m-p0 { padding:0px!important } .es-m-p0r { padding-right:0px!important } .es-m-p0l { padding-left:0px!important } .es-m-p0t { padding-top:0px!important } .es-m-p0b { padding-bottom:0!important } .es-m-p20b { padding-bottom:20px!important } .es-mobile-hidden, .es-hidden { display:none!important } tr.es-desk-hidden, td.es-desk-hidden, table.es-desk-hidden { width:auto!important; overflow:visible!important; float:none!important; max-height:inherit!important; line-height:inherit!important } tr.es-desk-hidden { display:table-row!important } table.es-desk-hidden { display:table!important } td.es-desk-menu-hidden { display:table-cell!important } .es-menu td { width:1%!important } table.es-table-not-adapt, .esd-block-html table { width:auto!important } table.es-social { display:inline-block!important } table.es-social td { display:inline-block!important } .es-desk-hidden { display:table-row!important; width:auto!important; overflow:visible!important; max-height:inherit!important } }\n  \n\n\n\nr\n\n\n\n${TROUBLE_SIGNING[locale]}\n\n${RESETTING[locale]}\n${code}\n\n\n\n\n\n\n \n`,\n      });\n      this.Logger.log('Message sent: %s', info.messageId);\n    } catch (err: unknown) {\n      throw new InternalServerErrorException(ERORR_WHILE_SENDING_EMAIL);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MatchConstraint.html":{"url":"classes/MatchConstraint.html","title":"class - MatchConstraint","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MatchConstraint\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/decorators/match.decorator.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        ValidatorConstraintInterface\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        validate\n                        \n                    \n                \n            \n            \n                \nvalidate(value: any, args: ValidationArguments)\n                \n            \n\n\n            \n                \n                    Defined in src/common/decorators/match.decorator.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    args\n                                    \n                                            ValidationArguments\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n  registerDecorator,\n  ValidationArguments,\n  ValidationOptions,\n  ValidatorConstraint,\n  ValidatorConstraintInterface,\n} from 'class-validator';\n\nexport function Match(property: string, validationOptions?: ValidationOptions) {\n  return (object: any, propertyName: string) => {\n    registerDecorator({\n      target: object.constructor,\n      propertyName,\n      options: validationOptions,\n      constraints: [property],\n      validator: MatchConstraint,\n    });\n  };\n}\n\n@ValidatorConstraint({ name: 'Match' })\nexport class MatchConstraint implements ValidatorConstraintInterface {\n  validate(value: any, args: ValidationArguments) {\n    const [relatedPropertyName] = args.constraints;\n    const relatedValue = (args.object as any)[relatedPropertyName];\n    return value === relatedValue;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Msg.html":{"url":"interfaces/Msg.html","title":"interface - Msg","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Msg\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/services/cluster.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            cmd\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        cmd\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        cmd:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import cluster from 'cluster';\nimport { cpus } from 'os';\nimport { INestApplication, Injectable, Logger, Scope } from '@nestjs/common';\ntype CallbackFunction = () => Promise;\nconst numCPUs: number = cpus().length;\ninterface Msg {\n  cmd: string;\n}\n@Injectable({ scope: Scope.DEFAULT })\nexport class AppClusterService {\n  static readonly Logger = new Logger(AppClusterService.name);\n  static async clusterize(callback: CallbackFunction): Promise {\n    if (cluster.isPrimary) {\n      AppClusterService.Logger.log(`Number of CPUs is ${numCPUs}`);\n      AppClusterService.Logger.log(`Master server started on ${process.pid}`);\n      for (let i = 0; i  {\n        AppClusterService.Logger.log(\n          `Worker ${worker.process.pid} died. Restarting`,\n          signal || code,\n        );\n        cluster.fork();\n      });\n    } else {\n      AppClusterService.Logger.log(`Cluster server started on ${process.pid}`);\n      const app = await callback();\n      process.on('SIGINT', () => app.close());\n      process.on('SIGTERM', () => app.close());\n      process.on('SIGUSR2', async () => app.close());\n      process.on('message', (msg) => {\n        if (msg === 'shutdown') {\n          app.close();\n        }\n      });\n    }\n  }\n\n  private static trackOfhttpRequests() {\n    let numReqs = 0;\n    for (const id in cluster.workers) {\n      cluster.workers[id].on('message', messageHandler);\n    }\n    setInterval(() => {\n      AppClusterService.Logger.log(`numReqs = ${numReqs}`);\n    }, 1000);\n    function messageHandler(msg: Msg) {\n      if (msg.cmd && msg.cmd === 'notifyRequest') {\n        numReqs = numReqs + 1;\n      }\n    }\n  }\n\n  private static setTimeouts(worker: any) {\n    let timeout: NodeJS.Timeout;\n    worker.on('listening', (address) => {\n      worker.send('shutdown');\n      worker.disconnect();\n      timeout = setTimeout(() => {\n        worker.kill();\n      }, 2000);\n    });\n    worker.on('disconnect', () => {\n      clearTimeout(timeout);\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Nested.html":{"url":"classes/Nested.html","title":"class - Nested","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Nested\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/product/dto/create.product.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                en\n                            \n                            \n                                rs\n                            \n                            \n                                ru\n                            \n                            \n                                ua\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        en\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsDefined()@IsString()@Matches(/[a-zA-Z0-9а-яієїґА_ЯЇЄЇЁёА-яzžitisšte_-]/gi)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/product/dto/create.product.dto.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        rs\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsDefined()@IsString()@Matches(/[a-zA-Z0-9а-яієїґА_ЯЇЄЇЁёА-яzžitisšte_-]/gi)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/product/dto/create.product.dto.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ru\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsDefined()@IsString()@Matches(/[a-zA-Z0-9а-яієїґА_ЯЇЄЇЁёА-яzžitisšte_-]/gi)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/product/dto/create.product.dto.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ua\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsDefined()@IsString()@Matches(/[a-zA-Z0-9а-яієїґА_ЯЇЄЇЁёА-яzžitisšte_-]/gi)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/product/dto/create.product.dto.ts:9\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Transform, Type } from 'class-transformer';\nimport { IsString, IsNumber, IsDefined, Matches, ArrayNotEmpty, IsArray, MaxLength} from 'class-validator';\nimport { ParseFormDataJsonPipe } from '../../common/pipes/formdata.pipe';\nimport { ParseJsonPipe } from '../../common/pipes/parse.json.pipe';\nclass Nested {\n  @IsDefined()\n  @IsString()\n  @Matches(/[a-zA-Z0-9а-яієїґА_ЯЇЄЇЁёА-яzžitisšte_-]/gi)  \n  ua: string;\n  @IsDefined()\n  @IsString() \n  @Matches(/[a-zA-Z0-9а-яієїґА_ЯЇЄЇЁёА-яzžitisšte_-]/gi)\n  ru: string;\n  @IsDefined()\n  @IsString()\n  @Matches(/[a-zA-Z0-9а-яієїґА_ЯЇЄЇЁёА-яzžitisšte_-]/gi)\n  rs: string;\n  @IsDefined()\n  @IsString()\n  @Matches(/[a-zA-Z0-9а-яієїґА_ЯЇЄЇЁёА-яzžitisšte_-]/gi)\n  en: string;\n}\nexport class CreateProductDto {\n  @IsDefined()\n  @Type(() => Nested)\n  readonly title: {\n    ua: string;\n    ru: string;\n    rs: string;\n    en: string;\n  };\n\n  @IsDefined()\n  @Type(() => Nested)\n  readonly description: {\n    ua: string;\n    ru: string;\n    rs: string;\n    en: string;\n  };\n\n  @IsDefined()\n  @Type(()=> Number)\n  @IsNumber()\n  readonly price: number;\n\n  @IsDefined()\n  @Type(() => Array)\n  // @Transform((value) => ParseJsonPipe.transform(value.value, value.obj))\n  // @IsArray()\n  // @ArrayNotEmpty()\n  // @IsString({ each: true }) \n  // @MaxLength(15, { each: true })\n  readonly sizes: string[];\n\n  @IsDefined()\n  @Type(() => Array)\n  // @Transform((value) => JSON.parse(value.value))\n  // @IsArray()\n  // @ArrayNotEmpty()\n  // @IsString({ each: true }) \n  // @MaxLength(15, { each: true })\n  readonly colours: string[];\n\n  @IsDefined()\n  @Transform((value: any) => Number(value.value))\n  @Type(()=> Number)\n  @IsNumber()\n  readonly quantity: number;\n\n  @IsDefined()\n  @Type(() => Array)\n  // @Transform((value) => JSON.parse(value.value))\n  // @IsArray()\n  // @ArrayNotEmpty()\n  readonly categories: number[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Nested-1.html":{"url":"classes/Nested-1.html","title":"class - Nested-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Nested\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/product/dto/update.product.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                en\n                            \n                            \n                                rs\n                            \n                            \n                                ru\n                            \n                            \n                                ua\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        en\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsDefined()@IsString()@Matches(/[a-zA-Z0-9а-яієїґА_ЯЇЄЇЁёА-яzžitisšte_-]/gi)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/product/dto/update.product.dto.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        rs\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsDefined()@IsString()@Matches(/[a-zA-Z0-9а-яієїґА_ЯЇЄЇЁёА-яzžitisšte_-]/gi)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/product/dto/update.product.dto.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ru\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsDefined()@IsString()@Matches(/[a-zA-Z0-9а-яієїґА_ЯЇЄЇЁёА-яzžitisšte_-]/gi)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/product/dto/update.product.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ua\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsDefined()@IsString()@Matches(/[a-zA-Z0-9а-яієїґА_ЯЇЄЇЁёА-яzžitisšte_-]/gi)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/product/dto/update.product.dto.ts:7\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Transform, Type } from 'class-transformer';\nimport { IsDefined, IsNumber, IsString, Matches } from 'class-validator';\nclass Nested {\n  @IsDefined()\n  @IsString()\n  @Matches(/[a-zA-Z0-9а-яієїґА_ЯЇЄЇЁёА-яzžitisšte_-]/gi)  \n  ua: string;\n  @IsDefined()\n  @IsString() \n  @Matches(/[a-zA-Z0-9а-яієїґА_ЯЇЄЇЁёА-яzžitisšte_-]/gi)\n  ru: string;\n  @IsDefined()\n  @IsString()\n  @Matches(/[a-zA-Z0-9а-яієїґА_ЯЇЄЇЁёА-яzžitisšte_-]/gi)\n  rs: string;\n  @IsDefined()\n  @IsString()\n  @Matches(/[a-zA-Z0-9а-яієїґА_ЯЇЄЇЁёА-яzžitisšte_-]/gi)\n  en: string;\n}\nexport class UpdateProductDto {\n @IsDefined()\n  @Type(() => Nested)\n  readonly title: {\n    ua: string;\n    ru: string;\n    rs: string;\n    en: string;\n  };\n\n  @IsDefined()\n  @Type(() => Nested)\n  readonly description: {\n    ua: string;\n    ru: string;\n    rs: string;\n    en: string;\n  };\n\n  @IsDefined()\n  @Type(()=> Number)\n  @IsNumber()\n  readonly price: number;\n\n  @IsDefined()\n  @Type(() => Array)\n  // @Transform((value) => ParseJsonPipe.transform(value.value, value.obj))\n  // @IsArray()\n  // @ArrayNotEmpty()\n  // @IsString({ each: true }) \n  // @MaxLength(15, { each: true })\n  readonly sizes: string[];\n\n  @IsDefined()\n  @Type(() => Array)\n  // @Transform((value) => JSON.parse(value.value))\n  // @IsArray()\n  // @ArrayNotEmpty()\n  // @IsString({ each: true }) \n  // @MaxLength(15, { each: true })\n  readonly colours: string[];\n\n  @IsDefined()\n  @Transform((value: any) => Number(value.value))\n  @Type(()=> Number)\n  @IsNumber()\n  readonly quantity: number;\n\n  @IsDefined()\n  @Type(() => Array)\n  // @Transform((value) => JSON.parse(value.value))\n  // @IsArray()\n  // @ArrayNotEmpty()\n  readonly categories: number[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/NotFoundError.html":{"url":"classes/NotFoundError.html","title":"class - NotFoundError","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  NotFoundError\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/exceptions/validate-dto.exception.error.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        ApiError\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                rawErrors\n                            \n                            \n                                statusCode\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(path: string)\n                    \n                \n                        \n                            \n                                Defined in src/common/exceptions/validate-dto.exception.error.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        path\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        rawErrors\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                        \n                            \n                                Inherited from         ApiError\n\n                            \n                        \n                    \n                        \n                                Defined in         ApiError:5\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        statusCode\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                Inherited from         ApiError\n\n                            \n                        \n                    \n                        \n                                Defined in         ApiError:4\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { HttpStatus } from '@nestjs/common';\n\nexport class ApiError extends Error {\n  statusCode: number;\n  rawErrors: string[] = [];\n  constructor(statusCode: number, message: string, rawErrors?: string[]) {\n    super(message);\n\n    this.statusCode = statusCode;\n    if (rawErrors) {\n      this.rawErrors = rawErrors;\n    }\n    Error.captureStackTrace(this, this.constructor);\n  }\n}\n\nexport class NotFoundError extends ApiError {\n  constructor(path: string) {\n    super(HttpStatus.NOT_FOUND, `The requested path ${path} not found!`);\n  }\n}\n\nexport class BadRequestError extends ApiError {\n  constructor(message: string, errors: string[]) {\n    super(HttpStatus.BAD_REQUEST, message, errors);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Order.html":{"url":"classes/Order.html","title":"class - Order","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Order\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/orders/models/order.model.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    Model\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                id\n                            \n                            \n                                    Private\n                                orderProducts\n                            \n                            \n                                    Private\n                                orderStatus\n                            \n                            \n                                products\n                            \n                            \n                                    Public\n                                totalPrice\n                            \n                            \n                                    Private\n                                user\n                            \n                            \n                                    Public\n                                userId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getOrderProducts\n                            \n                            \n                                getOrderStatus\n                            \n                            \n                                getUser\n                            \n                            \n                                setOrderStatus\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: undefined, unique: true, autoIncrement: true, primaryKey: true, field: 'id'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/orders/models/order.model.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        orderProducts\n                        \n                    \n                \n            \n                \n                    \n                        Type :     OrderProduct[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @HasMany(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/orders/models/order.model.ts:50\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        orderStatus\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: undefined, unique: false, field: 'orderStatus'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/orders/models/order.model.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        products\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Product[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @BelongsToMany(undefined, undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/orders/models/order.model.ts:53\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        totalPrice\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: undefined, field: 'totalPrice'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/orders/models/order.model.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @BelongsTo(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/orders/models/order.model.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        userId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ForeignKey(undefined)@Column({type: undefined, field: 'userId'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/orders/models/order.model.ts:38\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getOrderProducts\n                        \n                    \n                \n            \n            \n                \ngetOrderProducts()\n                \n            \n\n\n            \n                \n                    Defined in src/orders/models/order.model.ts:68\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     OrderProduct[]\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getOrderStatus\n                        \n                    \n                \n            \n            \n                \ngetOrderStatus()\n                \n            \n\n\n            \n                \n                    Defined in src/orders/models/order.model.ts:59\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getUser\n                        \n                    \n                \n            \n            \n                \ngetUser()\n                \n            \n\n\n            \n                \n                    Defined in src/orders/models/order.model.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         User\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setOrderStatus\n                        \n                    \n                \n            \n            \n                \nsetOrderStatus(orderStatus: string)\n                \n            \n\n\n            \n                \n                    Defined in src/orders/models/order.model.ts:63\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    orderStatus\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n  Column,\n  DataType,\n  Table,\n  Model,\n  HasMany,\n  ForeignKey,\n  BelongsTo,\n  BelongsToMany,\n} from 'sequelize-typescript';\nimport { Product } from '../../product/models/product.model';\nimport { User } from '../../users/models/user.model';\nimport { OrderProduct } from './order.product.model';\n\n@Table({ tableName: 'ORDERS' })\nexport class Order extends Model {\n  @Column({\n    type: DataType.INTEGER,\n    unique: true,\n    autoIncrement: true,\n    primaryKey: true,\n    field: 'id',\n  })\n  public id: number;\n\n  @Column({\n    type: DataType.ENUM('Canceled', 'Submitted', 'Completed', 'Processing'),\n    unique: false,\n    field: 'orderStatus',\n  })\n  private orderStatus: string;\n\n  @ForeignKey(() => User)\n  @Column({\n    type: DataType.INTEGER,\n    field: 'userId',\n  })\n  public userId: number;\n\n  @Column({\n    type: DataType.INTEGER,\n    field: 'totalPrice',\n  })\n  public totalPrice: number;\n\n  @BelongsTo(() => User)\n  private user: User;\n\n  @HasMany(() => OrderProduct)\n  private orderProducts: OrderProduct[];\n\n  @BelongsToMany(() => Product, () => OrderProduct)\n  products: Product[];\n\n  getUser(): User {\n    return this.user;\n  }\n\n  getOrderStatus(): string {\n    return this.orderStatus;\n  }\n\n  setOrderStatus(orderStatus: string): string {\n    this.orderStatus = orderStatus;\n    return this.orderStatus;\n  }\n\n  getOrderProducts(): OrderProduct[] {\n    return this.orderProducts;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/OrderProduct.html":{"url":"classes/OrderProduct.html","title":"class - OrderProduct","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  OrderProduct\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/orders/models/order.product.model.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    Model\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                id\n                            \n                            \n                                    Private\n                                order\n                            \n                            \n                                    Public\n                                orderId\n                            \n                            \n                                    Public\n                                price\n                            \n                            \n                                    Private\n                                product\n                            \n                            \n                                    Public\n                                productId\n                            \n                            \n                                    Public\n                                quantity\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getOrder\n                            \n                            \n                                getProduct\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: undefined, unique: true, autoIncrement: true, primaryKey: true, field: 'id'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/orders/models/order.product.model.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        order\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Order\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @BelongsTo(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/orders/models/order.product.model.ts:60\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        orderId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsInt()@ForeignKey(undefined)@Column({type: undefined, unique: true, allowNull: false, field: 'orderId'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/orders/models/order.product.model.ts:48\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        price\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: undefined, field: 'price'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/orders/models/order.product.model.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        product\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Product\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @BelongsTo(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/orders/models/order.product.model.ts:63\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        productId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsInt()@ForeignKey(undefined)@Column({type: undefined, unique: true, allowNull: false, field: 'productId'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/orders/models/order.product.model.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        quantity\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsInt()@Column({type: undefined, unique: false, allowNull: false, field: 'quantity'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/orders/models/order.product.model.ts:57\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getOrder\n                        \n                    \n                \n            \n            \n                \ngetOrder()\n                \n            \n\n\n            \n                \n                    Defined in src/orders/models/order.product.model.ts:69\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Order\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getProduct\n                        \n                    \n                \n            \n            \n                \ngetProduct()\n                \n            \n\n\n            \n                \n                    Defined in src/orders/models/order.product.model.ts:65\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Product\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n  Column,\n  DataType,\n  Table,\n  Model,\n  IsInt,\n  ForeignKey,\n  BelongsTo,\n} from 'sequelize-typescript';\nimport { Product } from '../../product/models/product.model';\nimport { Order } from './order.model';\n\n@Table({ tableName: 'PRODUCT_Orders' })\nexport class OrderProduct extends Model {\n  @Column({\n    type: DataType.INTEGER,\n    unique: true,\n    autoIncrement: true,\n    primaryKey: true,\n    field: 'id',\n  })\n  public id: number;\n\n  @IsInt\n  @ForeignKey(() => Product)\n  @Column({\n    type: DataType.INTEGER,\n    unique: true,\n    allowNull: false,\n    field: 'productId',\n  })\n  public productId: number;\n\n  @Column({\n    type: DataType.INTEGER,\n    field: 'price',\n  })\n  public price: number;\n\n  @IsInt\n  @ForeignKey(() => Order)\n  @Column({\n    type: DataType.INTEGER,\n    unique: true,\n    allowNull: false,\n    field: 'orderId',\n  })\n  public orderId: number;\n\n  @IsInt\n  @Column({\n    type: DataType.INTEGER,\n    unique: false,\n    allowNull: false,\n    field: 'quantity',\n  })\n  public quantity: number;\n\n  @BelongsTo(() => Order)\n  private order: Order;\n\n  @BelongsTo(() => Product)\n  private product: Product;\n\n  getProduct(): Product {\n    return this.product;\n  }\n\n  getOrder(): Order {\n    return this.order;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/OrdersController.html":{"url":"controllers/OrdersController.html","title":"controller - OrdersController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  OrdersController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/orders/orders.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                orders\n            \n\n\n\n\n\n\n\n    \n\n\n    \n        import { Controller, UseFilters } from '@nestjs/common';\nimport { ApiExceptionFilter } from '../common/filters/api-exception.filter';\nimport { ApiErrorExceptionFilter } from '../common/filters/error-handler.filter';\n@UseFilters(ApiErrorExceptionFilter, ApiExceptionFilter)\n@Controller('orders')\nexport class OrdersController {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/OrdersModule.html":{"url":"modules/OrdersModule.html","title":"module - OrdersModule","body":"\n                   \n\n\n\n\n    Modules\n    OrdersModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_OrdersModule\n\n\n\ncluster_OrdersModule_providers\n\n\n\n\nOrdersService\n\nOrdersService\n\n\n\nOrdersModule\n\nOrdersModule\n\nOrdersModule -->\n\nOrdersService->OrdersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/orders/orders.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            OrdersService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            OrdersController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { forwardRef, Module } from '@nestjs/common';\nimport { OrdersService } from './orders.service';\nimport { OrdersController } from './orders.controller';\nimport { SequelizeModule } from '@nestjs/sequelize';\nimport { AuthModule } from '../auth/auth.module';\nimport { Role } from '../roles/models/roles.model';\nimport { UserRoles } from '../roles/models/user.roles.model';\nimport { RolesModule } from '../roles/roles.module';\nimport { User } from '../users/models/user.model';\nimport { UserRefreshToken } from '../users/models/user.refresh.token.model';\nimport { UsersModule } from '../users/users.module';\nimport { CategoriesModule } from '../categories/categories.module';\nimport { ConfigModule } from '@nestjs/config';\nimport { Admin } from '../admin/models/admin.model';\nimport { AdminRefreshToken } from '../admin/models/admin.refresh.token.model';\nimport { CartModule } from '../cart/cart.module';\nimport { CartProduct } from '../cart/models/cart.product.model';\nimport { Cart } from '../cart/models/cart.model';\nimport { Category } from '../categories/models/category.model';\nimport { ProductCategories } from '../categories/models/product.categories.model';\nimport { Owner } from '../owner/models/owner.model';\nimport { OwnerRefreshToken } from '../owner/models/owner.refresh.token.model';\nimport { Product } from '../product/models/product.model';\nimport { Order } from './models/order.model';\nimport { OrderProduct } from './models/order.product.model';\n\n@Module({\n  providers: [OrdersService],\n  controllers: [OrdersController],\n  imports: [\n    forwardRef(() => AuthModule),\n    ConfigModule.forRoot({\n      envFilePath: `.${process.env.NODE_ENV}.env`,\n      expandVariables: true,\n      isGlobal: true,\n    }),\n    SequelizeModule.forFeature([\n      Product,\n      Order,\n      OrderProduct,\n      Category,\n      ProductCategories,\n      Admin,\n      AdminRefreshToken,\n      Owner,\n      OwnerRefreshToken,\n      User,\n      UserRefreshToken,\n      Role,\n      UserRoles,\n      Cart,\n      CartProduct,\n    ]),\n    forwardRef(() => CartModule),\n    forwardRef(() => CategoriesModule),\n    forwardRef(() => RolesModule),\n    forwardRef(() => AuthModule),\n    forwardRef(() => UsersModule),\n  ],\n})\nexport class OrdersModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/OrdersService.html":{"url":"injectables/OrdersService.html","title":"injectable - OrdersService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  OrdersService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/orders/orders.service.ts\n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable, Scope } from '@nestjs/common';\n\n@Injectable({ scope: Scope.TRANSIENT })\nexport class OrdersService {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Owner.html":{"url":"classes/Owner.html","title":"class - Owner","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Owner\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/owner/models/owner.model.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    Model\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                activationCode\n                            \n                            \n                                    Public\n                                activationLink\n                            \n                            \n                                    Private\n                                confirmCode\n                            \n                            \n                                    Public\n                                email\n                            \n                            \n                                    Public\n                                id\n                            \n                            \n                                    Private\n                                isActivated\n                            \n                            \n                                    Private\n                                name\n                            \n                            \n                                    Private\n                                ownerAgent\n                            \n                            \n                                    Public\n                                ownerRefreshTokens\n                            \n                            \n                                    Private\n                                password\n                            \n                            \n                                    Public\n                                phoneNumber\n                            \n                            \n                                    Private\n                                products\n                            \n                            \n                                    Public\n                                resetToken\n                            \n                            \n                                    Private\n                                resetTokenExpiration\n                            \n                            \n                                    Public\n                                roles\n                            \n                            \n                                    Private\n                                surname\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addProduct\n                            \n                            \n                                getActivationCode\n                            \n                            \n                                getConfirmCode\n                            \n                            \n                                getEmail\n                            \n                            \n                                getIsActivated\n                            \n                            \n                                getName\n                            \n                            \n                                getOwnerAgent\n                            \n                            \n                                getOwnerRefreshTokens\n                            \n                            \n                                getPassword\n                            \n                            \n                                getPhoneNumber\n                            \n                            \n                                getProducts\n                            \n                            \n                                getResetToken\n                            \n                            \n                                getResetTokenExpiration\n                            \n                            \n                                getSurname\n                            \n                            \n                                setActivationCode\n                            \n                            \n                                setConfirmCode\n                            \n                            \n                                setIsActivated\n                            \n                            \n                                setName\n                            \n                            \n                                setNewPasssword\n                            \n                            \n                                setOwnerAgent\n                            \n                            \n                                setResetToken\n                            \n                            \n                                setResetTokenExpiration\n                            \n                            \n                                setSurname\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        activationCode\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: '56733423', description: 'activationCode'})@IsInt()@Column({type: undefined, unique: false, allowNull: true, field: 'activationCode'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/owner/models/owner.model.ts:167\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        activationLink\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'http://sdgdgsgsfhd_rh;eh', description: 'activationLink'})@IsUUID(4)@Column({type: undefined, unique: false, allowNull: true, field: 'activationLink'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/owner/models/owner.model.ts:127\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        confirmCode\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: '56733423', description: 'confirmCode'})@IsInt()@Column({type: undefined, unique: false, allowNull: true, field: 'confirmCode'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/owner/models/owner.model.ts:140\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'owner@gmail.com', description: 'owner`s email'})@IsEmail()@Column({type: undefined, unique: true, allowNull: false, field: 'email'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/owner/models/owner.model.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: '1', description: 'unique identifier'})@Column({type: undefined, unique: true, autoIncrement: true, primaryKey: true, allowNull: false, field: 'id'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/owner/models/owner.model.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        isActivated\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'True', description: 'Is admin activated'})@Column({type: undefined, unique: false, allowNull: true, field: 'isActivated'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/owner/models/owner.model.ts:114\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'Alex', description: 'owner`s Name'})@Column({type: undefined, unique: false, allowNull: false, field: 'name'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/owner/models/owner.model.ts:50\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        ownerAgent\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'Mozilla/5.0 (Windows NT 7.0; Win32; x32) AppleWebKit/523.34 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/523.34', description: 'owner`s agent'})@Column({type: undefined, unique: true, allowNull: true, field: 'ownerAgent'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/owner/models/owner.model.ts:154\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        ownerRefreshTokens\n                        \n                    \n                \n            \n                \n                    \n                        Type :     OwnerRefreshToken[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @HasMany(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/owner/models/owner.model.ts:176\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'etrhg45ty5yeewt4t4665y', description: 'owner`s password'})@Column({type: undefined, unique: true, allowNull: false, field: 'password'})@Exclude()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/owner/models/owner.model.ts:102\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        phoneNumber\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: '+251912345678', description: 'owner`s phoneNumber'})@Column({type: undefined, unique: false, allowNull: false, field: 'phoneNumber'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/owner/models/owner.model.ts:68\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        products\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Product[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @HasMany(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/owner/models/owner.model.ts:170\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        resetToken\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'etrhg45ty5yeewt4t4665y', description: 'resetToken'})@Column({type: undefined, unique: true, allowNull: true, field: 'resetToken'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/owner/models/owner.model.ts:77\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        resetTokenExpiration\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'etrhg45ty5yeewt4t4665y', description: 'resetTokenExpiration'})@Column({type: undefined, unique: true, allowNull: true, field: 'resetTokenExpiration'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/owner/models/owner.model.ts:89\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        roles\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Role[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @BelongsToMany(undefined, undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/owner/models/owner.model.ts:173\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        surname\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'Cusler', description: 'owner`s surname'})@Column({type: undefined, unique: false, allowNull: false, field: 'surname'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/owner/models/owner.model.ts:59\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addProduct\n                        \n                    \n                \n            \n            \n                \naddProduct(product: Product)\n                \n            \n\n\n            \n                \n                    Defined in src/owner/models/owner.model.ts:275\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    product\n                                    \n                                                Product\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Product[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getActivationCode\n                        \n                    \n                \n            \n            \n                \ngetActivationCode()\n                \n            \n\n\n            \n                \n                    Defined in src/owner/models/owner.model.ts:258\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         number\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getConfirmCode\n                        \n                    \n                \n            \n            \n                \ngetConfirmCode()\n                \n            \n\n\n            \n                \n                    Defined in src/owner/models/owner.model.ts:222\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         number\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getEmail\n                        \n                    \n                \n            \n            \n                \ngetEmail()\n                \n            \n\n\n            \n                \n                    Defined in src/owner/models/owner.model.ts:205\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getIsActivated\n                        \n                    \n                \n            \n            \n                \ngetIsActivated()\n                \n            \n\n\n            \n                \n                    Defined in src/owner/models/owner.model.ts:213\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getName\n                        \n                    \n                \n            \n            \n                \ngetName()\n                \n            \n\n\n            \n                \n                    Defined in src/owner/models/owner.model.ts:178\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getOwnerAgent\n                        \n                    \n                \n            \n            \n                \ngetOwnerAgent()\n                \n            \n\n\n            \n                \n                    Defined in src/owner/models/owner.model.ts:249\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getOwnerRefreshTokens\n                        \n                    \n                \n            \n            \n                \ngetOwnerRefreshTokens()\n                \n            \n\n\n            \n                \n                    Defined in src/owner/models/owner.model.ts:271\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     OwnerRefreshToken[]\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getPassword\n                        \n                    \n                \n            \n            \n                \ngetPassword()\n                \n            \n\n\n            \n                \n                    Defined in src/owner/models/owner.model.ts:196\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getPhoneNumber\n                        \n                    \n                \n            \n            \n                \ngetPhoneNumber()\n                \n            \n\n\n            \n                \n                    Defined in src/owner/models/owner.model.ts:209\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getProducts\n                        \n                    \n                \n            \n            \n                \ngetProducts()\n                \n            \n\n\n            \n                \n                    Defined in src/owner/models/owner.model.ts:267\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Product[]\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getResetToken\n                        \n                    \n                \n            \n            \n                \ngetResetToken()\n                \n            \n\n\n            \n                \n                    Defined in src/owner/models/owner.model.ts:231\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getResetTokenExpiration\n                        \n                    \n                \n            \n            \n                \ngetResetTokenExpiration()\n                \n            \n\n\n            \n                \n                    Defined in src/owner/models/owner.model.ts:240\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         number\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getSurname\n                        \n                    \n                \n            \n            \n                \ngetSurname()\n                \n            \n\n\n            \n                \n                    Defined in src/owner/models/owner.model.ts:187\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setActivationCode\n                        \n                    \n                \n            \n            \n                \nsetActivationCode(activationCode: number)\n                \n            \n\n\n            \n                \n                    Defined in src/owner/models/owner.model.ts:262\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    activationCode\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setConfirmCode\n                        \n                    \n                \n            \n            \n                \nsetConfirmCode(confirnCode: number)\n                \n            \n\n\n            \n                \n                    Defined in src/owner/models/owner.model.ts:226\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    confirnCode\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setIsActivated\n                        \n                    \n                \n            \n            \n                \nsetIsActivated(isActivated: boolean)\n                \n            \n\n\n            \n                \n                    Defined in src/owner/models/owner.model.ts:217\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    isActivated\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setName\n                        \n                    \n                \n            \n            \n                \nsetName(name: string)\n                \n            \n\n\n            \n                \n                    Defined in src/owner/models/owner.model.ts:182\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setNewPasssword\n                        \n                    \n                \n            \n            \n                \nsetNewPasssword(password: string)\n                \n            \n\n\n            \n                \n                    Defined in src/owner/models/owner.model.ts:200\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setOwnerAgent\n                        \n                    \n                \n            \n            \n                \nsetOwnerAgent(ownerAgent: string)\n                \n            \n\n\n            \n                \n                    Defined in src/owner/models/owner.model.ts:253\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    ownerAgent\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setResetToken\n                        \n                    \n                \n            \n            \n                \nsetResetToken(resetToken: string)\n                \n            \n\n\n            \n                \n                    Defined in src/owner/models/owner.model.ts:235\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    resetToken\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setResetTokenExpiration\n                        \n                    \n                \n            \n            \n                \nsetResetTokenExpiration(resetTokenExpiration: number)\n                \n            \n\n\n            \n                \n                    Defined in src/owner/models/owner.model.ts:244\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    resetTokenExpiration\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setSurname\n                        \n                    \n                \n            \n            \n                \nsetSurname(surname: string)\n                \n            \n\n\n            \n                \n                    Defined in src/owner/models/owner.model.ts:191\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    surname\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { Exclude } from 'class-transformer';\nimport {\n  Column,\n  DataType,\n  Table,\n  Model,\n  IsInt,\n  IsEmail,\n  IsUUID,\n  BelongsToMany,\n  HasMany,\n} from 'sequelize-typescript';\nimport { Role } from '../../roles/models/roles.model';\nimport { UserRoles } from '../../roles/models/user.roles.model';\nimport { OwnerCreationAttrbs } from '../../core/interfaces/owner.interfaces';\nimport { Product } from '../../product/models/product.model';\nimport { OwnerRefreshToken } from './owner.refresh.token.model';\n\n@Table({ tableName: 'OWNER' })\nexport class Owner extends Model {\n  @ApiProperty({ example: '1', description: 'unique identifier' })\n  @Column({\n    type: DataType.INTEGER,\n    unique: true,\n    autoIncrement: true,\n    primaryKey: true,\n    allowNull: false,\n    field: 'id',\n  })\n  public id: number;\n\n  @ApiProperty({ example: 'owner@gmail.com', description: 'owner`s email' })\n  @IsEmail\n  @Column({\n    type: DataType.STRING,\n    unique: true,\n    allowNull: false,\n    field: 'email',\n  })\n  public email: string;\n\n  @ApiProperty({ example: 'Alex', description: 'owner`s Name' })\n  @Column({\n    type: DataType.STRING,\n    unique: false,\n    allowNull: false,\n    field: 'name',\n  })\n  private name: string;\n\n  @ApiProperty({ example: 'Cusler', description: 'owner`s surname' })\n  @Column({\n    type: DataType.STRING,\n    unique: false,\n    allowNull: false,\n    field: 'surname',\n  })\n  private surname: string;\n\n  @ApiProperty({ example: '+251912345678', description: 'owner`s phoneNumber' })\n  @Column({\n    type: DataType.STRING,\n    unique: false,\n    allowNull: false,\n    field: 'phoneNumber',\n  })\n  public phoneNumber: string;\n\n  @ApiProperty({ example: 'etrhg45ty5yeewt4t4665y', description: 'resetToken' })\n  @Column({\n    type: DataType.STRING,\n    unique: true,\n    allowNull: true,\n    field: 'resetToken',\n  })\n  public resetToken: string;\n\n  @ApiProperty({\n    example: 'etrhg45ty5yeewt4t4665y',\n    description: 'resetTokenExpiration',\n  })\n  @Column({\n    type: DataType.STRING,\n    unique: true,\n    allowNull: true,\n    field: 'resetTokenExpiration',\n  })\n  private resetTokenExpiration: number;\n\n  @ApiProperty({\n    example: 'etrhg45ty5yeewt4t4665y',\n    description: 'owner`s password',\n  })\n  @Column({\n    type: DataType.STRING,\n    unique: true,\n    allowNull: false,\n    field: 'password',\n  })\n  @Exclude()\n  private password: string;\n\n  @ApiProperty({\n    example: 'True',\n    description: 'Is admin activated',\n  })\n  @Column({\n    type: DataType.BOOLEAN,\n    unique: false,\n    allowNull: true,\n    field: 'isActivated',\n  })\n  private isActivated: boolean;\n\n  @ApiProperty({\n    example: 'http://sdgdgsgsfhd_rh;eh',\n    description: 'activationLink',\n  })\n  @IsUUID(4)\n  @Column({\n    type: DataType.STRING,\n    unique: false,\n    allowNull: true,\n    field: 'activationLink',\n  })\n  public activationLink: string;\n\n  @ApiProperty({\n    example: '56733423',\n    description: 'confirmCode',\n  })\n  @IsInt\n  @Column({\n    type: DataType.INTEGER,\n    unique: false,\n    allowNull: true,\n    field: 'confirmCode',\n  })\n  private confirmCode: number;\n\n  @ApiProperty({\n    example:\n      // tslint:disable-next-line: max-line-length\n      'Mozilla/5.0 (Windows NT 7.0; Win32; x32) AppleWebKit/523.34 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/523.34',\n    description: 'owner`s agent',\n  })\n  @Column({\n    type: DataType.CHAR(350),\n    unique: true,\n    allowNull: true,\n    field: 'ownerAgent',\n  })\n  private ownerAgent: string;\n\n  @ApiProperty({\n    example: '56733423',\n    description: 'activationCode',\n  })\n  @IsInt\n  @Column({\n    type: DataType.INTEGER,\n    unique: false,\n    allowNull: true,\n    field: 'activationCode',\n  })\n  private activationCode: number;\n\n  @HasMany(() => Product)\n  private products: Product[];\n\n  @BelongsToMany(() => Role, () => UserRoles)\n  public roles: Role[];\n\n  @HasMany(() => OwnerRefreshToken)\n  public ownerRefreshTokens: OwnerRefreshToken[];\n\n  getName(): string {\n    return this.name;\n  }\n\n  setName(name: string): string {\n    this.name = name;\n    return this.name;\n  }\n\n  getSurname(): string {\n    return this.surname;\n  }\n\n  setSurname(surname: string): string {\n    this.surname = surname;\n    return this.surname;\n  }\n\n  getPassword(): string {\n    return this.password;\n  }\n\n  setNewPasssword(password: string): string {\n    this.password = password;\n    return this.password;\n  }\n\n  getEmail(): string {\n    return this.email;\n  }\n\n  getPhoneNumber(): string {\n    return this.phoneNumber;\n  }\n\n  getIsActivated(): boolean {\n    return this.isActivated;\n  }\n\n  setIsActivated(isActivated: boolean): boolean {\n    this.isActivated = isActivated;\n    return this.isActivated;\n  }\n\n  getConfirmCode(): number {\n    return this.confirmCode;\n  }\n\n  setConfirmCode(confirnCode: number): number {\n    this.confirmCode = confirnCode;\n    return this.confirmCode;\n  }\n\n  getResetToken(): string {\n    return this.resetToken;\n  }\n\n  setResetToken(resetToken: string): string {\n    this.resetToken = resetToken;\n    return this.resetToken;\n  }\n\n  getResetTokenExpiration(): number {\n    return this.resetTokenExpiration;\n  }\n\n  setResetTokenExpiration(resetTokenExpiration: number): number {\n    this.resetTokenExpiration = resetTokenExpiration;\n    return this.resetTokenExpiration;\n  }\n\n  getOwnerAgent(): string {\n    return this.ownerAgent;\n  }\n\n  setOwnerAgent(ownerAgent: string): string {\n    this.ownerAgent = ownerAgent;\n    return this.ownerAgent;\n  }\n\n  getActivationCode(): number {\n    return this.activationCode;\n  }\n\n  setActivationCode(activationCode: number): number {\n    this.activationCode = activationCode;\n    return this.activationCode;\n  }\n\n  getProducts(): Product[] {\n    return this.products;\n  }\n\n  getOwnerRefreshTokens(): OwnerRefreshToken[] {\n    return this.ownerRefreshTokens;\n  }\n\n  addProduct(product: Product): Product[]{\n    this.products.push(product);\n    return this.products;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/OwnerAdminGuard.html":{"url":"guards/OwnerAdminGuard.html","title":"guard - OwnerAdminGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    OwnerAdminGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/common/guards/owner-admin.guard.ts\n            \n\n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(ownerJwtRefreshTokenService: OwnerJwtRefreshService, adminJwtRefreshTokenService: AdminJwtRefreshService, reflector: Reflector)\n                    \n                \n                        \n                            \n                                Defined in src/common/guards/owner-admin.guard.ts:27\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        ownerJwtRefreshTokenService\n                                                  \n                                                        \n                                                                        OwnerJwtRefreshService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        adminJwtRefreshTokenService\n                                                  \n                                                        \n                                                                        AdminJwtRefreshService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        reflector\n                                                  \n                                                        \n                                                                    Reflector\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate(context: ExecutionContext)\n                \n            \n\n\n            \n                \n                    Defined in src/common/guards/owner-admin.guard.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                            ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     boolean | Promise | Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import {\n  CanActivate,\n  ExecutionContext,\n  HttpException,\n  HttpStatus,\n  Injectable,\n  Scope,\n} from '@nestjs/common';\nimport { Observable } from 'rxjs';\nimport { Payload } from '../../core/interfaces/auth.interfaces';\nimport {\n  ADMIN_NOT_AUTHORIZIED,\n  OWNER_NOT_AUTHORIZIED,\n  REFRESH_TOKEN_NOT_PROVIDED,\n  USER_NOT_DETECTED\n} from '../../auth/auth.constants';\nimport { OwnerJwtRefreshService } from '../../owner/services/jwt-refresh.service';\nimport { OwnerRefreshToken } from '../../owner/models/owner.refresh.token.model';\nimport { ROLES_KEY } from '../decorators/roles-auth.decorator';\nimport { Reflector } from '@nestjs/core';\nimport { AdminJwtRefreshService } from '../../admin/services/jwt-refresh.service';\nimport { AdminRefreshToken } from '../../admin/models/admin.refresh.token.model';\nimport { ApiException } from '../exceptions/api.exception';\nimport { ACCESS_DENIED } from '../../admin/constants/admin.constants';\n\n@Injectable({ scope: Scope.REQUEST })\nexport class OwnerAdminGuard implements CanActivate {\n  constructor(\n    private readonly ownerJwtRefreshTokenService: OwnerJwtRefreshService,\n    private readonly adminJwtRefreshTokenService: AdminJwtRefreshService,\n    private reflector: Reflector,\n  ) {}\n  canActivate(\n    context: ExecutionContext,\n  ): boolean | Promise | Observable {\n    return (async () => {\n      const requiredRoles: string[] = this.reflector.getAllAndOverride(\n        ROLES_KEY,\n        [context.getHandler(), context.getClass()],\n      );\n      if (!requiredRoles) {\n        return true;\n      }\n      const req = context.switchToHttp().getRequest();\n      const refreshToken = req?.cookies['refreshToken'];\n      if (!refreshToken) {\n        throw new ApiException(HttpStatus.BAD_REQUEST, 'Bad request!', REFRESH_TOKEN_NOT_PROVIDED);\n      }\n      const decodedToken = Buffer.from(refreshToken, 'base64').toString(\n        'ascii',\n      );\n      const type: 'OWNER' | 'ADMIN' | null = req['type'];\n      if (type === undefined) {\n        throw new ApiException(HttpStatus.UNAUTHORIZED, 'Unathorized!', USER_NOT_DETECTED);\n      }\n      if (type && type === 'OWNER') {\n        const userRefreshToken =\n          await this.ownerJwtRefreshTokenService.findToken(decodedToken);\n        if (!userRefreshToken) {\n          throw new ApiException(HttpStatus.UNAUTHORIZED, 'Unathorized!', OWNER_NOT_AUTHORIZIED);\n        }\n        const payload: Payload = req?.payload;\n        if (!payload) {\n          throw new ApiException(HttpStatus.UNAUTHORIZED, 'Unathorized!', OWNER_NOT_AUTHORIZIED);\n        }\n        if (\n          userRefreshToken instanceof OwnerRefreshToken &&\n          payload.userId !== userRefreshToken.ownerId\n        ) {\n          throw new ApiException(HttpStatus.UNAUTHORIZED, 'Unathorized!', OWNER_NOT_AUTHORIZIED);\n        }\n        const refreshPayload =\n          await this.ownerJwtRefreshTokenService.validateRefreshToken(\n            decodedToken,\n          );\n        if (!refreshPayload) {\n          return false;\n        }\n        if (\n          !refreshPayload.roles.some(\n          (role: { value: string; description: string }) =>\n            requiredRoles.includes(role.value))\n        ) {\n          throw new ApiException(HttpStatus.UNAUTHORIZED, 'Unathorized!', ACCESS_DENIED);\n        }\n        return true;\n      }\n      if (type && type === 'ADMIN') {\n        const userRefreshToken =\n          await this.adminJwtRefreshTokenService.findToken(decodedToken);\n        if (!userRefreshToken) {\n          throw new ApiException(HttpStatus.UNAUTHORIZED, 'Unathorized!', ADMIN_NOT_AUTHORIZIED);\n        }\n        const payload: Payload = req?.payload;\n        if (!payload) {\n          throw new ApiException(HttpStatus.UNAUTHORIZED, 'Unathorized!', ADMIN_NOT_AUTHORIZIED);\n        }\n        if (\n          userRefreshToken instanceof AdminRefreshToken &&\n          payload.userId !== userRefreshToken.adminId\n        ) {\n          throw new ApiException(HttpStatus.UNAUTHORIZED, 'Unathorized!', ADMIN_NOT_AUTHORIZIED);\n        }\n        const refreshPayload =\n          await this.adminJwtRefreshTokenService.validateRefreshToken(\n            decodedToken,\n          );\n        if (\n          !refreshPayload.roles.some(\n          (role: { value: string; description: string }) =>\n            requiredRoles.includes(role.value))\n        ) {\n          throw new ApiException(HttpStatus.UNAUTHORIZED, 'Unathorized!', ACCESS_DENIED);\n        }\n        return true;\n      }\n      throw new ApiException(HttpStatus.UNAUTHORIZED, 'Unathorized!', ACCESS_DENIED);\n    })();\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/OwnerCreationAttrbs.html":{"url":"interfaces/OwnerCreationAttrbs.html","title":"interface - OwnerCreationAttrbs","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  OwnerCreationAttrbs\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/interfaces/owner.interfaces.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            activationLink\n                                        \n                                \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            password\n                                        \n                                \n                                \n                                        \n                                            phoneNumber\n                                        \n                                \n                                \n                                        \n                                            surname\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        activationLink\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        activationLink:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        password\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        password:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        phoneNumber\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        phoneNumber:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        surname\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        surname:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface OwnerRefreshTokenCreationAttrbs {\n  email: string;\n  ownerId: number;\n  ownerRefreshToken: string;\n  phoneNumber: string;\n  ownerAgent: string;\n}\n\nexport interface OwnerCreationAttrbs {\n  name: string;\n  surname: string;\n  email: string;\n  phoneNumber: string;\n  password: string;\n  activationLink: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/OwnerJwtRefreshService.html":{"url":"injectables/OwnerJwtRefreshService.html","title":"injectable - OwnerJwtRefreshService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  OwnerJwtRefreshService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/owner/services/jwt-refresh.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                Logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                findToken\n                            \n                            \n                                    Async\n                                findTokenByParams\n                            \n                            \n                                    Async\n                                findTokenByToken\n                            \n                            \n                                    Private\n                                generateActivationCode\n                            \n                            \n                                    Private\n                                    Async\n                                generateEncryptedValue\n                            \n                            \n                                    Async\n                                generateRefreshToken\n                            \n                            \n                                    Async\n                                insertToken\n                            \n                            \n                                    Async\n                                removeToken\n                            \n                            \n                                    Async\n                                removeTokenInTime\n                            \n                            \n                                    Async\n                                saveToken\n                            \n                            \n                                    Async\n                                validateRefreshToken\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(jwtService: JwtService, ownerService: OwnerService, mailService: MailService, sheduleService: TasksService, ownerRefreshTokenRepository)\n                    \n                \n                        \n                            \n                                Defined in src/owner/services/jwt-refresh.service.ts:33\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        jwtService\n                                                  \n                                                        \n                                                                    JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        ownerService\n                                                  \n                                                        \n                                                                        OwnerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        mailService\n                                                  \n                                                        \n                                                                        MailService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        sheduleService\n                                                  \n                                                        \n                                                                        TasksService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        ownerRefreshTokenRepository\n                                                  \n                                                        \n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findToken\n                        \n                    \n                \n            \n            \n                \n                    \n                    findToken(ownerRefreshToken: string)\n                \n            \n\n\n            \n                \n                    Defined in src/owner/services/jwt-refresh.service.ts:222\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    ownerRefreshToken\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findTokenByParams\n                        \n                    \n                \n            \n            \n                \n                    \n                    findTokenByParams(email: string, phoneNumber: string, identifier: string)\n                \n            \n\n\n            \n                \n                    Defined in src/owner/services/jwt-refresh.service.ts:237\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    phoneNumber\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    identifier\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findTokenByToken\n                        \n                    \n                \n            \n            \n                \n                    \n                    findTokenByToken(ownerRefreshToken: string, identifier: string)\n                \n            \n\n\n            \n                \n                    Defined in src/owner/services/jwt-refresh.service.ts:206\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    ownerRefreshToken\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    identifier\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        generateActivationCode\n                        \n                    \n                \n            \n            \n                \n                    \n                    generateActivationCode()\n                \n            \n\n\n            \n                \n                    Defined in src/owner/services/jwt-refresh.service.ts:289\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         number\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Async\n                        generateEncryptedValue\n                        \n                    \n                \n            \n            \n                \n                    \n                    generateEncryptedValue(value: string, bytes: number)\n                \n            \n\n\n            \n                \n                    Defined in src/owner/services/jwt-refresh.service.ts:276\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    bytes\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        generateRefreshToken\n                        \n                    \n                \n            \n            \n                \n                    \n                    generateRefreshToken(payload: CreateOwnerRefreshTokenDto)\n                \n            \n\n\n            \n                \n                    Defined in src/owner/services/jwt-refresh.service.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    payload\n                                    \n                                                CreateOwnerRefreshTokenDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        insertToken\n                        \n                    \n                \n            \n            \n                \n                    \n                    insertToken(ownerId: number, ownerRefreshToken: string, email: string, ownerAgent: string, phoneNumber: string, expireDate: Date)\n                \n            \n\n\n            \n                \n                    Defined in src/owner/services/jwt-refresh.service.ts:76\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    ownerId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    ownerRefreshToken\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    ownerAgent\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    phoneNumber\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    expireDate\n                                    \n                                                Date\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        removeToken\n                        \n                    \n                \n            \n            \n                \n                    \n                    removeToken(ownerRefreshToken: string)\n                \n            \n\n\n            \n                \n                    Defined in src/owner/services/jwt-refresh.service.ts:184\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    ownerRefreshToken\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        removeTokenInTime\n                        \n                    \n                \n            \n            \n                \n                    \n                    removeTokenInTime(ownerRefreshTokenId: number, identifier: string)\n                \n            \n\n\n            \n                \n                    Defined in src/owner/services/jwt-refresh.service.ts:251\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    ownerRefreshTokenId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    identifier\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        saveToken\n                        \n                    \n                \n            \n            \n                \n                    \n                    saveToken(ownerId: number, ownerRefreshToken: string, email: string, ownerAgent: string, phoneNumber: string, expireDate: Date, identifier: string)\n                \n            \n\n\n            \n                \n                    Defined in src/owner/services/jwt-refresh.service.ts:119\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    ownerId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    ownerRefreshToken\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    ownerAgent\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    phoneNumber\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    expireDate\n                                    \n                                                Date\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    identifier\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        validateRefreshToken\n                        \n                    \n                \n            \n            \n                \n                    \n                    validateRefreshToken(ownerRefreshToken: string)\n                \n            \n\n\n            \n                \n                    Defined in src/owner/services/jwt-refresh.service.ts:58\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    ownerRefreshToken\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        Logger\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Logger(OwnerJwtRefreshService.name)\n                    \n                \n                    \n                        \n                                Defined in src/owner/services/jwt-refresh.service.ts:33\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import {\n  BadRequestException,\n  HttpStatus,\n  Injectable,\n  InternalServerErrorException,\n  Logger,\n  NotFoundException,\n  Scope,\n} from '@nestjs/common';\nimport { JwtService } from '@nestjs/jwt';\nimport { InjectModel } from '@nestjs/sequelize';\nimport { randomBytes, scrypt, createCipheriv } from 'crypto';\nimport { promisify } from 'util';\nimport { v4 } from 'uuid';\nimport { ApiException } from '../../common/exceptions/api.exception';\nimport { TasksService } from '../../core/services/scedule.service';\nimport { MailService } from '../../mail/mail.service';\nimport {\n  ERROR_WHILE_REMOVING_TOKEN,\n  ERROR_WHILE_SAVING_TOKEN,\n  ERROR_WHILE_SIGNING_TOKEN,\n  ERROR_WHILE_VALIDATING_TOKEN,\n  TOKEN_INVALID,\n  TOKEN_NOT_FOUND,\n} from '../constants/jwt-refresh.constants';\nimport { OWNER_NOT_FOUND } from '../constants/owner.constants';\nimport { CreateOwnerRefreshTokenDto } from '../dto/create.owner.refresh.token.dto';\nimport { OwnerRefreshToken } from '../models/owner.refresh.token.model';\nimport { OwnerService } from './owner.service';\n\n@Injectable({ scope: Scope.TRANSIENT })\nexport class OwnerJwtRefreshService {\n  private readonly Logger = new Logger(OwnerJwtRefreshService.name);\n  constructor(\n    private readonly jwtService: JwtService,\n    private readonly ownerService: OwnerService,\n    private readonly mailService: MailService,\n    private sheduleService: TasksService,\n    @InjectModel(OwnerRefreshToken)\n    private readonly ownerRefreshTokenRepository: typeof OwnerRefreshToken,\n  ) {}\n\n  async generateRefreshToken(\n    payload: CreateOwnerRefreshTokenDto,\n  ): Promise {\n    try {\n      const ownerRefreshToken = this.jwtService.sign(payload);\n      return ownerRefreshToken;\n    } catch (err) {\n       throw new ApiException(\n          HttpStatus.INTERNAL_SERVER_ERROR,\n          'Internal Server Error',\n          ERROR_WHILE_SIGNING_TOKEN\n        );   \n    }\n  }\n\n  async validateRefreshToken(\n    ownerRefreshToken: string,\n  ): Promise {\n    try {\n      const ownerData = this.jwtService.verify(ownerRefreshToken);\n      if (!ownerData) {\n        throw new ApiException(HttpStatus.BAD_REQUEST, 'Bad request', TOKEN_INVALID);\n      }\n      return ownerData;\n    } catch (err: unknown) {\n       throw new ApiException(\n          HttpStatus.INTERNAL_SERVER_ERROR,\n          'Internal Server Error',\n          ERROR_WHILE_VALIDATING_TOKEN\n        );   \n    }\n  }\n\n  async insertToken(\n    ownerId: number,\n    ownerRefreshToken: string,\n    email: string,\n    ownerAgent: string,\n    phoneNumber: string,\n    expireDate: Date,\n  ) {\n    try{\n      const owner = await this.ownerService.getOwnerById(ownerId);\n      if (!owner) {\n        throw new ApiException(HttpStatus.NOT_FOUND, 'Not found!', OWNER_NOT_FOUND);   \n      }\n      const token = await this.ownerRefreshTokenRepository.create({\n        ownerRefreshToken: ownerRefreshToken,\n        ownerId: owner.id,\n        email: email,\n        ownerAgent: ownerAgent,\n        phoneNumber: phoneNumber,\n      });\n      token.setIdentifier(v4());\n      await token.save();\n      if (!token.getExpireDate()) {\n        token.setExpireDate(expireDate);\n        await token.save(); \n      }\n      if (!owner.getOwnerRefreshTokens() || owner.getOwnerRefreshTokens().length === 0) {\n        owner.$set('ownerRefreshTokens', token.id);\n        owner.ownerRefreshTokens = [token];\n      } else {\n        owner.$add('ownerRefreshTokens', token.id);\n      }\n      return token;\n    } catch (err: unknown) {\n      console.log(err);\n      throw new ApiException(\n        HttpStatus.INTERNAL_SERVER_ERROR,\n        'Internal Server Error',\n        ERROR_WHILE_SAVING_TOKEN\n      );   \n    }\n  }\n\n  async saveToken(\n    ownerId: number,\n    ownerRefreshToken: string,\n    email: string,\n    ownerAgent: string,\n    phoneNumber: string,\n    expireDate: Date,\n    identifier: string,\n  ): Promise {\n    try {\n      const owner = await this.ownerService.getOwnerById(ownerId);\n      if (!owner) {\n       throw new ApiException(HttpStatus.NOT_FOUND, 'Not found!', OWNER_NOT_FOUND);   \n      }\n      const tokenData = await this.ownerRefreshTokenRepository.findOne({\n        where: {\n          ownerId: ownerId,\n          identifier: identifier,\n        },\n      });\n      if (tokenData && !owner.getOwnerAgent()) {\n        owner.setOwnerAgent(ownerAgent);\n        tokenData.setownerAgent(ownerAgent); \n        await owner.save();\n        await tokenData.save(); \n      }\n      if (tokenData) {\n        tokenData.ownerRefreshToken = ownerRefreshToken;\n        if (owner.getOwnerAgent() && owner.getOwnerAgent().trim() !== ownerAgent) {\n          owner.setIsActivated(false);\n          const link = await this.generateEncryptedValue('OWNER', 16);\n          const code = this.generateActivationCode();\n          owner.setResetToken(link.replace('/', `${v4()}`).replace('=', `${v4()}`));\n          owner.setActivationCode(code);\n          owner.setResetTokenExpiration(Number(Date.now() + 3600000));\n          await owner.save();\n          this.Logger.log(`checking owner with email ${owner.email}`, owner.getOwnerAgent() !== ownerAgent);\n          this.mailService.sendActivationMailToOwner(\n            owner.email,\n            `${process.env.API_URL}/auth/activate/${owner.getResetToken().trim()}?code=${code}`,\n          );\n        }\n        return tokenData.save();\n      }\n      const token = await this.ownerRefreshTokenRepository.create({\n        ownerRefreshToken: ownerRefreshToken,\n        ownerId: ownerId,\n        email: email,\n        ownerAgent: ownerAgent,\n        phoneNumber: phoneNumber,\n      });\n      if (!token.getExpireDate()) {\n        token.setExpireDate(expireDate);\n        await token.save(); \n      }\n      return token;\n    } catch (err: unknown) {\n      throw new ApiException(\n        HttpStatus.INTERNAL_SERVER_ERROR,\n        'Internal Server Error',\n        ERROR_WHILE_SAVING_TOKEN\n      );   \n    }\n  }\n\n  async removeToken(ownerRefreshToken: string): Promise {\n    try {\n      const token = await this.findToken(ownerRefreshToken);\n      if (!token) {\n        throw new ApiException(HttpStatus.NOT_FOUND, 'Not found!', TOKEN_NOT_FOUND);   \n      }\n      const owner = await this.ownerService.getOwnerById(token.ownerId);\n      owner.$remove('ownerRefreshTokens', token.token.id);\n      await owner.save();\n      const tokenData = await this.ownerRefreshTokenRepository.destroy({\n        where: { ownerRefreshToken: ownerRefreshToken },\n      });\n      return tokenData;\n    } catch (err: unknown) {\n       throw new ApiException(\n          HttpStatus.INTERNAL_SERVER_ERROR,\n          'Internal Server Error',\n          ERROR_WHILE_REMOVING_TOKEN\n        );   \n    }\n  }\n\n  async findTokenByToken(\n    ownerRefreshToken: string,\n    identifier: string,\n  ): Promise {\n    const token = await this.ownerRefreshTokenRepository.findOne({\n      where: {\n        ownerRefreshToken: ownerRefreshToken,\n        identifier: identifier,\n      },\n    });\n    if (!token) {\n      throw new ApiException(HttpStatus.NOT_FOUND, 'Not found!', TOKEN_NOT_FOUND);   \n    }\n    return token;\n  }\n\n  async findToken(\n    ownerRefreshToken: string,\n  ): Promise {\n    const token = await this.ownerRefreshTokenRepository.findOne({\n      where: { ownerRefreshToken: ownerRefreshToken },\n    });\n    if (!token) {\n      return false;\n    }\n    return { token: token, ownerId: token.ownerId };\n  }\n\n  async findTokenByParams(\n    email: string,\n    phoneNumber: string,\n    identifier: string,\n  ): Promise {\n    const token = await this.ownerRefreshTokenRepository.findOne({\n      where: { email: email, phoneNumber: phoneNumber, identifier: identifier },\n    });\n    if (!token) {\n      throw new ApiException(HttpStatus.BAD_REQUEST, 'Bad request', TOKEN_INVALID);\n    }\n    return token;\n  }\n\n  async removeTokenInTime(\n    ownerRefreshTokenId: number,\n    identifier: string\n  ): Promise {\n    const token = await OwnerRefreshToken.findOne({\n      where: {\n        id: ownerRefreshTokenId,\n        identifier: identifier,\n      }\n    });\n    if (!token) {\n      return false;\n    }\n    const owner = await this.ownerService.getOwnerById(token.ownerId);\n    owner.$remove('ownerRefreshTokens', token.id);\n    await owner.save();\n    return OwnerRefreshToken.destroy({\n      where: {\n        id: token.id,\n        phoneNumber: token.phoneNumber,\n        identifier: identifier,\n      },\n    });\n  }\n\n  private async generateEncryptedValue(\n    value: string,\n    bytes: number,\n  ): Promise {\n    const iv = randomBytes(bytes);\n    const API_KEY = process.env.API_KEY.toString();\n    const key = (await promisify(scrypt)(API_KEY, 'salt', 32)) as Buffer;\n    const cipher = createCipheriv('aes-256-ctr', key, iv);\n    return Buffer.concat([cipher.update(value), cipher.final()]).toString(\n      'base64',\n    );\n  }\n\n  private generateActivationCode(): number {\n    const confirmCode = Number(('' + Math.random()).substring(2, 10));\n    return confirmCode;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/OwnerModule.html":{"url":"modules/OwnerModule.html","title":"module - OwnerModule","body":"\n                   \n\n\n\n\n    Modules\n    OwnerModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_OwnerModule\n\n\n\ncluster_OwnerModule_exports\n\n\n\ncluster_OwnerModule_providers\n\n\n\ncluster_OwnerModule_imports\n\n\n\n\nRolesModule\n\nRolesModule\n\n\n\nOwnerModule\n\nOwnerModule\n\nOwnerModule -->\n\nRolesModule->OwnerModule\n\n\n\n\n\nOwnerJwtRefreshService \n\nOwnerJwtRefreshService \n\nOwnerJwtRefreshService  -->\n\nOwnerModule->OwnerJwtRefreshService \n\n\n\n\n\nOwnerService \n\nOwnerService \n\nOwnerService  -->\n\nOwnerModule->OwnerService \n\n\n\n\n\nAdminService\n\nAdminService\n\nOwnerModule -->\n\nAdminService->OwnerModule\n\n\n\n\n\nMailService\n\nMailService\n\nOwnerModule -->\n\nMailService->OwnerModule\n\n\n\n\n\nOwnerJwtRefreshService\n\nOwnerJwtRefreshService\n\nOwnerModule -->\n\nOwnerJwtRefreshService->OwnerModule\n\n\n\n\n\nOwnerService\n\nOwnerService\n\nOwnerModule -->\n\nOwnerService->OwnerModule\n\n\n\n\n\nTasksService\n\nTasksService\n\nOwnerModule -->\n\nTasksService->OwnerModule\n\n\n\n\n\nUsersService\n\nUsersService\n\nOwnerModule -->\n\nUsersService->OwnerModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/owner/owner.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AdminService\n                        \n                        \n                            MailService\n                        \n                        \n                            OwnerJwtRefreshService\n                        \n                        \n                            OwnerService\n                        \n                        \n                            TasksService\n                        \n                        \n                            UsersService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            RolesModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            OwnerJwtRefreshService\n                        \n                        \n                            OwnerService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { forwardRef, Module } from '@nestjs/common';\nimport { OwnerService } from './services/owner.service';\nimport { JwtModule } from '@nestjs/jwt';\nimport { SequelizeModule } from '@nestjs/sequelize';\nimport { AuthModule } from '../auth/auth.module';\nimport { Owner } from './models/owner.model';\nimport { OwnerRefreshToken } from './models/owner.refresh.token.model';\nimport { OwnerJwtRefreshService } from './services/jwt-refresh.service';\nimport { AdminModule } from '../admin/admin.module';\nimport { MailService } from '../mail/mail.service';\nimport { Role } from '../roles/models/roles.model';\nimport { UserRoles } from '../roles/models/user.roles.model';\nimport { RolesModule } from '../roles/roles.module';\nimport { ConfigModule } from '@nestjs/config';\nimport { CoreModule } from '../core/core.module';\nimport { TasksService } from '../core/services/scedule.service';\nimport { Admin } from '../admin/models/admin.model';\nimport { AdminRefreshToken } from '../admin/models/admin.refresh.token.model';\nimport { CartProduct } from '../cart/models/cart.product.model';\nimport { Cart } from '../cart/models/cart.model';\nimport { Category } from '../categories/models/category.model';\nimport { ProductCategories } from '../categories/models/product.categories.model';\nimport { Order } from '../orders/models/order.model';\nimport { OrderProduct } from '../orders/models/order.product.model';\nimport { Product } from '../product/models/product.model';\nimport { User } from '../users/models/user.model';\nimport { UserRefreshToken } from '../users/models/user.refresh.token.model';\nimport { UsersService } from '../users/services/users.service';\nimport { AdminService } from '../admin/services/admin.service';\n@Module({\n  imports: [\n    ConfigModule.forRoot({\n      envFilePath: `.${process.env.NODE_ENV}.env`,\n      expandVariables: true,\n      isGlobal: true,\n    }),\n    SequelizeModule.forFeature([Owner, OwnerRefreshToken, Role, UserRoles]),\n    RolesModule,\n    forwardRef(() => OwnerModule),\n    JwtModule.register({\n      secret:\n        process.env.JWT_REFRESH_OWNER_SECRET.toString().trim() ||\n        'knfdljhtop6hohjlyjgfhmhnhgnljjukfty6yujhjbjlvcglkidrtujhdgsgdsagdfsdhQQQtrfujuj',\n      signOptions: {\n        expiresIn: 86400000,\n      },\n    }),\n    SequelizeModule.forFeature([\n      Product,\n      Order,\n      OrderProduct,\n      Category,\n      ProductCategories,\n      Admin,\n      AdminRefreshToken,\n      Owner,\n      OwnerRefreshToken,\n      User,\n      UserRefreshToken,\n      Role,\n      UserRoles,\n      Cart,\n      CartProduct,\n    ]),\n    forwardRef(() => CoreModule),\n    forwardRef(() => AuthModule),\n    forwardRef(() => AdminModule),\n  ],\n  providers: [OwnerService, OwnerJwtRefreshService, MailService, TasksService, UsersService, AdminService],\n  exports: [OwnerService, OwnerJwtRefreshService],\n})\nexport class OwnerModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/OwnerRefreshToken.html":{"url":"classes/OwnerRefreshToken.html","title":"class - OwnerRefreshToken","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  OwnerRefreshToken\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/owner/models/owner.refresh.token.model.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    Model\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                email\n                            \n                            \n                                    Private\n                                expireDate\n                            \n                            \n                                    Public\n                                id\n                            \n                            \n                                    Public\n                                identifier\n                            \n                            \n                                    Private\n                                owner\n                            \n                            \n                                    Private\n                                ownerAgent\n                            \n                            \n                                    Public\n                                ownerId\n                            \n                            \n                                    Public\n                                ownerRefreshToken\n                            \n                            \n                                    Public\n                                phoneNumber\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getExpireDate\n                            \n                            \n                                getIdentifier\n                            \n                            \n                                getOwner\n                            \n                            \n                                getownerAgent\n                            \n                            \n                                getownerId\n                            \n                            \n                                setExpireDate\n                            \n                            \n                                setIdentifier\n                            \n                            \n                                setownerAgent\n                            \n                            \n                                setownerId\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'owner@gmail.com', description: 'owner`s email'})@IsEmail()@Column({type: undefined, unique: false, allowNull: false, field: 'email'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/owner/models/owner.refresh.token.model.ts:48\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        expireDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: '86400000', description: 'expireDate'})@Column({type: undefined, field: 'expireDate'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/owner/models/owner.refresh.token.model.ts:90\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: '1', description: 'unique identifier'})@Column({type: undefined, unique: true, autoIncrement: true, primaryKey: true, allowNull: false, field: 'id'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/owner/models/owner.refresh.token.model.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        identifier\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: '9b1deb4d-3b7d-4bad-9bdd-2b0d7b3dcb6d', description: 'identifier'})@IsUUID(4)@Column({type: undefined, unique: true, allowNull: true, field: 'identifier'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/owner/models/owner.refresh.token.model.ts:103\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        owner\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Owner\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @BelongsTo(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/owner/models/owner.refresh.token.model.ts:106\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        ownerAgent\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'Mozilla/5.0 (Windows NT 7.0; Win32; x32) AppleWebKit/523.34 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/523.34', description: 'owner`s agent'})@Column({type: undefined, unique: false, allowNull: false, field: 'ownerAgent'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/owner/models/owner.refresh.token.model.ts:83\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        ownerId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: '1', description: 'ownerId'})@ForeignKey(undefined)@Column({type: undefined, field: 'ownerId'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/owner/models/owner.refresh.token.model.ts:69\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        ownerRefreshToken\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'eyJhbGciOiJIUjpzI1NiIsInR5cCI6IdfuthojpkpXVCJ9.eyJ1c2VySWQiOjEsImlzQWN0aXZhdGVkIjpmYWxzZSwiZW1haWwiOiJ1c2VyQGdtYWlsLmNvbSIsInJvbGVzIjpbeyJpZCI6MSwidmFsdWUiOiJVU0VSIiwiZGVzY3JpcHRpb24iOiJzaW1wbGUgdXNlciIsInJpZ2h0MSI6ZmFsc2UsInJpZ2h0MiI6ZmFsc2UsImNyZWF0ZWRBdCI6IjIwMjMtMDEtMTZUMTA6NDE6MjguOTY5WiIsInVwZGF0ZWRBdCI6IjIwMjMtMDEtMTZUMTA6NDE6MjguOTY5WiIsIlVzZXJSb2xlcyI6eyJpZCI6MSwicm9sZUlkIjoxLCJ1c2VySWQiOjEsImFkbWluSWQiOm51bGx9fV0sImlhdCI6MTY3Mzg2NTcxNiwiZXhwIjoxNjczODY5MzE2fQ.cx0YqrXwrvrL8wNMsnTiitL632ORCOxYUJuNQ-g4lOc', description: 'owner`s refresh token'})@Column({type: undefined, unique: true, allowNull: false, field: 'ownerRefreshToken'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/owner/models/owner.refresh.token.model.ts:61\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        phoneNumber\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: '+06614568945', description: 'owner`s phoneNumber'})@Column({type: undefined, unique: false, allowNull: false, field: 'phoneNumber'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/owner/models/owner.refresh.token.model.ts:38\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getExpireDate\n                        \n                    \n                \n            \n            \n                \ngetExpireDate()\n                \n            \n\n\n            \n                \n                    Defined in src/owner/models/owner.refresh.token.model.ts:108\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Date\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getIdentifier\n                        \n                    \n                \n            \n            \n                \ngetIdentifier()\n                \n            \n\n\n            \n                \n                    Defined in src/owner/models/owner.refresh.token.model.ts:139\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getOwner\n                        \n                    \n                \n            \n            \n                \ngetOwner()\n                \n            \n\n\n            \n                \n                    Defined in src/owner/models/owner.refresh.token.model.ts:135\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Owner\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getownerAgent\n                        \n                    \n                \n            \n            \n                \ngetownerAgent()\n                \n            \n\n\n            \n                \n                    Defined in src/owner/models/owner.refresh.token.model.ts:126\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getownerId\n                        \n                    \n                \n            \n            \n                \ngetownerId()\n                \n            \n\n\n            \n                \n                    Defined in src/owner/models/owner.refresh.token.model.ts:117\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         number\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setExpireDate\n                        \n                    \n                \n            \n            \n                \nsetExpireDate(expireDate: Date)\n                \n            \n\n\n            \n                \n                    Defined in src/owner/models/owner.refresh.token.model.ts:112\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    expireDate\n                                    \n                                                Date\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Date\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setIdentifier\n                        \n                    \n                \n            \n            \n                \nsetIdentifier(identifier: string)\n                \n            \n\n\n            \n                \n                    Defined in src/owner/models/owner.refresh.token.model.ts:143\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    identifier\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setownerAgent\n                        \n                    \n                \n            \n            \n                \nsetownerAgent(ownerAgent: string)\n                \n            \n\n\n            \n                \n                    Defined in src/owner/models/owner.refresh.token.model.ts:130\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    ownerAgent\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setownerId\n                        \n                    \n                \n            \n            \n                \nsetownerId(ownerId: number)\n                \n            \n\n\n            \n                \n                    Defined in src/owner/models/owner.refresh.token.model.ts:121\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    ownerId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n  Column,\n  DataType,\n  Table,\n  Model,\n  ForeignKey,\n  IsEmail,\n  BelongsTo,\n  IsUUID,\n} from 'sequelize-typescript';\nimport { ApiProperty } from '@nestjs/swagger';\nimport { OwnerRefreshTokenCreationAttrbs } from '../../core/interfaces/owner.interfaces';\nimport { Owner } from './owner.model';\n\n@Table({ tableName: 'OWNER`s_Refresh-tokens' })\nexport class OwnerRefreshToken extends Model {\n  @ApiProperty({ example: '1', description: 'unique identifier' })\n  @Column({\n    type: DataType.INTEGER,\n    unique: true,\n    autoIncrement: true,\n    primaryKey: true,\n    allowNull: false,\n    field: 'id',\n  })\n  public id: number;\n\n  @ApiProperty({ example: '+06614568945', description: 'owner`s phoneNumber' })\n  @Column({\n    type: DataType.STRING,\n    unique: false,\n    allowNull: false,\n    field: 'phoneNumber',\n  })\n  public phoneNumber: string;\n\n  @ApiProperty({ example: 'owner@gmail.com', description: 'owner`s email' })\n  @IsEmail\n  @Column({\n    type: DataType.STRING,\n    unique: false,\n    allowNull: false,\n    field: 'email',\n  })\n  public email: string;\n\n  @ApiProperty({\n    example:\n      'eyJhbGciOiJIUjpzI1NiIsInR5cCI6IdfuthojpkpXVCJ9.eyJ1c2VySWQiOjEsImlzQWN0aXZhdGVkIjpmYWxzZSwiZW1haWwiOiJ1c2VyQGdtYWlsLmNvbSIsInJvbGVzIjpbeyJpZCI6MSwidmFsdWUiOiJVU0VSIiwiZGVzY3JpcHRpb24iOiJzaW1wbGUgdXNlciIsInJpZ2h0MSI6ZmFsc2UsInJpZ2h0MiI6ZmFsc2UsImNyZWF0ZWRBdCI6IjIwMjMtMDEtMTZUMTA6NDE6MjguOTY5WiIsInVwZGF0ZWRBdCI6IjIwMjMtMDEtMTZUMTA6NDE6MjguOTY5WiIsIlVzZXJSb2xlcyI6eyJpZCI6MSwicm9sZUlkIjoxLCJ1c2VySWQiOjEsImFkbWluSWQiOm51bGx9fV0sImlhdCI6MTY3Mzg2NTcxNiwiZXhwIjoxNjczODY5MzE2fQ.cx0YqrXwrvrL8wNMsnTiitL632ORCOxYUJuNQ-g4lOc',\n    description: 'owner`s refresh token',\n  })\n  @Column({\n    type: DataType.CHAR(2500),\n    unique: true,\n    allowNull: false,\n    field: 'ownerRefreshToken',\n  })\n  public ownerRefreshToken: string;\n\n  @ApiProperty({ example: '1', description: 'ownerId' })\n  @ForeignKey(() => Owner)\n  @Column({\n    type: DataType.INTEGER,\n    field: 'ownerId',\n  })\n  public ownerId: number;\n\n  @ApiProperty({\n    example:\n      // tslint:disable-next-line: max-line-length\n      'Mozilla/5.0 (Windows NT 7.0; Win32; x32) AppleWebKit/523.34 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/523.34',\n    description: 'owner`s agent',\n  })\n  @Column({\n    type: DataType.CHAR(350),\n    unique: false,\n    allowNull: false,\n    field: 'ownerAgent',\n  })\n  private ownerAgent: string;\n\n  @ApiProperty({ example: '86400000', description: 'expireDate' })\n  @Column({\n    type: DataType.DATE,\n    field: 'expireDate',\n  })\n  private expireDate: Date;\n\n  @ApiProperty({\n    example: '9b1deb4d-3b7d-4bad-9bdd-2b0d7b3dcb6d',\n    description: 'identifier',\n  })\n  @IsUUID(4)\n  @Column({\n    type: DataType.STRING,\n    unique: true,\n    allowNull: true,\n    field: 'identifier',\n  })\n  public identifier: string;\n\n  @BelongsTo(() => Owner)\n  private owner: Owner;\n\n  getExpireDate(): Date {\n    return this.expireDate;\n  }\n\n  setExpireDate(expireDate: Date): Date {\n    this.expireDate = expireDate;\n    return this.expireDate;\n  }\n\n  getownerId(): number {\n    return this.ownerId;\n  }\n\n  setownerId(ownerId: number): number {\n    this.ownerId = ownerId;\n    return this.ownerId;\n  }\n\n  getownerAgent(): string {\n    return this.ownerAgent;\n  }\n\n  setownerAgent(ownerAgent: string): string {\n    this.ownerAgent = ownerAgent;\n    return this.ownerAgent;\n  }\n\n  getOwner(): Owner {\n    return this.owner;\n  }\n\n  getIdentifier(): string {\n    return this.identifier;\n  }\n\n  setIdentifier(identifier: string): string {\n    this.identifier = identifier;\n    return this.identifier;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/OwnerRefreshTokenCreationAttrbs.html":{"url":"interfaces/OwnerRefreshTokenCreationAttrbs.html","title":"interface - OwnerRefreshTokenCreationAttrbs","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  OwnerRefreshTokenCreationAttrbs\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/interfaces/owner.interfaces.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            ownerAgent\n                                        \n                                \n                                \n                                        \n                                            ownerId\n                                        \n                                \n                                \n                                        \n                                            ownerRefreshToken\n                                        \n                                \n                                \n                                        \n                                            phoneNumber\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ownerAgent\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ownerAgent:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ownerId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ownerId:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ownerRefreshToken\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ownerRefreshToken:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        phoneNumber\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        phoneNumber:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface OwnerRefreshTokenCreationAttrbs {\n  email: string;\n  ownerId: number;\n  ownerRefreshToken: string;\n  phoneNumber: string;\n  ownerAgent: string;\n}\n\nexport interface OwnerCreationAttrbs {\n  name: string;\n  surname: string;\n  email: string;\n  phoneNumber: string;\n  password: string;\n  activationLink: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/OwnerService.html":{"url":"injectables/OwnerService.html","title":"injectable - OwnerService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  OwnerService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/owner/services/owner.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                changePassword\n                            \n                            \n                                    Async\n                                checkOwner\n                            \n                            \n                                    Private\n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                createOwner\n                            \n                            \n                                    Static\n                                    Async\n                                creatingOwner\n                            \n                            \n                                    Async\n                                findByActivationLink\n                            \n                            \n                                    Async\n                                getOwnerByEmail\n                            \n                            \n                                    Async\n                                getOwnerById\n                            \n                            \n                                    Async\n                                getOwnerByPhoneNumber\n                            \n                            \n                                    Async\n                                resetPassword\n                            \n                            \n                                    Private\n                                    Async\n                                rewritePassword\n                            \n                            \n                                    Async\n                                setConfirmCode\n                            \n                            \n                                    Async\n                                validateOwner\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(ownerRepository, roleService: RolesService)\n                    \n                \n                        \n                            \n                                Defined in src/owner/services/owner.service.ts:35\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        ownerRepository\n                                                  \n                                                        \n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        roleService\n                                                  \n                                                        \n                                                                        RolesService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        changePassword\n                        \n                    \n                \n            \n            \n                \n                    \n                    changePassword(ownerId: number, password: string)\n                \n            \n\n\n            \n                \n                    Defined in src/owner/services/owner.service.ts:208\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    ownerId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        checkOwner\n                        \n                    \n                \n            \n            \n                \n                    \n                    checkOwner(payload: Payload, activationLink: string | undefined)\n                \n            \n\n\n            \n                \n                    Defined in src/owner/services/owner.service.ts:171\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    payload\n                                    \n                                                Payload\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    activationLink\n                                    \n                                            string | undefined\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(dto: CreateOwnerDto)\n                \n            \n\n\n            \n                \n                    Defined in src/owner/services/owner.service.ts:100\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dto\n                                    \n                                                CreateOwnerDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        createOwner\n                        \n                    \n                \n            \n            \n                \n                    \n                    createOwner(dto: CreateOwnerDto)\n                \n            \n\n\n            \n                \n                    Defined in src/owner/services/owner.service.ts:78\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dto\n                                    \n                                                CreateOwnerDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        Async\n                        creatingOwner\n                        \n                    \n                \n            \n            \n                \n                    \n                    creatingOwner(OWNER: string[])\n                \n            \n\n\n            \n                \n                    Defined in src/owner/services/owner.service.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    OWNER\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findByActivationLink\n                        \n                    \n                \n            \n            \n                \n                    \n                    findByActivationLink(activationLink: string)\n                \n            \n\n\n            \n                \n                    Defined in src/owner/services/owner.service.ts:120\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    activationLink\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getOwnerByEmail\n                        \n                    \n                \n            \n            \n                \n                    \n                    getOwnerByEmail(email: string)\n                \n            \n\n\n            \n                \n                    Defined in src/owner/services/owner.service.ts:140\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getOwnerById\n                        \n                    \n                \n            \n            \n                \n                    \n                    getOwnerById(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/owner/services/owner.service.ts:130\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getOwnerByPhoneNumber\n                        \n                    \n                \n            \n            \n                \n                    \n                    getOwnerByPhoneNumber(phoneNumber: string)\n                \n            \n\n\n            \n                \n                    Defined in src/owner/services/owner.service.ts:148\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    phoneNumber\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        resetPassword\n                        \n                    \n                \n            \n            \n                \n                    \n                    resetPassword(resetDto: ResetDto)\n                \n            \n\n\n            \n                \n                    Defined in src/owner/services/owner.service.ts:193\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    resetDto\n                                    \n                                                ResetDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Async\n                        rewritePassword\n                        \n                    \n                \n            \n            \n                \n                    \n                    rewritePassword(owner: Owner, password: string)\n                \n            \n\n\n            \n                \n                    Defined in src/owner/services/owner.service.ts:216\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    owner\n                                    \n                                                Owner\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        setConfirmCode\n                        \n                    \n                \n            \n            \n                \n                    \n                    setConfirmCode(codeDto: CodeDto, code: number)\n                \n            \n\n\n            \n                \n                    Defined in src/owner/services/owner.service.ts:185\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    codeDto\n                                    \n                                                CodeDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    code\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        validateOwner\n                        \n                    \n                \n            \n            \n                \n                    \n                    validateOwner(ownerDto: LoginDto)\n                \n            \n\n\n            \n                \n                    Defined in src/owner/services/owner.service.ts:156\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    ownerDto\n                                    \n                                                LoginDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  BadRequestException,\n  ForbiddenException,\n  HttpStatus,\n  Injectable,\n  NotFoundException,\n  Scope,\n  UnauthorizedException,\n} from '@nestjs/common';\nimport { InjectModel } from '@nestjs/sequelize';\nimport { LoginDto } from '../../auth/dto/login.dto';\nimport {\n  OWNER_WITH_PHONENUMBER_EXIST,\n  OWNER_WITH_EMAIL_EXIST,\n  INVALID_LINK,\n  OWNER_NOT_FOUND,\n  INVALID_CODE,\n  INVALID_EMAIL,\n  RESET_TIME_EXPIRED,\n  OWNER_ID_NOT_PROVIDED,\n  NOT_ACTIVATED,\n  ACCESS_DENIED,\n} from '../constants/owner.constants';\nimport { CreateOwnerDto } from '../dto/create.owner.dto';\nimport { Owner } from '../models/owner.model';\nimport { RolesService } from '../../roles/roles.service';\nimport * as bcrypt from 'bcrypt';\nimport { ResetDto } from '../../auth/dto/reset.password.dto';\nimport { CodeDto } from '../../core/interfaces/auth.interfaces';\nimport { Payload } from '../../core/interfaces/auth.interfaces';\nimport { v4 } from 'uuid';\nimport { Role } from '../../roles/models/roles.model';\nimport { ApiException } from '../../common/exceptions/api.exception';\n@Injectable({ scope: Scope.TRANSIENT })\nexport class OwnerService {\n  constructor(\n    @InjectModel(Owner) private readonly ownerRepository: typeof Owner,\n    private readonly roleService: RolesService,\n  ) {}\n\n  static async creatingOwner(OWNER: string[]) {\n    const existingOwners = await Owner.findAll();\n    console.log(existingOwners);\n    if (existingOwners.length > 0) {\n      return;\n    }\n    console.log('Creating');\n    const SALT_ROUNDS = Number(process.env.SALT_ROUNDS);\n    const salt = await bcrypt.genSalt(SALT_ROUNDS || 10);\n    const hashedPassword = await bcrypt.hash(OWNER[4], salt);\n    const ownerDto = {\n      name: OWNER[0],\n      surname: OWNER[1],\n      phoneNumber: OWNER[2],\n      email: OWNER[3],\n      password: hashedPassword,\n      activationLink: v4(),\n    };\n    const owner = await Owner.create(ownerDto);\n    owner.setIsActivated(false);\n    const role = await Role.findOne({ where: { value: 'OWNER' } });\n    if (!role) {\n      const ownerRole = await Role.create({\n        value: 'OWNER',\n        description: 'Owner owns website',\n      });\n      await owner.$set('roles', ownerRole.id);\n      owner.roles = [ownerRole];\n      await owner.save();\n      return owner;\n    }\n    await owner.$set('roles', role.id);\n    owner.roles = [role];\n    await owner.save();\n    return owner;\n  }\n\n  async createOwner(dto: CreateOwnerDto): Promise {\n    const [phoneNumber, email] = await Promise.all([\n      await this.getOwnerByPhoneNumber(dto.phoneNumber),\n      await this.getOwnerByEmail(dto.email),\n    ]);\n    if (phoneNumber) {\n       throw new ApiException(HttpStatus.BAD_REQUEST, 'Bad request', OWNER_WITH_PHONENUMBER_EXIST);\n    }\n    if (email) {\n      throw new ApiException(HttpStatus.BAD_REQUEST, 'Bad request', OWNER_WITH_EMAIL_EXIST);\n    }\n    const SALT_ROUNDS = Number(process.env.SALT_ROUNDS);\n    const salt = await bcrypt.genSalt(SALT_ROUNDS);\n    const hashedPassword = await bcrypt.hash(dto.password, salt);\n    const owner = await this.create({\n      ...dto,\n      password: hashedPassword,\n      activationLink: v4(),\n    });\n    return owner.save();\n  }\n\n  private async create(dto: CreateOwnerDto) {\n    const owner = await this.ownerRepository.create(dto);\n    owner.setIsActivated(false);\n    const role = await this.roleService.getRoleByValue('OWNER');\n    if (!role) {\n      const userRole = await this.roleService.createRole({\n        value: 'OWNER',\n        description: 'Owner owns website',\n      });\n      await owner.$set('roles', userRole.id);\n      owner.roles = [userRole];\n      await owner.save();\n      return owner;\n    }\n    await owner.$set('roles', role.id);\n    owner.roles = [role];\n    await owner.save();\n    return owner;\n  }\n\n  async findByActivationLink(activationLink: string): Promise {\n    const owner = this.ownerRepository.findOne({\n      where: { activationLink: activationLink },\n    });\n    if (!owner) {\n      throw new ApiException(HttpStatus.BAD_REQUEST, 'Bad request', INVALID_LINK);\n    }\n    return owner;\n  }\n\n  async getOwnerById(id: number): Promise {\n    const owner = await this.ownerRepository.findByPk(id, {\n      include: { all: true },\n    });\n    if (!owner) {\n      throw new ApiException(HttpStatus.NOT_FOUND, 'Not found!', OWNER_NOT_FOUND);   \n    }\n    return owner;\n  }\n\n  async getOwnerByEmail(email: string): Promise {\n    const owner = await this.ownerRepository.findOne({\n      where: { email: email },\n      include: { all: true },\n    });\n    return owner;\n  }\n\n  async getOwnerByPhoneNumber(phoneNumber: string): Promise {\n    const owner = await this.ownerRepository.findOne({\n      where: { phoneNumber: phoneNumber },\n      include: { all: true },\n    });\n    return owner;\n  }\n\n  async validateOwner(ownerDto: LoginDto): Promise {\n    const owner = await this.getOwnerByEmail(ownerDto.email);\n    if (!owner) {\n      return false;\n    }\n    const passwordEquals = await bcrypt.compare(\n      ownerDto.password,\n      owner.getPassword(),\n    );\n    if (passwordEquals) {\n      return owner;\n    }\n    return false;\n  }\n\n  async checkOwner(payload: Payload, activationLink: string | undefined) {\n    if (!activationLink) {\n      throw new ApiException(HttpStatus.UNAUTHORIZED, 'Unathorized!', OWNER_ID_NOT_PROVIDED); \n    }\n    const owner = await this.getOwnerById(payload.userId);\n    if (owner instanceof Owner && !owner.getIsActivated()) {\n      throw new ApiException(HttpStatus.FORBIDDEN, 'Forbidden!', NOT_ACTIVATED); \n    }\n    if (owner instanceof Owner && owner.activationLink === activationLink) {\n      return true;\n    }\n    throw new ApiException(HttpStatus.FORBIDDEN, 'Forbidden!', ACCESS_DENIED); \n  }\n\n  async setConfirmCode(codeDto: CodeDto, code: number): Promise {\n    const owner = await this.getOwnerByEmail(codeDto.email);\n    owner.setConfirmCode(code);\n    owner.setResetTokenExpiration(Number(Date.now() + 3600000));\n    await owner.save();\n    return owner.email;\n  }\n\n  async resetPassword(resetDto: ResetDto): Promise {\n    const owner = await this.getOwnerByEmail(resetDto.email);\n    if (resetDto.email !== owner.email) {\n       throw new ApiException(HttpStatus.BAD_REQUEST, 'Bad request', INVALID_EMAIL);\n    }\n    if (Number(Date.now()) >= owner.getResetTokenExpiration()) {\n      throw new ApiException(HttpStatus.BAD_REQUEST, 'Bad request', RESET_TIME_EXPIRED);\n    }\n    if (Number(resetDto.code) !== owner.getConfirmCode()) {\n      throw new ApiException(HttpStatus.BAD_REQUEST, 'Bad request', INVALID_CODE);\n    }\n    await this.rewritePassword(owner, resetDto.password);\n    return owner.email;\n  }\n\n  async changePassword(ownerId: number, password: string): Promise {\n    const owner = await this.getOwnerById(ownerId);\n    if (!owner) {\n       throw new ApiException(HttpStatus.NOT_FOUND, 'Not found!', OWNER_NOT_FOUND);   \n    }\n    return this.rewritePassword(owner, password);\n  }\n\n  private async rewritePassword(\n    owner: Owner,\n    password: string,\n  ): Promise {\n    const SALT_ROUNDS = Number(process.env.SALT_ROUNDS);\n    const salt = await bcrypt.genSalt(SALT_ROUNDS);\n    const hashedPassword = await bcrypt.hash(password, salt);\n    owner.setNewPasssword(hashedPassword);\n    return owner.save();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ParseFormDataJsonPipe.html":{"url":"classes/ParseFormDataJsonPipe.html","title":"class - ParseFormDataJsonPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ParseFormDataJsonPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/pipes/formdata.pipe.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                            PipeTransform\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                transform\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(options?: TParseFormDataJsonOptions)\n                    \n                \n                        \n                            \n                                Defined in src/common/pipes/formdata.pipe.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        options\n                                                  \n                                                        \n                                                                        TParseFormDataJsonOptions\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        transform\n                        \n                    \n                \n            \n            \n                \ntransform(value: any, _metadata: ArgumentMetadata)\n                \n            \n\n\n            \n                \n                    Defined in src/common/pipes/formdata.pipe.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    _metadata\n                                    \n                                            ArgumentMetadata\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { PipeTransform, ArgumentMetadata } from '@nestjs/common';\nimport { deepParseJson } from 'deep-parse-json';\nimport * as _ from 'lodash';\n\ntype TParseFormDataJsonOptions = {\n  except?: string[];\n};\n\nexport class ParseFormDataJsonPipe implements PipeTransform {\n  constructor(private options?: TParseFormDataJsonOptions) {}\n\n  transform(value: any, _metadata: ArgumentMetadata) {\n    const { except } = this.options;\n    const serializedValue = value;\n    const originProperties = {};\n    if (except?.length) {\n      _.merge(originProperties, _.pick(serializedValue, ...except));\n    }\n    const deserializedValue = deepParseJson(value);\n    console.log(`deserializedValue`, deserializedValue);\n    return { ...deserializedValue, ...originProperties };\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ParseJsonPipe.html":{"url":"injectables/ParseJsonPipe.html","title":"injectable - ParseJsonPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ParseJsonPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/pipes/parse.json.pipe.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                transform\n                            \n                            \n                                    Static\n                                transform\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        transform\n                        \n                    \n                \n            \n            \n                \ntransform(value: string, metadata: ArgumentMetadata)\n                \n            \n\n\n            \n                \n                    Defined in src/common/pipes/parse.json.pipe.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    metadata\n                                    \n                                            ArgumentMetadata\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Record\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        transform\n                        \n                    \n                \n            \n            \n                \n                    \n                    transform(value: string, metadata: ArgumentMetadata)\n                \n            \n\n\n            \n                \n                    Defined in src/common/pipes/parse.json.pipe.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    metadata\n                                    \n                                            ArgumentMetadata\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Record\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { ArgumentMetadata, BadRequestException, Injectable, PipeTransform } from '@nestjs/common';\n\n@Injectable()\nexport class ParseJsonPipe implements PipeTransform> {\n  transform(value: string, metadata: ArgumentMetadata): Record {\n    const propertyName = metadata.data;\n    try {\n      return JSON.parse(value);\n    } catch (e) {\n      throw new BadRequestException(`${propertyName} contains invalid JSON `);\n    }\n  }\n  static transform(value: string, metadata: ArgumentMetadata): Record {\n    const propertyName = metadata.data;\n    try {\n      return JSON.parse(value);\n    } catch (e) {\n      throw new BadRequestException(`${propertyName} contains invalid JSON `);\n    }\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Payload.html":{"url":"interfaces/Payload.html","title":"interface - Payload","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Payload\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/interfaces/auth.interfaces.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            isUserActivated\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            roles\n                                        \n                                \n                                \n                                        \n                                            userActivationLink\n                                        \n                                \n                                \n                                        \n                                            userId\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isUserActivated\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        isUserActivated:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        roles\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        roles:         Role[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Role[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        userActivationLink\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        userActivationLink:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        userId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        userId:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Role } from '../../roles/models/roles.model';\nexport interface Payload {\n  email: string;\n  userId: number;\n  userActivationLink: string;\n  isUserActivated: boolean;\n  roles?: Role[];\n}\n\nexport interface Tokens {\n  refreshToken: string;\n  accessToken: string;\n  expireDate: Date;\n}\n\nexport interface AuthUser {\n  accessToken: string;\n  user: ReturnedUser | ReturnedAdmin | ReturnedOwner;\n}\n\nexport interface ReturnedUser {\n  id: number;\n  name: string;\n  surname: string;\n  phoneNumber: string;\n  email: string;\n  country: string | null;\n  city: string | null;\n  postOffice: string | null;\n  type: 'USER';\n}\n\nexport interface ReturnedOwner {\n  id: number;\n  name: string;\n  surname: string;\n  phoneNumber: string;\n  email: string;\n  type: 'OWNER';\n}\n\nexport interface ReturnedAdmin {\n  id: number;\n  name: string;\n  surname: string;\n  phoneNumber: string;\n  email: string;\n  type: 'ADMIN';\n}\n\nexport interface CodeDto {\n  type: 'OWNER' | 'ADMIN' | null;\n  email: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Product.html":{"url":"classes/Product.html","title":"class - Product","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Product\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/product/product.model.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    Model\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                admin\n                            \n                            \n                                    Private\n                                adminId\n                            \n                            \n                                    Private\n                                carts\n                            \n                            \n                                    Public\n                                categories\n                            \n                            \n                                    Public\n                                colours\n                            \n                            \n                                    Public\n                                description\n                            \n                            \n                                    Public\n                                id\n                            \n                            \n                                    Public\n                                images\n                            \n                            \n                                    Private\n                                orders\n                            \n                            \n                                    Public\n                                owner\n                            \n                            \n                                    Private\n                                ownerId\n                            \n                            \n                                    Public\n                                price\n                            \n                            \n                                    Public\n                                quantity\n                            \n                            \n                                    Public\n                                sizeChartImage\n                            \n                            \n                                    Public\n                                sizes\n                            \n                            \n                                    Public\n                                title\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getAdminId\n                            \n                            \n                                getAuthor\n                            \n                            \n                                getCarts\n                            \n                            \n                                getCategories\n                            \n                            \n                                getOrders\n                            \n                            \n                                getOwnerId\n                            \n                            \n                                setAdminId\n                            \n                            \n                                setCategories\n                            \n                            \n                                setOwnerId\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        admin\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Admin\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @BelongsTo(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/product/product.model.ts:113\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        adminId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsInt()@ForeignKey(undefined)@Column({type: undefined, unique: true, allowNull: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/product/product.model.ts:102\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        carts\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Cart[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @BelongsToMany(undefined, undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/product/product.model.ts:119\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        categories\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Category[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @BelongsToMany(undefined, undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/product/product.model.ts:116\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        colours\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: undefined, unique: false, allowNull: true, field: 'colours'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/product/product.model.ts:88\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: undefined, allowNull: false, unique: false, field: 'description'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/product/product.model.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: undefined, unique: true, autoIncrement: true, primaryKey: true, field: 'id'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/product/product.model.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        images\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: undefined, unique: false, allowNull: false, field: 'images'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/product/product.model.ts:64\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        orders\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Order[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @BelongsToMany(undefined, undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/product/product.model.ts:122\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        owner\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Owner\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @BelongsTo(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/product/product.model.ts:110\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        ownerId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsInt()@ForeignKey(undefined)@Column({type: undefined, unique: true, allowNull: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/product/product.model.ts:107\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        price\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsInt()@Column({type: undefined, unique: false, allowNull: false, field: 'price'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/product/product.model.ts:56\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        quantity\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsInt()@Column({type: undefined, unique: false, allowNull: false, field: 'quantity'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/product/product.model.ts:97\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        sizeChartImage\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: undefined, allowNull: false, unique: false, field: 'sizeChart'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/product/product.model.ts:72\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        sizes\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: undefined, unique: false, allowNull: true, field: 'sizes'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/product/product.model.ts:80\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: undefined, unique: false, allowNull: false, field: 'title'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/product/product.model.ts:39\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getAdminId\n                        \n                    \n                \n            \n            \n                \ngetAdminId()\n                \n            \n\n\n            \n                \n                    Defined in src/product/product.model.ts:150\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         number\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAuthor\n                        \n                    \n                \n            \n            \n                \ngetAuthor()\n                \n            \n\n\n            \n                \n                    Defined in src/product/product.model.ts:137\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Owner\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getCarts\n                        \n                    \n                \n            \n            \n                \ngetCarts()\n                \n            \n\n\n            \n                \n                    Defined in src/product/product.model.ts:133\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Cart[]\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getCategories\n                        \n                    \n                \n            \n            \n                \ngetCategories()\n                \n            \n\n\n            \n                \n                    Defined in src/product/product.model.ts:124\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Category[]\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getOrders\n                        \n                    \n                \n            \n            \n                \ngetOrders()\n                \n            \n\n\n            \n                \n                    Defined in src/product/product.model.ts:159\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Order[]\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getOwnerId\n                        \n                    \n                \n            \n            \n                \ngetOwnerId()\n                \n            \n\n\n            \n                \n                    Defined in src/product/product.model.ts:141\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         number\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setAdminId\n                        \n                    \n                \n            \n            \n                \nsetAdminId(adminId: number)\n                \n            \n\n\n            \n                \n                    Defined in src/product/product.model.ts:154\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    adminId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setCategories\n                        \n                    \n                \n            \n            \n                \nsetCategories(categories: Category[])\n                \n            \n\n\n            \n                \n                    Defined in src/product/product.model.ts:128\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    categories\n                                    \n                                                Category[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Category[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setOwnerId\n                        \n                    \n                \n            \n            \n                \nsetOwnerId(ownerId: number)\n                \n            \n\n\n            \n                \n                    Defined in src/product/product.model.ts:145\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    ownerId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n  Column,\n  DataType,\n  Table,\n  Model,\n  IsInt,\n  BelongsTo,\n  ForeignKey,\n  IsArray,\n  BelongsToMany,\n} from 'sequelize-typescript';\nimport { CartProduct } from '../cart/models/cart-item.model';\nimport { Cart } from '../cart/models/cart.model';\nimport { Order } from '../orders/models/order.model';\nimport { OrderProduct } from '../orders/models/order.product.model';\nimport { Category } from '../categories/models/category.model';\nimport { ProductCategories } from '../categories/models/product.categories.model';\nimport { ProductCreationAttrs } from '../core/interfaces/product.interfaces';\nimport { Owner } from '../owner/models/owner.model';\nimport { Admin } from 'src/admin/models/admin.model';\n\n@Table({ tableName: 'products' })\nexport class Product extends Model {\n  @Column({\n    type: DataType.INTEGER,\n    unique: true,\n    autoIncrement: true,\n    primaryKey: true,\n    field: 'id',\n  })\n  public id: number;\n\n  @Column({\n    type: DataType.STRING,\n    unique: false,\n    allowNull: false,\n    field: 'title',\n  })\n  public title: string;\n\n  @Column({\n    type: DataType.STRING,\n    allowNull: false,\n    unique: false,\n    field: 'description',\n  })\n  public description: string;\n\n  @IsInt\n  @Column({\n    type: DataType.INTEGER,\n    unique: false,\n    allowNull: false,\n    field: 'price',\n  })\n  public price: number;\n\n  @Column({\n    type: DataType.ARRAY(DataType.STRING),\n    unique: false,\n    allowNull: false,\n    field: 'images',\n  })\n  public images: string[];\n\n  @Column({\n    type: DataType.STRING,\n    allowNull: false,\n    unique: false,\n    field: 'sizeChart',\n  })\n  public sizeChartImage: string;\n\n  @Column({\n    type: DataType.ARRAY(DataType.ENUM('S', 'XXS', 'XS', 'M', 'L', 'XL')),\n    unique: false,\n    allowNull: true,\n    field: 'sizes',\n  })\n  public sizes: string[];\n\n  @Column({\n    type: DataType.ARRAY(DataType.STRING),\n    unique: false,\n    allowNull: true,\n    field: 'colours',\n  })\n  public colours: string[];\n\n  @IsInt\n  @Column({\n    type: DataType.INTEGER,\n    unique: false,\n    allowNull: false,\n    field: 'quantity',\n  })\n  public quantity: number;\n\n  @IsInt\n  @ForeignKey(() => Admin)\n  @Column({ type: DataType.INTEGER, unique: true, allowNull: true })\n  private adminId: number;\n\n  @IsInt\n  @ForeignKey(() => Owner)\n  @Column({ type: DataType.INTEGER, unique: true, allowNull: true })\n  private ownerId: number;\n\n  @BelongsTo(() => Owner)\n  public owner: Owner;\n\n  @BelongsTo(() => Admin)\n  public admin: Admin;\n\n  @BelongsToMany(() => Category, () => ProductCategories)\n  public categories: Category[];\n\n  @BelongsToMany(() => Cart, () => CartProduct)\n  private carts: Cart[];\n\n  @BelongsToMany(() => Order, () => OrderProduct)\n  private orders: Order[];\n\n  getCategories(): Category[] {\n    return this.categories;\n  }\n\n  setCategories(categories: Category[]): Category[] {\n    this.categories = categories;\n    return this.categories;\n  }\n\n  getCarts(): Cart[] {\n    return this.carts;\n  }\n\n  getAuthor(): Owner {\n    return this.owner;\n  }\n\n  getOwnerId(): number {\n    return this.ownerId;\n  }\n\n  setOwnerId(ownerId: number): number {\n    this.ownerId = ownerId;\n    return this.ownerId;\n  }\n\n  getAdminId(): number {\n    return this.adminId;\n  }\n\n  setAdminId(adminId: number): number {\n    this.adminId = adminId;\n    return adminId;\n  }\n\n  getOrders(): Order[] {\n    return this.orders;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Product-1.html":{"url":"classes/Product-1.html","title":"class - Product-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Product\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/product/models/product.model.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    Model\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                admin\n                            \n                            \n                                    Private\n                                adminId\n                            \n                            \n                                    Private\n                                carts\n                            \n                            \n                                    Public\n                                categories\n                            \n                            \n                                    Public\n                                colours\n                            \n                            \n                                    Public\n                                description\n                            \n                            \n                                    Public\n                                id\n                            \n                            \n                                    Public\n                                images\n                            \n                            \n                                    Private\n                                orders\n                            \n                            \n                                    Public\n                                owner\n                            \n                            \n                                    Private\n                                ownerId\n                            \n                            \n                                    Public\n                                price\n                            \n                            \n                                    Public\n                                quantity\n                            \n                            \n                                    Public\n                                reviews\n                            \n                            \n                                    Public\n                                sizeChartImage\n                            \n                            \n                                    Public\n                                sizes\n                            \n                            \n                                    Public\n                                title\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getAdminId\n                            \n                            \n                                getAuthor\n                            \n                            \n                                getCarts\n                            \n                            \n                                getCategories\n                            \n                            \n                                getDescription\n                            \n                            \n                                getOrders\n                            \n                            \n                                getOwnerId\n                            \n                            \n                                getTitle\n                            \n                            \n                                setAdminId\n                            \n                            \n                                setCategories\n                            \n                            \n                                setDescription\n                            \n                            \n                                setOwnerId\n                            \n                            \n                                setTitle\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        admin\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Admin\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @BelongsTo(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/product/models/product.model.ts:154\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        adminId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsInt()@ForeignKey(undefined)@Column({type: undefined, unique: false, allowNull: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/product/models/product.model.ts:143\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        carts\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Cart[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @BelongsToMany(undefined, undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/product/models/product.model.ts:160\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        categories\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Category[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @BelongsToMany(undefined, undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/product/models/product.model.ts:157\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        colours\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: undefined, unique: false, allowNull: true, field: 'colours'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/product/models/product.model.ts:129\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: undefined, allowNull: false, unique: false, field: 'description'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/product/models/product.model.ts:69\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: undefined, unique: true, autoIncrement: true, primaryKey: true, field: 'id'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/product/models/product.model.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        images\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: undefined, unique: false, allowNull: false, field: 'images'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/product/models/product.model.ts:105\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        orders\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Order[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @BelongsToMany(undefined, undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/product/models/product.model.ts:163\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        owner\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Owner\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @BelongsTo(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/product/models/product.model.ts:151\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        ownerId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsInt()@ForeignKey(undefined)@Column({type: undefined, unique: false, allowNull: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/product/models/product.model.ts:148\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        price\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsInt()@Column({type: undefined, unique: false, allowNull: false, field: 'price'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/product/models/product.model.ts:97\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        quantity\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsInt()@Column({type: undefined, unique: false, allowNull: false, field: 'quantity'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/product/models/product.model.ts:138\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        reviews\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Review[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @BelongsToMany(undefined, undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/product/models/product.model.ts:166\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        sizeChartImage\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: undefined, allowNull: false, unique: false, field: 'sizeChart'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/product/models/product.model.ts:113\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        sizes\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: undefined, unique: false, allowNull: true, field: 'sizes'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/product/models/product.model.ts:121\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: undefined, unique: false, allowNull: false, field: 'title'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/product/models/product.model.ts:42\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getAdminId\n                        \n                    \n                \n            \n            \n                \ngetAdminId()\n                \n            \n\n\n            \n                \n                    Defined in src/product/models/product.model.ts:194\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         number\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAuthor\n                        \n                    \n                \n            \n            \n                \ngetAuthor()\n                \n            \n\n\n            \n                \n                    Defined in src/product/models/product.model.ts:181\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Owner\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getCarts\n                        \n                    \n                \n            \n            \n                \ngetCarts()\n                \n            \n\n\n            \n                \n                    Defined in src/product/models/product.model.ts:177\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Cart[]\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getCategories\n                        \n                    \n                \n            \n            \n                \ngetCategories()\n                \n            \n\n\n            \n                \n                    Defined in src/product/models/product.model.ts:168\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Category[]\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getDescription\n                        \n                    \n                \n            \n            \n                \ngetDescription()\n                \n            \n\n\n            \n                \n                    Defined in src/product/models/product.model.ts:71\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     literal type\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getOrders\n                        \n                    \n                \n            \n            \n                \ngetOrders()\n                \n            \n\n\n            \n                \n                    Defined in src/product/models/product.model.ts:203\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Order[]\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getOwnerId\n                        \n                    \n                \n            \n            \n                \ngetOwnerId()\n                \n            \n\n\n            \n                \n                    Defined in src/product/models/product.model.ts:185\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         number\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getTitle\n                        \n                    \n                \n            \n            \n                \ngetTitle()\n                \n            \n\n\n            \n                \n                    Defined in src/product/models/product.model.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     literal type\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setAdminId\n                        \n                    \n                \n            \n            \n                \nsetAdminId(adminId: number)\n                \n            \n\n\n            \n                \n                    Defined in src/product/models/product.model.ts:198\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    adminId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setCategories\n                        \n                    \n                \n            \n            \n                \nsetCategories(categories: Category[])\n                \n            \n\n\n            \n                \n                    Defined in src/product/models/product.model.ts:172\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    categories\n                                    \n                                                Category[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Category[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setDescription\n                        \n                    \n                \n            \n            \n                \nsetDescription(description: literal type)\n                \n            \n\n\n            \n                \n                    Defined in src/product/models/product.model.ts:80\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    description\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setOwnerId\n                        \n                    \n                \n            \n            \n                \nsetOwnerId(ownerId: number)\n                \n            \n\n\n            \n                \n                    Defined in src/product/models/product.model.ts:189\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    ownerId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setTitle\n                        \n                    \n                \n            \n            \n                \nsetTitle(title: literal type)\n                \n            \n\n\n            \n                \n                    Defined in src/product/models/product.model.ts:53\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    title\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n  Column,\n  DataType,\n  Table,\n  Model,\n  IsInt,\n  BelongsTo,\n  ForeignKey,\n  IsArray,\n  HasMany,\n  BelongsToMany,\n} from 'sequelize-typescript';\nimport { CartProduct } from '../../cart/models/cart.product.model';\nimport { Cart } from '../../cart/models/cart.model';\nimport { Order } from '../../orders/models/order.model';\nimport { OrderProduct } from '../../orders/models/order.product.model';\nimport { Category } from '../../categories/models/category.model';\nimport { ProductCategories } from '../../categories/models/product.categories.model';\nimport { ProductCreationAttrs } from '../../core/interfaces/product.interfaces';\nimport { Owner } from '../../owner/models/owner.model';\nimport { Admin } from '../../admin/models/admin.model';\nimport { Review } from '../../reviews/models/review.model';\nimport { ProductReviews } from '../../reviews/models/product.reviews.model';\n\n@Table({ tableName: 'PRODUCTS' })\nexport class Product extends Model {\n  @Column({\n    type: DataType.INTEGER,\n    unique: true,\n    autoIncrement: true,\n    primaryKey: true,\n    field: 'id',\n  })\n  public id: number;\n\n  @Column({\n    type: DataType.JSONB,\n    unique: false,\n    allowNull: false,\n    field: 'title',\n  })\n  public title: string;\n\n  getTitle():{\n    ua: string;\n    ru: string;\n    rs: string;\n    en: string;\n  } {\n    return JSON.parse(this.title);\n  }\n\n  setTitle(title: {\n    ua: string;\n    ru: string;\n    rs: string;\n    en: string;\n  }) {\n    this.title = JSON.stringify(title);\n    return this.title;\n  }\n\n  @Column({\n    type: DataType.JSONB,\n    allowNull: false,\n    unique: false,\n    field: 'description',\n  })\n  public description: string;\n\n  getDescription():{\n    ua: string;\n    ru: string;\n    rs: string;\n    en: string;\n  } {\n    return JSON.parse(this.description);\n  }\n\n  setDescription(description: {\n    ua: string;\n    ru: string;\n    rs: string;\n    en: string;\n  }) {\n    this.description = JSON.stringify(description);\n    return this.description;\n  }\n\n  @IsInt\n  @Column({\n    type: DataType.INTEGER,\n    unique: false,\n    allowNull: false,\n    field: 'price',\n  })\n  public price: number;\n\n  @Column({\n    type: DataType.ARRAY(DataType.STRING),\n    unique: false,\n    allowNull: false,\n    field: 'images',\n  })\n  public images: string[];\n\n  @Column({\n    type: DataType.STRING,\n    allowNull: false,\n    unique: false,\n    field: 'sizeChart',\n  })\n  public sizeChartImage: string;\n\n  @Column({\n    type: DataType.ARRAY(DataType.ENUM('S', 'XXS', 'XS', 'M', 'L', 'XL', 'XXL')),\n    unique: false,\n    allowNull: true,\n    field: 'sizes',\n  })\n  public sizes: string[];\n\n  @Column({\n    type: DataType.ARRAY(DataType.STRING),\n    unique: false,\n    allowNull: true,\n    field: 'colours',\n  })\n  public colours: string[];\n\n  @IsInt\n  @Column({\n    type: DataType.INTEGER,\n    unique: false,\n    allowNull: false,\n    field: 'quantity',\n  })\n  public quantity: number;\n\n  @IsInt\n  @ForeignKey(() => Admin)\n  @Column({ type: DataType.INTEGER, unique: false, allowNull: true })\n  private adminId: number;\n\n  @IsInt\n  @ForeignKey(() => Owner)\n  @Column({ type: DataType.INTEGER, unique: false, allowNull: true })\n  private ownerId: number;\n\n  @BelongsTo(() => Owner)\n  public owner: Owner;\n\n  @BelongsTo(() => Admin)\n  public admin: Admin;\n\n  @BelongsToMany(() => Category, () => ProductCategories)\n  public categories: Category[];\n\n  @BelongsToMany(() => Cart, () => CartProduct)\n  private carts: Cart[];\n\n  @BelongsToMany(() => Order, () => OrderProduct)\n  private orders: Order[];\n\n  @BelongsToMany(() => Review, () => ProductReviews)\n  public reviews: Review[];\n\n  getCategories(): Category[] {\n    return this.categories;\n  }\n\n  setCategories(categories: Category[]): Category[] {\n    this.categories = categories;\n    return this.categories;\n  }\n\n  getCarts(): Cart[] {\n    return this.carts;\n  }\n\n  getAuthor(): Owner {\n    return this.owner;\n  }\n\n  getOwnerId(): number {\n    return this.ownerId;\n  }\n\n  setOwnerId(ownerId: number): number {\n    this.ownerId = ownerId;\n    return this.ownerId;\n  }\n\n  getAdminId(): number {\n    return this.adminId;\n  }\n\n  setAdminId(adminId: number): number {\n    this.adminId = adminId;\n    return adminId;\n  }\n\n  getOrders(): Order[] {\n    return this.orders;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ProductCategories.html":{"url":"classes/ProductCategories.html","title":"class - ProductCategories","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ProductCategories\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/categories/models/product.categories.model.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    Model\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                categoryId\n                            \n                            \n                                    Public\n                                id\n                            \n                            \n                                    Public\n                                productId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        categoryId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ForeignKey(undefined)@Column({type: undefined, field: 'categoryId'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/categories/models/product.categories.model.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: undefined, unique: true, autoIncrement: true, primaryKey: true, allowNull: false, field: 'id'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/categories/models/product.categories.model.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        productId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ForeignKey(undefined)@Column({type: undefined, field: 'productId'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/categories/models/product.categories.model.ts:35\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  Column,\n  DataType,\n  Table,\n  Model,\n  ForeignKey,\n} from 'sequelize-typescript';\nimport { Product } from '../../product/models/product.model';\nimport { Category } from './category.model';\n\n@Table({ tableName: 'PRODUCT_Categories', createdAt: false, updatedAt: false })\nexport class ProductCategories extends Model {\n  @Column({\n    type: DataType.INTEGER,\n    unique: true,\n    autoIncrement: true,\n    primaryKey: true,\n    allowNull: false,\n    field: 'id',\n  })\n  public id: number;\n\n  @ForeignKey(() => Category)\n  @Column({\n    type: DataType.INTEGER,\n    field: 'categoryId',\n  })\n  public categoryId: number;\n\n  @ForeignKey(() => Product)\n  @Column({\n    type: DataType.INTEGER,\n    field: 'productId',\n  })\n  public productId: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/ProductController.html":{"url":"controllers/ProductController.html","title":"controller - ProductController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  ProductController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/product/product.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                product\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addBookmark\n                            \n                            \n                                addWatchedProduct\n                            \n                            \n                                createProduct\n                            \n                            \n                                deleteFile\n                            \n                            \n                                deleteProduct\n                            \n                            \n                                filterProducts\n                            \n                            \n                                getBookmarkProducts\n                            \n                            \n                                getById\n                            \n                            \n                                getProducts\n                            \n                            \n                                getProductsByIds\n                            \n                            \n                                getWatchedProducts\n                            \n                            \n                                updateProduct\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addBookmark\n                        \n                    \n                \n            \n            \n                \naddBookmark(productId: number, userId: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Throttle(70, 700)@Roles('USER')@UseGuards(JwtAuthGuard, RolesGuard, UserGuard)@Post('addBookmarkProduct')\n                \n            \n\n            \n                \n                    Defined in src/product/product.controller.ts:162\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    productId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    userId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        addWatchedProduct\n                        \n                    \n                \n            \n            \n                \naddWatchedProduct(productId: number, userId: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Throttle(70, 700)@Roles('USER')@UseGuards(JwtAuthGuard, RolesGuard, UserGuard)@Post('addWatchedProduct')\n                \n            \n\n            \n                \n                    Defined in src/product/product.controller.ts:147\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    productId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    userId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createProduct\n                        \n                    \n                \n            \n            \n                \ncreateProduct(createProductDto: CreateProductDto, files: literal type, userId: number, type: \"OWNER\" | \"ADMIN\" | null)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Throttle(70, 700)@Put('create_product')@Roles('OWNER', 'ADMIN')@UsePipes(new ValidationPipe())@UseGuards(JwtAuthGuard, RolesGuard, OwnerAdminGuard, AuthFerfershGuard, AddContentGuard)@HttpCode(201)@UseInterceptors(undefined)\n                \n            \n\n            \n                \n                    Defined in src/product/product.controller.ts:235\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createProductDto\n                                    \n                                                CreateProductDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    files\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    userId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    type\n                                    \n                                            \"OWNER\" | \"ADMIN\" | null\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteFile\n                        \n                    \n                \n            \n            \n                \ndeleteFile(filePath: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Throttle(70, 700)@Delete('delete_image')@Roles('OWNER', 'ADMIN')@UseGuards(JwtAuthGuard, RolesGuard, OwnerAdminGuard, AuthFerfershGuard, EditContentGuard)@HttpCode(200)\n                \n            \n\n            \n                \n                    Defined in src/product/product.controller.ts:357\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filePath\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteProduct\n                        \n                    \n                \n            \n            \n                \ndeleteProduct(productId: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Throttle(70, 700)@Delete('delete_product/:productId')@Roles('OWNER', 'ADMIN')@UseGuards(JwtAuthGuard, RolesGuard, OwnerAdminGuard, AuthFerfershGuard, EditContentGuard)@HttpCode(202)\n                \n            \n\n            \n                \n                    Defined in src/product/product.controller.ts:344\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    productId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        filterProducts\n                        \n                    \n                \n            \n            \n                \nfilterProducts(page: number, pageSize: number, order: \"ASC\" | \"DESC\", sizes: string[], colours: string[], categories: number[])\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Throttle(70, 700)@Get('filter')\n                \n            \n\n            \n                \n                    Defined in src/product/product.controller.ts:86\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    page\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    pageSize\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    order\n                                    \n                                            \"ASC\" | \"DESC\"\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    sizes\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    colours\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    categories\n                                    \n                                            number[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getBookmarkProducts\n                        \n                    \n                \n            \n            \n                \ngetBookmarkProducts(page: number, pageSize: number, userId: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Throttle(70, 700)@Roles('USER')@UseGuards(JwtAuthGuard, RolesGuard, UserGuard)@Get('bookmarkProducts')\n                \n            \n\n            \n                \n                    Defined in src/product/product.controller.ts:115\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    page\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    pageSize\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    userId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getById\n                        \n                    \n                \n            \n            \n                \ngetById(productId: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Throttle(70, 700)@Get('/:productId')\n                \n            \n\n            \n                \n                    Defined in src/product/product.controller.ts:103\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    productId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getProducts\n                        \n                    \n                \n            \n            \n                \ngetProducts(page: number, pageSize: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Throttle(70, 700)@Get('/')\n                \n            \n\n            \n                \n                    Defined in src/product/product.controller.ts:59\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    page\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    pageSize\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getProductsByIds\n                        \n                    \n                \n            \n            \n                \ngetProductsByIds(page: number, pageSize: number, productIds: number[])\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Throttle(70, 700)@Get('get')\n                \n            \n\n            \n                \n                    Defined in src/product/product.controller.ts:72\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    page\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    pageSize\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    productIds\n                                    \n                                            number[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getWatchedProducts\n                        \n                    \n                \n            \n            \n                \ngetWatchedProducts(page: number, pageSize: number, userId: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Throttle(70, 700)@Roles('USER')@UseGuards(JwtAuthGuard, RolesGuard, UserGuard)@Get('watchedProducts')\n                \n            \n\n            \n                \n                    Defined in src/product/product.controller.ts:131\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    page\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    pageSize\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    userId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateProduct\n                        \n                    \n                \n            \n            \n                \nupdateProduct(updateProductDto: UpdateProductDto, productId: number, userId: number, type: \"OWNER\" | \"ADMIN\" | null, files: literal type)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Throttle(70, 700)@Patch('update_product/:productId')@Roles('OWNER', 'ADMIN')@UsePipes(new ValidationPipe())@UseGuards(JwtAuthGuard, RolesGuard, OwnerAdminGuard, AuthFerfershGuard, EditContentGuard)@HttpCode(202)@UseInterceptors(undefined)\n                \n            \n\n            \n                \n                    Defined in src/product/product.controller.ts:314\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    updateProductDto\n                                    \n                                                UpdateProductDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    productId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    userId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    type\n                                    \n                                            \"OWNER\" | \"ADMIN\" | null\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    files\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Body,\n  CacheInterceptor,\n  ClassSerializerInterceptor,\n  Controller,\n  Delete,\n  Get,\n  HttpCode,\n  Param,\n  ParseArrayPipe,\n  ParseIntPipe,\n  Patch,\n  Post,\n  Put,\n  Query,\n  UploadedFiles,\n  UseFilters,\n  UseGuards,\n  UseInterceptors,\n  UsePipes,\n  ValidationPipe,\n} from '@nestjs/common';\nimport { Request, Response, NextFunction } from 'express';\nimport { FileFieldsInterceptor } from '@nestjs/platform-express';\nimport { ThrottlerBehindProxyGuard } from '../common/guards/throttler-behind-proxy.guard';\nimport { ApiErrorExceptionFilter } from '../common/filters/error-handler.filter';\nimport { CreateProductDto } from './dto/create.product.dto';\nimport { Throttle } from '@nestjs/throttler';\nimport { ProductService } from './product.service';\nimport { Roles } from '../common/decorators/roles-auth.decorator';\nimport { AddContentGuard } from '../common/guards/add-content.guard';\nimport { AuthFerfershGuard } from '../common/guards/jw-refresh.guard';\nimport { JwtAuthGuard } from '../common/guards/jwt-auth.guard';\nimport { OwnerAdminGuard } from '../common/guards/owner-admin.guard';\nimport { RolesGuard } from '../common/guards/roles.guard';\nimport { diskStorage } from 'multer';\nimport path, { extname } from 'path';\nimport { UpdateProductDto } from './dto/update.product.dto';\nimport { Type } from '../common/decorators/user-type.decorator';\nimport { UserId } from '../common/decorators/user.id.decorator';\nimport { ApiExceptionFilter } from '../common/filters/api-exception.filter';\nimport { existsSync, mkdirSync } from 'fs';\nimport { v4 } from 'uuid';\nimport { EditContentGuard } from '../common/guards/edit-content.guard';\nimport { ReturnedProduct, ReturnedProducts } from '../core/interfaces/product.interfaces';\nimport { ParseFormDataJsonPipe } from '../common/pipes/formdata.pipe';\nimport { UserGuard } from 'src/common/guards/user.guard';\n@UseGuards(ThrottlerBehindProxyGuard)\n@UseFilters(ApiErrorExceptionFilter, ApiExceptionFilter)\n@UseInterceptors(CacheInterceptor, ClassSerializerInterceptor)\n@Controller('product')\nexport class ProductController {\n  constructor(\n    private readonly productService: ProductService,\n  ) {}\n  \n  @Throttle(70, 700)\n  @Get('/')\n  getProducts(\n    @Query('page', ParseIntPipe) page: number,\n    @Query('pageSize', ParseIntPipe) pageSize: number,\n  ): Promise {\n    try {\n      return this.productService.getProducts(page, pageSize);\n    } catch (err: unknown) {\n      throw err;\n    }\n  }\n\n  @Throttle(70, 700)\n  @Get('get')\n  getProductsByIds(\n    @Query('page', ParseIntPipe) page: number,\n    @Query('pageSize', ParseIntPipe) pageSize: number,\n    @Query('productIds', ParseArrayPipe) productIds: number[],\n  ): Promise {\n    try {\n      return this.productService.getProductsByIds(productIds, page, pageSize);\n    } catch (err: unknown) {\n      throw err;\n    }\n  }\n\n  @Throttle(70, 700)\n  @Get('filter')\n  filterProducts(\n    @Query('page', ParseIntPipe) page: number,\n    @Query('pageSize', ParseIntPipe) pageSize: number,\n    @Query('order') order: 'ASC' | 'DESC',\n    @Query('sizes', ParseArrayPipe) sizes: string[],\n    @Query('colours', ParseArrayPipe) colours: string[],\n    @Query('categories', ParseArrayPipe) categories: number[],\n  ): Promise {\n    try{\n      return this.productService.filterProducts(page, pageSize, order, sizes, colours, categories);\n    } catch (err: unknown) {\n      throw err;\n    }\n  }    \n\n  @Throttle(70, 700)\n  @Get('/:productId')\n  getById(@Param('productId', ParseIntPipe) productId: number) {\n    try {\n      return this.productService.getProductById(productId);\n    } catch (err: unknown) {\n      throw err;\n    }\n  }\n\n  @Throttle(70, 700)\n  @Roles('USER')\n  @UseGuards(JwtAuthGuard, RolesGuard, UserGuard)\n  @Get('bookmarkProducts')\n  getBookmarkProducts(\n    @Query('page', ParseIntPipe) page: number,\n    @Query('pageSize', ParseIntPipe) pageSize: number,\n    @UserId('USER-ID') userId: number,\n  ) {\n    try {\n      return this.getBookmarkProducts(page, pageSize, userId);\n    } catch (err: unknown) {\n      throw err;\n    }\n  }\n\n  @Throttle(70, 700)\n  @Roles('USER')\n  @UseGuards(JwtAuthGuard, RolesGuard, UserGuard)\n  @Get('watchedProducts')\n  getWatchedProducts(\n    @Query('page', ParseIntPipe) page: number,\n    @Query('pageSize', ParseIntPipe) pageSize: number,\n    @UserId('USER-ID') userId: number,\n  ) {\n    try {\n      return this.getWatchedProducts(page, pageSize, userId);\n    } catch (err: unknown) {\n      throw err;\n    }\n  }\n\n  @Throttle(70, 700)\n  @Roles('USER')\n  @UseGuards(JwtAuthGuard, RolesGuard, UserGuard)\n  @Post('addWatchedProduct')\n  addWatchedProduct(\n    @Query('productId', ParseIntPipe) productId: number,\n    @UserId('USER-ID') userId: number,\n  ) {\n    try {\n      return this.addWatchedProduct(productId, userId);\n    } catch (err: unknown) {\n      throw err;\n    }\n  }\n\n  @Throttle(70, 700)\n  @Roles('USER')\n  @UseGuards(JwtAuthGuard, RolesGuard, UserGuard)\n  @Post('addBookmarkProduct')\n  addBookmark(\n    @Query('productId', ParseIntPipe) productId: number,\n    @UserId('USER-ID') userId: number,\n  ) {\n    try {\n      return this.addBookmark(productId, userId);\n    } catch (err: unknown) {\n      throw err;\n    }\n  }\n\n  @Throttle(70, 700)\n  @Put('create_product')\n  @Roles('OWNER', 'ADMIN')\n  @UsePipes(new ValidationPipe({ transform: true }))\n  @UseGuards(JwtAuthGuard, RolesGuard, OwnerAdminGuard, AuthFerfershGuard, AddContentGuard)\n  @HttpCode(201)\n  @UseInterceptors(\n    FileFieldsInterceptor([\n      { name: 'images', maxCount: 20 },\n      { name: 'sizeChartImage', maxCount: 1 },\n    ], {\n      fileFilter: (\n        req: Request,\n        file: Express.Multer.File,\n        callback: (error: Error, acceptFile: boolean) => void\n      ) => {\n        const filetypes = /jpeg|jpg|png|gif|svg/;\n        const extname = filetypes.test(path.extname(file.originalname).toLowerCase());\n        const mimetype = filetypes.test(file.mimetype);\n        if (mimetype && extname) {\n          return callback(null, true);\n        } else {\n          return callback(new Error('Only image files are allowed!'), false);\n        }\n      },\n      storage: diskStorage({\n        destination: (\n          req, file: Express.Multer.File,\n          callback: (error: Error, destination: string) => void\n        ) => {\n          if (!JSON.parse(req.body.title)?.en) {\n            return callback(new Error('Invalid params!'), null);\n          }\n          const destination = path.join(\n            __dirname, 'static', 'products', `${JSON.parse(req.body.title)?.en.split(' ').join('_')}`\n          );\n          const imagesPath = path.join(\n            __dirname, 'static', 'products', `${JSON.parse(req.body.title)?.en.split(' ').join('_')}`, file.fieldname\n          );\n          if (!existsSync(destination)) {\n            mkdirSync(destination, { recursive: true });\n          }\n          if (!existsSync(imagesPath)) {\n            mkdirSync(imagesPath, { recursive: true });\n          }\n          callback(null, imagesPath);\n        },\n        filename: (\n          req, file: Express.Multer.File,\n          callback: any,\n        ) => {\n          if (!JSON.parse(req.body.title)?.en) {\n            return callback(new Error('Invalid params!'), null);\n          }\n          const name = file.originalname.split('.')[0];\n          const ext = extname(file.originalname);\n          const randomName = v4();\n          callback(null, `${randomName}--${JSON.parse(req.body.title)?.en.split(' ').join('_')}--${name}${ext}`);\n        },\n      })\n    }),\n  )\n  createProduct(\n    @Body(new ParseFormDataJsonPipe({except: ['images', 'sizeChartImage']})) createProductDto: CreateProductDto,\n    @UploadedFiles()\n    files: {\n      images?: Express.Multer.File[];\n      sizeChartImage?: Express.Multer.File[];\n    },\n    @UserId('USER-ID') userId: number,\n    @Type('REFRESHTOKEN') type: 'OWNER' | 'ADMIN' | null,\n  ): Promise {\n    try {\n      return this.productService.createProduct(createProductDto, userId, type, files.images, files.sizeChartImage);\n    } catch (error: unknown) {\n      throw error;\n    }\n  }\n\n  @Throttle(70, 700)\n  @Patch('update_product/:productId')\n  @Roles('OWNER', 'ADMIN')\n  @UsePipes(new ValidationPipe({ transform: true }))\n  @UseGuards(JwtAuthGuard, RolesGuard, OwnerAdminGuard, AuthFerfershGuard, EditContentGuard)\n  @HttpCode(202)\n  @UseInterceptors(\n    FileFieldsInterceptor([\n      { name: 'images', maxCount: 20 },\n      { name: 'sizeChartImage', maxCount: 1 },\n    ], {\n      fileFilter: (\n        req: Request,\n        file: Express.Multer.File,\n        callback: (error: Error, acceptFile: boolean) => void\n      ) => {\n        const filetypes = /jpeg|jpg|png|gif|svg/;\n        const extname = filetypes.test(path.extname(file.originalname).toLowerCase());\n        const mimetype = filetypes.test(file.mimetype);\n        if (mimetype && extname) {\n          return callback(null, true);\n        } else {\n          return callback(new Error('Only image files are allowed!'), false);\n        }\n      },\n      storage: diskStorage({\n        destination: (\n          req, file: Express.Multer.File,\n          callback: (error: Error, destination: string) => void\n        ) => {\n          if (!JSON.parse(req.body.title)?.en) {\n            return callback(new Error('Invalid params!'), null);\n          }\n          const destination = path.join(\n            __dirname, 'static', 'products', `${JSON.parse(req.body.title)?.en.split(' ').join('_')}`\n          );\n          const imagesPath = path.join(\n            __dirname, 'static', 'products', `${JSON.parse(req.body.title)?.en.split(' ').join('_')}`, file.fieldname\n          );\n          if (!existsSync(destination)) {\n            mkdirSync(destination, { recursive: true });\n          }\n          if (!existsSync(imagesPath)) {\n            mkdirSync(imagesPath, { recursive: true });\n          }\n          callback(null, imagesPath);\n        },\n        filename: (\n          req, file: Express.Multer.File,\n          callback: any,\n        ) => {\n          if (!JSON.parse(req.body.title)?.en) {\n            return callback(new Error('Invalid params!'), null);\n          }\n          const name = file.originalname.split('.')[0];\n          const ext = extname(file.originalname);\n          const randomName = v4();\n          callback(null, `${randomName}--${JSON.parse(req.body.title)?.en.split(' ').join('_')}--${name}${ext}`);\n        },\n      })\n    }),\n  )\n  updateProduct(\n    @Body(new ParseFormDataJsonPipe({except: ['images', 'sizeChartImage']})) updateProductDto: UpdateProductDto,\n    @Param('productId', ParseIntPipe) productId: number,\n    @UserId('USER-ID') userId: number,\n    @Type('REFRESHTOKEN') type: 'OWNER' | 'ADMIN' | null,\n    @UploadedFiles()\n    files: {\n      images?: Express.Multer.File[];\n      sizeChartImage?: Express.Multer.File[];\n    },\n  ): Promise {\n    try {\n      return this.productService.updateProduct(\n        updateProductDto,\n        productId,\n        userId,\n        type,\n        files.images,\n        files.sizeChartImage\n      );\n    } catch (err: unknown) {\n      throw err;\n    }\n  }\n\n  @Throttle(70, 700)\n  @Delete('delete_product/:productId')\n  @Roles('OWNER', 'ADMIN')\n  @UseGuards(JwtAuthGuard, RolesGuard, OwnerAdminGuard, AuthFerfershGuard, EditContentGuard)\n  @HttpCode(202)\n  deleteProduct(@Param('productId', ParseIntPipe) productId: number) {\n    try {\n      return this.productService.deleteProduct(productId);\n    } catch (err: unknown) {\n      throw err;\n    }\n  }\n\n  @Throttle(70, 700)\n  @Delete('delete_image')\n  @Roles('OWNER', 'ADMIN')\n  @UseGuards(JwtAuthGuard, RolesGuard, OwnerAdminGuard, AuthFerfershGuard, EditContentGuard)\n  @HttpCode(200)\n  deleteFile(\n    @Query('filePath') filePath: string,\n  ): Promise {\n      return this.productService.deleteImage(filePath);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ProductCreationAttrs.html":{"url":"interfaces/ProductCreationAttrs.html","title":"interface - ProductCreationAttrs","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ProductCreationAttrs\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/interfaces/product.interfaces.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            adminId\n                                        \n                                \n                                \n                                        \n                                            colours\n                                        \n                                \n                                \n                                        \n                                            description\n                                        \n                                \n                                \n                                        \n                                            images\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            ownerId\n                                        \n                                \n                                \n                                        \n                                            price\n                                        \n                                \n                                \n                                        \n                                            sizeChartImage\n                                        \n                                \n                                \n                                        \n                                            sizes\n                                        \n                                \n                                \n                                        \n                                            title\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        adminId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        adminId:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        colours\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        colours:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        images\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        images:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ownerId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ownerId:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        price\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        price:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sizeChartImage\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        sizeChartImage:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sizes\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        sizes:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface ProductCreationAttrs {\n  title: string;\n  description: string;\n  ownerId?: number;\n  adminId?: number;\n  images: string[];\n  price: number;\n  sizeChartImage: string;\n  sizes: string[];\n  colours: string[];\n}\n\nexport interface ReviewCreationAtrb {\n  name: string;\n  surname: string;\n  review: string;\n}\n\nexport interface ReturnedReview {\n  id: number;\n  name: string;\n  surname: string;\n  review: string;\n  createdAt: any;\n  updatedAt: any;\n}\n\nexport interface CategoryCreationAtrb {\n  ua: string;\n  ru: string;\n  rs: string;\n  en: string;\n}\n\nexport interface ReturnedProduct {\n  id: number;\n  title: {\n    ua: string;\n    ru: string;\n    rs: string;\n    en: string;\n  };\n  description: {\n    ua: string;\n    ru: string;\n    rs: string;\n    en: string;\n  };\n  price: number;\n  quantity: number;\n  images: string[];\n  sizeChartImage: string;\n  sizes: string[];\n  colours: string[];\n  categories: ReturnedCategory[];  \n  reviews: ReturnedReview[] | [];\n}\n\nexport interface ReturnedProducts {\n  products: ReturnedProduct[];\n  totalItems: number;\n}\n\nexport interface ReturnedCategory {\n  id: number;\n  ua: string;\n  en: string;\n  rs: string;\n  ru: string;\n  createdAt: any;\n  updatedAt: any;\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ProductMiddleware.html":{"url":"injectables/ProductMiddleware.html","title":"injectable - ProductMiddleware","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ProductMiddleware\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/middlewares/product.middleware.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                use\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        use\n                        \n                    \n                \n            \n            \n                \nuse(req: Request, res: Response, next: NextFunction)\n                \n            \n\n\n            \n                \n                    Defined in src/common/middlewares/product.middleware.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                            NextFunction\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  Injectable,\n  NestMiddleware,\n  Next,\n  Req,\n  Res,\n  Scope,\n} from '@nestjs/common';\nimport { Request, Response, NextFunction } from 'express';\n\n@Injectable({ scope: Scope.REQUEST })\nexport class ProductMiddleware implements NestMiddleware {\n  use(@Req() req: Request, @Res() res: Response, @Next() next: NextFunction) {\n    try {\n      const userAgent = req.headers['user-agent'];\n      res.setHeader('Access-Control-Request-Headers', 'Authorization');\n      res.setHeader('Access-Control-Request-Method', 'POST, GET, PUT, PATCH, DELETE');\n      res.setHeader('Timing-Allow-Origin', `${process.env.CLIENT_URL.trim()}`);\n      res.setHeader('X-Content-Type-Options', 'nosniff');\n      req['userAgent'] = userAgent;\n      return next();\n    } catch (err: unknown) {\n      return next(err);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ProductModule.html":{"url":"modules/ProductModule.html","title":"module - ProductModule","body":"\n                   \n\n\n\n\n    Modules\n    ProductModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_ProductModule\n\n\n\ncluster_ProductModule_providers\n\n\n\n\nCategoriesService\n\nCategoriesService\n\n\n\nProductModule\n\nProductModule\n\nProductModule -->\n\nCategoriesService->ProductModule\n\n\n\n\n\nFilesService\n\nFilesService\n\nProductModule -->\n\nFilesService->ProductModule\n\n\n\n\n\nProductService\n\nProductService\n\nProductModule -->\n\nProductService->ProductModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/product/product.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            CategoriesService\n                        \n                        \n                            FilesService\n                        \n                        \n                            ProductService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            ProductController\n                        \n                    \n                \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        configure\n                        \n                    \n                \n            \n            \n                \nconfigure(consumer: MiddlewareConsumer)\n                \n            \n\n\n            \n                \n                    Defined in src/product/product.module.ts:84\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    consumer\n                                    \n                                            MiddlewareConsumer\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        import {\n  forwardRef,\n  MiddlewareConsumer,\n  Module,\n  NestModule,\n  RequestMethod,\n} from '@nestjs/common';\nimport { ProductService } from './product.service';\nimport { ProductController } from './product.controller';\nimport { SequelizeModule } from '@nestjs/sequelize';\nimport { AdminModule } from '../admin/admin.module';\nimport { Admin } from '../admin/models/admin.model';\nimport { AdminRefreshToken } from '../admin/models/admin.refresh.token.model';\nimport { AuthModule } from '../auth/auth.module';\nimport { Owner } from '../owner/models/owner.model';\nimport { OwnerRefreshToken } from '../owner/models/owner.refresh.token.model';\nimport { OwnerModule } from '../owner/owner.module';\nimport { Role } from '../roles/models/roles.model';\nimport { UserRoles } from '../roles/models/user.roles.model';\nimport { RolesModule } from '../roles/roles.module';\nimport { User } from '../users/models/user.model';\nimport { UserRefreshToken } from '../users/models/user.refresh.token.model';\nimport { UsersModule } from '../users/users.module';\nimport { ConfigModule } from '@nestjs/config';\nimport { Product } from './models/product.model';\nimport { Category } from '../categories/models/category.model';\nimport { ProductCategories } from '../categories/models/product.categories.model';\nimport { CategoriesModule } from '../categories/categories.module';\nimport { CartModule } from '../cart/cart.module';\nimport { CartProduct } from '../cart/models/cart.product.model';\nimport { Cart } from '../cart/models/cart.model';\nimport { Order } from '../orders/models/order.model';\nimport { OrderProduct } from '../orders/models/order.product.model';\nimport { OrdersModule } from '../orders/orders.module';\nimport { InitializeUserMiddleware } from '../common/middlewares/initialize-user.middleware';\nimport { CategoriesService } from '../categories/categories.service';\nimport { FilesService } from '../core/services/file.service';\nimport { ProductMiddleware } from '../common/middlewares/product.middleware';\nimport { ProductReviews } from '../reviews/models/product.reviews.model';\nimport { BookmarksProducts } from './models/bookmark.products';\nimport { WatchedProducts } from './models/watched.products.model';\nimport { UserMiddleware } from 'src/common/middlewares/user.middleware';\n\n@Module({\n  providers: [ProductService, CategoriesService, FilesService],\n  controllers: [ProductController],\n  imports: [\n    ConfigModule.forRoot({\n      envFilePath: `.${process.env.NODE_ENV}.env`,\n      expandVariables: true,\n      isGlobal: true,\n    }),\n    SequelizeModule.forFeature([\n      ProductReviews,\n      Product,\n      Order,\n      OrderProduct,\n      Category,\n      ProductCategories,\n      Admin,\n      AdminRefreshToken,\n      Owner,\n      OwnerRefreshToken,\n      User,\n      UserRefreshToken,\n      Role,\n      BookmarksProducts,\n      WatchedProducts,\n      UserRoles,\n      Cart,\n      CartProduct,\n    ]),\n    forwardRef(() => OrdersModule),\n    forwardRef(() => CartModule),\n    forwardRef(() => CategoriesModule),\n    forwardRef(() => AdminModule),\n    forwardRef(() => RolesModule),\n    forwardRef(() => AuthModule),\n    forwardRef(() => OwnerModule),\n    forwardRef(() => UsersModule),\n  ],\n})\nexport class ProductModule implements NestModule {\n  configure(consumer: MiddlewareConsumer) {\n    consumer.apply(ProductMiddleware).forRoutes({\n      path: '*',\n      method: RequestMethod.ALL,\n    });\n    consumer\n      .apply(UserMiddleware, InitializeUserMiddleware)\n      .forRoutes(\n        { path: 'product/addBookmark', method: RequestMethod.POST },\n        { path: 'product/addWatchedProduct', method: RequestMethod.POST },\n        { path: 'product/watchedProducts', method: RequestMethod.GET },\n        { path: 'product/bookmarkProducts', method: RequestMethod.GET }\n      );\n    consumer\n        .apply(InitializeUserMiddleware)\n        .forRoutes(\n          { path: 'product/create_product', method: RequestMethod.PUT },\n          { path: '*', method: RequestMethod.PATCH },\n          { path: '*', method: RequestMethod.DELETE },\n          { path: 'product/delete_image', method: RequestMethod.DELETE }\n        );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ProductReviews.html":{"url":"classes/ProductReviews.html","title":"class - ProductReviews","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ProductReviews\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/reviews/models/product.reviews.model.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    Model\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                id\n                            \n                            \n                                    Public\n                                productId\n                            \n                            \n                                    Public\n                                reviewId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: undefined, unique: true, autoIncrement: true, primaryKey: true, allowNull: false, field: 'id'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/reviews/models/product.reviews.model.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        productId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ForeignKey(undefined)@Column({type: undefined, field: 'productId'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/reviews/models/product.reviews.model.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        reviewId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ForeignKey(undefined)@Column({type: undefined, field: 'reviewId'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/reviews/models/product.reviews.model.ts:29\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  Column,\n  DataType,\n  Table,\n  Model,\n  ForeignKey,\n} from 'sequelize-typescript';\nimport { Product } from '../../product/models/product.model';\nimport { Review } from './review.model';\n\n\n@Table({ tableName: 'PRODUCT_Reviews', createdAt: false, updatedAt: false })\nexport class ProductReviews extends Model {\n  @Column({\n    type: DataType.INTEGER,\n    unique: true,\n    autoIncrement: true,\n    primaryKey: true,\n    allowNull: false,\n    field: 'id',\n  })\n  public id: number;\n\n  @ForeignKey(() => Review)\n  @Column({\n    type: DataType.INTEGER,\n    field: 'reviewId',\n  })\n  public reviewId: number;\n\n  @ForeignKey(() => Product)\n  @Column({\n    type: DataType.INTEGER,\n    field: 'productId',\n  })\n  public productId: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/RefreshAuthGuard.html":{"url":"guards/RefreshAuthGuard.html","title":"guard - RefreshAuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    RefreshAuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/common/guards/refresh.guard.ts\n            \n\n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/common/guards/refresh.guard.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate(context: ExecutionContext)\n                \n            \n\n\n            \n                \n                    Defined in src/common/guards/refresh.guard.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                            ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     boolean | Promise | Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import {\n  BadRequestException,\n  CanActivate,\n  ExecutionContext,\n  HttpStatus,\n  Injectable,\n  UnauthorizedException,\n} from '@nestjs/common';\nimport { Observable } from 'rxjs';\nimport { ACCESS_TOKEN_NOT_PROVIDED, INVALID_HEADER, NO_TOKEN_PROVIDED } from '../../auth/auth.constants';\nimport { AuthService } from '../../auth/auth.service';\nimport { ApiException } from '../exceptions/api.exception';\n\n@Injectable()\nexport class RefreshAuthGuard implements CanActivate {\n  constructor(private authService: AuthService) {}\n\n  canActivate(\n    context: ExecutionContext,\n  ): boolean | Promise | Observable {\n    const req = context.switchToHttp().getRequest();\n    const authHeader = req.headers.authorization;\n    if (!authHeader) {\n      throw new ApiException(HttpStatus.BAD_REQUEST, 'Bad request!', INVALID_HEADER);\n    }\n    const bearer = authHeader.split(' ')[0];\n    const accessToken = authHeader.split(' ')[1];\n    if (bearer !== 'Bearer' || !accessToken) {\n      throw new ApiException(HttpStatus.UNAUTHORIZED, 'Unathorized!', ACCESS_TOKEN_NOT_PROVIDED);\n    }\n    return true;\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/RequestHeaders.html":{"url":"interfaces/RequestHeaders.html","title":"interface - RequestHeaders","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  RequestHeaders\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/middlewares/cors.middleware.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            Accept\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            Connection\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            Host\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [key: string]:        string\n\n                    \n                \n                        \n                            \n                                Defined in src/core/middlewares/cors.middleware.ts:17\n                            \n                        \n            \n        \n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        Accept\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        Accept:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Connection\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        Connection:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Host\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        Host:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {\n  BadRequestException,\n  Injectable,\n  Logger,\n  NestMiddleware,\n  Next,\n  Req,\n  Res,\n  Scope,\n} from '@nestjs/common';\nimport { Request, Response, NextFunction } from 'express';\nimport geoip from 'geoip-lite';\nimport IP from 'ip';\ninterface RequestHeaders {\n  Accept?: string;\n  Host?: string;\n  Connection?: string;\n  [key: string]: string;\n}\n\n@Injectable({ scope: Scope.REQUEST })\nexport class CorsMiddleware implements NestMiddleware {\n  readonly Logger = new Logger(CorsMiddleware.name);\n  use(@Req() req: Request, @Res() res: Response, @Next() next: NextFunction) {\n    const headers: RequestHeaders = JSON.parse(JSON.stringify(req.headers));\n    const isEmpty = this.isEmpty(headers);\n    const ipAddress = IP.address();\n    this.Logger.log(ipAddress);\n    if (isEmpty) {\n      throw new BadRequestException({\n        message: 'No request headers were provided!',\n      });\n    }\n    res.setHeader(\n      'Access-Control-Allow-Origin',\n      `${process.env.CLIENT_URL.toString().trim()}`,\n    );\n    res.setHeader(\n      'Access-Control-Allow-Methods',\n      'OPTIONS, GET, POST, PUT, PATCH, DELETE',\n    );\n    res.setHeader('Access-Control-Allow-Credentials', 'true');\n    res.header(\n      'Access-Control-Allow-Headers',\n      'imageType, Authorization, X-Requested-With, X-HTTP-Method-Override, Content-Type, Accept',\n    );\n    res.setHeader(\n      'Content-Security-Policy',\n      'default-src \\'self\\'; font-src \\'self\\'; img-src \\'self\\'; script-src \\'self\\'; style-src \\'self\\'; frame-src \\'self\\'',\n    );\n    if (req.method === 'OPTIONS') {\n      return res.status(204).end();\n    }\n    return next();\n  }\n\n  private isEmpty(object: RequestHeaders): boolean {\n    for (const prop in object) {\n      if (Object.prototype.hasOwnProperty.call(object, prop)) {\n        return false;\n      }\n    }\n    return JSON.stringify(object) === JSON.stringify({});\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RequestValidator.html":{"url":"classes/RequestValidator.html","title":"class - RequestValidator","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RequestValidator\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/pipes/body-validator.pipe.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        validate\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/common/pipes/body-validator.pipe.ts:6\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Request, Response, NextFunction } from 'express';\nimport { ClassConstructor, plainToInstance } from 'class-transformer';\nimport { validate } from 'class-validator';\nimport { BadRequestError } from '../exceptions/validate-dto.exception.error';\nexport default class RequestValidator {\n  static validate = (classInstance: ClassConstructor) => {\n    return async (req: Request, res: Response, next: NextFunction) => {\n      const convertedObject = plainToInstance(classInstance, req.body);\n      await validate(convertedObject).then((errors) => {\n        if (errors.length > 0) {\n          let rawErrors: string[] = [];\n          for (const errorItem of errors) {\n            rawErrors = rawErrors.concat(\n              ...rawErrors,\n              Object.values(errorItem.constraints ?? []),\n            );\n          }\n          const validationErrorText = 'Request validation failed!';\n          console.log('error found!', rawErrors);\n          throw new BadRequestError(validationErrorText, rawErrors);\n        }\n      });\n      res.setHeader('Passed-validation', 'true');\n      next();\n    };\n  };\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ResetDto.html":{"url":"classes/ResetDto.html","title":"class - ResetDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ResetDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/dto/reset.password.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                code\n                            \n                            \n                                    Readonly\n                                confirmPassword\n                            \n                            \n                                    Readonly\n                                email\n                            \n                            \n                                    Readonly\n                                password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        code\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: '46756868', description: 'user`s code'})@MinLength(8)@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/reset.password.dto.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        confirmPassword\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'etrhg45ty5yeewt4t4665y', description: 'user`s confirm password'})@IsString()@Matches(/^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{8,}$/, {message: PASSWORD_VALIDATION})@Match('password')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/reset.password.dto.ts:54\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'user@gmail.com', description: 'user`s email'})@IsString()@IsEmail()@Matches(/^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/, {message: EMAIL_VALIDATION})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/reset.password.dto.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'etrhg45ty5yeewt4t4665y', description: 'user`s password'})@IsString()@Matches(/^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{8,}$/, {message: PASSWORD_VALIDATION})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/reset.password.dto.ts:40\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport {\n  IsEmail,\n  IsString,\n  Matches,\n  IsNumber,\n  MinLength,\n} from 'class-validator';\nimport { Match } from '../../common/decorators/match.decorator';\nimport { EMAIL_VALIDATION, PASSWORD_VALIDATION } from '../auth.constants';\n\nexport class ResetDto {\n  @ApiProperty({ example: 'user@gmail.com', description: 'user`s email' })\n  @IsString()\n  @IsEmail()\n  @Matches(\n    /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/,\n    {\n      message: EMAIL_VALIDATION,\n    },\n  )\n  readonly email: string;\n\n  @ApiProperty({ example: '46756868', description: 'user`s code' })\n  @MinLength(8)\n  @IsString()\n  readonly code: string;\n\n  @ApiProperty({\n    example: 'etrhg45ty5yeewt4t4665y',\n    description: 'user`s password',\n  })\n  @IsString()\n  @Matches(\n    /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{8,}$/,\n    {\n      message: PASSWORD_VALIDATION,\n    },\n  )\n  readonly password: string;\n\n  @ApiProperty({\n    example: 'etrhg45ty5yeewt4t4665y',\n    description: 'user`s confirm password',\n  })\n  @IsString()\n  @Matches(\n    /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{8,}$/,\n    {\n      message: PASSWORD_VALIDATION,\n    },\n  )\n  @Match('password')\n  readonly confirmPassword: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ReturnedAdmin.html":{"url":"interfaces/ReturnedAdmin.html","title":"interface - ReturnedAdmin","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ReturnedAdmin\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/interfaces/auth.interfaces.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            phoneNumber\n                                        \n                                \n                                \n                                        \n                                            surname\n                                        \n                                \n                                \n                                        \n                                            type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        phoneNumber\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        phoneNumber:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        surname\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        surname:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Role } from '../../roles/models/roles.model';\nexport interface Payload {\n  email: string;\n  userId: number;\n  userActivationLink: string;\n  isUserActivated: boolean;\n  roles?: Role[];\n}\n\nexport interface Tokens {\n  refreshToken: string;\n  accessToken: string;\n  expireDate: Date;\n}\n\nexport interface AuthUser {\n  accessToken: string;\n  user: ReturnedUser | ReturnedAdmin | ReturnedOwner;\n}\n\nexport interface ReturnedUser {\n  id: number;\n  name: string;\n  surname: string;\n  phoneNumber: string;\n  email: string;\n  country: string | null;\n  city: string | null;\n  postOffice: string | null;\n  type: 'USER';\n}\n\nexport interface ReturnedOwner {\n  id: number;\n  name: string;\n  surname: string;\n  phoneNumber: string;\n  email: string;\n  type: 'OWNER';\n}\n\nexport interface ReturnedAdmin {\n  id: number;\n  name: string;\n  surname: string;\n  phoneNumber: string;\n  email: string;\n  type: 'ADMIN';\n}\n\nexport interface CodeDto {\n  type: 'OWNER' | 'ADMIN' | null;\n  email: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ReturnedCategory.html":{"url":"interfaces/ReturnedCategory.html","title":"interface - ReturnedCategory","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ReturnedCategory\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/interfaces/product.interfaces.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            createdAt\n                                        \n                                \n                                \n                                        \n                                            en\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            rs\n                                        \n                                \n                                \n                                        \n                                            ru\n                                        \n                                \n                                \n                                        \n                                            ua\n                                        \n                                \n                                \n                                        \n                                            updatedAt\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        createdAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        createdAt:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        en\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        en:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        rs\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        rs:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ru\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ru:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ua\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ua:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        updatedAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        updatedAt:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface ProductCreationAttrs {\n  title: string;\n  description: string;\n  ownerId?: number;\n  adminId?: number;\n  images: string[];\n  price: number;\n  sizeChartImage: string;\n  sizes: string[];\n  colours: string[];\n}\n\nexport interface ReviewCreationAtrb {\n  name: string;\n  surname: string;\n  review: string;\n}\n\nexport interface ReturnedReview {\n  id: number;\n  name: string;\n  surname: string;\n  review: string;\n  createdAt: any;\n  updatedAt: any;\n}\n\nexport interface CategoryCreationAtrb {\n  ua: string;\n  ru: string;\n  rs: string;\n  en: string;\n}\n\nexport interface ReturnedProduct {\n  id: number;\n  title: {\n    ua: string;\n    ru: string;\n    rs: string;\n    en: string;\n  };\n  description: {\n    ua: string;\n    ru: string;\n    rs: string;\n    en: string;\n  };\n  price: number;\n  quantity: number;\n  images: string[];\n  sizeChartImage: string;\n  sizes: string[];\n  colours: string[];\n  categories: ReturnedCategory[];  \n  reviews: ReturnedReview[] | [];\n}\n\nexport interface ReturnedProducts {\n  products: ReturnedProduct[];\n  totalItems: number;\n}\n\nexport interface ReturnedCategory {\n  id: number;\n  ua: string;\n  en: string;\n  rs: string;\n  ru: string;\n  createdAt: any;\n  updatedAt: any;\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ReturnedOwner.html":{"url":"interfaces/ReturnedOwner.html","title":"interface - ReturnedOwner","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ReturnedOwner\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/interfaces/auth.interfaces.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            phoneNumber\n                                        \n                                \n                                \n                                        \n                                            surname\n                                        \n                                \n                                \n                                        \n                                            type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        phoneNumber\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        phoneNumber:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        surname\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        surname:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Role } from '../../roles/models/roles.model';\nexport interface Payload {\n  email: string;\n  userId: number;\n  userActivationLink: string;\n  isUserActivated: boolean;\n  roles?: Role[];\n}\n\nexport interface Tokens {\n  refreshToken: string;\n  accessToken: string;\n  expireDate: Date;\n}\n\nexport interface AuthUser {\n  accessToken: string;\n  user: ReturnedUser | ReturnedAdmin | ReturnedOwner;\n}\n\nexport interface ReturnedUser {\n  id: number;\n  name: string;\n  surname: string;\n  phoneNumber: string;\n  email: string;\n  country: string | null;\n  city: string | null;\n  postOffice: string | null;\n  type: 'USER';\n}\n\nexport interface ReturnedOwner {\n  id: number;\n  name: string;\n  surname: string;\n  phoneNumber: string;\n  email: string;\n  type: 'OWNER';\n}\n\nexport interface ReturnedAdmin {\n  id: number;\n  name: string;\n  surname: string;\n  phoneNumber: string;\n  email: string;\n  type: 'ADMIN';\n}\n\nexport interface CodeDto {\n  type: 'OWNER' | 'ADMIN' | null;\n  email: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ReturnedProduct.html":{"url":"interfaces/ReturnedProduct.html","title":"interface - ReturnedProduct","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ReturnedProduct\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/interfaces/product.interfaces.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            categories\n                                        \n                                \n                                \n                                        \n                                            colours\n                                        \n                                \n                                \n                                        \n                                            description\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            images\n                                        \n                                \n                                \n                                        \n                                            price\n                                        \n                                \n                                \n                                        \n                                            quantity\n                                        \n                                \n                                \n                                        \n                                            reviews\n                                        \n                                \n                                \n                                        \n                                            sizeChartImage\n                                        \n                                \n                                \n                                        \n                                            sizes\n                                        \n                                \n                                \n                                        \n                                            title\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        categories\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        categories:         ReturnedCategory[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ReturnedCategory[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        colours\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        colours:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        description:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        images\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        images:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        price\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        price:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        quantity\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        quantity:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        reviews\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        reviews:         ReturnedReview[] | \n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ReturnedReview[] | \n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sizeChartImage\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        sizeChartImage:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sizes\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        sizes:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        title:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface ProductCreationAttrs {\n  title: string;\n  description: string;\n  ownerId?: number;\n  adminId?: number;\n  images: string[];\n  price: number;\n  sizeChartImage: string;\n  sizes: string[];\n  colours: string[];\n}\n\nexport interface ReviewCreationAtrb {\n  name: string;\n  surname: string;\n  review: string;\n}\n\nexport interface ReturnedReview {\n  id: number;\n  name: string;\n  surname: string;\n  review: string;\n  createdAt: any;\n  updatedAt: any;\n}\n\nexport interface CategoryCreationAtrb {\n  ua: string;\n  ru: string;\n  rs: string;\n  en: string;\n}\n\nexport interface ReturnedProduct {\n  id: number;\n  title: {\n    ua: string;\n    ru: string;\n    rs: string;\n    en: string;\n  };\n  description: {\n    ua: string;\n    ru: string;\n    rs: string;\n    en: string;\n  };\n  price: number;\n  quantity: number;\n  images: string[];\n  sizeChartImage: string;\n  sizes: string[];\n  colours: string[];\n  categories: ReturnedCategory[];  \n  reviews: ReturnedReview[] | [];\n}\n\nexport interface ReturnedProducts {\n  products: ReturnedProduct[];\n  totalItems: number;\n}\n\nexport interface ReturnedCategory {\n  id: number;\n  ua: string;\n  en: string;\n  rs: string;\n  ru: string;\n  createdAt: any;\n  updatedAt: any;\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ReturnedProducts.html":{"url":"interfaces/ReturnedProducts.html","title":"interface - ReturnedProducts","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ReturnedProducts\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/interfaces/product.interfaces.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            products\n                                        \n                                \n                                \n                                        \n                                            totalItems\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        products\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        products:         ReturnedProduct[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ReturnedProduct[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        totalItems\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        totalItems:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface ProductCreationAttrs {\n  title: string;\n  description: string;\n  ownerId?: number;\n  adminId?: number;\n  images: string[];\n  price: number;\n  sizeChartImage: string;\n  sizes: string[];\n  colours: string[];\n}\n\nexport interface ReviewCreationAtrb {\n  name: string;\n  surname: string;\n  review: string;\n}\n\nexport interface ReturnedReview {\n  id: number;\n  name: string;\n  surname: string;\n  review: string;\n  createdAt: any;\n  updatedAt: any;\n}\n\nexport interface CategoryCreationAtrb {\n  ua: string;\n  ru: string;\n  rs: string;\n  en: string;\n}\n\nexport interface ReturnedProduct {\n  id: number;\n  title: {\n    ua: string;\n    ru: string;\n    rs: string;\n    en: string;\n  };\n  description: {\n    ua: string;\n    ru: string;\n    rs: string;\n    en: string;\n  };\n  price: number;\n  quantity: number;\n  images: string[];\n  sizeChartImage: string;\n  sizes: string[];\n  colours: string[];\n  categories: ReturnedCategory[];  \n  reviews: ReturnedReview[] | [];\n}\n\nexport interface ReturnedProducts {\n  products: ReturnedProduct[];\n  totalItems: number;\n}\n\nexport interface ReturnedCategory {\n  id: number;\n  ua: string;\n  en: string;\n  rs: string;\n  ru: string;\n  createdAt: any;\n  updatedAt: any;\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ReturnedReview.html":{"url":"interfaces/ReturnedReview.html","title":"interface - ReturnedReview","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ReturnedReview\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/interfaces/product.interfaces.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            createdAt\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            review\n                                        \n                                \n                                \n                                        \n                                            surname\n                                        \n                                \n                                \n                                        \n                                            updatedAt\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        createdAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        createdAt:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        review\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        review:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        surname\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        surname:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        updatedAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        updatedAt:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface ProductCreationAttrs {\n  title: string;\n  description: string;\n  ownerId?: number;\n  adminId?: number;\n  images: string[];\n  price: number;\n  sizeChartImage: string;\n  sizes: string[];\n  colours: string[];\n}\n\nexport interface ReviewCreationAtrb {\n  name: string;\n  surname: string;\n  review: string;\n}\n\nexport interface ReturnedReview {\n  id: number;\n  name: string;\n  surname: string;\n  review: string;\n  createdAt: any;\n  updatedAt: any;\n}\n\nexport interface CategoryCreationAtrb {\n  ua: string;\n  ru: string;\n  rs: string;\n  en: string;\n}\n\nexport interface ReturnedProduct {\n  id: number;\n  title: {\n    ua: string;\n    ru: string;\n    rs: string;\n    en: string;\n  };\n  description: {\n    ua: string;\n    ru: string;\n    rs: string;\n    en: string;\n  };\n  price: number;\n  quantity: number;\n  images: string[];\n  sizeChartImage: string;\n  sizes: string[];\n  colours: string[];\n  categories: ReturnedCategory[];  \n  reviews: ReturnedReview[] | [];\n}\n\nexport interface ReturnedProducts {\n  products: ReturnedProduct[];\n  totalItems: number;\n}\n\nexport interface ReturnedCategory {\n  id: number;\n  ua: string;\n  en: string;\n  rs: string;\n  ru: string;\n  createdAt: any;\n  updatedAt: any;\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ReturnedUser.html":{"url":"interfaces/ReturnedUser.html","title":"interface - ReturnedUser","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ReturnedUser\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/interfaces/auth.interfaces.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            city\n                                        \n                                \n                                \n                                        \n                                            country\n                                        \n                                \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            phoneNumber\n                                        \n                                \n                                \n                                        \n                                            postOffice\n                                        \n                                \n                                \n                                        \n                                            surname\n                                        \n                                \n                                \n                                        \n                                            type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        city\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        city:     string | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        country\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        country:     string | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        phoneNumber\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        phoneNumber:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        postOffice\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        postOffice:     string | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        surname\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        surname:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Role } from '../../roles/models/roles.model';\nexport interface Payload {\n  email: string;\n  userId: number;\n  userActivationLink: string;\n  isUserActivated: boolean;\n  roles?: Role[];\n}\n\nexport interface Tokens {\n  refreshToken: string;\n  accessToken: string;\n  expireDate: Date;\n}\n\nexport interface AuthUser {\n  accessToken: string;\n  user: ReturnedUser | ReturnedAdmin | ReturnedOwner;\n}\n\nexport interface ReturnedUser {\n  id: number;\n  name: string;\n  surname: string;\n  phoneNumber: string;\n  email: string;\n  country: string | null;\n  city: string | null;\n  postOffice: string | null;\n  type: 'USER';\n}\n\nexport interface ReturnedOwner {\n  id: number;\n  name: string;\n  surname: string;\n  phoneNumber: string;\n  email: string;\n  type: 'OWNER';\n}\n\nexport interface ReturnedAdmin {\n  id: number;\n  name: string;\n  surname: string;\n  phoneNumber: string;\n  email: string;\n  type: 'ADMIN';\n}\n\nexport interface CodeDto {\n  type: 'OWNER' | 'ADMIN' | null;\n  email: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Review.html":{"url":"classes/Review.html","title":"class - Review","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Review\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/reviews/models/review.model.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    Model\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                id\n                            \n                            \n                                    Public\n                                name\n                            \n                            \n                                    Public\n                                product\n                            \n                            \n                                    Public\n                                productId\n                            \n                            \n                                    Public\n                                review\n                            \n                            \n                                    Public\n                                surname\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: undefined, unique: true, autoIncrement: true, primaryKey: true, field: 'id'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/reviews/models/review.model.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: undefined, unique: false, field: 'name'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/reviews/models/review.model.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        product\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Product\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @BelongsToMany(undefined, undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/reviews/models/review.model.ts:54\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        productId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ForeignKey(undefined)@Column({type: undefined, field: 'productId'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/reviews/models/review.model.ts:51\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        review\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: undefined, unique: false, field: 'review'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/reviews/models/review.model.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        surname\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: undefined, unique: false, field: 'surname'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/reviews/models/review.model.ts:37\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  Column,\n  DataType,\n  Table,\n  Model,\n  ForeignKey,\n  BelongsToMany,\n  BelongsTo,\n} from 'sequelize-typescript';\nimport { ReviewCreationAtrb } from '../../core/interfaces/product.interfaces';\nimport { Product } from '../../product/models/product.model';\nimport { ProductReviews } from './product.reviews.model';\n\n@Table({ tableName: 'REVIEWS' })\nexport class Review extends Model {\n  @Column({\n    type: DataType.INTEGER,\n    unique: true,\n    autoIncrement: true,\n    primaryKey: true,\n    field: 'id',\n  })\n  public id: number;\n\n  @Column({\n    type: DataType.STRING,\n    unique: false,\n    field: 'name',\n  })\n  public name: string;\n\n  @Column({\n    type: DataType.STRING,\n    unique: false,\n    field: 'surname',\n  })\n  public surname: string;\n\n  @Column({\n    type: DataType.STRING,\n    unique: false,\n    field: 'review',\n  })\n  public review: string;\n\n  @ForeignKey(() => Product)\n  @Column({\n    type: DataType.INTEGER,\n    field: 'productId',\n  })\n  public productId: number;\n\n  @BelongsToMany(() => Product, () => ProductReviews)\n  public product: Product;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ReviewCreationAtrb.html":{"url":"interfaces/ReviewCreationAtrb.html","title":"interface - ReviewCreationAtrb","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ReviewCreationAtrb\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/interfaces/product.interfaces.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            review\n                                        \n                                \n                                \n                                        \n                                            surname\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        review\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        review:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        surname\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        surname:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface ProductCreationAttrs {\n  title: string;\n  description: string;\n  ownerId?: number;\n  adminId?: number;\n  images: string[];\n  price: number;\n  sizeChartImage: string;\n  sizes: string[];\n  colours: string[];\n}\n\nexport interface ReviewCreationAtrb {\n  name: string;\n  surname: string;\n  review: string;\n}\n\nexport interface ReturnedReview {\n  id: number;\n  name: string;\n  surname: string;\n  review: string;\n  createdAt: any;\n  updatedAt: any;\n}\n\nexport interface CategoryCreationAtrb {\n  ua: string;\n  ru: string;\n  rs: string;\n  en: string;\n}\n\nexport interface ReturnedProduct {\n  id: number;\n  title: {\n    ua: string;\n    ru: string;\n    rs: string;\n    en: string;\n  };\n  description: {\n    ua: string;\n    ru: string;\n    rs: string;\n    en: string;\n  };\n  price: number;\n  quantity: number;\n  images: string[];\n  sizeChartImage: string;\n  sizes: string[];\n  colours: string[];\n  categories: ReturnedCategory[];  \n  reviews: ReturnedReview[] | [];\n}\n\nexport interface ReturnedProducts {\n  products: ReturnedProduct[];\n  totalItems: number;\n}\n\nexport interface ReturnedCategory {\n  id: number;\n  ua: string;\n  en: string;\n  rs: string;\n  ru: string;\n  createdAt: any;\n  updatedAt: any;\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/ReviewsController.html":{"url":"controllers/ReviewsController.html","title":"controller - ReviewsController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  ReviewsController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/reviews/reviews.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                reviews\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createReview\n                            \n                            \n                                deleteReview\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        createReview\n                        \n                    \n                \n            \n            \n                \ncreateReview(createReviewDto: CreateReviewDto, productId: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Throttle(70, 700)@Put('create_review')\n                \n            \n\n            \n                \n                    Defined in src/reviews/reviews.controller.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createReviewDto\n                                    \n                                                CreateReviewDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    productId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteReview\n                        \n                    \n                \n            \n            \n                \ndeleteReview(reviewId: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Throttle(70, 700)@Delete('delete_review')@Roles('OWNER', 'ADMIN')@UseGuards(JwtAuthGuard, RolesGuard, OwnerAdminGuard, AuthFerfershGuard, EditContentGuard)@HttpCode(201)\n                \n            \n\n            \n                \n                    Defined in src/reviews/reviews.controller.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    reviewId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n    Body,\n    CacheInterceptor,\n    ClassSerializerInterceptor,\n    Controller,\n    Delete,\n    HttpCode,\n    ParseIntPipe,\n    Put,\n    Query,\n    UseFilters,\n    UseGuards,\n    UseInterceptors\n} from '@nestjs/common';\nimport { Throttle } from '@nestjs/throttler';\nimport { Roles } from '../common/decorators/roles-auth.decorator';\nimport { AuthFerfershGuard } from '../common/guards/jw-refresh.guard';\nimport { JwtAuthGuard } from '../common/guards/jwt-auth.guard';\nimport { OwnerAdminGuard } from '../common/guards/owner-admin.guard';\nimport { RolesGuard } from '../common/guards/roles.guard';\nimport { ApiExceptionFilter } from '../common/filters/api-exception.filter';\nimport { ApiErrorExceptionFilter } from '../common/filters/error-handler.filter';\nimport { ThrottlerBehindProxyGuard } from '../common/guards/throttler-behind-proxy.guard';\nimport { CreateReviewDto } from './create.review.dto';\nimport { ReviewsService } from './reviews.service';\nimport { EditContentGuard } from '../common/guards/edit-content.guard';\n\n@UseGuards(ThrottlerBehindProxyGuard)\n@UseFilters(ApiErrorExceptionFilter, ApiExceptionFilter)\n@UseInterceptors(CacheInterceptor, ClassSerializerInterceptor)\n@Controller('reviews')\nexport class ReviewsController {\n    constructor(\n        private readonly reviewsService: ReviewsService,\n    ) {}\n    \n    @Throttle(70, 700)\n    @Put('create_review')\n    createReview(\n        @Body() createReviewDto: CreateReviewDto,\n        @Query('productId', ParseIntPipe) productId: number\n    ) {\n        try {\n            return this.reviewsService.createReview(createReviewDto, productId);\n        } catch (error) {\n            throw error;\n        }\n    }\n\n    @Throttle(70, 700)\n    @Delete('delete_review')\n    @Roles('OWNER', 'ADMIN')\n    @UseGuards(JwtAuthGuard, RolesGuard, OwnerAdminGuard, AuthFerfershGuard, EditContentGuard)\n    @HttpCode(201)\n    deleteReview(\n        @Query('reviewId', ParseIntPipe) reviewId: number\n    ) {\n        try {\n            return this.reviewsService.deleteReview(reviewId);\n        } catch (error) {\n            throw error;\n        }\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ReviewsModule.html":{"url":"modules/ReviewsModule.html","title":"module - ReviewsModule","body":"\n                   \n\n\n\n\n    Modules\n    ReviewsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_ReviewsModule\n\n\n\ncluster_ReviewsModule_providers\n\n\n\n\nCategoriesService\n\nCategoriesService\n\n\n\nReviewsModule\n\nReviewsModule\n\nReviewsModule -->\n\nCategoriesService->ReviewsModule\n\n\n\n\n\nProductService\n\nProductService\n\nReviewsModule -->\n\nProductService->ReviewsModule\n\n\n\n\n\nReviewsService\n\nReviewsService\n\nReviewsModule -->\n\nReviewsService->ReviewsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/reviews/reviews.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            CategoriesService\n                        \n                        \n                            ProductService\n                        \n                        \n                            ReviewsService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            ReviewsController\n                        \n                    \n                \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        configure\n                        \n                    \n                \n            \n            \n                \nconfigure(consumer: MiddlewareConsumer)\n                \n            \n\n\n            \n                \n                    Defined in src/reviews/reviews.module.ts:76\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    consumer\n                                    \n                                            MiddlewareConsumer\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        import { forwardRef, MiddlewareConsumer, Module, NestModule, RequestMethod } from '@nestjs/common';\nimport { ConfigModule } from '@nestjs/config';\nimport { SequelizeModule } from '@nestjs/sequelize';\nimport { CategoriesService } from '../categories/categories.service';\nimport { InitializeUserMiddleware } from '../common/middlewares/initialize-user.middleware';\nimport { AdminModule } from '../admin/admin.module';\nimport { Admin } from '../admin/models/admin.model';\nimport { AdminRefreshToken } from '../admin/models/admin.refresh.token.model';\nimport { AuthModule } from '../auth/auth.module';\nimport { CartModule } from '../cart/cart.module';\nimport { CartProduct } from '../cart/models/cart.product.model';\nimport { Cart } from '../cart/models/cart.model';\nimport { CategoriesModule } from '../categories/categories.module';\nimport { Category } from '../categories/models/category.model';\nimport { ProductCategories } from '../categories/models/product.categories.model';\nimport { Order } from '../orders/models/order.model';\nimport { OrderProduct } from '../orders/models/order.product.model';\nimport { OrdersModule } from '../orders/orders.module';\nimport { Owner } from '../owner/models/owner.model';\nimport { OwnerRefreshToken } from '../owner/models/owner.refresh.token.model';\nimport { OwnerModule } from '../owner/owner.module';\nimport { Product } from '../product/models/product.model';\nimport { ProductService } from '../product/product.service';\nimport { Role } from '../roles/models/roles.model';\nimport { UserRoles } from '../roles/models/user.roles.model';\nimport { RolesModule } from '../roles/roles.module';\nimport { User } from '../users/models/user.model';\nimport { UserRefreshToken } from '../users/models/user.refresh.token.model';\nimport { UsersModule } from '../users/users.module';\nimport { ProductReviews } from './models/product.reviews.model';\nimport { Review } from './models/review.model';\nimport { ReviewsController } from './reviews.controller';\nimport { ReviewsService } from './reviews.service';\nimport { CreateReviewDto } from './create.review.dto';\nimport RequestValidator from '../common/pipes/body-validator.pipe';\n\n@Module({\n  controllers: [ReviewsController],\n  providers: [ReviewsService, ProductService, CategoriesService],\n  imports: [\n    ConfigModule.forRoot({\n      envFilePath: `.${process.env.NODE_ENV}.env`,\n      expandVariables: true,\n      isGlobal: true,\n    }),\n    SequelizeModule.forFeature([\n      ProductReviews,\n      Review,\n      Product,\n      Order,\n      OrderProduct,\n      Category,\n      ProductCategories,\n      Admin,\n      AdminRefreshToken,\n      Owner,\n      OwnerRefreshToken,\n      User,\n      UserRefreshToken,\n      Role,\n      UserRoles,\n      Cart,\n      CartProduct,\n    ]),\n    forwardRef(() => OrdersModule),\n    forwardRef(() => CartModule),\n    forwardRef(() => CategoriesModule),\n    forwardRef(() => AdminModule),\n    forwardRef(() => RolesModule),\n    forwardRef(() => AuthModule),\n    forwardRef(() => OwnerModule),\n    forwardRef(() => UsersModule),\n  ],\n})\nexport class ReviewsModule implements NestModule{\n  configure(consumer: MiddlewareConsumer) {\n    consumer\n      .apply(RequestValidator.validate(CreateReviewDto))\n      .forRoutes(\n        { path: 'reviews/create_review', method: RequestMethod.DELETE },\n      );\n    consumer\n      .apply(InitializeUserMiddleware)\n      .forRoutes(\n        { path: 'reviews/delete_review', method: RequestMethod.DELETE },\n      );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ReviewsService.html":{"url":"injectables/ReviewsService.html","title":"injectable - ReviewsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ReviewsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/reviews/reviews.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                Logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createReview\n                            \n                            \n                                    Async\n                                deleteReview\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(reviewRepository, productService: ProductService)\n                    \n                \n                        \n                            \n                                Defined in src/reviews/reviews.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        reviewRepository\n                                                  \n                                                        \n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        productService\n                                                  \n                                                        \n                                                                        ProductService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        createReview\n                        \n                    \n                \n            \n            \n                \n                    \n                    createReview(createdReviewDto: CreateReviewDto, productId: number)\n                \n            \n\n\n            \n                \n                    Defined in src/reviews/reviews.service.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createdReviewDto\n                                    \n                                                CreateReviewDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    productId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        deleteReview\n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteReview(reviewId: number)\n                \n            \n\n\n            \n                \n                    Defined in src/reviews/reviews.service.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    reviewId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        Logger\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Logger(ProductService.name)\n                    \n                \n                    \n                        \n                                Defined in src/reviews/reviews.service.ts:9\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Logger, Scope } from '@nestjs/common';\nimport { InjectModel } from '@nestjs/sequelize';\nimport { ProductService } from '../product/product.service';\nimport { CreateReviewDto } from './create.review.dto';\nimport { Review } from './models/review.model';\n\n@Injectable({ scope: Scope.TRANSIENT })\nexport class ReviewsService {\n    private readonly Logger = new Logger(ProductService.name);\n    constructor(\n        @InjectModel(Review) private readonly reviewRepository: typeof Review,\n        private readonly productService: ProductService,\n    ) {}\n    \n    async createReview(\n        createdReviewDto: CreateReviewDto,\n        productId: number\n    ) {\n        const product = await this.productService.findById(productId);\n        const review = await this.reviewRepository.create(createdReviewDto);\n        if (!product.reviews) {\n            product.$set('reviews', review.id);\n            product.reviews = [review];\n        } else {\n            product.$add('categories', review.id);\n        }\n        review.productId = product.id;\n        review.$add('product', product.id);\n        await review.save();\n        await product.save();\n        return review;\n    }\n\n    async deleteReview(reviewId: number): Promise {\n        const review = await this.reviewRepository.findByPk(reviewId);\n        const product = await this.productService.findById(review.productId);\n        product.$remove('reviews', review.id);\n        await product.save();\n        const deleted = await this.reviewRepository.destroy({\n            where: {\n                id: review.id,\n                name: review.name,\n                surname: review.surname,\n                review: review.review,\n            }\n        });\n        return deleted;\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Role.html":{"url":"classes/Role.html","title":"class - Role","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Role\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/roles/models/roles.model.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    Model\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                admins\n                            \n                            \n                                    Public\n                                description\n                            \n                            \n                                    Public\n                                id\n                            \n                            \n                                    Private\n                                owners\n                            \n                            \n                                    Private\n                                users\n                            \n                            \n                                    Public\n                                value\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getAdmins\n                            \n                            \n                                getOwners\n                            \n                            \n                                getUsers\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        admins\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Admin[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @BelongsToMany(undefined, undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/roles/models/roles.model.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'Admin', description: 'Role`s description'})@Column({type: undefined, unique: false, allowNull: false, field: 'description'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/roles/models/roles.model.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: '1', description: 'unique identifier'})@Column({type: undefined, unique: true, autoIncrement: true, primaryKey: true, allowNull: false, field: 'id'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/roles/models/roles.model.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        owners\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Owner[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @BelongsToMany(undefined, undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/roles/models/roles.model.ts:50\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        users\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @BelongsToMany(undefined, undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/roles/models/roles.model.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        value\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'ADMIN', description: 'User`s role'})@Column({type: undefined, unique: true, allowNull: false, field: 'value'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/roles/models/roles.model.ts:34\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getAdmins\n                        \n                    \n                \n            \n            \n                \ngetAdmins()\n                \n            \n\n\n            \n                \n                    Defined in src/roles/models/roles.model.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Admin[]\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getOwners\n                        \n                    \n                \n            \n            \n                \ngetOwners()\n                \n            \n\n\n            \n                \n                    Defined in src/roles/models/roles.model.ts:60\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Owner[]\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getUsers\n                        \n                    \n                \n            \n            \n                \ngetUsers()\n                \n            \n\n\n            \n                \n                    Defined in src/roles/models/roles.model.ts:52\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         User[]\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport {\n  Column,\n  DataType,\n  Table,\n  Model,\n  BelongsToMany,\n} from 'sequelize-typescript';\nimport { RolecreationAttrbs } from '../../core/interfaces/user.interfaces';\nimport { Admin } from '../../admin/models/admin.model';\nimport { Owner } from '../../owner/models/owner.model';\nimport { User } from '../../users/models/user.model';\nimport { UserRoles } from './user.roles.model';\n\n@Table({ tableName: 'ROLES' })\nexport class Role extends Model {\n  @ApiProperty({ example: '1', description: 'unique identifier' })\n  @Column({\n    type: DataType.INTEGER,\n    unique: true,\n    autoIncrement: true,\n    primaryKey: true,\n    allowNull: false,\n    field: 'id',\n  })\n  public id: number;\n  @ApiProperty({ example: 'ADMIN', description: 'User`s role' })\n  @Column({\n    type: DataType.STRING,\n    unique: true,\n    allowNull: false,\n    field: 'value',\n  })\n  public value: string;\n  @ApiProperty({ example: 'Admin', description: 'Role`s description' })\n  @Column({\n    type: DataType.STRING,\n    unique: false,\n    allowNull: false,\n    field: 'description',\n  })\n  public description: string;\n  @BelongsToMany(() => User, () => UserRoles)\n  private users: User[];\n\n  @BelongsToMany(() => Admin, () => UserRoles)\n  private admins: Admin[];\n\n  @BelongsToMany(() => Owner, () => UserRoles)\n  private owners: Owner[];\n\n  getUsers(): User[] {\n    return this.users;\n  }\n\n  getAdmins(): Admin[] {\n    return this.admins;\n  }\n\n  getOwners(): Owner[] {\n    return this.owners;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/RolecreationAttrbs.html":{"url":"interfaces/RolecreationAttrbs.html","title":"interface - RolecreationAttrbs","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  RolecreationAttrbs\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/interfaces/user.interfaces.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            description\n                                        \n                                \n                                \n                                        \n                                            value\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        value\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        value:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface UserRefreshCreationAttrbs {\n  userId: number;\n  userRefreshToken: string;\n  userAgent: string;\n  email: string;\n}\n\nexport interface RolecreationAttrbs {\n  value: string;\n  description: string;\n}\nexport interface UsercreationAttrbs {\n  name: string;\n  surname: string;\n  email: string;\n  phoneNumber: string;\n  password: string;\n  activationLink: string;\n}\n\nexport interface InitializeUser {\n  name: string;\n  surname: string;\n  phoneNumber: string;\n  email: string;\n  password: string;\n  confirmPassword: string;\n}\n\nexport interface ValidateUser {\n  email: string;\n  password: string;\n}\n\nexport interface UserInterface {\n  id: number;\n  name: string;\n  surname: string;\n  email: string;\n  phoneNumber: string;\n  isAdmin: boolean;\n  addContent: boolean;\n  editContent: boolean;\n  editWebsite: boolean;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/RolesController.html":{"url":"controllers/RolesController.html","title":"controller - RolesController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  RolesController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/roles/roles.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                /roles\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createRole\n                            \n                            \n                                getRoleByValue\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        createRole\n                        \n                    \n                \n            \n            \n                \ncreateRole(roleDto: CreateRoleDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Throttle(70, 700)@ApiOperation({summary: 'Creating Roles'})@ApiResponse({status: 200, type: Role})@Roles('OWNER', 'ADMIN')@HttpCode(201)@UseGuards(JwtAuthGuard, RolesGuard, OwnerAdminGuard, AuthFerfershGuard, AddContentGuard)@Put('/create_role')\n                \n            \n\n            \n                \n                    Defined in src/roles/roles.controller.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    roleDto\n                                    \n                                                CreateRoleDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getRoleByValue\n                        \n                    \n                \n            \n            \n                \ngetRoleByValue(value: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Throttle(70, 700)@ApiOperation({summary: 'Getting Roles'})@ApiResponse({status: 200, type: Role})@Roles('OWNER', 'ADMIN')@UseGuards(JwtAuthGuard, RolesGuard, OwnerAdminGuard, AuthFerfershGuard, AddContentGuard)@Get('get/:value')\n                \n            \n\n            \n                \n                    Defined in src/roles/roles.controller.ts:69\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Body,\n  CacheInterceptor,\n  Controller,\n  Get,\n  HttpCode,\n  Param,\n  Put,\n  UseFilters,\n  UseGuards,\n  UseInterceptors,\n} from '@nestjs/common';\nimport { ApiOperation, ApiResponse, ApiTags } from '@nestjs/swagger';\nimport { Roles } from '../common/decorators/roles-auth.decorator';\nimport { AddContentGuard } from '../common/guards/add-content.guard';\nimport { AuthFerfershGuard } from '../common/guards/jw-refresh.guard';\nimport { JwtAuthGuard } from '../common/guards/jwt-auth.guard';\nimport { OwnerAdminGuard } from '../common/guards/owner-admin.guard';\nimport { RolesGuard } from '../common/guards/roles.guard';\nimport { ApiErrorExceptionFilter } from '../common/filters/error-handler.filter';\nimport { CreateRoleDto } from './dto/create.role.dto';\nimport { Role } from './models/roles.model';\nimport { RolesService } from './roles.service';\nimport { Throttle } from '@nestjs/throttler';\nimport { ApiExceptionFilter } from '../common/filters/api-exception.filter';\nimport { ThrottlerBehindProxyGuard } from '../common/guards/throttler-behind-proxy.guard';\n@UseGuards(ThrottlerBehindProxyGuard)\n@ApiTags('roles')\n@UseFilters(ApiErrorExceptionFilter, ApiExceptionFilter)\n@Controller('/roles')\n@UseInterceptors(CacheInterceptor)\nexport class RolesController {\n  constructor(private readonly roleService: RolesService) {}\n  // tslint:disable-next-line: promise-function-async\n  @Throttle(70, 700)\n  @ApiOperation({ summary: 'Creating Roles' })\n  @ApiResponse({ status: 200, type: Role })\n  @Roles('OWNER', 'ADMIN')\n  @HttpCode(201)\n  @UseGuards(\n    JwtAuthGuard,\n    RolesGuard,\n    OwnerAdminGuard,\n    AuthFerfershGuard,\n    AddContentGuard,\n  )\n  @Put('/create_role')\n  createRole(@Body() roleDto: CreateRoleDto): Promise {\n    try {\n      return this.roleService.createRole(roleDto);\n    } catch (error) {\n      throw error;\n    }\n  }\n\n  // tslint:disable-next-line: promise-function-async\n  @Throttle(70, 700)\n  @ApiOperation({ summary: 'Getting Roles' })\n  @ApiResponse({ status: 200, type: Role })\n  @Roles('OWNER', 'ADMIN')\n  @UseGuards(\n    JwtAuthGuard,\n    RolesGuard,\n    OwnerAdminGuard,\n    AuthFerfershGuard,\n    AddContentGuard,\n  )\n  @Get('get/:value')\n  getRoleByValue(@Param('value') value: string): Promise {\n    try {\n      return this.roleService.getRoleByValue(value);\n    } catch (error) {\n      throw error;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/RolesGuard.html":{"url":"guards/RolesGuard.html","title":"guard - RolesGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    RolesGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/common/guards/roles.guard.ts\n            \n\n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService, reflector: Reflector)\n                    \n                \n                        \n                            \n                                Defined in src/common/guards/roles.guard.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        reflector\n                                                  \n                                                        \n                                                                    Reflector\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate(context: ExecutionContext)\n                \n            \n\n\n            \n                \n                    Defined in src/common/guards/roles.guard.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                            ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     boolean | Promise | Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import {\n  CanActivate,\n  ExecutionContext,\n  HttpException,\n  HttpStatus,\n  Injectable,\n  Scope,\n} from '@nestjs/common';\nimport { Reflector } from '@nestjs/core';\nimport { Observable } from 'rxjs';\nimport { AuthService } from '../../auth/auth.service';\nimport { ROLES_KEY } from '../decorators/roles-auth.decorator';\nimport { Payload } from '../../core/interfaces/auth.interfaces';\nimport { USER_NOT_AUTHORIZIED } from '../../auth/auth.constants';\nimport { ApiException } from '../exceptions/api.exception';\nimport { ACCESS_DENIED } from '../../admin/constants/admin.constants';\n@Injectable({ scope: Scope.REQUEST })\nexport class RolesGuard implements CanActivate {\n  constructor(private authService: AuthService, private reflector: Reflector) {}\n\n  canActivate(\n    context: ExecutionContext,\n  ): boolean | Promise | Observable {\n    return (async () => {\n      try {\n        const requiredRoles: string[] = this.reflector.getAllAndOverride(\n          ROLES_KEY,\n          [context.getHandler(), context.getClass()],\n        );\n        if (!requiredRoles) {\n          return true;\n        }\n        const req = context.switchToHttp().getRequest();\n        const authHeader = req.headers.authorization;\n        const bearer = authHeader.split(' ')[0];\n        const token = authHeader.split(' ')[1];\n        if (bearer !== 'Bearer' || !token) {\n          throw new ApiException(HttpStatus.UNAUTHORIZED, 'Unathorized!', USER_NOT_AUTHORIZIED);\n        }\n        const decodedToken = Buffer.from(token, 'base64').toString('ascii');\n        let payload: Payload;\n        try {\n          payload = await this.authService.validateAccessToken(decodedToken);\n        } catch (err) {\n          throw new ApiException(HttpStatus.UNAUTHORIZED, 'Unathorized!', USER_NOT_AUTHORIZIED);\n        }\n        if (!payload) {\n          throw new ApiException(HttpStatus.UNAUTHORIZED, 'Unathorized!', USER_NOT_AUTHORIZIED);\n        }\n        req.payload = payload;\n        if (\n          !payload.roles.some(\n          (role: { value: string; description: string }) =>\n            requiredRoles.includes(role.value))\n        ) {\n          throw new ApiException(HttpStatus.UNAUTHORIZED, 'Unathorized!', ACCESS_DENIED);\n        }\n        return true;\n      } catch (err) {\n        throw new ApiException(HttpStatus.UNAUTHORIZED, 'Unathorized!', ACCESS_DENIED);\n      }\n    })();\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/RolesModule.html":{"url":"modules/RolesModule.html","title":"module - RolesModule","body":"\n                   \n\n\n\n\n    Modules\n    RolesModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_RolesModule\n\n\n\ncluster_RolesModule_providers\n\n\n\ncluster_RolesModule_exports\n\n\n\n\nRolesService \n\nRolesService \n\n\n\nRolesModule\n\nRolesModule\n\nRolesService  -->\n\nRolesModule->RolesService \n\n\n\n\n\nAuthService\n\nAuthService\n\nRolesModule -->\n\nAuthService->RolesModule\n\n\n\n\n\nRolesService\n\nRolesService\n\nRolesModule -->\n\nRolesService->RolesModule\n\n\n\n\n\nTasksService\n\nTasksService\n\nRolesModule -->\n\nTasksService->RolesModule\n\n\n\n\n\nUserJwtRefreshTokenService\n\nUserJwtRefreshTokenService\n\nRolesModule -->\n\nUserJwtRefreshTokenService->RolesModule\n\n\n\n\n\nUsersService\n\nUsersService\n\nRolesModule -->\n\nUsersService->RolesModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/roles/roles.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AuthService\n                        \n                        \n                            RolesService\n                        \n                        \n                            TasksService\n                        \n                        \n                            UserJwtRefreshTokenService\n                        \n                        \n                            UsersService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            RolesController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            RolesService\n                        \n                    \n                \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        configure\n                        \n                    \n                \n            \n            \n                \nconfigure(consumer: MiddlewareConsumer)\n                \n            \n\n\n            \n                \n                    Defined in src/roles/roles.module.ts:87\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    consumer\n                                    \n                                            MiddlewareConsumer\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        import {\n  forwardRef,\n  MiddlewareConsumer,\n  Module,\n  NestModule,\n  RequestMethod,\n} from '@nestjs/common';\nimport { RolesController } from './roles.controller';\nimport { RolesService } from './roles.service';\nimport { SequelizeModule } from '@nestjs/sequelize';\nimport { Role } from './models/roles.model';\nimport { User } from '../users/models/user.model';\nimport { UserRoles } from './models/user.roles.model';\nimport { ConfigModule } from '@nestjs/config';\nimport { OrderProduct } from '../orders/models/order.product.model';\nimport { Admin } from '../admin/models/admin.model';\nimport { AdminRefreshToken } from '../admin/models/admin.refresh.token.model';\nimport { CartProduct } from '../cart/models/cart.product.model';\nimport { Cart } from '../cart/models/cart.model';\nimport { Category } from '../categories/models/category.model';\nimport { ProductCategories } from '../categories/models/product.categories.model';\nimport { Order } from '../orders/models/order.model';\nimport { Owner } from '../owner/models/owner.model';\nimport { OwnerRefreshToken } from '../owner/models/owner.refresh.token.model';\nimport { Product } from '../product/models/product.model';\nimport { UserRefreshToken } from '../users/models/user.refresh.token.model';\nimport { AuthService } from '../auth/auth.service';\nimport { AdminModule } from '../admin/admin.module';\nimport { AuthModule } from '../auth/auth.module';\nimport { CoreModule } from '../core/core.module';\nimport { MailModule } from '../mail/mail.module';\nimport { OwnerModule } from '../owner/owner.module';\nimport { ProductModule } from '../product/product.module';\nimport { UsersModule } from '../users/users.module';\nimport { UsersService } from '../users/services/users.service';\nimport { TasksService } from '../core/services/scedule.service';\nimport { UserJwtRefreshTokenService } from '../users/services/jwt-refresh.service';\nimport { InitializeUserMiddleware } from '../common/middlewares/initialize-user.middleware';\n@Module({\n  controllers: [RolesController],\n  providers: [\n    RolesService,\n    AuthService,\n    UsersService,\n    TasksService,\n    UserJwtRefreshTokenService,\n  ],\n  imports: [\n    ConfigModule.forRoot({\n      envFilePath: `.${process.env.NODE_ENV}.env`,\n      expandVariables: true,\n      isGlobal: true,\n    }),\n    ConfigModule.forRoot({\n      envFilePath: `.${process.env.NODE_ENV}.env`,\n      expandVariables: true,\n      isGlobal: true,\n    }),\n    SequelizeModule.forFeature([\n      Product,\n      Order,\n      OrderProduct,\n      Category,\n      ProductCategories,\n      Admin,\n      AdminRefreshToken,\n      Owner,\n      OwnerRefreshToken,\n      User,\n      UserRefreshToken,\n      Role,\n      UserRoles,\n      Cart,\n      CartProduct,\n    ]),\n    forwardRef(() => MailModule),\n    forwardRef(() => ProductModule),\n    forwardRef(() => CoreModule),\n    forwardRef(() => AdminModule),\n    forwardRef(() => RolesModule),\n    forwardRef(() => AuthModule),\n    forwardRef(() => OwnerModule),\n  ],\n  exports: [RolesService],\n})\nexport class RolesModule implements NestModule {\n  configure(consumer: MiddlewareConsumer) {\n    consumer\n      .apply(InitializeUserMiddleware)\n      .forRoutes(\n        { path: 'roles/create_role', method: RequestMethod.PUT },\n        { path: 'roles/get', method: RequestMethod.GET },\n      );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RolesService.html":{"url":"injectables/RolesService.html","title":"injectable - RolesService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  RolesService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/roles/roles.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createRole\n                            \n                            \n                                    Async\n                                getRoleByValue\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(roleRepository)\n                    \n                \n                        \n                            \n                                Defined in src/roles/roles.service.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        roleRepository\n                                                  \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        createRole\n                        \n                    \n                \n            \n            \n                \n                    \n                    createRole(dto: CreateRoleDto)\n                \n            \n\n\n            \n                \n                    Defined in src/roles/roles.service.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dto\n                                    \n                                                CreateRoleDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getRoleByValue\n                        \n                    \n                \n            \n            \n                \n                    \n                    getRoleByValue(value: string)\n                \n            \n\n\n            \n                \n                    Defined in src/roles/roles.service.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Scope } from '@nestjs/common';\nimport { InjectModel } from '@nestjs/sequelize';\nimport { CreateRoleDto } from './dto/create.role.dto';\nimport { Role } from './models/roles.model';\n\n@Injectable({ scope: Scope.TRANSIENT })\nexport class RolesService {\n  constructor(@InjectModel(Role) private roleRepository: typeof Role) {}\n  async createRole(dto: CreateRoleDto): Promise {\n    const role = await this.roleRepository.create(dto);\n    return role;\n  }\n  async getRoleByValue(value: string): Promise {\n    const role = await this.roleRepository.findOne({ where: { value: value } });\n    return role;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SignupDto.html":{"url":"classes/SignupDto.html","title":"class - SignupDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SignupDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/dto/signup.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                confirmPassword\n                            \n                            \n                                    Readonly\n                                email\n                            \n                            \n                                    Readonly\n                                name\n                            \n                            \n                                    Readonly\n                                password\n                            \n                            \n                                    Readonly\n                                phoneNumber\n                            \n                            \n                                    Readonly\n                                surname\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        confirmPassword\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'etrhg45ty5yeewt4t4665y', description: 'user`s confirm password'})@IsString()@Matches(/^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{8,}$/, {message: PASSWORD_VALIDATION})@Match('password')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/signup.dto.ts:82\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'user@gmail.com', description: 'user`s email'})@IsString()@IsEmail()@Matches(/^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/, {message: EMAIL_VALIDATION})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/signup.dto.ts:55\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'Alex', description: 'user`s name'})@IsString()@MinLength(2)@MaxLength(30)@IsNotEmpty()@Matches(/[a-zA-Z0-9а-яієїґА_ЯЇЄЇЁёА-я_-]{2,30}/, {message: USERNAME_VALIDATION})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/signup.dto.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'etrhg45ty5yeewt4t4665y', description: 'user`s password'})@IsString()@Matches(/^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{8,}$/, {message: PASSWORD_VALIDATION})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/signup.dto.ts:68\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        phoneNumber\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: '+381056733', description: 'user phone number'})@IsString()@Matches(/^[\\+]?[(]?[0-9]{3}[)]?[-\\s\\.]?[0-9]{3}[-\\s\\.]?[0-9]{4,6}$/, {message: PHONE_NUMRER_VALIDATION})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/signup.dto.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        surname\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'Cusler', description: 'user`s surname'})@IsString()@MinLength(2)@MaxLength(30)@Matches(/[a-zA-Z0-9а-яієїґА_ЯЇЄЇЁёА-я_-]{2,30}/, {message: SURNAME_VALIDATION})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/signup.dto.ts:37\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport {\n  IsEmail,\n  IsNotEmpty,\n  IsString,\n  Matches,\n  MaxLength,\n  MinLength,\n} from 'class-validator';\nimport { Match } from '../../common/decorators/match.decorator';\nimport {\n  EMAIL_VALIDATION,\n  PASSWORD_VALIDATION,\n  PHONE_NUMRER_VALIDATION,\n  SURNAME_VALIDATION,\n  USERNAME_VALIDATION,\n} from '../auth.constants';\n\nexport class SignupDto {\n  @ApiProperty({ example: 'Alex', description: 'user`s name' })\n  @IsString()\n  @MinLength(2)\n  @MaxLength(30)\n  @IsNotEmpty()\n  @Matches(/[a-zA-Z0-9а-яієїґА_ЯЇЄЇЁёА-я_-]{2,30}/, {\n    message: USERNAME_VALIDATION,\n  })\n  readonly name: string;\n\n  @ApiProperty({ example: 'Cusler', description: 'user`s surname' })\n  @IsString()\n  @MinLength(2)\n  @MaxLength(30)\n  @Matches(/[a-zA-Z0-9а-яієїґА_ЯЇЄЇЁёА-я_-]{2,30}/, {\n    message: SURNAME_VALIDATION,\n  })\n  readonly surname: string;\n\n  @ApiProperty({ example: '+381056733', description: 'user phone number' })\n  @IsString()\n  @Matches(/^[\\+]?[(]?[0-9]{3}[)]?[-\\s\\.]?[0-9]{3}[-\\s\\.]?[0-9]{4,6}$/, {\n    message: PHONE_NUMRER_VALIDATION,\n  })\n  readonly phoneNumber: string;\n\n  @ApiProperty({ example: 'user@gmail.com', description: 'user`s email' })\n  @IsString()\n  @IsEmail()\n  @Matches(\n    /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/,\n    {\n      message: EMAIL_VALIDATION,\n    },\n  )\n  readonly email: string;\n\n  @ApiProperty({\n    example: 'etrhg45ty5yeewt4t4665y',\n    description: 'user`s password',\n  })\n  @IsString()\n  @Matches(\n    /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{8,}$/,\n    {\n      message: PASSWORD_VALIDATION,\n    },\n  )\n  readonly password: string;\n\n  @ApiProperty({\n    example: 'etrhg45ty5yeewt4t4665y',\n    description: 'user`s confirm password',\n  })\n  @IsString()\n  @Matches(\n    /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{8,}$/,\n    {\n      message: PASSWORD_VALIDATION,\n    },\n  )\n  @Match('password')\n  readonly confirmPassword: string;\n}\n// {\n//     \"name\": \"Alex\",\n//     \"surname\": \"Cusler\",\n//     \"email\": \"user@gmail.com\",\n//     \"phoneNumber\": \"+2345265646\",\n//     \"password\": \"ALexesg1234!\",\n//     \"confirmPassword\": \"ALexesg1234!\"\n// }\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TasksService.html":{"url":"injectables/TasksService.html","title":"injectable - TasksService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  TasksService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/services/scedule.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addCronJob\n                            \n                            \n                                addInterval\n                            \n                            \n                                addTimeoutForTokens\n                            \n                            \n                                deleteCron\n                            \n                            \n                                deleteInterval\n                            \n                            \n                                deleteTimeout\n                            \n                            \n                                garbageCollector\n                            \n                            \n                                getCrons\n                            \n                            \n                                getIntervals\n                            \n                            \n                                getTimeouts\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(schedulerRegistry: SchedulerRegistry, eventEmitter: EventEmitter2)\n                    \n                \n                        \n                            \n                                Defined in src/core/services/scedule.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        schedulerRegistry\n                                                  \n                                                        \n                                                                    SchedulerRegistry\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        eventEmitter\n                                                  \n                                                        \n                                                                    EventEmitter2\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addCronJob\n                        \n                    \n                \n            \n            \n                \naddCronJob(name: string, time: string, callback: () => void)\n                \n            \n\n\n            \n                \n                    Defined in src/core/services/scedule.service.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    time\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    callback\n                                    \n                                                function\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     CronJob\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        addInterval\n                        \n                    \n                \n            \n            \n                \naddInterval(name: string, milliseconds: number, cb: (ownerRefreshToken: string,name: string) => void, ownerRefreshToken: string)\n                \n            \n\n\n            \n                \n                    Defined in src/core/services/scedule.service.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    milliseconds\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    cb\n                                    \n                                                function\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    ownerRefreshToken\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     NodeJS.Timer\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        addTimeoutForTokens\n                        \n                    \n                \n            \n            \n                \naddTimeoutForTokens(name: string, milliseconds: number, refreshTokenId: number, identifier: string, cb: (refreshTokenId: number,identifier: string) => void)\n                \n            \n\n\n            \n                \n                    Defined in src/core/services/scedule.service.ts:91\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    milliseconds\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    refreshTokenId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    identifier\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    cb\n                                    \n                                                function\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     NodeJS.Timeout\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteCron\n                        \n                    \n                \n            \n            \n                \ndeleteCron(name: string)\n                \n            \n\n\n            \n                \n                    Defined in src/core/services/scedule.service.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteInterval\n                        \n                    \n                \n            \n            \n                \ndeleteInterval(name: string)\n                \n            \n\n\n            \n                \n                    Defined in src/core/services/scedule.service.ts:66\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteTimeout\n                        \n                    \n                \n            \n            \n                \ndeleteTimeout(name: string)\n                \n            \n\n\n            \n                \n                    Defined in src/core/services/scedule.service.ts:120\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        garbageCollector\n                        \n                    \n                \n            \n            \n                \ngarbageCollector(name: string, milliseconds: number)\n                \n            \n\n\n            \n                \n                    Defined in src/core/services/scedule.service.ts:79\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    milliseconds\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getCrons\n                        \n                    \n                \n            \n            \n                \ngetCrons()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Cron(CronExpression.EVERY_HOUR)\n                \n            \n\n            \n                \n                    Defined in src/core/services/scedule.service.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Map\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getIntervals\n                        \n                    \n                \n            \n            \n                \ngetIntervals()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Cron(CronExpression.EVERY_HOUR)\n                \n            \n\n            \n                \n                    Defined in src/core/services/scedule.service.ts:73\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     string[]\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getTimeouts\n                        \n                    \n                \n            \n            \n                \ngetTimeouts()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Cron(CronExpression.EVERY_HOUR)\n                \n            \n\n            \n                \n                    Defined in src/core/services/scedule.service.ts:127\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     string[]\n\n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Logger(TasksService.name)\n                    \n                \n                    \n                        \n                                Defined in src/core/services/scedule.service.ts:9\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Logger, Scope } from '@nestjs/common';\nimport { EventEmitter2 } from '@nestjs/event-emitter';\nimport { Cron, CronExpression, SchedulerRegistry } from '@nestjs/schedule';\nimport { CronJob } from 'cron';\nimport { JwtRefreshTokenDeletedEvent } from '../events/jwt-refresh-token-deleted.evet';\n\n@Injectable({ scope: Scope.DEFAULT })\nexport class TasksService {\n  private readonly logger = new Logger(TasksService.name);\n  constructor(\n    private schedulerRegistry: SchedulerRegistry,\n    private eventEmitter: EventEmitter2,\n  ) {}\n\n  addCronJob(\n    name: string,\n    time: string,\n    callback: () => Promise,\n  ): CronJob {\n    const job = new CronJob(time, async () => {\n      this.logger.warn(`time (${time}) for job ${name} to run!`);\n      return callback();\n    });\n    this.schedulerRegistry.addCronJob(name, job);\n    job.start();\n    this.logger.warn(`job ${name} added for each minute at ${time} seconds!`);\n    return job;\n  }\n\n  @Cron(CronExpression.EVERY_HOUR)\n  getCrons(): Map {\n    const jobs = this.schedulerRegistry.getCronJobs();\n    jobs.forEach((value, key) => {\n      let next: Date | string;\n      try {\n        next = value.nextDates().toJSDate();\n      } catch (e) {\n        next = 'error: next fire date is in the past!';\n      }\n      this.logger.log(`job: ${key} -> next: ${next}`);\n    });\n    return jobs;\n  }\n\n  deleteCron(name: string): void {\n    this.schedulerRegistry.deleteCronJob(name);\n    this.logger.warn(`job ${name} deleted!`);\n    return;\n  }\n\n  addInterval(\n    name: string,\n    milliseconds: number,\n    cb: (ownerRefreshToken: string, name: string) => Promise,\n    ownerRefreshToken: string,\n  ): NodeJS.Timer {\n    const callback = async () => {\n      this.logger.warn(`Interval ${name} executing at time (${milliseconds})!`);\n      return cb(ownerRefreshToken, name);\n    };\n    const interval = setInterval(callback, milliseconds);\n    this.schedulerRegistry.addInterval(name, interval);\n    return interval;\n  }\n\n  deleteInterval(name: string): void {\n    this.schedulerRegistry.deleteInterval(name);\n    this.logger.warn(`Interval ${name} deleted!`);\n    return;\n  }\n\n  @Cron(CronExpression.EVERY_HOUR)\n  getIntervals(): string[] {\n    const intervals = this.schedulerRegistry.getIntervals();\n    intervals.forEach((key) => this.logger.log(`Interval: ${key}`));\n    return intervals;\n  }\n\n  garbageCollector(\n    name: string,\n    milliseconds: number\n  ) {\n    const callback = async () => {\n      this.logger.warn(`Interval ${name} executing at time (${milliseconds})!`);\n    };\n    const interval = setInterval(callback, milliseconds);\n    this.schedulerRegistry.addInterval(name, interval);\n    return interval;\n  }\n\n  addTimeoutForTokens(\n    name: string,\n    milliseconds: number,\n    refreshTokenId: number,\n    identifier: string,\n    cb: (refreshTokenId: number, identifier: string) => Promise,\n  ): NodeJS.Timeout {\n    const callback = async (): Promise => {\n      this.logger.log(`Timeout ${name} executing after (${milliseconds})!`);\n      const timeout = await cb(refreshTokenId, identifier);\n      if (!timeout) {\n        return this.deleteTimeout(name);\n      }\n      this.deleteTimeout(name);\n      const jwtRefreshTokenDeletedEvent = new JwtRefreshTokenDeletedEvent();\n      jwtRefreshTokenDeletedEvent.name = name;\n      jwtRefreshTokenDeletedEvent.userId = refreshTokenId;\n      jwtRefreshTokenDeletedEvent.description = `deleted user refresh token: ${refreshTokenId}`;\n      return this.eventEmitter.emit(\n        'refreshtoken.deleted',\n        jwtRefreshTokenDeletedEvent,\n      );\n    };\n    this.logger.warn(`Timeout ${name} executing!`);\n    const timeout = setTimeout(callback, milliseconds);\n    this.schedulerRegistry.addTimeout(name, timeout);\n    return timeout;\n  }\n\n  deleteTimeout(name: string): void {\n    this.schedulerRegistry.deleteTimeout(name);\n    this.logger.log(`Timeout ${name} deleted!`);\n    return;\n  }\n\n  @Cron(CronExpression.EVERY_HOUR)\n  getTimeouts(): string[] {\n    const timeouts = this.schedulerRegistry.getTimeouts();\n    timeouts.forEach((key) => this.logger.log(`Timeout: ${key}`));\n    return timeouts;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TelegramModule.html":{"url":"modules/TelegramModule.html","title":"module - TelegramModule","body":"\n                   \n\n\n\n\n    Modules\n    TelegramModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/telegram/telegram.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Static\n                        createAsyncOptionsProvider\n                        \n                    \n                \n            \n            \n                \n                    \n                    createAsyncOptionsProvider(options: ITelegramModuleAsyncOptions)\n                \n            \n\n\n            \n                \n                    Defined in src/telegram/telegram.module.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                ITelegramModuleAsyncOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Provider\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        forRootAsync\n                        \n                    \n                \n            \n            \n                \n                    \n                    forRootAsync(options: ITelegramModuleAsyncOptions)\n                \n            \n\n\n            \n                \n                    Defined in src/telegram/telegram.module.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                ITelegramModuleAsyncOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     DynamicModule\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        import { DynamicModule, Global, Module, Provider } from '@nestjs/common';\nimport { TELEGRAM_MODULE_OPTIONS } from './telegram.constants';\nimport { ITelegramModuleAsyncOptions } from './telegram.interface';\nimport { TelegramService } from './telegram.service';\n\n@Global()\n@Module({})\nexport class TelegramModule {\n  static forRootAsync(options: ITelegramModuleAsyncOptions): DynamicModule {\n    const asyncOptions = TelegramModule.createAsyncOptionsProvider(options);\n    return {\n      module: TelegramModule,\n      imports: options.imports,\n      providers: [TelegramService, asyncOptions],\n      exports: [TelegramService],\n    };\n  }\n\n  private static createAsyncOptionsProvider(\n    options: ITelegramModuleAsyncOptions,\n  ): Provider {\n    return {\n      provide: TELEGRAM_MODULE_OPTIONS,\n      useFactory: async (...args: any[]) => {\n        const config = await options.useFactory(...args);\n        return config;\n      },\n      inject: options.inject || [],\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TelegramService.html":{"url":"injectables/TelegramService.html","title":"injectable - TelegramService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  TelegramService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/telegram/telegram.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                bot\n                            \n                            \n                                options\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                sendMessage\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(options: ITelegramOptions)\n                    \n                \n                        \n                            \n                                Defined in src/telegram/telegram.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        options\n                                                  \n                                                        \n                                                                        ITelegramOptions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        sendMessage\n                        \n                    \n                \n            \n            \n                \n                    \n                    sendMessage(message: string, chatId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/telegram/telegram.service.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    chatId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        this.options.chatId\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        bot\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Telegraf\n\n                    \n                \n                    \n                        \n                                Defined in src/telegram/telegram.service.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        options\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ITelegramOptions\n\n                    \n                \n                    \n                        \n                                Defined in src/telegram/telegram.service.ts:9\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Inject, Injectable } from '@nestjs/common';\nimport { Telegraf } from 'telegraf';\nimport { TELEGRAM_MODULE_OPTIONS } from './telegram.constants';\nimport { ITelegramOptions } from './telegram.interface';\n\n@Injectable()\nexport class TelegramService {\n  bot: Telegraf;\n  options: ITelegramOptions;\n\n  constructor(@Inject(TELEGRAM_MODULE_OPTIONS) options: ITelegramOptions) {\n    this.bot = new Telegraf(options.token);\n    this.options = options;\n  }\n\n  async sendMessage(message: string, chatId: string = this.options.chatId) {\n    await this.bot.telegram.sendMessage(chatId, message);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ThrottlerBehindProxyGuard.html":{"url":"injectables/ThrottlerBehindProxyGuard.html","title":"injectable - ThrottlerBehindProxyGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ThrottlerBehindProxyGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/guards/throttler-behind-proxy.guard.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    ThrottlerGuard\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                getTracker\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        getTracker\n                        \n                    \n                \n            \n            \n                \n                    \n                    getTracker(req: Record)\n                \n            \n\n\n            \n                \n                    Defined in src/common/guards/throttler-behind-proxy.guard.ts:6\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            Record\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { ThrottlerGuard } from '@nestjs/throttler';\nimport { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class ThrottlerBehindProxyGuard extends ThrottlerGuard {\n  protected getTracker(req: Record): string {\n    return req.ips.length ? req.ips[0] : req.ip;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Tokens.html":{"url":"interfaces/Tokens.html","title":"interface - Tokens","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Tokens\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/interfaces/auth.interfaces.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            accessToken\n                                        \n                                \n                                \n                                        \n                                            expireDate\n                                        \n                                \n                                \n                                        \n                                            refreshToken\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        accessToken\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        accessToken:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        expireDate\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        expireDate:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        refreshToken\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        refreshToken:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Role } from '../../roles/models/roles.model';\nexport interface Payload {\n  email: string;\n  userId: number;\n  userActivationLink: string;\n  isUserActivated: boolean;\n  roles?: Role[];\n}\n\nexport interface Tokens {\n  refreshToken: string;\n  accessToken: string;\n  expireDate: Date;\n}\n\nexport interface AuthUser {\n  accessToken: string;\n  user: ReturnedUser | ReturnedAdmin | ReturnedOwner;\n}\n\nexport interface ReturnedUser {\n  id: number;\n  name: string;\n  surname: string;\n  phoneNumber: string;\n  email: string;\n  country: string | null;\n  city: string | null;\n  postOffice: string | null;\n  type: 'USER';\n}\n\nexport interface ReturnedOwner {\n  id: number;\n  name: string;\n  surname: string;\n  phoneNumber: string;\n  email: string;\n  type: 'OWNER';\n}\n\nexport interface ReturnedAdmin {\n  id: number;\n  name: string;\n  surname: string;\n  phoneNumber: string;\n  email: string;\n  type: 'ADMIN';\n}\n\nexport interface CodeDto {\n  type: 'OWNER' | 'ADMIN' | null;\n  email: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateCategoryDto.html":{"url":"classes/UpdateCategoryDto.html","title":"class - UpdateCategoryDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateCategoryDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/categories/dto/update.category.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                en\n                            \n                            \n                                rs\n                            \n                            \n                                ru\n                            \n                            \n                                ua\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        en\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@MinLength(2)@MaxLength(30)@Matches(/[a-zA-Z0-9а-яієїґА_ЯЇЄЇЁёА-я_-]{2,30}/)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/categories/dto/update.category.dto.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        rs\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@MinLength(2)@MaxLength(30)@Matches(/[a-zA-Z0-9а-яієїґА_ЯЇЄЇЁёА-я_-]{2,30}/)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/categories/dto/update.category.dto.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ru\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@MinLength(2)@MaxLength(30)@Matches(/[a-zA-Z0-9а-яієїґА_ЯЇЄЇЁёА-я_-]{2,30}/)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/categories/dto/update.category.dto.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ua\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@MinLength(2)@MaxLength(30)@Matches(/[a-zA-Z0-9а-яієїґА_ЯЇЄЇЁёА-я_-]{2,30}/)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/categories/dto/update.category.dto.ts:8\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsString, MinLength, MaxLength, Matches } from 'class-validator';\n\nexport class UpdateCategoryDto {\n  @IsString()\n  @MinLength(2)\n  @MaxLength(30)\n  @Matches(/[a-zA-Z0-9а-яієїґА_ЯЇЄЇЁёА-я_-]{2,30}/)\n  ua: string;\n\n  @IsString()\n  @MinLength(2)\n  @MaxLength(30)\n  @Matches(/[a-zA-Z0-9а-яієїґА_ЯЇЄЇЁёА-я_-]{2,30}/)\n  ru: string;\n\n  @IsString()\n  @MinLength(2)\n  @MaxLength(30)\n  @Matches(/[a-zA-Z0-9а-яієїґА_ЯЇЄЇЁёА-я_-]{2,30}/)\n  rs: string;\n\n  @IsString()\n  @MinLength(2)\n  @MaxLength(30)\n  @Matches(/[a-zA-Z0-9а-яієїґА_ЯЇЄЇЁёА-я_-]{2,30}/)\n  en: string;\n};\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateProductDto.html":{"url":"classes/UpdateProductDto.html","title":"class - UpdateProductDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateProductDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/product/dto/update.product.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                description\n                            \n                            \n                                    Readonly\n                                price\n                            \n                            \n                                    Readonly\n                                quantity\n                            \n                            \n                                    Readonly\n                                title\n                            \n                            \n                                \n                            \n                            \n                                \n                            \n                            \n                                \n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsDefined()@Type(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/product/dto/update.product.dto.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        price\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsDefined()@Type(undefined)@IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/product/dto/update.product.dto.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        quantity\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsDefined()@Transform(value => )@Type(undefined)@IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/product/dto/update.product.dto.ts:67\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsDefined()@Type(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/product/dto/update.product.dto.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                    \n                \n            \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsDefined()@Type(undefined, readonly, sizes, undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/product/dto/update.product.dto.ts:52\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                    \n                \n            \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsDefined()@Type(undefined, readonly, colours, undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/product/dto/update.product.dto.ts:61\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                    \n                \n            \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsDefined()@Type(undefined, readonly, categories, undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/product/dto/update.product.dto.ts:74\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Transform, Type } from 'class-transformer';\nimport { IsDefined, IsNumber, IsString, Matches } from 'class-validator';\nclass Nested {\n  @IsDefined()\n  @IsString()\n  @Matches(/[a-zA-Z0-9а-яієїґА_ЯЇЄЇЁёА-яzžitisšte_-]/gi)  \n  ua: string;\n  @IsDefined()\n  @IsString() \n  @Matches(/[a-zA-Z0-9а-яієїґА_ЯЇЄЇЁёА-яzžitisšte_-]/gi)\n  ru: string;\n  @IsDefined()\n  @IsString()\n  @Matches(/[a-zA-Z0-9а-яієїґА_ЯЇЄЇЁёА-яzžitisšte_-]/gi)\n  rs: string;\n  @IsDefined()\n  @IsString()\n  @Matches(/[a-zA-Z0-9а-яієїґА_ЯЇЄЇЁёА-яzžitisšte_-]/gi)\n  en: string;\n}\nexport class UpdateProductDto {\n @IsDefined()\n  @Type(() => Nested)\n  readonly title: {\n    ua: string;\n    ru: string;\n    rs: string;\n    en: string;\n  };\n\n  @IsDefined()\n  @Type(() => Nested)\n  readonly description: {\n    ua: string;\n    ru: string;\n    rs: string;\n    en: string;\n  };\n\n  @IsDefined()\n  @Type(()=> Number)\n  @IsNumber()\n  readonly price: number;\n\n  @IsDefined()\n  @Type(() => Array)\n  // @Transform((value) => ParseJsonPipe.transform(value.value, value.obj))\n  // @IsArray()\n  // @ArrayNotEmpty()\n  // @IsString({ each: true }) \n  // @MaxLength(15, { each: true })\n  readonly sizes: string[];\n\n  @IsDefined()\n  @Type(() => Array)\n  // @Transform((value) => JSON.parse(value.value))\n  // @IsArray()\n  // @ArrayNotEmpty()\n  // @IsString({ each: true }) \n  // @MaxLength(15, { each: true })\n  readonly colours: string[];\n\n  @IsDefined()\n  @Transform((value: any) => Number(value.value))\n  @Type(()=> Number)\n  @IsNumber()\n  readonly quantity: number;\n\n  @IsDefined()\n  @Type(() => Array)\n  // @Transform((value) => JSON.parse(value.value))\n  // @IsArray()\n  // @ArrayNotEmpty()\n  readonly categories: number[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateUserDto.html":{"url":"classes/UpdateUserDto.html","title":"class - UpdateUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/dto/update-user.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                city\n                            \n                            \n                                    Readonly\n                                country\n                            \n                            \n                                    Readonly\n                                name\n                            \n                            \n                                    Readonly\n                                postOffice\n                            \n                            \n                                    Readonly\n                                surname\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        city\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'Lviv', description: 'city'})@IsString()@MinLength(2)@MaxLength(50)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/update-user.dto.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        country\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'Ukraine', description: 'country'})@IsString()@MinLength(2)@MaxLength(50)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/update-user.dto.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'Alex', description: 'user`s name'})@IsString()@MinLength(2)@MaxLength(30)@Matches(/[a-zA-Z0-9а-яієїґА_ЯЇЄЇЁёА-я_-]{2,30}/, {message: USERNAME_VALIDATION})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/update-user.dto.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        postOffice\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'Lviv', description: 'postOffice'})@IsString()@MinLength(2)@MaxLength(50)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/update-user.dto.ts:52\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        surname\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'Cusler', description: 'user`s surname'})@IsString()@MinLength(2)@MaxLength(30)@Matches(/[a-zA-Z0-9а-яієїґА_ЯЇЄЇЁёА-я_-]{2,30}/, {message: SURNAME_VALIDATION})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/update-user.dto.ts:25\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsString, Matches, MaxLength, MinLength } from 'class-validator';\nimport {\n  USERNAME_VALIDATION,\n  SURNAME_VALIDATION,\n} from '../constants/user.constants';\n\nexport class UpdateUserDto {\n  @ApiProperty({ example: 'Alex', description: 'user`s name' })\n  @IsString()\n  @MinLength(2)\n  @MaxLength(30)\n  @Matches(/[a-zA-Z0-9а-яієїґА_ЯЇЄЇЁёА-я_-]{2,30}/, {\n    message: USERNAME_VALIDATION,\n  })\n  readonly name: string;\n\n  @ApiProperty({ example: 'Cusler', description: 'user`s surname' })\n  @IsString()\n  @MinLength(2)\n  @MaxLength(30)\n  @Matches(/[a-zA-Z0-9а-яієїґА_ЯЇЄЇЁёА-я_-]{2,30}/, {\n    message: SURNAME_VALIDATION,\n  })\n  readonly surname: string;\n\n  @ApiProperty({\n    example: 'Lviv',\n    description: 'city',\n  })\n  @IsString()\n  @MinLength(2)\n  @MaxLength(50)\n  readonly city: string;\n\n  @ApiProperty({\n    example: 'Ukraine',\n    description: 'country',\n  })\n  @IsString()\n  @MinLength(2)\n  @MaxLength(50)\n  readonly country: string;\n\n  @ApiProperty({\n    example: 'Lviv',\n    description: 'postOffice',\n  })\n  @IsString()\n  @MinLength(2)\n  @MaxLength(50)\n  readonly postOffice: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserAdminMiddleware.html":{"url":"injectables/UserAdminMiddleware.html","title":"injectable - UserAdminMiddleware","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UserAdminMiddleware\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/middlewares/user-admin.middleware.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                use\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userService: UsersService)\n                    \n                \n                        \n                            \n                                Defined in src/common/middlewares/user-admin.middleware.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UsersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        use\n                        \n                    \n                \n            \n            \n                \n                    \n                    use(req: Request, res: Response, next: NextFunction)\n                \n            \n\n\n            \n                \n                    Defined in src/common/middlewares/user-admin.middleware.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                            NextFunction\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  HttpStatus,\n  Injectable,\n  NestMiddleware,\n  Next,\n  Req,\n  Res,\n  Scope,\n} from '@nestjs/common';\nimport {\n  BadRequestException,\n  NotFoundException,\n} from '@nestjs/common/exceptions';\nimport { Request, Response, NextFunction } from 'express';\nimport { INVALID_PARAMS } from '../../auth/auth.constants';\nimport { USER_NOT_FOUND } from '../../users/constants/user.constants';\nimport { v4 } from 'uuid';\nimport { UsersService } from '../../users/services/users.service';\nimport { ApiException } from '../exceptions/api.exception';\n\n@Injectable({ scope: Scope.REQUEST })\nexport class UserAdminMiddleware implements NestMiddleware {\n  constructor(private readonly userService: UsersService) {}\n  async use(\n    @Req() req: Request,\n    @Res() res: Response,\n    @Next() next: NextFunction,\n  ) {\n    try {\n      const name = req?.body?.name;\n      const surname = req?.body?.surname;\n      const email = req?.body?.email;\n      const phoneNumber = req?.body?.phoneNumber;\n      const isAdmin = req?.body?.isAdmin;\n      const addContent = req?.body?.addContent;\n      const editContent = req?.body?.editContent;\n      const editWebSite = req?.body?.editWebSite;\n      if (\n        !name ||\n        !surname ||\n        !phoneNumber ||\n        !email ||\n        !isAdmin.toString() ||\n        !addContent.toString() ||\n        !editContent.toString() ||\n        !editWebSite.toString()\n      ) {\n        throw new ApiException(HttpStatus.BAD_REQUEST, 'Bad request!', INVALID_PARAMS);\n      }\n      const user = await this.userService.getUserByEmail(email);\n      if (user.phoneNumber === phoneNumber) {\n        req.body.password = user.getPassword();\n        req.body.activationLink = v4();\n        return next();\n      }\n      throw new ApiException(HttpStatus.NOT_FOUND, 'Not found!', USER_NOT_FOUND);  \n    } catch (err: unknown) {\n      return next(err);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/UserGuard.html":{"url":"guards/UserGuard.html","title":"guard - UserGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    UserGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/common/guards/user.guard.ts\n            \n\n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(userJwtRefreshTokenService: UserJwtRefreshTokenService, reflector: Reflector, authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/common/guards/user.guard.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userJwtRefreshTokenService\n                                                  \n                                                        \n                                                                        UserJwtRefreshTokenService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        reflector\n                                                  \n                                                        \n                                                                    Reflector\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate(context: ExecutionContext)\n                \n            \n\n\n            \n                \n                    Defined in src/common/guards/user.guard.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                            ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     boolean | Promise | Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import {\n  CanActivate,\n  ExecutionContext,\n  HttpStatus,\n  Injectable,\n  Scope,\n} from '@nestjs/common';\nimport { Observable } from 'rxjs';\nimport { Payload } from '../../core/interfaces/auth.interfaces';\nimport { UserJwtRefreshTokenService } from '../../users/services/jwt-refresh.service';\nimport { REFRESH_TOKEN_NOT_PROVIDED, USER_NOT_AUTHORIZIED } from '../../auth/auth.constants';\nimport { Reflector } from '@nestjs/core';\nimport { ROLES_KEY } from '../decorators/roles-auth.decorator';\nimport { AuthService } from '../../auth/auth.service';\nimport { ApiException } from '../exceptions/api.exception';\nimport { ACCESS_DENIED } from '../../admin/constants/admin.constants';\n\n@Injectable({ scope: Scope.REQUEST })\nexport class UserGuard implements CanActivate {\n  constructor(\n    private readonly userJwtRefreshTokenService: UserJwtRefreshTokenService,\n    private reflector: Reflector,\n    private authService: AuthService,\n  ) {}\n\n  canActivate(\n    context: ExecutionContext,\n  ): boolean | Promise | Observable {\n    return (async () => {\n        const requiredRoles: string[] = this.reflector.getAllAndOverride(\n          ROLES_KEY,\n          [context.getHandler(), context.getClass()],\n        );\n        if (!requiredRoles) {\n          return true;\n        }\n        const req = context.switchToHttp().getRequest();\n        const refreshToken = req?.cookies['refreshToken'];\n        if (!refreshToken) {\n          throw new ApiException(HttpStatus.BAD_REQUEST, 'Bad request!', REFRESH_TOKEN_NOT_PROVIDED);\n        }\n        const decodedRefreshToken = Buffer.from(refreshToken, 'base64').toString(\n          'ascii',\n        );\n        const userRefreshToken = await this.userJwtRefreshTokenService.findToken(\n          decodedRefreshToken,\n        );\n        if (!userRefreshToken) {\n          return false;\n        }\n        const payload: Payload = req?.payload;\n        if (!payload) {\n          throw new ApiException(HttpStatus.UNAUTHORIZED, 'Unathorized!', USER_NOT_AUTHORIZIED);\n        }\n        if (payload.userId !== userRefreshToken.userId) {\n          throw new ApiException(HttpStatus.UNAUTHORIZED, 'Unathorized!', USER_NOT_AUTHORIZIED);\n        }\n        const refreshPayload =\n          await this.userJwtRefreshTokenService.validateRefreshToken(\n            decodedRefreshToken.trim(),\n        );\n        if (\n          !refreshPayload.roles.some(\n          (role: { value: string; description: string }) =>\n            requiredRoles.includes(role.value))\n        ) {\n          throw new ApiException(HttpStatus.UNAUTHORIZED, 'Unathorized!', ACCESS_DENIED);\n        }\n        return true;\n      }\n    )();\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UserInterface.html":{"url":"interfaces/UserInterface.html","title":"interface - UserInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  UserInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/interfaces/user.interfaces.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            addContent\n                                        \n                                \n                                \n                                        \n                                            editContent\n                                        \n                                \n                                \n                                        \n                                            editWebsite\n                                        \n                                \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            isAdmin\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            phoneNumber\n                                        \n                                \n                                \n                                        \n                                            surname\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        addContent\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        addContent:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        editContent\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        editContent:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        editWebsite\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        editWebsite:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isAdmin\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        isAdmin:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        phoneNumber\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        phoneNumber:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        surname\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        surname:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface UserRefreshCreationAttrbs {\n  userId: number;\n  userRefreshToken: string;\n  userAgent: string;\n  email: string;\n}\n\nexport interface RolecreationAttrbs {\n  value: string;\n  description: string;\n}\nexport interface UsercreationAttrbs {\n  name: string;\n  surname: string;\n  email: string;\n  phoneNumber: string;\n  password: string;\n  activationLink: string;\n}\n\nexport interface InitializeUser {\n  name: string;\n  surname: string;\n  phoneNumber: string;\n  email: string;\n  password: string;\n  confirmPassword: string;\n}\n\nexport interface ValidateUser {\n  email: string;\n  password: string;\n}\n\nexport interface UserInterface {\n  id: number;\n  name: string;\n  surname: string;\n  email: string;\n  phoneNumber: string;\n  isAdmin: boolean;\n  addContent: boolean;\n  editContent: boolean;\n  editWebsite: boolean;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserJwtRefreshTokenService.html":{"url":"injectables/UserJwtRefreshTokenService.html","title":"injectable - UserJwtRefreshTokenService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UserJwtRefreshTokenService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/services/jwt-refresh.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                findToken\n                            \n                            \n                                    Async\n                                findTokenByToken\n                            \n                            \n                                    Async\n                                generateRefreshToken\n                            \n                            \n                                    Async\n                                insertToken\n                            \n                            \n                                    Async\n                                removeToken\n                            \n                            \n                                    Async\n                                removeTokenInTime\n                            \n                            \n                                    Async\n                                saveToken\n                            \n                            \n                                    Async\n                                validateRefreshToken\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(jwtService: JwtService, userService: UsersService, sheduleService: TasksService, userRefreshTokenRepository)\n                    \n                \n                        \n                            \n                                Defined in src/users/services/jwt-refresh.service.ts:28\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        jwtService\n                                                  \n                                                        \n                                                                    JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UsersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        sheduleService\n                                                  \n                                                        \n                                                                        TasksService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userRefreshTokenRepository\n                                                  \n                                                        \n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findToken\n                        \n                    \n                \n            \n            \n                \n                    \n                    findToken(userRefreshToken: string)\n                \n            \n\n\n            \n                \n                    Defined in src/users/services/jwt-refresh.service.ts:196\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userRefreshToken\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findTokenByToken\n                        \n                    \n                \n            \n            \n                \n                    \n                    findTokenByToken(userRefreshToken: string, identifier: string)\n                \n            \n\n\n            \n                \n                    Defined in src/users/services/jwt-refresh.service.ts:180\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userRefreshToken\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    identifier\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        generateRefreshToken\n                        \n                    \n                \n            \n            \n                \n                    \n                    generateRefreshToken(payload: CreateUserRefreshTokenDto)\n                \n            \n\n\n            \n                \n                    Defined in src/users/services/jwt-refresh.service.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    payload\n                                    \n                                                CreateUserRefreshTokenDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        insertToken\n                        \n                    \n                \n            \n            \n                \n                    \n                    insertToken(userId: number, userRefreshToken: string, email: string, userAgent: string, expireDate: Date)\n                \n            \n\n\n            \n                \n                    Defined in src/users/services/jwt-refresh.service.ts:70\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    userRefreshToken\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    userAgent\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    expireDate\n                                    \n                                                Date\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        removeToken\n                        \n                    \n                \n            \n            \n                \n                    \n                    removeToken(userRefreshToken: string)\n                \n            \n\n\n            \n                \n                    Defined in src/users/services/jwt-refresh.service.ts:158\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userRefreshToken\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        removeTokenInTime\n                        \n                    \n                \n            \n            \n                \n                    \n                    removeTokenInTime(userRefreshTokenId: number, identifier: string)\n                \n            \n\n\n            \n                \n                    Defined in src/users/services/jwt-refresh.service.ts:216\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userRefreshTokenId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    identifier\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        saveToken\n                        \n                    \n                \n            \n            \n                \n                    \n                    saveToken(userId: number, userRefreshToken: string, email: string, userAgent: string, expireDate: Date, identifier: string)\n                \n            \n\n\n            \n                \n                    Defined in src/users/services/jwt-refresh.service.ts:113\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    userRefreshToken\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    userAgent\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    expireDate\n                                    \n                                                Date\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    identifier\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        validateRefreshToken\n                        \n                    \n                \n            \n            \n                \n                    \n                    validateRefreshToken(userRefreshToken: string)\n                \n            \n\n\n            \n                \n                    Defined in src/users/services/jwt-refresh.service.ts:52\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userRefreshToken\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  BadRequestException,\n  HttpStatus,\n  Injectable,\n  InternalServerErrorException,\n  NotFoundException,\n  Scope,\n} from '@nestjs/common';\nimport { JwtService } from '@nestjs/jwt';\nimport {\n  ERROR_WHILE_REMOVING_TOKEN,\n  ERROR_WHILE_SAVING_TOKEN,\n  ERROR_WHILE_SIGNING_TOKEN,\n  ERROR_WHILE_VALIDATING_TOKEN,\n  TOKEN_INVALID,\n  TOKEN_NOT_FOUND,\n  USER_NOT_FOUND,\n} from '../constants/jwt-refresh.constants';\nimport { UserRefreshToken } from '../models/user.refresh.token.model';\nimport { UsersService } from './users.service';\nimport { CreateUserRefreshTokenDto } from '../dto/create-user-refresh-token.dto';\nimport { InjectModel } from '@nestjs/sequelize';\nimport { TasksService } from '../../core/services/scedule.service';\nimport { ApiException } from '../../common/exceptions/api.exception';\nimport { v4 } from 'uuid';\n\n@Injectable({ scope: Scope.TRANSIENT })\nexport class UserJwtRefreshTokenService {\n  constructor(\n    private jwtService: JwtService,\n    private userService: UsersService,\n    private sheduleService: TasksService,\n    @InjectModel(UserRefreshToken)\n    private readonly userRefreshTokenRepository: typeof UserRefreshToken,\n  ) {}\n\n  async generateRefreshToken(\n    payload: CreateUserRefreshTokenDto,\n  ): Promise {\n    try {\n      const userRefreshToken = this.jwtService.sign(payload);\n      return userRefreshToken;\n    } catch (err: unknown) {\n      throw new ApiException(\n        HttpStatus.INTERNAL_SERVER_ERROR,\n        'Internal Server Error',\n        ERROR_WHILE_SIGNING_TOKEN\n      );   \n    }\n  }\n\n  async validateRefreshToken(\n    userRefreshToken: string,\n  ): Promise {\n    try {\n      const userData = this.jwtService.verify(userRefreshToken);\n      if (!userData) {\n        throw new ApiException(HttpStatus.BAD_REQUEST, 'Bad request', TOKEN_INVALID);\n      } \n      return userData;\n    } catch (err: unknown) {\n       throw new ApiException(\n        HttpStatus.INTERNAL_SERVER_ERROR,\n          'Internal Server Error',\n          ERROR_WHILE_VALIDATING_TOKEN\n        );  \n    }\n  }\n\n  async insertToken(\n    userId: number,\n    userRefreshToken: string,\n    email: string,\n    userAgent: string,\n    expireDate: Date,\n  ) {\n    try {\n      const user = await this.userService.getUserById(userId);\n      if (!user) {\n         throw new ApiException(HttpStatus.NOT_FOUND, 'Not found!', USER_NOT_FOUND);   \n      }\n      const token = await this.userRefreshTokenRepository.create({\n        userRefreshToken: userRefreshToken,\n        userId: user.id,\n        email: email,\n        userAgent:\n          userAgent ||\n          'Mozilla/5.0 (Windows NT 7.0; Win32; x32) AppleWebKit/523.34 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/523.34',\n      });\n      token.setIdentifier(v4());\n      await token.save();\n      if (!token.getExpireDate()) {\n        token.setExpireDate(expireDate);\n        await token.save(); \n      }\n      if (!user.getUserRefreshTokens() || user.getUserRefreshTokens().length === 0) {\n        user.$set('userRefreshTokens', token.id);\n        user.userRefreshTokens = [token];\n      } else {\n        user.$add('userRefreshTokens', token.id);\n      }\n      await user.save();\n      return token;\n    } catch (err: unknown) {\n      throw new ApiException(\n        HttpStatus.INTERNAL_SERVER_ERROR,\n        'Internal Server Error',\n        ERROR_WHILE_SAVING_TOKEN\n      );   \n    }\n  }\n\n  async saveToken(\n    userId: number,\n    userRefreshToken: string,\n    email: string,\n    userAgent: string,\n    expireDate: Date,\n    identifier: string,\n  ): Promise {\n    try {\n      const user = await this.userService.getUserById(userId);\n      if (!user) {\n         throw new ApiException(HttpStatus.NOT_FOUND, 'Not found!', USER_NOT_FOUND);   \n      }\n      const tokenData = await this.userRefreshTokenRepository.findOne({\n        where: {\n          userId: userId,\n          identifier: identifier,\n        },\n      });\n      if (tokenData) {\n        tokenData.userRefreshToken = userRefreshToken;\n        return tokenData.save();\n      }\n      const token = await this.userRefreshTokenRepository.create({\n        userRefreshToken: userRefreshToken,\n        userId: userId,\n        email: email,\n        userAgent:\n          userAgent ||\n          'Mozilla/5.0 (Windows NT 7.0; Win32; x32) AppleWebKit/523.34 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/523.34',\n      });\n      if (!token.getExpireDate()) {\n        token.setExpireDate(expireDate);\n        await token.save(); \n      }\n      return token;\n    } catch (err: unknown) {\n       throw new ApiException(\n          HttpStatus.INTERNAL_SERVER_ERROR,\n          'Internal Server Error',\n          ERROR_WHILE_SAVING_TOKEN\n        );   \n    }\n  }\n\n  async removeToken(userRefreshToken: string): Promise {\n    try {\n      const token = await this.findToken(userRefreshToken);\n      if (!token) {\n        throw new ApiException(HttpStatus.NOT_FOUND, 'Not found!', TOKEN_NOT_FOUND);   \n      }\n      const user = await this.userService.getUserById(token.userId);\n      user.$remove('userRefreshTokens', token.token.id);\n      await user.save();\n      const tokenData = await this.userRefreshTokenRepository.destroy({\n        where: { userRefreshToken: userRefreshToken },\n      });\n      return tokenData;\n    } catch (err: unknown) {\n      throw new ApiException(\n        HttpStatus.INTERNAL_SERVER_ERROR,\n        'Internal Server Error',\n        ERROR_WHILE_REMOVING_TOKEN\n      );   \n    }\n  }\n\n  async findTokenByToken(\n    userRefreshToken: string,\n    identifier: string,\n  ): Promise {\n    const token = await UserRefreshToken.findOne({\n      where: {\n        userRefreshToken: userRefreshToken,\n        identifier: identifier,\n      },\n    });\n    if (!token) {\n      throw new ApiException(HttpStatus.NOT_FOUND, 'Not found!', TOKEN_NOT_FOUND);   \n    }\n    return token;\n  }\n\n  async findToken(\n    userRefreshToken: string,\n  ): Promise{\n    const token = await UserRefreshToken.findOne({\n      where: {\n        userRefreshToken: userRefreshToken,\n      },\n    });\n    if (!token) {\n      throw new ApiException(HttpStatus.NOT_FOUND, 'Not found!', TOKEN_NOT_FOUND);   \n    }\n    return {\n      token: token,\n      userId: token.userId,\n    };\n  }\n\n  async removeTokenInTime(\n    userRefreshTokenId: number,\n    identifier: string,\n  ): Promise {\n    const token = await this.userRefreshTokenRepository.findOne({\n      where: {\n        id: userRefreshTokenId,\n        identifier: identifier,\n      },\n    });\n    if (!token) {\n      return false;\n    }\n    const user = await this.userService.getUserById(token.userId);\n    user.$remove('userRefreshTokens', token.id);\n    await user.save();\n    return this.userRefreshTokenRepository.destroy({\n      where: { id: userRefreshTokenId, identifier: identifier },\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserMiddleware.html":{"url":"injectables/UserMiddleware.html","title":"injectable - UserMiddleware","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UserMiddleware\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/middlewares/product.mddleware.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                use\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        use\n                        \n                    \n                \n            \n            \n                \nuse(req: Request, res: Response, next: NextFunction)\n                \n            \n\n\n            \n                \n                    Defined in src/common/middlewares/product.mddleware.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                            NextFunction\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  Injectable,\n  NestMiddleware,\n  Next,\n  Req,\n  Res,\n  Scope,\n} from '@nestjs/common';\nimport { Request, Response, NextFunction } from 'express';\n\n@Injectable({ scope: Scope.REQUEST })\nexport class UserMiddleware implements NestMiddleware {\n  use(@Req() req: Request, @Res() res: Response, @Next() next: NextFunction) {\n    try {\n      const userAgent = req.headers['user-agent'];\n      res.setHeader('Access-Control-Request-Headers', 'Authorization');\n      res.setHeader('Access-Control-Request-Method', 'POST, GET, PUT, PATCH');\n      res.setHeader('Timing-Allow-Origin', `${process.env.CLIENT_URL.trim()}`);\n      res.setHeader('X-Content-Type-Options', 'nosniff');\n      req['userAgent'] = userAgent;\n      return next();\n    } catch (err: unknown) {\n      return next(err);\n    }\n  }\n};\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserMiddleware-1.html":{"url":"injectables/UserMiddleware-1.html","title":"injectable - UserMiddleware-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UserMiddleware\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/middlewares/user.middleware.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                use\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        use\n                        \n                    \n                \n            \n            \n                \nuse(req: Request, res: Response, next: NextFunction)\n                \n            \n\n\n            \n                \n                    Defined in src/common/middlewares/user.middleware.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                            NextFunction\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  Injectable,\n  NestMiddleware,\n  Next,\n  Req,\n  Res,\n  Scope,\n} from '@nestjs/common';\nimport { Request, Response, NextFunction } from 'express';\n\n@Injectable({ scope: Scope.REQUEST })\nexport class UserMiddleware implements NestMiddleware {\n  use(@Req() req: Request, @Res() res: Response, @Next() next: NextFunction) {\n    try {\n      const userAgent = req.headers['user-agent'];\n      res.setHeader('Access-Control-Request-Headers', 'Authorization');\n      res.setHeader('Access-Control-Request-Method', 'POST, GET, PUT, PATCH');\n      res.setHeader('Timing-Allow-Origin', `${process.env.CLIENT_URL.trim()}`);\n      res.setHeader('X-Content-Type-Options', 'nosniff');\n      req['userAgent'] = userAgent;\n      return next();\n    } catch (err: unknown) {\n      return next(err);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UserRefreshCreationAttrbs.html":{"url":"interfaces/UserRefreshCreationAttrbs.html","title":"interface - UserRefreshCreationAttrbs","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  UserRefreshCreationAttrbs\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/interfaces/user.interfaces.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            userAgent\n                                        \n                                \n                                \n                                        \n                                            userId\n                                        \n                                \n                                \n                                        \n                                            userRefreshToken\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        userAgent\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        userAgent:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        userId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        userId:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        userRefreshToken\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        userRefreshToken:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface UserRefreshCreationAttrbs {\n  userId: number;\n  userRefreshToken: string;\n  userAgent: string;\n  email: string;\n}\n\nexport interface RolecreationAttrbs {\n  value: string;\n  description: string;\n}\nexport interface UsercreationAttrbs {\n  name: string;\n  surname: string;\n  email: string;\n  phoneNumber: string;\n  password: string;\n  activationLink: string;\n}\n\nexport interface InitializeUser {\n  name: string;\n  surname: string;\n  phoneNumber: string;\n  email: string;\n  password: string;\n  confirmPassword: string;\n}\n\nexport interface ValidateUser {\n  email: string;\n  password: string;\n}\n\nexport interface UserInterface {\n  id: number;\n  name: string;\n  surname: string;\n  email: string;\n  phoneNumber: string;\n  isAdmin: boolean;\n  addContent: boolean;\n  editContent: boolean;\n  editWebsite: boolean;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserRefreshToken.html":{"url":"classes/UserRefreshToken.html","title":"class - UserRefreshToken","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserRefreshToken\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/models/user.refresh.token.model.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    Model\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                email\n                            \n                            \n                                    Private\n                                expireDate\n                            \n                            \n                                    Public\n                                id\n                            \n                            \n                                    Public\n                                identifier\n                            \n                            \n                                    Private\n                                user\n                            \n                            \n                                    Public\n                                userId\n                            \n                            \n                                    Public\n                                userRefreshToken\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getExpireDate\n                            \n                            \n                                getIdentifier\n                            \n                            \n                                getUser\n                            \n                            \n                                getuserId\n                            \n                            \n                                setExpireDate\n                            \n                            \n                                setIdentifier\n                            \n                            \n                                setuserId\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'user@gmail.com', description: 'user`s email'})@IsEmail()@Column({type: undefined, unique: false, allowNull: false, field: 'email'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/models/user.refresh.token.model.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        expireDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: '86400000', description: 'expireDate'})@Column({type: undefined, field: 'expireDate'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/models/user.refresh.token.model.ts:71\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: '1', description: 'unique identifier'})@Column({type: undefined, unique: true, autoIncrement: true, primaryKey: true, allowNull: false, field: 'id'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/models/user.refresh.token.model.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        identifier\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: '9b1deb4d-3b7d-4bad-9bdd-2b0d7b3dcb6d', description: 'identifier'})@IsUUID(4)@Column({type: undefined, unique: true, allowNull: true, field: 'identifier'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/models/user.refresh.token.model.ts:84\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @BelongsTo(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/models/user.refresh.token.model.ts:87\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        userId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: '1', description: 'userId'})@ForeignKey(undefined)@IsInt()@Column({type: undefined, field: 'userId', unique: false, allowNull: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/models/user.refresh.token.model.ts:64\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        userRefreshToken\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'eyJuilbgghbGciOiJIUzihnuohlI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjEsImlzQWN0aXZhdGVkIjpmYWxzZSwiZW1haWwiOiJ1c2VyQGdtYWlsLmNvbSIsInJvbGVzIjpbeyJpZCI6MSwidmFsdWUiOiJVU0VSIiwiZGVzY3JpcHRpb24iOiJzaW1wbGUgdXNlciIsInJpZ2h0MSI6ZmFsc2UsInJpZ2h0MiI6ZmFsc2UsImNyZWF0ZWRBdCI6IjIwMjMtMDEtMTZUMTA6NDE6MjguOTY5WiIsInVwZGF0ZWRBdCI6IjIwMjMtMDEtMTZUMTA6NDE6MjguOTY5WiIsIlVzZXJSb2xlcyI6eyJpZCI6MSwicm9sZUlkIjoxLCJ1c2VySWQiOjEsImFkbWluSWQiOm51bGx9fV0sImlhdCI6MTY3Mzg2NTcxNiwiZXhwIjoxNjczODY5MzE2fQ.cx0YqrXwrvrL8wNMsnTiitL632ORCOxYUJuNQ-g4lOc', description: 'user`s refresh token'})@Column({type: undefined, unique: true, allowNull: false, field: 'userRefreshToken'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/models/user.refresh.token.model.ts:53\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getExpireDate\n                        \n                    \n                \n            \n            \n                \ngetExpireDate()\n                \n            \n\n\n            \n                \n                    Defined in src/users/models/user.refresh.token.model.ts:89\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Date\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getIdentifier\n                        \n                    \n                \n            \n            \n                \ngetIdentifier()\n                \n            \n\n\n            \n                \n                    Defined in src/users/models/user.refresh.token.model.ts:111\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getUser\n                        \n                    \n                \n            \n            \n                \ngetUser()\n                \n            \n\n\n            \n                \n                    Defined in src/users/models/user.refresh.token.model.ts:107\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         User\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getuserId\n                        \n                    \n                \n            \n            \n                \ngetuserId()\n                \n            \n\n\n            \n                \n                    Defined in src/users/models/user.refresh.token.model.ts:98\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         number\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setExpireDate\n                        \n                    \n                \n            \n            \n                \nsetExpireDate(expireDate: Date)\n                \n            \n\n\n            \n                \n                    Defined in src/users/models/user.refresh.token.model.ts:93\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    expireDate\n                                    \n                                                Date\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Date\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setIdentifier\n                        \n                    \n                \n            \n            \n                \nsetIdentifier(identifier: string)\n                \n            \n\n\n            \n                \n                    Defined in src/users/models/user.refresh.token.model.ts:115\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    identifier\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setuserId\n                        \n                    \n                \n            \n            \n                \nsetuserId(userId: number)\n                \n            \n\n\n            \n                \n                    Defined in src/users/models/user.refresh.token.model.ts:102\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport {\n  Column,\n  DataType,\n  Table,\n  Model,\n  ForeignKey,\n  IsEmail,\n  IsInt,\n  BelongsTo,\n  IsUUID,\n} from 'sequelize-typescript';\nimport { UserRefreshCreationAttrbs } from '../../core/interfaces/user.interfaces';\nimport { User } from './user.model';\n\n@Table({ tableName: 'USER`S_Refresh-tokens' })\nexport class UserRefreshToken extends Model {\n  @ApiProperty({ example: '1', description: 'unique identifier' })\n  @Column({\n    type: DataType.INTEGER,\n    unique: true,\n    autoIncrement: true,\n    primaryKey: true,\n    allowNull: false,\n    field: 'id',\n  })\n  public id: number;\n\n  @ApiProperty({ example: 'user@gmail.com', description: 'user`s email' })\n  @IsEmail\n  @Column({\n    type: DataType.STRING,\n    unique: false,\n    allowNull: false,\n    field: 'email',\n  })\n  public email: string;\n\n  @ApiProperty({\n    example:\n      'eyJuilbgghbGciOiJIUzihnuohlI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjEsImlzQWN0aXZhdGVkIjpmYWxzZSwiZW1haWwiOiJ1c2VyQGdtYWlsLmNvbSIsInJvbGVzIjpbeyJpZCI6MSwidmFsdWUiOiJVU0VSIiwiZGVzY3JpcHRpb24iOiJzaW1wbGUgdXNlciIsInJpZ2h0MSI6ZmFsc2UsInJpZ2h0MiI6ZmFsc2UsImNyZWF0ZWRBdCI6IjIwMjMtMDEtMTZUMTA6NDE6MjguOTY5WiIsInVwZGF0ZWRBdCI6IjIwMjMtMDEtMTZUMTA6NDE6MjguOTY5WiIsIlVzZXJSb2xlcyI6eyJpZCI6MSwicm9sZUlkIjoxLCJ1c2VySWQiOjEsImFkbWluSWQiOm51bGx9fV0sImlhdCI6MTY3Mzg2NTcxNiwiZXhwIjoxNjczODY5MzE2fQ.cx0YqrXwrvrL8wNMsnTiitL632ORCOxYUJuNQ-g4lOc',\n    description: 'user`s refresh token',\n  })\n  @Column({\n    type: DataType.CHAR(2500),\n    unique: true,\n    allowNull: false,\n    field: 'userRefreshToken',\n  })\n  public userRefreshToken: string;\n\n  @ApiProperty({ example: '1', description: 'userId' })\n  @ForeignKey(() => User)\n  @IsInt\n  @Column({\n    type: DataType.INTEGER,\n    field: 'userId',\n    unique: false,\n    allowNull: false,\n  })\n  public userId: number;\n\n  @ApiProperty({ example: '86400000', description: 'expireDate' })\n  @Column({\n    type: DataType.DATE,\n    field: 'expireDate',\n  })\n  private expireDate: Date;\n\n  @ApiProperty({\n    example: '9b1deb4d-3b7d-4bad-9bdd-2b0d7b3dcb6d',\n    description: 'identifier',\n  })\n  @IsUUID(4)\n  @Column({\n    type: DataType.STRING,\n    unique: true,\n    allowNull: true,\n    field: 'identifier',\n  })\n  public identifier: string;\n\n  @BelongsTo(() => User)\n  private user: User;\n\n  getExpireDate(): Date {\n    return this.expireDate;\n  }\n\n  setExpireDate(expireDate: Date): Date {\n    this.expireDate = expireDate;\n    return this.expireDate;\n  }\n\n  getuserId(): number {\n    return this.userId;\n  }\n\n  setuserId(userId: number): number {\n    this.userId = userId;\n    return this.userId;\n  }\n\n  getUser(): User {\n    return this.user;\n  }\n\n  getIdentifier(): string {\n    return this.identifier;\n  }\n\n  setIdentifier(identifier: string): string {\n    this.identifier = identifier;\n    return this.identifier;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserRoles.html":{"url":"classes/UserRoles.html","title":"class - UserRoles","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserRoles\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/roles/models/user.roles.model.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    Model\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                adminId\n                            \n                            \n                                    Public\n                                id\n                            \n                            \n                                    Public\n                                ownerId\n                            \n                            \n                                    Public\n                                roleId\n                            \n                            \n                                    Public\n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        adminId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: '1', description: 'adminId'})@ForeignKey(undefined)@Column({type: undefined, field: 'adminId'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/roles/models/user.roles.model.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: '1', description: 'unique identifier'})@Column({type: undefined, unique: true, autoIncrement: true, primaryKey: true, allowNull: false, field: 'id'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/roles/models/user.roles.model.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        ownerId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: '1', description: 'ownerId'})@ForeignKey(undefined)@Column({type: undefined, field: 'ownerId'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/roles/models/user.roles.model.ts:55\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        roleId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: '1', description: 'roleId'})@ForeignKey(undefined)@Column({type: undefined, field: 'roleId'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/roles/models/user.roles.model.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        userId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: '1', description: 'userId'})@ForeignKey(undefined)@Column({type: undefined, field: 'userId'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/roles/models/user.roles.model.ts:39\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport {\n  Column,\n  DataType,\n  Table,\n  Model,\n  ForeignKey,\n} from 'sequelize-typescript';\nimport { Owner } from '../../owner/models/owner.model';\nimport { Admin } from '../../admin/models/admin.model';\nimport { User } from '../../users/models/user.model';\nimport { Role } from './roles.model';\n\n@Table({ tableName: 'USER`s_Roles', createdAt: false, updatedAt: false })\nexport class UserRoles extends Model {\n  @ApiProperty({ example: '1', description: 'unique identifier' })\n  @Column({\n    type: DataType.INTEGER,\n    unique: true,\n    autoIncrement: true,\n    primaryKey: true,\n    allowNull: false,\n    field: 'id',\n  })\n  public id: number;\n  @ApiProperty({ example: '1', description: 'roleId' })\n  @ForeignKey(() => Role)\n  @Column({\n    type: DataType.INTEGER,\n    field: 'roleId',\n  })\n  public roleId: number;\n  @ApiProperty({ example: '1', description: 'userId' })\n  @ForeignKey(() => User)\n  @Column({\n    type: DataType.INTEGER,\n    field: 'userId',\n  })\n  public userId: number;\n\n  @ApiProperty({ example: '1', description: 'adminId' })\n  @ForeignKey(() => Admin)\n  @Column({\n    type: DataType.INTEGER,\n    field: 'adminId',\n  })\n  public adminId: number;\n\n  @ApiProperty({ example: '1', description: 'ownerId' })\n  @ForeignKey(() => Owner)\n  @Column({\n    type: DataType.INTEGER,\n    field: 'ownerId',\n  })\n  public ownerId: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UsercreationAttrbs.html":{"url":"interfaces/UsercreationAttrbs.html","title":"interface - UsercreationAttrbs","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  UsercreationAttrbs\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/interfaces/user.interfaces.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            activationLink\n                                        \n                                \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            password\n                                        \n                                \n                                \n                                        \n                                            phoneNumber\n                                        \n                                \n                                \n                                        \n                                            surname\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        activationLink\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        activationLink:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        password\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        password:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        phoneNumber\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        phoneNumber:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        surname\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        surname:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface UserRefreshCreationAttrbs {\n  userId: number;\n  userRefreshToken: string;\n  userAgent: string;\n  email: string;\n}\n\nexport interface RolecreationAttrbs {\n  value: string;\n  description: string;\n}\nexport interface UsercreationAttrbs {\n  name: string;\n  surname: string;\n  email: string;\n  phoneNumber: string;\n  password: string;\n  activationLink: string;\n}\n\nexport interface InitializeUser {\n  name: string;\n  surname: string;\n  phoneNumber: string;\n  email: string;\n  password: string;\n  confirmPassword: string;\n}\n\nexport interface ValidateUser {\n  email: string;\n  password: string;\n}\n\nexport interface UserInterface {\n  id: number;\n  name: string;\n  surname: string;\n  email: string;\n  phoneNumber: string;\n  isAdmin: boolean;\n  addContent: boolean;\n  editContent: boolean;\n  editWebsite: boolean;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/UsersController.html":{"url":"controllers/UsersController.html","title":"controller - UsersController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  UsersController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/users.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                user\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                banUser\n                            \n                            \n                                findUser\n                            \n                            \n                                getAllUsers\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        banUser\n                        \n                    \n                \n            \n            \n                \nbanUser(dto: BanUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Throttle(40, 400)@ApiOperation({summary: 'Ban a user'})@ApiResponse({status: 200})@Roles('OWNER')@UseGuards(JwtAuthGuard, RolesGuard, OwnerAdminGuard, AuthFerfershGuard)@Post('/ban')\n                \n            \n\n            \n                \n                    Defined in src/users/users.controller.ts:91\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dto\n                                    \n                                                BanUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findUser\n                        \n                    \n                \n            \n            \n                \nfindUser(v: string[], page: number, pageSize: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Throttle(60, 700)@ApiOperation({summary: 'Getting User'})@ApiResponse({status: 200, type: User})@Roles('OWNER')@UseGuards(JwtAuthGuard, RolesGuard, OwnerAdminGuard, AuthFerfershGuard)@Get('/find_users')\n                \n            \n\n            \n                \n                    Defined in src/users/users.controller.ts:77\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    v\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    page\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    pageSize\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAllUsers\n                        \n                    \n                \n            \n            \n                \ngetAllUsers(page: number, pageSize: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Throttle(40, 400)@ApiOperation({summary: 'Getting Users'})@ApiResponse({status: 200, type: undefined})@Roles('OWNER')@UseGuards(JwtAuthGuard, RolesGuard, OwnerAdminGuard, AuthFerfershGuard)@Get('/get_users')\n                \n            \n\n            \n                \n                    Defined in src/users/users.controller.ts:64\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    page\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    pageSize\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(response: Response, request: Request, next: NextFunction, userId: number, userDto: UpdateUserDto, userAgent: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Throttle(40, 400)@Roles('USER')@UseGuards(JwtAuthGuard, RolesGuard, UserGuard)@HttpCode(201)@Patch('update')\n                \n            \n\n            \n                \n                    Defined in src/users/users.controller.ts:100\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    response\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    request\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                            NextFunction\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    userId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    userDto\n                                    \n                                                UpdateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    userAgent\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Get,\n  Post,\n  Body,\n  UseGuards,\n  HttpCode,\n  Patch,\n  Req,\n  Res,\n  Next,\n  ClassSerializerInterceptor,\n  UseInterceptors,\n  Query,\n  ParseIntPipe,\n  ParseArrayPipe,\n  UseFilters,\n} from '@nestjs/common';\nimport {\n  ApiBearerAuth,\n  ApiOperation,\n  ApiResponse,\n  ApiTags,\n} from '@nestjs/swagger';\nimport { Roles } from '../common/decorators/roles-auth.decorator';\nimport { JwtAuthGuard } from '../common/guards/jwt-auth.guard';\nimport { User } from './models/user.model';\nimport { UsersService } from './services/users.service';\nimport { RolesGuard } from '../common/guards/roles.guard';\nimport { BanUserDto } from './dto/ban-user.dto';\nimport { Throttle } from '@nestjs/throttler';\nimport { ThrottlerBehindProxyGuard } from '../common/guards/throttler-behind-proxy.guard';\nimport { AuthService } from '../auth/auth.service';\nimport { UpdateUserDto } from './dto/update-user.dto';\nimport { NextFunction, Request, Response } from 'express';\nimport { UserAgent } from '../common/decorators/user-agent.decorator';\nimport { UserId } from '../common/decorators/user.id.decorator';\nimport { UserGuard } from '../common/guards/user.guard';\nimport { UserInterface } from '../core/interfaces/user.interfaces';\nimport { ValidateDto } from '../common/pipes/validation.pipe';\nimport { OwnerAdminGuard } from '../common/guards/owner-admin.guard';\nimport { AuthFerfershGuard } from '../common/guards/jw-refresh.guard';\nimport { ApiErrorExceptionFilter } from '../common/filters/error-handler.filter';\nimport { ApiExceptionFilter } from '../common/filters/api-exception.filter';\n\n@UseGuards(ThrottlerBehindProxyGuard)\n@UseFilters(ApiErrorExceptionFilter, ApiExceptionFilter)\n@UseInterceptors(ClassSerializerInterceptor)\n@ApiTags('users')\n@ApiBearerAuth('JWT-auth')\n@Controller('user')\nexport class UsersController {\n  constructor(\n    private readonly userService: UsersService,\n    private readonly authService: AuthService,\n  ) {}\n\n  @Throttle(40, 400)\n  @ApiOperation({ summary: 'Getting Users' })\n  @ApiResponse({ status: 200, type: [User] })\n  @Roles('OWNER')\n  @UseGuards(JwtAuthGuard, RolesGuard, OwnerAdminGuard, AuthFerfershGuard)\n  @Get('/get_users')\n  getAllUsers(\n    @Query('page', ParseIntPipe) page: number,\n    @Query('pageSize', ParseIntPipe) pageSize: number,\n  ): Promise {\n    return this.userService.getAllUsers(page, pageSize);\n  }\n\n  @Throttle(60, 700)\n  @ApiOperation({ summary: 'Getting User' })\n  @ApiResponse({ status: 200, type: User })\n  @Roles('OWNER')\n  @UseGuards(JwtAuthGuard, RolesGuard, OwnerAdminGuard, AuthFerfershGuard)\n  @Get('/find_users')\n  findUser(\n    @Query('v', ParseArrayPipe) v: string[],\n    @Query('page', ParseIntPipe) page: number,\n    @Query('pageSize', ParseIntPipe) pageSize: number,\n  ) {\n    return this.userService.findUser(v, page, pageSize);\n  }\n\n  @Throttle(40, 400)\n  @ApiOperation({ summary: 'Ban a user' })\n  @ApiResponse({ status: 200 })\n  @Roles('OWNER')\n  @UseGuards(JwtAuthGuard, RolesGuard, OwnerAdminGuard, AuthFerfershGuard)\n  @Post('/ban')\n  banUser(@Body() dto: BanUserDto) {\n    return this.userService.banUser(dto);\n  }\n\n  @Throttle(40, 400)\n  @Roles('USER')\n  @UseGuards(JwtAuthGuard, RolesGuard, UserGuard)\n  @HttpCode(201)\n  @Patch('update')\n  update(\n    @Res() response: Response,\n    @Req() request: Request,\n    @Next() next: NextFunction,\n    @UserId('USER-ID') userId: number,\n    @Body() userDto: UpdateUserDto,\n    @UserAgent('USER-AGENT') userAgent: string,\n  ) {\n    (async () => {\n      await this.userService.updateUser(userDto, userId);\n      return this.authService.refresh(response, request, next, null, userAgent);\n    })();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UsersModule.html":{"url":"modules/UsersModule.html","title":"module - UsersModule","body":"\n                   \n\n\n\n\n    Modules\n    UsersModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_exports\n\n\n\ncluster_UsersModule_providers\n\n\n\n\nUserJwtRefreshTokenService \n\nUserJwtRefreshTokenService \n\n\n\nUsersService \n\nUsersService \n\n\n\nUsersModule\n\nUsersModule\n\nUserJwtRefreshTokenService  -->\n\nUsersModule->UserJwtRefreshTokenService \n\n\n\nUsersService  -->\n\nUsersModule->UsersService \n\n\n\n\n\nAuthService\n\nAuthService\n\nUsersModule -->\n\nAuthService->UsersModule\n\n\n\n\n\nTasksService\n\nTasksService\n\nUsersModule -->\n\nTasksService->UsersModule\n\n\n\n\n\nUserJwtRefreshTokenService\n\nUserJwtRefreshTokenService\n\nUsersModule -->\n\nUserJwtRefreshTokenService->UsersModule\n\n\n\n\n\nUsersService\n\nUsersService\n\nUsersModule -->\n\nUsersService->UsersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/users/users.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AuthService\n                        \n                        \n                            TasksService\n                        \n                        \n                            UserJwtRefreshTokenService\n                        \n                        \n                            UsersService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            UsersController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            UserJwtRefreshTokenService\n                        \n                        \n                            UsersService\n                        \n                    \n                \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        configure\n                        \n                    \n                \n            \n            \n                \nconfigure(consumer: MiddlewareConsumer)\n                \n            \n\n\n            \n                \n                    Defined in src/users/users.module.ts:97\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    consumer\n                                    \n                                            MiddlewareConsumer\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        import {\n  forwardRef,\n  MiddlewareConsumer,\n  Module,\n  NestModule,\n  RequestMethod,\n} from '@nestjs/common';\nimport { UsersController } from './users.controller';\nimport { UsersService } from './services/users.service';\nimport { SequelizeModule } from '@nestjs/sequelize';\nimport { User } from './models/user.model';\nimport { Role } from '../roles/models/roles.model';\nimport { UserRoles } from '../roles/models/user.roles.model';\nimport { RolesModule } from '../roles/roles.module';\nimport { AuthModule } from '../auth/auth.module';\nimport { UserRefreshToken } from './models/user.refresh.token.model';\nimport { JwtModule } from '@nestjs/jwt';\nimport { UserJwtRefreshTokenService } from './services/jwt-refresh.service';\nimport { UserMiddleware } from '../common/middlewares/user.middleware';\nimport { InitializeUserMiddleware } from '../common/middlewares/initialize-user.middleware';\nimport { AdminRefreshToken } from '../admin/models/admin.refresh.token.model';\nimport { Admin } from '../admin/models/admin.model';\nimport { AdminModule } from '../admin/admin.module';\nimport { Owner } from '../owner/models/owner.model';\nimport { OwnerRefreshToken } from '../owner/models/owner.refresh.token.model';\nimport { OwnerModule } from '../owner/owner.module';\nimport RequestValidator from '../common/pipes/body-validator.pipe';\nimport { UpdateUserDto } from './dto/update-user.dto';\nimport { ConfigModule } from '@nestjs/config';\nimport { TasksService } from '../core/services/scedule.service';\nimport { CoreModule } from '../core/core.module';\nimport { ProductModule } from '../product/product.module';\nimport { CartProduct } from '../cart/models/cart.product.model';\nimport { Cart } from '../cart/models/cart.model';\nimport { Category } from '../categories/models/category.model';\nimport { ProductCategories } from '../categories/models/product.categories.model';\nimport { Order } from '../orders/models/order.model';\nimport { OrderProduct } from '../orders/models/order.product.model';\nimport { Product } from '../product/models/product.model';\nimport { AuthService } from '../auth/auth.service';\nimport { MailModule } from '../mail/mail.module';\nimport { BookmarksProducts } from '../product/models/bookmark.products';\nimport { WatchedProducts } from '../product/models/watched.products.model';\n@Module({\n  controllers: [UsersController],\n  imports: [\n    ConfigModule.forRoot({\n      envFilePath: `.${process.env.NODE_ENV}.env`,\n      expandVariables: true,\n      isGlobal: true,\n    }),\n    SequelizeModule.forFeature([\n      Product,\n      Order,\n      OrderProduct,\n      Category,\n      ProductCategories,\n      Admin,\n      AdminRefreshToken,\n      Owner,\n      OwnerRefreshToken,\n      User,\n      UserRefreshToken,\n      Role,\n      UserRoles,\n      Cart,\n      CartProduct,\n      BookmarksProducts,\n      WatchedProducts,\n    ]),\n    JwtModule.register({\n      secret:\n        process.env.JWT_REFRESH_USER_SECRET.toString().trim() ||\n        'knfdgfhRRljhtop6hfdghshfdshfohjlymhnhgnljjukfty6yujhjbjlvcglkidrtujhtrfujuj',\n      signOptions: {\n        expiresIn: 604800000,\n      },\n    }),\n    forwardRef(() => MailModule),\n    forwardRef(() => ProductModule),\n    forwardRef(() => CoreModule),\n    forwardRef(() => AdminModule),\n    forwardRef(() => RolesModule),\n    forwardRef(() => AuthModule),\n    forwardRef(() => OwnerModule),\n    forwardRef(() => UsersModule),\n  ],\n  providers: [\n    UsersService,\n    UserJwtRefreshTokenService,\n    TasksService,\n    AuthService,\n  ],\n  exports: [UsersService, UserJwtRefreshTokenService],\n})\nexport class UsersModule implements NestModule {\n  configure(consumer: MiddlewareConsumer) {\n    consumer\n      .apply(UserMiddleware)\n      .forRoutes({ path: 'users/update', method: RequestMethod.PATCH });\n    consumer\n      .apply(RequestValidator.validate(UpdateUserDto))\n      .forRoutes({ path: 'users/update', method: RequestMethod.PATCH });\n    consumer\n      .apply(InitializeUserMiddleware)\n      .forRoutes(\n        { path: 'user/get_users', method: RequestMethod.GET },\n        { path: 'user/find_users', method: RequestMethod.GET },\n      );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UsersService.html":{"url":"injectables/UsersService.html","title":"injectable - UsersService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UsersService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/services/users.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                addRole\n                            \n                            \n                                    Async\n                                banUser\n                            \n                            \n                                    Async\n                                changePassword\n                            \n                            \n                                    Async\n                                createUser\n                            \n                            \n                                    Async\n                                findUser\n                            \n                            \n                                    Async\n                                getAllUsers\n                            \n                            \n                                    Async\n                                getUserByEmail\n                            \n                            \n                                    Async\n                                getUserById\n                            \n                            \n                                    Async\n                                getUserByPhoneNumber\n                            \n                            \n                                    Async\n                                initializeUser\n                            \n                            \n                                    Async\n                                resetPassword\n                            \n                            \n                                    Async\n                                rewritePassword\n                            \n                            \n                                    Async\n                                setConfirmCode\n                            \n                            \n                                    Async\n                                updateUser\n                            \n                            \n                                    Async\n                                validateUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userRepository, roleService: RolesService)\n                    \n                \n                        \n                            \n                                Defined in src/users/services/users.service.ts:38\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userRepository\n                                                  \n                                                        \n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        roleService\n                                                  \n                                                        \n                                                                        RolesService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        addRole\n                        \n                    \n                \n            \n            \n                \n                    \n                    addRole(dto: AddRoleDto)\n                \n            \n\n\n            \n                \n                    Defined in src/users/services/users.service.ts:200\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dto\n                                    \n                                                AddRoleDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        banUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    banUser(dto: BanUserDto)\n                \n            \n\n\n            \n                \n                    Defined in src/users/services/users.service.ts:212\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dto\n                                    \n                                                BanUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        changePassword\n                        \n                    \n                \n            \n            \n                \n                    \n                    changePassword(userId: number, password: string)\n                \n            \n\n\n            \n                \n                    Defined in src/users/services/users.service.ts:261\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        createUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    createUser(dto: CreateUserDto)\n                \n            \n\n\n            \n                \n                    Defined in src/users/services/users.service.ts:122\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dto\n                                    \n                                                CreateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    findUser(v: string[], page: number, userPerPage: number)\n                \n            \n\n\n            \n                \n                    Defined in src/users/services/users.service.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    v\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    page\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    userPerPage\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getAllUsers\n                        \n                    \n                \n            \n            \n                \n                    \n                    getAllUsers(page: number, userPerPage: number)\n                \n            \n\n\n            \n                \n                    Defined in src/users/services/users.service.ts:146\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    page\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    userPerPage\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getUserByEmail\n                        \n                    \n                \n            \n            \n                \n                    \n                    getUserByEmail(email: string)\n                \n            \n\n\n            \n                \n                    Defined in src/users/services/users.service.ts:184\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getUserById\n                        \n                    \n                \n            \n            \n                \n                    \n                    getUserById(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/users/services/users.service.ts:174\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getUserByPhoneNumber\n                        \n                    \n                \n            \n            \n                \n                    \n                    getUserByPhoneNumber(phoneNumber: string)\n                \n            \n\n\n            \n                \n                    Defined in src/users/services/users.service.ts:192\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    phoneNumber\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        initializeUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    initializeUser(userDto: InitializeUser)\n                \n            \n\n\n            \n                \n                    Defined in src/users/services/users.service.ts:88\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userDto\n                                    \n                                                InitializeUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        resetPassword\n                        \n                    \n                \n            \n            \n                \n                    \n                    resetPassword(resetDto: ResetDto)\n                \n            \n\n\n            \n                \n                    Defined in src/users/services/users.service.ts:246\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    resetDto\n                                    \n                                                ResetDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        rewritePassword\n                        \n                    \n                \n            \n            \n                \n                    \n                    rewritePassword(userId: number, password: string)\n                \n            \n\n\n            \n                \n                    Defined in src/users/services/users.service.ts:269\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        setConfirmCode\n                        \n                    \n                \n            \n            \n                \n                    \n                    setConfirmCode(codeDto: CodeDto, code: number)\n                \n            \n\n\n            \n                \n                    Defined in src/users/services/users.service.ts:238\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    codeDto\n                                    \n                                                CodeDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    code\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        updateUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateUser(userDto: UpdateUserDto, userId: number)\n                \n            \n\n\n            \n                \n                    Defined in src/users/services/users.service.ts:109\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userDto\n                                    \n                                                UpdateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    userId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        validateUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    validateUser(userDto: ValidateUser)\n                \n            \n\n\n            \n                \n                    Defined in src/users/services/users.service.ts:223\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userDto\n                                    \n                                                ValidateUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  BadRequestException,\n  HttpException,\n  HttpStatus,\n  Injectable,\n  NotFoundException,\n  Scope,\n  UnauthorizedException,\n} from '@nestjs/common';\nimport { InjectModel } from '@nestjs/sequelize';\nimport { RolesService } from '../../roles/roles.service';\nimport { AddRoleDto } from '../dto/add-role.dto';\nimport { BanUserDto } from '../dto/ban-user.dto';\nimport { CreateUserDto } from '../dto/create-user.dto';\nimport {\n  INVALID_CODE,\n  INVALID_EMAIL,\n  INVALID_EMAIL_OR_PASSWORD,\n  RESET_TIME_EXPIRED,\n  USER_NOT_FOUND,\n  USER_OR_ROLE_NOT_FOUND,\n  USER_WITH_EMAIL_DOESNT_EXIST,\n  USER_WITH_EMAIL_EXIST,\n  USER_WITH_PHONENUMBER_EXIST,\n} from '../constants/user.constants';\nimport { User } from '../models/user.model';\nimport * as bcrypt from 'bcrypt';\nimport {\n  InitializeUser,\n  UserInterface,\n  ValidateUser,\n} from '../../core/interfaces/user.interfaces';\nimport { ResetDto } from '../../auth/dto/reset.password.dto';\nimport { CodeDto } from '../../core/interfaces/auth.interfaces';\nimport { UpdateUserDto } from '../dto/update-user.dto';\nimport { ApiException } from '../../common/exceptions/api.exception';\n@Injectable({ scope: Scope.TRANSIENT })\nexport class UsersService {\n  constructor(\n    @InjectModel(User) private userRepository: typeof User,\n    private readonly roleService: RolesService,\n  ) {}\n\n  async findUser(\n    v: string[],\n    page: number,\n    userPerPage: number,\n  ): Promise {\n    const params = v.map((param: string) => {\n      return param.toLowerCase();\n    });\n    const dbUsers = await this.userRepository.findAll({\n      include: { all: true },\n      offset: (page - 1) * userPerPage,\n      limit: userPerPage,\n      order: [['updatedAt', 'DESC']],\n      attributes: [\n        'id',\n        'name',\n        'surname',\n        'email',\n        'phoneNumber',\n        'isAdmin',\n        'addContent',\n        'editContent',\n        'editWebsite',\n      ],\n    });\n    if (dbUsers.length === 0) {\n      return [];\n    }\n    const users = [];\n    dbUsers.forEach((user: User) => {\n      const dbArray = [];\n      for (const key in user) {\n        dbArray.push(user[key]);\n      }\n      const isContained = params.some(\n        (param: string) => dbArray.indexOf(param) >= 0,\n      );\n      if (isContained) {\n        users.push(user);\n      }\n    });\n    return users;\n  }\n\n  async initializeUser(userDto: InitializeUser): Promise {\n    const [email, phoneNumber] = await Promise.all([\n      await this.getUserByEmail(userDto.email),\n      await this.getUserByPhoneNumber(userDto.phoneNumber),\n    ]);\n    if (email) {\n      throw new ApiException(HttpStatus.BAD_REQUEST, 'Bad request', USER_WITH_EMAIL_EXIST);\n    }\n    if (phoneNumber) {\n       throw new ApiException(HttpStatus.BAD_REQUEST, 'Bad request', USER_WITH_PHONENUMBER_EXIST);\n    }\n    const SALT_ROUNDS = Number(process.env.SALT_ROUNDS);\n    const salt = await bcrypt.genSalt(SALT_ROUNDS);\n    const hashedPassword = await bcrypt.hash(userDto.password, salt);\n    const user = await this.createUser({\n      ...userDto,\n      password: hashedPassword,\n    });\n    return user.save();\n  }\n\n  async updateUser(userDto: UpdateUserDto, userId: number): Promise {\n    const user = await this.getUserById(userId);\n    if (!user) {\n      throw new ApiException(HttpStatus.NOT_FOUND, 'Not found!', USER_NOT_FOUND);\n    }\n    user.setName(userDto.name);\n    user.setSurname(userDto.surname);\n    user.setCity(userDto.city);\n    user.setCountry(userDto.country);\n    user.setPostOffice(userDto.postOffice);\n    return user.save();\n  }\n\n  async createUser(dto: CreateUserDto): Promise {\n    const user = await this.userRepository.create(dto);\n    user.setIsActivated(false);\n    user.setIsAdmin(false);\n    user.setAddContent(false);\n    user.setEditWebsite(false);\n    user.setEditContent(false);\n    const role = await this.roleService.getRoleByValue('USER');\n    if (!role) {\n      const userRole = await this.roleService.createRole({\n        value: 'USER',\n        description: 'simple user',\n      });\n      await user.$set('roles', userRole.id);\n      user.roles = [role];\n      await user.save();\n      return user;\n    }\n    await user.$set('roles', role.id);\n    user.roles = [role];\n    await user.save();\n    return user;\n  }\n\n  async getAllUsers(\n    page: number,\n    userPerPage: number,\n  ): Promise {\n    const users: User[] = await this.userRepository.findAll({\n      include: { all: true },\n      offset: (page - 1) * userPerPage,\n      limit: userPerPage,\n      order: [['updatedAt', 'DESC']],\n    });\n    if (users.length === 0) {\n      return [];\n    }\n    return users.map((user: User) => {\n      return {\n        id: user.id,\n        name: user.getName(),\n        surname: user.getSurname(),\n        email: user.email,\n        phoneNumber: user.phoneNumber,\n        isAdmin: user.getIsAdmin(),\n        addContent: user.getAddContent(),\n        editContent: user.getEditContent(),\n        editWebsite: user.getEditWebSite(),\n      };\n    });\n  }\n\n  async getUserById(id: number): Promise {\n    const user = await this.userRepository.findByPk(id, {\n      include: { all: true },\n    });\n    if (!user) {\n      throw new ApiException(HttpStatus.NOT_FOUND, 'Not found!', USER_NOT_FOUND);   \n    }\n    return user;\n  }\n\n  async getUserByEmail(email: string): Promise {\n    const user = await this.userRepository.findOne({\n      where: { email: email },\n      include: { all: true },\n    });\n    return user;\n  }\n\n  async getUserByPhoneNumber(phoneNumber: string): Promise {\n    const user = await this.userRepository.findOne({\n      where: { phoneNumber: phoneNumber },\n      include: { all: true },\n    });\n    return user;\n  }\n\n  async addRole(dto: AddRoleDto): Promise {\n    const [user, role] = await Promise.all([\n      await this.userRepository.findByPk(dto.userId),\n      await this.roleService.getRoleByValue(dto.value),\n    ]);\n    if (role && user) {\n      await user.$add('role', role.id);\n      return dto;\n    }\n    throw new ApiException(HttpStatus.NOT_FOUND, 'Not found!', USER_OR_ROLE_NOT_FOUND);   \n  }\n\n  async banUser(dto: BanUserDto): Promise {\n    const user = await this.userRepository.findByPk(dto.userId);\n    if (!user) {\n      throw new ApiException(HttpStatus.NOT_FOUND, 'Not found!', USER_NOT_FOUND);   \n    }\n    user.banned = true;\n    user.banReason = dto.banReason;\n    await user.save();\n    return user;\n  }\n\n  async validateUser(userDto: ValidateUser): Promise {\n    const user = await this.getUserByEmail(userDto.email);\n    if (!user) {\n     throw new ApiException(HttpStatus.BAD_REQUEST, 'Bad request', USER_WITH_EMAIL_DOESNT_EXIST);\n    }\n    const passwordEquals = await bcrypt.compare(\n      userDto.password,\n      user.getPassword(),\n    );\n    if (passwordEquals) {\n      return user;\n    }\n    throw new ApiException(HttpStatus.UNAUTHORIZED, 'Unathorized!', INVALID_EMAIL_OR_PASSWORD);   \n  }\n\n  async setConfirmCode(codeDto: CodeDto, code: number): Promise {\n    const user = await this.getUserByEmail(codeDto.email);\n    user.setConfirmCode(code);\n    user.setResetTokenExpiration(Number(Date.now() + 3600000));\n    await user.save();\n    return user.email;\n  }\n\n  async resetPassword(resetDto: ResetDto): Promise {\n    const user = await this.getUserByEmail(resetDto.email);\n    if (resetDto.email !== user.email) {\n      throw new ApiException(HttpStatus.BAD_REQUEST, 'Bad request', INVALID_EMAIL);\n    }\n    if (Number(Date.now()) >= user.getResetTokenExpiration()) {\n      throw new ApiException(HttpStatus.BAD_REQUEST, 'Bad request', RESET_TIME_EXPIRED);\n    }\n    if (Number(resetDto.code) !== user.getConfirmCode()) {\n      throw new ApiException(HttpStatus.BAD_REQUEST, 'Bad request', INVALID_CODE);\n    }\n    await this.rewritePassword(user.id, resetDto.password);\n    return user.email;\n  }\n\n  async changePassword(userId: number, password: string): Promise {\n    const user = await this.getUserById(userId);\n    if (!user) {\n      throw new ApiException(HttpStatus.NOT_FOUND, 'Not found!', USER_NOT_FOUND);  \n    }\n    return this.rewritePassword(user.id, password);\n  }\n\n  async rewritePassword(userId: number, password: string): Promise {\n    const user = await this.getUserById(userId);\n    if (!user) {\n      throw new ApiException(HttpStatus.NOT_FOUND, 'Not found!', USER_NOT_FOUND);   \n    }\n    const SALT_ROUNDS = Number(process.env.SALT_ROUNDS);\n    const salt = await bcrypt.genSalt(SALT_ROUNDS);\n    const hashedPassword = await bcrypt.hash(password, salt);\n    user.setNewPasssword(hashedPassword);\n    return user.save();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ValidateDto.html":{"url":"injectables/ValidateDto.html","title":"injectable - ValidateDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ValidateDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/pipes/validation.pipe.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                transform\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        transform\n                        \n                    \n                \n            \n            \n                \n                    \n                    transform(value: any, metadata: ArgumentMetadata)\n                \n            \n\n\n            \n                \n                    Defined in src/common/pipes/validation.pipe.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    metadata\n                                    \n                                            ArgumentMetadata\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { ArgumentMetadata, Injectable, PipeTransform } from '@nestjs/common';\nimport { plainToClass } from 'class-transformer';\nimport { validate } from 'class-validator';\nimport { ValidationException } from '../exceptions/validation.excetion';\n\n@Injectable()\nexport class ValidateDto implements PipeTransform {\n  async transform(value: any, metadata: ArgumentMetadata): Promise {\n    const obj = plainToClass(metadata.metatype, value);\n    const errors = await validate(obj);\n    if (errors.length) {\n      const messages = errors.map((err) => {\n        return `${err.property} - ${Object.values(err.constraints).join(', ')}`;\n      });\n      throw new ValidationException(messages);\n    }\n    return value;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ValidateUser.html":{"url":"interfaces/ValidateUser.html","title":"interface - ValidateUser","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ValidateUser\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/interfaces/user.interfaces.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            password\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        password\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        password:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface UserRefreshCreationAttrbs {\n  userId: number;\n  userRefreshToken: string;\n  userAgent: string;\n  email: string;\n}\n\nexport interface RolecreationAttrbs {\n  value: string;\n  description: string;\n}\nexport interface UsercreationAttrbs {\n  name: string;\n  surname: string;\n  email: string;\n  phoneNumber: string;\n  password: string;\n  activationLink: string;\n}\n\nexport interface InitializeUser {\n  name: string;\n  surname: string;\n  phoneNumber: string;\n  email: string;\n  password: string;\n  confirmPassword: string;\n}\n\nexport interface ValidateUser {\n  email: string;\n  password: string;\n}\n\nexport interface UserInterface {\n  id: number;\n  name: string;\n  surname: string;\n  email: string;\n  phoneNumber: string;\n  isAdmin: boolean;\n  addContent: boolean;\n  editContent: boolean;\n  editWebsite: boolean;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ValidationException.html":{"url":"classes/ValidationException.html","title":"class - ValidationException","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ValidationException\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/exceptions/validation.excetion.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    HttpException\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                messages\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(response)\n                    \n                \n                        \n                            \n                                Defined in src/common/exceptions/validation.excetion.ts:4\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        response\n                                                  \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        messages\n                        \n                    \n                \n            \n                    \n                        \n                                Defined in src/common/exceptions/validation.excetion.ts:4\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { HttpException, HttpStatus } from '@nestjs/common';\n\nexport class ValidationException extends HttpException {\n  messages;\n\n  constructor(response) {\n    super(response, HttpStatus.BAD_REQUEST);\n    this.messages = response;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/WatchedProducts.html":{"url":"classes/WatchedProducts.html","title":"class - WatchedProducts","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  WatchedProducts\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/product/models/watched.products.model.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    Model\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                id\n                            \n                            \n                                    Public\n                                productId\n                            \n                            \n                                    Public\n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: undefined, unique: true, autoIncrement: true, primaryKey: true, allowNull: false, field: 'id'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/product/models/watched.products.model.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        productId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ForeignKey(undefined)@Column({type: undefined, field: 'productId'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/product/models/watched.products.model.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        userId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ForeignKey(undefined)@Column({type: undefined, field: 'userId'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/product/models/watched.products.model.ts:29\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  Column,\n  DataType,\n  Table,\n  Model,\n  ForeignKey,\n} from 'sequelize-typescript';\nimport { User } from '../../users/models/user.model';\nimport { Product } from '../../product/models/product.model';\n\n\n@Table({ tableName: 'PRODUCT_Categories', createdAt: false, updatedAt: false })\nexport class WatchedProducts extends Model {\n  @Column({\n    type: DataType.INTEGER,\n    unique: true,\n    autoIncrement: true,\n    primaryKey: true,\n    allowNull: false,\n    field: 'id',\n  })\n  public id: number;\n\n  @ForeignKey(() => User)\n  @Column({\n    type: DataType.INTEGER,\n    field: 'userId',\n  })\n  public userId: number;\n\n  @ForeignKey(() => Product)\n  @Column({\n    type: DataType.INTEGER,\n    field: 'productId',\n  })\n  public productId: number;\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @maxmind/geoip2-node : ^3.5.0\n        \n            @nestjs-modules/mailer : ^1.8.1\n        \n            @nestjs/axios : ^1.0.1\n        \n            @nestjs/bull : ^0.6.2\n        \n            @nestjs/common : ^9.1.6\n        \n            @nestjs/config : ^2.2.0\n        \n            @nestjs/core : ^9.1.6\n        \n            @nestjs/event-emitter : ^1.3.1\n        \n            @nestjs/jwt : ^10.0.1\n        \n            @nestjs/platform-express : ^9.0.0\n        \n            @nestjs/platform-fastify : ^9.2.1\n        \n            @nestjs/platform-socket.io : ^9.2.1\n        \n            @nestjs/schedule : ^2.1.0\n        \n            @nestjs/sequelize : ^9.0.0\n        \n            @nestjs/serve-static : ^3.0.0\n        \n            @nestjs/swagger : ^6.1.4\n        \n            @nestjs/throttler : ^3.1.0\n        \n            @nestjs/websockets : ^9.2.1\n        \n            bcrypt : ^5.1.0\n        \n            body-parser : ^1.20.1\n        \n            bull : ^4.10.2\n        \n            cache-manager : ^5.1.5\n        \n            class-transformer : ^0.5.1\n        \n            class-validator : ^0.14.0\n        \n            compression : ^1.7.4\n        \n            cookie-parser : ^1.4.6\n        \n            cors : ^2.8.5\n        \n            cross-env : ^7.0.3\n        \n            deep-parse-json : ^1.0.2\n        \n            geoip-lite : ^1.4.7\n        \n            helmet : ^6.0.0\n        \n            ioredis : ^5.2.5\n        \n            ip : ^1.1.8\n        \n            liqpay-sdk-nodejs : ^1.0.3\n        \n            nest-commander : ^3.4.0\n        \n            nodemailer : ^6.8.0\n        \n            pg : ^8.8.0\n        \n            pg-hstore : ^2.3.4\n        \n            reflect-metadata : ^0.1.13\n        \n            rimraf : ^3.0.2\n        \n            rxjs : ^7.5.7\n        \n            sequelize : ^6.28.0\n        \n            sequelize-typescript : ^2.1.5\n        \n            serve-favicon : ^2.5.0\n        \n            swagger-ui-express : ^4.5.0\n        \n            telegraf : ^4.11.2\n        \n            uuid : ^9.0.0\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/fileCreated.html":{"url":"interfaces/fileCreated.html","title":"interface - fileCreated","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  fileCreated\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/services/file.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            fileName\n                                        \n                                \n                                \n                                        \n                                            filePath\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        fileName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        fileName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        filePath\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        filePath:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { HttpException, HttpStatus, Injectable, Scope } from '@nestjs/common';\nimport * as fs from 'fs';\nimport * as uuid from 'uuid';\nimport path, { extname } from 'path';\nimport { Request } from 'express';\nimport { mkdirSync, existsSync } from 'fs';\nimport { v4 } from 'uuid';\n\n// tslint:disable-next-line: class-name\ninterface fileCreated {\n  readonly fileName: string;\n  readonly filePath: string;\n}\n\n@Injectable({ scope: Scope.DEFAULT })\nexport class FilesService {\n  async createFile(file: {\n    buffer: string | NodeJS.ArrayBufferView;\n  }): Promise {\n    try {\n      const fileName = uuid.v4() + '.jpg';\n      const filePath = path.resolve(__dirname, '..', 'static');\n      if (!fs.existsSync(filePath)) {\n        fs.mkdirSync(filePath, { recursive: true });\n      }\n      fs.writeFileSync(path.join(filePath, fileName), file.buffer);\n      return { fileName: fileName, filePath: filePath };\n    } catch (e) {\n      throw new HttpException(\n        'Error occured while writing file.',\n        HttpStatus.INTERNAL_SERVER_ERROR,\n      );\n    }\n  }\n\n  async unlinkFile(filePath: string) {\n    filePath = path.join(__dirname, 'static', filePath);\n    fs.unlink(filePath, (err) => {\n      throw new HttpException(err.message, HttpStatus.INTERNAL_SERVER_ERROR);\n    });\n  }\n\n\n  createfileName(\n    req: Request,\n    file: Express.Multer.File,\n    callback: any,  \n  ){\n    const name = file.originalname.split('.')[0];\n    const ext = extname(file.originalname);\n    const randomName = v4();\n    callback(null, `${randomName}--${req.body.title}--${name}${ext}`);\n  }\n\n  fileFilter(\n    req: Request,\n    file: Express.Multer.File,\n    callback: (error: Error, acceptFile: boolean) => void\n  ){\n    const filetypes = /\\.(jpg|jpeg|png|gif)$/;\n    const extname = filetypes.test(path.extname(file.originalname).toLowerCase());\n    const mimetype = filetypes.test(file.mimetype);\n    if(mimetype && extname){\n        return callback(null, true);\n    } \n    return callback(new Error('Only image files are allowed!'), false);\n  }  \n\n  destination (\n    req: Request, \n    file: Express.Multer.File, \n    callback: (error: Error, destination: string) => void\n  ){\n    const destination = path.join(__dirname, 'static', 'products', `${req?.body?.title}`);\n    const imagesPath = path.join(__dirname, 'static', 'products', `${req?.body?.title}`, file.fieldname);\n    if (!existsSync(destination)) {\n        mkdirSync(destination, { recursive: true });\n    }\n    if (!existsSync(imagesPath)) {\n        mkdirSync(imagesPath, { recursive: true });\n    }\n    callback(null, imagesPath);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            commanderStart   (src/.../comander.ts)\n                        \n                        \n                            Match   (src/.../match.decorator.ts)\n                        \n                        \n                            replStart   (src/.../repl.ts)\n                        \n                        \n                            startServer   (src/.../main.ts)\n                        \n                        \n                            ValidateNested   (src/.../nested.validation.decorator.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/comander.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        commanderStart\n                        \n                    \n                \n            \n            \n                \ncommanderStart()\n                \n            \n\n\n\n\n        \n    \n    src/common/decorators/match.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        Match\n                        \n                    \n                \n            \n            \n                \nMatch(property: string, validationOptions?: ValidationOptions)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    property\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    validationOptions\n                                    \n                                            ValidationOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    src/repl.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        replStart\n                        \n                    \n                \n            \n            \n                \nreplStart()\n                \n            \n\n\n\n\n        \n    \n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        startServer\n                        \n                    \n                \n            \n            \n                \nstartServer()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    src/common/decorators/nested.validation.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ValidateNested\n                        \n                    \n                \n            \n            \n                \nValidateNested(schema, validationOptions?: ValidationOptions)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    schema\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    validationOptions\n                                    \n                                            ValidationOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n  A progressive Node.js framework for building efficient and scalable server-side applications.\n    \n\n\n\n\n\n\n\n\n  \n    \n  \n\n  \n\nDescription\nNest framework TypeScript starter repository.\nInstallation\n$ npm installRunning the app\n# development\n$ npm run start\n\n# watch mode\n$ npm run start:dev\n\n# production mode\n$ npm run start:prodTest\n# unit tests\n$ npm run test\n\n# e2e tests\n$ npm run test:e2e\n\n# test coverage\n$ npm run test:covSupport\nNest is an MIT-licensed open source project. It can grow thanks to the sponsors and support by the amazing backers. If you'd like to join them, please read more here.\nStay in touch\n\nAuthor - Kamil Myśliwiec\nWebsite - https://nestjs.com\nTwitter - @nestframework\n\nLicense\nNest is MIT licensed.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AdminModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CartModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CategoriesModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CoreModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        MailModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        OrdersModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        OwnerModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ProductModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ReviewsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        RolesModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TelegramModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UsersModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AdminModule\n\n\n\ncluster_AdminModule_exports\n\n\n\ncluster_AdminModule_providers\n\n\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_exports\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_CartModule\n\n\n\ncluster_CartModule_providers\n\n\n\ncluster_CategoriesModule\n\n\n\ncluster_CategoriesModule_providers\n\n\n\ncluster_CoreModule\n\n\n\ncluster_CoreModule_providers\n\n\n\ncluster_MailModule\n\n\n\ncluster_MailModule_exports\n\n\n\ncluster_OrdersModule\n\n\n\ncluster_OrdersModule_providers\n\n\n\ncluster_OwnerModule\n\n\n\ncluster_OwnerModule_imports\n\n\n\ncluster_OwnerModule_exports\n\n\n\ncluster_ProductModule\n\n\n\ncluster_ProductModule_providers\n\n\n\ncluster_ReviewsModule\n\n\n\ncluster_ReviewsModule_providers\n\n\n\ncluster_RolesModule\n\n\n\ncluster_RolesModule_exports\n\n\n\ncluster_RolesModule_providers\n\n\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_exports\n\n\n\n\nAdminJwtRefreshService \n\nAdminJwtRefreshService \n\n\n\nAdminService \n\nAdminService \n\n\n\nAdminModule\n\nAdminModule\n\nAdminJwtRefreshService  -->\n\nAdminModule->AdminJwtRefreshService \n\n\n\nAdminService  -->\n\nAdminModule->AdminService \n\n\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAdminModule->AppModule\n\n\n\n\n\nAdminJwtRefreshService\n\nAdminJwtRefreshService\n\nAdminModule -->\n\nAdminJwtRefreshService->AdminModule\n\n\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nAdminJwtRefreshService->AuthModule\n\n\n\n\n\nAdminService\n\nAdminService\n\nAdminModule -->\n\nAdminService->AdminModule\n\n\n\nAdminModule -->\n\nAdminService->AdminModule\n\n\n\n\n\nMailModule\n\nMailModule\n\nMailModule -->\n\nAdminService->MailModule\n\n\n\n\n\nOwnerModule\n\nOwnerModule\n\nOwnerModule -->\n\nAdminService->OwnerModule\n\n\n\n\n\nMailService\n\nMailService\n\nAdminModule -->\n\nMailService->AdminModule\n\n\n\nAuthModule -->\n\nMailService->AuthModule\n\n\n\nMailModule -->\n\nMailService->MailModule\n\n\n\nOwnerModule -->\n\nMailService->OwnerModule\n\n\n\n\n\nOwnerService\n\nOwnerService\n\nAdminModule -->\n\nOwnerService->AdminModule\n\n\n\nMailModule -->\n\nOwnerService->MailModule\n\n\n\nOwnerModule -->\n\nOwnerService->OwnerModule\n\n\n\n\n\nTasksService\n\nTasksService\n\nAdminModule -->\n\nTasksService->AdminModule\n\n\n\nAuthModule -->\n\nTasksService->AuthModule\n\n\n\n\n\nCoreModule\n\nCoreModule\n\nCoreModule -->\n\nTasksService->CoreModule\n\n\n\nOwnerModule -->\n\nTasksService->OwnerModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nUsersModule -->\n\nTasksService->UsersModule\n\n\n\n\n\nRolesModule\n\nRolesModule\n\nRolesModule -->\n\nTasksService->RolesModule\n\n\n\n\n\nUsersService\n\nUsersService\n\nAdminModule -->\n\nUsersService->AdminModule\n\n\n\nMailModule -->\n\nUsersService->MailModule\n\n\n\nOwnerModule -->\n\nUsersService->OwnerModule\n\n\n\nUsersModule -->\n\nUsersService->UsersModule\n\n\n\nRolesModule -->\n\nUsersService->RolesModule\n\n\n\nAdminJwtRefreshService  -->\n\nAuthModule->AdminJwtRefreshService \n\n\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nAuthService \n\nAuthService \n\nAuthService  -->\n\nAuthModule->AuthService \n\n\n\n\n\nOwnerJwtRefreshService \n\nOwnerJwtRefreshService \n\nOwnerJwtRefreshService  -->\n\nAuthModule->OwnerJwtRefreshService \n\n\n\n\n\nCartModule\n\nCartModule\n\nAppModule -->\n\nCartModule->AppModule\n\n\n\n\n\nCategoriesModule\n\nCategoriesModule\n\nAppModule -->\n\nCategoriesModule->AppModule\n\n\n\nAppModule -->\n\nCoreModule->AppModule\n\n\n\nAppModule -->\n\nMailModule->AppModule\n\n\n\n\n\nMailService \n\nMailService \n\nMailService  -->\n\nMailModule->MailService \n\n\n\n\n\nOrdersModule\n\nOrdersModule\n\nAppModule -->\n\nOrdersModule->AppModule\n\n\n\nAppModule -->\n\nOwnerModule->AppModule\n\n\n\nOwnerJwtRefreshService  -->\n\nOwnerModule->OwnerJwtRefreshService \n\n\n\n\n\nOwnerService \n\nOwnerService \n\nOwnerService  -->\n\nOwnerModule->OwnerService \n\n\n\n\n\nProductModule\n\nProductModule\n\nAppModule -->\n\nProductModule->AppModule\n\n\n\n\n\nReviewsModule\n\nReviewsModule\n\nAppModule -->\n\nReviewsModule->AppModule\n\n\n\n\n\nTelegramModule\n\nTelegramModule\n\nAppModule -->\n\nTelegramModule->AppModule\n\n\n\nAppModule -->\n\nUsersModule->AppModule\n\n\n\n\n\nUserJwtRefreshTokenService \n\nUserJwtRefreshTokenService \n\nUserJwtRefreshTokenService  -->\n\nUsersModule->UserJwtRefreshTokenService \n\n\n\n\n\nUsersService \n\nUsersService \n\nUsersService  -->\n\nUsersModule->UsersService \n\n\n\n\n\nAppClusterService\n\nAppClusterService\n\nCoreModule -->\n\nAppClusterService->CoreModule\n\n\n\nAppModule -->\n\nAppClusterService->AppModule\n\n\n\n\n\nAppListener\n\nAppListener\n\nAuthModule -->\n\nAppListener->AuthModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\nUsersModule -->\n\nAuthService->UsersModule\n\n\n\nRolesModule -->\n\nAuthService->RolesModule\n\n\n\n\n\nOwnerJwtRefreshService\n\nOwnerJwtRefreshService\n\nAuthModule -->\n\nOwnerJwtRefreshService->AuthModule\n\n\n\nOwnerModule -->\n\nOwnerJwtRefreshService->OwnerModule\n\n\n\n\n\nCardService\n\nCardService\n\nCartModule -->\n\nCardService->CartModule\n\n\n\n\n\nCategoriesService\n\nCategoriesService\n\nCategoriesModule -->\n\nCategoriesService->CategoriesModule\n\n\n\nProductModule -->\n\nCategoriesService->ProductModule\n\n\n\nReviewsModule -->\n\nCategoriesService->ReviewsModule\n\n\n\n\n\nFilesService\n\nFilesService\n\nCoreModule -->\n\nFilesService->CoreModule\n\n\n\nProductModule -->\n\nFilesService->ProductModule\n\n\n\n\n\nOrdersService\n\nOrdersService\n\nOrdersModule -->\n\nOrdersService->OrdersModule\n\n\n\nOwnerModule -->\n\nRolesModule->OwnerModule\n\n\n\n\n\nRolesService \n\nRolesService \n\nRolesService  -->\n\nRolesModule->RolesService \n\n\n\n\n\nProductService\n\nProductService\n\nProductModule -->\n\nProductService->ProductModule\n\n\n\nReviewsModule -->\n\nProductService->ReviewsModule\n\n\n\n\n\nReviewsService\n\nReviewsService\n\nReviewsModule -->\n\nReviewsService->ReviewsModule\n\n\n\n\n\nRolesService\n\nRolesService\n\nRolesModule -->\n\nRolesService->RolesModule\n\n\n\n\n\nUserJwtRefreshTokenService\n\nUserJwtRefreshTokenService\n\nUsersModule -->\n\nUserJwtRefreshTokenService->UsersModule\n\n\n\nRolesModule -->\n\nUserJwtRefreshTokenService->RolesModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        14 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    10 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    34 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    57 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    10 Guards\n                \n            \n        \n        \n            \n                \n                    \n                    30 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 1.1.1\n        \n            Description : kaze_shop\n        \n            License : UNLICENSED\n        \n            Author : mmmihaeel\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            CallbackFunction   (src/.../cluster.service.ts)\n                        \n                        \n                            TParseFormDataJsonOptions   (src/.../formdata.pipe.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/core/services/cluster.service.ts\n    \n    \n        \n            \n                \n                    \n                    CallbackFunction\n                \n            \n            \n                \n                            function\n\n                \n            \n        \n    \n    src/common/pipes/formdata.pipe.ts\n    \n    \n        \n            \n                \n                    \n                    TParseFormDataJsonOptions\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
