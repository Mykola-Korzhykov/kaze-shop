import { Model } from 'sequelize-typescript';
import { Role } from '../../roles/models/roles.model';
import { OwnerCreationAttrbs } from '../../core/interfaces/owner.interfaces';
import { Product } from '../../product/models/product.model';
import { OwnerRefreshToken } from './owner.refresh.token.model';
export declare class Owner extends Model<Owner, OwnerCreationAttrbs> {
    id: number;
    email: string;
    private name;
    private surname;
    phoneNumber: string;
    resetToken: string;
    private resetTokenExpiration;
    private password;
    private isActivated;
    activationLink: string;
    private confirmCode;
    private ownerAgent;
    private activationCode;
    private products;
    roles: Role[];
    ownerRefreshTokens: OwnerRefreshToken[];
    getName(): string;
    setName(name: string): string;
    getSurname(): string;
    setSurname(surname: string): string;
    getPassword(): string;
    setNewPasssword(password: string): string;
    getEmail(): string;
    getPhoneNumber(): string;
    getIsActivated(): boolean;
    setIsActivated(isActivated: boolean): boolean;
    getConfirmCode(): number;
    setConfirmCode(confirnCode: number): number;
    getResetToken(): string;
    setResetToken(resetToken: string): string;
    getResetTokenExpiration(): number;
    setResetTokenExpiration(resetTokenExpiration: number): number;
    getOwnerAgent(): string;
    setOwnerAgent(ownerAgent: string): string;
    getActivationCode(): number;
    setActivationCode(activationCode: number): number;
    getProducts(): Product[];
    getOwnerRefreshTokens(): OwnerRefreshToken[];
    addProduct(product: Product): Product[];
}
