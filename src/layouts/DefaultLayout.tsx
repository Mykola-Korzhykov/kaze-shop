import React, { FC, useState, useRef, useEffect } from 'react';
import { Russo_One } from '@next/font/google';
import Footer from '../components/Footer/Footer';
import Header from '../components/Header/Header';
import Head from 'next/head';
import { setHeaderIsSticky } from '@/redux/slices/admin';
import { useAppDispatch } from '@/redux/hooks';
import { useSelector } from 'react-redux';
import { RootState } from '@/redux/store';
import { useRouter } from 'next/router';
const RussoOne = Russo_One({
	weight: '400',
	subsets: ['latin', 'cyrillic'],
});
const DefaultLayout: FC<{
	children: React.ReactNode;
	showFooter?: boolean;
}> = ({ children, showFooter }) => {
	// const [isSticky, setIsSticky] = useState<boolean>(false);
	const isSticky = useSelector(
		(state: RootState) => state.admin.headerIsSticky
	);
	const router = useRouter();
	const [headerHeight, setHeaderHeight] = useState<number | undefined>(0);
	const dispatch = useAppDispatch();

	const headerRef = useRef<HTMLElement | null>(null);

	useEffect(() => {
		window.addEventListener('scroll', () => {
			setHeaderHeight(headerRef.current?.offsetHeight);
			// && router.asPath === '/500'
			if (window.scrollY > 1 && router.asPath !== '/') {
				// setIsSticky(true);
				dispatch(setHeaderIsSticky(true));
				// dispatch(setHeaderIsSticky(true));
			} else {
				// setIsSticky(false);
				dispatch(setHeaderIsSticky(true));
			}
		});
	}, []);

	return (
		<>
			<Head>
				<title>Kaze shop</title>
				<meta name="description" content="Generated by create next app" />
				<meta name="viewport" content="width=device-width, initial-scale=1" />
				<link rel="icon" href="/favicon.ico" />
				<link rel="preconnect" href="https://fonts.googleapis.com" />
				<link rel="preconnect" href="https://fonts.gstatic.com" />
				{/* above links gives build error. Now they are in _document.tsx */}
				{/* <link
					href='https://fonts.googleapis.com/css2?family=Russo+One&display=swap'
					rel='stylesheet'
				/>
				<link
					href='https://fonts.googleapis.com/css2?family=Georama:wght@300;400&display=swap'
					rel='stylesheet'
				></link> */}
			</Head>

			<div className="wrapper">
				<Header isSticky={isSticky} headerRef={headerRef} />
				{children}
				{showFooter && <Footer />}
			</div>
		</>
	);
};

export default DefaultLayout;
