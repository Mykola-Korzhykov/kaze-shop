version: '3.0'

services:
  server:
    container_name: server
    image: node:19.4.0-alpine
    build:
      context: .
      dockerfile: Dockerfile
    command: npm run start:prodpack
    env_file:
     - .production.env
    ports:
      - 7457:7457
      - 9229:9229
    depends_on:
      - redis
      - postgres
    volumes:
      - .:/app
      - /app/node_modules
    restart: unless-stopped
    hostname: server
  redis:
    container_name: redis
    image: redis:latest
    ports:
      - 6379:6379
    restart: unless-stopped
    env_file:
     - .production.env
    hostname: redis
  postgres:
    container_name: postgres
    image: postgres:latest
    env_file:
     - .production.env
    environment:
      PG_DATA: /var/lib/postgresql/data
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: Kazi.shop
    ports:
      - 5432:5432
    volumes:
      - pgdata:/var/lib/postgresql/data
    restart: always
    hostname: postgres
    network_mode: bridge

volumes:
  pgdata:
